

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Apr 10 19:32:31 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F27Q83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,space=0,delta=1
     6                           	psect	idataBANK5,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,space=0,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,space=0,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=2
    54                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,space=0,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,space=0,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,space=0,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,space=0,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,space=0,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,space=0,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,space=0,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,space=0,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,space=0,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,space=0,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,space=0,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,space=0,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,space=0,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,space=0,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,space=0,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,space=0,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,space=0,delta=1,group=1
   149                           	psect	text130,global,reloc=2,class=CODE,space=0,delta=1,group=1
   150                           	psect	text131,global,reloc=2,class=CODE,space=0,delta=1,group=1
   151                           	psect	text132,global,reloc=2,class=CODE,space=0,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,space=0,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,space=0,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,space=0,delta=1
   155                           	psect	text136,global,reloc=2,class=CODE,space=0,delta=1
   156                           	psect	text137,global,reloc=2,class=CODE,space=0,delta=1
   157                           	psect	text138,global,reloc=2,class=CODE,space=0,delta=1
   158                           	psect	text139,global,reloc=2,class=CODE,space=0,delta=1
   159                           	psect	text140,global,reloc=2,class=CODE,space=0,delta=1
   160                           	psect	text141,global,reloc=2,class=CODE,space=0,delta=1
   161                           	psect	text142,global,reloc=2,class=CODE,space=0,delta=1
   162                           	psect	text143,global,reloc=2,class=CODE,space=0,delta=1
   163                           	psect	text144,global,reloc=2,class=CODE,space=0,delta=1
   164                           	psect	text145,global,reloc=2,class=CODE,space=0,delta=1
   165                           	psect	text146,global,reloc=2,class=CODE,space=0,delta=1
   166                           	psect	text147,global,reloc=2,class=CODE,space=0,delta=1
   167                           	psect	text148,global,reloc=2,class=CODE,space=0,delta=1
   168                           	psect	text149,global,reloc=2,class=CODE,space=0,delta=1
   169                           	psect	text150,global,reloc=2,class=CODE,space=0,delta=1
   170                           	psect	text151,global,reloc=2,class=CODE,space=0,delta=1
   171                           	psect	text152,global,reloc=2,class=CODE,space=0,delta=1
   172                           	psect	text153,global,reloc=2,class=CODE,space=0,delta=1
   173                           	psect	text154,global,reloc=2,class=CODE,space=0,delta=1
   174                           	psect	text155,global,reloc=2,class=CODE,space=0,delta=1
   175                           	psect	text156,global,reloc=2,class=CODE,space=0,delta=1
   176                           	psect	text157,global,reloc=2,class=CODE,space=0,delta=1
   177                           	psect	text158,global,reloc=2,class=CODE,space=0,delta=1
   178                           	psect	text159,global,reloc=2,class=CODE,space=0,delta=1
   179                           	psect	text160,global,reloc=2,class=CODE,space=0,delta=1
   180                           	psect	text161,global,reloc=2,class=CODE,space=0,delta=1
   181                           	psect	text162,global,reloc=2,class=CODE,space=0,delta=1
   182                           	psect	text163,global,reloc=4,class=CODE,space=0,delta=1
   183                           	psect	text164,global,reloc=4,class=CODE,space=0,delta=1
   184                           	psect	text165,global,reloc=4,class=CODE,space=0,delta=1
   185                           	psect	ivt0x900,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   186                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   187                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   188                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   189   000000                     
   190                           ; Generated 24/03/2025 GMT
   191                           ; 
   192                           ; Copyright © 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
   193                           ; All rights reserved.
   194                           ; 
   195                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   196                           ; 
   197                           ; Redistribution and use in source and binary forms, with or without modification, are
   198                           ; permitted provided that the following conditions are met:
   199                           ; 
   200                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   201                           ;        conditions and the following disclaimer.
   202                           ; 
   203                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   204                           ;        of conditions and the following disclaimer in the documentation and/or other
   205                           ;        materials provided with the distribution. Publication is not required when
   206                           ;        this file is used in an embedded application.
   207                           ; 
   208                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   209                           ;        software without specific prior written permission.
   210                           ; 
   211                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   212                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   213                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   214                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   215                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   216                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   217                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   218                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   219                           ; 
   220                           ; 
   221                           ; Code-generator required, PIC18F27Q83 Definitions
   222                           ; 
   223                           ; SFR Addresses
   224   0004E0                     bsr             equ	1248
   225   0004E9                     fsr0            equ	1257
   226   0004EA                     fsr0h           equ	1258
   227   0004E9                     fsr0l           equ	1257
   228   0004E1                     fsr1            equ	1249
   229   0004E2                     fsr1h           equ	1250
   230   0004E1                     fsr1l           equ	1249
   231   0004D9                     fsr2            equ	1241
   232   0004DA                     fsr2h           equ	1242
   233   0004D9                     fsr2l           equ	1241
   234   0004EF                     indf0           equ	1263
   235   0004E7                     indf1           equ	1255
   236   0004DF                     indf2           equ	1247
   237   0004D6                     intcon          equ	1238
   238   000041                     nvmcon          equ	65
   239   0004F9                     pcl             equ	1273
   240   0004FA                     pclath          equ	1274
   241   0004FB                     pclatu          equ	1275
   242   0004EB                     plusw0          equ	1259
   243   0004E3                     plusw1          equ	1251
   244   0004DB                     plusw2          equ	1243
   245   0004ED                     postdec0        equ	1261
   246   0004E5                     postdec1        equ	1253
   247   0004DD                     postdec2        equ	1245
   248   0004EE                     postinc0        equ	1262
   249   0004E6                     postinc1        equ	1254
   250   0004DE                     postinc2        equ	1246
   251   0004EC                     preinc0         equ	1260
   252   0004E4                     preinc1         equ	1252
   253   0004DC                     preinc2         equ	1244
   254   0004F3                     prod            equ	1267
   255   0004F4                     prodh           equ	1268
   256   0004F3                     prodl           equ	1267
   257   0004D8                     status          equ	1240
   258   0004F5                     tablat          equ	1269
   259   0004F6                     tblptr          equ	1270
   260   0004F7                     tblptrh         equ	1271
   261   0004F6                     tblptrl         equ	1270
   262   0004F8                     tblptru         equ	1272
   263   0004FD                     tosl            equ	1277
   264   0004E8                     wreg            equ	1256
   265   000038                     BOOTREG         equ	56	;# 
   266   000039                     CLKRCON         equ	57	;# 
   267   00003A                     CLKRCLK         equ	58	;# 
   268   000040                     NVMCON0         equ	64	;# 
   269   000041                     NVMCON1         equ	65	;# 
   270   000042                     NVMLOCK         equ	66	;# 
   271   000043                     NVMADR          equ	67	;# 
   272   000043                     NVMADRL         equ	67	;# 
   273   000044                     NVMADRH         equ	68	;# 
   274   000045                     NVMADRU         equ	69	;# 
   275   000046                     NVMDAT          equ	70	;# 
   276   000046                     NVMDATL         equ	70	;# 
   277   000047                     NVMDATH         equ	71	;# 
   278   000048                     VREGCON         equ	72	;# 
   279   000049                     BORCON          equ	73	;# 
   280   00004A                     HLVDCON0        equ	74	;# 
   281   00004B                     HLVDCON1        equ	75	;# 
   282   00004C                     ZCDCON          equ	76	;# 
   283   000060                     PMD0            equ	96	;# 
   284   000061                     PMD1            equ	97	;# 
   285   000062                     PMD2            equ	98	;# 
   286   000063                     PMD3            equ	99	;# 
   287   000064                     PMD4            equ	100	;# 
   288   000065                     PMD5            equ	101	;# 
   289   000066                     PMD6            equ	102	;# 
   290   000067                     PMD7            equ	103	;# 
   291   000068                     PMD8            equ	104	;# 
   292   00006A                     MD1CON0         equ	106	;# 
   293   00006B                     MD1CON1         equ	107	;# 
   294   00006C                     MD1SRC          equ	108	;# 
   295   00006D                     MD1CARL         equ	109	;# 
   296   00006E                     MD1CARH         equ	110	;# 
   297   00006F                     CMOUT           equ	111	;# 
   298   000070                     CM1CON0         equ	112	;# 
   299   000071                     CM1CON1         equ	113	;# 
   300   000072                     CM1NCH          equ	114	;# 
   301   000073                     CM1PCH          equ	115	;# 
   302   000074                     CM2CON0         equ	116	;# 
   303   000075                     CM2CON1         equ	117	;# 
   304   000076                     CM2NCH          equ	118	;# 
   305   000077                     CM2PCH          equ	119	;# 
   306   000078                     WDTCON0         equ	120	;# 
   307   000079                     WDTCON1         equ	121	;# 
   308   00007A                     WDTPSL          equ	122	;# 
   309   00007B                     WDTPSH          equ	123	;# 
   310   00007C                     WDTTMR          equ	124	;# 
   311   00007D                     DAC1DAT         equ	125	;# 
   312   00007D                     DAC1DATL        equ	125	;# 
   313   00007F                     DAC1CON         equ	127	;# 
   314   000080                     SPI1RXB         equ	128	;# 
   315   000081                     SPI1TXB         equ	129	;# 
   316   000082                     SPI1TCNT        equ	130	;# 
   317   000082                     SPI1TCNTL       equ	130	;# 
   318   000083                     SPI1TCNTH       equ	131	;# 
   319   000084                     SPI1CON0        equ	132	;# 
   320   000085                     SPI1CON1        equ	133	;# 
   321   000086                     SPI1CON2        equ	134	;# 
   322   000087                     SPI1STATUS      equ	135	;# 
   323   000088                     SPI1TWIDTH      equ	136	;# 
   324   000089                     SPI1BAUD        equ	137	;# 
   325   00008A                     SPI1INTF        equ	138	;# 
   326   00008B                     SPI1INTE        equ	139	;# 
   327   00008C                     SPI1CLK         equ	140	;# 
   328   00008D                     SPI2RXB         equ	141	;# 
   329   00008E                     SPI2TXB         equ	142	;# 
   330   00008F                     SPI2TCNT        equ	143	;# 
   331   00008F                     SPI2TCNTL       equ	143	;# 
   332   000090                     SPI2TCNTH       equ	144	;# 
   333   000091                     SPI2CON0        equ	145	;# 
   334   000092                     SPI2CON1        equ	146	;# 
   335   000093                     SPI2CON2        equ	147	;# 
   336   000094                     SPI2STATUS      equ	148	;# 
   337   000095                     SPI2TWIDTH      equ	149	;# 
   338   000096                     SPI2BAUD        equ	150	;# 
   339   000097                     SPI2INTF        equ	151	;# 
   340   000098                     SPI2INTE        equ	152	;# 
   341   000099                     SPI2CLK         equ	153	;# 
   342   0000AC                     ACTCON          equ	172	;# 
   343   0000AD                     OSCCON1         equ	173	;# 
   344   0000AE                     OSCCON2         equ	174	;# 
   345   0000AF                     OSCCON3         equ	175	;# 
   346   0000B0                     OSCTUNE         equ	176	;# 
   347   0000B1                     OSCFRQ          equ	177	;# 
   348   0000B1                     OSCFREQ         equ	177	;# 
   349   0000B2                     OSCSTAT         equ	178	;# 
   350   0000B2                     OSCSTAT1        equ	178	;# 
   351   0000B3                     OSCEN           equ	179	;# 
   352   0000B4                     PRLOCK          equ	180	;# 
   353   0000B5                     SCANPR          equ	181	;# 
   354   0000B6                     DMA1PR          equ	182	;# 
   355   0000B7                     DMA2PR          equ	183	;# 
   356   0000B8                     DMA3PR          equ	184	;# 
   357   0000B9                     DMA4PR          equ	185	;# 
   358   0000BA                     DMA5PR          equ	186	;# 
   359   0000BB                     DMA6PR          equ	187	;# 
   360   0000BC                     DMA7PR          equ	188	;# 
   361   0000BD                     DMA8PR          equ	189	;# 
   362   0000BE                     MAINPR          equ	190	;# 
   363   0000BF                     ISRPR           equ	191	;# 
   364   0000D4                     CLCDATA         equ	212	;# 
   365   0000D5                     CLCSELECT       equ	213	;# 
   366   0000D6                     CLCnCON         equ	214	;# 
   367   0000D7                     CLCnPOL         equ	215	;# 
   368   0000D8                     CLCnSEL0        equ	216	;# 
   369   0000D9                     CLCnSEL1        equ	217	;# 
   370   0000DA                     CLCnSEL2        equ	218	;# 
   371   0000DB                     CLCnSEL3        equ	219	;# 
   372   0000DC                     CLCnGLS0        equ	220	;# 
   373   0000DD                     CLCnGLS1        equ	221	;# 
   374   0000DE                     CLCnGLS2        equ	222	;# 
   375   0000DF                     CLCnGLS3        equ	223	;# 
   376   0000E8                     DMASELECT       equ	232	;# 
   377   0000E9                     DMAnBUF         equ	233	;# 
   378   0000EA                     DMAnDCNT        equ	234	;# 
   379   0000EA                     DMAnDCNTL       equ	234	;# 
   380   0000EB                     DMAnDCNTH       equ	235	;# 
   381   0000EC                     DMAnDPTR        equ	236	;# 
   382   0000EC                     DMAnDPTRL       equ	236	;# 
   383   0000ED                     DMAnDPTRH       equ	237	;# 
   384   0000EE                     DMAnDSZ         equ	238	;# 
   385   0000EE                     DMAnDSZL        equ	238	;# 
   386   0000EF                     DMAnDSZH        equ	239	;# 
   387   0000F0                     DMAnDSA         equ	240	;# 
   388   0000F0                     DMAnDSAL        equ	240	;# 
   389   0000F1                     DMAnDSAH        equ	241	;# 
   390   0000F2                     DMAnSCNT        equ	242	;# 
   391   0000F2                     DMAnSCNTL       equ	242	;# 
   392   0000F3                     DMAnSCNTH       equ	243	;# 
   393   0000F4                     DMAnSPTR        equ	244	;# 
   394   0000F4                     DMAnSPTRL       equ	244	;# 
   395   0000F5                     DMAnSPTRH       equ	245	;# 
   396   0000F6                     DMAnSPTRU       equ	246	;# 
   397   0000F7                     DMAnSSZ         equ	247	;# 
   398   0000F7                     DMAnSSZL        equ	247	;# 
   399   0000F8                     DMAnSSZH        equ	248	;# 
   400   0000F9                     DMAnSSA         equ	249	;# 
   401   0000F9                     DMAnSSAL        equ	249	;# 
   402   0000FA                     DMAnSSAH        equ	250	;# 
   403   0000FB                     DMAnSSAU        equ	251	;# 
   404   0000FC                     DMAnCON0        equ	252	;# 
   405   0000FD                     DMAnCON1        equ	253	;# 
   406   0000FE                     DMAnAIRQ        equ	254	;# 
   407   0000FF                     DMAnSIRQ        equ	255	;# 
   408   000100                     C1CONL          equ	256	;# 
   409   000101                     C1CONH          equ	257	;# 
   410   000102                     C1CONU          equ	258	;# 
   411   000103                     C1CONT          equ	259	;# 
   412   000104                     C1NBTCFGL       equ	260	;# 
   413   000105                     C1NBTCFGH       equ	261	;# 
   414   000106                     C1NBTCFGU       equ	262	;# 
   415   000107                     C1NBTCFGT       equ	263	;# 
   416   000108                     C1DBTCFGL       equ	264	;# 
   417   000109                     C1DBTCFGH       equ	265	;# 
   418   00010A                     C1DBTCFGU       equ	266	;# 
   419   00010B                     C1DBTCFGT       equ	267	;# 
   420   00010C                     C1TDCL          equ	268	;# 
   421   00010D                     C1TDCH          equ	269	;# 
   422   00010E                     C1TDCU          equ	270	;# 
   423   000110                     C1TBC           equ	272	;# 
   424   000110                     C1TBCL          equ	272	;# 
   425   000111                     C1TBCH          equ	273	;# 
   426   000112                     C1TBCU          equ	274	;# 
   427   000113                     C1TBCT          equ	275	;# 
   428   000114                     C1TSCONL        equ	276	;# 
   429   000115                     C1TSCONH        equ	277	;# 
   430   000116                     C1TSCONU        equ	278	;# 
   431   000117                     C1TSCONT        equ	279	;# 
   432   000118                     C1VECL          equ	280	;# 
   433   000119                     C1VECH          equ	281	;# 
   434   00011A                     C1VECU          equ	282	;# 
   435   00011B                     C1VECT          equ	283	;# 
   436   00011C                     C1INTL          equ	284	;# 
   437   00011D                     C1INTH          equ	285	;# 
   438   00011E                     C1INTU          equ	286	;# 
   439   00011F                     C1INTT          equ	287	;# 
   440   000120                     C1RXIF          equ	288	;# 
   441   000120                     C1RXIFL         equ	288	;# 
   442   000121                     C1RXIFH         equ	289	;# 
   443   000122                     C1RXIFU         equ	290	;# 
   444   000123                     C1RXIFT         equ	291	;# 
   445   000124                     C1TXIF          equ	292	;# 
   446   000124                     C1TXIFL         equ	292	;# 
   447   000125                     C1TXIFH         equ	293	;# 
   448   000126                     C1TXIFU         equ	294	;# 
   449   000127                     C1TXIFT         equ	295	;# 
   450   000128                     C1RXOVIF        equ	296	;# 
   451   000128                     C1RXOVIFL       equ	296	;# 
   452   000129                     C1RXOVIFH       equ	297	;# 
   453   00012A                     C1RXOVIFU       equ	298	;# 
   454   00012B                     C1RXOVIFT       equ	299	;# 
   455   00012C                     C1TXATIF        equ	300	;# 
   456   00012C                     C1TXATIFL       equ	300	;# 
   457   00012D                     C1TXATIFH       equ	301	;# 
   458   00012E                     C1TXATIFU       equ	302	;# 
   459   00012F                     C1TXATIFT       equ	303	;# 
   460   000130                     C1TXREQ         equ	304	;# 
   461   000130                     C1TXREQL        equ	304	;# 
   462   000131                     C1TXREQH        equ	305	;# 
   463   000132                     C1TXREQU        equ	306	;# 
   464   000133                     C1TXREQT        equ	307	;# 
   465   000134                     C1TRECL         equ	308	;# 
   466   000135                     C1TRECH         equ	309	;# 
   467   000136                     C1TRECU         equ	310	;# 
   468   000137                     C1TRECT         equ	311	;# 
   469   000138                     C1BDIAG0L       equ	312	;# 
   470   000139                     C1BDIAG0H       equ	313	;# 
   471   00013C                     C1BDIAG1L       equ	316	;# 
   472   00013D                     C1BDIAG1H       equ	317	;# 
   473   00013E                     C1BDIAG1U       equ	318	;# 
   474   00013F                     C1BDIAG1T       equ	319	;# 
   475   000140                     C1TEFCONL       equ	320	;# 
   476   000141                     C1TEFCONH       equ	321	;# 
   477   000142                     C1TEFCONU       equ	322	;# 
   478   000143                     C1TEFCONT       equ	323	;# 
   479   000144                     C1TEFSTAL       equ	324	;# 
   480   000145                     C1TEFSTAH       equ	325	;# 
   481   000146                     C1TEFSTAU       equ	326	;# 
   482   000147                     C1TEFSTAT       equ	327	;# 
   483   000148                     C1TEFUA         equ	328	;# 
   484   000148                     C1TEFUAL        equ	328	;# 
   485   000149                     C1TEFUAH        equ	329	;# 
   486   00014A                     C1TEFUAU        equ	330	;# 
   487   00014B                     C1TEFUAT        equ	331	;# 
   488   00014C                     C1FIFOBA        equ	332	;# 
   489   00014C                     C1FIFOBAL       equ	332	;# 
   490   00014D                     C1FIFOBAH       equ	333	;# 
   491   00014E                     C1FIFOBAU       equ	334	;# 
   492   00014F                     C1FIFOBAT       equ	335	;# 
   493   000150                     C1TXQCONL       equ	336	;# 
   494   000151                     C1TXQCONH       equ	337	;# 
   495   000152                     C1TXQCONU       equ	338	;# 
   496   000153                     C1TXQCONT       equ	339	;# 
   497   000154                     C1TXQSTAL       equ	340	;# 
   498   000155                     C1TXQSTAH       equ	341	;# 
   499   000156                     C1TXQSTAU       equ	342	;# 
   500   000157                     C1TXQSTAT       equ	343	;# 
   501   000158                     C1TXQUA         equ	344	;# 
   502   000158                     C1TXQUAL        equ	344	;# 
   503   000159                     C1TXQUAH        equ	345	;# 
   504   00015A                     C1TXQUAU        equ	346	;# 
   505   00015B                     C1TXQUAT        equ	347	;# 
   506   00015C                     C1FIFOCON1      equ	348	;# 
   507   00015C                     C1FIFOCON1L     equ	348	;# 
   508   00015D                     C1FIFOCON1H     equ	349	;# 
   509   00015E                     C1FIFOCON1U     equ	350	;# 
   510   00015F                     C1FIFOCON1T     equ	351	;# 
   511   000160                     C1FIFOSTA1      equ	352	;# 
   512   000160                     C1FIFOSTA1L     equ	352	;# 
   513   000161                     C1FIFOSTA1H     equ	353	;# 
   514   000162                     C1FIFOSTA1U     equ	354	;# 
   515   000163                     C1FIFOSTA1T     equ	355	;# 
   516   000164                     C1FIFOUA1       equ	356	;# 
   517   000164                     C1FIFOUA1L      equ	356	;# 
   518   000165                     C1FIFOUA1H      equ	357	;# 
   519   000166                     C1FIFOUA1U      equ	358	;# 
   520   000167                     C1FIFOUA1T      equ	359	;# 
   521   000168                     C1FIFOCON2      equ	360	;# 
   522   000168                     C1FIFOCON2L     equ	360	;# 
   523   000169                     C1FIFOCON2H     equ	361	;# 
   524   00016A                     C1FIFOCON2U     equ	362	;# 
   525   00016B                     C1FIFOCON2T     equ	363	;# 
   526   00016C                     C1FIFOSTA2      equ	364	;# 
   527   00016C                     C1FIFOSTA2L     equ	364	;# 
   528   00016D                     C1FIFOSTA2H     equ	365	;# 
   529   00016E                     C1FIFOSTA2U     equ	366	;# 
   530   00016F                     C1FIFOSTA2T     equ	367	;# 
   531   000170                     C1FIFOUA2       equ	368	;# 
   532   000170                     C1FIFOUA2L      equ	368	;# 
   533   000171                     C1FIFOUA2H      equ	369	;# 
   534   000172                     C1FIFOUA2U      equ	370	;# 
   535   000173                     C1FIFOUA2T      equ	371	;# 
   536   000174                     C1FIFOCON3      equ	372	;# 
   537   000174                     C1FIFOCON3L     equ	372	;# 
   538   000175                     C1FIFOCON3H     equ	373	;# 
   539   000176                     C1FIFOCON3U     equ	374	;# 
   540   000177                     C1FIFOCON3T     equ	375	;# 
   541   000178                     C1FIFOSTA3      equ	376	;# 
   542   000178                     C1FIFOSTA3L     equ	376	;# 
   543   000179                     C1FIFOSTA3H     equ	377	;# 
   544   00017A                     C1FIFOSTA3U     equ	378	;# 
   545   00017B                     C1FIFOSTA3T     equ	379	;# 
   546   00017C                     C1FIFOUA3       equ	380	;# 
   547   00017C                     C1FIFOUA3L      equ	380	;# 
   548   00017D                     C1FIFOUA3H      equ	381	;# 
   549   00017E                     C1FIFOUA3U      equ	382	;# 
   550   00017F                     C1FIFOUA3T      equ	383	;# 
   551   000180                     C1FLTCON0L      equ	384	;# 
   552   000181                     C1FLTCON0H      equ	385	;# 
   553   000182                     C1FLTCON0U      equ	386	;# 
   554   000183                     C1FLTCON0T      equ	387	;# 
   555   000184                     C1FLTCON1L      equ	388	;# 
   556   000185                     C1FLTCON1H      equ	389	;# 
   557   000186                     C1FLTCON1U      equ	390	;# 
   558   000187                     C1FLTCON1T      equ	391	;# 
   559   000188                     C1FLTCON2L      equ	392	;# 
   560   000189                     C1FLTCON2H      equ	393	;# 
   561   00018A                     C1FLTCON2U      equ	394	;# 
   562   00018B                     C1FLTCON2T      equ	395	;# 
   563   00018C                     C1FLTOBJ0       equ	396	;# 
   564   00018C                     C1FLTOBJ0L      equ	396	;# 
   565   00018D                     C1FLTOBJ0H      equ	397	;# 
   566   00018E                     C1FLTOBJ0U      equ	398	;# 
   567   00018F                     C1FLTOBJ0T      equ	399	;# 
   568   000190                     C1MASK0         equ	400	;# 
   569   000190                     C1MASK0L        equ	400	;# 
   570   000191                     C1MASK0H        equ	401	;# 
   571   000192                     C1MASK0U        equ	402	;# 
   572   000193                     C1MASK0T        equ	403	;# 
   573   000194                     C1FLTOBJ1       equ	404	;# 
   574   000194                     C1FLTOBJ1L      equ	404	;# 
   575   000195                     C1FLTOBJ1H      equ	405	;# 
   576   000196                     C1FLTOBJ1U      equ	406	;# 
   577   000197                     C1FLTOBJ1T      equ	407	;# 
   578   000198                     C1MASK1         equ	408	;# 
   579   000198                     C1MASK1L        equ	408	;# 
   580   000199                     C1MASK1H        equ	409	;# 
   581   00019A                     C1MASK1U        equ	410	;# 
   582   00019B                     C1MASK1T        equ	411	;# 
   583   00019C                     C1FLTOBJ2       equ	412	;# 
   584   00019C                     C1FLTOBJ2L      equ	412	;# 
   585   00019D                     C1FLTOBJ2H      equ	413	;# 
   586   00019E                     C1FLTOBJ2U      equ	414	;# 
   587   00019F                     C1FLTOBJ2T      equ	415	;# 
   588   0001A0                     C1MASK2         equ	416	;# 
   589   0001A0                     C1MASK2L        equ	416	;# 
   590   0001A1                     C1MASK2H        equ	417	;# 
   591   0001A2                     C1MASK2U        equ	418	;# 
   592   0001A3                     C1MASK2T        equ	419	;# 
   593   0001A4                     C1FLTOBJ3       equ	420	;# 
   594   0001A4                     C1FLTOBJ3L      equ	420	;# 
   595   0001A5                     C1FLTOBJ3H      equ	421	;# 
   596   0001A6                     C1FLTOBJ3U      equ	422	;# 
   597   0001A7                     C1FLTOBJ3T      equ	423	;# 
   598   0001A8                     C1MASK3         equ	424	;# 
   599   0001A8                     C1MASK3L        equ	424	;# 
   600   0001A9                     C1MASK3H        equ	425	;# 
   601   0001AA                     C1MASK3U        equ	426	;# 
   602   0001AB                     C1MASK3T        equ	427	;# 
   603   0001AC                     C1FLTOBJ4       equ	428	;# 
   604   0001AC                     C1FLTOBJ4L      equ	428	;# 
   605   0001AD                     C1FLTOBJ4H      equ	429	;# 
   606   0001AE                     C1FLTOBJ4U      equ	430	;# 
   607   0001AF                     C1FLTOBJ4T      equ	431	;# 
   608   0001B0                     C1MASK4         equ	432	;# 
   609   0001B0                     C1MASK4L        equ	432	;# 
   610   0001B1                     C1MASK4H        equ	433	;# 
   611   0001B2                     C1MASK4U        equ	434	;# 
   612   0001B3                     C1MASK4T        equ	435	;# 
   613   0001B4                     C1FLTOBJ5       equ	436	;# 
   614   0001B4                     C1FLTOBJ5L      equ	436	;# 
   615   0001B5                     C1FLTOBJ5H      equ	437	;# 
   616   0001B6                     C1FLTOBJ5U      equ	438	;# 
   617   0001B7                     C1FLTOBJ5T      equ	439	;# 
   618   0001B8                     C1MASK5         equ	440	;# 
   619   0001B8                     C1MASK5L        equ	440	;# 
   620   0001B9                     C1MASK5H        equ	441	;# 
   621   0001BA                     C1MASK5U        equ	442	;# 
   622   0001BB                     C1MASK5T        equ	443	;# 
   623   0001BC                     C1FLTOBJ6       equ	444	;# 
   624   0001BC                     C1FLTOBJ6L      equ	444	;# 
   625   0001BD                     C1FLTOBJ6H      equ	445	;# 
   626   0001BE                     C1FLTOBJ6U      equ	446	;# 
   627   0001BF                     C1FLTOBJ6T      equ	447	;# 
   628   0001C0                     C1MASK6         equ	448	;# 
   629   0001C0                     C1MASK6L        equ	448	;# 
   630   0001C1                     C1MASK6H        equ	449	;# 
   631   0001C2                     C1MASK6U        equ	450	;# 
   632   0001C3                     C1MASK6T        equ	451	;# 
   633   0001C4                     C1FLTOBJ7       equ	452	;# 
   634   0001C4                     C1FLTOBJ7L      equ	452	;# 
   635   0001C5                     C1FLTOBJ7H      equ	453	;# 
   636   0001C6                     C1FLTOBJ7U      equ	454	;# 
   637   0001C7                     C1FLTOBJ7T      equ	455	;# 
   638   0001C8                     C1MASK7         equ	456	;# 
   639   0001C8                     C1MASK7L        equ	456	;# 
   640   0001C9                     C1MASK7H        equ	457	;# 
   641   0001CA                     C1MASK7U        equ	458	;# 
   642   0001CB                     C1MASK7T        equ	459	;# 
   643   0001CC                     C1FLTOBJ8       equ	460	;# 
   644   0001CC                     C1FLTOBJ8L      equ	460	;# 
   645   0001CD                     C1FLTOBJ8H      equ	461	;# 
   646   0001CE                     C1FLTOBJ8U      equ	462	;# 
   647   0001CF                     C1FLTOBJ8T      equ	463	;# 
   648   0001D0                     C1MASK8         equ	464	;# 
   649   0001D0                     C1MASK8L        equ	464	;# 
   650   0001D1                     C1MASK8H        equ	465	;# 
   651   0001D2                     C1MASK8U        equ	466	;# 
   652   0001D3                     C1MASK8T        equ	467	;# 
   653   0001D4                     C1FLTOBJ9       equ	468	;# 
   654   0001D4                     C1FLTOBJ9L      equ	468	;# 
   655   0001D5                     C1FLTOBJ9H      equ	469	;# 
   656   0001D6                     C1FLTOBJ9U      equ	470	;# 
   657   0001D7                     C1FLTOBJ9T      equ	471	;# 
   658   0001D8                     C1MASK9         equ	472	;# 
   659   0001D8                     C1MASK9L        equ	472	;# 
   660   0001D9                     C1MASK9H        equ	473	;# 
   661   0001DA                     C1MASK9U        equ	474	;# 
   662   0001DB                     C1MASK9T        equ	475	;# 
   663   0001DC                     C1FLTOBJ10      equ	476	;# 
   664   0001DC                     C1FLTOBJ10L     equ	476	;# 
   665   0001DD                     C1FLTOBJ10H     equ	477	;# 
   666   0001DE                     C1FLTOBJ10U     equ	478	;# 
   667   0001DF                     C1FLTOBJ10T     equ	479	;# 
   668   0001E0                     C1MASK10        equ	480	;# 
   669   0001E0                     C1MASK10L       equ	480	;# 
   670   0001E1                     C1MASK10H       equ	481	;# 
   671   0001E2                     C1MASK10U       equ	482	;# 
   672   0001E3                     C1MASK10T       equ	483	;# 
   673   0001E4                     C1FLTOBJ11      equ	484	;# 
   674   0001E4                     C1FLTOBJ11L     equ	484	;# 
   675   0001E5                     C1FLTOBJ11H     equ	485	;# 
   676   0001E6                     C1FLTOBJ11U     equ	486	;# 
   677   0001E7                     C1FLTOBJ11T     equ	487	;# 
   678   0001E8                     C1MASK11        equ	488	;# 
   679   0001E8                     C1MASK11L       equ	488	;# 
   680   0001E9                     C1MASK11H       equ	489	;# 
   681   0001EA                     C1MASK11U       equ	490	;# 
   682   0001EB                     C1MASK11T       equ	491	;# 
   683   000200                     PPSLOCK         equ	512	;# 
   684   000201                     RA0PPS          equ	513	;# 
   685   000202                     RA1PPS          equ	514	;# 
   686   000203                     RA2PPS          equ	515	;# 
   687   000204                     RA3PPS          equ	516	;# 
   688   000205                     RA4PPS          equ	517	;# 
   689   000206                     RA5PPS          equ	518	;# 
   690   000207                     RA6PPS          equ	519	;# 
   691   000208                     RA7PPS          equ	520	;# 
   692   000209                     RB0PPS          equ	521	;# 
   693   00020A                     RB1PPS          equ	522	;# 
   694   00020B                     RB2PPS          equ	523	;# 
   695   00020C                     RB3PPS          equ	524	;# 
   696   00020D                     RB4PPS          equ	525	;# 
   697   00020E                     RB5PPS          equ	526	;# 
   698   00020F                     RB6PPS          equ	527	;# 
   699   000210                     RB7PPS          equ	528	;# 
   700   000211                     RC0PPS          equ	529	;# 
   701   000212                     RC1PPS          equ	530	;# 
   702   000213                     RC2PPS          equ	531	;# 
   703   000214                     RC3PPS          equ	532	;# 
   704   000215                     RC4PPS          equ	533	;# 
   705   000216                     RC5PPS          equ	534	;# 
   706   000217                     RC6PPS          equ	535	;# 
   707   000218                     RC7PPS          equ	536	;# 
   708   00023D                     CANRXPPS        equ	573	;# 
   709   00023E                     INT0PPS         equ	574	;# 
   710   00023F                     INT1PPS         equ	575	;# 
   711   000240                     INT2PPS         equ	576	;# 
   712   000241                     T0CKIPPS        equ	577	;# 
   713   000242                     T1CKIPPS        equ	578	;# 
   714   000243                     T1GPPS          equ	579	;# 
   715   000244                     T3CKIPPS        equ	580	;# 
   716   000245                     T3GPPS          equ	581	;# 
   717   000246                     T5CKIPPS        equ	582	;# 
   718   000247                     T5GPPS          equ	583	;# 
   719   000248                     T2INPPS         equ	584	;# 
   720   000249                     T4INPPS         equ	585	;# 
   721   00024A                     T6INPPS         equ	586	;# 
   722   00024B                     TUIN0PPS        equ	587	;# 
   723   00024C                     TUIN1PPS        equ	588	;# 
   724   00024F                     CCP1PPS         equ	591	;# 
   725   000250                     CCP2PPS         equ	592	;# 
   726   000251                     CCP3PPS         equ	593	;# 
   727   000253                     PWM1ERSPPS      equ	595	;# 
   728   000254                     PWM2ERSPPS      equ	596	;# 
   729   000255                     PWM3ERSPPS      equ	597	;# 
   730   000256                     PWM4ERSPPS      equ	598	;# 
   731   000257                     PWMIN0PPS       equ	599	;# 
   732   000258                     PWMIN1PPS       equ	600	;# 
   733   000259                     SMT1WINPPS      equ	601	;# 
   734   00025A                     SMT1SIGPPS      equ	602	;# 
   735   00025B                     CWG1PPS         equ	603	;# 
   736   00025B                     CWG1INPPS       equ	603	;# 
   737   00025C                     CWG2PPS         equ	604	;# 
   738   00025C                     CWG2INPPS       equ	604	;# 
   739   00025D                     CWG3PPS         equ	605	;# 
   740   00025D                     CWG3INPPS       equ	605	;# 
   741   00025E                     MD1CARLPPS      equ	606	;# 
   742   00025E                     MDCARLPPS       equ	606	;# 
   743   00025F                     MD1CARHPPS      equ	607	;# 
   744   00025F                     MDCARHPPS       equ	607	;# 
   745   000260                     MD1SRCPPS       equ	608	;# 
   746   000260                     MDSRCPPS        equ	608	;# 
   747   000261                     CLCIN0PPS       equ	609	;# 
   748   000262                     CLCIN1PPS       equ	610	;# 
   749   000263                     CLCIN2PPS       equ	611	;# 
   750   000264                     CLCIN3PPS       equ	612	;# 
   751   000265                     CLCIN4PPS       equ	613	;# 
   752   000266                     CLCIN5PPS       equ	614	;# 
   753   000267                     CLCIN6PPS       equ	615	;# 
   754   000268                     CLCIN7PPS       equ	616	;# 
   755   000269                     ADACTPPS        equ	617	;# 
   756   00026A                     SPI1SCKPPS      equ	618	;# 
   757   00026B                     SPI1SDIPPS      equ	619	;# 
   758   00026C                     SPI1SSPPS       equ	620	;# 
   759   00026D                     SPI2SCKPPS      equ	621	;# 
   760   00026E                     SPI2SDIPPS      equ	622	;# 
   761   00026F                     SPI2SSPPS       equ	623	;# 
   762   000270                     I2C1SDAPPS      equ	624	;# 
   763   000271                     I2C1SCLPPS      equ	625	;# 
   764   000272                     U1RXPPS         equ	626	;# 
   765   000273                     U1CTSPPS        equ	627	;# 
   766   000274                     U2RXPPS         equ	628	;# 
   767   000275                     U2CTSPPS        equ	629	;# 
   768   000276                     U3RXPPS         equ	630	;# 
   769   000277                     U3CTSPPS        equ	631	;# 
   770   000278                     U4RXPPS         equ	632	;# 
   771   000279                     U4CTSPPS        equ	633	;# 
   772   00027A                     U5RXPPS         equ	634	;# 
   773   00027B                     U5CTSPPS        equ	635	;# 
   774   000286                     RC4I2C          equ	646	;# 
   775   000287                     RC3I2C          equ	647	;# 
   776   000288                     RB2I2C          equ	648	;# 
   777   000289                     RB1I2C          equ	649	;# 
   778   00028A                     I2C1RXB         equ	650	;# 
   779   00028B                     I2C1TXB         equ	651	;# 
   780   00028C                     I2C1CNTL        equ	652	;# 
   781   00028D                     I2C1CNTH        equ	653	;# 
   782   00028E                     I2C1ADB0        equ	654	;# 
   783   00028F                     I2C1ADB1        equ	655	;# 
   784   000290                     I2C1ADR0        equ	656	;# 
   785   000291                     I2C1ADR1        equ	657	;# 
   786   000292                     I2C1ADR2        equ	658	;# 
   787   000293                     I2C1ADR3        equ	659	;# 
   788   000294                     I2C1CON0        equ	660	;# 
   789   000295                     I2C1CON1        equ	661	;# 
   790   000296                     I2C1CON2        equ	662	;# 
   791   000297                     I2C1ERR         equ	663	;# 
   792   000298                     I2C1STAT0       equ	664	;# 
   793   000299                     I2C1STAT1       equ	665	;# 
   794   00029A                     I2C1PIR         equ	666	;# 
   795   00029B                     I2C1PIE         equ	667	;# 
   796   00029C                     I2C1BTO         equ	668	;# 
   797   00029D                     I2C1BAUD        equ	669	;# 
   798   00029E                     I2C1CLK         equ	670	;# 
   799   00029F                     I2C1BTOC        equ	671	;# 
   800   0002A1                     U1RXB           equ	673	;# 
   801   0002A1                     U1RXBL          equ	673	;# 
   802   0002A2                     U1RXCHK         equ	674	;# 
   803   0002A3                     U1TXB           equ	675	;# 
   804   0002A3                     U1TXBL          equ	675	;# 
   805   0002A4                     U1TXCHK         equ	676	;# 
   806   0002A5                     U1P1            equ	677	;# 
   807   0002A5                     U1P1L           equ	677	;# 
   808   0002A6                     U1P1H           equ	678	;# 
   809   0002A7                     U1P2            equ	679	;# 
   810   0002A7                     U1P2L           equ	679	;# 
   811   0002A8                     U1P2H           equ	680	;# 
   812   0002A9                     U1P3            equ	681	;# 
   813   0002A9                     U1P3L           equ	681	;# 
   814   0002AA                     U1P3H           equ	682	;# 
   815   0002AB                     U1CON0          equ	683	;# 
   816   0002AC                     U1CON1          equ	684	;# 
   817   0002AD                     U1CON2          equ	685	;# 
   818   0002AE                     U1BRG           equ	686	;# 
   819   0002AE                     U1BRGL          equ	686	;# 
   820   0002AF                     U1BRGH          equ	687	;# 
   821   0002B0                     U1FIFO          equ	688	;# 
   822   0002B1                     U1UIR           equ	689	;# 
   823   0002B2                     U1ERRIR         equ	690	;# 
   824   0002B3                     U1ERRIE         equ	691	;# 
   825   0002B4                     U2RXB           equ	692	;# 
   826   0002B4                     U2RXBL          equ	692	;# 
   827   0002B5                     U2RXCHK         equ	693	;# 
   828   0002B6                     U2TXB           equ	694	;# 
   829   0002B6                     U2TXBL          equ	694	;# 
   830   0002B7                     U2TXCHK         equ	695	;# 
   831   0002B8                     U2P1            equ	696	;# 
   832   0002B8                     U2P1L           equ	696	;# 
   833   0002B9                     U2P1H           equ	697	;# 
   834   0002BA                     U2P2            equ	698	;# 
   835   0002BA                     U2P2L           equ	698	;# 
   836   0002BB                     U2P2H           equ	699	;# 
   837   0002BC                     U2P3            equ	700	;# 
   838   0002BC                     U2P3L           equ	700	;# 
   839   0002BD                     U2P3H           equ	701	;# 
   840   0002BE                     U2CON0          equ	702	;# 
   841   0002BF                     U2CON1          equ	703	;# 
   842   0002C0                     U2CON2          equ	704	;# 
   843   0002C1                     U2BRG           equ	705	;# 
   844   0002C1                     U2BRGL          equ	705	;# 
   845   0002C2                     U2BRGH          equ	706	;# 
   846   0002C3                     U2FIFO          equ	707	;# 
   847   0002C4                     U2UIR           equ	708	;# 
   848   0002C5                     U2ERRIR         equ	709	;# 
   849   0002C6                     U2ERRIE         equ	710	;# 
   850   0002C7                     U3RXB           equ	711	;# 
   851   0002C7                     U3RXBL          equ	711	;# 
   852   0002C9                     U3TXB           equ	713	;# 
   853   0002C9                     U3TXBL          equ	713	;# 
   854   0002CB                     U3P1            equ	715	;# 
   855   0002CB                     U3P1L           equ	715	;# 
   856   0002CD                     U3P2            equ	717	;# 
   857   0002CD                     U3P2L           equ	717	;# 
   858   0002CF                     U3P3            equ	719	;# 
   859   0002CF                     U3P3L           equ	719	;# 
   860   0002D1                     U3CON0          equ	721	;# 
   861   0002D2                     U3CON1          equ	722	;# 
   862   0002D3                     U3CON2          equ	723	;# 
   863   0002D4                     U3BRG           equ	724	;# 
   864   0002D4                     U3BRGL          equ	724	;# 
   865   0002D5                     U3BRGH          equ	725	;# 
   866   0002D6                     U3FIFO          equ	726	;# 
   867   0002D7                     U3UIR           equ	727	;# 
   868   0002D8                     U3ERRIR         equ	728	;# 
   869   0002D9                     U3ERRIE         equ	729	;# 
   870   0002DA                     U4RXB           equ	730	;# 
   871   0002DA                     U4RXBL          equ	730	;# 
   872   0002DC                     U4TXB           equ	732	;# 
   873   0002DC                     U4TXBL          equ	732	;# 
   874   0002DE                     U4P1            equ	734	;# 
   875   0002DE                     U4P1L           equ	734	;# 
   876   0002E0                     U4P2            equ	736	;# 
   877   0002E0                     U4P2L           equ	736	;# 
   878   0002E2                     U4P3            equ	738	;# 
   879   0002E2                     U4P3L           equ	738	;# 
   880   0002E4                     U4CON0          equ	740	;# 
   881   0002E5                     U4CON1          equ	741	;# 
   882   0002E6                     U4CON2          equ	742	;# 
   883   0002E7                     U4BRG           equ	743	;# 
   884   0002E7                     U4BRGL          equ	743	;# 
   885   0002E8                     U4BRGH          equ	744	;# 
   886   0002E9                     U4FIFO          equ	745	;# 
   887   0002EA                     U4UIR           equ	746	;# 
   888   0002EB                     U4ERRIR         equ	747	;# 
   889   0002EC                     U4ERRIE         equ	748	;# 
   890   0002ED                     U5RXB           equ	749	;# 
   891   0002ED                     U5RXBL          equ	749	;# 
   892   0002EF                     U5TXB           equ	751	;# 
   893   0002EF                     U5TXBL          equ	751	;# 
   894   0002F1                     U5P1            equ	753	;# 
   895   0002F1                     U5P1L           equ	753	;# 
   896   0002F3                     U5P2            equ	755	;# 
   897   0002F3                     U5P2L           equ	755	;# 
   898   0002F5                     U5P3            equ	757	;# 
   899   0002F5                     U5P3L           equ	757	;# 
   900   0002F7                     U5CON0          equ	759	;# 
   901   0002F8                     U5CON1          equ	760	;# 
   902   0002F9                     U5CON2          equ	761	;# 
   903   0002FA                     U5BRG           equ	762	;# 
   904   0002FA                     U5BRGL          equ	762	;# 
   905   0002FB                     U5BRGH          equ	763	;# 
   906   0002FC                     U5FIFO          equ	764	;# 
   907   0002FD                     U5UIR           equ	765	;# 
   908   0002FE                     U5ERRIR         equ	766	;# 
   909   0002FF                     U5ERRIE         equ	767	;# 
   910   000300                     SMT1TMR         equ	768	;# 
   911   000300                     SMT1TMRL        equ	768	;# 
   912   000301                     SMT1TMRH        equ	769	;# 
   913   000302                     SMT1TMRU        equ	770	;# 
   914   000303                     SMT1CPR         equ	771	;# 
   915   000303                     SMT1CPRL        equ	771	;# 
   916   000304                     SMT1CPRH        equ	772	;# 
   917   000305                     SMT1CPRU        equ	773	;# 
   918   000306                     SMT1CPW         equ	774	;# 
   919   000306                     SMT1CPWL        equ	774	;# 
   920   000307                     SMT1CPWH        equ	775	;# 
   921   000308                     SMT1CPWU        equ	776	;# 
   922   000309                     SMT1PR          equ	777	;# 
   923   000309                     SMT1PRL         equ	777	;# 
   924   00030A                     SMT1PRH         equ	778	;# 
   925   00030B                     SMT1PRU         equ	779	;# 
   926   00030C                     SMT1CON0        equ	780	;# 
   927   00030D                     SMT1CON1        equ	781	;# 
   928   00030E                     SMT1STAT        equ	782	;# 
   929   00030F                     SMT1CLK         equ	783	;# 
   930   000310                     SMT1SIG         equ	784	;# 
   931   000311                     SMT1WIN         equ	785	;# 
   932   000318                     TMR0L           equ	792	;# 
   933   000318                     TMR0            equ	792	;# 
   934   000319                     TMR0H           equ	793	;# 
   935   000319                     PR0             equ	793	;# 
   936   00031A                     T0CON0          equ	794	;# 
   937   00031B                     T0CON1          equ	795	;# 
   938   00031C                     TMR1            equ	796	;# 
   939   00031C                     TMR1L           equ	796	;# 
   940   00031D                     TMR1H           equ	797	;# 
   941   00031E                     T1CON           equ	798	;# 
   942   00031E                     TMR1CON         equ	798	;# 
   943   00031F                     T1GCON          equ	799	;# 
   944   00031F                     TMR1GCON        equ	799	;# 
   945   000320                     T1GATE          equ	800	;# 
   946   000320                     TMR1GATE        equ	800	;# 
   947   000321                     T1CLK           equ	801	;# 
   948   000321                     TMR1CLK         equ	801	;# 
   949   000321                     PR1             equ	801	;# 
   950   000322                     T2TMR           equ	802	;# 
   951   000322                     TMR2            equ	802	;# 
   952   000323                     T2PR            equ	803	;# 
   953   000323                     PR2             equ	803	;# 
   954   000324                     T2CON           equ	804	;# 
   955   000325                     T2HLT           equ	805	;# 
   956   000326                     T2CLKCON        equ	806	;# 
   957   000326                     T2CLK           equ	806	;# 
   958   000327                     T2RST           equ	807	;# 
   959   000328                     TMR3            equ	808	;# 
   960   000328                     TMR3L           equ	808	;# 
   961   000329                     TMR3H           equ	809	;# 
   962   00032A                     T3CON           equ	810	;# 
   963   00032A                     TMR3CON         equ	810	;# 
   964   00032B                     T3GCON          equ	811	;# 
   965   00032B                     TMR3GCON        equ	811	;# 
   966   00032C                     T3GATE          equ	812	;# 
   967   00032C                     TMR3GATE        equ	812	;# 
   968   00032D                     T3CLK           equ	813	;# 
   969   00032D                     TMR3CLK         equ	813	;# 
   970   00032D                     PR3             equ	813	;# 
   971   00032E                     T4TMR           equ	814	;# 
   972   00032E                     TMR4            equ	814	;# 
   973   00032F                     T4PR            equ	815	;# 
   974   00032F                     PR4             equ	815	;# 
   975   000330                     T4CON           equ	816	;# 
   976   000331                     T4HLT           equ	817	;# 
   977   000332                     T4CLKCON        equ	818	;# 
   978   000332                     T4CLK           equ	818	;# 
   979   000333                     T4RST           equ	819	;# 
   980   000334                     TMR5            equ	820	;# 
   981   000334                     TMR5L           equ	820	;# 
   982   000335                     TMR5H           equ	821	;# 
   983   000336                     T5CON           equ	822	;# 
   984   000336                     TMR5CON         equ	822	;# 
   985   000337                     T5GCON          equ	823	;# 
   986   000337                     TMR5GCON        equ	823	;# 
   987   000338                     T5GATE          equ	824	;# 
   988   000338                     TMR5GATE        equ	824	;# 
   989   000339                     T5CLK           equ	825	;# 
   990   000339                     TMR5CLK         equ	825	;# 
   991   000339                     PR5             equ	825	;# 
   992   00033A                     T6TMR           equ	826	;# 
   993   00033A                     TMR6            equ	826	;# 
   994   00033B                     T6PR            equ	827	;# 
   995   00033B                     PR6             equ	827	;# 
   996   00033C                     T6CON           equ	828	;# 
   997   00033D                     T6HLT           equ	829	;# 
   998   00033E                     T6CLKCON        equ	830	;# 
   999   00033E                     T6CLK           equ	830	;# 
  1000   00033F                     T6RST           equ	831	;# 
  1001   000340                     CCPR1           equ	832	;# 
  1002   000340                     CCPR1L          equ	832	;# 
  1003   000341                     CCPR1H          equ	833	;# 
  1004   000342                     CCP1CON         equ	834	;# 
  1005   000343                     CCP1CAP         equ	835	;# 
  1006   000344                     CCPR2           equ	836	;# 
  1007   000344                     CCPR2L          equ	836	;# 
  1008   000345                     CCPR2H          equ	837	;# 
  1009   000346                     CCP2CON         equ	838	;# 
  1010   000347                     CCP2CAP         equ	839	;# 
  1011   000348                     CCPR3           equ	840	;# 
  1012   000348                     CCPR3L          equ	840	;# 
  1013   000349                     CCPR3H          equ	841	;# 
  1014   00034A                     CCP3CON         equ	842	;# 
  1015   00034B                     CCP3CAP         equ	843	;# 
  1016   00034C                     CCPTMRS0        equ	844	;# 
  1017   00034F                     CRCDATA         equ	847	;# 
  1018   00034F                     CRCDATAL        equ	847	;# 
  1019   000350                     CRCDATAH        equ	848	;# 
  1020   000351                     CRCDATAU        equ	849	;# 
  1021   000352                     CRCDATAT        equ	850	;# 
  1022   000353                     CRCOUT          equ	851	;# 
  1023   000353                     CRCSHFT         equ	851	;# 
  1024   000353                     CRCXOR          equ	851	;# 
  1025   000353                     CRCOUTL         equ	851	;# 
  1026   000353                     CRCSHFTL        equ	851	;# 
  1027   000353                     CRCSHIFTL       equ	851	;# 
  1028   000353                     CRCXORL         equ	851	;# 
  1029   000354                     CRCOUTH         equ	852	;# 
  1030   000354                     CRCSHFTH        equ	852	;# 
  1031   000354                     CRCSHIFTH       equ	852	;# 
  1032   000354                     CRCXORH         equ	852	;# 
  1033   000355                     CRCOUTU         equ	853	;# 
  1034   000355                     CRCSHFTU        equ	853	;# 
  1035   000355                     CRCSHIFTU       equ	853	;# 
  1036   000355                     CRCXORU         equ	853	;# 
  1037   000356                     CRCOUTT         equ	854	;# 
  1038   000356                     CRCSHFTT        equ	854	;# 
  1039   000356                     CRCSHIFTT       equ	854	;# 
  1040   000356                     CRCXORT         equ	854	;# 
  1041   000357                     CRCCON0         equ	855	;# 
  1042   000358                     CRCCON1         equ	856	;# 
  1043   000359                     CRCCON2         equ	857	;# 
  1044   00035A                     SCANLADR        equ	858	;# 
  1045   00035A                     SCANLADRL       equ	858	;# 
  1046   00035B                     SCANLADRH       equ	859	;# 
  1047   00035C                     SCANLADRU       equ	860	;# 
  1048   00035D                     SCANHADR        equ	861	;# 
  1049   00035D                     SCANHADRL       equ	861	;# 
  1050   00035E                     SCANHADRH       equ	862	;# 
  1051   00035F                     SCANHADRU       equ	863	;# 
  1052   000360                     SCANCON0        equ	864	;# 
  1053   000361                     SCANTRIG        equ	865	;# 
  1054   000362                     IPR0            equ	866	;# 
  1055   000363                     IPR1            equ	867	;# 
  1056   000364                     IPR2            equ	868	;# 
  1057   000365                     IPR3            equ	869	;# 
  1058   000366                     IPR4            equ	870	;# 
  1059   000367                     IPR5            equ	871	;# 
  1060   000368                     IPR6            equ	872	;# 
  1061   000369                     IPR7            equ	873	;# 
  1062   00036A                     IPR8            equ	874	;# 
  1063   00036B                     IPR9            equ	875	;# 
  1064   00036C                     IPR10           equ	876	;# 
  1065   00036D                     IPR11           equ	877	;# 
  1066   00036E                     IPR12           equ	878	;# 
  1067   00036F                     IPR13           equ	879	;# 
  1068   000370                     IPR14           equ	880	;# 
  1069   000371                     IPR15           equ	881	;# 
  1070   000373                     STATUS_CSHAD    equ	883	;# 
  1071   000374                     WREG_CSHAD      equ	884	;# 
  1072   000375                     BSR_CSHAD       equ	885	;# 
  1073   000376                     SHADCON         equ	886	;# 
  1074   000377                     STATUS_SHAD     equ	887	;# 
  1075   000378                     WREG_SHAD       equ	888	;# 
  1076   000379                     BSR_SHAD        equ	889	;# 
  1077   00037A                     PCLATH_SHAD     equ	890	;# 
  1078   00037B                     PCLATU_SHAD     equ	891	;# 
  1079   00037C                     FSR0SH          equ	892	;# 
  1080   00037C                     FSR0L_SHAD      equ	892	;# 
  1081   00037D                     FSR0H_SHAD      equ	893	;# 
  1082   00037E                     FSR1SH          equ	894	;# 
  1083   00037E                     FSR1L_SHAD      equ	894	;# 
  1084   00037F                     FSR1H_SHAD      equ	895	;# 
  1085   000380                     FSR2SH          equ	896	;# 
  1086   000380                     FSR2L_SHAD      equ	896	;# 
  1087   000381                     FSR2H_SHAD      equ	897	;# 
  1088   000382                     PRODSH          equ	898	;# 
  1089   000382                     PRODL_SHAD      equ	898	;# 
  1090   000383                     PRODH_SHAD      equ	899	;# 
  1091   000387                     TU16ACON0       equ	903	;# 
  1092   000388                     TU16ACON1       equ	904	;# 
  1093   000389                     TU16AHLT        equ	905	;# 
  1094   00038A                     TU16APS         equ	906	;# 
  1095   00038B                     TU16ATMR        equ	907	;# 
  1096   00038B                     TU16ACR         equ	907	;# 
  1097   00038B                     TU16ATMRL       equ	907	;# 
  1098   00038B                     TU16ACRL        equ	907	;# 
  1099   00038C                     TU16ATMRH       equ	908	;# 
  1100   00038C                     TU16ACRH        equ	908	;# 
  1101   00038D                     TU16APR         equ	909	;# 
  1102   00038D                     TU16APRL        equ	909	;# 
  1103   00038E                     TU16APRH        equ	910	;# 
  1104   00038F                     TU16ACLK        equ	911	;# 
  1105   000390                     TU16AERS        equ	912	;# 
  1106   000393                     TU16BCON0       equ	915	;# 
  1107   000394                     TU16BCON1       equ	916	;# 
  1108   000395                     TU16BHLT        equ	917	;# 
  1109   000396                     TU16BPS         equ	918	;# 
  1110   000397                     TU16BTMR        equ	919	;# 
  1111   000397                     TU16BCR         equ	919	;# 
  1112   000397                     TU16BTMRL       equ	919	;# 
  1113   000397                     TU16BCRL        equ	919	;# 
  1114   000398                     TU16BTMRH       equ	920	;# 
  1115   000398                     TU16BCRH        equ	920	;# 
  1116   000399                     TU16BPR         equ	921	;# 
  1117   000399                     TU16BPRL        equ	921	;# 
  1118   00039A                     TU16BPRH        equ	922	;# 
  1119   00039B                     TU16BCLK        equ	923	;# 
  1120   00039C                     TU16BERS        equ	924	;# 
  1121   0003BB                     TUCHAIN         equ	955	;# 
  1122   0003BC                     CWG1CLK         equ	956	;# 
  1123   0003BC                     CWG1CLKCON      equ	956	;# 
  1124   0003BD                     CWG1ISM         equ	957	;# 
  1125   0003BE                     CWG1DBR         equ	958	;# 
  1126   0003BF                     CWG1DBF         equ	959	;# 
  1127   0003C0                     CWG1CON0        equ	960	;# 
  1128   0003C1                     CWG1CON1        equ	961	;# 
  1129   0003C2                     CWG1AS0         equ	962	;# 
  1130   0003C3                     CWG1AS1         equ	963	;# 
  1131   0003C4                     CWG1STR         equ	964	;# 
  1132   0003C5                     CWG2CLK         equ	965	;# 
  1133   0003C5                     CWG2CLKCON      equ	965	;# 
  1134   0003C6                     CWG2ISM         equ	966	;# 
  1135   0003C7                     CWG2DBR         equ	967	;# 
  1136   0003C8                     CWG2DBF         equ	968	;# 
  1137   0003C9                     CWG2CON0        equ	969	;# 
  1138   0003CA                     CWG2CON1        equ	970	;# 
  1139   0003CB                     CWG2AS0         equ	971	;# 
  1140   0003CC                     CWG2AS1         equ	972	;# 
  1141   0003CD                     CWG2STR         equ	973	;# 
  1142   0003CE                     CWG3CLK         equ	974	;# 
  1143   0003CE                     CWG3CLKCON      equ	974	;# 
  1144   0003CF                     CWG3ISM         equ	975	;# 
  1145   0003D0                     CWG3DBR         equ	976	;# 
  1146   0003D1                     CWG3DBF         equ	977	;# 
  1147   0003D2                     CWG3CON0        equ	978	;# 
  1148   0003D3                     CWG3CON1        equ	979	;# 
  1149   0003D4                     CWG3AS0         equ	980	;# 
  1150   0003D5                     CWG3AS1         equ	981	;# 
  1151   0003D6                     CWG3STR         equ	982	;# 
  1152   0003D7                     FVRCON          equ	983	;# 
  1153   0003D8                     ADCPCON         equ	984	;# 
  1154   0003D8                     ADCP            equ	984	;# 
  1155   0003D9                     ADLTH           equ	985	;# 
  1156   0003D9                     ADLTHL          equ	985	;# 
  1157   0003DA                     ADLTHH          equ	986	;# 
  1158   0003DB                     ADUTH           equ	987	;# 
  1159   0003DB                     ADUTHL          equ	987	;# 
  1160   0003DC                     ADUTHH          equ	988	;# 
  1161   0003DD                     ADERR           equ	989	;# 
  1162   0003DD                     ADERRL          equ	989	;# 
  1163   0003DE                     ADERRH          equ	990	;# 
  1164   0003DF                     ADSTPT          equ	991	;# 
  1165   0003DF                     ADSTPTL         equ	991	;# 
  1166   0003E0                     ADSTPTH         equ	992	;# 
  1167   0003E1                     ADFLTR          equ	993	;# 
  1168   0003E1                     ADFLTRL         equ	993	;# 
  1169   0003E2                     ADFLTRH         equ	994	;# 
  1170   0003E3                     ADACC           equ	995	;# 
  1171   0003E3                     ADACCL          equ	995	;# 
  1172   0003E4                     ADACCH          equ	996	;# 
  1173   0003E5                     ADACCU          equ	997	;# 
  1174   0003E6                     ADCNT           equ	998	;# 
  1175   0003E7                     ADRPT           equ	999	;# 
  1176   0003E8                     ADPREV          equ	1000	;# 
  1177   0003E8                     ADPREVL         equ	1000	;# 
  1178   0003E9                     ADPREVH         equ	1001	;# 
  1179   0003EA                     ADRES           equ	1002	;# 
  1180   0003EA                     ADRESL          equ	1002	;# 
  1181   0003EB                     ADRESH          equ	1003	;# 
  1182   0003EC                     ADPCH           equ	1004	;# 
  1183   0003EE                     ADACQ           equ	1006	;# 
  1184   0003EE                     ADACQL          equ	1006	;# 
  1185   0003EF                     ADACQH          equ	1007	;# 
  1186   0003F0                     ADCAP           equ	1008	;# 
  1187   0003F1                     ADPRE           equ	1009	;# 
  1188   0003F1                     ADPREL          equ	1009	;# 
  1189   0003F2                     ADPREH          equ	1010	;# 
  1190   0003F3                     ADCON0          equ	1011	;# 
  1191   0003F4                     ADCON1          equ	1012	;# 
  1192   0003F5                     ADCON2          equ	1013	;# 
  1193   0003F6                     ADCON3          equ	1014	;# 
  1194   0003F7                     ADSTAT          equ	1015	;# 
  1195   0003F8                     ADREF           equ	1016	;# 
  1196   0003F9                     ADACT           equ	1017	;# 
  1197   0003FA                     ADCLK           equ	1018	;# 
  1198   0003FB                     ADCTX           equ	1019	;# 
  1199   0003FC                     ADCSEL1         equ	1020	;# 
  1200   0003FD                     ADCSEL2         equ	1021	;# 
  1201   0003FE                     ADCSEL3         equ	1022	;# 
  1202   0003FF                     ADCSEL4         equ	1023	;# 
  1203   000400                     ANSELA          equ	1024	;# 
  1204   000401                     WPUA            equ	1025	;# 
  1205   000402                     ODCONA          equ	1026	;# 
  1206   000403                     SLRCONA         equ	1027	;# 
  1207   000404                     INLVLA          equ	1028	;# 
  1208   000405                     IOCAP           equ	1029	;# 
  1209   000406                     IOCAN           equ	1030	;# 
  1210   000407                     IOCAF           equ	1031	;# 
  1211   000408                     ANSELB          equ	1032	;# 
  1212   000409                     WPUB            equ	1033	;# 
  1213   00040A                     ODCONB          equ	1034	;# 
  1214   00040B                     SLRCONB         equ	1035	;# 
  1215   00040C                     INLVLB          equ	1036	;# 
  1216   00040D                     IOCBP           equ	1037	;# 
  1217   00040E                     IOCBN           equ	1038	;# 
  1218   00040F                     IOCBF           equ	1039	;# 
  1219   000410                     ANSELC          equ	1040	;# 
  1220   000411                     WPUC            equ	1041	;# 
  1221   000412                     ODCONC          equ	1042	;# 
  1222   000413                     SLRCONC         equ	1043	;# 
  1223   000414                     INLVLC          equ	1044	;# 
  1224   000415                     IOCCP           equ	1045	;# 
  1225   000416                     IOCCN           equ	1046	;# 
  1226   000417                     IOCCF           equ	1047	;# 
  1227   000421                     WPUE            equ	1057	;# 
  1228   000424                     INLVLE          equ	1060	;# 
  1229   000425                     IOCEP           equ	1061	;# 
  1230   000426                     IOCEN           equ	1062	;# 
  1231   000427                     IOCEF           equ	1063	;# 
  1232   000440                     NCO1ACC         equ	1088	;# 
  1233   000440                     NCO1ACCL        equ	1088	;# 
  1234   000441                     NCO1ACCH        equ	1089	;# 
  1235   000442                     NCO1ACCU        equ	1090	;# 
  1236   000443                     NCO1INC         equ	1091	;# 
  1237   000443                     NCO1INCL        equ	1091	;# 
  1238   000444                     NCO1INCH        equ	1092	;# 
  1239   000445                     NCO1INCU        equ	1093	;# 
  1240   000446                     NCO1CON         equ	1094	;# 
  1241   000447                     NCO1CLK         equ	1095	;# 
  1242   000448                     NCO2ACC         equ	1096	;# 
  1243   000448                     NCO2ACCL        equ	1096	;# 
  1244   000449                     NCO2ACCH        equ	1097	;# 
  1245   00044A                     NCO2ACCU        equ	1098	;# 
  1246   00044B                     NCO2INC         equ	1099	;# 
  1247   00044B                     NCO2INCL        equ	1099	;# 
  1248   00044C                     NCO2INCH        equ	1100	;# 
  1249   00044D                     NCO2INCU        equ	1101	;# 
  1250   00044E                     NCO2CON         equ	1102	;# 
  1251   00044F                     NCO2CLK         equ	1103	;# 
  1252   000450                     NCO3ACC         equ	1104	;# 
  1253   000450                     NCO3ACCL        equ	1104	;# 
  1254   000451                     NCO3ACCH        equ	1105	;# 
  1255   000452                     NCO3ACCU        equ	1106	;# 
  1256   000453                     NCO3INC         equ	1107	;# 
  1257   000453                     NCO3INCL        equ	1107	;# 
  1258   000454                     NCO3INCH        equ	1108	;# 
  1259   000455                     NCO3INCU        equ	1109	;# 
  1260   000456                     NCO3CON         equ	1110	;# 
  1261   000457                     NCO3CLK         equ	1111	;# 
  1262   000458                     FSCMCON         equ	1112	;# 
  1263   000459                     IVTLOCK         equ	1113	;# 
  1264   00045A                     IVTAD           equ	1114	;# 
  1265   00045A                     IVTADL          equ	1114	;# 
  1266   00045B                     IVTADH          equ	1115	;# 
  1267   00045C                     IVTADU          equ	1116	;# 
  1268   00045D                     IVTBASE         equ	1117	;# 
  1269   00045D                     IVTBASEL        equ	1117	;# 
  1270   00045E                     IVTBASEH        equ	1118	;# 
  1271   00045F                     IVTBASEU        equ	1119	;# 
  1272   000460                     PWM1ERS         equ	1120	;# 
  1273   000461                     PWM1CLK         equ	1121	;# 
  1274   000462                     PWM1LDS         equ	1122	;# 
  1275   000463                     PWM1PR          equ	1123	;# 
  1276   000463                     PWM1PRL         equ	1123	;# 
  1277   000464                     PWM1PRH         equ	1124	;# 
  1278   000465                     PWM1CPRE        equ	1125	;# 
  1279   000466                     PWM1PIPOS       equ	1126	;# 
  1280   000467                     PWM1GIR         equ	1127	;# 
  1281   000468                     PWM1GIE         equ	1128	;# 
  1282   000469                     PWM1CON         equ	1129	;# 
  1283   00046A                     PWM1S1CFG       equ	1130	;# 
  1284   00046B                     PWM1S1P1        equ	1131	;# 
  1285   00046B                     PWM1S1P1L       equ	1131	;# 
  1286   00046C                     PWM1S1P1H       equ	1132	;# 
  1287   00046D                     PWM1S1P2        equ	1133	;# 
  1288   00046D                     PWM1S1P2L       equ	1133	;# 
  1289   00046E                     PWM1S1P2H       equ	1134	;# 
  1290   00046F                     PWM2ERS         equ	1135	;# 
  1291   000470                     PWM2CLK         equ	1136	;# 
  1292   000471                     PWM2LDS         equ	1137	;# 
  1293   000472                     PWM2PR          equ	1138	;# 
  1294   000472                     PWM2PRL         equ	1138	;# 
  1295   000473                     PWM2PRH         equ	1139	;# 
  1296   000474                     PWM2CPRE        equ	1140	;# 
  1297   000475                     PWM2PIPOS       equ	1141	;# 
  1298   000476                     PWM2GIR         equ	1142	;# 
  1299   000477                     PWM2GIE         equ	1143	;# 
  1300   000478                     PWM2CON         equ	1144	;# 
  1301   000479                     PWM2S1CFG       equ	1145	;# 
  1302   00047A                     PWM2S1P1        equ	1146	;# 
  1303   00047A                     PWM2S1P1L       equ	1146	;# 
  1304   00047B                     PWM2S1P1H       equ	1147	;# 
  1305   00047C                     PWM2S1P2        equ	1148	;# 
  1306   00047C                     PWM2S1P2L       equ	1148	;# 
  1307   00047D                     PWM2S1P2H       equ	1149	;# 
  1308   00047E                     PWM3ERS         equ	1150	;# 
  1309   00047F                     PWM3CLK         equ	1151	;# 
  1310   000480                     PWM3LDS         equ	1152	;# 
  1311   000481                     PWM3PR          equ	1153	;# 
  1312   000481                     PWM3PRL         equ	1153	;# 
  1313   000482                     PWM3PRH         equ	1154	;# 
  1314   000483                     PWM3CPRE        equ	1155	;# 
  1315   000484                     PWM3PIPOS       equ	1156	;# 
  1316   000485                     PWM3GIR         equ	1157	;# 
  1317   000486                     PWM3GIE         equ	1158	;# 
  1318   000487                     PWM3CON         equ	1159	;# 
  1319   000488                     PWM3S1CFG       equ	1160	;# 
  1320   000489                     PWM3S1P1        equ	1161	;# 
  1321   000489                     PWM3S1P1L       equ	1161	;# 
  1322   00048A                     PWM3S1P1H       equ	1162	;# 
  1323   00048B                     PWM3S1P2        equ	1163	;# 
  1324   00048B                     PWM3S1P2L       equ	1163	;# 
  1325   00048C                     PWM3S1P2H       equ	1164	;# 
  1326   00048D                     PWM4ERS         equ	1165	;# 
  1327   00048E                     PWM4CLK         equ	1166	;# 
  1328   00048F                     PWM4LDS         equ	1167	;# 
  1329   000490                     PWM4PR          equ	1168	;# 
  1330   000490                     PWM4PRL         equ	1168	;# 
  1331   000491                     PWM4PRH         equ	1169	;# 
  1332   000492                     PWM4CPRE        equ	1170	;# 
  1333   000493                     PWM4PIPOS       equ	1171	;# 
  1334   000494                     PWM4GIR         equ	1172	;# 
  1335   000495                     PWM4GIE         equ	1173	;# 
  1336   000496                     PWM4CON         equ	1174	;# 
  1337   000497                     PWM4S1CFG       equ	1175	;# 
  1338   000498                     PWM4S1P1        equ	1176	;# 
  1339   000498                     PWM4S1P1L       equ	1176	;# 
  1340   000499                     PWM4S1P1H       equ	1177	;# 
  1341   00049A                     PWM4S1P2        equ	1178	;# 
  1342   00049A                     PWM4S1P2L       equ	1178	;# 
  1343   00049B                     PWM4S1P2H       equ	1179	;# 
  1344   00049C                     PWMLOAD         equ	1180	;# 
  1345   00049D                     PWMEN           equ	1181	;# 
  1346   00049E                     PIE0            equ	1182	;# 
  1347   00049F                     PIE1            equ	1183	;# 
  1348   0004A0                     PIE2            equ	1184	;# 
  1349   0004A1                     PIE3            equ	1185	;# 
  1350   0004A2                     PIE4            equ	1186	;# 
  1351   0004A3                     PIE5            equ	1187	;# 
  1352   0004A4                     PIE6            equ	1188	;# 
  1353   0004A5                     PIE7            equ	1189	;# 
  1354   0004A6                     PIE8            equ	1190	;# 
  1355   0004A7                     PIE9            equ	1191	;# 
  1356   0004A8                     PIE10           equ	1192	;# 
  1357   0004A9                     PIE11           equ	1193	;# 
  1358   0004AA                     PIE12           equ	1194	;# 
  1359   0004AB                     PIE13           equ	1195	;# 
  1360   0004AC                     PIE14           equ	1196	;# 
  1361   0004AD                     PIE15           equ	1197	;# 
  1362   0004AE                     PIR0            equ	1198	;# 
  1363   0004AF                     PIR1            equ	1199	;# 
  1364   0004B0                     PIR2            equ	1200	;# 
  1365   0004B1                     PIR3            equ	1201	;# 
  1366   0004B2                     PIR4            equ	1202	;# 
  1367   0004B3                     PIR5            equ	1203	;# 
  1368   0004B4                     PIR6            equ	1204	;# 
  1369   0004B5                     PIR7            equ	1205	;# 
  1370   0004B6                     PIR8            equ	1206	;# 
  1371   0004B7                     PIR9            equ	1207	;# 
  1372   0004B8                     PIR10           equ	1208	;# 
  1373   0004B9                     PIR11           equ	1209	;# 
  1374   0004BA                     PIR12           equ	1210	;# 
  1375   0004BB                     PIR13           equ	1211	;# 
  1376   0004BC                     PIR14           equ	1212	;# 
  1377   0004BD                     PIR15           equ	1213	;# 
  1378   0004BE                     LATA            equ	1214	;# 
  1379   0004BF                     LATB            equ	1215	;# 
  1380   0004C0                     LATC            equ	1216	;# 
  1381   0004C6                     TRISA           equ	1222	;# 
  1382   0004C7                     TRISB           equ	1223	;# 
  1383   0004C8                     TRISC           equ	1224	;# 
  1384   0004CA                     TRISE           equ	1226	;# 
  1385   0004CE                     PORTA           equ	1230	;# 
  1386   0004CF                     PORTB           equ	1231	;# 
  1387   0004D0                     PORTC           equ	1232	;# 
  1388   0004D2                     PORTE           equ	1234	;# 
  1389   0004D6                     INTCON0         equ	1238	;# 
  1390   0004D7                     INTCON1         equ	1239	;# 
  1391   0004D8                     STATUS          equ	1240	;# 
  1392   0004D9                     FSR2            equ	1241	;# 
  1393   0004D9                     FSR2L           equ	1241	;# 
  1394   0004DA                     FSR2H           equ	1242	;# 
  1395   0004DB                     PLUSW2          equ	1243	;# 
  1396   0004DC                     PREINC2         equ	1244	;# 
  1397   0004DD                     POSTDEC2        equ	1245	;# 
  1398   0004DE                     POSTINC2        equ	1246	;# 
  1399   0004DF                     INDF2           equ	1247	;# 
  1400   0004E0                     BSR             equ	1248	;# 
  1401   0004E1                     FSR1            equ	1249	;# 
  1402   0004E1                     FSR1L           equ	1249	;# 
  1403   0004E2                     FSR1H           equ	1250	;# 
  1404   0004E3                     PLUSW1          equ	1251	;# 
  1405   0004E4                     PREINC1         equ	1252	;# 
  1406   0004E5                     POSTDEC1        equ	1253	;# 
  1407   0004E6                     POSTINC1        equ	1254	;# 
  1408   0004E7                     INDF1           equ	1255	;# 
  1409   0004E8                     WREG            equ	1256	;# 
  1410   0004E9                     FSR0            equ	1257	;# 
  1411   0004E9                     FSR0L           equ	1257	;# 
  1412   0004EA                     FSR0H           equ	1258	;# 
  1413   0004EB                     PLUSW0          equ	1259	;# 
  1414   0004EC                     PREINC0         equ	1260	;# 
  1415   0004ED                     POSTDEC0        equ	1261	;# 
  1416   0004EE                     POSTINC0        equ	1262	;# 
  1417   0004EF                     INDF0           equ	1263	;# 
  1418   0004F0                     PCON0           equ	1264	;# 
  1419   0004F1                     PCON1           equ	1265	;# 
  1420   0004F2                     CPUDOZE         equ	1266	;# 
  1421   0004F3                     PROD            equ	1267	;# 
  1422   0004F3                     PRODL           equ	1267	;# 
  1423   0004F4                     PRODH           equ	1268	;# 
  1424   0004F5                     TABLAT          equ	1269	;# 
  1425   0004F6                     TBLPTR          equ	1270	;# 
  1426   0004F6                     TBLPTRL         equ	1270	;# 
  1427   0004F7                     TBLPTRH         equ	1271	;# 
  1428   0004F8                     TBLPTRU         equ	1272	;# 
  1429   0004F9                     PCLAT           equ	1273	;# 
  1430   0004F9                     PCL             equ	1273	;# 
  1431   0004FA                     PCLATH          equ	1274	;# 
  1432   0004FB                     PCLATU          equ	1275	;# 
  1433   0004FC                     STKPTR          equ	1276	;# 
  1434   0004FD                     TOS             equ	1277	;# 
  1435   0004FD                     TOSL            equ	1277	;# 
  1436   0004FE                     TOSH            equ	1278	;# 
  1437   0004FF                     TOSU            equ	1279	;# 
  1438   000038                     BOOTREG         equ	56	;# 
  1439   000039                     CLKRCON         equ	57	;# 
  1440   00003A                     CLKRCLK         equ	58	;# 
  1441   000040                     NVMCON0         equ	64	;# 
  1442   000041                     NVMCON1         equ	65	;# 
  1443   000042                     NVMLOCK         equ	66	;# 
  1444   000043                     NVMADR          equ	67	;# 
  1445   000043                     NVMADRL         equ	67	;# 
  1446   000044                     NVMADRH         equ	68	;# 
  1447   000045                     NVMADRU         equ	69	;# 
  1448   000046                     NVMDAT          equ	70	;# 
  1449   000046                     NVMDATL         equ	70	;# 
  1450   000047                     NVMDATH         equ	71	;# 
  1451   000048                     VREGCON         equ	72	;# 
  1452   000049                     BORCON          equ	73	;# 
  1453   00004A                     HLVDCON0        equ	74	;# 
  1454   00004B                     HLVDCON1        equ	75	;# 
  1455   00004C                     ZCDCON          equ	76	;# 
  1456   000060                     PMD0            equ	96	;# 
  1457   000061                     PMD1            equ	97	;# 
  1458   000062                     PMD2            equ	98	;# 
  1459   000063                     PMD3            equ	99	;# 
  1460   000064                     PMD4            equ	100	;# 
  1461   000065                     PMD5            equ	101	;# 
  1462   000066                     PMD6            equ	102	;# 
  1463   000067                     PMD7            equ	103	;# 
  1464   000068                     PMD8            equ	104	;# 
  1465   00006A                     MD1CON0         equ	106	;# 
  1466   00006B                     MD1CON1         equ	107	;# 
  1467   00006C                     MD1SRC          equ	108	;# 
  1468   00006D                     MD1CARL         equ	109	;# 
  1469   00006E                     MD1CARH         equ	110	;# 
  1470   00006F                     CMOUT           equ	111	;# 
  1471   000070                     CM1CON0         equ	112	;# 
  1472   000071                     CM1CON1         equ	113	;# 
  1473   000072                     CM1NCH          equ	114	;# 
  1474   000073                     CM1PCH          equ	115	;# 
  1475   000074                     CM2CON0         equ	116	;# 
  1476   000075                     CM2CON1         equ	117	;# 
  1477   000076                     CM2NCH          equ	118	;# 
  1478   000077                     CM2PCH          equ	119	;# 
  1479   000078                     WDTCON0         equ	120	;# 
  1480   000079                     WDTCON1         equ	121	;# 
  1481   00007A                     WDTPSL          equ	122	;# 
  1482   00007B                     WDTPSH          equ	123	;# 
  1483   00007C                     WDTTMR          equ	124	;# 
  1484   00007D                     DAC1DAT         equ	125	;# 
  1485   00007D                     DAC1DATL        equ	125	;# 
  1486   00007F                     DAC1CON         equ	127	;# 
  1487   000080                     SPI1RXB         equ	128	;# 
  1488   000081                     SPI1TXB         equ	129	;# 
  1489   000082                     SPI1TCNT        equ	130	;# 
  1490   000082                     SPI1TCNTL       equ	130	;# 
  1491   000083                     SPI1TCNTH       equ	131	;# 
  1492   000084                     SPI1CON0        equ	132	;# 
  1493   000085                     SPI1CON1        equ	133	;# 
  1494   000086                     SPI1CON2        equ	134	;# 
  1495   000087                     SPI1STATUS      equ	135	;# 
  1496   000088                     SPI1TWIDTH      equ	136	;# 
  1497   000089                     SPI1BAUD        equ	137	;# 
  1498   00008A                     SPI1INTF        equ	138	;# 
  1499   00008B                     SPI1INTE        equ	139	;# 
  1500   00008C                     SPI1CLK         equ	140	;# 
  1501   00008D                     SPI2RXB         equ	141	;# 
  1502   00008E                     SPI2TXB         equ	142	;# 
  1503   00008F                     SPI2TCNT        equ	143	;# 
  1504   00008F                     SPI2TCNTL       equ	143	;# 
  1505   000090                     SPI2TCNTH       equ	144	;# 
  1506   000091                     SPI2CON0        equ	145	;# 
  1507   000092                     SPI2CON1        equ	146	;# 
  1508   000093                     SPI2CON2        equ	147	;# 
  1509   000094                     SPI2STATUS      equ	148	;# 
  1510   000095                     SPI2TWIDTH      equ	149	;# 
  1511   000096                     SPI2BAUD        equ	150	;# 
  1512   000097                     SPI2INTF        equ	151	;# 
  1513   000098                     SPI2INTE        equ	152	;# 
  1514   000099                     SPI2CLK         equ	153	;# 
  1515   0000AC                     ACTCON          equ	172	;# 
  1516   0000AD                     OSCCON1         equ	173	;# 
  1517   0000AE                     OSCCON2         equ	174	;# 
  1518   0000AF                     OSCCON3         equ	175	;# 
  1519   0000B0                     OSCTUNE         equ	176	;# 
  1520   0000B1                     OSCFRQ          equ	177	;# 
  1521   0000B1                     OSCFREQ         equ	177	;# 
  1522   0000B2                     OSCSTAT         equ	178	;# 
  1523   0000B2                     OSCSTAT1        equ	178	;# 
  1524   0000B3                     OSCEN           equ	179	;# 
  1525   0000B4                     PRLOCK          equ	180	;# 
  1526   0000B5                     SCANPR          equ	181	;# 
  1527   0000B6                     DMA1PR          equ	182	;# 
  1528   0000B7                     DMA2PR          equ	183	;# 
  1529   0000B8                     DMA3PR          equ	184	;# 
  1530   0000B9                     DMA4PR          equ	185	;# 
  1531   0000BA                     DMA5PR          equ	186	;# 
  1532   0000BB                     DMA6PR          equ	187	;# 
  1533   0000BC                     DMA7PR          equ	188	;# 
  1534   0000BD                     DMA8PR          equ	189	;# 
  1535   0000BE                     MAINPR          equ	190	;# 
  1536   0000BF                     ISRPR           equ	191	;# 
  1537   0000D4                     CLCDATA         equ	212	;# 
  1538   0000D5                     CLCSELECT       equ	213	;# 
  1539   0000D6                     CLCnCON         equ	214	;# 
  1540   0000D7                     CLCnPOL         equ	215	;# 
  1541   0000D8                     CLCnSEL0        equ	216	;# 
  1542   0000D9                     CLCnSEL1        equ	217	;# 
  1543   0000DA                     CLCnSEL2        equ	218	;# 
  1544   0000DB                     CLCnSEL3        equ	219	;# 
  1545   0000DC                     CLCnGLS0        equ	220	;# 
  1546   0000DD                     CLCnGLS1        equ	221	;# 
  1547   0000DE                     CLCnGLS2        equ	222	;# 
  1548   0000DF                     CLCnGLS3        equ	223	;# 
  1549   0000E8                     DMASELECT       equ	232	;# 
  1550   0000E9                     DMAnBUF         equ	233	;# 
  1551   0000EA                     DMAnDCNT        equ	234	;# 
  1552   0000EA                     DMAnDCNTL       equ	234	;# 
  1553   0000EB                     DMAnDCNTH       equ	235	;# 
  1554   0000EC                     DMAnDPTR        equ	236	;# 
  1555   0000EC                     DMAnDPTRL       equ	236	;# 
  1556   0000ED                     DMAnDPTRH       equ	237	;# 
  1557   0000EE                     DMAnDSZ         equ	238	;# 
  1558   0000EE                     DMAnDSZL        equ	238	;# 
  1559   0000EF                     DMAnDSZH        equ	239	;# 
  1560   0000F0                     DMAnDSA         equ	240	;# 
  1561   0000F0                     DMAnDSAL        equ	240	;# 
  1562   0000F1                     DMAnDSAH        equ	241	;# 
  1563   0000F2                     DMAnSCNT        equ	242	;# 
  1564   0000F2                     DMAnSCNTL       equ	242	;# 
  1565   0000F3                     DMAnSCNTH       equ	243	;# 
  1566   0000F4                     DMAnSPTR        equ	244	;# 
  1567   0000F4                     DMAnSPTRL       equ	244	;# 
  1568   0000F5                     DMAnSPTRH       equ	245	;# 
  1569   0000F6                     DMAnSPTRU       equ	246	;# 
  1570   0000F7                     DMAnSSZ         equ	247	;# 
  1571   0000F7                     DMAnSSZL        equ	247	;# 
  1572   0000F8                     DMAnSSZH        equ	248	;# 
  1573   0000F9                     DMAnSSA         equ	249	;# 
  1574   0000F9                     DMAnSSAL        equ	249	;# 
  1575   0000FA                     DMAnSSAH        equ	250	;# 
  1576   0000FB                     DMAnSSAU        equ	251	;# 
  1577   0000FC                     DMAnCON0        equ	252	;# 
  1578   0000FD                     DMAnCON1        equ	253	;# 
  1579   0000FE                     DMAnAIRQ        equ	254	;# 
  1580   0000FF                     DMAnSIRQ        equ	255	;# 
  1581   000100                     C1CONL          equ	256	;# 
  1582   000101                     C1CONH          equ	257	;# 
  1583   000102                     C1CONU          equ	258	;# 
  1584   000103                     C1CONT          equ	259	;# 
  1585   000104                     C1NBTCFGL       equ	260	;# 
  1586   000105                     C1NBTCFGH       equ	261	;# 
  1587   000106                     C1NBTCFGU       equ	262	;# 
  1588   000107                     C1NBTCFGT       equ	263	;# 
  1589   000108                     C1DBTCFGL       equ	264	;# 
  1590   000109                     C1DBTCFGH       equ	265	;# 
  1591   00010A                     C1DBTCFGU       equ	266	;# 
  1592   00010B                     C1DBTCFGT       equ	267	;# 
  1593   00010C                     C1TDCL          equ	268	;# 
  1594   00010D                     C1TDCH          equ	269	;# 
  1595   00010E                     C1TDCU          equ	270	;# 
  1596   000110                     C1TBC           equ	272	;# 
  1597   000110                     C1TBCL          equ	272	;# 
  1598   000111                     C1TBCH          equ	273	;# 
  1599   000112                     C1TBCU          equ	274	;# 
  1600   000113                     C1TBCT          equ	275	;# 
  1601   000114                     C1TSCONL        equ	276	;# 
  1602   000115                     C1TSCONH        equ	277	;# 
  1603   000116                     C1TSCONU        equ	278	;# 
  1604   000117                     C1TSCONT        equ	279	;# 
  1605   000118                     C1VECL          equ	280	;# 
  1606   000119                     C1VECH          equ	281	;# 
  1607   00011A                     C1VECU          equ	282	;# 
  1608   00011B                     C1VECT          equ	283	;# 
  1609   00011C                     C1INTL          equ	284	;# 
  1610   00011D                     C1INTH          equ	285	;# 
  1611   00011E                     C1INTU          equ	286	;# 
  1612   00011F                     C1INTT          equ	287	;# 
  1613   000120                     C1RXIF          equ	288	;# 
  1614   000120                     C1RXIFL         equ	288	;# 
  1615   000121                     C1RXIFH         equ	289	;# 
  1616   000122                     C1RXIFU         equ	290	;# 
  1617   000123                     C1RXIFT         equ	291	;# 
  1618   000124                     C1TXIF          equ	292	;# 
  1619   000124                     C1TXIFL         equ	292	;# 
  1620   000125                     C1TXIFH         equ	293	;# 
  1621   000126                     C1TXIFU         equ	294	;# 
  1622   000127                     C1TXIFT         equ	295	;# 
  1623   000128                     C1RXOVIF        equ	296	;# 
  1624   000128                     C1RXOVIFL       equ	296	;# 
  1625   000129                     C1RXOVIFH       equ	297	;# 
  1626   00012A                     C1RXOVIFU       equ	298	;# 
  1627   00012B                     C1RXOVIFT       equ	299	;# 
  1628   00012C                     C1TXATIF        equ	300	;# 
  1629   00012C                     C1TXATIFL       equ	300	;# 
  1630   00012D                     C1TXATIFH       equ	301	;# 
  1631   00012E                     C1TXATIFU       equ	302	;# 
  1632   00012F                     C1TXATIFT       equ	303	;# 
  1633   000130                     C1TXREQ         equ	304	;# 
  1634   000130                     C1TXREQL        equ	304	;# 
  1635   000131                     C1TXREQH        equ	305	;# 
  1636   000132                     C1TXREQU        equ	306	;# 
  1637   000133                     C1TXREQT        equ	307	;# 
  1638   000134                     C1TRECL         equ	308	;# 
  1639   000135                     C1TRECH         equ	309	;# 
  1640   000136                     C1TRECU         equ	310	;# 
  1641   000137                     C1TRECT         equ	311	;# 
  1642   000138                     C1BDIAG0L       equ	312	;# 
  1643   000139                     C1BDIAG0H       equ	313	;# 
  1644   00013C                     C1BDIAG1L       equ	316	;# 
  1645   00013D                     C1BDIAG1H       equ	317	;# 
  1646   00013E                     C1BDIAG1U       equ	318	;# 
  1647   00013F                     C1BDIAG1T       equ	319	;# 
  1648   000140                     C1TEFCONL       equ	320	;# 
  1649   000141                     C1TEFCONH       equ	321	;# 
  1650   000142                     C1TEFCONU       equ	322	;# 
  1651   000143                     C1TEFCONT       equ	323	;# 
  1652   000144                     C1TEFSTAL       equ	324	;# 
  1653   000145                     C1TEFSTAH       equ	325	;# 
  1654   000146                     C1TEFSTAU       equ	326	;# 
  1655   000147                     C1TEFSTAT       equ	327	;# 
  1656   000148                     C1TEFUA         equ	328	;# 
  1657   000148                     C1TEFUAL        equ	328	;# 
  1658   000149                     C1TEFUAH        equ	329	;# 
  1659   00014A                     C1TEFUAU        equ	330	;# 
  1660   00014B                     C1TEFUAT        equ	331	;# 
  1661   00014C                     C1FIFOBA        equ	332	;# 
  1662   00014C                     C1FIFOBAL       equ	332	;# 
  1663   00014D                     C1FIFOBAH       equ	333	;# 
  1664   00014E                     C1FIFOBAU       equ	334	;# 
  1665   00014F                     C1FIFOBAT       equ	335	;# 
  1666   000150                     C1TXQCONL       equ	336	;# 
  1667   000151                     C1TXQCONH       equ	337	;# 
  1668   000152                     C1TXQCONU       equ	338	;# 
  1669   000153                     C1TXQCONT       equ	339	;# 
  1670   000154                     C1TXQSTAL       equ	340	;# 
  1671   000155                     C1TXQSTAH       equ	341	;# 
  1672   000156                     C1TXQSTAU       equ	342	;# 
  1673   000157                     C1TXQSTAT       equ	343	;# 
  1674   000158                     C1TXQUA         equ	344	;# 
  1675   000158                     C1TXQUAL        equ	344	;# 
  1676   000159                     C1TXQUAH        equ	345	;# 
  1677   00015A                     C1TXQUAU        equ	346	;# 
  1678   00015B                     C1TXQUAT        equ	347	;# 
  1679   00015C                     C1FIFOCON1      equ	348	;# 
  1680   00015C                     C1FIFOCON1L     equ	348	;# 
  1681   00015D                     C1FIFOCON1H     equ	349	;# 
  1682   00015E                     C1FIFOCON1U     equ	350	;# 
  1683   00015F                     C1FIFOCON1T     equ	351	;# 
  1684   000160                     C1FIFOSTA1      equ	352	;# 
  1685   000160                     C1FIFOSTA1L     equ	352	;# 
  1686   000161                     C1FIFOSTA1H     equ	353	;# 
  1687   000162                     C1FIFOSTA1U     equ	354	;# 
  1688   000163                     C1FIFOSTA1T     equ	355	;# 
  1689   000164                     C1FIFOUA1       equ	356	;# 
  1690   000164                     C1FIFOUA1L      equ	356	;# 
  1691   000165                     C1FIFOUA1H      equ	357	;# 
  1692   000166                     C1FIFOUA1U      equ	358	;# 
  1693   000167                     C1FIFOUA1T      equ	359	;# 
  1694   000168                     C1FIFOCON2      equ	360	;# 
  1695   000168                     C1FIFOCON2L     equ	360	;# 
  1696   000169                     C1FIFOCON2H     equ	361	;# 
  1697   00016A                     C1FIFOCON2U     equ	362	;# 
  1698   00016B                     C1FIFOCON2T     equ	363	;# 
  1699   00016C                     C1FIFOSTA2      equ	364	;# 
  1700   00016C                     C1FIFOSTA2L     equ	364	;# 
  1701   00016D                     C1FIFOSTA2H     equ	365	;# 
  1702   00016E                     C1FIFOSTA2U     equ	366	;# 
  1703   00016F                     C1FIFOSTA2T     equ	367	;# 
  1704   000170                     C1FIFOUA2       equ	368	;# 
  1705   000170                     C1FIFOUA2L      equ	368	;# 
  1706   000171                     C1FIFOUA2H      equ	369	;# 
  1707   000172                     C1FIFOUA2U      equ	370	;# 
  1708   000173                     C1FIFOUA2T      equ	371	;# 
  1709   000174                     C1FIFOCON3      equ	372	;# 
  1710   000174                     C1FIFOCON3L     equ	372	;# 
  1711   000175                     C1FIFOCON3H     equ	373	;# 
  1712   000176                     C1FIFOCON3U     equ	374	;# 
  1713   000177                     C1FIFOCON3T     equ	375	;# 
  1714   000178                     C1FIFOSTA3      equ	376	;# 
  1715   000178                     C1FIFOSTA3L     equ	376	;# 
  1716   000179                     C1FIFOSTA3H     equ	377	;# 
  1717   00017A                     C1FIFOSTA3U     equ	378	;# 
  1718   00017B                     C1FIFOSTA3T     equ	379	;# 
  1719   00017C                     C1FIFOUA3       equ	380	;# 
  1720   00017C                     C1FIFOUA3L      equ	380	;# 
  1721   00017D                     C1FIFOUA3H      equ	381	;# 
  1722   00017E                     C1FIFOUA3U      equ	382	;# 
  1723   00017F                     C1FIFOUA3T      equ	383	;# 
  1724   000180                     C1FLTCON0L      equ	384	;# 
  1725   000181                     C1FLTCON0H      equ	385	;# 
  1726   000182                     C1FLTCON0U      equ	386	;# 
  1727   000183                     C1FLTCON0T      equ	387	;# 
  1728   000184                     C1FLTCON1L      equ	388	;# 
  1729   000185                     C1FLTCON1H      equ	389	;# 
  1730   000186                     C1FLTCON1U      equ	390	;# 
  1731   000187                     C1FLTCON1T      equ	391	;# 
  1732   000188                     C1FLTCON2L      equ	392	;# 
  1733   000189                     C1FLTCON2H      equ	393	;# 
  1734   00018A                     C1FLTCON2U      equ	394	;# 
  1735   00018B                     C1FLTCON2T      equ	395	;# 
  1736   00018C                     C1FLTOBJ0       equ	396	;# 
  1737   00018C                     C1FLTOBJ0L      equ	396	;# 
  1738   00018D                     C1FLTOBJ0H      equ	397	;# 
  1739   00018E                     C1FLTOBJ0U      equ	398	;# 
  1740   00018F                     C1FLTOBJ0T      equ	399	;# 
  1741   000190                     C1MASK0         equ	400	;# 
  1742   000190                     C1MASK0L        equ	400	;# 
  1743   000191                     C1MASK0H        equ	401	;# 
  1744   000192                     C1MASK0U        equ	402	;# 
  1745   000193                     C1MASK0T        equ	403	;# 
  1746   000194                     C1FLTOBJ1       equ	404	;# 
  1747   000194                     C1FLTOBJ1L      equ	404	;# 
  1748   000195                     C1FLTOBJ1H      equ	405	;# 
  1749   000196                     C1FLTOBJ1U      equ	406	;# 
  1750   000197                     C1FLTOBJ1T      equ	407	;# 
  1751   000198                     C1MASK1         equ	408	;# 
  1752   000198                     C1MASK1L        equ	408	;# 
  1753   000199                     C1MASK1H        equ	409	;# 
  1754   00019A                     C1MASK1U        equ	410	;# 
  1755   00019B                     C1MASK1T        equ	411	;# 
  1756   00019C                     C1FLTOBJ2       equ	412	;# 
  1757   00019C                     C1FLTOBJ2L      equ	412	;# 
  1758   00019D                     C1FLTOBJ2H      equ	413	;# 
  1759   00019E                     C1FLTOBJ2U      equ	414	;# 
  1760   00019F                     C1FLTOBJ2T      equ	415	;# 
  1761   0001A0                     C1MASK2         equ	416	;# 
  1762   0001A0                     C1MASK2L        equ	416	;# 
  1763   0001A1                     C1MASK2H        equ	417	;# 
  1764   0001A2                     C1MASK2U        equ	418	;# 
  1765   0001A3                     C1MASK2T        equ	419	;# 
  1766   0001A4                     C1FLTOBJ3       equ	420	;# 
  1767   0001A4                     C1FLTOBJ3L      equ	420	;# 
  1768   0001A5                     C1FLTOBJ3H      equ	421	;# 
  1769   0001A6                     C1FLTOBJ3U      equ	422	;# 
  1770   0001A7                     C1FLTOBJ3T      equ	423	;# 
  1771   0001A8                     C1MASK3         equ	424	;# 
  1772   0001A8                     C1MASK3L        equ	424	;# 
  1773   0001A9                     C1MASK3H        equ	425	;# 
  1774   0001AA                     C1MASK3U        equ	426	;# 
  1775   0001AB                     C1MASK3T        equ	427	;# 
  1776   0001AC                     C1FLTOBJ4       equ	428	;# 
  1777   0001AC                     C1FLTOBJ4L      equ	428	;# 
  1778   0001AD                     C1FLTOBJ4H      equ	429	;# 
  1779   0001AE                     C1FLTOBJ4U      equ	430	;# 
  1780   0001AF                     C1FLTOBJ4T      equ	431	;# 
  1781   0001B0                     C1MASK4         equ	432	;# 
  1782   0001B0                     C1MASK4L        equ	432	;# 
  1783   0001B1                     C1MASK4H        equ	433	;# 
  1784   0001B2                     C1MASK4U        equ	434	;# 
  1785   0001B3                     C1MASK4T        equ	435	;# 
  1786   0001B4                     C1FLTOBJ5       equ	436	;# 
  1787   0001B4                     C1FLTOBJ5L      equ	436	;# 
  1788   0001B5                     C1FLTOBJ5H      equ	437	;# 
  1789   0001B6                     C1FLTOBJ5U      equ	438	;# 
  1790   0001B7                     C1FLTOBJ5T      equ	439	;# 
  1791   0001B8                     C1MASK5         equ	440	;# 
  1792   0001B8                     C1MASK5L        equ	440	;# 
  1793   0001B9                     C1MASK5H        equ	441	;# 
  1794   0001BA                     C1MASK5U        equ	442	;# 
  1795   0001BB                     C1MASK5T        equ	443	;# 
  1796   0001BC                     C1FLTOBJ6       equ	444	;# 
  1797   0001BC                     C1FLTOBJ6L      equ	444	;# 
  1798   0001BD                     C1FLTOBJ6H      equ	445	;# 
  1799   0001BE                     C1FLTOBJ6U      equ	446	;# 
  1800   0001BF                     C1FLTOBJ6T      equ	447	;# 
  1801   0001C0                     C1MASK6         equ	448	;# 
  1802   0001C0                     C1MASK6L        equ	448	;# 
  1803   0001C1                     C1MASK6H        equ	449	;# 
  1804   0001C2                     C1MASK6U        equ	450	;# 
  1805   0001C3                     C1MASK6T        equ	451	;# 
  1806   0001C4                     C1FLTOBJ7       equ	452	;# 
  1807   0001C4                     C1FLTOBJ7L      equ	452	;# 
  1808   0001C5                     C1FLTOBJ7H      equ	453	;# 
  1809   0001C6                     C1FLTOBJ7U      equ	454	;# 
  1810   0001C7                     C1FLTOBJ7T      equ	455	;# 
  1811   0001C8                     C1MASK7         equ	456	;# 
  1812   0001C8                     C1MASK7L        equ	456	;# 
  1813   0001C9                     C1MASK7H        equ	457	;# 
  1814   0001CA                     C1MASK7U        equ	458	;# 
  1815   0001CB                     C1MASK7T        equ	459	;# 
  1816   0001CC                     C1FLTOBJ8       equ	460	;# 
  1817   0001CC                     C1FLTOBJ8L      equ	460	;# 
  1818   0001CD                     C1FLTOBJ8H      equ	461	;# 
  1819   0001CE                     C1FLTOBJ8U      equ	462	;# 
  1820   0001CF                     C1FLTOBJ8T      equ	463	;# 
  1821   0001D0                     C1MASK8         equ	464	;# 
  1822   0001D0                     C1MASK8L        equ	464	;# 
  1823   0001D1                     C1MASK8H        equ	465	;# 
  1824   0001D2                     C1MASK8U        equ	466	;# 
  1825   0001D3                     C1MASK8T        equ	467	;# 
  1826   0001D4                     C1FLTOBJ9       equ	468	;# 
  1827   0001D4                     C1FLTOBJ9L      equ	468	;# 
  1828   0001D5                     C1FLTOBJ9H      equ	469	;# 
  1829   0001D6                     C1FLTOBJ9U      equ	470	;# 
  1830   0001D7                     C1FLTOBJ9T      equ	471	;# 
  1831   0001D8                     C1MASK9         equ	472	;# 
  1832   0001D8                     C1MASK9L        equ	472	;# 
  1833   0001D9                     C1MASK9H        equ	473	;# 
  1834   0001DA                     C1MASK9U        equ	474	;# 
  1835   0001DB                     C1MASK9T        equ	475	;# 
  1836   0001DC                     C1FLTOBJ10      equ	476	;# 
  1837   0001DC                     C1FLTOBJ10L     equ	476	;# 
  1838   0001DD                     C1FLTOBJ10H     equ	477	;# 
  1839   0001DE                     C1FLTOBJ10U     equ	478	;# 
  1840   0001DF                     C1FLTOBJ10T     equ	479	;# 
  1841   0001E0                     C1MASK10        equ	480	;# 
  1842   0001E0                     C1MASK10L       equ	480	;# 
  1843   0001E1                     C1MASK10H       equ	481	;# 
  1844   0001E2                     C1MASK10U       equ	482	;# 
  1845   0001E3                     C1MASK10T       equ	483	;# 
  1846   0001E4                     C1FLTOBJ11      equ	484	;# 
  1847   0001E4                     C1FLTOBJ11L     equ	484	;# 
  1848   0001E5                     C1FLTOBJ11H     equ	485	;# 
  1849   0001E6                     C1FLTOBJ11U     equ	486	;# 
  1850   0001E7                     C1FLTOBJ11T     equ	487	;# 
  1851   0001E8                     C1MASK11        equ	488	;# 
  1852   0001E8                     C1MASK11L       equ	488	;# 
  1853   0001E9                     C1MASK11H       equ	489	;# 
  1854   0001EA                     C1MASK11U       equ	490	;# 
  1855   0001EB                     C1MASK11T       equ	491	;# 
  1856   000200                     PPSLOCK         equ	512	;# 
  1857   000201                     RA0PPS          equ	513	;# 
  1858   000202                     RA1PPS          equ	514	;# 
  1859   000203                     RA2PPS          equ	515	;# 
  1860   000204                     RA3PPS          equ	516	;# 
  1861   000205                     RA4PPS          equ	517	;# 
  1862   000206                     RA5PPS          equ	518	;# 
  1863   000207                     RA6PPS          equ	519	;# 
  1864   000208                     RA7PPS          equ	520	;# 
  1865   000209                     RB0PPS          equ	521	;# 
  1866   00020A                     RB1PPS          equ	522	;# 
  1867   00020B                     RB2PPS          equ	523	;# 
  1868   00020C                     RB3PPS          equ	524	;# 
  1869   00020D                     RB4PPS          equ	525	;# 
  1870   00020E                     RB5PPS          equ	526	;# 
  1871   00020F                     RB6PPS          equ	527	;# 
  1872   000210                     RB7PPS          equ	528	;# 
  1873   000211                     RC0PPS          equ	529	;# 
  1874   000212                     RC1PPS          equ	530	;# 
  1875   000213                     RC2PPS          equ	531	;# 
  1876   000214                     RC3PPS          equ	532	;# 
  1877   000215                     RC4PPS          equ	533	;# 
  1878   000216                     RC5PPS          equ	534	;# 
  1879   000217                     RC6PPS          equ	535	;# 
  1880   000218                     RC7PPS          equ	536	;# 
  1881   00023D                     CANRXPPS        equ	573	;# 
  1882   00023E                     INT0PPS         equ	574	;# 
  1883   00023F                     INT1PPS         equ	575	;# 
  1884   000240                     INT2PPS         equ	576	;# 
  1885   000241                     T0CKIPPS        equ	577	;# 
  1886   000242                     T1CKIPPS        equ	578	;# 
  1887   000243                     T1GPPS          equ	579	;# 
  1888   000244                     T3CKIPPS        equ	580	;# 
  1889   000245                     T3GPPS          equ	581	;# 
  1890   000246                     T5CKIPPS        equ	582	;# 
  1891   000247                     T5GPPS          equ	583	;# 
  1892   000248                     T2INPPS         equ	584	;# 
  1893   000249                     T4INPPS         equ	585	;# 
  1894   00024A                     T6INPPS         equ	586	;# 
  1895   00024B                     TUIN0PPS        equ	587	;# 
  1896   00024C                     TUIN1PPS        equ	588	;# 
  1897   00024F                     CCP1PPS         equ	591	;# 
  1898   000250                     CCP2PPS         equ	592	;# 
  1899   000251                     CCP3PPS         equ	593	;# 
  1900   000253                     PWM1ERSPPS      equ	595	;# 
  1901   000254                     PWM2ERSPPS      equ	596	;# 
  1902   000255                     PWM3ERSPPS      equ	597	;# 
  1903   000256                     PWM4ERSPPS      equ	598	;# 
  1904   000257                     PWMIN0PPS       equ	599	;# 
  1905   000258                     PWMIN1PPS       equ	600	;# 
  1906   000259                     SMT1WINPPS      equ	601	;# 
  1907   00025A                     SMT1SIGPPS      equ	602	;# 
  1908   00025B                     CWG1PPS         equ	603	;# 
  1909   00025B                     CWG1INPPS       equ	603	;# 
  1910   00025C                     CWG2PPS         equ	604	;# 
  1911   00025C                     CWG2INPPS       equ	604	;# 
  1912   00025D                     CWG3PPS         equ	605	;# 
  1913   00025D                     CWG3INPPS       equ	605	;# 
  1914   00025E                     MD1CARLPPS      equ	606	;# 
  1915   00025E                     MDCARLPPS       equ	606	;# 
  1916   00025F                     MD1CARHPPS      equ	607	;# 
  1917   00025F                     MDCARHPPS       equ	607	;# 
  1918   000260                     MD1SRCPPS       equ	608	;# 
  1919   000260                     MDSRCPPS        equ	608	;# 
  1920   000261                     CLCIN0PPS       equ	609	;# 
  1921   000262                     CLCIN1PPS       equ	610	;# 
  1922   000263                     CLCIN2PPS       equ	611	;# 
  1923   000264                     CLCIN3PPS       equ	612	;# 
  1924   000265                     CLCIN4PPS       equ	613	;# 
  1925   000266                     CLCIN5PPS       equ	614	;# 
  1926   000267                     CLCIN6PPS       equ	615	;# 
  1927   000268                     CLCIN7PPS       equ	616	;# 
  1928   000269                     ADACTPPS        equ	617	;# 
  1929   00026A                     SPI1SCKPPS      equ	618	;# 
  1930   00026B                     SPI1SDIPPS      equ	619	;# 
  1931   00026C                     SPI1SSPPS       equ	620	;# 
  1932   00026D                     SPI2SCKPPS      equ	621	;# 
  1933   00026E                     SPI2SDIPPS      equ	622	;# 
  1934   00026F                     SPI2SSPPS       equ	623	;# 
  1935   000270                     I2C1SDAPPS      equ	624	;# 
  1936   000271                     I2C1SCLPPS      equ	625	;# 
  1937   000272                     U1RXPPS         equ	626	;# 
  1938   000273                     U1CTSPPS        equ	627	;# 
  1939   000274                     U2RXPPS         equ	628	;# 
  1940   000275                     U2CTSPPS        equ	629	;# 
  1941   000276                     U3RXPPS         equ	630	;# 
  1942   000277                     U3CTSPPS        equ	631	;# 
  1943   000278                     U4RXPPS         equ	632	;# 
  1944   000279                     U4CTSPPS        equ	633	;# 
  1945   00027A                     U5RXPPS         equ	634	;# 
  1946   00027B                     U5CTSPPS        equ	635	;# 
  1947   000286                     RC4I2C          equ	646	;# 
  1948   000287                     RC3I2C          equ	647	;# 
  1949   000288                     RB2I2C          equ	648	;# 
  1950   000289                     RB1I2C          equ	649	;# 
  1951   00028A                     I2C1RXB         equ	650	;# 
  1952   00028B                     I2C1TXB         equ	651	;# 
  1953   00028C                     I2C1CNTL        equ	652	;# 
  1954   00028D                     I2C1CNTH        equ	653	;# 
  1955   00028E                     I2C1ADB0        equ	654	;# 
  1956   00028F                     I2C1ADB1        equ	655	;# 
  1957   000290                     I2C1ADR0        equ	656	;# 
  1958   000291                     I2C1ADR1        equ	657	;# 
  1959   000292                     I2C1ADR2        equ	658	;# 
  1960   000293                     I2C1ADR3        equ	659	;# 
  1961   000294                     I2C1CON0        equ	660	;# 
  1962   000295                     I2C1CON1        equ	661	;# 
  1963   000296                     I2C1CON2        equ	662	;# 
  1964   000297                     I2C1ERR         equ	663	;# 
  1965   000298                     I2C1STAT0       equ	664	;# 
  1966   000299                     I2C1STAT1       equ	665	;# 
  1967   00029A                     I2C1PIR         equ	666	;# 
  1968   00029B                     I2C1PIE         equ	667	;# 
  1969   00029C                     I2C1BTO         equ	668	;# 
  1970   00029D                     I2C1BAUD        equ	669	;# 
  1971   00029E                     I2C1CLK         equ	670	;# 
  1972   00029F                     I2C1BTOC        equ	671	;# 
  1973   0002A1                     U1RXB           equ	673	;# 
  1974   0002A1                     U1RXBL          equ	673	;# 
  1975   0002A2                     U1RXCHK         equ	674	;# 
  1976   0002A3                     U1TXB           equ	675	;# 
  1977   0002A3                     U1TXBL          equ	675	;# 
  1978   0002A4                     U1TXCHK         equ	676	;# 
  1979   0002A5                     U1P1            equ	677	;# 
  1980   0002A5                     U1P1L           equ	677	;# 
  1981   0002A6                     U1P1H           equ	678	;# 
  1982   0002A7                     U1P2            equ	679	;# 
  1983   0002A7                     U1P2L           equ	679	;# 
  1984   0002A8                     U1P2H           equ	680	;# 
  1985   0002A9                     U1P3            equ	681	;# 
  1986   0002A9                     U1P3L           equ	681	;# 
  1987   0002AA                     U1P3H           equ	682	;# 
  1988   0002AB                     U1CON0          equ	683	;# 
  1989   0002AC                     U1CON1          equ	684	;# 
  1990   0002AD                     U1CON2          equ	685	;# 
  1991   0002AE                     U1BRG           equ	686	;# 
  1992   0002AE                     U1BRGL          equ	686	;# 
  1993   0002AF                     U1BRGH          equ	687	;# 
  1994   0002B0                     U1FIFO          equ	688	;# 
  1995   0002B1                     U1UIR           equ	689	;# 
  1996   0002B2                     U1ERRIR         equ	690	;# 
  1997   0002B3                     U1ERRIE         equ	691	;# 
  1998   0002B4                     U2RXB           equ	692	;# 
  1999   0002B4                     U2RXBL          equ	692	;# 
  2000   0002B5                     U2RXCHK         equ	693	;# 
  2001   0002B6                     U2TXB           equ	694	;# 
  2002   0002B6                     U2TXBL          equ	694	;# 
  2003   0002B7                     U2TXCHK         equ	695	;# 
  2004   0002B8                     U2P1            equ	696	;# 
  2005   0002B8                     U2P1L           equ	696	;# 
  2006   0002B9                     U2P1H           equ	697	;# 
  2007   0002BA                     U2P2            equ	698	;# 
  2008   0002BA                     U2P2L           equ	698	;# 
  2009   0002BB                     U2P2H           equ	699	;# 
  2010   0002BC                     U2P3            equ	700	;# 
  2011   0002BC                     U2P3L           equ	700	;# 
  2012   0002BD                     U2P3H           equ	701	;# 
  2013   0002BE                     U2CON0          equ	702	;# 
  2014   0002BF                     U2CON1          equ	703	;# 
  2015   0002C0                     U2CON2          equ	704	;# 
  2016   0002C1                     U2BRG           equ	705	;# 
  2017   0002C1                     U2BRGL          equ	705	;# 
  2018   0002C2                     U2BRGH          equ	706	;# 
  2019   0002C3                     U2FIFO          equ	707	;# 
  2020   0002C4                     U2UIR           equ	708	;# 
  2021   0002C5                     U2ERRIR         equ	709	;# 
  2022   0002C6                     U2ERRIE         equ	710	;# 
  2023   0002C7                     U3RXB           equ	711	;# 
  2024   0002C7                     U3RXBL          equ	711	;# 
  2025   0002C9                     U3TXB           equ	713	;# 
  2026   0002C9                     U3TXBL          equ	713	;# 
  2027   0002CB                     U3P1            equ	715	;# 
  2028   0002CB                     U3P1L           equ	715	;# 
  2029   0002CD                     U3P2            equ	717	;# 
  2030   0002CD                     U3P2L           equ	717	;# 
  2031   0002CF                     U3P3            equ	719	;# 
  2032   0002CF                     U3P3L           equ	719	;# 
  2033   0002D1                     U3CON0          equ	721	;# 
  2034   0002D2                     U3CON1          equ	722	;# 
  2035   0002D3                     U3CON2          equ	723	;# 
  2036   0002D4                     U3BRG           equ	724	;# 
  2037   0002D4                     U3BRGL          equ	724	;# 
  2038   0002D5                     U3BRGH          equ	725	;# 
  2039   0002D6                     U3FIFO          equ	726	;# 
  2040   0002D7                     U3UIR           equ	727	;# 
  2041   0002D8                     U3ERRIR         equ	728	;# 
  2042   0002D9                     U3ERRIE         equ	729	;# 
  2043   0002DA                     U4RXB           equ	730	;# 
  2044   0002DA                     U4RXBL          equ	730	;# 
  2045   0002DC                     U4TXB           equ	732	;# 
  2046   0002DC                     U4TXBL          equ	732	;# 
  2047   0002DE                     U4P1            equ	734	;# 
  2048   0002DE                     U4P1L           equ	734	;# 
  2049   0002E0                     U4P2            equ	736	;# 
  2050   0002E0                     U4P2L           equ	736	;# 
  2051   0002E2                     U4P3            equ	738	;# 
  2052   0002E2                     U4P3L           equ	738	;# 
  2053   0002E4                     U4CON0          equ	740	;# 
  2054   0002E5                     U4CON1          equ	741	;# 
  2055   0002E6                     U4CON2          equ	742	;# 
  2056   0002E7                     U4BRG           equ	743	;# 
  2057   0002E7                     U4BRGL          equ	743	;# 
  2058   0002E8                     U4BRGH          equ	744	;# 
  2059   0002E9                     U4FIFO          equ	745	;# 
  2060   0002EA                     U4UIR           equ	746	;# 
  2061   0002EB                     U4ERRIR         equ	747	;# 
  2062   0002EC                     U4ERRIE         equ	748	;# 
  2063   0002ED                     U5RXB           equ	749	;# 
  2064   0002ED                     U5RXBL          equ	749	;# 
  2065   0002EF                     U5TXB           equ	751	;# 
  2066   0002EF                     U5TXBL          equ	751	;# 
  2067   0002F1                     U5P1            equ	753	;# 
  2068   0002F1                     U5P1L           equ	753	;# 
  2069   0002F3                     U5P2            equ	755	;# 
  2070   0002F3                     U5P2L           equ	755	;# 
  2071   0002F5                     U5P3            equ	757	;# 
  2072   0002F5                     U5P3L           equ	757	;# 
  2073   0002F7                     U5CON0          equ	759	;# 
  2074   0002F8                     U5CON1          equ	760	;# 
  2075   0002F9                     U5CON2          equ	761	;# 
  2076   0002FA                     U5BRG           equ	762	;# 
  2077   0002FA                     U5BRGL          equ	762	;# 
  2078   0002FB                     U5BRGH          equ	763	;# 
  2079   0002FC                     U5FIFO          equ	764	;# 
  2080   0002FD                     U5UIR           equ	765	;# 
  2081   0002FE                     U5ERRIR         equ	766	;# 
  2082   0002FF                     U5ERRIE         equ	767	;# 
  2083   000300                     SMT1TMR         equ	768	;# 
  2084   000300                     SMT1TMRL        equ	768	;# 
  2085   000301                     SMT1TMRH        equ	769	;# 
  2086   000302                     SMT1TMRU        equ	770	;# 
  2087   000303                     SMT1CPR         equ	771	;# 
  2088   000303                     SMT1CPRL        equ	771	;# 
  2089   000304                     SMT1CPRH        equ	772	;# 
  2090   000305                     SMT1CPRU        equ	773	;# 
  2091   000306                     SMT1CPW         equ	774	;# 
  2092   000306                     SMT1CPWL        equ	774	;# 
  2093   000307                     SMT1CPWH        equ	775	;# 
  2094   000308                     SMT1CPWU        equ	776	;# 
  2095   000309                     SMT1PR          equ	777	;# 
  2096   000309                     SMT1PRL         equ	777	;# 
  2097   00030A                     SMT1PRH         equ	778	;# 
  2098   00030B                     SMT1PRU         equ	779	;# 
  2099   00030C                     SMT1CON0        equ	780	;# 
  2100   00030D                     SMT1CON1        equ	781	;# 
  2101   00030E                     SMT1STAT        equ	782	;# 
  2102   00030F                     SMT1CLK         equ	783	;# 
  2103   000310                     SMT1SIG         equ	784	;# 
  2104   000311                     SMT1WIN         equ	785	;# 
  2105   000318                     TMR0L           equ	792	;# 
  2106   000318                     TMR0            equ	792	;# 
  2107   000319                     TMR0H           equ	793	;# 
  2108   000319                     PR0             equ	793	;# 
  2109   00031A                     T0CON0          equ	794	;# 
  2110   00031B                     T0CON1          equ	795	;# 
  2111   00031C                     TMR1            equ	796	;# 
  2112   00031C                     TMR1L           equ	796	;# 
  2113   00031D                     TMR1H           equ	797	;# 
  2114   00031E                     T1CON           equ	798	;# 
  2115   00031E                     TMR1CON         equ	798	;# 
  2116   00031F                     T1GCON          equ	799	;# 
  2117   00031F                     TMR1GCON        equ	799	;# 
  2118   000320                     T1GATE          equ	800	;# 
  2119   000320                     TMR1GATE        equ	800	;# 
  2120   000321                     T1CLK           equ	801	;# 
  2121   000321                     TMR1CLK         equ	801	;# 
  2122   000321                     PR1             equ	801	;# 
  2123   000322                     T2TMR           equ	802	;# 
  2124   000322                     TMR2            equ	802	;# 
  2125   000323                     T2PR            equ	803	;# 
  2126   000323                     PR2             equ	803	;# 
  2127   000324                     T2CON           equ	804	;# 
  2128   000325                     T2HLT           equ	805	;# 
  2129   000326                     T2CLKCON        equ	806	;# 
  2130   000326                     T2CLK           equ	806	;# 
  2131   000327                     T2RST           equ	807	;# 
  2132   000328                     TMR3            equ	808	;# 
  2133   000328                     TMR3L           equ	808	;# 
  2134   000329                     TMR3H           equ	809	;# 
  2135   00032A                     T3CON           equ	810	;# 
  2136   00032A                     TMR3CON         equ	810	;# 
  2137   00032B                     T3GCON          equ	811	;# 
  2138   00032B                     TMR3GCON        equ	811	;# 
  2139   00032C                     T3GATE          equ	812	;# 
  2140   00032C                     TMR3GATE        equ	812	;# 
  2141   00032D                     T3CLK           equ	813	;# 
  2142   00032D                     TMR3CLK         equ	813	;# 
  2143   00032D                     PR3             equ	813	;# 
  2144   00032E                     T4TMR           equ	814	;# 
  2145   00032E                     TMR4            equ	814	;# 
  2146   00032F                     T4PR            equ	815	;# 
  2147   00032F                     PR4             equ	815	;# 
  2148   000330                     T4CON           equ	816	;# 
  2149   000331                     T4HLT           equ	817	;# 
  2150   000332                     T4CLKCON        equ	818	;# 
  2151   000332                     T4CLK           equ	818	;# 
  2152   000333                     T4RST           equ	819	;# 
  2153   000334                     TMR5            equ	820	;# 
  2154   000334                     TMR5L           equ	820	;# 
  2155   000335                     TMR5H           equ	821	;# 
  2156   000336                     T5CON           equ	822	;# 
  2157   000336                     TMR5CON         equ	822	;# 
  2158   000337                     T5GCON          equ	823	;# 
  2159   000337                     TMR5GCON        equ	823	;# 
  2160   000338                     T5GATE          equ	824	;# 
  2161   000338                     TMR5GATE        equ	824	;# 
  2162   000339                     T5CLK           equ	825	;# 
  2163   000339                     TMR5CLK         equ	825	;# 
  2164   000339                     PR5             equ	825	;# 
  2165   00033A                     T6TMR           equ	826	;# 
  2166   00033A                     TMR6            equ	826	;# 
  2167   00033B                     T6PR            equ	827	;# 
  2168   00033B                     PR6             equ	827	;# 
  2169   00033C                     T6CON           equ	828	;# 
  2170   00033D                     T6HLT           equ	829	;# 
  2171   00033E                     T6CLKCON        equ	830	;# 
  2172   00033E                     T6CLK           equ	830	;# 
  2173   00033F                     T6RST           equ	831	;# 
  2174   000340                     CCPR1           equ	832	;# 
  2175   000340                     CCPR1L          equ	832	;# 
  2176   000341                     CCPR1H          equ	833	;# 
  2177   000342                     CCP1CON         equ	834	;# 
  2178   000343                     CCP1CAP         equ	835	;# 
  2179   000344                     CCPR2           equ	836	;# 
  2180   000344                     CCPR2L          equ	836	;# 
  2181   000345                     CCPR2H          equ	837	;# 
  2182   000346                     CCP2CON         equ	838	;# 
  2183   000347                     CCP2CAP         equ	839	;# 
  2184   000348                     CCPR3           equ	840	;# 
  2185   000348                     CCPR3L          equ	840	;# 
  2186   000349                     CCPR3H          equ	841	;# 
  2187   00034A                     CCP3CON         equ	842	;# 
  2188   00034B                     CCP3CAP         equ	843	;# 
  2189   00034C                     CCPTMRS0        equ	844	;# 
  2190   00034F                     CRCDATA         equ	847	;# 
  2191   00034F                     CRCDATAL        equ	847	;# 
  2192   000350                     CRCDATAH        equ	848	;# 
  2193   000351                     CRCDATAU        equ	849	;# 
  2194   000352                     CRCDATAT        equ	850	;# 
  2195   000353                     CRCOUT          equ	851	;# 
  2196   000353                     CRCSHFT         equ	851	;# 
  2197   000353                     CRCXOR          equ	851	;# 
  2198   000353                     CRCOUTL         equ	851	;# 
  2199   000353                     CRCSHFTL        equ	851	;# 
  2200   000353                     CRCSHIFTL       equ	851	;# 
  2201   000353                     CRCXORL         equ	851	;# 
  2202   000354                     CRCOUTH         equ	852	;# 
  2203   000354                     CRCSHFTH        equ	852	;# 
  2204   000354                     CRCSHIFTH       equ	852	;# 
  2205   000354                     CRCXORH         equ	852	;# 
  2206   000355                     CRCOUTU         equ	853	;# 
  2207   000355                     CRCSHFTU        equ	853	;# 
  2208   000355                     CRCSHIFTU       equ	853	;# 
  2209   000355                     CRCXORU         equ	853	;# 
  2210   000356                     CRCOUTT         equ	854	;# 
  2211   000356                     CRCSHFTT        equ	854	;# 
  2212   000356                     CRCSHIFTT       equ	854	;# 
  2213   000356                     CRCXORT         equ	854	;# 
  2214   000357                     CRCCON0         equ	855	;# 
  2215   000358                     CRCCON1         equ	856	;# 
  2216   000359                     CRCCON2         equ	857	;# 
  2217   00035A                     SCANLADR        equ	858	;# 
  2218   00035A                     SCANLADRL       equ	858	;# 
  2219   00035B                     SCANLADRH       equ	859	;# 
  2220   00035C                     SCANLADRU       equ	860	;# 
  2221   00035D                     SCANHADR        equ	861	;# 
  2222   00035D                     SCANHADRL       equ	861	;# 
  2223   00035E                     SCANHADRH       equ	862	;# 
  2224   00035F                     SCANHADRU       equ	863	;# 
  2225   000360                     SCANCON0        equ	864	;# 
  2226   000361                     SCANTRIG        equ	865	;# 
  2227   000362                     IPR0            equ	866	;# 
  2228   000363                     IPR1            equ	867	;# 
  2229   000364                     IPR2            equ	868	;# 
  2230   000365                     IPR3            equ	869	;# 
  2231   000366                     IPR4            equ	870	;# 
  2232   000367                     IPR5            equ	871	;# 
  2233   000368                     IPR6            equ	872	;# 
  2234   000369                     IPR7            equ	873	;# 
  2235   00036A                     IPR8            equ	874	;# 
  2236   00036B                     IPR9            equ	875	;# 
  2237   00036C                     IPR10           equ	876	;# 
  2238   00036D                     IPR11           equ	877	;# 
  2239   00036E                     IPR12           equ	878	;# 
  2240   00036F                     IPR13           equ	879	;# 
  2241   000370                     IPR14           equ	880	;# 
  2242   000371                     IPR15           equ	881	;# 
  2243   000373                     STATUS_CSHAD    equ	883	;# 
  2244   000374                     WREG_CSHAD      equ	884	;# 
  2245   000375                     BSR_CSHAD       equ	885	;# 
  2246   000376                     SHADCON         equ	886	;# 
  2247   000377                     STATUS_SHAD     equ	887	;# 
  2248   000378                     WREG_SHAD       equ	888	;# 
  2249   000379                     BSR_SHAD        equ	889	;# 
  2250   00037A                     PCLATH_SHAD     equ	890	;# 
  2251   00037B                     PCLATU_SHAD     equ	891	;# 
  2252   00037C                     FSR0SH          equ	892	;# 
  2253   00037C                     FSR0L_SHAD      equ	892	;# 
  2254   00037D                     FSR0H_SHAD      equ	893	;# 
  2255   00037E                     FSR1SH          equ	894	;# 
  2256   00037E                     FSR1L_SHAD      equ	894	;# 
  2257   00037F                     FSR1H_SHAD      equ	895	;# 
  2258   000380                     FSR2SH          equ	896	;# 
  2259   000380                     FSR2L_SHAD      equ	896	;# 
  2260   000381                     FSR2H_SHAD      equ	897	;# 
  2261   000382                     PRODSH          equ	898	;# 
  2262   000382                     PRODL_SHAD      equ	898	;# 
  2263   000383                     PRODH_SHAD      equ	899	;# 
  2264   000387                     TU16ACON0       equ	903	;# 
  2265   000388                     TU16ACON1       equ	904	;# 
  2266   000389                     TU16AHLT        equ	905	;# 
  2267   00038A                     TU16APS         equ	906	;# 
  2268   00038B                     TU16ATMR        equ	907	;# 
  2269   00038B                     TU16ACR         equ	907	;# 
  2270   00038B                     TU16ATMRL       equ	907	;# 
  2271   00038B                     TU16ACRL        equ	907	;# 
  2272   00038C                     TU16ATMRH       equ	908	;# 
  2273   00038C                     TU16ACRH        equ	908	;# 
  2274   00038D                     TU16APR         equ	909	;# 
  2275   00038D                     TU16APRL        equ	909	;# 
  2276   00038E                     TU16APRH        equ	910	;# 
  2277   00038F                     TU16ACLK        equ	911	;# 
  2278   000390                     TU16AERS        equ	912	;# 
  2279   000393                     TU16BCON0       equ	915	;# 
  2280   000394                     TU16BCON1       equ	916	;# 
  2281   000395                     TU16BHLT        equ	917	;# 
  2282   000396                     TU16BPS         equ	918	;# 
  2283   000397                     TU16BTMR        equ	919	;# 
  2284   000397                     TU16BCR         equ	919	;# 
  2285   000397                     TU16BTMRL       equ	919	;# 
  2286   000397                     TU16BCRL        equ	919	;# 
  2287   000398                     TU16BTMRH       equ	920	;# 
  2288   000398                     TU16BCRH        equ	920	;# 
  2289   000399                     TU16BPR         equ	921	;# 
  2290   000399                     TU16BPRL        equ	921	;# 
  2291   00039A                     TU16BPRH        equ	922	;# 
  2292   00039B                     TU16BCLK        equ	923	;# 
  2293   00039C                     TU16BERS        equ	924	;# 
  2294   0003BB                     TUCHAIN         equ	955	;# 
  2295   0003BC                     CWG1CLK         equ	956	;# 
  2296   0003BC                     CWG1CLKCON      equ	956	;# 
  2297   0003BD                     CWG1ISM         equ	957	;# 
  2298   0003BE                     CWG1DBR         equ	958	;# 
  2299   0003BF                     CWG1DBF         equ	959	;# 
  2300   0003C0                     CWG1CON0        equ	960	;# 
  2301   0003C1                     CWG1CON1        equ	961	;# 
  2302   0003C2                     CWG1AS0         equ	962	;# 
  2303   0003C3                     CWG1AS1         equ	963	;# 
  2304   0003C4                     CWG1STR         equ	964	;# 
  2305   0003C5                     CWG2CLK         equ	965	;# 
  2306   0003C5                     CWG2CLKCON      equ	965	;# 
  2307   0003C6                     CWG2ISM         equ	966	;# 
  2308   0003C7                     CWG2DBR         equ	967	;# 
  2309   0003C8                     CWG2DBF         equ	968	;# 
  2310   0003C9                     CWG2CON0        equ	969	;# 
  2311   0003CA                     CWG2CON1        equ	970	;# 
  2312   0003CB                     CWG2AS0         equ	971	;# 
  2313   0003CC                     CWG2AS1         equ	972	;# 
  2314   0003CD                     CWG2STR         equ	973	;# 
  2315   0003CE                     CWG3CLK         equ	974	;# 
  2316   0003CE                     CWG3CLKCON      equ	974	;# 
  2317   0003CF                     CWG3ISM         equ	975	;# 
  2318   0003D0                     CWG3DBR         equ	976	;# 
  2319   0003D1                     CWG3DBF         equ	977	;# 
  2320   0003D2                     CWG3CON0        equ	978	;# 
  2321   0003D3                     CWG3CON1        equ	979	;# 
  2322   0003D4                     CWG3AS0         equ	980	;# 
  2323   0003D5                     CWG3AS1         equ	981	;# 
  2324   0003D6                     CWG3STR         equ	982	;# 
  2325   0003D7                     FVRCON          equ	983	;# 
  2326   0003D8                     ADCPCON         equ	984	;# 
  2327   0003D8                     ADCP            equ	984	;# 
  2328   0003D9                     ADLTH           equ	985	;# 
  2329   0003D9                     ADLTHL          equ	985	;# 
  2330   0003DA                     ADLTHH          equ	986	;# 
  2331   0003DB                     ADUTH           equ	987	;# 
  2332   0003DB                     ADUTHL          equ	987	;# 
  2333   0003DC                     ADUTHH          equ	988	;# 
  2334   0003DD                     ADERR           equ	989	;# 
  2335   0003DD                     ADERRL          equ	989	;# 
  2336   0003DE                     ADERRH          equ	990	;# 
  2337   0003DF                     ADSTPT          equ	991	;# 
  2338   0003DF                     ADSTPTL         equ	991	;# 
  2339   0003E0                     ADSTPTH         equ	992	;# 
  2340   0003E1                     ADFLTR          equ	993	;# 
  2341   0003E1                     ADFLTRL         equ	993	;# 
  2342   0003E2                     ADFLTRH         equ	994	;# 
  2343   0003E3                     ADACC           equ	995	;# 
  2344   0003E3                     ADACCL          equ	995	;# 
  2345   0003E4                     ADACCH          equ	996	;# 
  2346   0003E5                     ADACCU          equ	997	;# 
  2347   0003E6                     ADCNT           equ	998	;# 
  2348   0003E7                     ADRPT           equ	999	;# 
  2349   0003E8                     ADPREV          equ	1000	;# 
  2350   0003E8                     ADPREVL         equ	1000	;# 
  2351   0003E9                     ADPREVH         equ	1001	;# 
  2352   0003EA                     ADRES           equ	1002	;# 
  2353   0003EA                     ADRESL          equ	1002	;# 
  2354   0003EB                     ADRESH          equ	1003	;# 
  2355   0003EC                     ADPCH           equ	1004	;# 
  2356   0003EE                     ADACQ           equ	1006	;# 
  2357   0003EE                     ADACQL          equ	1006	;# 
  2358   0003EF                     ADACQH          equ	1007	;# 
  2359   0003F0                     ADCAP           equ	1008	;# 
  2360   0003F1                     ADPRE           equ	1009	;# 
  2361   0003F1                     ADPREL          equ	1009	;# 
  2362   0003F2                     ADPREH          equ	1010	;# 
  2363   0003F3                     ADCON0          equ	1011	;# 
  2364   0003F4                     ADCON1          equ	1012	;# 
  2365   0003F5                     ADCON2          equ	1013	;# 
  2366   0003F6                     ADCON3          equ	1014	;# 
  2367   0003F7                     ADSTAT          equ	1015	;# 
  2368   0003F8                     ADREF           equ	1016	;# 
  2369   0003F9                     ADACT           equ	1017	;# 
  2370   0003FA                     ADCLK           equ	1018	;# 
  2371   0003FB                     ADCTX           equ	1019	;# 
  2372   0003FC                     ADCSEL1         equ	1020	;# 
  2373   0003FD                     ADCSEL2         equ	1021	;# 
  2374   0003FE                     ADCSEL3         equ	1022	;# 
  2375   0003FF                     ADCSEL4         equ	1023	;# 
  2376   000400                     ANSELA          equ	1024	;# 
  2377   000401                     WPUA            equ	1025	;# 
  2378   000402                     ODCONA          equ	1026	;# 
  2379   000403                     SLRCONA         equ	1027	;# 
  2380   000404                     INLVLA          equ	1028	;# 
  2381   000405                     IOCAP           equ	1029	;# 
  2382   000406                     IOCAN           equ	1030	;# 
  2383   000407                     IOCAF           equ	1031	;# 
  2384   000408                     ANSELB          equ	1032	;# 
  2385   000409                     WPUB            equ	1033	;# 
  2386   00040A                     ODCONB          equ	1034	;# 
  2387   00040B                     SLRCONB         equ	1035	;# 
  2388   00040C                     INLVLB          equ	1036	;# 
  2389   00040D                     IOCBP           equ	1037	;# 
  2390   00040E                     IOCBN           equ	1038	;# 
  2391   00040F                     IOCBF           equ	1039	;# 
  2392   000410                     ANSELC          equ	1040	;# 
  2393   000411                     WPUC            equ	1041	;# 
  2394   000412                     ODCONC          equ	1042	;# 
  2395   000413                     SLRCONC         equ	1043	;# 
  2396   000414                     INLVLC          equ	1044	;# 
  2397   000415                     IOCCP           equ	1045	;# 
  2398   000416                     IOCCN           equ	1046	;# 
  2399   000417                     IOCCF           equ	1047	;# 
  2400   000421                     WPUE            equ	1057	;# 
  2401   000424                     INLVLE          equ	1060	;# 
  2402   000425                     IOCEP           equ	1061	;# 
  2403   000426                     IOCEN           equ	1062	;# 
  2404   000427                     IOCEF           equ	1063	;# 
  2405   000440                     NCO1ACC         equ	1088	;# 
  2406   000440                     NCO1ACCL        equ	1088	;# 
  2407   000441                     NCO1ACCH        equ	1089	;# 
  2408   000442                     NCO1ACCU        equ	1090	;# 
  2409   000443                     NCO1INC         equ	1091	;# 
  2410   000443                     NCO1INCL        equ	1091	;# 
  2411   000444                     NCO1INCH        equ	1092	;# 
  2412   000445                     NCO1INCU        equ	1093	;# 
  2413   000446                     NCO1CON         equ	1094	;# 
  2414   000447                     NCO1CLK         equ	1095	;# 
  2415   000448                     NCO2ACC         equ	1096	;# 
  2416   000448                     NCO2ACCL        equ	1096	;# 
  2417   000449                     NCO2ACCH        equ	1097	;# 
  2418   00044A                     NCO2ACCU        equ	1098	;# 
  2419   00044B                     NCO2INC         equ	1099	;# 
  2420   00044B                     NCO2INCL        equ	1099	;# 
  2421   00044C                     NCO2INCH        equ	1100	;# 
  2422   00044D                     NCO2INCU        equ	1101	;# 
  2423   00044E                     NCO2CON         equ	1102	;# 
  2424   00044F                     NCO2CLK         equ	1103	;# 
  2425   000450                     NCO3ACC         equ	1104	;# 
  2426   000450                     NCO3ACCL        equ	1104	;# 
  2427   000451                     NCO3ACCH        equ	1105	;# 
  2428   000452                     NCO3ACCU        equ	1106	;# 
  2429   000453                     NCO3INC         equ	1107	;# 
  2430   000453                     NCO3INCL        equ	1107	;# 
  2431   000454                     NCO3INCH        equ	1108	;# 
  2432   000455                     NCO3INCU        equ	1109	;# 
  2433   000456                     NCO3CON         equ	1110	;# 
  2434   000457                     NCO3CLK         equ	1111	;# 
  2435   000458                     FSCMCON         equ	1112	;# 
  2436   000459                     IVTLOCK         equ	1113	;# 
  2437   00045A                     IVTAD           equ	1114	;# 
  2438   00045A                     IVTADL          equ	1114	;# 
  2439   00045B                     IVTADH          equ	1115	;# 
  2440   00045C                     IVTADU          equ	1116	;# 
  2441   00045D                     IVTBASE         equ	1117	;# 
  2442   00045D                     IVTBASEL        equ	1117	;# 
  2443   00045E                     IVTBASEH        equ	1118	;# 
  2444   00045F                     IVTBASEU        equ	1119	;# 
  2445   000460                     PWM1ERS         equ	1120	;# 
  2446   000461                     PWM1CLK         equ	1121	;# 
  2447   000462                     PWM1LDS         equ	1122	;# 
  2448   000463                     PWM1PR          equ	1123	;# 
  2449   000463                     PWM1PRL         equ	1123	;# 
  2450   000464                     PWM1PRH         equ	1124	;# 
  2451   000465                     PWM1CPRE        equ	1125	;# 
  2452   000466                     PWM1PIPOS       equ	1126	;# 
  2453   000467                     PWM1GIR         equ	1127	;# 
  2454   000468                     PWM1GIE         equ	1128	;# 
  2455   000469                     PWM1CON         equ	1129	;# 
  2456   00046A                     PWM1S1CFG       equ	1130	;# 
  2457   00046B                     PWM1S1P1        equ	1131	;# 
  2458   00046B                     PWM1S1P1L       equ	1131	;# 
  2459   00046C                     PWM1S1P1H       equ	1132	;# 
  2460   00046D                     PWM1S1P2        equ	1133	;# 
  2461   00046D                     PWM1S1P2L       equ	1133	;# 
  2462   00046E                     PWM1S1P2H       equ	1134	;# 
  2463   00046F                     PWM2ERS         equ	1135	;# 
  2464   000470                     PWM2CLK         equ	1136	;# 
  2465   000471                     PWM2LDS         equ	1137	;# 
  2466   000472                     PWM2PR          equ	1138	;# 
  2467   000472                     PWM2PRL         equ	1138	;# 
  2468   000473                     PWM2PRH         equ	1139	;# 
  2469   000474                     PWM2CPRE        equ	1140	;# 
  2470   000475                     PWM2PIPOS       equ	1141	;# 
  2471   000476                     PWM2GIR         equ	1142	;# 
  2472   000477                     PWM2GIE         equ	1143	;# 
  2473   000478                     PWM2CON         equ	1144	;# 
  2474   000479                     PWM2S1CFG       equ	1145	;# 
  2475   00047A                     PWM2S1P1        equ	1146	;# 
  2476   00047A                     PWM2S1P1L       equ	1146	;# 
  2477   00047B                     PWM2S1P1H       equ	1147	;# 
  2478   00047C                     PWM2S1P2        equ	1148	;# 
  2479   00047C                     PWM2S1P2L       equ	1148	;# 
  2480   00047D                     PWM2S1P2H       equ	1149	;# 
  2481   00047E                     PWM3ERS         equ	1150	;# 
  2482   00047F                     PWM3CLK         equ	1151	;# 
  2483   000480                     PWM3LDS         equ	1152	;# 
  2484   000481                     PWM3PR          equ	1153	;# 
  2485   000481                     PWM3PRL         equ	1153	;# 
  2486   000482                     PWM3PRH         equ	1154	;# 
  2487   000483                     PWM3CPRE        equ	1155	;# 
  2488   000484                     PWM3PIPOS       equ	1156	;# 
  2489   000485                     PWM3GIR         equ	1157	;# 
  2490   000486                     PWM3GIE         equ	1158	;# 
  2491   000487                     PWM3CON         equ	1159	;# 
  2492   000488                     PWM3S1CFG       equ	1160	;# 
  2493   000489                     PWM3S1P1        equ	1161	;# 
  2494   000489                     PWM3S1P1L       equ	1161	;# 
  2495   00048A                     PWM3S1P1H       equ	1162	;# 
  2496   00048B                     PWM3S1P2        equ	1163	;# 
  2497   00048B                     PWM3S1P2L       equ	1163	;# 
  2498   00048C                     PWM3S1P2H       equ	1164	;# 
  2499   00048D                     PWM4ERS         equ	1165	;# 
  2500   00048E                     PWM4CLK         equ	1166	;# 
  2501   00048F                     PWM4LDS         equ	1167	;# 
  2502   000490                     PWM4PR          equ	1168	;# 
  2503   000490                     PWM4PRL         equ	1168	;# 
  2504   000491                     PWM4PRH         equ	1169	;# 
  2505   000492                     PWM4CPRE        equ	1170	;# 
  2506   000493                     PWM4PIPOS       equ	1171	;# 
  2507   000494                     PWM4GIR         equ	1172	;# 
  2508   000495                     PWM4GIE         equ	1173	;# 
  2509   000496                     PWM4CON         equ	1174	;# 
  2510   000497                     PWM4S1CFG       equ	1175	;# 
  2511   000498                     PWM4S1P1        equ	1176	;# 
  2512   000498                     PWM4S1P1L       equ	1176	;# 
  2513   000499                     PWM4S1P1H       equ	1177	;# 
  2514   00049A                     PWM4S1P2        equ	1178	;# 
  2515   00049A                     PWM4S1P2L       equ	1178	;# 
  2516   00049B                     PWM4S1P2H       equ	1179	;# 
  2517   00049C                     PWMLOAD         equ	1180	;# 
  2518   00049D                     PWMEN           equ	1181	;# 
  2519   00049E                     PIE0            equ	1182	;# 
  2520   00049F                     PIE1            equ	1183	;# 
  2521   0004A0                     PIE2            equ	1184	;# 
  2522   0004A1                     PIE3            equ	1185	;# 
  2523   0004A2                     PIE4            equ	1186	;# 
  2524   0004A3                     PIE5            equ	1187	;# 
  2525   0004A4                     PIE6            equ	1188	;# 
  2526   0004A5                     PIE7            equ	1189	;# 
  2527   0004A6                     PIE8            equ	1190	;# 
  2528   0004A7                     PIE9            equ	1191	;# 
  2529   0004A8                     PIE10           equ	1192	;# 
  2530   0004A9                     PIE11           equ	1193	;# 
  2531   0004AA                     PIE12           equ	1194	;# 
  2532   0004AB                     PIE13           equ	1195	;# 
  2533   0004AC                     PIE14           equ	1196	;# 
  2534   0004AD                     PIE15           equ	1197	;# 
  2535   0004AE                     PIR0            equ	1198	;# 
  2536   0004AF                     PIR1            equ	1199	;# 
  2537   0004B0                     PIR2            equ	1200	;# 
  2538   0004B1                     PIR3            equ	1201	;# 
  2539   0004B2                     PIR4            equ	1202	;# 
  2540   0004B3                     PIR5            equ	1203	;# 
  2541   0004B4                     PIR6            equ	1204	;# 
  2542   0004B5                     PIR7            equ	1205	;# 
  2543   0004B6                     PIR8            equ	1206	;# 
  2544   0004B7                     PIR9            equ	1207	;# 
  2545   0004B8                     PIR10           equ	1208	;# 
  2546   0004B9                     PIR11           equ	1209	;# 
  2547   0004BA                     PIR12           equ	1210	;# 
  2548   0004BB                     PIR13           equ	1211	;# 
  2549   0004BC                     PIR14           equ	1212	;# 
  2550   0004BD                     PIR15           equ	1213	;# 
  2551   0004BE                     LATA            equ	1214	;# 
  2552   0004BF                     LATB            equ	1215	;# 
  2553   0004C0                     LATC            equ	1216	;# 
  2554   0004C6                     TRISA           equ	1222	;# 
  2555   0004C7                     TRISB           equ	1223	;# 
  2556   0004C8                     TRISC           equ	1224	;# 
  2557   0004CA                     TRISE           equ	1226	;# 
  2558   0004CE                     PORTA           equ	1230	;# 
  2559   0004CF                     PORTB           equ	1231	;# 
  2560   0004D0                     PORTC           equ	1232	;# 
  2561   0004D2                     PORTE           equ	1234	;# 
  2562   0004D6                     INTCON0         equ	1238	;# 
  2563   0004D7                     INTCON1         equ	1239	;# 
  2564   0004D8                     STATUS          equ	1240	;# 
  2565   0004D9                     FSR2            equ	1241	;# 
  2566   0004D9                     FSR2L           equ	1241	;# 
  2567   0004DA                     FSR2H           equ	1242	;# 
  2568   0004DB                     PLUSW2          equ	1243	;# 
  2569   0004DC                     PREINC2         equ	1244	;# 
  2570   0004DD                     POSTDEC2        equ	1245	;# 
  2571   0004DE                     POSTINC2        equ	1246	;# 
  2572   0004DF                     INDF2           equ	1247	;# 
  2573   0004E0                     BSR             equ	1248	;# 
  2574   0004E1                     FSR1            equ	1249	;# 
  2575   0004E1                     FSR1L           equ	1249	;# 
  2576   0004E2                     FSR1H           equ	1250	;# 
  2577   0004E3                     PLUSW1          equ	1251	;# 
  2578   0004E4                     PREINC1         equ	1252	;# 
  2579   0004E5                     POSTDEC1        equ	1253	;# 
  2580   0004E6                     POSTINC1        equ	1254	;# 
  2581   0004E7                     INDF1           equ	1255	;# 
  2582   0004E8                     WREG            equ	1256	;# 
  2583   0004E9                     FSR0            equ	1257	;# 
  2584   0004E9                     FSR0L           equ	1257	;# 
  2585   0004EA                     FSR0H           equ	1258	;# 
  2586   0004EB                     PLUSW0          equ	1259	;# 
  2587   0004EC                     PREINC0         equ	1260	;# 
  2588   0004ED                     POSTDEC0        equ	1261	;# 
  2589   0004EE                     POSTINC0        equ	1262	;# 
  2590   0004EF                     INDF0           equ	1263	;# 
  2591   0004F0                     PCON0           equ	1264	;# 
  2592   0004F1                     PCON1           equ	1265	;# 
  2593   0004F2                     CPUDOZE         equ	1266	;# 
  2594   0004F3                     PROD            equ	1267	;# 
  2595   0004F3                     PRODL           equ	1267	;# 
  2596   0004F4                     PRODH           equ	1268	;# 
  2597   0004F5                     TABLAT          equ	1269	;# 
  2598   0004F6                     TBLPTR          equ	1270	;# 
  2599   0004F6                     TBLPTRL         equ	1270	;# 
  2600   0004F7                     TBLPTRH         equ	1271	;# 
  2601   0004F8                     TBLPTRU         equ	1272	;# 
  2602   0004F9                     PCLAT           equ	1273	;# 
  2603   0004F9                     PCL             equ	1273	;# 
  2604   0004FA                     PCLATH          equ	1274	;# 
  2605   0004FB                     PCLATU          equ	1275	;# 
  2606   0004FC                     STKPTR          equ	1276	;# 
  2607   0004FD                     TOS             equ	1277	;# 
  2608   0004FD                     TOSL            equ	1277	;# 
  2609   0004FE                     TOSH            equ	1278	;# 
  2610   0004FF                     TOSU            equ	1279	;# 
  2611   000038                     BOOTREG         equ	56	;# 
  2612   000039                     CLKRCON         equ	57	;# 
  2613   00003A                     CLKRCLK         equ	58	;# 
  2614   000040                     NVMCON0         equ	64	;# 
  2615   000041                     NVMCON1         equ	65	;# 
  2616   000042                     NVMLOCK         equ	66	;# 
  2617   000043                     NVMADR          equ	67	;# 
  2618   000043                     NVMADRL         equ	67	;# 
  2619   000044                     NVMADRH         equ	68	;# 
  2620   000045                     NVMADRU         equ	69	;# 
  2621   000046                     NVMDAT          equ	70	;# 
  2622   000046                     NVMDATL         equ	70	;# 
  2623   000047                     NVMDATH         equ	71	;# 
  2624   000048                     VREGCON         equ	72	;# 
  2625   000049                     BORCON          equ	73	;# 
  2626   00004A                     HLVDCON0        equ	74	;# 
  2627   00004B                     HLVDCON1        equ	75	;# 
  2628   00004C                     ZCDCON          equ	76	;# 
  2629   000060                     PMD0            equ	96	;# 
  2630   000061                     PMD1            equ	97	;# 
  2631   000062                     PMD2            equ	98	;# 
  2632   000063                     PMD3            equ	99	;# 
  2633   000064                     PMD4            equ	100	;# 
  2634   000065                     PMD5            equ	101	;# 
  2635   000066                     PMD6            equ	102	;# 
  2636   000067                     PMD7            equ	103	;# 
  2637   000068                     PMD8            equ	104	;# 
  2638   00006A                     MD1CON0         equ	106	;# 
  2639   00006B                     MD1CON1         equ	107	;# 
  2640   00006C                     MD1SRC          equ	108	;# 
  2641   00006D                     MD1CARL         equ	109	;# 
  2642   00006E                     MD1CARH         equ	110	;# 
  2643   00006F                     CMOUT           equ	111	;# 
  2644   000070                     CM1CON0         equ	112	;# 
  2645   000071                     CM1CON1         equ	113	;# 
  2646   000072                     CM1NCH          equ	114	;# 
  2647   000073                     CM1PCH          equ	115	;# 
  2648   000074                     CM2CON0         equ	116	;# 
  2649   000075                     CM2CON1         equ	117	;# 
  2650   000076                     CM2NCH          equ	118	;# 
  2651   000077                     CM2PCH          equ	119	;# 
  2652   000078                     WDTCON0         equ	120	;# 
  2653   000079                     WDTCON1         equ	121	;# 
  2654   00007A                     WDTPSL          equ	122	;# 
  2655   00007B                     WDTPSH          equ	123	;# 
  2656   00007C                     WDTTMR          equ	124	;# 
  2657   00007D                     DAC1DAT         equ	125	;# 
  2658   00007D                     DAC1DATL        equ	125	;# 
  2659   00007F                     DAC1CON         equ	127	;# 
  2660   000080                     SPI1RXB         equ	128	;# 
  2661   000081                     SPI1TXB         equ	129	;# 
  2662   000082                     SPI1TCNT        equ	130	;# 
  2663   000082                     SPI1TCNTL       equ	130	;# 
  2664   000083                     SPI1TCNTH       equ	131	;# 
  2665   000084                     SPI1CON0        equ	132	;# 
  2666   000085                     SPI1CON1        equ	133	;# 
  2667   000086                     SPI1CON2        equ	134	;# 
  2668   000087                     SPI1STATUS      equ	135	;# 
  2669   000088                     SPI1TWIDTH      equ	136	;# 
  2670   000089                     SPI1BAUD        equ	137	;# 
  2671   00008A                     SPI1INTF        equ	138	;# 
  2672   00008B                     SPI1INTE        equ	139	;# 
  2673   00008C                     SPI1CLK         equ	140	;# 
  2674   00008D                     SPI2RXB         equ	141	;# 
  2675   00008E                     SPI2TXB         equ	142	;# 
  2676   00008F                     SPI2TCNT        equ	143	;# 
  2677   00008F                     SPI2TCNTL       equ	143	;# 
  2678   000090                     SPI2TCNTH       equ	144	;# 
  2679   000091                     SPI2CON0        equ	145	;# 
  2680   000092                     SPI2CON1        equ	146	;# 
  2681   000093                     SPI2CON2        equ	147	;# 
  2682   000094                     SPI2STATUS      equ	148	;# 
  2683   000095                     SPI2TWIDTH      equ	149	;# 
  2684   000096                     SPI2BAUD        equ	150	;# 
  2685   000097                     SPI2INTF        equ	151	;# 
  2686   000098                     SPI2INTE        equ	152	;# 
  2687   000099                     SPI2CLK         equ	153	;# 
  2688   0000AC                     ACTCON          equ	172	;# 
  2689   0000AD                     OSCCON1         equ	173	;# 
  2690   0000AE                     OSCCON2         equ	174	;# 
  2691   0000AF                     OSCCON3         equ	175	;# 
  2692   0000B0                     OSCTUNE         equ	176	;# 
  2693   0000B1                     OSCFRQ          equ	177	;# 
  2694   0000B1                     OSCFREQ         equ	177	;# 
  2695   0000B2                     OSCSTAT         equ	178	;# 
  2696   0000B2                     OSCSTAT1        equ	178	;# 
  2697   0000B3                     OSCEN           equ	179	;# 
  2698   0000B4                     PRLOCK          equ	180	;# 
  2699   0000B5                     SCANPR          equ	181	;# 
  2700   0000B6                     DMA1PR          equ	182	;# 
  2701   0000B7                     DMA2PR          equ	183	;# 
  2702   0000B8                     DMA3PR          equ	184	;# 
  2703   0000B9                     DMA4PR          equ	185	;# 
  2704   0000BA                     DMA5PR          equ	186	;# 
  2705   0000BB                     DMA6PR          equ	187	;# 
  2706   0000BC                     DMA7PR          equ	188	;# 
  2707   0000BD                     DMA8PR          equ	189	;# 
  2708   0000BE                     MAINPR          equ	190	;# 
  2709   0000BF                     ISRPR           equ	191	;# 
  2710   0000D4                     CLCDATA         equ	212	;# 
  2711   0000D5                     CLCSELECT       equ	213	;# 
  2712   0000D6                     CLCnCON         equ	214	;# 
  2713   0000D7                     CLCnPOL         equ	215	;# 
  2714   0000D8                     CLCnSEL0        equ	216	;# 
  2715   0000D9                     CLCnSEL1        equ	217	;# 
  2716   0000DA                     CLCnSEL2        equ	218	;# 
  2717   0000DB                     CLCnSEL3        equ	219	;# 
  2718   0000DC                     CLCnGLS0        equ	220	;# 
  2719   0000DD                     CLCnGLS1        equ	221	;# 
  2720   0000DE                     CLCnGLS2        equ	222	;# 
  2721   0000DF                     CLCnGLS3        equ	223	;# 
  2722   0000E8                     DMASELECT       equ	232	;# 
  2723   0000E9                     DMAnBUF         equ	233	;# 
  2724   0000EA                     DMAnDCNT        equ	234	;# 
  2725   0000EA                     DMAnDCNTL       equ	234	;# 
  2726   0000EB                     DMAnDCNTH       equ	235	;# 
  2727   0000EC                     DMAnDPTR        equ	236	;# 
  2728   0000EC                     DMAnDPTRL       equ	236	;# 
  2729   0000ED                     DMAnDPTRH       equ	237	;# 
  2730   0000EE                     DMAnDSZ         equ	238	;# 
  2731   0000EE                     DMAnDSZL        equ	238	;# 
  2732   0000EF                     DMAnDSZH        equ	239	;# 
  2733   0000F0                     DMAnDSA         equ	240	;# 
  2734   0000F0                     DMAnDSAL        equ	240	;# 
  2735   0000F1                     DMAnDSAH        equ	241	;# 
  2736   0000F2                     DMAnSCNT        equ	242	;# 
  2737   0000F2                     DMAnSCNTL       equ	242	;# 
  2738   0000F3                     DMAnSCNTH       equ	243	;# 
  2739   0000F4                     DMAnSPTR        equ	244	;# 
  2740   0000F4                     DMAnSPTRL       equ	244	;# 
  2741   0000F5                     DMAnSPTRH       equ	245	;# 
  2742   0000F6                     DMAnSPTRU       equ	246	;# 
  2743   0000F7                     DMAnSSZ         equ	247	;# 
  2744   0000F7                     DMAnSSZL        equ	247	;# 
  2745   0000F8                     DMAnSSZH        equ	248	;# 
  2746   0000F9                     DMAnSSA         equ	249	;# 
  2747   0000F9                     DMAnSSAL        equ	249	;# 
  2748   0000FA                     DMAnSSAH        equ	250	;# 
  2749   0000FB                     DMAnSSAU        equ	251	;# 
  2750   0000FC                     DMAnCON0        equ	252	;# 
  2751   0000FD                     DMAnCON1        equ	253	;# 
  2752   0000FE                     DMAnAIRQ        equ	254	;# 
  2753   0000FF                     DMAnSIRQ        equ	255	;# 
  2754   000100                     C1CONL          equ	256	;# 
  2755   000101                     C1CONH          equ	257	;# 
  2756   000102                     C1CONU          equ	258	;# 
  2757   000103                     C1CONT          equ	259	;# 
  2758   000104                     C1NBTCFGL       equ	260	;# 
  2759   000105                     C1NBTCFGH       equ	261	;# 
  2760   000106                     C1NBTCFGU       equ	262	;# 
  2761   000107                     C1NBTCFGT       equ	263	;# 
  2762   000108                     C1DBTCFGL       equ	264	;# 
  2763   000109                     C1DBTCFGH       equ	265	;# 
  2764   00010A                     C1DBTCFGU       equ	266	;# 
  2765   00010B                     C1DBTCFGT       equ	267	;# 
  2766   00010C                     C1TDCL          equ	268	;# 
  2767   00010D                     C1TDCH          equ	269	;# 
  2768   00010E                     C1TDCU          equ	270	;# 
  2769   000110                     C1TBC           equ	272	;# 
  2770   000110                     C1TBCL          equ	272	;# 
  2771   000111                     C1TBCH          equ	273	;# 
  2772   000112                     C1TBCU          equ	274	;# 
  2773   000113                     C1TBCT          equ	275	;# 
  2774   000114                     C1TSCONL        equ	276	;# 
  2775   000115                     C1TSCONH        equ	277	;# 
  2776   000116                     C1TSCONU        equ	278	;# 
  2777   000117                     C1TSCONT        equ	279	;# 
  2778   000118                     C1VECL          equ	280	;# 
  2779   000119                     C1VECH          equ	281	;# 
  2780   00011A                     C1VECU          equ	282	;# 
  2781   00011B                     C1VECT          equ	283	;# 
  2782   00011C                     C1INTL          equ	284	;# 
  2783   00011D                     C1INTH          equ	285	;# 
  2784   00011E                     C1INTU          equ	286	;# 
  2785   00011F                     C1INTT          equ	287	;# 
  2786   000120                     C1RXIF          equ	288	;# 
  2787   000120                     C1RXIFL         equ	288	;# 
  2788   000121                     C1RXIFH         equ	289	;# 
  2789   000122                     C1RXIFU         equ	290	;# 
  2790   000123                     C1RXIFT         equ	291	;# 
  2791   000124                     C1TXIF          equ	292	;# 
  2792   000124                     C1TXIFL         equ	292	;# 
  2793   000125                     C1TXIFH         equ	293	;# 
  2794   000126                     C1TXIFU         equ	294	;# 
  2795   000127                     C1TXIFT         equ	295	;# 
  2796   000128                     C1RXOVIF        equ	296	;# 
  2797   000128                     C1RXOVIFL       equ	296	;# 
  2798   000129                     C1RXOVIFH       equ	297	;# 
  2799   00012A                     C1RXOVIFU       equ	298	;# 
  2800   00012B                     C1RXOVIFT       equ	299	;# 
  2801   00012C                     C1TXATIF        equ	300	;# 
  2802   00012C                     C1TXATIFL       equ	300	;# 
  2803   00012D                     C1TXATIFH       equ	301	;# 
  2804   00012E                     C1TXATIFU       equ	302	;# 
  2805   00012F                     C1TXATIFT       equ	303	;# 
  2806   000130                     C1TXREQ         equ	304	;# 
  2807   000130                     C1TXREQL        equ	304	;# 
  2808   000131                     C1TXREQH        equ	305	;# 
  2809   000132                     C1TXREQU        equ	306	;# 
  2810   000133                     C1TXREQT        equ	307	;# 
  2811   000134                     C1TRECL         equ	308	;# 
  2812   000135                     C1TRECH         equ	309	;# 
  2813   000136                     C1TRECU         equ	310	;# 
  2814   000137                     C1TRECT         equ	311	;# 
  2815   000138                     C1BDIAG0L       equ	312	;# 
  2816   000139                     C1BDIAG0H       equ	313	;# 
  2817   00013C                     C1BDIAG1L       equ	316	;# 
  2818   00013D                     C1BDIAG1H       equ	317	;# 
  2819   00013E                     C1BDIAG1U       equ	318	;# 
  2820   00013F                     C1BDIAG1T       equ	319	;# 
  2821   000140                     C1TEFCONL       equ	320	;# 
  2822   000141                     C1TEFCONH       equ	321	;# 
  2823   000142                     C1TEFCONU       equ	322	;# 
  2824   000143                     C1TEFCONT       equ	323	;# 
  2825   000144                     C1TEFSTAL       equ	324	;# 
  2826   000145                     C1TEFSTAH       equ	325	;# 
  2827   000146                     C1TEFSTAU       equ	326	;# 
  2828   000147                     C1TEFSTAT       equ	327	;# 
  2829   000148                     C1TEFUA         equ	328	;# 
  2830   000148                     C1TEFUAL        equ	328	;# 
  2831   000149                     C1TEFUAH        equ	329	;# 
  2832   00014A                     C1TEFUAU        equ	330	;# 
  2833   00014B                     C1TEFUAT        equ	331	;# 
  2834   00014C                     C1FIFOBA        equ	332	;# 
  2835   00014C                     C1FIFOBAL       equ	332	;# 
  2836   00014D                     C1FIFOBAH       equ	333	;# 
  2837   00014E                     C1FIFOBAU       equ	334	;# 
  2838   00014F                     C1FIFOBAT       equ	335	;# 
  2839   000150                     C1TXQCONL       equ	336	;# 
  2840   000151                     C1TXQCONH       equ	337	;# 
  2841   000152                     C1TXQCONU       equ	338	;# 
  2842   000153                     C1TXQCONT       equ	339	;# 
  2843   000154                     C1TXQSTAL       equ	340	;# 
  2844   000155                     C1TXQSTAH       equ	341	;# 
  2845   000156                     C1TXQSTAU       equ	342	;# 
  2846   000157                     C1TXQSTAT       equ	343	;# 
  2847   000158                     C1TXQUA         equ	344	;# 
  2848   000158                     C1TXQUAL        equ	344	;# 
  2849   000159                     C1TXQUAH        equ	345	;# 
  2850   00015A                     C1TXQUAU        equ	346	;# 
  2851   00015B                     C1TXQUAT        equ	347	;# 
  2852   00015C                     C1FIFOCON1      equ	348	;# 
  2853   00015C                     C1FIFOCON1L     equ	348	;# 
  2854   00015D                     C1FIFOCON1H     equ	349	;# 
  2855   00015E                     C1FIFOCON1U     equ	350	;# 
  2856   00015F                     C1FIFOCON1T     equ	351	;# 
  2857   000160                     C1FIFOSTA1      equ	352	;# 
  2858   000160                     C1FIFOSTA1L     equ	352	;# 
  2859   000161                     C1FIFOSTA1H     equ	353	;# 
  2860   000162                     C1FIFOSTA1U     equ	354	;# 
  2861   000163                     C1FIFOSTA1T     equ	355	;# 
  2862   000164                     C1FIFOUA1       equ	356	;# 
  2863   000164                     C1FIFOUA1L      equ	356	;# 
  2864   000165                     C1FIFOUA1H      equ	357	;# 
  2865   000166                     C1FIFOUA1U      equ	358	;# 
  2866   000167                     C1FIFOUA1T      equ	359	;# 
  2867   000168                     C1FIFOCON2      equ	360	;# 
  2868   000168                     C1FIFOCON2L     equ	360	;# 
  2869   000169                     C1FIFOCON2H     equ	361	;# 
  2870   00016A                     C1FIFOCON2U     equ	362	;# 
  2871   00016B                     C1FIFOCON2T     equ	363	;# 
  2872   00016C                     C1FIFOSTA2      equ	364	;# 
  2873   00016C                     C1FIFOSTA2L     equ	364	;# 
  2874   00016D                     C1FIFOSTA2H     equ	365	;# 
  2875   00016E                     C1FIFOSTA2U     equ	366	;# 
  2876   00016F                     C1FIFOSTA2T     equ	367	;# 
  2877   000170                     C1FIFOUA2       equ	368	;# 
  2878   000170                     C1FIFOUA2L      equ	368	;# 
  2879   000171                     C1FIFOUA2H      equ	369	;# 
  2880   000172                     C1FIFOUA2U      equ	370	;# 
  2881   000173                     C1FIFOUA2T      equ	371	;# 
  2882   000174                     C1FIFOCON3      equ	372	;# 
  2883   000174                     C1FIFOCON3L     equ	372	;# 
  2884   000175                     C1FIFOCON3H     equ	373	;# 
  2885   000176                     C1FIFOCON3U     equ	374	;# 
  2886   000177                     C1FIFOCON3T     equ	375	;# 
  2887   000178                     C1FIFOSTA3      equ	376	;# 
  2888   000178                     C1FIFOSTA3L     equ	376	;# 
  2889   000179                     C1FIFOSTA3H     equ	377	;# 
  2890   00017A                     C1FIFOSTA3U     equ	378	;# 
  2891   00017B                     C1FIFOSTA3T     equ	379	;# 
  2892   00017C                     C1FIFOUA3       equ	380	;# 
  2893   00017C                     C1FIFOUA3L      equ	380	;# 
  2894   00017D                     C1FIFOUA3H      equ	381	;# 
  2895   00017E                     C1FIFOUA3U      equ	382	;# 
  2896   00017F                     C1FIFOUA3T      equ	383	;# 
  2897   000180                     C1FLTCON0L      equ	384	;# 
  2898   000181                     C1FLTCON0H      equ	385	;# 
  2899   000182                     C1FLTCON0U      equ	386	;# 
  2900   000183                     C1FLTCON0T      equ	387	;# 
  2901   000184                     C1FLTCON1L      equ	388	;# 
  2902   000185                     C1FLTCON1H      equ	389	;# 
  2903   000186                     C1FLTCON1U      equ	390	;# 
  2904   000187                     C1FLTCON1T      equ	391	;# 
  2905   000188                     C1FLTCON2L      equ	392	;# 
  2906   000189                     C1FLTCON2H      equ	393	;# 
  2907   00018A                     C1FLTCON2U      equ	394	;# 
  2908   00018B                     C1FLTCON2T      equ	395	;# 
  2909   00018C                     C1FLTOBJ0       equ	396	;# 
  2910   00018C                     C1FLTOBJ0L      equ	396	;# 
  2911   00018D                     C1FLTOBJ0H      equ	397	;# 
  2912   00018E                     C1FLTOBJ0U      equ	398	;# 
  2913   00018F                     C1FLTOBJ0T      equ	399	;# 
  2914   000190                     C1MASK0         equ	400	;# 
  2915   000190                     C1MASK0L        equ	400	;# 
  2916   000191                     C1MASK0H        equ	401	;# 
  2917   000192                     C1MASK0U        equ	402	;# 
  2918   000193                     C1MASK0T        equ	403	;# 
  2919   000194                     C1FLTOBJ1       equ	404	;# 
  2920   000194                     C1FLTOBJ1L      equ	404	;# 
  2921   000195                     C1FLTOBJ1H      equ	405	;# 
  2922   000196                     C1FLTOBJ1U      equ	406	;# 
  2923   000197                     C1FLTOBJ1T      equ	407	;# 
  2924   000198                     C1MASK1         equ	408	;# 
  2925   000198                     C1MASK1L        equ	408	;# 
  2926   000199                     C1MASK1H        equ	409	;# 
  2927   00019A                     C1MASK1U        equ	410	;# 
  2928   00019B                     C1MASK1T        equ	411	;# 
  2929   00019C                     C1FLTOBJ2       equ	412	;# 
  2930   00019C                     C1FLTOBJ2L      equ	412	;# 
  2931   00019D                     C1FLTOBJ2H      equ	413	;# 
  2932   00019E                     C1FLTOBJ2U      equ	414	;# 
  2933   00019F                     C1FLTOBJ2T      equ	415	;# 
  2934   0001A0                     C1MASK2         equ	416	;# 
  2935   0001A0                     C1MASK2L        equ	416	;# 
  2936   0001A1                     C1MASK2H        equ	417	;# 
  2937   0001A2                     C1MASK2U        equ	418	;# 
  2938   0001A3                     C1MASK2T        equ	419	;# 
  2939   0001A4                     C1FLTOBJ3       equ	420	;# 
  2940   0001A4                     C1FLTOBJ3L      equ	420	;# 
  2941   0001A5                     C1FLTOBJ3H      equ	421	;# 
  2942   0001A6                     C1FLTOBJ3U      equ	422	;# 
  2943   0001A7                     C1FLTOBJ3T      equ	423	;# 
  2944   0001A8                     C1MASK3         equ	424	;# 
  2945   0001A8                     C1MASK3L        equ	424	;# 
  2946   0001A9                     C1MASK3H        equ	425	;# 
  2947   0001AA                     C1MASK3U        equ	426	;# 
  2948   0001AB                     C1MASK3T        equ	427	;# 
  2949   0001AC                     C1FLTOBJ4       equ	428	;# 
  2950   0001AC                     C1FLTOBJ4L      equ	428	;# 
  2951   0001AD                     C1FLTOBJ4H      equ	429	;# 
  2952   0001AE                     C1FLTOBJ4U      equ	430	;# 
  2953   0001AF                     C1FLTOBJ4T      equ	431	;# 
  2954   0001B0                     C1MASK4         equ	432	;# 
  2955   0001B0                     C1MASK4L        equ	432	;# 
  2956   0001B1                     C1MASK4H        equ	433	;# 
  2957   0001B2                     C1MASK4U        equ	434	;# 
  2958   0001B3                     C1MASK4T        equ	435	;# 
  2959   0001B4                     C1FLTOBJ5       equ	436	;# 
  2960   0001B4                     C1FLTOBJ5L      equ	436	;# 
  2961   0001B5                     C1FLTOBJ5H      equ	437	;# 
  2962   0001B6                     C1FLTOBJ5U      equ	438	;# 
  2963   0001B7                     C1FLTOBJ5T      equ	439	;# 
  2964   0001B8                     C1MASK5         equ	440	;# 
  2965   0001B8                     C1MASK5L        equ	440	;# 
  2966   0001B9                     C1MASK5H        equ	441	;# 
  2967   0001BA                     C1MASK5U        equ	442	;# 
  2968   0001BB                     C1MASK5T        equ	443	;# 
  2969   0001BC                     C1FLTOBJ6       equ	444	;# 
  2970   0001BC                     C1FLTOBJ6L      equ	444	;# 
  2971   0001BD                     C1FLTOBJ6H      equ	445	;# 
  2972   0001BE                     C1FLTOBJ6U      equ	446	;# 
  2973   0001BF                     C1FLTOBJ6T      equ	447	;# 
  2974   0001C0                     C1MASK6         equ	448	;# 
  2975   0001C0                     C1MASK6L        equ	448	;# 
  2976   0001C1                     C1MASK6H        equ	449	;# 
  2977   0001C2                     C1MASK6U        equ	450	;# 
  2978   0001C3                     C1MASK6T        equ	451	;# 
  2979   0001C4                     C1FLTOBJ7       equ	452	;# 
  2980   0001C4                     C1FLTOBJ7L      equ	452	;# 
  2981   0001C5                     C1FLTOBJ7H      equ	453	;# 
  2982   0001C6                     C1FLTOBJ7U      equ	454	;# 
  2983   0001C7                     C1FLTOBJ7T      equ	455	;# 
  2984   0001C8                     C1MASK7         equ	456	;# 
  2985   0001C8                     C1MASK7L        equ	456	;# 
  2986   0001C9                     C1MASK7H        equ	457	;# 
  2987   0001CA                     C1MASK7U        equ	458	;# 
  2988   0001CB                     C1MASK7T        equ	459	;# 
  2989   0001CC                     C1FLTOBJ8       equ	460	;# 
  2990   0001CC                     C1FLTOBJ8L      equ	460	;# 
  2991   0001CD                     C1FLTOBJ8H      equ	461	;# 
  2992   0001CE                     C1FLTOBJ8U      equ	462	;# 
  2993   0001CF                     C1FLTOBJ8T      equ	463	;# 
  2994   0001D0                     C1MASK8         equ	464	;# 
  2995   0001D0                     C1MASK8L        equ	464	;# 
  2996   0001D1                     C1MASK8H        equ	465	;# 
  2997   0001D2                     C1MASK8U        equ	466	;# 
  2998   0001D3                     C1MASK8T        equ	467	;# 
  2999   0001D4                     C1FLTOBJ9       equ	468	;# 
  3000   0001D4                     C1FLTOBJ9L      equ	468	;# 
  3001   0001D5                     C1FLTOBJ9H      equ	469	;# 
  3002   0001D6                     C1FLTOBJ9U      equ	470	;# 
  3003   0001D7                     C1FLTOBJ9T      equ	471	;# 
  3004   0001D8                     C1MASK9         equ	472	;# 
  3005   0001D8                     C1MASK9L        equ	472	;# 
  3006   0001D9                     C1MASK9H        equ	473	;# 
  3007   0001DA                     C1MASK9U        equ	474	;# 
  3008   0001DB                     C1MASK9T        equ	475	;# 
  3009   0001DC                     C1FLTOBJ10      equ	476	;# 
  3010   0001DC                     C1FLTOBJ10L     equ	476	;# 
  3011   0001DD                     C1FLTOBJ10H     equ	477	;# 
  3012   0001DE                     C1FLTOBJ10U     equ	478	;# 
  3013   0001DF                     C1FLTOBJ10T     equ	479	;# 
  3014   0001E0                     C1MASK10        equ	480	;# 
  3015   0001E0                     C1MASK10L       equ	480	;# 
  3016   0001E1                     C1MASK10H       equ	481	;# 
  3017   0001E2                     C1MASK10U       equ	482	;# 
  3018   0001E3                     C1MASK10T       equ	483	;# 
  3019   0001E4                     C1FLTOBJ11      equ	484	;# 
  3020   0001E4                     C1FLTOBJ11L     equ	484	;# 
  3021   0001E5                     C1FLTOBJ11H     equ	485	;# 
  3022   0001E6                     C1FLTOBJ11U     equ	486	;# 
  3023   0001E7                     C1FLTOBJ11T     equ	487	;# 
  3024   0001E8                     C1MASK11        equ	488	;# 
  3025   0001E8                     C1MASK11L       equ	488	;# 
  3026   0001E9                     C1MASK11H       equ	489	;# 
  3027   0001EA                     C1MASK11U       equ	490	;# 
  3028   0001EB                     C1MASK11T       equ	491	;# 
  3029   000200                     PPSLOCK         equ	512	;# 
  3030   000201                     RA0PPS          equ	513	;# 
  3031   000202                     RA1PPS          equ	514	;# 
  3032   000203                     RA2PPS          equ	515	;# 
  3033   000204                     RA3PPS          equ	516	;# 
  3034   000205                     RA4PPS          equ	517	;# 
  3035   000206                     RA5PPS          equ	518	;# 
  3036   000207                     RA6PPS          equ	519	;# 
  3037   000208                     RA7PPS          equ	520	;# 
  3038   000209                     RB0PPS          equ	521	;# 
  3039   00020A                     RB1PPS          equ	522	;# 
  3040   00020B                     RB2PPS          equ	523	;# 
  3041   00020C                     RB3PPS          equ	524	;# 
  3042   00020D                     RB4PPS          equ	525	;# 
  3043   00020E                     RB5PPS          equ	526	;# 
  3044   00020F                     RB6PPS          equ	527	;# 
  3045   000210                     RB7PPS          equ	528	;# 
  3046   000211                     RC0PPS          equ	529	;# 
  3047   000212                     RC1PPS          equ	530	;# 
  3048   000213                     RC2PPS          equ	531	;# 
  3049   000214                     RC3PPS          equ	532	;# 
  3050   000215                     RC4PPS          equ	533	;# 
  3051   000216                     RC5PPS          equ	534	;# 
  3052   000217                     RC6PPS          equ	535	;# 
  3053   000218                     RC7PPS          equ	536	;# 
  3054   00023D                     CANRXPPS        equ	573	;# 
  3055   00023E                     INT0PPS         equ	574	;# 
  3056   00023F                     INT1PPS         equ	575	;# 
  3057   000240                     INT2PPS         equ	576	;# 
  3058   000241                     T0CKIPPS        equ	577	;# 
  3059   000242                     T1CKIPPS        equ	578	;# 
  3060   000243                     T1GPPS          equ	579	;# 
  3061   000244                     T3CKIPPS        equ	580	;# 
  3062   000245                     T3GPPS          equ	581	;# 
  3063   000246                     T5CKIPPS        equ	582	;# 
  3064   000247                     T5GPPS          equ	583	;# 
  3065   000248                     T2INPPS         equ	584	;# 
  3066   000249                     T4INPPS         equ	585	;# 
  3067   00024A                     T6INPPS         equ	586	;# 
  3068   00024B                     TUIN0PPS        equ	587	;# 
  3069   00024C                     TUIN1PPS        equ	588	;# 
  3070   00024F                     CCP1PPS         equ	591	;# 
  3071   000250                     CCP2PPS         equ	592	;# 
  3072   000251                     CCP3PPS         equ	593	;# 
  3073   000253                     PWM1ERSPPS      equ	595	;# 
  3074   000254                     PWM2ERSPPS      equ	596	;# 
  3075   000255                     PWM3ERSPPS      equ	597	;# 
  3076   000256                     PWM4ERSPPS      equ	598	;# 
  3077   000257                     PWMIN0PPS       equ	599	;# 
  3078   000258                     PWMIN1PPS       equ	600	;# 
  3079   000259                     SMT1WINPPS      equ	601	;# 
  3080   00025A                     SMT1SIGPPS      equ	602	;# 
  3081   00025B                     CWG1PPS         equ	603	;# 
  3082   00025B                     CWG1INPPS       equ	603	;# 
  3083   00025C                     CWG2PPS         equ	604	;# 
  3084   00025C                     CWG2INPPS       equ	604	;# 
  3085   00025D                     CWG3PPS         equ	605	;# 
  3086   00025D                     CWG3INPPS       equ	605	;# 
  3087   00025E                     MD1CARLPPS      equ	606	;# 
  3088   00025E                     MDCARLPPS       equ	606	;# 
  3089   00025F                     MD1CARHPPS      equ	607	;# 
  3090   00025F                     MDCARHPPS       equ	607	;# 
  3091   000260                     MD1SRCPPS       equ	608	;# 
  3092   000260                     MDSRCPPS        equ	608	;# 
  3093   000261                     CLCIN0PPS       equ	609	;# 
  3094   000262                     CLCIN1PPS       equ	610	;# 
  3095   000263                     CLCIN2PPS       equ	611	;# 
  3096   000264                     CLCIN3PPS       equ	612	;# 
  3097   000265                     CLCIN4PPS       equ	613	;# 
  3098   000266                     CLCIN5PPS       equ	614	;# 
  3099   000267                     CLCIN6PPS       equ	615	;# 
  3100   000268                     CLCIN7PPS       equ	616	;# 
  3101   000269                     ADACTPPS        equ	617	;# 
  3102   00026A                     SPI1SCKPPS      equ	618	;# 
  3103   00026B                     SPI1SDIPPS      equ	619	;# 
  3104   00026C                     SPI1SSPPS       equ	620	;# 
  3105   00026D                     SPI2SCKPPS      equ	621	;# 
  3106   00026E                     SPI2SDIPPS      equ	622	;# 
  3107   00026F                     SPI2SSPPS       equ	623	;# 
  3108   000270                     I2C1SDAPPS      equ	624	;# 
  3109   000271                     I2C1SCLPPS      equ	625	;# 
  3110   000272                     U1RXPPS         equ	626	;# 
  3111   000273                     U1CTSPPS        equ	627	;# 
  3112   000274                     U2RXPPS         equ	628	;# 
  3113   000275                     U2CTSPPS        equ	629	;# 
  3114   000276                     U3RXPPS         equ	630	;# 
  3115   000277                     U3CTSPPS        equ	631	;# 
  3116   000278                     U4RXPPS         equ	632	;# 
  3117   000279                     U4CTSPPS        equ	633	;# 
  3118   00027A                     U5RXPPS         equ	634	;# 
  3119   00027B                     U5CTSPPS        equ	635	;# 
  3120   000286                     RC4I2C          equ	646	;# 
  3121   000287                     RC3I2C          equ	647	;# 
  3122   000288                     RB2I2C          equ	648	;# 
  3123   000289                     RB1I2C          equ	649	;# 
  3124   00028A                     I2C1RXB         equ	650	;# 
  3125   00028B                     I2C1TXB         equ	651	;# 
  3126   00028C                     I2C1CNTL        equ	652	;# 
  3127   00028D                     I2C1CNTH        equ	653	;# 
  3128   00028E                     I2C1ADB0        equ	654	;# 
  3129   00028F                     I2C1ADB1        equ	655	;# 
  3130   000290                     I2C1ADR0        equ	656	;# 
  3131   000291                     I2C1ADR1        equ	657	;# 
  3132   000292                     I2C1ADR2        equ	658	;# 
  3133   000293                     I2C1ADR3        equ	659	;# 
  3134   000294                     I2C1CON0        equ	660	;# 
  3135   000295                     I2C1CON1        equ	661	;# 
  3136   000296                     I2C1CON2        equ	662	;# 
  3137   000297                     I2C1ERR         equ	663	;# 
  3138   000298                     I2C1STAT0       equ	664	;# 
  3139   000299                     I2C1STAT1       equ	665	;# 
  3140   00029A                     I2C1PIR         equ	666	;# 
  3141   00029B                     I2C1PIE         equ	667	;# 
  3142   00029C                     I2C1BTO         equ	668	;# 
  3143   00029D                     I2C1BAUD        equ	669	;# 
  3144   00029E                     I2C1CLK         equ	670	;# 
  3145   00029F                     I2C1BTOC        equ	671	;# 
  3146   0002A1                     U1RXB           equ	673	;# 
  3147   0002A1                     U1RXBL          equ	673	;# 
  3148   0002A2                     U1RXCHK         equ	674	;# 
  3149   0002A3                     U1TXB           equ	675	;# 
  3150   0002A3                     U1TXBL          equ	675	;# 
  3151   0002A4                     U1TXCHK         equ	676	;# 
  3152   0002A5                     U1P1            equ	677	;# 
  3153   0002A5                     U1P1L           equ	677	;# 
  3154   0002A6                     U1P1H           equ	678	;# 
  3155   0002A7                     U1P2            equ	679	;# 
  3156   0002A7                     U1P2L           equ	679	;# 
  3157   0002A8                     U1P2H           equ	680	;# 
  3158   0002A9                     U1P3            equ	681	;# 
  3159   0002A9                     U1P3L           equ	681	;# 
  3160   0002AA                     U1P3H           equ	682	;# 
  3161   0002AB                     U1CON0          equ	683	;# 
  3162   0002AC                     U1CON1          equ	684	;# 
  3163   0002AD                     U1CON2          equ	685	;# 
  3164   0002AE                     U1BRG           equ	686	;# 
  3165   0002AE                     U1BRGL          equ	686	;# 
  3166   0002AF                     U1BRGH          equ	687	;# 
  3167   0002B0                     U1FIFO          equ	688	;# 
  3168   0002B1                     U1UIR           equ	689	;# 
  3169   0002B2                     U1ERRIR         equ	690	;# 
  3170   0002B3                     U1ERRIE         equ	691	;# 
  3171   0002B4                     U2RXB           equ	692	;# 
  3172   0002B4                     U2RXBL          equ	692	;# 
  3173   0002B5                     U2RXCHK         equ	693	;# 
  3174   0002B6                     U2TXB           equ	694	;# 
  3175   0002B6                     U2TXBL          equ	694	;# 
  3176   0002B7                     U2TXCHK         equ	695	;# 
  3177   0002B8                     U2P1            equ	696	;# 
  3178   0002B8                     U2P1L           equ	696	;# 
  3179   0002B9                     U2P1H           equ	697	;# 
  3180   0002BA                     U2P2            equ	698	;# 
  3181   0002BA                     U2P2L           equ	698	;# 
  3182   0002BB                     U2P2H           equ	699	;# 
  3183   0002BC                     U2P3            equ	700	;# 
  3184   0002BC                     U2P3L           equ	700	;# 
  3185   0002BD                     U2P3H           equ	701	;# 
  3186   0002BE                     U2CON0          equ	702	;# 
  3187   0002BF                     U2CON1          equ	703	;# 
  3188   0002C0                     U2CON2          equ	704	;# 
  3189   0002C1                     U2BRG           equ	705	;# 
  3190   0002C1                     U2BRGL          equ	705	;# 
  3191   0002C2                     U2BRGH          equ	706	;# 
  3192   0002C3                     U2FIFO          equ	707	;# 
  3193   0002C4                     U2UIR           equ	708	;# 
  3194   0002C5                     U2ERRIR         equ	709	;# 
  3195   0002C6                     U2ERRIE         equ	710	;# 
  3196   0002C7                     U3RXB           equ	711	;# 
  3197   0002C7                     U3RXBL          equ	711	;# 
  3198   0002C9                     U3TXB           equ	713	;# 
  3199   0002C9                     U3TXBL          equ	713	;# 
  3200   0002CB                     U3P1            equ	715	;# 
  3201   0002CB                     U3P1L           equ	715	;# 
  3202   0002CD                     U3P2            equ	717	;# 
  3203   0002CD                     U3P2L           equ	717	;# 
  3204   0002CF                     U3P3            equ	719	;# 
  3205   0002CF                     U3P3L           equ	719	;# 
  3206   0002D1                     U3CON0          equ	721	;# 
  3207   0002D2                     U3CON1          equ	722	;# 
  3208   0002D3                     U3CON2          equ	723	;# 
  3209   0002D4                     U3BRG           equ	724	;# 
  3210   0002D4                     U3BRGL          equ	724	;# 
  3211   0002D5                     U3BRGH          equ	725	;# 
  3212   0002D6                     U3FIFO          equ	726	;# 
  3213   0002D7                     U3UIR           equ	727	;# 
  3214   0002D8                     U3ERRIR         equ	728	;# 
  3215   0002D9                     U3ERRIE         equ	729	;# 
  3216   0002DA                     U4RXB           equ	730	;# 
  3217   0002DA                     U4RXBL          equ	730	;# 
  3218   0002DC                     U4TXB           equ	732	;# 
  3219   0002DC                     U4TXBL          equ	732	;# 
  3220   0002DE                     U4P1            equ	734	;# 
  3221   0002DE                     U4P1L           equ	734	;# 
  3222   0002E0                     U4P2            equ	736	;# 
  3223   0002E0                     U4P2L           equ	736	;# 
  3224   0002E2                     U4P3            equ	738	;# 
  3225   0002E2                     U4P3L           equ	738	;# 
  3226   0002E4                     U4CON0          equ	740	;# 
  3227   0002E5                     U4CON1          equ	741	;# 
  3228   0002E6                     U4CON2          equ	742	;# 
  3229   0002E7                     U4BRG           equ	743	;# 
  3230   0002E7                     U4BRGL          equ	743	;# 
  3231   0002E8                     U4BRGH          equ	744	;# 
  3232   0002E9                     U4FIFO          equ	745	;# 
  3233   0002EA                     U4UIR           equ	746	;# 
  3234   0002EB                     U4ERRIR         equ	747	;# 
  3235   0002EC                     U4ERRIE         equ	748	;# 
  3236   0002ED                     U5RXB           equ	749	;# 
  3237   0002ED                     U5RXBL          equ	749	;# 
  3238   0002EF                     U5TXB           equ	751	;# 
  3239   0002EF                     U5TXBL          equ	751	;# 
  3240   0002F1                     U5P1            equ	753	;# 
  3241   0002F1                     U5P1L           equ	753	;# 
  3242   0002F3                     U5P2            equ	755	;# 
  3243   0002F3                     U5P2L           equ	755	;# 
  3244   0002F5                     U5P3            equ	757	;# 
  3245   0002F5                     U5P3L           equ	757	;# 
  3246   0002F7                     U5CON0          equ	759	;# 
  3247   0002F8                     U5CON1          equ	760	;# 
  3248   0002F9                     U5CON2          equ	761	;# 
  3249   0002FA                     U5BRG           equ	762	;# 
  3250   0002FA                     U5BRGL          equ	762	;# 
  3251   0002FB                     U5BRGH          equ	763	;# 
  3252   0002FC                     U5FIFO          equ	764	;# 
  3253   0002FD                     U5UIR           equ	765	;# 
  3254   0002FE                     U5ERRIR         equ	766	;# 
  3255   0002FF                     U5ERRIE         equ	767	;# 
  3256   000300                     SMT1TMR         equ	768	;# 
  3257   000300                     SMT1TMRL        equ	768	;# 
  3258   000301                     SMT1TMRH        equ	769	;# 
  3259   000302                     SMT1TMRU        equ	770	;# 
  3260   000303                     SMT1CPR         equ	771	;# 
  3261   000303                     SMT1CPRL        equ	771	;# 
  3262   000304                     SMT1CPRH        equ	772	;# 
  3263   000305                     SMT1CPRU        equ	773	;# 
  3264   000306                     SMT1CPW         equ	774	;# 
  3265   000306                     SMT1CPWL        equ	774	;# 
  3266   000307                     SMT1CPWH        equ	775	;# 
  3267   000308                     SMT1CPWU        equ	776	;# 
  3268   000309                     SMT1PR          equ	777	;# 
  3269   000309                     SMT1PRL         equ	777	;# 
  3270   00030A                     SMT1PRH         equ	778	;# 
  3271   00030B                     SMT1PRU         equ	779	;# 
  3272   00030C                     SMT1CON0        equ	780	;# 
  3273   00030D                     SMT1CON1        equ	781	;# 
  3274   00030E                     SMT1STAT        equ	782	;# 
  3275   00030F                     SMT1CLK         equ	783	;# 
  3276   000310                     SMT1SIG         equ	784	;# 
  3277   000311                     SMT1WIN         equ	785	;# 
  3278   000318                     TMR0L           equ	792	;# 
  3279   000318                     TMR0            equ	792	;# 
  3280   000319                     TMR0H           equ	793	;# 
  3281   000319                     PR0             equ	793	;# 
  3282   00031A                     T0CON0          equ	794	;# 
  3283   00031B                     T0CON1          equ	795	;# 
  3284   00031C                     TMR1            equ	796	;# 
  3285   00031C                     TMR1L           equ	796	;# 
  3286   00031D                     TMR1H           equ	797	;# 
  3287   00031E                     T1CON           equ	798	;# 
  3288   00031E                     TMR1CON         equ	798	;# 
  3289   00031F                     T1GCON          equ	799	;# 
  3290   00031F                     TMR1GCON        equ	799	;# 
  3291   000320                     T1GATE          equ	800	;# 
  3292   000320                     TMR1GATE        equ	800	;# 
  3293   000321                     T1CLK           equ	801	;# 
  3294   000321                     TMR1CLK         equ	801	;# 
  3295   000321                     PR1             equ	801	;# 
  3296   000322                     T2TMR           equ	802	;# 
  3297   000322                     TMR2            equ	802	;# 
  3298   000323                     T2PR            equ	803	;# 
  3299   000323                     PR2             equ	803	;# 
  3300   000324                     T2CON           equ	804	;# 
  3301   000325                     T2HLT           equ	805	;# 
  3302   000326                     T2CLKCON        equ	806	;# 
  3303   000326                     T2CLK           equ	806	;# 
  3304   000327                     T2RST           equ	807	;# 
  3305   000328                     TMR3            equ	808	;# 
  3306   000328                     TMR3L           equ	808	;# 
  3307   000329                     TMR3H           equ	809	;# 
  3308   00032A                     T3CON           equ	810	;# 
  3309   00032A                     TMR3CON         equ	810	;# 
  3310   00032B                     T3GCON          equ	811	;# 
  3311   00032B                     TMR3GCON        equ	811	;# 
  3312   00032C                     T3GATE          equ	812	;# 
  3313   00032C                     TMR3GATE        equ	812	;# 
  3314   00032D                     T3CLK           equ	813	;# 
  3315   00032D                     TMR3CLK         equ	813	;# 
  3316   00032D                     PR3             equ	813	;# 
  3317   00032E                     T4TMR           equ	814	;# 
  3318   00032E                     TMR4            equ	814	;# 
  3319   00032F                     T4PR            equ	815	;# 
  3320   00032F                     PR4             equ	815	;# 
  3321   000330                     T4CON           equ	816	;# 
  3322   000331                     T4HLT           equ	817	;# 
  3323   000332                     T4CLKCON        equ	818	;# 
  3324   000332                     T4CLK           equ	818	;# 
  3325   000333                     T4RST           equ	819	;# 
  3326   000334                     TMR5            equ	820	;# 
  3327   000334                     TMR5L           equ	820	;# 
  3328   000335                     TMR5H           equ	821	;# 
  3329   000336                     T5CON           equ	822	;# 
  3330   000336                     TMR5CON         equ	822	;# 
  3331   000337                     T5GCON          equ	823	;# 
  3332   000337                     TMR5GCON        equ	823	;# 
  3333   000338                     T5GATE          equ	824	;# 
  3334   000338                     TMR5GATE        equ	824	;# 
  3335   000339                     T5CLK           equ	825	;# 
  3336   000339                     TMR5CLK         equ	825	;# 
  3337   000339                     PR5             equ	825	;# 
  3338   00033A                     T6TMR           equ	826	;# 
  3339   00033A                     TMR6            equ	826	;# 
  3340   00033B                     T6PR            equ	827	;# 
  3341   00033B                     PR6             equ	827	;# 
  3342   00033C                     T6CON           equ	828	;# 
  3343   00033D                     T6HLT           equ	829	;# 
  3344   00033E                     T6CLKCON        equ	830	;# 
  3345   00033E                     T6CLK           equ	830	;# 
  3346   00033F                     T6RST           equ	831	;# 
  3347   000340                     CCPR1           equ	832	;# 
  3348   000340                     CCPR1L          equ	832	;# 
  3349   000341                     CCPR1H          equ	833	;# 
  3350   000342                     CCP1CON         equ	834	;# 
  3351   000343                     CCP1CAP         equ	835	;# 
  3352   000344                     CCPR2           equ	836	;# 
  3353   000344                     CCPR2L          equ	836	;# 
  3354   000345                     CCPR2H          equ	837	;# 
  3355   000346                     CCP2CON         equ	838	;# 
  3356   000347                     CCP2CAP         equ	839	;# 
  3357   000348                     CCPR3           equ	840	;# 
  3358   000348                     CCPR3L          equ	840	;# 
  3359   000349                     CCPR3H          equ	841	;# 
  3360   00034A                     CCP3CON         equ	842	;# 
  3361   00034B                     CCP3CAP         equ	843	;# 
  3362   00034C                     CCPTMRS0        equ	844	;# 
  3363   00034F                     CRCDATA         equ	847	;# 
  3364   00034F                     CRCDATAL        equ	847	;# 
  3365   000350                     CRCDATAH        equ	848	;# 
  3366   000351                     CRCDATAU        equ	849	;# 
  3367   000352                     CRCDATAT        equ	850	;# 
  3368   000353                     CRCOUT          equ	851	;# 
  3369   000353                     CRCSHFT         equ	851	;# 
  3370   000353                     CRCXOR          equ	851	;# 
  3371   000353                     CRCOUTL         equ	851	;# 
  3372   000353                     CRCSHFTL        equ	851	;# 
  3373   000353                     CRCSHIFTL       equ	851	;# 
  3374   000353                     CRCXORL         equ	851	;# 
  3375   000354                     CRCOUTH         equ	852	;# 
  3376   000354                     CRCSHFTH        equ	852	;# 
  3377   000354                     CRCSHIFTH       equ	852	;# 
  3378   000354                     CRCXORH         equ	852	;# 
  3379   000355                     CRCOUTU         equ	853	;# 
  3380   000355                     CRCSHFTU        equ	853	;# 
  3381   000355                     CRCSHIFTU       equ	853	;# 
  3382   000355                     CRCXORU         equ	853	;# 
  3383   000356                     CRCOUTT         equ	854	;# 
  3384   000356                     CRCSHFTT        equ	854	;# 
  3385   000356                     CRCSHIFTT       equ	854	;# 
  3386   000356                     CRCXORT         equ	854	;# 
  3387   000357                     CRCCON0         equ	855	;# 
  3388   000358                     CRCCON1         equ	856	;# 
  3389   000359                     CRCCON2         equ	857	;# 
  3390   00035A                     SCANLADR        equ	858	;# 
  3391   00035A                     SCANLADRL       equ	858	;# 
  3392   00035B                     SCANLADRH       equ	859	;# 
  3393   00035C                     SCANLADRU       equ	860	;# 
  3394   00035D                     SCANHADR        equ	861	;# 
  3395   00035D                     SCANHADRL       equ	861	;# 
  3396   00035E                     SCANHADRH       equ	862	;# 
  3397   00035F                     SCANHADRU       equ	863	;# 
  3398   000360                     SCANCON0        equ	864	;# 
  3399   000361                     SCANTRIG        equ	865	;# 
  3400   000362                     IPR0            equ	866	;# 
  3401   000363                     IPR1            equ	867	;# 
  3402   000364                     IPR2            equ	868	;# 
  3403   000365                     IPR3            equ	869	;# 
  3404   000366                     IPR4            equ	870	;# 
  3405   000367                     IPR5            equ	871	;# 
  3406   000368                     IPR6            equ	872	;# 
  3407   000369                     IPR7            equ	873	;# 
  3408   00036A                     IPR8            equ	874	;# 
  3409   00036B                     IPR9            equ	875	;# 
  3410   00036C                     IPR10           equ	876	;# 
  3411   00036D                     IPR11           equ	877	;# 
  3412   00036E                     IPR12           equ	878	;# 
  3413   00036F                     IPR13           equ	879	;# 
  3414   000370                     IPR14           equ	880	;# 
  3415   000371                     IPR15           equ	881	;# 
  3416   000373                     STATUS_CSHAD    equ	883	;# 
  3417   000374                     WREG_CSHAD      equ	884	;# 
  3418   000375                     BSR_CSHAD       equ	885	;# 
  3419   000376                     SHADCON         equ	886	;# 
  3420   000377                     STATUS_SHAD     equ	887	;# 
  3421   000378                     WREG_SHAD       equ	888	;# 
  3422   000379                     BSR_SHAD        equ	889	;# 
  3423   00037A                     PCLATH_SHAD     equ	890	;# 
  3424   00037B                     PCLATU_SHAD     equ	891	;# 
  3425   00037C                     FSR0SH          equ	892	;# 
  3426   00037C                     FSR0L_SHAD      equ	892	;# 
  3427   00037D                     FSR0H_SHAD      equ	893	;# 
  3428   00037E                     FSR1SH          equ	894	;# 
  3429   00037E                     FSR1L_SHAD      equ	894	;# 
  3430   00037F                     FSR1H_SHAD      equ	895	;# 
  3431   000380                     FSR2SH          equ	896	;# 
  3432   000380                     FSR2L_SHAD      equ	896	;# 
  3433   000381                     FSR2H_SHAD      equ	897	;# 
  3434   000382                     PRODSH          equ	898	;# 
  3435   000382                     PRODL_SHAD      equ	898	;# 
  3436   000383                     PRODH_SHAD      equ	899	;# 
  3437   000387                     TU16ACON0       equ	903	;# 
  3438   000388                     TU16ACON1       equ	904	;# 
  3439   000389                     TU16AHLT        equ	905	;# 
  3440   00038A                     TU16APS         equ	906	;# 
  3441   00038B                     TU16ATMR        equ	907	;# 
  3442   00038B                     TU16ACR         equ	907	;# 
  3443   00038B                     TU16ATMRL       equ	907	;# 
  3444   00038B                     TU16ACRL        equ	907	;# 
  3445   00038C                     TU16ATMRH       equ	908	;# 
  3446   00038C                     TU16ACRH        equ	908	;# 
  3447   00038D                     TU16APR         equ	909	;# 
  3448   00038D                     TU16APRL        equ	909	;# 
  3449   00038E                     TU16APRH        equ	910	;# 
  3450   00038F                     TU16ACLK        equ	911	;# 
  3451   000390                     TU16AERS        equ	912	;# 
  3452   000393                     TU16BCON0       equ	915	;# 
  3453   000394                     TU16BCON1       equ	916	;# 
  3454   000395                     TU16BHLT        equ	917	;# 
  3455   000396                     TU16BPS         equ	918	;# 
  3456   000397                     TU16BTMR        equ	919	;# 
  3457   000397                     TU16BCR         equ	919	;# 
  3458   000397                     TU16BTMRL       equ	919	;# 
  3459   000397                     TU16BCRL        equ	919	;# 
  3460   000398                     TU16BTMRH       equ	920	;# 
  3461   000398                     TU16BCRH        equ	920	;# 
  3462   000399                     TU16BPR         equ	921	;# 
  3463   000399                     TU16BPRL        equ	921	;# 
  3464   00039A                     TU16BPRH        equ	922	;# 
  3465   00039B                     TU16BCLK        equ	923	;# 
  3466   00039C                     TU16BERS        equ	924	;# 
  3467   0003BB                     TUCHAIN         equ	955	;# 
  3468   0003BC                     CWG1CLK         equ	956	;# 
  3469   0003BC                     CWG1CLKCON      equ	956	;# 
  3470   0003BD                     CWG1ISM         equ	957	;# 
  3471   0003BE                     CWG1DBR         equ	958	;# 
  3472   0003BF                     CWG1DBF         equ	959	;# 
  3473   0003C0                     CWG1CON0        equ	960	;# 
  3474   0003C1                     CWG1CON1        equ	961	;# 
  3475   0003C2                     CWG1AS0         equ	962	;# 
  3476   0003C3                     CWG1AS1         equ	963	;# 
  3477   0003C4                     CWG1STR         equ	964	;# 
  3478   0003C5                     CWG2CLK         equ	965	;# 
  3479   0003C5                     CWG2CLKCON      equ	965	;# 
  3480   0003C6                     CWG2ISM         equ	966	;# 
  3481   0003C7                     CWG2DBR         equ	967	;# 
  3482   0003C8                     CWG2DBF         equ	968	;# 
  3483   0003C9                     CWG2CON0        equ	969	;# 
  3484   0003CA                     CWG2CON1        equ	970	;# 
  3485   0003CB                     CWG2AS0         equ	971	;# 
  3486   0003CC                     CWG2AS1         equ	972	;# 
  3487   0003CD                     CWG2STR         equ	973	;# 
  3488   0003CE                     CWG3CLK         equ	974	;# 
  3489   0003CE                     CWG3CLKCON      equ	974	;# 
  3490   0003CF                     CWG3ISM         equ	975	;# 
  3491   0003D0                     CWG3DBR         equ	976	;# 
  3492   0003D1                     CWG3DBF         equ	977	;# 
  3493   0003D2                     CWG3CON0        equ	978	;# 
  3494   0003D3                     CWG3CON1        equ	979	;# 
  3495   0003D4                     CWG3AS0         equ	980	;# 
  3496   0003D5                     CWG3AS1         equ	981	;# 
  3497   0003D6                     CWG3STR         equ	982	;# 
  3498   0003D7                     FVRCON          equ	983	;# 
  3499   0003D8                     ADCPCON         equ	984	;# 
  3500   0003D8                     ADCP            equ	984	;# 
  3501   0003D9                     ADLTH           equ	985	;# 
  3502   0003D9                     ADLTHL          equ	985	;# 
  3503   0003DA                     ADLTHH          equ	986	;# 
  3504   0003DB                     ADUTH           equ	987	;# 
  3505   0003DB                     ADUTHL          equ	987	;# 
  3506   0003DC                     ADUTHH          equ	988	;# 
  3507   0003DD                     ADERR           equ	989	;# 
  3508   0003DD                     ADERRL          equ	989	;# 
  3509   0003DE                     ADERRH          equ	990	;# 
  3510   0003DF                     ADSTPT          equ	991	;# 
  3511   0003DF                     ADSTPTL         equ	991	;# 
  3512   0003E0                     ADSTPTH         equ	992	;# 
  3513   0003E1                     ADFLTR          equ	993	;# 
  3514   0003E1                     ADFLTRL         equ	993	;# 
  3515   0003E2                     ADFLTRH         equ	994	;# 
  3516   0003E3                     ADACC           equ	995	;# 
  3517   0003E3                     ADACCL          equ	995	;# 
  3518   0003E4                     ADACCH          equ	996	;# 
  3519   0003E5                     ADACCU          equ	997	;# 
  3520   0003E6                     ADCNT           equ	998	;# 
  3521   0003E7                     ADRPT           equ	999	;# 
  3522   0003E8                     ADPREV          equ	1000	;# 
  3523   0003E8                     ADPREVL         equ	1000	;# 
  3524   0003E9                     ADPREVH         equ	1001	;# 
  3525   0003EA                     ADRES           equ	1002	;# 
  3526   0003EA                     ADRESL          equ	1002	;# 
  3527   0003EB                     ADRESH          equ	1003	;# 
  3528   0003EC                     ADPCH           equ	1004	;# 
  3529   0003EE                     ADACQ           equ	1006	;# 
  3530   0003EE                     ADACQL          equ	1006	;# 
  3531   0003EF                     ADACQH          equ	1007	;# 
  3532   0003F0                     ADCAP           equ	1008	;# 
  3533   0003F1                     ADPRE           equ	1009	;# 
  3534   0003F1                     ADPREL          equ	1009	;# 
  3535   0003F2                     ADPREH          equ	1010	;# 
  3536   0003F3                     ADCON0          equ	1011	;# 
  3537   0003F4                     ADCON1          equ	1012	;# 
  3538   0003F5                     ADCON2          equ	1013	;# 
  3539   0003F6                     ADCON3          equ	1014	;# 
  3540   0003F7                     ADSTAT          equ	1015	;# 
  3541   0003F8                     ADREF           equ	1016	;# 
  3542   0003F9                     ADACT           equ	1017	;# 
  3543   0003FA                     ADCLK           equ	1018	;# 
  3544   0003FB                     ADCTX           equ	1019	;# 
  3545   0003FC                     ADCSEL1         equ	1020	;# 
  3546   0003FD                     ADCSEL2         equ	1021	;# 
  3547   0003FE                     ADCSEL3         equ	1022	;# 
  3548   0003FF                     ADCSEL4         equ	1023	;# 
  3549   000400                     ANSELA          equ	1024	;# 
  3550   000401                     WPUA            equ	1025	;# 
  3551   000402                     ODCONA          equ	1026	;# 
  3552   000403                     SLRCONA         equ	1027	;# 
  3553   000404                     INLVLA          equ	1028	;# 
  3554   000405                     IOCAP           equ	1029	;# 
  3555   000406                     IOCAN           equ	1030	;# 
  3556   000407                     IOCAF           equ	1031	;# 
  3557   000408                     ANSELB          equ	1032	;# 
  3558   000409                     WPUB            equ	1033	;# 
  3559   00040A                     ODCONB          equ	1034	;# 
  3560   00040B                     SLRCONB         equ	1035	;# 
  3561   00040C                     INLVLB          equ	1036	;# 
  3562   00040D                     IOCBP           equ	1037	;# 
  3563   00040E                     IOCBN           equ	1038	;# 
  3564   00040F                     IOCBF           equ	1039	;# 
  3565   000410                     ANSELC          equ	1040	;# 
  3566   000411                     WPUC            equ	1041	;# 
  3567   000412                     ODCONC          equ	1042	;# 
  3568   000413                     SLRCONC         equ	1043	;# 
  3569   000414                     INLVLC          equ	1044	;# 
  3570   000415                     IOCCP           equ	1045	;# 
  3571   000416                     IOCCN           equ	1046	;# 
  3572   000417                     IOCCF           equ	1047	;# 
  3573   000421                     WPUE            equ	1057	;# 
  3574   000424                     INLVLE          equ	1060	;# 
  3575   000425                     IOCEP           equ	1061	;# 
  3576   000426                     IOCEN           equ	1062	;# 
  3577   000427                     IOCEF           equ	1063	;# 
  3578   000440                     NCO1ACC         equ	1088	;# 
  3579   000440                     NCO1ACCL        equ	1088	;# 
  3580   000441                     NCO1ACCH        equ	1089	;# 
  3581   000442                     NCO1ACCU        equ	1090	;# 
  3582   000443                     NCO1INC         equ	1091	;# 
  3583   000443                     NCO1INCL        equ	1091	;# 
  3584   000444                     NCO1INCH        equ	1092	;# 
  3585   000445                     NCO1INCU        equ	1093	;# 
  3586   000446                     NCO1CON         equ	1094	;# 
  3587   000447                     NCO1CLK         equ	1095	;# 
  3588   000448                     NCO2ACC         equ	1096	;# 
  3589   000448                     NCO2ACCL        equ	1096	;# 
  3590   000449                     NCO2ACCH        equ	1097	;# 
  3591   00044A                     NCO2ACCU        equ	1098	;# 
  3592   00044B                     NCO2INC         equ	1099	;# 
  3593   00044B                     NCO2INCL        equ	1099	;# 
  3594   00044C                     NCO2INCH        equ	1100	;# 
  3595   00044D                     NCO2INCU        equ	1101	;# 
  3596   00044E                     NCO2CON         equ	1102	;# 
  3597   00044F                     NCO2CLK         equ	1103	;# 
  3598   000450                     NCO3ACC         equ	1104	;# 
  3599   000450                     NCO3ACCL        equ	1104	;# 
  3600   000451                     NCO3ACCH        equ	1105	;# 
  3601   000452                     NCO3ACCU        equ	1106	;# 
  3602   000453                     NCO3INC         equ	1107	;# 
  3603   000453                     NCO3INCL        equ	1107	;# 
  3604   000454                     NCO3INCH        equ	1108	;# 
  3605   000455                     NCO3INCU        equ	1109	;# 
  3606   000456                     NCO3CON         equ	1110	;# 
  3607   000457                     NCO3CLK         equ	1111	;# 
  3608   000458                     FSCMCON         equ	1112	;# 
  3609   000459                     IVTLOCK         equ	1113	;# 
  3610   00045A                     IVTAD           equ	1114	;# 
  3611   00045A                     IVTADL          equ	1114	;# 
  3612   00045B                     IVTADH          equ	1115	;# 
  3613   00045C                     IVTADU          equ	1116	;# 
  3614   00045D                     IVTBASE         equ	1117	;# 
  3615   00045D                     IVTBASEL        equ	1117	;# 
  3616   00045E                     IVTBASEH        equ	1118	;# 
  3617   00045F                     IVTBASEU        equ	1119	;# 
  3618   000460                     PWM1ERS         equ	1120	;# 
  3619   000461                     PWM1CLK         equ	1121	;# 
  3620   000462                     PWM1LDS         equ	1122	;# 
  3621   000463                     PWM1PR          equ	1123	;# 
  3622   000463                     PWM1PRL         equ	1123	;# 
  3623   000464                     PWM1PRH         equ	1124	;# 
  3624   000465                     PWM1CPRE        equ	1125	;# 
  3625   000466                     PWM1PIPOS       equ	1126	;# 
  3626   000467                     PWM1GIR         equ	1127	;# 
  3627   000468                     PWM1GIE         equ	1128	;# 
  3628   000469                     PWM1CON         equ	1129	;# 
  3629   00046A                     PWM1S1CFG       equ	1130	;# 
  3630   00046B                     PWM1S1P1        equ	1131	;# 
  3631   00046B                     PWM1S1P1L       equ	1131	;# 
  3632   00046C                     PWM1S1P1H       equ	1132	;# 
  3633   00046D                     PWM1S1P2        equ	1133	;# 
  3634   00046D                     PWM1S1P2L       equ	1133	;# 
  3635   00046E                     PWM1S1P2H       equ	1134	;# 
  3636   00046F                     PWM2ERS         equ	1135	;# 
  3637   000470                     PWM2CLK         equ	1136	;# 
  3638   000471                     PWM2LDS         equ	1137	;# 
  3639   000472                     PWM2PR          equ	1138	;# 
  3640   000472                     PWM2PRL         equ	1138	;# 
  3641   000473                     PWM2PRH         equ	1139	;# 
  3642   000474                     PWM2CPRE        equ	1140	;# 
  3643   000475                     PWM2PIPOS       equ	1141	;# 
  3644   000476                     PWM2GIR         equ	1142	;# 
  3645   000477                     PWM2GIE         equ	1143	;# 
  3646   000478                     PWM2CON         equ	1144	;# 
  3647   000479                     PWM2S1CFG       equ	1145	;# 
  3648   00047A                     PWM2S1P1        equ	1146	;# 
  3649   00047A                     PWM2S1P1L       equ	1146	;# 
  3650   00047B                     PWM2S1P1H       equ	1147	;# 
  3651   00047C                     PWM2S1P2        equ	1148	;# 
  3652   00047C                     PWM2S1P2L       equ	1148	;# 
  3653   00047D                     PWM2S1P2H       equ	1149	;# 
  3654   00047E                     PWM3ERS         equ	1150	;# 
  3655   00047F                     PWM3CLK         equ	1151	;# 
  3656   000480                     PWM3LDS         equ	1152	;# 
  3657   000481                     PWM3PR          equ	1153	;# 
  3658   000481                     PWM3PRL         equ	1153	;# 
  3659   000482                     PWM3PRH         equ	1154	;# 
  3660   000483                     PWM3CPRE        equ	1155	;# 
  3661   000484                     PWM3PIPOS       equ	1156	;# 
  3662   000485                     PWM3GIR         equ	1157	;# 
  3663   000486                     PWM3GIE         equ	1158	;# 
  3664   000487                     PWM3CON         equ	1159	;# 
  3665   000488                     PWM3S1CFG       equ	1160	;# 
  3666   000489                     PWM3S1P1        equ	1161	;# 
  3667   000489                     PWM3S1P1L       equ	1161	;# 
  3668   00048A                     PWM3S1P1H       equ	1162	;# 
  3669   00048B                     PWM3S1P2        equ	1163	;# 
  3670   00048B                     PWM3S1P2L       equ	1163	;# 
  3671   00048C                     PWM3S1P2H       equ	1164	;# 
  3672   00048D                     PWM4ERS         equ	1165	;# 
  3673   00048E                     PWM4CLK         equ	1166	;# 
  3674   00048F                     PWM4LDS         equ	1167	;# 
  3675   000490                     PWM4PR          equ	1168	;# 
  3676   000490                     PWM4PRL         equ	1168	;# 
  3677   000491                     PWM4PRH         equ	1169	;# 
  3678   000492                     PWM4CPRE        equ	1170	;# 
  3679   000493                     PWM4PIPOS       equ	1171	;# 
  3680   000494                     PWM4GIR         equ	1172	;# 
  3681   000495                     PWM4GIE         equ	1173	;# 
  3682   000496                     PWM4CON         equ	1174	;# 
  3683   000497                     PWM4S1CFG       equ	1175	;# 
  3684   000498                     PWM4S1P1        equ	1176	;# 
  3685   000498                     PWM4S1P1L       equ	1176	;# 
  3686   000499                     PWM4S1P1H       equ	1177	;# 
  3687   00049A                     PWM4S1P2        equ	1178	;# 
  3688   00049A                     PWM4S1P2L       equ	1178	;# 
  3689   00049B                     PWM4S1P2H       equ	1179	;# 
  3690   00049C                     PWMLOAD         equ	1180	;# 
  3691   00049D                     PWMEN           equ	1181	;# 
  3692   00049E                     PIE0            equ	1182	;# 
  3693   00049F                     PIE1            equ	1183	;# 
  3694   0004A0                     PIE2            equ	1184	;# 
  3695   0004A1                     PIE3            equ	1185	;# 
  3696   0004A2                     PIE4            equ	1186	;# 
  3697   0004A3                     PIE5            equ	1187	;# 
  3698   0004A4                     PIE6            equ	1188	;# 
  3699   0004A5                     PIE7            equ	1189	;# 
  3700   0004A6                     PIE8            equ	1190	;# 
  3701   0004A7                     PIE9            equ	1191	;# 
  3702   0004A8                     PIE10           equ	1192	;# 
  3703   0004A9                     PIE11           equ	1193	;# 
  3704   0004AA                     PIE12           equ	1194	;# 
  3705   0004AB                     PIE13           equ	1195	;# 
  3706   0004AC                     PIE14           equ	1196	;# 
  3707   0004AD                     PIE15           equ	1197	;# 
  3708   0004AE                     PIR0            equ	1198	;# 
  3709   0004AF                     PIR1            equ	1199	;# 
  3710   0004B0                     PIR2            equ	1200	;# 
  3711   0004B1                     PIR3            equ	1201	;# 
  3712   0004B2                     PIR4            equ	1202	;# 
  3713   0004B3                     PIR5            equ	1203	;# 
  3714   0004B4                     PIR6            equ	1204	;# 
  3715   0004B5                     PIR7            equ	1205	;# 
  3716   0004B6                     PIR8            equ	1206	;# 
  3717   0004B7                     PIR9            equ	1207	;# 
  3718   0004B8                     PIR10           equ	1208	;# 
  3719   0004B9                     PIR11           equ	1209	;# 
  3720   0004BA                     PIR12           equ	1210	;# 
  3721   0004BB                     PIR13           equ	1211	;# 
  3722   0004BC                     PIR14           equ	1212	;# 
  3723   0004BD                     PIR15           equ	1213	;# 
  3724   0004BE                     LATA            equ	1214	;# 
  3725   0004BF                     LATB            equ	1215	;# 
  3726   0004C0                     LATC            equ	1216	;# 
  3727   0004C6                     TRISA           equ	1222	;# 
  3728   0004C7                     TRISB           equ	1223	;# 
  3729   0004C8                     TRISC           equ	1224	;# 
  3730   0004CA                     TRISE           equ	1226	;# 
  3731   0004CE                     PORTA           equ	1230	;# 
  3732   0004CF                     PORTB           equ	1231	;# 
  3733   0004D0                     PORTC           equ	1232	;# 
  3734   0004D2                     PORTE           equ	1234	;# 
  3735   0004D6                     INTCON0         equ	1238	;# 
  3736   0004D7                     INTCON1         equ	1239	;# 
  3737   0004D8                     STATUS          equ	1240	;# 
  3738   0004D9                     FSR2            equ	1241	;# 
  3739   0004D9                     FSR2L           equ	1241	;# 
  3740   0004DA                     FSR2H           equ	1242	;# 
  3741   0004DB                     PLUSW2          equ	1243	;# 
  3742   0004DC                     PREINC2         equ	1244	;# 
  3743   0004DD                     POSTDEC2        equ	1245	;# 
  3744   0004DE                     POSTINC2        equ	1246	;# 
  3745   0004DF                     INDF2           equ	1247	;# 
  3746   0004E0                     BSR             equ	1248	;# 
  3747   0004E1                     FSR1            equ	1249	;# 
  3748   0004E1                     FSR1L           equ	1249	;# 
  3749   0004E2                     FSR1H           equ	1250	;# 
  3750   0004E3                     PLUSW1          equ	1251	;# 
  3751   0004E4                     PREINC1         equ	1252	;# 
  3752   0004E5                     POSTDEC1        equ	1253	;# 
  3753   0004E6                     POSTINC1        equ	1254	;# 
  3754   0004E7                     INDF1           equ	1255	;# 
  3755   0004E8                     WREG            equ	1256	;# 
  3756   0004E9                     FSR0            equ	1257	;# 
  3757   0004E9                     FSR0L           equ	1257	;# 
  3758   0004EA                     FSR0H           equ	1258	;# 
  3759   0004EB                     PLUSW0          equ	1259	;# 
  3760   0004EC                     PREINC0         equ	1260	;# 
  3761   0004ED                     POSTDEC0        equ	1261	;# 
  3762   0004EE                     POSTINC0        equ	1262	;# 
  3763   0004EF                     INDF0           equ	1263	;# 
  3764   0004F0                     PCON0           equ	1264	;# 
  3765   0004F1                     PCON1           equ	1265	;# 
  3766   0004F2                     CPUDOZE         equ	1266	;# 
  3767   0004F3                     PROD            equ	1267	;# 
  3768   0004F3                     PRODL           equ	1267	;# 
  3769   0004F4                     PRODH           equ	1268	;# 
  3770   0004F5                     TABLAT          equ	1269	;# 
  3771   0004F6                     TBLPTR          equ	1270	;# 
  3772   0004F6                     TBLPTRL         equ	1270	;# 
  3773   0004F7                     TBLPTRH         equ	1271	;# 
  3774   0004F8                     TBLPTRU         equ	1272	;# 
  3775   0004F9                     PCLAT           equ	1273	;# 
  3776   0004F9                     PCL             equ	1273	;# 
  3777   0004FA                     PCLATH          equ	1274	;# 
  3778   0004FB                     PCLATU          equ	1275	;# 
  3779   0004FC                     STKPTR          equ	1276	;# 
  3780   0004FD                     TOS             equ	1277	;# 
  3781   0004FD                     TOSL            equ	1277	;# 
  3782   0004FE                     TOSH            equ	1278	;# 
  3783   0004FF                     TOSU            equ	1279	;# 
  3784   000038                     BOOTREG         equ	56	;# 
  3785   000039                     CLKRCON         equ	57	;# 
  3786   00003A                     CLKRCLK         equ	58	;# 
  3787   000040                     NVMCON0         equ	64	;# 
  3788   000041                     NVMCON1         equ	65	;# 
  3789   000042                     NVMLOCK         equ	66	;# 
  3790   000043                     NVMADR          equ	67	;# 
  3791   000043                     NVMADRL         equ	67	;# 
  3792   000044                     NVMADRH         equ	68	;# 
  3793   000045                     NVMADRU         equ	69	;# 
  3794   000046                     NVMDAT          equ	70	;# 
  3795   000046                     NVMDATL         equ	70	;# 
  3796   000047                     NVMDATH         equ	71	;# 
  3797   000048                     VREGCON         equ	72	;# 
  3798   000049                     BORCON          equ	73	;# 
  3799   00004A                     HLVDCON0        equ	74	;# 
  3800   00004B                     HLVDCON1        equ	75	;# 
  3801   00004C                     ZCDCON          equ	76	;# 
  3802   000060                     PMD0            equ	96	;# 
  3803   000061                     PMD1            equ	97	;# 
  3804   000062                     PMD2            equ	98	;# 
  3805   000063                     PMD3            equ	99	;# 
  3806   000064                     PMD4            equ	100	;# 
  3807   000065                     PMD5            equ	101	;# 
  3808   000066                     PMD6            equ	102	;# 
  3809   000067                     PMD7            equ	103	;# 
  3810   000068                     PMD8            equ	104	;# 
  3811   00006A                     MD1CON0         equ	106	;# 
  3812   00006B                     MD1CON1         equ	107	;# 
  3813   00006C                     MD1SRC          equ	108	;# 
  3814   00006D                     MD1CARL         equ	109	;# 
  3815   00006E                     MD1CARH         equ	110	;# 
  3816   00006F                     CMOUT           equ	111	;# 
  3817   000070                     CM1CON0         equ	112	;# 
  3818   000071                     CM1CON1         equ	113	;# 
  3819   000072                     CM1NCH          equ	114	;# 
  3820   000073                     CM1PCH          equ	115	;# 
  3821   000074                     CM2CON0         equ	116	;# 
  3822   000075                     CM2CON1         equ	117	;# 
  3823   000076                     CM2NCH          equ	118	;# 
  3824   000077                     CM2PCH          equ	119	;# 
  3825   000078                     WDTCON0         equ	120	;# 
  3826   000079                     WDTCON1         equ	121	;# 
  3827   00007A                     WDTPSL          equ	122	;# 
  3828   00007B                     WDTPSH          equ	123	;# 
  3829   00007C                     WDTTMR          equ	124	;# 
  3830   00007D                     DAC1DAT         equ	125	;# 
  3831   00007D                     DAC1DATL        equ	125	;# 
  3832   00007F                     DAC1CON         equ	127	;# 
  3833   000080                     SPI1RXB         equ	128	;# 
  3834   000081                     SPI1TXB         equ	129	;# 
  3835   000082                     SPI1TCNT        equ	130	;# 
  3836   000082                     SPI1TCNTL       equ	130	;# 
  3837   000083                     SPI1TCNTH       equ	131	;# 
  3838   000084                     SPI1CON0        equ	132	;# 
  3839   000085                     SPI1CON1        equ	133	;# 
  3840   000086                     SPI1CON2        equ	134	;# 
  3841   000087                     SPI1STATUS      equ	135	;# 
  3842   000088                     SPI1TWIDTH      equ	136	;# 
  3843   000089                     SPI1BAUD        equ	137	;# 
  3844   00008A                     SPI1INTF        equ	138	;# 
  3845   00008B                     SPI1INTE        equ	139	;# 
  3846   00008C                     SPI1CLK         equ	140	;# 
  3847   00008D                     SPI2RXB         equ	141	;# 
  3848   00008E                     SPI2TXB         equ	142	;# 
  3849   00008F                     SPI2TCNT        equ	143	;# 
  3850   00008F                     SPI2TCNTL       equ	143	;# 
  3851   000090                     SPI2TCNTH       equ	144	;# 
  3852   000091                     SPI2CON0        equ	145	;# 
  3853   000092                     SPI2CON1        equ	146	;# 
  3854   000093                     SPI2CON2        equ	147	;# 
  3855   000094                     SPI2STATUS      equ	148	;# 
  3856   000095                     SPI2TWIDTH      equ	149	;# 
  3857   000096                     SPI2BAUD        equ	150	;# 
  3858   000097                     SPI2INTF        equ	151	;# 
  3859   000098                     SPI2INTE        equ	152	;# 
  3860   000099                     SPI2CLK         equ	153	;# 
  3861   0000AC                     ACTCON          equ	172	;# 
  3862   0000AD                     OSCCON1         equ	173	;# 
  3863   0000AE                     OSCCON2         equ	174	;# 
  3864   0000AF                     OSCCON3         equ	175	;# 
  3865   0000B0                     OSCTUNE         equ	176	;# 
  3866   0000B1                     OSCFRQ          equ	177	;# 
  3867   0000B1                     OSCFREQ         equ	177	;# 
  3868   0000B2                     OSCSTAT         equ	178	;# 
  3869   0000B2                     OSCSTAT1        equ	178	;# 
  3870   0000B3                     OSCEN           equ	179	;# 
  3871   0000B4                     PRLOCK          equ	180	;# 
  3872   0000B5                     SCANPR          equ	181	;# 
  3873   0000B6                     DMA1PR          equ	182	;# 
  3874   0000B7                     DMA2PR          equ	183	;# 
  3875   0000B8                     DMA3PR          equ	184	;# 
  3876   0000B9                     DMA4PR          equ	185	;# 
  3877   0000BA                     DMA5PR          equ	186	;# 
  3878   0000BB                     DMA6PR          equ	187	;# 
  3879   0000BC                     DMA7PR          equ	188	;# 
  3880   0000BD                     DMA8PR          equ	189	;# 
  3881   0000BE                     MAINPR          equ	190	;# 
  3882   0000BF                     ISRPR           equ	191	;# 
  3883   0000D4                     CLCDATA         equ	212	;# 
  3884   0000D5                     CLCSELECT       equ	213	;# 
  3885   0000D6                     CLCnCON         equ	214	;# 
  3886   0000D7                     CLCnPOL         equ	215	;# 
  3887   0000D8                     CLCnSEL0        equ	216	;# 
  3888   0000D9                     CLCnSEL1        equ	217	;# 
  3889   0000DA                     CLCnSEL2        equ	218	;# 
  3890   0000DB                     CLCnSEL3        equ	219	;# 
  3891   0000DC                     CLCnGLS0        equ	220	;# 
  3892   0000DD                     CLCnGLS1        equ	221	;# 
  3893   0000DE                     CLCnGLS2        equ	222	;# 
  3894   0000DF                     CLCnGLS3        equ	223	;# 
  3895   0000E8                     DMASELECT       equ	232	;# 
  3896   0000E9                     DMAnBUF         equ	233	;# 
  3897   0000EA                     DMAnDCNT        equ	234	;# 
  3898   0000EA                     DMAnDCNTL       equ	234	;# 
  3899   0000EB                     DMAnDCNTH       equ	235	;# 
  3900   0000EC                     DMAnDPTR        equ	236	;# 
  3901   0000EC                     DMAnDPTRL       equ	236	;# 
  3902   0000ED                     DMAnDPTRH       equ	237	;# 
  3903   0000EE                     DMAnDSZ         equ	238	;# 
  3904   0000EE                     DMAnDSZL        equ	238	;# 
  3905   0000EF                     DMAnDSZH        equ	239	;# 
  3906   0000F0                     DMAnDSA         equ	240	;# 
  3907   0000F0                     DMAnDSAL        equ	240	;# 
  3908   0000F1                     DMAnDSAH        equ	241	;# 
  3909   0000F2                     DMAnSCNT        equ	242	;# 
  3910   0000F2                     DMAnSCNTL       equ	242	;# 
  3911   0000F3                     DMAnSCNTH       equ	243	;# 
  3912   0000F4                     DMAnSPTR        equ	244	;# 
  3913   0000F4                     DMAnSPTRL       equ	244	;# 
  3914   0000F5                     DMAnSPTRH       equ	245	;# 
  3915   0000F6                     DMAnSPTRU       equ	246	;# 
  3916   0000F7                     DMAnSSZ         equ	247	;# 
  3917   0000F7                     DMAnSSZL        equ	247	;# 
  3918   0000F8                     DMAnSSZH        equ	248	;# 
  3919   0000F9                     DMAnSSA         equ	249	;# 
  3920   0000F9                     DMAnSSAL        equ	249	;# 
  3921   0000FA                     DMAnSSAH        equ	250	;# 
  3922   0000FB                     DMAnSSAU        equ	251	;# 
  3923   0000FC                     DMAnCON0        equ	252	;# 
  3924   0000FD                     DMAnCON1        equ	253	;# 
  3925   0000FE                     DMAnAIRQ        equ	254	;# 
  3926   0000FF                     DMAnSIRQ        equ	255	;# 
  3927   000100                     C1CONL          equ	256	;# 
  3928   000101                     C1CONH          equ	257	;# 
  3929   000102                     C1CONU          equ	258	;# 
  3930   000103                     C1CONT          equ	259	;# 
  3931   000104                     C1NBTCFGL       equ	260	;# 
  3932   000105                     C1NBTCFGH       equ	261	;# 
  3933   000106                     C1NBTCFGU       equ	262	;# 
  3934   000107                     C1NBTCFGT       equ	263	;# 
  3935   000108                     C1DBTCFGL       equ	264	;# 
  3936   000109                     C1DBTCFGH       equ	265	;# 
  3937   00010A                     C1DBTCFGU       equ	266	;# 
  3938   00010B                     C1DBTCFGT       equ	267	;# 
  3939   00010C                     C1TDCL          equ	268	;# 
  3940   00010D                     C1TDCH          equ	269	;# 
  3941   00010E                     C1TDCU          equ	270	;# 
  3942   000110                     C1TBC           equ	272	;# 
  3943   000110                     C1TBCL          equ	272	;# 
  3944   000111                     C1TBCH          equ	273	;# 
  3945   000112                     C1TBCU          equ	274	;# 
  3946   000113                     C1TBCT          equ	275	;# 
  3947   000114                     C1TSCONL        equ	276	;# 
  3948   000115                     C1TSCONH        equ	277	;# 
  3949   000116                     C1TSCONU        equ	278	;# 
  3950   000117                     C1TSCONT        equ	279	;# 
  3951   000118                     C1VECL          equ	280	;# 
  3952   000119                     C1VECH          equ	281	;# 
  3953   00011A                     C1VECU          equ	282	;# 
  3954   00011B                     C1VECT          equ	283	;# 
  3955   00011C                     C1INTL          equ	284	;# 
  3956   00011D                     C1INTH          equ	285	;# 
  3957   00011E                     C1INTU          equ	286	;# 
  3958   00011F                     C1INTT          equ	287	;# 
  3959   000120                     C1RXIF          equ	288	;# 
  3960   000120                     C1RXIFL         equ	288	;# 
  3961   000121                     C1RXIFH         equ	289	;# 
  3962   000122                     C1RXIFU         equ	290	;# 
  3963   000123                     C1RXIFT         equ	291	;# 
  3964   000124                     C1TXIF          equ	292	;# 
  3965   000124                     C1TXIFL         equ	292	;# 
  3966   000125                     C1TXIFH         equ	293	;# 
  3967   000126                     C1TXIFU         equ	294	;# 
  3968   000127                     C1TXIFT         equ	295	;# 
  3969   000128                     C1RXOVIF        equ	296	;# 
  3970   000128                     C1RXOVIFL       equ	296	;# 
  3971   000129                     C1RXOVIFH       equ	297	;# 
  3972   00012A                     C1RXOVIFU       equ	298	;# 
  3973   00012B                     C1RXOVIFT       equ	299	;# 
  3974   00012C                     C1TXATIF        equ	300	;# 
  3975   00012C                     C1TXATIFL       equ	300	;# 
  3976   00012D                     C1TXATIFH       equ	301	;# 
  3977   00012E                     C1TXATIFU       equ	302	;# 
  3978   00012F                     C1TXATIFT       equ	303	;# 
  3979   000130                     C1TXREQ         equ	304	;# 
  3980   000130                     C1TXREQL        equ	304	;# 
  3981   000131                     C1TXREQH        equ	305	;# 
  3982   000132                     C1TXREQU        equ	306	;# 
  3983   000133                     C1TXREQT        equ	307	;# 
  3984   000134                     C1TRECL         equ	308	;# 
  3985   000135                     C1TRECH         equ	309	;# 
  3986   000136                     C1TRECU         equ	310	;# 
  3987   000137                     C1TRECT         equ	311	;# 
  3988   000138                     C1BDIAG0L       equ	312	;# 
  3989   000139                     C1BDIAG0H       equ	313	;# 
  3990   00013C                     C1BDIAG1L       equ	316	;# 
  3991   00013D                     C1BDIAG1H       equ	317	;# 
  3992   00013E                     C1BDIAG1U       equ	318	;# 
  3993   00013F                     C1BDIAG1T       equ	319	;# 
  3994   000140                     C1TEFCONL       equ	320	;# 
  3995   000141                     C1TEFCONH       equ	321	;# 
  3996   000142                     C1TEFCONU       equ	322	;# 
  3997   000143                     C1TEFCONT       equ	323	;# 
  3998   000144                     C1TEFSTAL       equ	324	;# 
  3999   000145                     C1TEFSTAH       equ	325	;# 
  4000   000146                     C1TEFSTAU       equ	326	;# 
  4001   000147                     C1TEFSTAT       equ	327	;# 
  4002   000148                     C1TEFUA         equ	328	;# 
  4003   000148                     C1TEFUAL        equ	328	;# 
  4004   000149                     C1TEFUAH        equ	329	;# 
  4005   00014A                     C1TEFUAU        equ	330	;# 
  4006   00014B                     C1TEFUAT        equ	331	;# 
  4007   00014C                     C1FIFOBA        equ	332	;# 
  4008   00014C                     C1FIFOBAL       equ	332	;# 
  4009   00014D                     C1FIFOBAH       equ	333	;# 
  4010   00014E                     C1FIFOBAU       equ	334	;# 
  4011   00014F                     C1FIFOBAT       equ	335	;# 
  4012   000150                     C1TXQCONL       equ	336	;# 
  4013   000151                     C1TXQCONH       equ	337	;# 
  4014   000152                     C1TXQCONU       equ	338	;# 
  4015   000153                     C1TXQCONT       equ	339	;# 
  4016   000154                     C1TXQSTAL       equ	340	;# 
  4017   000155                     C1TXQSTAH       equ	341	;# 
  4018   000156                     C1TXQSTAU       equ	342	;# 
  4019   000157                     C1TXQSTAT       equ	343	;# 
  4020   000158                     C1TXQUA         equ	344	;# 
  4021   000158                     C1TXQUAL        equ	344	;# 
  4022   000159                     C1TXQUAH        equ	345	;# 
  4023   00015A                     C1TXQUAU        equ	346	;# 
  4024   00015B                     C1TXQUAT        equ	347	;# 
  4025   00015C                     C1FIFOCON1      equ	348	;# 
  4026   00015C                     C1FIFOCON1L     equ	348	;# 
  4027   00015D                     C1FIFOCON1H     equ	349	;# 
  4028   00015E                     C1FIFOCON1U     equ	350	;# 
  4029   00015F                     C1FIFOCON1T     equ	351	;# 
  4030   000160                     C1FIFOSTA1      equ	352	;# 
  4031   000160                     C1FIFOSTA1L     equ	352	;# 
  4032   000161                     C1FIFOSTA1H     equ	353	;# 
  4033   000162                     C1FIFOSTA1U     equ	354	;# 
  4034   000163                     C1FIFOSTA1T     equ	355	;# 
  4035   000164                     C1FIFOUA1       equ	356	;# 
  4036   000164                     C1FIFOUA1L      equ	356	;# 
  4037   000165                     C1FIFOUA1H      equ	357	;# 
  4038   000166                     C1FIFOUA1U      equ	358	;# 
  4039   000167                     C1FIFOUA1T      equ	359	;# 
  4040   000168                     C1FIFOCON2      equ	360	;# 
  4041   000168                     C1FIFOCON2L     equ	360	;# 
  4042   000169                     C1FIFOCON2H     equ	361	;# 
  4043   00016A                     C1FIFOCON2U     equ	362	;# 
  4044   00016B                     C1FIFOCON2T     equ	363	;# 
  4045   00016C                     C1FIFOSTA2      equ	364	;# 
  4046   00016C                     C1FIFOSTA2L     equ	364	;# 
  4047   00016D                     C1FIFOSTA2H     equ	365	;# 
  4048   00016E                     C1FIFOSTA2U     equ	366	;# 
  4049   00016F                     C1FIFOSTA2T     equ	367	;# 
  4050   000170                     C1FIFOUA2       equ	368	;# 
  4051   000170                     C1FIFOUA2L      equ	368	;# 
  4052   000171                     C1FIFOUA2H      equ	369	;# 
  4053   000172                     C1FIFOUA2U      equ	370	;# 
  4054   000173                     C1FIFOUA2T      equ	371	;# 
  4055   000174                     C1FIFOCON3      equ	372	;# 
  4056   000174                     C1FIFOCON3L     equ	372	;# 
  4057   000175                     C1FIFOCON3H     equ	373	;# 
  4058   000176                     C1FIFOCON3U     equ	374	;# 
  4059   000177                     C1FIFOCON3T     equ	375	;# 
  4060   000178                     C1FIFOSTA3      equ	376	;# 
  4061   000178                     C1FIFOSTA3L     equ	376	;# 
  4062   000179                     C1FIFOSTA3H     equ	377	;# 
  4063   00017A                     C1FIFOSTA3U     equ	378	;# 
  4064   00017B                     C1FIFOSTA3T     equ	379	;# 
  4065   00017C                     C1FIFOUA3       equ	380	;# 
  4066   00017C                     C1FIFOUA3L      equ	380	;# 
  4067   00017D                     C1FIFOUA3H      equ	381	;# 
  4068   00017E                     C1FIFOUA3U      equ	382	;# 
  4069   00017F                     C1FIFOUA3T      equ	383	;# 
  4070   000180                     C1FLTCON0L      equ	384	;# 
  4071   000181                     C1FLTCON0H      equ	385	;# 
  4072   000182                     C1FLTCON0U      equ	386	;# 
  4073   000183                     C1FLTCON0T      equ	387	;# 
  4074   000184                     C1FLTCON1L      equ	388	;# 
  4075   000185                     C1FLTCON1H      equ	389	;# 
  4076   000186                     C1FLTCON1U      equ	390	;# 
  4077   000187                     C1FLTCON1T      equ	391	;# 
  4078   000188                     C1FLTCON2L      equ	392	;# 
  4079   000189                     C1FLTCON2H      equ	393	;# 
  4080   00018A                     C1FLTCON2U      equ	394	;# 
  4081   00018B                     C1FLTCON2T      equ	395	;# 
  4082   00018C                     C1FLTOBJ0       equ	396	;# 
  4083   00018C                     C1FLTOBJ0L      equ	396	;# 
  4084   00018D                     C1FLTOBJ0H      equ	397	;# 
  4085   00018E                     C1FLTOBJ0U      equ	398	;# 
  4086   00018F                     C1FLTOBJ0T      equ	399	;# 
  4087   000190                     C1MASK0         equ	400	;# 
  4088   000190                     C1MASK0L        equ	400	;# 
  4089   000191                     C1MASK0H        equ	401	;# 
  4090   000192                     C1MASK0U        equ	402	;# 
  4091   000193                     C1MASK0T        equ	403	;# 
  4092   000194                     C1FLTOBJ1       equ	404	;# 
  4093   000194                     C1FLTOBJ1L      equ	404	;# 
  4094   000195                     C1FLTOBJ1H      equ	405	;# 
  4095   000196                     C1FLTOBJ1U      equ	406	;# 
  4096   000197                     C1FLTOBJ1T      equ	407	;# 
  4097   000198                     C1MASK1         equ	408	;# 
  4098   000198                     C1MASK1L        equ	408	;# 
  4099   000199                     C1MASK1H        equ	409	;# 
  4100   00019A                     C1MASK1U        equ	410	;# 
  4101   00019B                     C1MASK1T        equ	411	;# 
  4102   00019C                     C1FLTOBJ2       equ	412	;# 
  4103   00019C                     C1FLTOBJ2L      equ	412	;# 
  4104   00019D                     C1FLTOBJ2H      equ	413	;# 
  4105   00019E                     C1FLTOBJ2U      equ	414	;# 
  4106   00019F                     C1FLTOBJ2T      equ	415	;# 
  4107   0001A0                     C1MASK2         equ	416	;# 
  4108   0001A0                     C1MASK2L        equ	416	;# 
  4109   0001A1                     C1MASK2H        equ	417	;# 
  4110   0001A2                     C1MASK2U        equ	418	;# 
  4111   0001A3                     C1MASK2T        equ	419	;# 
  4112   0001A4                     C1FLTOBJ3       equ	420	;# 
  4113   0001A4                     C1FLTOBJ3L      equ	420	;# 
  4114   0001A5                     C1FLTOBJ3H      equ	421	;# 
  4115   0001A6                     C1FLTOBJ3U      equ	422	;# 
  4116   0001A7                     C1FLTOBJ3T      equ	423	;# 
  4117   0001A8                     C1MASK3         equ	424	;# 
  4118   0001A8                     C1MASK3L        equ	424	;# 
  4119   0001A9                     C1MASK3H        equ	425	;# 
  4120   0001AA                     C1MASK3U        equ	426	;# 
  4121   0001AB                     C1MASK3T        equ	427	;# 
  4122   0001AC                     C1FLTOBJ4       equ	428	;# 
  4123   0001AC                     C1FLTOBJ4L      equ	428	;# 
  4124   0001AD                     C1FLTOBJ4H      equ	429	;# 
  4125   0001AE                     C1FLTOBJ4U      equ	430	;# 
  4126   0001AF                     C1FLTOBJ4T      equ	431	;# 
  4127   0001B0                     C1MASK4         equ	432	;# 
  4128   0001B0                     C1MASK4L        equ	432	;# 
  4129   0001B1                     C1MASK4H        equ	433	;# 
  4130   0001B2                     C1MASK4U        equ	434	;# 
  4131   0001B3                     C1MASK4T        equ	435	;# 
  4132   0001B4                     C1FLTOBJ5       equ	436	;# 
  4133   0001B4                     C1FLTOBJ5L      equ	436	;# 
  4134   0001B5                     C1FLTOBJ5H      equ	437	;# 
  4135   0001B6                     C1FLTOBJ5U      equ	438	;# 
  4136   0001B7                     C1FLTOBJ5T      equ	439	;# 
  4137   0001B8                     C1MASK5         equ	440	;# 
  4138   0001B8                     C1MASK5L        equ	440	;# 
  4139   0001B9                     C1MASK5H        equ	441	;# 
  4140   0001BA                     C1MASK5U        equ	442	;# 
  4141   0001BB                     C1MASK5T        equ	443	;# 
  4142   0001BC                     C1FLTOBJ6       equ	444	;# 
  4143   0001BC                     C1FLTOBJ6L      equ	444	;# 
  4144   0001BD                     C1FLTOBJ6H      equ	445	;# 
  4145   0001BE                     C1FLTOBJ6U      equ	446	;# 
  4146   0001BF                     C1FLTOBJ6T      equ	447	;# 
  4147   0001C0                     C1MASK6         equ	448	;# 
  4148   0001C0                     C1MASK6L        equ	448	;# 
  4149   0001C1                     C1MASK6H        equ	449	;# 
  4150   0001C2                     C1MASK6U        equ	450	;# 
  4151   0001C3                     C1MASK6T        equ	451	;# 
  4152   0001C4                     C1FLTOBJ7       equ	452	;# 
  4153   0001C4                     C1FLTOBJ7L      equ	452	;# 
  4154   0001C5                     C1FLTOBJ7H      equ	453	;# 
  4155   0001C6                     C1FLTOBJ7U      equ	454	;# 
  4156   0001C7                     C1FLTOBJ7T      equ	455	;# 
  4157   0001C8                     C1MASK7         equ	456	;# 
  4158   0001C8                     C1MASK7L        equ	456	;# 
  4159   0001C9                     C1MASK7H        equ	457	;# 
  4160   0001CA                     C1MASK7U        equ	458	;# 
  4161   0001CB                     C1MASK7T        equ	459	;# 
  4162   0001CC                     C1FLTOBJ8       equ	460	;# 
  4163   0001CC                     C1FLTOBJ8L      equ	460	;# 
  4164   0001CD                     C1FLTOBJ8H      equ	461	;# 
  4165   0001CE                     C1FLTOBJ8U      equ	462	;# 
  4166   0001CF                     C1FLTOBJ8T      equ	463	;# 
  4167   0001D0                     C1MASK8         equ	464	;# 
  4168   0001D0                     C1MASK8L        equ	464	;# 
  4169   0001D1                     C1MASK8H        equ	465	;# 
  4170   0001D2                     C1MASK8U        equ	466	;# 
  4171   0001D3                     C1MASK8T        equ	467	;# 
  4172   0001D4                     C1FLTOBJ9       equ	468	;# 
  4173   0001D4                     C1FLTOBJ9L      equ	468	;# 
  4174   0001D5                     C1FLTOBJ9H      equ	469	;# 
  4175   0001D6                     C1FLTOBJ9U      equ	470	;# 
  4176   0001D7                     C1FLTOBJ9T      equ	471	;# 
  4177   0001D8                     C1MASK9         equ	472	;# 
  4178   0001D8                     C1MASK9L        equ	472	;# 
  4179   0001D9                     C1MASK9H        equ	473	;# 
  4180   0001DA                     C1MASK9U        equ	474	;# 
  4181   0001DB                     C1MASK9T        equ	475	;# 
  4182   0001DC                     C1FLTOBJ10      equ	476	;# 
  4183   0001DC                     C1FLTOBJ10L     equ	476	;# 
  4184   0001DD                     C1FLTOBJ10H     equ	477	;# 
  4185   0001DE                     C1FLTOBJ10U     equ	478	;# 
  4186   0001DF                     C1FLTOBJ10T     equ	479	;# 
  4187   0001E0                     C1MASK10        equ	480	;# 
  4188   0001E0                     C1MASK10L       equ	480	;# 
  4189   0001E1                     C1MASK10H       equ	481	;# 
  4190   0001E2                     C1MASK10U       equ	482	;# 
  4191   0001E3                     C1MASK10T       equ	483	;# 
  4192   0001E4                     C1FLTOBJ11      equ	484	;# 
  4193   0001E4                     C1FLTOBJ11L     equ	484	;# 
  4194   0001E5                     C1FLTOBJ11H     equ	485	;# 
  4195   0001E6                     C1FLTOBJ11U     equ	486	;# 
  4196   0001E7                     C1FLTOBJ11T     equ	487	;# 
  4197   0001E8                     C1MASK11        equ	488	;# 
  4198   0001E8                     C1MASK11L       equ	488	;# 
  4199   0001E9                     C1MASK11H       equ	489	;# 
  4200   0001EA                     C1MASK11U       equ	490	;# 
  4201   0001EB                     C1MASK11T       equ	491	;# 
  4202   000200                     PPSLOCK         equ	512	;# 
  4203   000201                     RA0PPS          equ	513	;# 
  4204   000202                     RA1PPS          equ	514	;# 
  4205   000203                     RA2PPS          equ	515	;# 
  4206   000204                     RA3PPS          equ	516	;# 
  4207   000205                     RA4PPS          equ	517	;# 
  4208   000206                     RA5PPS          equ	518	;# 
  4209   000207                     RA6PPS          equ	519	;# 
  4210   000208                     RA7PPS          equ	520	;# 
  4211   000209                     RB0PPS          equ	521	;# 
  4212   00020A                     RB1PPS          equ	522	;# 
  4213   00020B                     RB2PPS          equ	523	;# 
  4214   00020C                     RB3PPS          equ	524	;# 
  4215   00020D                     RB4PPS          equ	525	;# 
  4216   00020E                     RB5PPS          equ	526	;# 
  4217   00020F                     RB6PPS          equ	527	;# 
  4218   000210                     RB7PPS          equ	528	;# 
  4219   000211                     RC0PPS          equ	529	;# 
  4220   000212                     RC1PPS          equ	530	;# 
  4221   000213                     RC2PPS          equ	531	;# 
  4222   000214                     RC3PPS          equ	532	;# 
  4223   000215                     RC4PPS          equ	533	;# 
  4224   000216                     RC5PPS          equ	534	;# 
  4225   000217                     RC6PPS          equ	535	;# 
  4226   000218                     RC7PPS          equ	536	;# 
  4227   00023D                     CANRXPPS        equ	573	;# 
  4228   00023E                     INT0PPS         equ	574	;# 
  4229   00023F                     INT1PPS         equ	575	;# 
  4230   000240                     INT2PPS         equ	576	;# 
  4231   000241                     T0CKIPPS        equ	577	;# 
  4232   000242                     T1CKIPPS        equ	578	;# 
  4233   000243                     T1GPPS          equ	579	;# 
  4234   000244                     T3CKIPPS        equ	580	;# 
  4235   000245                     T3GPPS          equ	581	;# 
  4236   000246                     T5CKIPPS        equ	582	;# 
  4237   000247                     T5GPPS          equ	583	;# 
  4238   000248                     T2INPPS         equ	584	;# 
  4239   000249                     T4INPPS         equ	585	;# 
  4240   00024A                     T6INPPS         equ	586	;# 
  4241   00024B                     TUIN0PPS        equ	587	;# 
  4242   00024C                     TUIN1PPS        equ	588	;# 
  4243   00024F                     CCP1PPS         equ	591	;# 
  4244   000250                     CCP2PPS         equ	592	;# 
  4245   000251                     CCP3PPS         equ	593	;# 
  4246   000253                     PWM1ERSPPS      equ	595	;# 
  4247   000254                     PWM2ERSPPS      equ	596	;# 
  4248   000255                     PWM3ERSPPS      equ	597	;# 
  4249   000256                     PWM4ERSPPS      equ	598	;# 
  4250   000257                     PWMIN0PPS       equ	599	;# 
  4251   000258                     PWMIN1PPS       equ	600	;# 
  4252   000259                     SMT1WINPPS      equ	601	;# 
  4253   00025A                     SMT1SIGPPS      equ	602	;# 
  4254   00025B                     CWG1PPS         equ	603	;# 
  4255   00025B                     CWG1INPPS       equ	603	;# 
  4256   00025C                     CWG2PPS         equ	604	;# 
  4257   00025C                     CWG2INPPS       equ	604	;# 
  4258   00025D                     CWG3PPS         equ	605	;# 
  4259   00025D                     CWG3INPPS       equ	605	;# 
  4260   00025E                     MD1CARLPPS      equ	606	;# 
  4261   00025E                     MDCARLPPS       equ	606	;# 
  4262   00025F                     MD1CARHPPS      equ	607	;# 
  4263   00025F                     MDCARHPPS       equ	607	;# 
  4264   000260                     MD1SRCPPS       equ	608	;# 
  4265   000260                     MDSRCPPS        equ	608	;# 
  4266   000261                     CLCIN0PPS       equ	609	;# 
  4267   000262                     CLCIN1PPS       equ	610	;# 
  4268   000263                     CLCIN2PPS       equ	611	;# 
  4269   000264                     CLCIN3PPS       equ	612	;# 
  4270   000265                     CLCIN4PPS       equ	613	;# 
  4271   000266                     CLCIN5PPS       equ	614	;# 
  4272   000267                     CLCIN6PPS       equ	615	;# 
  4273   000268                     CLCIN7PPS       equ	616	;# 
  4274   000269                     ADACTPPS        equ	617	;# 
  4275   00026A                     SPI1SCKPPS      equ	618	;# 
  4276   00026B                     SPI1SDIPPS      equ	619	;# 
  4277   00026C                     SPI1SSPPS       equ	620	;# 
  4278   00026D                     SPI2SCKPPS      equ	621	;# 
  4279   00026E                     SPI2SDIPPS      equ	622	;# 
  4280   00026F                     SPI2SSPPS       equ	623	;# 
  4281   000270                     I2C1SDAPPS      equ	624	;# 
  4282   000271                     I2C1SCLPPS      equ	625	;# 
  4283   000272                     U1RXPPS         equ	626	;# 
  4284   000273                     U1CTSPPS        equ	627	;# 
  4285   000274                     U2RXPPS         equ	628	;# 
  4286   000275                     U2CTSPPS        equ	629	;# 
  4287   000276                     U3RXPPS         equ	630	;# 
  4288   000277                     U3CTSPPS        equ	631	;# 
  4289   000278                     U4RXPPS         equ	632	;# 
  4290   000279                     U4CTSPPS        equ	633	;# 
  4291   00027A                     U5RXPPS         equ	634	;# 
  4292   00027B                     U5CTSPPS        equ	635	;# 
  4293   000286                     RC4I2C          equ	646	;# 
  4294   000287                     RC3I2C          equ	647	;# 
  4295   000288                     RB2I2C          equ	648	;# 
  4296   000289                     RB1I2C          equ	649	;# 
  4297   00028A                     I2C1RXB         equ	650	;# 
  4298   00028B                     I2C1TXB         equ	651	;# 
  4299   00028C                     I2C1CNTL        equ	652	;# 
  4300   00028D                     I2C1CNTH        equ	653	;# 
  4301   00028E                     I2C1ADB0        equ	654	;# 
  4302   00028F                     I2C1ADB1        equ	655	;# 
  4303   000290                     I2C1ADR0        equ	656	;# 
  4304   000291                     I2C1ADR1        equ	657	;# 
  4305   000292                     I2C1ADR2        equ	658	;# 
  4306   000293                     I2C1ADR3        equ	659	;# 
  4307   000294                     I2C1CON0        equ	660	;# 
  4308   000295                     I2C1CON1        equ	661	;# 
  4309   000296                     I2C1CON2        equ	662	;# 
  4310   000297                     I2C1ERR         equ	663	;# 
  4311   000298                     I2C1STAT0       equ	664	;# 
  4312   000299                     I2C1STAT1       equ	665	;# 
  4313   00029A                     I2C1PIR         equ	666	;# 
  4314   00029B                     I2C1PIE         equ	667	;# 
  4315   00029C                     I2C1BTO         equ	668	;# 
  4316   00029D                     I2C1BAUD        equ	669	;# 
  4317   00029E                     I2C1CLK         equ	670	;# 
  4318   00029F                     I2C1BTOC        equ	671	;# 
  4319   0002A1                     U1RXB           equ	673	;# 
  4320   0002A1                     U1RXBL          equ	673	;# 
  4321   0002A2                     U1RXCHK         equ	674	;# 
  4322   0002A3                     U1TXB           equ	675	;# 
  4323   0002A3                     U1TXBL          equ	675	;# 
  4324   0002A4                     U1TXCHK         equ	676	;# 
  4325   0002A5                     U1P1            equ	677	;# 
  4326   0002A5                     U1P1L           equ	677	;# 
  4327   0002A6                     U1P1H           equ	678	;# 
  4328   0002A7                     U1P2            equ	679	;# 
  4329   0002A7                     U1P2L           equ	679	;# 
  4330   0002A8                     U1P2H           equ	680	;# 
  4331   0002A9                     U1P3            equ	681	;# 
  4332   0002A9                     U1P3L           equ	681	;# 
  4333   0002AA                     U1P3H           equ	682	;# 
  4334   0002AB                     U1CON0          equ	683	;# 
  4335   0002AC                     U1CON1          equ	684	;# 
  4336   0002AD                     U1CON2          equ	685	;# 
  4337   0002AE                     U1BRG           equ	686	;# 
  4338   0002AE                     U1BRGL          equ	686	;# 
  4339   0002AF                     U1BRGH          equ	687	;# 
  4340   0002B0                     U1FIFO          equ	688	;# 
  4341   0002B1                     U1UIR           equ	689	;# 
  4342   0002B2                     U1ERRIR         equ	690	;# 
  4343   0002B3                     U1ERRIE         equ	691	;# 
  4344   0002B4                     U2RXB           equ	692	;# 
  4345   0002B4                     U2RXBL          equ	692	;# 
  4346   0002B5                     U2RXCHK         equ	693	;# 
  4347   0002B6                     U2TXB           equ	694	;# 
  4348   0002B6                     U2TXBL          equ	694	;# 
  4349   0002B7                     U2TXCHK         equ	695	;# 
  4350   0002B8                     U2P1            equ	696	;# 
  4351   0002B8                     U2P1L           equ	696	;# 
  4352   0002B9                     U2P1H           equ	697	;# 
  4353   0002BA                     U2P2            equ	698	;# 
  4354   0002BA                     U2P2L           equ	698	;# 
  4355   0002BB                     U2P2H           equ	699	;# 
  4356   0002BC                     U2P3            equ	700	;# 
  4357   0002BC                     U2P3L           equ	700	;# 
  4358   0002BD                     U2P3H           equ	701	;# 
  4359   0002BE                     U2CON0          equ	702	;# 
  4360   0002BF                     U2CON1          equ	703	;# 
  4361   0002C0                     U2CON2          equ	704	;# 
  4362   0002C1                     U2BRG           equ	705	;# 
  4363   0002C1                     U2BRGL          equ	705	;# 
  4364   0002C2                     U2BRGH          equ	706	;# 
  4365   0002C3                     U2FIFO          equ	707	;# 
  4366   0002C4                     U2UIR           equ	708	;# 
  4367   0002C5                     U2ERRIR         equ	709	;# 
  4368   0002C6                     U2ERRIE         equ	710	;# 
  4369   0002C7                     U3RXB           equ	711	;# 
  4370   0002C7                     U3RXBL          equ	711	;# 
  4371   0002C9                     U3TXB           equ	713	;# 
  4372   0002C9                     U3TXBL          equ	713	;# 
  4373   0002CB                     U3P1            equ	715	;# 
  4374   0002CB                     U3P1L           equ	715	;# 
  4375   0002CD                     U3P2            equ	717	;# 
  4376   0002CD                     U3P2L           equ	717	;# 
  4377   0002CF                     U3P3            equ	719	;# 
  4378   0002CF                     U3P3L           equ	719	;# 
  4379   0002D1                     U3CON0          equ	721	;# 
  4380   0002D2                     U3CON1          equ	722	;# 
  4381   0002D3                     U3CON2          equ	723	;# 
  4382   0002D4                     U3BRG           equ	724	;# 
  4383   0002D4                     U3BRGL          equ	724	;# 
  4384   0002D5                     U3BRGH          equ	725	;# 
  4385   0002D6                     U3FIFO          equ	726	;# 
  4386   0002D7                     U3UIR           equ	727	;# 
  4387   0002D8                     U3ERRIR         equ	728	;# 
  4388   0002D9                     U3ERRIE         equ	729	;# 
  4389   0002DA                     U4RXB           equ	730	;# 
  4390   0002DA                     U4RXBL          equ	730	;# 
  4391   0002DC                     U4TXB           equ	732	;# 
  4392   0002DC                     U4TXBL          equ	732	;# 
  4393   0002DE                     U4P1            equ	734	;# 
  4394   0002DE                     U4P1L           equ	734	;# 
  4395   0002E0                     U4P2            equ	736	;# 
  4396   0002E0                     U4P2L           equ	736	;# 
  4397   0002E2                     U4P3            equ	738	;# 
  4398   0002E2                     U4P3L           equ	738	;# 
  4399   0002E4                     U4CON0          equ	740	;# 
  4400   0002E5                     U4CON1          equ	741	;# 
  4401   0002E6                     U4CON2          equ	742	;# 
  4402   0002E7                     U4BRG           equ	743	;# 
  4403   0002E7                     U4BRGL          equ	743	;# 
  4404   0002E8                     U4BRGH          equ	744	;# 
  4405   0002E9                     U4FIFO          equ	745	;# 
  4406   0002EA                     U4UIR           equ	746	;# 
  4407   0002EB                     U4ERRIR         equ	747	;# 
  4408   0002EC                     U4ERRIE         equ	748	;# 
  4409   0002ED                     U5RXB           equ	749	;# 
  4410   0002ED                     U5RXBL          equ	749	;# 
  4411   0002EF                     U5TXB           equ	751	;# 
  4412   0002EF                     U5TXBL          equ	751	;# 
  4413   0002F1                     U5P1            equ	753	;# 
  4414   0002F1                     U5P1L           equ	753	;# 
  4415   0002F3                     U5P2            equ	755	;# 
  4416   0002F3                     U5P2L           equ	755	;# 
  4417   0002F5                     U5P3            equ	757	;# 
  4418   0002F5                     U5P3L           equ	757	;# 
  4419   0002F7                     U5CON0          equ	759	;# 
  4420   0002F8                     U5CON1          equ	760	;# 
  4421   0002F9                     U5CON2          equ	761	;# 
  4422   0002FA                     U5BRG           equ	762	;# 
  4423   0002FA                     U5BRGL          equ	762	;# 
  4424   0002FB                     U5BRGH          equ	763	;# 
  4425   0002FC                     U5FIFO          equ	764	;# 
  4426   0002FD                     U5UIR           equ	765	;# 
  4427   0002FE                     U5ERRIR         equ	766	;# 
  4428   0002FF                     U5ERRIE         equ	767	;# 
  4429   000300                     SMT1TMR         equ	768	;# 
  4430   000300                     SMT1TMRL        equ	768	;# 
  4431   000301                     SMT1TMRH        equ	769	;# 
  4432   000302                     SMT1TMRU        equ	770	;# 
  4433   000303                     SMT1CPR         equ	771	;# 
  4434   000303                     SMT1CPRL        equ	771	;# 
  4435   000304                     SMT1CPRH        equ	772	;# 
  4436   000305                     SMT1CPRU        equ	773	;# 
  4437   000306                     SMT1CPW         equ	774	;# 
  4438   000306                     SMT1CPWL        equ	774	;# 
  4439   000307                     SMT1CPWH        equ	775	;# 
  4440   000308                     SMT1CPWU        equ	776	;# 
  4441   000309                     SMT1PR          equ	777	;# 
  4442   000309                     SMT1PRL         equ	777	;# 
  4443   00030A                     SMT1PRH         equ	778	;# 
  4444   00030B                     SMT1PRU         equ	779	;# 
  4445   00030C                     SMT1CON0        equ	780	;# 
  4446   00030D                     SMT1CON1        equ	781	;# 
  4447   00030E                     SMT1STAT        equ	782	;# 
  4448   00030F                     SMT1CLK         equ	783	;# 
  4449   000310                     SMT1SIG         equ	784	;# 
  4450   000311                     SMT1WIN         equ	785	;# 
  4451   000318                     TMR0L           equ	792	;# 
  4452   000318                     TMR0            equ	792	;# 
  4453   000319                     TMR0H           equ	793	;# 
  4454   000319                     PR0             equ	793	;# 
  4455   00031A                     T0CON0          equ	794	;# 
  4456   00031B                     T0CON1          equ	795	;# 
  4457   00031C                     TMR1            equ	796	;# 
  4458   00031C                     TMR1L           equ	796	;# 
  4459   00031D                     TMR1H           equ	797	;# 
  4460   00031E                     T1CON           equ	798	;# 
  4461   00031E                     TMR1CON         equ	798	;# 
  4462   00031F                     T1GCON          equ	799	;# 
  4463   00031F                     TMR1GCON        equ	799	;# 
  4464   000320                     T1GATE          equ	800	;# 
  4465   000320                     TMR1GATE        equ	800	;# 
  4466   000321                     T1CLK           equ	801	;# 
  4467   000321                     TMR1CLK         equ	801	;# 
  4468   000321                     PR1             equ	801	;# 
  4469   000322                     T2TMR           equ	802	;# 
  4470   000322                     TMR2            equ	802	;# 
  4471   000323                     T2PR            equ	803	;# 
  4472   000323                     PR2             equ	803	;# 
  4473   000324                     T2CON           equ	804	;# 
  4474   000325                     T2HLT           equ	805	;# 
  4475   000326                     T2CLKCON        equ	806	;# 
  4476   000326                     T2CLK           equ	806	;# 
  4477   000327                     T2RST           equ	807	;# 
  4478   000328                     TMR3            equ	808	;# 
  4479   000328                     TMR3L           equ	808	;# 
  4480   000329                     TMR3H           equ	809	;# 
  4481   00032A                     T3CON           equ	810	;# 
  4482   00032A                     TMR3CON         equ	810	;# 
  4483   00032B                     T3GCON          equ	811	;# 
  4484   00032B                     TMR3GCON        equ	811	;# 
  4485   00032C                     T3GATE          equ	812	;# 
  4486   00032C                     TMR3GATE        equ	812	;# 
  4487   00032D                     T3CLK           equ	813	;# 
  4488   00032D                     TMR3CLK         equ	813	;# 
  4489   00032D                     PR3             equ	813	;# 
  4490   00032E                     T4TMR           equ	814	;# 
  4491   00032E                     TMR4            equ	814	;# 
  4492   00032F                     T4PR            equ	815	;# 
  4493   00032F                     PR4             equ	815	;# 
  4494   000330                     T4CON           equ	816	;# 
  4495   000331                     T4HLT           equ	817	;# 
  4496   000332                     T4CLKCON        equ	818	;# 
  4497   000332                     T4CLK           equ	818	;# 
  4498   000333                     T4RST           equ	819	;# 
  4499   000334                     TMR5            equ	820	;# 
  4500   000334                     TMR5L           equ	820	;# 
  4501   000335                     TMR5H           equ	821	;# 
  4502   000336                     T5CON           equ	822	;# 
  4503   000336                     TMR5CON         equ	822	;# 
  4504   000337                     T5GCON          equ	823	;# 
  4505   000337                     TMR5GCON        equ	823	;# 
  4506   000338                     T5GATE          equ	824	;# 
  4507   000338                     TMR5GATE        equ	824	;# 
  4508   000339                     T5CLK           equ	825	;# 
  4509   000339                     TMR5CLK         equ	825	;# 
  4510   000339                     PR5             equ	825	;# 
  4511   00033A                     T6TMR           equ	826	;# 
  4512   00033A                     TMR6            equ	826	;# 
  4513   00033B                     T6PR            equ	827	;# 
  4514   00033B                     PR6             equ	827	;# 
  4515   00033C                     T6CON           equ	828	;# 
  4516   00033D                     T6HLT           equ	829	;# 
  4517   00033E                     T6CLKCON        equ	830	;# 
  4518   00033E                     T6CLK           equ	830	;# 
  4519   00033F                     T6RST           equ	831	;# 
  4520   000340                     CCPR1           equ	832	;# 
  4521   000340                     CCPR1L          equ	832	;# 
  4522   000341                     CCPR1H          equ	833	;# 
  4523   000342                     CCP1CON         equ	834	;# 
  4524   000343                     CCP1CAP         equ	835	;# 
  4525   000344                     CCPR2           equ	836	;# 
  4526   000344                     CCPR2L          equ	836	;# 
  4527   000345                     CCPR2H          equ	837	;# 
  4528   000346                     CCP2CON         equ	838	;# 
  4529   000347                     CCP2CAP         equ	839	;# 
  4530   000348                     CCPR3           equ	840	;# 
  4531   000348                     CCPR3L          equ	840	;# 
  4532   000349                     CCPR3H          equ	841	;# 
  4533   00034A                     CCP3CON         equ	842	;# 
  4534   00034B                     CCP3CAP         equ	843	;# 
  4535   00034C                     CCPTMRS0        equ	844	;# 
  4536   00034F                     CRCDATA         equ	847	;# 
  4537   00034F                     CRCDATAL        equ	847	;# 
  4538   000350                     CRCDATAH        equ	848	;# 
  4539   000351                     CRCDATAU        equ	849	;# 
  4540   000352                     CRCDATAT        equ	850	;# 
  4541   000353                     CRCOUT          equ	851	;# 
  4542   000353                     CRCSHFT         equ	851	;# 
  4543   000353                     CRCXOR          equ	851	;# 
  4544   000353                     CRCOUTL         equ	851	;# 
  4545   000353                     CRCSHFTL        equ	851	;# 
  4546   000353                     CRCSHIFTL       equ	851	;# 
  4547   000353                     CRCXORL         equ	851	;# 
  4548   000354                     CRCOUTH         equ	852	;# 
  4549   000354                     CRCSHFTH        equ	852	;# 
  4550   000354                     CRCSHIFTH       equ	852	;# 
  4551   000354                     CRCXORH         equ	852	;# 
  4552   000355                     CRCOUTU         equ	853	;# 
  4553   000355                     CRCSHFTU        equ	853	;# 
  4554   000355                     CRCSHIFTU       equ	853	;# 
  4555   000355                     CRCXORU         equ	853	;# 
  4556   000356                     CRCOUTT         equ	854	;# 
  4557   000356                     CRCSHFTT        equ	854	;# 
  4558   000356                     CRCSHIFTT       equ	854	;# 
  4559   000356                     CRCXORT         equ	854	;# 
  4560   000357                     CRCCON0         equ	855	;# 
  4561   000358                     CRCCON1         equ	856	;# 
  4562   000359                     CRCCON2         equ	857	;# 
  4563   00035A                     SCANLADR        equ	858	;# 
  4564   00035A                     SCANLADRL       equ	858	;# 
  4565   00035B                     SCANLADRH       equ	859	;# 
  4566   00035C                     SCANLADRU       equ	860	;# 
  4567   00035D                     SCANHADR        equ	861	;# 
  4568   00035D                     SCANHADRL       equ	861	;# 
  4569   00035E                     SCANHADRH       equ	862	;# 
  4570   00035F                     SCANHADRU       equ	863	;# 
  4571   000360                     SCANCON0        equ	864	;# 
  4572   000361                     SCANTRIG        equ	865	;# 
  4573   000362                     IPR0            equ	866	;# 
  4574   000363                     IPR1            equ	867	;# 
  4575   000364                     IPR2            equ	868	;# 
  4576   000365                     IPR3            equ	869	;# 
  4577   000366                     IPR4            equ	870	;# 
  4578   000367                     IPR5            equ	871	;# 
  4579   000368                     IPR6            equ	872	;# 
  4580   000369                     IPR7            equ	873	;# 
  4581   00036A                     IPR8            equ	874	;# 
  4582   00036B                     IPR9            equ	875	;# 
  4583   00036C                     IPR10           equ	876	;# 
  4584   00036D                     IPR11           equ	877	;# 
  4585   00036E                     IPR12           equ	878	;# 
  4586   00036F                     IPR13           equ	879	;# 
  4587   000370                     IPR14           equ	880	;# 
  4588   000371                     IPR15           equ	881	;# 
  4589   000373                     STATUS_CSHAD    equ	883	;# 
  4590   000374                     WREG_CSHAD      equ	884	;# 
  4591   000375                     BSR_CSHAD       equ	885	;# 
  4592   000376                     SHADCON         equ	886	;# 
  4593   000377                     STATUS_SHAD     equ	887	;# 
  4594   000378                     WREG_SHAD       equ	888	;# 
  4595   000379                     BSR_SHAD        equ	889	;# 
  4596   00037A                     PCLATH_SHAD     equ	890	;# 
  4597   00037B                     PCLATU_SHAD     equ	891	;# 
  4598   00037C                     FSR0SH          equ	892	;# 
  4599   00037C                     FSR0L_SHAD      equ	892	;# 
  4600   00037D                     FSR0H_SHAD      equ	893	;# 
  4601   00037E                     FSR1SH          equ	894	;# 
  4602   00037E                     FSR1L_SHAD      equ	894	;# 
  4603   00037F                     FSR1H_SHAD      equ	895	;# 
  4604   000380                     FSR2SH          equ	896	;# 
  4605   000380                     FSR2L_SHAD      equ	896	;# 
  4606   000381                     FSR2H_SHAD      equ	897	;# 
  4607   000382                     PRODSH          equ	898	;# 
  4608   000382                     PRODL_SHAD      equ	898	;# 
  4609   000383                     PRODH_SHAD      equ	899	;# 
  4610   000387                     TU16ACON0       equ	903	;# 
  4611   000388                     TU16ACON1       equ	904	;# 
  4612   000389                     TU16AHLT        equ	905	;# 
  4613   00038A                     TU16APS         equ	906	;# 
  4614   00038B                     TU16ATMR        equ	907	;# 
  4615   00038B                     TU16ACR         equ	907	;# 
  4616   00038B                     TU16ATMRL       equ	907	;# 
  4617   00038B                     TU16ACRL        equ	907	;# 
  4618   00038C                     TU16ATMRH       equ	908	;# 
  4619   00038C                     TU16ACRH        equ	908	;# 
  4620   00038D                     TU16APR         equ	909	;# 
  4621   00038D                     TU16APRL        equ	909	;# 
  4622   00038E                     TU16APRH        equ	910	;# 
  4623   00038F                     TU16ACLK        equ	911	;# 
  4624   000390                     TU16AERS        equ	912	;# 
  4625   000393                     TU16BCON0       equ	915	;# 
  4626   000394                     TU16BCON1       equ	916	;# 
  4627   000395                     TU16BHLT        equ	917	;# 
  4628   000396                     TU16BPS         equ	918	;# 
  4629   000397                     TU16BTMR        equ	919	;# 
  4630   000397                     TU16BCR         equ	919	;# 
  4631   000397                     TU16BTMRL       equ	919	;# 
  4632   000397                     TU16BCRL        equ	919	;# 
  4633   000398                     TU16BTMRH       equ	920	;# 
  4634   000398                     TU16BCRH        equ	920	;# 
  4635   000399                     TU16BPR         equ	921	;# 
  4636   000399                     TU16BPRL        equ	921	;# 
  4637   00039A                     TU16BPRH        equ	922	;# 
  4638   00039B                     TU16BCLK        equ	923	;# 
  4639   00039C                     TU16BERS        equ	924	;# 
  4640   0003BB                     TUCHAIN         equ	955	;# 
  4641   0003BC                     CWG1CLK         equ	956	;# 
  4642   0003BC                     CWG1CLKCON      equ	956	;# 
  4643   0003BD                     CWG1ISM         equ	957	;# 
  4644   0003BE                     CWG1DBR         equ	958	;# 
  4645   0003BF                     CWG1DBF         equ	959	;# 
  4646   0003C0                     CWG1CON0        equ	960	;# 
  4647   0003C1                     CWG1CON1        equ	961	;# 
  4648   0003C2                     CWG1AS0         equ	962	;# 
  4649   0003C3                     CWG1AS1         equ	963	;# 
  4650   0003C4                     CWG1STR         equ	964	;# 
  4651   0003C5                     CWG2CLK         equ	965	;# 
  4652   0003C5                     CWG2CLKCON      equ	965	;# 
  4653   0003C6                     CWG2ISM         equ	966	;# 
  4654   0003C7                     CWG2DBR         equ	967	;# 
  4655   0003C8                     CWG2DBF         equ	968	;# 
  4656   0003C9                     CWG2CON0        equ	969	;# 
  4657   0003CA                     CWG2CON1        equ	970	;# 
  4658   0003CB                     CWG2AS0         equ	971	;# 
  4659   0003CC                     CWG2AS1         equ	972	;# 
  4660   0003CD                     CWG2STR         equ	973	;# 
  4661   0003CE                     CWG3CLK         equ	974	;# 
  4662   0003CE                     CWG3CLKCON      equ	974	;# 
  4663   0003CF                     CWG3ISM         equ	975	;# 
  4664   0003D0                     CWG3DBR         equ	976	;# 
  4665   0003D1                     CWG3DBF         equ	977	;# 
  4666   0003D2                     CWG3CON0        equ	978	;# 
  4667   0003D3                     CWG3CON1        equ	979	;# 
  4668   0003D4                     CWG3AS0         equ	980	;# 
  4669   0003D5                     CWG3AS1         equ	981	;# 
  4670   0003D6                     CWG3STR         equ	982	;# 
  4671   0003D7                     FVRCON          equ	983	;# 
  4672   0003D8                     ADCPCON         equ	984	;# 
  4673   0003D8                     ADCP            equ	984	;# 
  4674   0003D9                     ADLTH           equ	985	;# 
  4675   0003D9                     ADLTHL          equ	985	;# 
  4676   0003DA                     ADLTHH          equ	986	;# 
  4677   0003DB                     ADUTH           equ	987	;# 
  4678   0003DB                     ADUTHL          equ	987	;# 
  4679   0003DC                     ADUTHH          equ	988	;# 
  4680   0003DD                     ADERR           equ	989	;# 
  4681   0003DD                     ADERRL          equ	989	;# 
  4682   0003DE                     ADERRH          equ	990	;# 
  4683   0003DF                     ADSTPT          equ	991	;# 
  4684   0003DF                     ADSTPTL         equ	991	;# 
  4685   0003E0                     ADSTPTH         equ	992	;# 
  4686   0003E1                     ADFLTR          equ	993	;# 
  4687   0003E1                     ADFLTRL         equ	993	;# 
  4688   0003E2                     ADFLTRH         equ	994	;# 
  4689   0003E3                     ADACC           equ	995	;# 
  4690   0003E3                     ADACCL          equ	995	;# 
  4691   0003E4                     ADACCH          equ	996	;# 
  4692   0003E5                     ADACCU          equ	997	;# 
  4693   0003E6                     ADCNT           equ	998	;# 
  4694   0003E7                     ADRPT           equ	999	;# 
  4695   0003E8                     ADPREV          equ	1000	;# 
  4696   0003E8                     ADPREVL         equ	1000	;# 
  4697   0003E9                     ADPREVH         equ	1001	;# 
  4698   0003EA                     ADRES           equ	1002	;# 
  4699   0003EA                     ADRESL          equ	1002	;# 
  4700   0003EB                     ADRESH          equ	1003	;# 
  4701   0003EC                     ADPCH           equ	1004	;# 
  4702   0003EE                     ADACQ           equ	1006	;# 
  4703   0003EE                     ADACQL          equ	1006	;# 
  4704   0003EF                     ADACQH          equ	1007	;# 
  4705   0003F0                     ADCAP           equ	1008	;# 
  4706   0003F1                     ADPRE           equ	1009	;# 
  4707   0003F1                     ADPREL          equ	1009	;# 
  4708   0003F2                     ADPREH          equ	1010	;# 
  4709   0003F3                     ADCON0          equ	1011	;# 
  4710   0003F4                     ADCON1          equ	1012	;# 
  4711   0003F5                     ADCON2          equ	1013	;# 
  4712   0003F6                     ADCON3          equ	1014	;# 
  4713   0003F7                     ADSTAT          equ	1015	;# 
  4714   0003F8                     ADREF           equ	1016	;# 
  4715   0003F9                     ADACT           equ	1017	;# 
  4716   0003FA                     ADCLK           equ	1018	;# 
  4717   0003FB                     ADCTX           equ	1019	;# 
  4718   0003FC                     ADCSEL1         equ	1020	;# 
  4719   0003FD                     ADCSEL2         equ	1021	;# 
  4720   0003FE                     ADCSEL3         equ	1022	;# 
  4721   0003FF                     ADCSEL4         equ	1023	;# 
  4722   000400                     ANSELA          equ	1024	;# 
  4723   000401                     WPUA            equ	1025	;# 
  4724   000402                     ODCONA          equ	1026	;# 
  4725   000403                     SLRCONA         equ	1027	;# 
  4726   000404                     INLVLA          equ	1028	;# 
  4727   000405                     IOCAP           equ	1029	;# 
  4728   000406                     IOCAN           equ	1030	;# 
  4729   000407                     IOCAF           equ	1031	;# 
  4730   000408                     ANSELB          equ	1032	;# 
  4731   000409                     WPUB            equ	1033	;# 
  4732   00040A                     ODCONB          equ	1034	;# 
  4733   00040B                     SLRCONB         equ	1035	;# 
  4734   00040C                     INLVLB          equ	1036	;# 
  4735   00040D                     IOCBP           equ	1037	;# 
  4736   00040E                     IOCBN           equ	1038	;# 
  4737   00040F                     IOCBF           equ	1039	;# 
  4738   000410                     ANSELC          equ	1040	;# 
  4739   000411                     WPUC            equ	1041	;# 
  4740   000412                     ODCONC          equ	1042	;# 
  4741   000413                     SLRCONC         equ	1043	;# 
  4742   000414                     INLVLC          equ	1044	;# 
  4743   000415                     IOCCP           equ	1045	;# 
  4744   000416                     IOCCN           equ	1046	;# 
  4745   000417                     IOCCF           equ	1047	;# 
  4746   000421                     WPUE            equ	1057	;# 
  4747   000424                     INLVLE          equ	1060	;# 
  4748   000425                     IOCEP           equ	1061	;# 
  4749   000426                     IOCEN           equ	1062	;# 
  4750   000427                     IOCEF           equ	1063	;# 
  4751   000440                     NCO1ACC         equ	1088	;# 
  4752   000440                     NCO1ACCL        equ	1088	;# 
  4753   000441                     NCO1ACCH        equ	1089	;# 
  4754   000442                     NCO1ACCU        equ	1090	;# 
  4755   000443                     NCO1INC         equ	1091	;# 
  4756   000443                     NCO1INCL        equ	1091	;# 
  4757   000444                     NCO1INCH        equ	1092	;# 
  4758   000445                     NCO1INCU        equ	1093	;# 
  4759   000446                     NCO1CON         equ	1094	;# 
  4760   000447                     NCO1CLK         equ	1095	;# 
  4761   000448                     NCO2ACC         equ	1096	;# 
  4762   000448                     NCO2ACCL        equ	1096	;# 
  4763   000449                     NCO2ACCH        equ	1097	;# 
  4764   00044A                     NCO2ACCU        equ	1098	;# 
  4765   00044B                     NCO2INC         equ	1099	;# 
  4766   00044B                     NCO2INCL        equ	1099	;# 
  4767   00044C                     NCO2INCH        equ	1100	;# 
  4768   00044D                     NCO2INCU        equ	1101	;# 
  4769   00044E                     NCO2CON         equ	1102	;# 
  4770   00044F                     NCO2CLK         equ	1103	;# 
  4771   000450                     NCO3ACC         equ	1104	;# 
  4772   000450                     NCO3ACCL        equ	1104	;# 
  4773   000451                     NCO3ACCH        equ	1105	;# 
  4774   000452                     NCO3ACCU        equ	1106	;# 
  4775   000453                     NCO3INC         equ	1107	;# 
  4776   000453                     NCO3INCL        equ	1107	;# 
  4777   000454                     NCO3INCH        equ	1108	;# 
  4778   000455                     NCO3INCU        equ	1109	;# 
  4779   000456                     NCO3CON         equ	1110	;# 
  4780   000457                     NCO3CLK         equ	1111	;# 
  4781   000458                     FSCMCON         equ	1112	;# 
  4782   000459                     IVTLOCK         equ	1113	;# 
  4783   00045A                     IVTAD           equ	1114	;# 
  4784   00045A                     IVTADL          equ	1114	;# 
  4785   00045B                     IVTADH          equ	1115	;# 
  4786   00045C                     IVTADU          equ	1116	;# 
  4787   00045D                     IVTBASE         equ	1117	;# 
  4788   00045D                     IVTBASEL        equ	1117	;# 
  4789   00045E                     IVTBASEH        equ	1118	;# 
  4790   00045F                     IVTBASEU        equ	1119	;# 
  4791   000460                     PWM1ERS         equ	1120	;# 
  4792   000461                     PWM1CLK         equ	1121	;# 
  4793   000462                     PWM1LDS         equ	1122	;# 
  4794   000463                     PWM1PR          equ	1123	;# 
  4795   000463                     PWM1PRL         equ	1123	;# 
  4796   000464                     PWM1PRH         equ	1124	;# 
  4797   000465                     PWM1CPRE        equ	1125	;# 
  4798   000466                     PWM1PIPOS       equ	1126	;# 
  4799   000467                     PWM1GIR         equ	1127	;# 
  4800   000468                     PWM1GIE         equ	1128	;# 
  4801   000469                     PWM1CON         equ	1129	;# 
  4802   00046A                     PWM1S1CFG       equ	1130	;# 
  4803   00046B                     PWM1S1P1        equ	1131	;# 
  4804   00046B                     PWM1S1P1L       equ	1131	;# 
  4805   00046C                     PWM1S1P1H       equ	1132	;# 
  4806   00046D                     PWM1S1P2        equ	1133	;# 
  4807   00046D                     PWM1S1P2L       equ	1133	;# 
  4808   00046E                     PWM1S1P2H       equ	1134	;# 
  4809   00046F                     PWM2ERS         equ	1135	;# 
  4810   000470                     PWM2CLK         equ	1136	;# 
  4811   000471                     PWM2LDS         equ	1137	;# 
  4812   000472                     PWM2PR          equ	1138	;# 
  4813   000472                     PWM2PRL         equ	1138	;# 
  4814   000473                     PWM2PRH         equ	1139	;# 
  4815   000474                     PWM2CPRE        equ	1140	;# 
  4816   000475                     PWM2PIPOS       equ	1141	;# 
  4817   000476                     PWM2GIR         equ	1142	;# 
  4818   000477                     PWM2GIE         equ	1143	;# 
  4819   000478                     PWM2CON         equ	1144	;# 
  4820   000479                     PWM2S1CFG       equ	1145	;# 
  4821   00047A                     PWM2S1P1        equ	1146	;# 
  4822   00047A                     PWM2S1P1L       equ	1146	;# 
  4823   00047B                     PWM2S1P1H       equ	1147	;# 
  4824   00047C                     PWM2S1P2        equ	1148	;# 
  4825   00047C                     PWM2S1P2L       equ	1148	;# 
  4826   00047D                     PWM2S1P2H       equ	1149	;# 
  4827   00047E                     PWM3ERS         equ	1150	;# 
  4828   00047F                     PWM3CLK         equ	1151	;# 
  4829   000480                     PWM3LDS         equ	1152	;# 
  4830   000481                     PWM3PR          equ	1153	;# 
  4831   000481                     PWM3PRL         equ	1153	;# 
  4832   000482                     PWM3PRH         equ	1154	;# 
  4833   000483                     PWM3CPRE        equ	1155	;# 
  4834   000484                     PWM3PIPOS       equ	1156	;# 
  4835   000485                     PWM3GIR         equ	1157	;# 
  4836   000486                     PWM3GIE         equ	1158	;# 
  4837   000487                     PWM3CON         equ	1159	;# 
  4838   000488                     PWM3S1CFG       equ	1160	;# 
  4839   000489                     PWM3S1P1        equ	1161	;# 
  4840   000489                     PWM3S1P1L       equ	1161	;# 
  4841   00048A                     PWM3S1P1H       equ	1162	;# 
  4842   00048B                     PWM3S1P2        equ	1163	;# 
  4843   00048B                     PWM3S1P2L       equ	1163	;# 
  4844   00048C                     PWM3S1P2H       equ	1164	;# 
  4845   00048D                     PWM4ERS         equ	1165	;# 
  4846   00048E                     PWM4CLK         equ	1166	;# 
  4847   00048F                     PWM4LDS         equ	1167	;# 
  4848   000490                     PWM4PR          equ	1168	;# 
  4849   000490                     PWM4PRL         equ	1168	;# 
  4850   000491                     PWM4PRH         equ	1169	;# 
  4851   000492                     PWM4CPRE        equ	1170	;# 
  4852   000493                     PWM4PIPOS       equ	1171	;# 
  4853   000494                     PWM4GIR         equ	1172	;# 
  4854   000495                     PWM4GIE         equ	1173	;# 
  4855   000496                     PWM4CON         equ	1174	;# 
  4856   000497                     PWM4S1CFG       equ	1175	;# 
  4857   000498                     PWM4S1P1        equ	1176	;# 
  4858   000498                     PWM4S1P1L       equ	1176	;# 
  4859   000499                     PWM4S1P1H       equ	1177	;# 
  4860   00049A                     PWM4S1P2        equ	1178	;# 
  4861   00049A                     PWM4S1P2L       equ	1178	;# 
  4862   00049B                     PWM4S1P2H       equ	1179	;# 
  4863   00049C                     PWMLOAD         equ	1180	;# 
  4864   00049D                     PWMEN           equ	1181	;# 
  4865   00049E                     PIE0            equ	1182	;# 
  4866   00049F                     PIE1            equ	1183	;# 
  4867   0004A0                     PIE2            equ	1184	;# 
  4868   0004A1                     PIE3            equ	1185	;# 
  4869   0004A2                     PIE4            equ	1186	;# 
  4870   0004A3                     PIE5            equ	1187	;# 
  4871   0004A4                     PIE6            equ	1188	;# 
  4872   0004A5                     PIE7            equ	1189	;# 
  4873   0004A6                     PIE8            equ	1190	;# 
  4874   0004A7                     PIE9            equ	1191	;# 
  4875   0004A8                     PIE10           equ	1192	;# 
  4876   0004A9                     PIE11           equ	1193	;# 
  4877   0004AA                     PIE12           equ	1194	;# 
  4878   0004AB                     PIE13           equ	1195	;# 
  4879   0004AC                     PIE14           equ	1196	;# 
  4880   0004AD                     PIE15           equ	1197	;# 
  4881   0004AE                     PIR0            equ	1198	;# 
  4882   0004AF                     PIR1            equ	1199	;# 
  4883   0004B0                     PIR2            equ	1200	;# 
  4884   0004B1                     PIR3            equ	1201	;# 
  4885   0004B2                     PIR4            equ	1202	;# 
  4886   0004B3                     PIR5            equ	1203	;# 
  4887   0004B4                     PIR6            equ	1204	;# 
  4888   0004B5                     PIR7            equ	1205	;# 
  4889   0004B6                     PIR8            equ	1206	;# 
  4890   0004B7                     PIR9            equ	1207	;# 
  4891   0004B8                     PIR10           equ	1208	;# 
  4892   0004B9                     PIR11           equ	1209	;# 
  4893   0004BA                     PIR12           equ	1210	;# 
  4894   0004BB                     PIR13           equ	1211	;# 
  4895   0004BC                     PIR14           equ	1212	;# 
  4896   0004BD                     PIR15           equ	1213	;# 
  4897   0004BE                     LATA            equ	1214	;# 
  4898   0004BF                     LATB            equ	1215	;# 
  4899   0004C0                     LATC            equ	1216	;# 
  4900   0004C6                     TRISA           equ	1222	;# 
  4901   0004C7                     TRISB           equ	1223	;# 
  4902   0004C8                     TRISC           equ	1224	;# 
  4903   0004CA                     TRISE           equ	1226	;# 
  4904   0004CE                     PORTA           equ	1230	;# 
  4905   0004CF                     PORTB           equ	1231	;# 
  4906   0004D0                     PORTC           equ	1232	;# 
  4907   0004D2                     PORTE           equ	1234	;# 
  4908   0004D6                     INTCON0         equ	1238	;# 
  4909   0004D7                     INTCON1         equ	1239	;# 
  4910   0004D8                     STATUS          equ	1240	;# 
  4911   0004D9                     FSR2            equ	1241	;# 
  4912   0004D9                     FSR2L           equ	1241	;# 
  4913   0004DA                     FSR2H           equ	1242	;# 
  4914   0004DB                     PLUSW2          equ	1243	;# 
  4915   0004DC                     PREINC2         equ	1244	;# 
  4916   0004DD                     POSTDEC2        equ	1245	;# 
  4917   0004DE                     POSTINC2        equ	1246	;# 
  4918   0004DF                     INDF2           equ	1247	;# 
  4919   0004E0                     BSR             equ	1248	;# 
  4920   0004E1                     FSR1            equ	1249	;# 
  4921   0004E1                     FSR1L           equ	1249	;# 
  4922   0004E2                     FSR1H           equ	1250	;# 
  4923   0004E3                     PLUSW1          equ	1251	;# 
  4924   0004E4                     PREINC1         equ	1252	;# 
  4925   0004E5                     POSTDEC1        equ	1253	;# 
  4926   0004E6                     POSTINC1        equ	1254	;# 
  4927   0004E7                     INDF1           equ	1255	;# 
  4928   0004E8                     WREG            equ	1256	;# 
  4929   0004E9                     FSR0            equ	1257	;# 
  4930   0004E9                     FSR0L           equ	1257	;# 
  4931   0004EA                     FSR0H           equ	1258	;# 
  4932   0004EB                     PLUSW0          equ	1259	;# 
  4933   0004EC                     PREINC0         equ	1260	;# 
  4934   0004ED                     POSTDEC0        equ	1261	;# 
  4935   0004EE                     POSTINC0        equ	1262	;# 
  4936   0004EF                     INDF0           equ	1263	;# 
  4937   0004F0                     PCON0           equ	1264	;# 
  4938   0004F1                     PCON1           equ	1265	;# 
  4939   0004F2                     CPUDOZE         equ	1266	;# 
  4940   0004F3                     PROD            equ	1267	;# 
  4941   0004F3                     PRODL           equ	1267	;# 
  4942   0004F4                     PRODH           equ	1268	;# 
  4943   0004F5                     TABLAT          equ	1269	;# 
  4944   0004F6                     TBLPTR          equ	1270	;# 
  4945   0004F6                     TBLPTRL         equ	1270	;# 
  4946   0004F7                     TBLPTRH         equ	1271	;# 
  4947   0004F8                     TBLPTRU         equ	1272	;# 
  4948   0004F9                     PCLAT           equ	1273	;# 
  4949   0004F9                     PCL             equ	1273	;# 
  4950   0004FA                     PCLATH          equ	1274	;# 
  4951   0004FB                     PCLATU          equ	1275	;# 
  4952   0004FC                     STKPTR          equ	1276	;# 
  4953   0004FD                     TOS             equ	1277	;# 
  4954   0004FD                     TOSL            equ	1277	;# 
  4955   0004FE                     TOSH            equ	1278	;# 
  4956   0004FF                     TOSU            equ	1279	;# 
  4957   000038                     BOOTREG         equ	56	;# 
  4958   000039                     CLKRCON         equ	57	;# 
  4959   00003A                     CLKRCLK         equ	58	;# 
  4960   000040                     NVMCON0         equ	64	;# 
  4961   000041                     NVMCON1         equ	65	;# 
  4962   000042                     NVMLOCK         equ	66	;# 
  4963   000043                     NVMADR          equ	67	;# 
  4964   000043                     NVMADRL         equ	67	;# 
  4965   000044                     NVMADRH         equ	68	;# 
  4966   000045                     NVMADRU         equ	69	;# 
  4967   000046                     NVMDAT          equ	70	;# 
  4968   000046                     NVMDATL         equ	70	;# 
  4969   000047                     NVMDATH         equ	71	;# 
  4970   000048                     VREGCON         equ	72	;# 
  4971   000049                     BORCON          equ	73	;# 
  4972   00004A                     HLVDCON0        equ	74	;# 
  4973   00004B                     HLVDCON1        equ	75	;# 
  4974   00004C                     ZCDCON          equ	76	;# 
  4975   000060                     PMD0            equ	96	;# 
  4976   000061                     PMD1            equ	97	;# 
  4977   000062                     PMD2            equ	98	;# 
  4978   000063                     PMD3            equ	99	;# 
  4979   000064                     PMD4            equ	100	;# 
  4980   000065                     PMD5            equ	101	;# 
  4981   000066                     PMD6            equ	102	;# 
  4982   000067                     PMD7            equ	103	;# 
  4983   000068                     PMD8            equ	104	;# 
  4984   00006A                     MD1CON0         equ	106	;# 
  4985   00006B                     MD1CON1         equ	107	;# 
  4986   00006C                     MD1SRC          equ	108	;# 
  4987   00006D                     MD1CARL         equ	109	;# 
  4988   00006E                     MD1CARH         equ	110	;# 
  4989   00006F                     CMOUT           equ	111	;# 
  4990   000070                     CM1CON0         equ	112	;# 
  4991   000071                     CM1CON1         equ	113	;# 
  4992   000072                     CM1NCH          equ	114	;# 
  4993   000073                     CM1PCH          equ	115	;# 
  4994   000074                     CM2CON0         equ	116	;# 
  4995   000075                     CM2CON1         equ	117	;# 
  4996   000076                     CM2NCH          equ	118	;# 
  4997   000077                     CM2PCH          equ	119	;# 
  4998   000078                     WDTCON0         equ	120	;# 
  4999   000079                     WDTCON1         equ	121	;# 
  5000   00007A                     WDTPSL          equ	122	;# 
  5001   00007B                     WDTPSH          equ	123	;# 
  5002   00007C                     WDTTMR          equ	124	;# 
  5003   00007D                     DAC1DAT         equ	125	;# 
  5004   00007D                     DAC1DATL        equ	125	;# 
  5005   00007F                     DAC1CON         equ	127	;# 
  5006   000080                     SPI1RXB         equ	128	;# 
  5007   000081                     SPI1TXB         equ	129	;# 
  5008   000082                     SPI1TCNT        equ	130	;# 
  5009   000082                     SPI1TCNTL       equ	130	;# 
  5010   000083                     SPI1TCNTH       equ	131	;# 
  5011   000084                     SPI1CON0        equ	132	;# 
  5012   000085                     SPI1CON1        equ	133	;# 
  5013   000086                     SPI1CON2        equ	134	;# 
  5014   000087                     SPI1STATUS      equ	135	;# 
  5015   000088                     SPI1TWIDTH      equ	136	;# 
  5016   000089                     SPI1BAUD        equ	137	;# 
  5017   00008A                     SPI1INTF        equ	138	;# 
  5018   00008B                     SPI1INTE        equ	139	;# 
  5019   00008C                     SPI1CLK         equ	140	;# 
  5020   00008D                     SPI2RXB         equ	141	;# 
  5021   00008E                     SPI2TXB         equ	142	;# 
  5022   00008F                     SPI2TCNT        equ	143	;# 
  5023   00008F                     SPI2TCNTL       equ	143	;# 
  5024   000090                     SPI2TCNTH       equ	144	;# 
  5025   000091                     SPI2CON0        equ	145	;# 
  5026   000092                     SPI2CON1        equ	146	;# 
  5027   000093                     SPI2CON2        equ	147	;# 
  5028   000094                     SPI2STATUS      equ	148	;# 
  5029   000095                     SPI2TWIDTH      equ	149	;# 
  5030   000096                     SPI2BAUD        equ	150	;# 
  5031   000097                     SPI2INTF        equ	151	;# 
  5032   000098                     SPI2INTE        equ	152	;# 
  5033   000099                     SPI2CLK         equ	153	;# 
  5034   0000AC                     ACTCON          equ	172	;# 
  5035   0000AD                     OSCCON1         equ	173	;# 
  5036   0000AE                     OSCCON2         equ	174	;# 
  5037   0000AF                     OSCCON3         equ	175	;# 
  5038   0000B0                     OSCTUNE         equ	176	;# 
  5039   0000B1                     OSCFRQ          equ	177	;# 
  5040   0000B1                     OSCFREQ         equ	177	;# 
  5041   0000B2                     OSCSTAT         equ	178	;# 
  5042   0000B2                     OSCSTAT1        equ	178	;# 
  5043   0000B3                     OSCEN           equ	179	;# 
  5044   0000B4                     PRLOCK          equ	180	;# 
  5045   0000B5                     SCANPR          equ	181	;# 
  5046   0000B6                     DMA1PR          equ	182	;# 
  5047   0000B7                     DMA2PR          equ	183	;# 
  5048   0000B8                     DMA3PR          equ	184	;# 
  5049   0000B9                     DMA4PR          equ	185	;# 
  5050   0000BA                     DMA5PR          equ	186	;# 
  5051   0000BB                     DMA6PR          equ	187	;# 
  5052   0000BC                     DMA7PR          equ	188	;# 
  5053   0000BD                     DMA8PR          equ	189	;# 
  5054   0000BE                     MAINPR          equ	190	;# 
  5055   0000BF                     ISRPR           equ	191	;# 
  5056   0000D4                     CLCDATA         equ	212	;# 
  5057   0000D5                     CLCSELECT       equ	213	;# 
  5058   0000D6                     CLCnCON         equ	214	;# 
  5059   0000D7                     CLCnPOL         equ	215	;# 
  5060   0000D8                     CLCnSEL0        equ	216	;# 
  5061   0000D9                     CLCnSEL1        equ	217	;# 
  5062   0000DA                     CLCnSEL2        equ	218	;# 
  5063   0000DB                     CLCnSEL3        equ	219	;# 
  5064   0000DC                     CLCnGLS0        equ	220	;# 
  5065   0000DD                     CLCnGLS1        equ	221	;# 
  5066   0000DE                     CLCnGLS2        equ	222	;# 
  5067   0000DF                     CLCnGLS3        equ	223	;# 
  5068   0000E8                     DMASELECT       equ	232	;# 
  5069   0000E9                     DMAnBUF         equ	233	;# 
  5070   0000EA                     DMAnDCNT        equ	234	;# 
  5071   0000EA                     DMAnDCNTL       equ	234	;# 
  5072   0000EB                     DMAnDCNTH       equ	235	;# 
  5073   0000EC                     DMAnDPTR        equ	236	;# 
  5074   0000EC                     DMAnDPTRL       equ	236	;# 
  5075   0000ED                     DMAnDPTRH       equ	237	;# 
  5076   0000EE                     DMAnDSZ         equ	238	;# 
  5077   0000EE                     DMAnDSZL        equ	238	;# 
  5078   0000EF                     DMAnDSZH        equ	239	;# 
  5079   0000F0                     DMAnDSA         equ	240	;# 
  5080   0000F0                     DMAnDSAL        equ	240	;# 
  5081   0000F1                     DMAnDSAH        equ	241	;# 
  5082   0000F2                     DMAnSCNT        equ	242	;# 
  5083   0000F2                     DMAnSCNTL       equ	242	;# 
  5084   0000F3                     DMAnSCNTH       equ	243	;# 
  5085   0000F4                     DMAnSPTR        equ	244	;# 
  5086   0000F4                     DMAnSPTRL       equ	244	;# 
  5087   0000F5                     DMAnSPTRH       equ	245	;# 
  5088   0000F6                     DMAnSPTRU       equ	246	;# 
  5089   0000F7                     DMAnSSZ         equ	247	;# 
  5090   0000F7                     DMAnSSZL        equ	247	;# 
  5091   0000F8                     DMAnSSZH        equ	248	;# 
  5092   0000F9                     DMAnSSA         equ	249	;# 
  5093   0000F9                     DMAnSSAL        equ	249	;# 
  5094   0000FA                     DMAnSSAH        equ	250	;# 
  5095   0000FB                     DMAnSSAU        equ	251	;# 
  5096   0000FC                     DMAnCON0        equ	252	;# 
  5097   0000FD                     DMAnCON1        equ	253	;# 
  5098   0000FE                     DMAnAIRQ        equ	254	;# 
  5099   0000FF                     DMAnSIRQ        equ	255	;# 
  5100   000100                     C1CONL          equ	256	;# 
  5101   000101                     C1CONH          equ	257	;# 
  5102   000102                     C1CONU          equ	258	;# 
  5103   000103                     C1CONT          equ	259	;# 
  5104   000104                     C1NBTCFGL       equ	260	;# 
  5105   000105                     C1NBTCFGH       equ	261	;# 
  5106   000106                     C1NBTCFGU       equ	262	;# 
  5107   000107                     C1NBTCFGT       equ	263	;# 
  5108   000108                     C1DBTCFGL       equ	264	;# 
  5109   000109                     C1DBTCFGH       equ	265	;# 
  5110   00010A                     C1DBTCFGU       equ	266	;# 
  5111   00010B                     C1DBTCFGT       equ	267	;# 
  5112   00010C                     C1TDCL          equ	268	;# 
  5113   00010D                     C1TDCH          equ	269	;# 
  5114   00010E                     C1TDCU          equ	270	;# 
  5115   000110                     C1TBC           equ	272	;# 
  5116   000110                     C1TBCL          equ	272	;# 
  5117   000111                     C1TBCH          equ	273	;# 
  5118   000112                     C1TBCU          equ	274	;# 
  5119   000113                     C1TBCT          equ	275	;# 
  5120   000114                     C1TSCONL        equ	276	;# 
  5121   000115                     C1TSCONH        equ	277	;# 
  5122   000116                     C1TSCONU        equ	278	;# 
  5123   000117                     C1TSCONT        equ	279	;# 
  5124   000118                     C1VECL          equ	280	;# 
  5125   000119                     C1VECH          equ	281	;# 
  5126   00011A                     C1VECU          equ	282	;# 
  5127   00011B                     C1VECT          equ	283	;# 
  5128   00011C                     C1INTL          equ	284	;# 
  5129   00011D                     C1INTH          equ	285	;# 
  5130   00011E                     C1INTU          equ	286	;# 
  5131   00011F                     C1INTT          equ	287	;# 
  5132   000120                     C1RXIF          equ	288	;# 
  5133   000120                     C1RXIFL         equ	288	;# 
  5134   000121                     C1RXIFH         equ	289	;# 
  5135   000122                     C1RXIFU         equ	290	;# 
  5136   000123                     C1RXIFT         equ	291	;# 
  5137   000124                     C1TXIF          equ	292	;# 
  5138   000124                     C1TXIFL         equ	292	;# 
  5139   000125                     C1TXIFH         equ	293	;# 
  5140   000126                     C1TXIFU         equ	294	;# 
  5141   000127                     C1TXIFT         equ	295	;# 
  5142   000128                     C1RXOVIF        equ	296	;# 
  5143   000128                     C1RXOVIFL       equ	296	;# 
  5144   000129                     C1RXOVIFH       equ	297	;# 
  5145   00012A                     C1RXOVIFU       equ	298	;# 
  5146   00012B                     C1RXOVIFT       equ	299	;# 
  5147   00012C                     C1TXATIF        equ	300	;# 
  5148   00012C                     C1TXATIFL       equ	300	;# 
  5149   00012D                     C1TXATIFH       equ	301	;# 
  5150   00012E                     C1TXATIFU       equ	302	;# 
  5151   00012F                     C1TXATIFT       equ	303	;# 
  5152   000130                     C1TXREQ         equ	304	;# 
  5153   000130                     C1TXREQL        equ	304	;# 
  5154   000131                     C1TXREQH        equ	305	;# 
  5155   000132                     C1TXREQU        equ	306	;# 
  5156   000133                     C1TXREQT        equ	307	;# 
  5157   000134                     C1TRECL         equ	308	;# 
  5158   000135                     C1TRECH         equ	309	;# 
  5159   000136                     C1TRECU         equ	310	;# 
  5160   000137                     C1TRECT         equ	311	;# 
  5161   000138                     C1BDIAG0L       equ	312	;# 
  5162   000139                     C1BDIAG0H       equ	313	;# 
  5163   00013C                     C1BDIAG1L       equ	316	;# 
  5164   00013D                     C1BDIAG1H       equ	317	;# 
  5165   00013E                     C1BDIAG1U       equ	318	;# 
  5166   00013F                     C1BDIAG1T       equ	319	;# 
  5167   000140                     C1TEFCONL       equ	320	;# 
  5168   000141                     C1TEFCONH       equ	321	;# 
  5169   000142                     C1TEFCONU       equ	322	;# 
  5170   000143                     C1TEFCONT       equ	323	;# 
  5171   000144                     C1TEFSTAL       equ	324	;# 
  5172   000145                     C1TEFSTAH       equ	325	;# 
  5173   000146                     C1TEFSTAU       equ	326	;# 
  5174   000147                     C1TEFSTAT       equ	327	;# 
  5175   000148                     C1TEFUA         equ	328	;# 
  5176   000148                     C1TEFUAL        equ	328	;# 
  5177   000149                     C1TEFUAH        equ	329	;# 
  5178   00014A                     C1TEFUAU        equ	330	;# 
  5179   00014B                     C1TEFUAT        equ	331	;# 
  5180   00014C                     C1FIFOBA        equ	332	;# 
  5181   00014C                     C1FIFOBAL       equ	332	;# 
  5182   00014D                     C1FIFOBAH       equ	333	;# 
  5183   00014E                     C1FIFOBAU       equ	334	;# 
  5184   00014F                     C1FIFOBAT       equ	335	;# 
  5185   000150                     C1TXQCONL       equ	336	;# 
  5186   000151                     C1TXQCONH       equ	337	;# 
  5187   000152                     C1TXQCONU       equ	338	;# 
  5188   000153                     C1TXQCONT       equ	339	;# 
  5189   000154                     C1TXQSTAL       equ	340	;# 
  5190   000155                     C1TXQSTAH       equ	341	;# 
  5191   000156                     C1TXQSTAU       equ	342	;# 
  5192   000157                     C1TXQSTAT       equ	343	;# 
  5193   000158                     C1TXQUA         equ	344	;# 
  5194   000158                     C1TXQUAL        equ	344	;# 
  5195   000159                     C1TXQUAH        equ	345	;# 
  5196   00015A                     C1TXQUAU        equ	346	;# 
  5197   00015B                     C1TXQUAT        equ	347	;# 
  5198   00015C                     C1FIFOCON1      equ	348	;# 
  5199   00015C                     C1FIFOCON1L     equ	348	;# 
  5200   00015D                     C1FIFOCON1H     equ	349	;# 
  5201   00015E                     C1FIFOCON1U     equ	350	;# 
  5202   00015F                     C1FIFOCON1T     equ	351	;# 
  5203   000160                     C1FIFOSTA1      equ	352	;# 
  5204   000160                     C1FIFOSTA1L     equ	352	;# 
  5205   000161                     C1FIFOSTA1H     equ	353	;# 
  5206   000162                     C1FIFOSTA1U     equ	354	;# 
  5207   000163                     C1FIFOSTA1T     equ	355	;# 
  5208   000164                     C1FIFOUA1       equ	356	;# 
  5209   000164                     C1FIFOUA1L      equ	356	;# 
  5210   000165                     C1FIFOUA1H      equ	357	;# 
  5211   000166                     C1FIFOUA1U      equ	358	;# 
  5212   000167                     C1FIFOUA1T      equ	359	;# 
  5213   000168                     C1FIFOCON2      equ	360	;# 
  5214   000168                     C1FIFOCON2L     equ	360	;# 
  5215   000169                     C1FIFOCON2H     equ	361	;# 
  5216   00016A                     C1FIFOCON2U     equ	362	;# 
  5217   00016B                     C1FIFOCON2T     equ	363	;# 
  5218   00016C                     C1FIFOSTA2      equ	364	;# 
  5219   00016C                     C1FIFOSTA2L     equ	364	;# 
  5220   00016D                     C1FIFOSTA2H     equ	365	;# 
  5221   00016E                     C1FIFOSTA2U     equ	366	;# 
  5222   00016F                     C1FIFOSTA2T     equ	367	;# 
  5223   000170                     C1FIFOUA2       equ	368	;# 
  5224   000170                     C1FIFOUA2L      equ	368	;# 
  5225   000171                     C1FIFOUA2H      equ	369	;# 
  5226   000172                     C1FIFOUA2U      equ	370	;# 
  5227   000173                     C1FIFOUA2T      equ	371	;# 
  5228   000174                     C1FIFOCON3      equ	372	;# 
  5229   000174                     C1FIFOCON3L     equ	372	;# 
  5230   000175                     C1FIFOCON3H     equ	373	;# 
  5231   000176                     C1FIFOCON3U     equ	374	;# 
  5232   000177                     C1FIFOCON3T     equ	375	;# 
  5233   000178                     C1FIFOSTA3      equ	376	;# 
  5234   000178                     C1FIFOSTA3L     equ	376	;# 
  5235   000179                     C1FIFOSTA3H     equ	377	;# 
  5236   00017A                     C1FIFOSTA3U     equ	378	;# 
  5237   00017B                     C1FIFOSTA3T     equ	379	;# 
  5238   00017C                     C1FIFOUA3       equ	380	;# 
  5239   00017C                     C1FIFOUA3L      equ	380	;# 
  5240   00017D                     C1FIFOUA3H      equ	381	;# 
  5241   00017E                     C1FIFOUA3U      equ	382	;# 
  5242   00017F                     C1FIFOUA3T      equ	383	;# 
  5243   000180                     C1FLTCON0L      equ	384	;# 
  5244   000181                     C1FLTCON0H      equ	385	;# 
  5245   000182                     C1FLTCON0U      equ	386	;# 
  5246   000183                     C1FLTCON0T      equ	387	;# 
  5247   000184                     C1FLTCON1L      equ	388	;# 
  5248   000185                     C1FLTCON1H      equ	389	;# 
  5249   000186                     C1FLTCON1U      equ	390	;# 
  5250   000187                     C1FLTCON1T      equ	391	;# 
  5251   000188                     C1FLTCON2L      equ	392	;# 
  5252   000189                     C1FLTCON2H      equ	393	;# 
  5253   00018A                     C1FLTCON2U      equ	394	;# 
  5254   00018B                     C1FLTCON2T      equ	395	;# 
  5255   00018C                     C1FLTOBJ0       equ	396	;# 
  5256   00018C                     C1FLTOBJ0L      equ	396	;# 
  5257   00018D                     C1FLTOBJ0H      equ	397	;# 
  5258   00018E                     C1FLTOBJ0U      equ	398	;# 
  5259   00018F                     C1FLTOBJ0T      equ	399	;# 
  5260   000190                     C1MASK0         equ	400	;# 
  5261   000190                     C1MASK0L        equ	400	;# 
  5262   000191                     C1MASK0H        equ	401	;# 
  5263   000192                     C1MASK0U        equ	402	;# 
  5264   000193                     C1MASK0T        equ	403	;# 
  5265   000194                     C1FLTOBJ1       equ	404	;# 
  5266   000194                     C1FLTOBJ1L      equ	404	;# 
  5267   000195                     C1FLTOBJ1H      equ	405	;# 
  5268   000196                     C1FLTOBJ1U      equ	406	;# 
  5269   000197                     C1FLTOBJ1T      equ	407	;# 
  5270   000198                     C1MASK1         equ	408	;# 
  5271   000198                     C1MASK1L        equ	408	;# 
  5272   000199                     C1MASK1H        equ	409	;# 
  5273   00019A                     C1MASK1U        equ	410	;# 
  5274   00019B                     C1MASK1T        equ	411	;# 
  5275   00019C                     C1FLTOBJ2       equ	412	;# 
  5276   00019C                     C1FLTOBJ2L      equ	412	;# 
  5277   00019D                     C1FLTOBJ2H      equ	413	;# 
  5278   00019E                     C1FLTOBJ2U      equ	414	;# 
  5279   00019F                     C1FLTOBJ2T      equ	415	;# 
  5280   0001A0                     C1MASK2         equ	416	;# 
  5281   0001A0                     C1MASK2L        equ	416	;# 
  5282   0001A1                     C1MASK2H        equ	417	;# 
  5283   0001A2                     C1MASK2U        equ	418	;# 
  5284   0001A3                     C1MASK2T        equ	419	;# 
  5285   0001A4                     C1FLTOBJ3       equ	420	;# 
  5286   0001A4                     C1FLTOBJ3L      equ	420	;# 
  5287   0001A5                     C1FLTOBJ3H      equ	421	;# 
  5288   0001A6                     C1FLTOBJ3U      equ	422	;# 
  5289   0001A7                     C1FLTOBJ3T      equ	423	;# 
  5290   0001A8                     C1MASK3         equ	424	;# 
  5291   0001A8                     C1MASK3L        equ	424	;# 
  5292   0001A9                     C1MASK3H        equ	425	;# 
  5293   0001AA                     C1MASK3U        equ	426	;# 
  5294   0001AB                     C1MASK3T        equ	427	;# 
  5295   0001AC                     C1FLTOBJ4       equ	428	;# 
  5296   0001AC                     C1FLTOBJ4L      equ	428	;# 
  5297   0001AD                     C1FLTOBJ4H      equ	429	;# 
  5298   0001AE                     C1FLTOBJ4U      equ	430	;# 
  5299   0001AF                     C1FLTOBJ4T      equ	431	;# 
  5300   0001B0                     C1MASK4         equ	432	;# 
  5301   0001B0                     C1MASK4L        equ	432	;# 
  5302   0001B1                     C1MASK4H        equ	433	;# 
  5303   0001B2                     C1MASK4U        equ	434	;# 
  5304   0001B3                     C1MASK4T        equ	435	;# 
  5305   0001B4                     C1FLTOBJ5       equ	436	;# 
  5306   0001B4                     C1FLTOBJ5L      equ	436	;# 
  5307   0001B5                     C1FLTOBJ5H      equ	437	;# 
  5308   0001B6                     C1FLTOBJ5U      equ	438	;# 
  5309   0001B7                     C1FLTOBJ5T      equ	439	;# 
  5310   0001B8                     C1MASK5         equ	440	;# 
  5311   0001B8                     C1MASK5L        equ	440	;# 
  5312   0001B9                     C1MASK5H        equ	441	;# 
  5313   0001BA                     C1MASK5U        equ	442	;# 
  5314   0001BB                     C1MASK5T        equ	443	;# 
  5315   0001BC                     C1FLTOBJ6       equ	444	;# 
  5316   0001BC                     C1FLTOBJ6L      equ	444	;# 
  5317   0001BD                     C1FLTOBJ6H      equ	445	;# 
  5318   0001BE                     C1FLTOBJ6U      equ	446	;# 
  5319   0001BF                     C1FLTOBJ6T      equ	447	;# 
  5320   0001C0                     C1MASK6         equ	448	;# 
  5321   0001C0                     C1MASK6L        equ	448	;# 
  5322   0001C1                     C1MASK6H        equ	449	;# 
  5323   0001C2                     C1MASK6U        equ	450	;# 
  5324   0001C3                     C1MASK6T        equ	451	;# 
  5325   0001C4                     C1FLTOBJ7       equ	452	;# 
  5326   0001C4                     C1FLTOBJ7L      equ	452	;# 
  5327   0001C5                     C1FLTOBJ7H      equ	453	;# 
  5328   0001C6                     C1FLTOBJ7U      equ	454	;# 
  5329   0001C7                     C1FLTOBJ7T      equ	455	;# 
  5330   0001C8                     C1MASK7         equ	456	;# 
  5331   0001C8                     C1MASK7L        equ	456	;# 
  5332   0001C9                     C1MASK7H        equ	457	;# 
  5333   0001CA                     C1MASK7U        equ	458	;# 
  5334   0001CB                     C1MASK7T        equ	459	;# 
  5335   0001CC                     C1FLTOBJ8       equ	460	;# 
  5336   0001CC                     C1FLTOBJ8L      equ	460	;# 
  5337   0001CD                     C1FLTOBJ8H      equ	461	;# 
  5338   0001CE                     C1FLTOBJ8U      equ	462	;# 
  5339   0001CF                     C1FLTOBJ8T      equ	463	;# 
  5340   0001D0                     C1MASK8         equ	464	;# 
  5341   0001D0                     C1MASK8L        equ	464	;# 
  5342   0001D1                     C1MASK8H        equ	465	;# 
  5343   0001D2                     C1MASK8U        equ	466	;# 
  5344   0001D3                     C1MASK8T        equ	467	;# 
  5345   0001D4                     C1FLTOBJ9       equ	468	;# 
  5346   0001D4                     C1FLTOBJ9L      equ	468	;# 
  5347   0001D5                     C1FLTOBJ9H      equ	469	;# 
  5348   0001D6                     C1FLTOBJ9U      equ	470	;# 
  5349   0001D7                     C1FLTOBJ9T      equ	471	;# 
  5350   0001D8                     C1MASK9         equ	472	;# 
  5351   0001D8                     C1MASK9L        equ	472	;# 
  5352   0001D9                     C1MASK9H        equ	473	;# 
  5353   0001DA                     C1MASK9U        equ	474	;# 
  5354   0001DB                     C1MASK9T        equ	475	;# 
  5355   0001DC                     C1FLTOBJ10      equ	476	;# 
  5356   0001DC                     C1FLTOBJ10L     equ	476	;# 
  5357   0001DD                     C1FLTOBJ10H     equ	477	;# 
  5358   0001DE                     C1FLTOBJ10U     equ	478	;# 
  5359   0001DF                     C1FLTOBJ10T     equ	479	;# 
  5360   0001E0                     C1MASK10        equ	480	;# 
  5361   0001E0                     C1MASK10L       equ	480	;# 
  5362   0001E1                     C1MASK10H       equ	481	;# 
  5363   0001E2                     C1MASK10U       equ	482	;# 
  5364   0001E3                     C1MASK10T       equ	483	;# 
  5365   0001E4                     C1FLTOBJ11      equ	484	;# 
  5366   0001E4                     C1FLTOBJ11L     equ	484	;# 
  5367   0001E5                     C1FLTOBJ11H     equ	485	;# 
  5368   0001E6                     C1FLTOBJ11U     equ	486	;# 
  5369   0001E7                     C1FLTOBJ11T     equ	487	;# 
  5370   0001E8                     C1MASK11        equ	488	;# 
  5371   0001E8                     C1MASK11L       equ	488	;# 
  5372   0001E9                     C1MASK11H       equ	489	;# 
  5373   0001EA                     C1MASK11U       equ	490	;# 
  5374   0001EB                     C1MASK11T       equ	491	;# 
  5375   000200                     PPSLOCK         equ	512	;# 
  5376   000201                     RA0PPS          equ	513	;# 
  5377   000202                     RA1PPS          equ	514	;# 
  5378   000203                     RA2PPS          equ	515	;# 
  5379   000204                     RA3PPS          equ	516	;# 
  5380   000205                     RA4PPS          equ	517	;# 
  5381   000206                     RA5PPS          equ	518	;# 
  5382   000207                     RA6PPS          equ	519	;# 
  5383   000208                     RA7PPS          equ	520	;# 
  5384   000209                     RB0PPS          equ	521	;# 
  5385   00020A                     RB1PPS          equ	522	;# 
  5386   00020B                     RB2PPS          equ	523	;# 
  5387   00020C                     RB3PPS          equ	524	;# 
  5388   00020D                     RB4PPS          equ	525	;# 
  5389   00020E                     RB5PPS          equ	526	;# 
  5390   00020F                     RB6PPS          equ	527	;# 
  5391   000210                     RB7PPS          equ	528	;# 
  5392   000211                     RC0PPS          equ	529	;# 
  5393   000212                     RC1PPS          equ	530	;# 
  5394   000213                     RC2PPS          equ	531	;# 
  5395   000214                     RC3PPS          equ	532	;# 
  5396   000215                     RC4PPS          equ	533	;# 
  5397   000216                     RC5PPS          equ	534	;# 
  5398   000217                     RC6PPS          equ	535	;# 
  5399   000218                     RC7PPS          equ	536	;# 
  5400   00023D                     CANRXPPS        equ	573	;# 
  5401   00023E                     INT0PPS         equ	574	;# 
  5402   00023F                     INT1PPS         equ	575	;# 
  5403   000240                     INT2PPS         equ	576	;# 
  5404   000241                     T0CKIPPS        equ	577	;# 
  5405   000242                     T1CKIPPS        equ	578	;# 
  5406   000243                     T1GPPS          equ	579	;# 
  5407   000244                     T3CKIPPS        equ	580	;# 
  5408   000245                     T3GPPS          equ	581	;# 
  5409   000246                     T5CKIPPS        equ	582	;# 
  5410   000247                     T5GPPS          equ	583	;# 
  5411   000248                     T2INPPS         equ	584	;# 
  5412   000249                     T4INPPS         equ	585	;# 
  5413   00024A                     T6INPPS         equ	586	;# 
  5414   00024B                     TUIN0PPS        equ	587	;# 
  5415   00024C                     TUIN1PPS        equ	588	;# 
  5416   00024F                     CCP1PPS         equ	591	;# 
  5417   000250                     CCP2PPS         equ	592	;# 
  5418   000251                     CCP3PPS         equ	593	;# 
  5419   000253                     PWM1ERSPPS      equ	595	;# 
  5420   000254                     PWM2ERSPPS      equ	596	;# 
  5421   000255                     PWM3ERSPPS      equ	597	;# 
  5422   000256                     PWM4ERSPPS      equ	598	;# 
  5423   000257                     PWMIN0PPS       equ	599	;# 
  5424   000258                     PWMIN1PPS       equ	600	;# 
  5425   000259                     SMT1WINPPS      equ	601	;# 
  5426   00025A                     SMT1SIGPPS      equ	602	;# 
  5427   00025B                     CWG1PPS         equ	603	;# 
  5428   00025B                     CWG1INPPS       equ	603	;# 
  5429   00025C                     CWG2PPS         equ	604	;# 
  5430   00025C                     CWG2INPPS       equ	604	;# 
  5431   00025D                     CWG3PPS         equ	605	;# 
  5432   00025D                     CWG3INPPS       equ	605	;# 
  5433   00025E                     MD1CARLPPS      equ	606	;# 
  5434   00025E                     MDCARLPPS       equ	606	;# 
  5435   00025F                     MD1CARHPPS      equ	607	;# 
  5436   00025F                     MDCARHPPS       equ	607	;# 
  5437   000260                     MD1SRCPPS       equ	608	;# 
  5438   000260                     MDSRCPPS        equ	608	;# 
  5439   000261                     CLCIN0PPS       equ	609	;# 
  5440   000262                     CLCIN1PPS       equ	610	;# 
  5441   000263                     CLCIN2PPS       equ	611	;# 
  5442   000264                     CLCIN3PPS       equ	612	;# 
  5443   000265                     CLCIN4PPS       equ	613	;# 
  5444   000266                     CLCIN5PPS       equ	614	;# 
  5445   000267                     CLCIN6PPS       equ	615	;# 
  5446   000268                     CLCIN7PPS       equ	616	;# 
  5447   000269                     ADACTPPS        equ	617	;# 
  5448   00026A                     SPI1SCKPPS      equ	618	;# 
  5449   00026B                     SPI1SDIPPS      equ	619	;# 
  5450   00026C                     SPI1SSPPS       equ	620	;# 
  5451   00026D                     SPI2SCKPPS      equ	621	;# 
  5452   00026E                     SPI2SDIPPS      equ	622	;# 
  5453   00026F                     SPI2SSPPS       equ	623	;# 
  5454   000270                     I2C1SDAPPS      equ	624	;# 
  5455   000271                     I2C1SCLPPS      equ	625	;# 
  5456   000272                     U1RXPPS         equ	626	;# 
  5457   000273                     U1CTSPPS        equ	627	;# 
  5458   000274                     U2RXPPS         equ	628	;# 
  5459   000275                     U2CTSPPS        equ	629	;# 
  5460   000276                     U3RXPPS         equ	630	;# 
  5461   000277                     U3CTSPPS        equ	631	;# 
  5462   000278                     U4RXPPS         equ	632	;# 
  5463   000279                     U4CTSPPS        equ	633	;# 
  5464   00027A                     U5RXPPS         equ	634	;# 
  5465   00027B                     U5CTSPPS        equ	635	;# 
  5466   000286                     RC4I2C          equ	646	;# 
  5467   000287                     RC3I2C          equ	647	;# 
  5468   000288                     RB2I2C          equ	648	;# 
  5469   000289                     RB1I2C          equ	649	;# 
  5470   00028A                     I2C1RXB         equ	650	;# 
  5471   00028B                     I2C1TXB         equ	651	;# 
  5472   00028C                     I2C1CNTL        equ	652	;# 
  5473   00028D                     I2C1CNTH        equ	653	;# 
  5474   00028E                     I2C1ADB0        equ	654	;# 
  5475   00028F                     I2C1ADB1        equ	655	;# 
  5476   000290                     I2C1ADR0        equ	656	;# 
  5477   000291                     I2C1ADR1        equ	657	;# 
  5478   000292                     I2C1ADR2        equ	658	;# 
  5479   000293                     I2C1ADR3        equ	659	;# 
  5480   000294                     I2C1CON0        equ	660	;# 
  5481   000295                     I2C1CON1        equ	661	;# 
  5482   000296                     I2C1CON2        equ	662	;# 
  5483   000297                     I2C1ERR         equ	663	;# 
  5484   000298                     I2C1STAT0       equ	664	;# 
  5485   000299                     I2C1STAT1       equ	665	;# 
  5486   00029A                     I2C1PIR         equ	666	;# 
  5487   00029B                     I2C1PIE         equ	667	;# 
  5488   00029C                     I2C1BTO         equ	668	;# 
  5489   00029D                     I2C1BAUD        equ	669	;# 
  5490   00029E                     I2C1CLK         equ	670	;# 
  5491   00029F                     I2C1BTOC        equ	671	;# 
  5492   0002A1                     U1RXB           equ	673	;# 
  5493   0002A1                     U1RXBL          equ	673	;# 
  5494   0002A2                     U1RXCHK         equ	674	;# 
  5495   0002A3                     U1TXB           equ	675	;# 
  5496   0002A3                     U1TXBL          equ	675	;# 
  5497   0002A4                     U1TXCHK         equ	676	;# 
  5498   0002A5                     U1P1            equ	677	;# 
  5499   0002A5                     U1P1L           equ	677	;# 
  5500   0002A6                     U1P1H           equ	678	;# 
  5501   0002A7                     U1P2            equ	679	;# 
  5502   0002A7                     U1P2L           equ	679	;# 
  5503   0002A8                     U1P2H           equ	680	;# 
  5504   0002A9                     U1P3            equ	681	;# 
  5505   0002A9                     U1P3L           equ	681	;# 
  5506   0002AA                     U1P3H           equ	682	;# 
  5507   0002AB                     U1CON0          equ	683	;# 
  5508   0002AC                     U1CON1          equ	684	;# 
  5509   0002AD                     U1CON2          equ	685	;# 
  5510   0002AE                     U1BRG           equ	686	;# 
  5511   0002AE                     U1BRGL          equ	686	;# 
  5512   0002AF                     U1BRGH          equ	687	;# 
  5513   0002B0                     U1FIFO          equ	688	;# 
  5514   0002B1                     U1UIR           equ	689	;# 
  5515   0002B2                     U1ERRIR         equ	690	;# 
  5516   0002B3                     U1ERRIE         equ	691	;# 
  5517   0002B4                     U2RXB           equ	692	;# 
  5518   0002B4                     U2RXBL          equ	692	;# 
  5519   0002B5                     U2RXCHK         equ	693	;# 
  5520   0002B6                     U2TXB           equ	694	;# 
  5521   0002B6                     U2TXBL          equ	694	;# 
  5522   0002B7                     U2TXCHK         equ	695	;# 
  5523   0002B8                     U2P1            equ	696	;# 
  5524   0002B8                     U2P1L           equ	696	;# 
  5525   0002B9                     U2P1H           equ	697	;# 
  5526   0002BA                     U2P2            equ	698	;# 
  5527   0002BA                     U2P2L           equ	698	;# 
  5528   0002BB                     U2P2H           equ	699	;# 
  5529   0002BC                     U2P3            equ	700	;# 
  5530   0002BC                     U2P3L           equ	700	;# 
  5531   0002BD                     U2P3H           equ	701	;# 
  5532   0002BE                     U2CON0          equ	702	;# 
  5533   0002BF                     U2CON1          equ	703	;# 
  5534   0002C0                     U2CON2          equ	704	;# 
  5535   0002C1                     U2BRG           equ	705	;# 
  5536   0002C1                     U2BRGL          equ	705	;# 
  5537   0002C2                     U2BRGH          equ	706	;# 
  5538   0002C3                     U2FIFO          equ	707	;# 
  5539   0002C4                     U2UIR           equ	708	;# 
  5540   0002C5                     U2ERRIR         equ	709	;# 
  5541   0002C6                     U2ERRIE         equ	710	;# 
  5542   0002C7                     U3RXB           equ	711	;# 
  5543   0002C7                     U3RXBL          equ	711	;# 
  5544   0002C9                     U3TXB           equ	713	;# 
  5545   0002C9                     U3TXBL          equ	713	;# 
  5546   0002CB                     U3P1            equ	715	;# 
  5547   0002CB                     U3P1L           equ	715	;# 
  5548   0002CD                     U3P2            equ	717	;# 
  5549   0002CD                     U3P2L           equ	717	;# 
  5550   0002CF                     U3P3            equ	719	;# 
  5551   0002CF                     U3P3L           equ	719	;# 
  5552   0002D1                     U3CON0          equ	721	;# 
  5553   0002D2                     U3CON1          equ	722	;# 
  5554   0002D3                     U3CON2          equ	723	;# 
  5555   0002D4                     U3BRG           equ	724	;# 
  5556   0002D4                     U3BRGL          equ	724	;# 
  5557   0002D5                     U3BRGH          equ	725	;# 
  5558   0002D6                     U3FIFO          equ	726	;# 
  5559   0002D7                     U3UIR           equ	727	;# 
  5560   0002D8                     U3ERRIR         equ	728	;# 
  5561   0002D9                     U3ERRIE         equ	729	;# 
  5562   0002DA                     U4RXB           equ	730	;# 
  5563   0002DA                     U4RXBL          equ	730	;# 
  5564   0002DC                     U4TXB           equ	732	;# 
  5565   0002DC                     U4TXBL          equ	732	;# 
  5566   0002DE                     U4P1            equ	734	;# 
  5567   0002DE                     U4P1L           equ	734	;# 
  5568   0002E0                     U4P2            equ	736	;# 
  5569   0002E0                     U4P2L           equ	736	;# 
  5570   0002E2                     U4P3            equ	738	;# 
  5571   0002E2                     U4P3L           equ	738	;# 
  5572   0002E4                     U4CON0          equ	740	;# 
  5573   0002E5                     U4CON1          equ	741	;# 
  5574   0002E6                     U4CON2          equ	742	;# 
  5575   0002E7                     U4BRG           equ	743	;# 
  5576   0002E7                     U4BRGL          equ	743	;# 
  5577   0002E8                     U4BRGH          equ	744	;# 
  5578   0002E9                     U4FIFO          equ	745	;# 
  5579   0002EA                     U4UIR           equ	746	;# 
  5580   0002EB                     U4ERRIR         equ	747	;# 
  5581   0002EC                     U4ERRIE         equ	748	;# 
  5582   0002ED                     U5RXB           equ	749	;# 
  5583   0002ED                     U5RXBL          equ	749	;# 
  5584   0002EF                     U5TXB           equ	751	;# 
  5585   0002EF                     U5TXBL          equ	751	;# 
  5586   0002F1                     U5P1            equ	753	;# 
  5587   0002F1                     U5P1L           equ	753	;# 
  5588   0002F3                     U5P2            equ	755	;# 
  5589   0002F3                     U5P2L           equ	755	;# 
  5590   0002F5                     U5P3            equ	757	;# 
  5591   0002F5                     U5P3L           equ	757	;# 
  5592   0002F7                     U5CON0          equ	759	;# 
  5593   0002F8                     U5CON1          equ	760	;# 
  5594   0002F9                     U5CON2          equ	761	;# 
  5595   0002FA                     U5BRG           equ	762	;# 
  5596   0002FA                     U5BRGL          equ	762	;# 
  5597   0002FB                     U5BRGH          equ	763	;# 
  5598   0002FC                     U5FIFO          equ	764	;# 
  5599   0002FD                     U5UIR           equ	765	;# 
  5600   0002FE                     U5ERRIR         equ	766	;# 
  5601   0002FF                     U5ERRIE         equ	767	;# 
  5602   000300                     SMT1TMR         equ	768	;# 
  5603   000300                     SMT1TMRL        equ	768	;# 
  5604   000301                     SMT1TMRH        equ	769	;# 
  5605   000302                     SMT1TMRU        equ	770	;# 
  5606   000303                     SMT1CPR         equ	771	;# 
  5607   000303                     SMT1CPRL        equ	771	;# 
  5608   000304                     SMT1CPRH        equ	772	;# 
  5609   000305                     SMT1CPRU        equ	773	;# 
  5610   000306                     SMT1CPW         equ	774	;# 
  5611   000306                     SMT1CPWL        equ	774	;# 
  5612   000307                     SMT1CPWH        equ	775	;# 
  5613   000308                     SMT1CPWU        equ	776	;# 
  5614   000309                     SMT1PR          equ	777	;# 
  5615   000309                     SMT1PRL         equ	777	;# 
  5616   00030A                     SMT1PRH         equ	778	;# 
  5617   00030B                     SMT1PRU         equ	779	;# 
  5618   00030C                     SMT1CON0        equ	780	;# 
  5619   00030D                     SMT1CON1        equ	781	;# 
  5620   00030E                     SMT1STAT        equ	782	;# 
  5621   00030F                     SMT1CLK         equ	783	;# 
  5622   000310                     SMT1SIG         equ	784	;# 
  5623   000311                     SMT1WIN         equ	785	;# 
  5624   000318                     TMR0L           equ	792	;# 
  5625   000318                     TMR0            equ	792	;# 
  5626   000319                     TMR0H           equ	793	;# 
  5627   000319                     PR0             equ	793	;# 
  5628   00031A                     T0CON0          equ	794	;# 
  5629   00031B                     T0CON1          equ	795	;# 
  5630   00031C                     TMR1            equ	796	;# 
  5631   00031C                     TMR1L           equ	796	;# 
  5632   00031D                     TMR1H           equ	797	;# 
  5633   00031E                     T1CON           equ	798	;# 
  5634   00031E                     TMR1CON         equ	798	;# 
  5635   00031F                     T1GCON          equ	799	;# 
  5636   00031F                     TMR1GCON        equ	799	;# 
  5637   000320                     T1GATE          equ	800	;# 
  5638   000320                     TMR1GATE        equ	800	;# 
  5639   000321                     T1CLK           equ	801	;# 
  5640   000321                     TMR1CLK         equ	801	;# 
  5641   000321                     PR1             equ	801	;# 
  5642   000322                     T2TMR           equ	802	;# 
  5643   000322                     TMR2            equ	802	;# 
  5644   000323                     T2PR            equ	803	;# 
  5645   000323                     PR2             equ	803	;# 
  5646   000324                     T2CON           equ	804	;# 
  5647   000325                     T2HLT           equ	805	;# 
  5648   000326                     T2CLKCON        equ	806	;# 
  5649   000326                     T2CLK           equ	806	;# 
  5650   000327                     T2RST           equ	807	;# 
  5651   000328                     TMR3            equ	808	;# 
  5652   000328                     TMR3L           equ	808	;# 
  5653   000329                     TMR3H           equ	809	;# 
  5654   00032A                     T3CON           equ	810	;# 
  5655   00032A                     TMR3CON         equ	810	;# 
  5656   00032B                     T3GCON          equ	811	;# 
  5657   00032B                     TMR3GCON        equ	811	;# 
  5658   00032C                     T3GATE          equ	812	;# 
  5659   00032C                     TMR3GATE        equ	812	;# 
  5660   00032D                     T3CLK           equ	813	;# 
  5661   00032D                     TMR3CLK         equ	813	;# 
  5662   00032D                     PR3             equ	813	;# 
  5663   00032E                     T4TMR           equ	814	;# 
  5664   00032E                     TMR4            equ	814	;# 
  5665   00032F                     T4PR            equ	815	;# 
  5666   00032F                     PR4             equ	815	;# 
  5667   000330                     T4CON           equ	816	;# 
  5668   000331                     T4HLT           equ	817	;# 
  5669   000332                     T4CLKCON        equ	818	;# 
  5670   000332                     T4CLK           equ	818	;# 
  5671   000333                     T4RST           equ	819	;# 
  5672   000334                     TMR5            equ	820	;# 
  5673   000334                     TMR5L           equ	820	;# 
  5674   000335                     TMR5H           equ	821	;# 
  5675   000336                     T5CON           equ	822	;# 
  5676   000336                     TMR5CON         equ	822	;# 
  5677   000337                     T5GCON          equ	823	;# 
  5678   000337                     TMR5GCON        equ	823	;# 
  5679   000338                     T5GATE          equ	824	;# 
  5680   000338                     TMR5GATE        equ	824	;# 
  5681   000339                     T5CLK           equ	825	;# 
  5682   000339                     TMR5CLK         equ	825	;# 
  5683   000339                     PR5             equ	825	;# 
  5684   00033A                     T6TMR           equ	826	;# 
  5685   00033A                     TMR6            equ	826	;# 
  5686   00033B                     T6PR            equ	827	;# 
  5687   00033B                     PR6             equ	827	;# 
  5688   00033C                     T6CON           equ	828	;# 
  5689   00033D                     T6HLT           equ	829	;# 
  5690   00033E                     T6CLKCON        equ	830	;# 
  5691   00033E                     T6CLK           equ	830	;# 
  5692   00033F                     T6RST           equ	831	;# 
  5693   000340                     CCPR1           equ	832	;# 
  5694   000340                     CCPR1L          equ	832	;# 
  5695   000341                     CCPR1H          equ	833	;# 
  5696   000342                     CCP1CON         equ	834	;# 
  5697   000343                     CCP1CAP         equ	835	;# 
  5698   000344                     CCPR2           equ	836	;# 
  5699   000344                     CCPR2L          equ	836	;# 
  5700   000345                     CCPR2H          equ	837	;# 
  5701   000346                     CCP2CON         equ	838	;# 
  5702   000347                     CCP2CAP         equ	839	;# 
  5703   000348                     CCPR3           equ	840	;# 
  5704   000348                     CCPR3L          equ	840	;# 
  5705   000349                     CCPR3H          equ	841	;# 
  5706   00034A                     CCP3CON         equ	842	;# 
  5707   00034B                     CCP3CAP         equ	843	;# 
  5708   00034C                     CCPTMRS0        equ	844	;# 
  5709   00034F                     CRCDATA         equ	847	;# 
  5710   00034F                     CRCDATAL        equ	847	;# 
  5711   000350                     CRCDATAH        equ	848	;# 
  5712   000351                     CRCDATAU        equ	849	;# 
  5713   000352                     CRCDATAT        equ	850	;# 
  5714   000353                     CRCOUT          equ	851	;# 
  5715   000353                     CRCSHFT         equ	851	;# 
  5716   000353                     CRCXOR          equ	851	;# 
  5717   000353                     CRCOUTL         equ	851	;# 
  5718   000353                     CRCSHFTL        equ	851	;# 
  5719   000353                     CRCSHIFTL       equ	851	;# 
  5720   000353                     CRCXORL         equ	851	;# 
  5721   000354                     CRCOUTH         equ	852	;# 
  5722   000354                     CRCSHFTH        equ	852	;# 
  5723   000354                     CRCSHIFTH       equ	852	;# 
  5724   000354                     CRCXORH         equ	852	;# 
  5725   000355                     CRCOUTU         equ	853	;# 
  5726   000355                     CRCSHFTU        equ	853	;# 
  5727   000355                     CRCSHIFTU       equ	853	;# 
  5728   000355                     CRCXORU         equ	853	;# 
  5729   000356                     CRCOUTT         equ	854	;# 
  5730   000356                     CRCSHFTT        equ	854	;# 
  5731   000356                     CRCSHIFTT       equ	854	;# 
  5732   000356                     CRCXORT         equ	854	;# 
  5733   000357                     CRCCON0         equ	855	;# 
  5734   000358                     CRCCON1         equ	856	;# 
  5735   000359                     CRCCON2         equ	857	;# 
  5736   00035A                     SCANLADR        equ	858	;# 
  5737   00035A                     SCANLADRL       equ	858	;# 
  5738   00035B                     SCANLADRH       equ	859	;# 
  5739   00035C                     SCANLADRU       equ	860	;# 
  5740   00035D                     SCANHADR        equ	861	;# 
  5741   00035D                     SCANHADRL       equ	861	;# 
  5742   00035E                     SCANHADRH       equ	862	;# 
  5743   00035F                     SCANHADRU       equ	863	;# 
  5744   000360                     SCANCON0        equ	864	;# 
  5745   000361                     SCANTRIG        equ	865	;# 
  5746   000362                     IPR0            equ	866	;# 
  5747   000363                     IPR1            equ	867	;# 
  5748   000364                     IPR2            equ	868	;# 
  5749   000365                     IPR3            equ	869	;# 
  5750   000366                     IPR4            equ	870	;# 
  5751   000367                     IPR5            equ	871	;# 
  5752   000368                     IPR6            equ	872	;# 
  5753   000369                     IPR7            equ	873	;# 
  5754   00036A                     IPR8            equ	874	;# 
  5755   00036B                     IPR9            equ	875	;# 
  5756   00036C                     IPR10           equ	876	;# 
  5757   00036D                     IPR11           equ	877	;# 
  5758   00036E                     IPR12           equ	878	;# 
  5759   00036F                     IPR13           equ	879	;# 
  5760   000370                     IPR14           equ	880	;# 
  5761   000371                     IPR15           equ	881	;# 
  5762   000373                     STATUS_CSHAD    equ	883	;# 
  5763   000374                     WREG_CSHAD      equ	884	;# 
  5764   000375                     BSR_CSHAD       equ	885	;# 
  5765   000376                     SHADCON         equ	886	;# 
  5766   000377                     STATUS_SHAD     equ	887	;# 
  5767   000378                     WREG_SHAD       equ	888	;# 
  5768   000379                     BSR_SHAD        equ	889	;# 
  5769   00037A                     PCLATH_SHAD     equ	890	;# 
  5770   00037B                     PCLATU_SHAD     equ	891	;# 
  5771   00037C                     FSR0SH          equ	892	;# 
  5772   00037C                     FSR0L_SHAD      equ	892	;# 
  5773   00037D                     FSR0H_SHAD      equ	893	;# 
  5774   00037E                     FSR1SH          equ	894	;# 
  5775   00037E                     FSR1L_SHAD      equ	894	;# 
  5776   00037F                     FSR1H_SHAD      equ	895	;# 
  5777   000380                     FSR2SH          equ	896	;# 
  5778   000380                     FSR2L_SHAD      equ	896	;# 
  5779   000381                     FSR2H_SHAD      equ	897	;# 
  5780   000382                     PRODSH          equ	898	;# 
  5781   000382                     PRODL_SHAD      equ	898	;# 
  5782   000383                     PRODH_SHAD      equ	899	;# 
  5783   000387                     TU16ACON0       equ	903	;# 
  5784   000388                     TU16ACON1       equ	904	;# 
  5785   000389                     TU16AHLT        equ	905	;# 
  5786   00038A                     TU16APS         equ	906	;# 
  5787   00038B                     TU16ATMR        equ	907	;# 
  5788   00038B                     TU16ACR         equ	907	;# 
  5789   00038B                     TU16ATMRL       equ	907	;# 
  5790   00038B                     TU16ACRL        equ	907	;# 
  5791   00038C                     TU16ATMRH       equ	908	;# 
  5792   00038C                     TU16ACRH        equ	908	;# 
  5793   00038D                     TU16APR         equ	909	;# 
  5794   00038D                     TU16APRL        equ	909	;# 
  5795   00038E                     TU16APRH        equ	910	;# 
  5796   00038F                     TU16ACLK        equ	911	;# 
  5797   000390                     TU16AERS        equ	912	;# 
  5798   000393                     TU16BCON0       equ	915	;# 
  5799   000394                     TU16BCON1       equ	916	;# 
  5800   000395                     TU16BHLT        equ	917	;# 
  5801   000396                     TU16BPS         equ	918	;# 
  5802   000397                     TU16BTMR        equ	919	;# 
  5803   000397                     TU16BCR         equ	919	;# 
  5804   000397                     TU16BTMRL       equ	919	;# 
  5805   000397                     TU16BCRL        equ	919	;# 
  5806   000398                     TU16BTMRH       equ	920	;# 
  5807   000398                     TU16BCRH        equ	920	;# 
  5808   000399                     TU16BPR         equ	921	;# 
  5809   000399                     TU16BPRL        equ	921	;# 
  5810   00039A                     TU16BPRH        equ	922	;# 
  5811   00039B                     TU16BCLK        equ	923	;# 
  5812   00039C                     TU16BERS        equ	924	;# 
  5813   0003BB                     TUCHAIN         equ	955	;# 
  5814   0003BC                     CWG1CLK         equ	956	;# 
  5815   0003BC                     CWG1CLKCON      equ	956	;# 
  5816   0003BD                     CWG1ISM         equ	957	;# 
  5817   0003BE                     CWG1DBR         equ	958	;# 
  5818   0003BF                     CWG1DBF         equ	959	;# 
  5819   0003C0                     CWG1CON0        equ	960	;# 
  5820   0003C1                     CWG1CON1        equ	961	;# 
  5821   0003C2                     CWG1AS0         equ	962	;# 
  5822   0003C3                     CWG1AS1         equ	963	;# 
  5823   0003C4                     CWG1STR         equ	964	;# 
  5824   0003C5                     CWG2CLK         equ	965	;# 
  5825   0003C5                     CWG2CLKCON      equ	965	;# 
  5826   0003C6                     CWG2ISM         equ	966	;# 
  5827   0003C7                     CWG2DBR         equ	967	;# 
  5828   0003C8                     CWG2DBF         equ	968	;# 
  5829   0003C9                     CWG2CON0        equ	969	;# 
  5830   0003CA                     CWG2CON1        equ	970	;# 
  5831   0003CB                     CWG2AS0         equ	971	;# 
  5832   0003CC                     CWG2AS1         equ	972	;# 
  5833   0003CD                     CWG2STR         equ	973	;# 
  5834   0003CE                     CWG3CLK         equ	974	;# 
  5835   0003CE                     CWG3CLKCON      equ	974	;# 
  5836   0003CF                     CWG3ISM         equ	975	;# 
  5837   0003D0                     CWG3DBR         equ	976	;# 
  5838   0003D1                     CWG3DBF         equ	977	;# 
  5839   0003D2                     CWG3CON0        equ	978	;# 
  5840   0003D3                     CWG3CON1        equ	979	;# 
  5841   0003D4                     CWG3AS0         equ	980	;# 
  5842   0003D5                     CWG3AS1         equ	981	;# 
  5843   0003D6                     CWG3STR         equ	982	;# 
  5844   0003D7                     FVRCON          equ	983	;# 
  5845   0003D8                     ADCPCON         equ	984	;# 
  5846   0003D8                     ADCP            equ	984	;# 
  5847   0003D9                     ADLTH           equ	985	;# 
  5848   0003D9                     ADLTHL          equ	985	;# 
  5849   0003DA                     ADLTHH          equ	986	;# 
  5850   0003DB                     ADUTH           equ	987	;# 
  5851   0003DB                     ADUTHL          equ	987	;# 
  5852   0003DC                     ADUTHH          equ	988	;# 
  5853   0003DD                     ADERR           equ	989	;# 
  5854   0003DD                     ADERRL          equ	989	;# 
  5855   0003DE                     ADERRH          equ	990	;# 
  5856   0003DF                     ADSTPT          equ	991	;# 
  5857   0003DF                     ADSTPTL         equ	991	;# 
  5858   0003E0                     ADSTPTH         equ	992	;# 
  5859   0003E1                     ADFLTR          equ	993	;# 
  5860   0003E1                     ADFLTRL         equ	993	;# 
  5861   0003E2                     ADFLTRH         equ	994	;# 
  5862   0003E3                     ADACC           equ	995	;# 
  5863   0003E3                     ADACCL          equ	995	;# 
  5864   0003E4                     ADACCH          equ	996	;# 
  5865   0003E5                     ADACCU          equ	997	;# 
  5866   0003E6                     ADCNT           equ	998	;# 
  5867   0003E7                     ADRPT           equ	999	;# 
  5868   0003E8                     ADPREV          equ	1000	;# 
  5869   0003E8                     ADPREVL         equ	1000	;# 
  5870   0003E9                     ADPREVH         equ	1001	;# 
  5871   0003EA                     ADRES           equ	1002	;# 
  5872   0003EA                     ADRESL          equ	1002	;# 
  5873   0003EB                     ADRESH          equ	1003	;# 
  5874   0003EC                     ADPCH           equ	1004	;# 
  5875   0003EE                     ADACQ           equ	1006	;# 
  5876   0003EE                     ADACQL          equ	1006	;# 
  5877   0003EF                     ADACQH          equ	1007	;# 
  5878   0003F0                     ADCAP           equ	1008	;# 
  5879   0003F1                     ADPRE           equ	1009	;# 
  5880   0003F1                     ADPREL          equ	1009	;# 
  5881   0003F2                     ADPREH          equ	1010	;# 
  5882   0003F3                     ADCON0          equ	1011	;# 
  5883   0003F4                     ADCON1          equ	1012	;# 
  5884   0003F5                     ADCON2          equ	1013	;# 
  5885   0003F6                     ADCON3          equ	1014	;# 
  5886   0003F7                     ADSTAT          equ	1015	;# 
  5887   0003F8                     ADREF           equ	1016	;# 
  5888   0003F9                     ADACT           equ	1017	;# 
  5889   0003FA                     ADCLK           equ	1018	;# 
  5890   0003FB                     ADCTX           equ	1019	;# 
  5891   0003FC                     ADCSEL1         equ	1020	;# 
  5892   0003FD                     ADCSEL2         equ	1021	;# 
  5893   0003FE                     ADCSEL3         equ	1022	;# 
  5894   0003FF                     ADCSEL4         equ	1023	;# 
  5895   000400                     ANSELA          equ	1024	;# 
  5896   000401                     WPUA            equ	1025	;# 
  5897   000402                     ODCONA          equ	1026	;# 
  5898   000403                     SLRCONA         equ	1027	;# 
  5899   000404                     INLVLA          equ	1028	;# 
  5900   000405                     IOCAP           equ	1029	;# 
  5901   000406                     IOCAN           equ	1030	;# 
  5902   000407                     IOCAF           equ	1031	;# 
  5903   000408                     ANSELB          equ	1032	;# 
  5904   000409                     WPUB            equ	1033	;# 
  5905   00040A                     ODCONB          equ	1034	;# 
  5906   00040B                     SLRCONB         equ	1035	;# 
  5907   00040C                     INLVLB          equ	1036	;# 
  5908   00040D                     IOCBP           equ	1037	;# 
  5909   00040E                     IOCBN           equ	1038	;# 
  5910   00040F                     IOCBF           equ	1039	;# 
  5911   000410                     ANSELC          equ	1040	;# 
  5912   000411                     WPUC            equ	1041	;# 
  5913   000412                     ODCONC          equ	1042	;# 
  5914   000413                     SLRCONC         equ	1043	;# 
  5915   000414                     INLVLC          equ	1044	;# 
  5916   000415                     IOCCP           equ	1045	;# 
  5917   000416                     IOCCN           equ	1046	;# 
  5918   000417                     IOCCF           equ	1047	;# 
  5919   000421                     WPUE            equ	1057	;# 
  5920   000424                     INLVLE          equ	1060	;# 
  5921   000425                     IOCEP           equ	1061	;# 
  5922   000426                     IOCEN           equ	1062	;# 
  5923   000427                     IOCEF           equ	1063	;# 
  5924   000440                     NCO1ACC         equ	1088	;# 
  5925   000440                     NCO1ACCL        equ	1088	;# 
  5926   000441                     NCO1ACCH        equ	1089	;# 
  5927   000442                     NCO1ACCU        equ	1090	;# 
  5928   000443                     NCO1INC         equ	1091	;# 
  5929   000443                     NCO1INCL        equ	1091	;# 
  5930   000444                     NCO1INCH        equ	1092	;# 
  5931   000445                     NCO1INCU        equ	1093	;# 
  5932   000446                     NCO1CON         equ	1094	;# 
  5933   000447                     NCO1CLK         equ	1095	;# 
  5934   000448                     NCO2ACC         equ	1096	;# 
  5935   000448                     NCO2ACCL        equ	1096	;# 
  5936   000449                     NCO2ACCH        equ	1097	;# 
  5937   00044A                     NCO2ACCU        equ	1098	;# 
  5938   00044B                     NCO2INC         equ	1099	;# 
  5939   00044B                     NCO2INCL        equ	1099	;# 
  5940   00044C                     NCO2INCH        equ	1100	;# 
  5941   00044D                     NCO2INCU        equ	1101	;# 
  5942   00044E                     NCO2CON         equ	1102	;# 
  5943   00044F                     NCO2CLK         equ	1103	;# 
  5944   000450                     NCO3ACC         equ	1104	;# 
  5945   000450                     NCO3ACCL        equ	1104	;# 
  5946   000451                     NCO3ACCH        equ	1105	;# 
  5947   000452                     NCO3ACCU        equ	1106	;# 
  5948   000453                     NCO3INC         equ	1107	;# 
  5949   000453                     NCO3INCL        equ	1107	;# 
  5950   000454                     NCO3INCH        equ	1108	;# 
  5951   000455                     NCO3INCU        equ	1109	;# 
  5952   000456                     NCO3CON         equ	1110	;# 
  5953   000457                     NCO3CLK         equ	1111	;# 
  5954   000458                     FSCMCON         equ	1112	;# 
  5955   000459                     IVTLOCK         equ	1113	;# 
  5956   00045A                     IVTAD           equ	1114	;# 
  5957   00045A                     IVTADL          equ	1114	;# 
  5958   00045B                     IVTADH          equ	1115	;# 
  5959   00045C                     IVTADU          equ	1116	;# 
  5960   00045D                     IVTBASE         equ	1117	;# 
  5961   00045D                     IVTBASEL        equ	1117	;# 
  5962   00045E                     IVTBASEH        equ	1118	;# 
  5963   00045F                     IVTBASEU        equ	1119	;# 
  5964   000460                     PWM1ERS         equ	1120	;# 
  5965   000461                     PWM1CLK         equ	1121	;# 
  5966   000462                     PWM1LDS         equ	1122	;# 
  5967   000463                     PWM1PR          equ	1123	;# 
  5968   000463                     PWM1PRL         equ	1123	;# 
  5969   000464                     PWM1PRH         equ	1124	;# 
  5970   000465                     PWM1CPRE        equ	1125	;# 
  5971   000466                     PWM1PIPOS       equ	1126	;# 
  5972   000467                     PWM1GIR         equ	1127	;# 
  5973   000468                     PWM1GIE         equ	1128	;# 
  5974   000469                     PWM1CON         equ	1129	;# 
  5975   00046A                     PWM1S1CFG       equ	1130	;# 
  5976   00046B                     PWM1S1P1        equ	1131	;# 
  5977   00046B                     PWM1S1P1L       equ	1131	;# 
  5978   00046C                     PWM1S1P1H       equ	1132	;# 
  5979   00046D                     PWM1S1P2        equ	1133	;# 
  5980   00046D                     PWM1S1P2L       equ	1133	;# 
  5981   00046E                     PWM1S1P2H       equ	1134	;# 
  5982   00046F                     PWM2ERS         equ	1135	;# 
  5983   000470                     PWM2CLK         equ	1136	;# 
  5984   000471                     PWM2LDS         equ	1137	;# 
  5985   000472                     PWM2PR          equ	1138	;# 
  5986   000472                     PWM2PRL         equ	1138	;# 
  5987   000473                     PWM2PRH         equ	1139	;# 
  5988   000474                     PWM2CPRE        equ	1140	;# 
  5989   000475                     PWM2PIPOS       equ	1141	;# 
  5990   000476                     PWM2GIR         equ	1142	;# 
  5991   000477                     PWM2GIE         equ	1143	;# 
  5992   000478                     PWM2CON         equ	1144	;# 
  5993   000479                     PWM2S1CFG       equ	1145	;# 
  5994   00047A                     PWM2S1P1        equ	1146	;# 
  5995   00047A                     PWM2S1P1L       equ	1146	;# 
  5996   00047B                     PWM2S1P1H       equ	1147	;# 
  5997   00047C                     PWM2S1P2        equ	1148	;# 
  5998   00047C                     PWM2S1P2L       equ	1148	;# 
  5999   00047D                     PWM2S1P2H       equ	1149	;# 
  6000   00047E                     PWM3ERS         equ	1150	;# 
  6001   00047F                     PWM3CLK         equ	1151	;# 
  6002   000480                     PWM3LDS         equ	1152	;# 
  6003   000481                     PWM3PR          equ	1153	;# 
  6004   000481                     PWM3PRL         equ	1153	;# 
  6005   000482                     PWM3PRH         equ	1154	;# 
  6006   000483                     PWM3CPRE        equ	1155	;# 
  6007   000484                     PWM3PIPOS       equ	1156	;# 
  6008   000485                     PWM3GIR         equ	1157	;# 
  6009   000486                     PWM3GIE         equ	1158	;# 
  6010   000487                     PWM3CON         equ	1159	;# 
  6011   000488                     PWM3S1CFG       equ	1160	;# 
  6012   000489                     PWM3S1P1        equ	1161	;# 
  6013   000489                     PWM3S1P1L       equ	1161	;# 
  6014   00048A                     PWM3S1P1H       equ	1162	;# 
  6015   00048B                     PWM3S1P2        equ	1163	;# 
  6016   00048B                     PWM3S1P2L       equ	1163	;# 
  6017   00048C                     PWM3S1P2H       equ	1164	;# 
  6018   00048D                     PWM4ERS         equ	1165	;# 
  6019   00048E                     PWM4CLK         equ	1166	;# 
  6020   00048F                     PWM4LDS         equ	1167	;# 
  6021   000490                     PWM4PR          equ	1168	;# 
  6022   000490                     PWM4PRL         equ	1168	;# 
  6023   000491                     PWM4PRH         equ	1169	;# 
  6024   000492                     PWM4CPRE        equ	1170	;# 
  6025   000493                     PWM4PIPOS       equ	1171	;# 
  6026   000494                     PWM4GIR         equ	1172	;# 
  6027   000495                     PWM4GIE         equ	1173	;# 
  6028   000496                     PWM4CON         equ	1174	;# 
  6029   000497                     PWM4S1CFG       equ	1175	;# 
  6030   000498                     PWM4S1P1        equ	1176	;# 
  6031   000498                     PWM4S1P1L       equ	1176	;# 
  6032   000499                     PWM4S1P1H       equ	1177	;# 
  6033   00049A                     PWM4S1P2        equ	1178	;# 
  6034   00049A                     PWM4S1P2L       equ	1178	;# 
  6035   00049B                     PWM4S1P2H       equ	1179	;# 
  6036   00049C                     PWMLOAD         equ	1180	;# 
  6037   00049D                     PWMEN           equ	1181	;# 
  6038   00049E                     PIE0            equ	1182	;# 
  6039   00049F                     PIE1            equ	1183	;# 
  6040   0004A0                     PIE2            equ	1184	;# 
  6041   0004A1                     PIE3            equ	1185	;# 
  6042   0004A2                     PIE4            equ	1186	;# 
  6043   0004A3                     PIE5            equ	1187	;# 
  6044   0004A4                     PIE6            equ	1188	;# 
  6045   0004A5                     PIE7            equ	1189	;# 
  6046   0004A6                     PIE8            equ	1190	;# 
  6047   0004A7                     PIE9            equ	1191	;# 
  6048   0004A8                     PIE10           equ	1192	;# 
  6049   0004A9                     PIE11           equ	1193	;# 
  6050   0004AA                     PIE12           equ	1194	;# 
  6051   0004AB                     PIE13           equ	1195	;# 
  6052   0004AC                     PIE14           equ	1196	;# 
  6053   0004AD                     PIE15           equ	1197	;# 
  6054   0004AE                     PIR0            equ	1198	;# 
  6055   0004AF                     PIR1            equ	1199	;# 
  6056   0004B0                     PIR2            equ	1200	;# 
  6057   0004B1                     PIR3            equ	1201	;# 
  6058   0004B2                     PIR4            equ	1202	;# 
  6059   0004B3                     PIR5            equ	1203	;# 
  6060   0004B4                     PIR6            equ	1204	;# 
  6061   0004B5                     PIR7            equ	1205	;# 
  6062   0004B6                     PIR8            equ	1206	;# 
  6063   0004B7                     PIR9            equ	1207	;# 
  6064   0004B8                     PIR10           equ	1208	;# 
  6065   0004B9                     PIR11           equ	1209	;# 
  6066   0004BA                     PIR12           equ	1210	;# 
  6067   0004BB                     PIR13           equ	1211	;# 
  6068   0004BC                     PIR14           equ	1212	;# 
  6069   0004BD                     PIR15           equ	1213	;# 
  6070   0004BE                     LATA            equ	1214	;# 
  6071   0004BF                     LATB            equ	1215	;# 
  6072   0004C0                     LATC            equ	1216	;# 
  6073   0004C6                     TRISA           equ	1222	;# 
  6074   0004C7                     TRISB           equ	1223	;# 
  6075   0004C8                     TRISC           equ	1224	;# 
  6076   0004CA                     TRISE           equ	1226	;# 
  6077   0004CE                     PORTA           equ	1230	;# 
  6078   0004CF                     PORTB           equ	1231	;# 
  6079   0004D0                     PORTC           equ	1232	;# 
  6080   0004D2                     PORTE           equ	1234	;# 
  6081   0004D6                     INTCON0         equ	1238	;# 
  6082   0004D7                     INTCON1         equ	1239	;# 
  6083   0004D8                     STATUS          equ	1240	;# 
  6084   0004D9                     FSR2            equ	1241	;# 
  6085   0004D9                     FSR2L           equ	1241	;# 
  6086   0004DA                     FSR2H           equ	1242	;# 
  6087   0004DB                     PLUSW2          equ	1243	;# 
  6088   0004DC                     PREINC2         equ	1244	;# 
  6089   0004DD                     POSTDEC2        equ	1245	;# 
  6090   0004DE                     POSTINC2        equ	1246	;# 
  6091   0004DF                     INDF2           equ	1247	;# 
  6092   0004E0                     BSR             equ	1248	;# 
  6093   0004E1                     FSR1            equ	1249	;# 
  6094   0004E1                     FSR1L           equ	1249	;# 
  6095   0004E2                     FSR1H           equ	1250	;# 
  6096   0004E3                     PLUSW1          equ	1251	;# 
  6097   0004E4                     PREINC1         equ	1252	;# 
  6098   0004E5                     POSTDEC1        equ	1253	;# 
  6099   0004E6                     POSTINC1        equ	1254	;# 
  6100   0004E7                     INDF1           equ	1255	;# 
  6101   0004E8                     WREG            equ	1256	;# 
  6102   0004E9                     FSR0            equ	1257	;# 
  6103   0004E9                     FSR0L           equ	1257	;# 
  6104   0004EA                     FSR0H           equ	1258	;# 
  6105   0004EB                     PLUSW0          equ	1259	;# 
  6106   0004EC                     PREINC0         equ	1260	;# 
  6107   0004ED                     POSTDEC0        equ	1261	;# 
  6108   0004EE                     POSTINC0        equ	1262	;# 
  6109   0004EF                     INDF0           equ	1263	;# 
  6110   0004F0                     PCON0           equ	1264	;# 
  6111   0004F1                     PCON1           equ	1265	;# 
  6112   0004F2                     CPUDOZE         equ	1266	;# 
  6113   0004F3                     PROD            equ	1267	;# 
  6114   0004F3                     PRODL           equ	1267	;# 
  6115   0004F4                     PRODH           equ	1268	;# 
  6116   0004F5                     TABLAT          equ	1269	;# 
  6117   0004F6                     TBLPTR          equ	1270	;# 
  6118   0004F6                     TBLPTRL         equ	1270	;# 
  6119   0004F7                     TBLPTRH         equ	1271	;# 
  6120   0004F8                     TBLPTRU         equ	1272	;# 
  6121   0004F9                     PCLAT           equ	1273	;# 
  6122   0004F9                     PCL             equ	1273	;# 
  6123   0004FA                     PCLATH          equ	1274	;# 
  6124   0004FB                     PCLATU          equ	1275	;# 
  6125   0004FC                     STKPTR          equ	1276	;# 
  6126   0004FD                     TOS             equ	1277	;# 
  6127   0004FD                     TOSL            equ	1277	;# 
  6128   0004FE                     TOSH            equ	1278	;# 
  6129   0004FF                     TOSU            equ	1279	;# 
  6130   000038                     BOOTREG         equ	56	;# 
  6131   000039                     CLKRCON         equ	57	;# 
  6132   00003A                     CLKRCLK         equ	58	;# 
  6133   000040                     NVMCON0         equ	64	;# 
  6134   000041                     NVMCON1         equ	65	;# 
  6135   000042                     NVMLOCK         equ	66	;# 
  6136   000043                     NVMADR          equ	67	;# 
  6137   000043                     NVMADRL         equ	67	;# 
  6138   000044                     NVMADRH         equ	68	;# 
  6139   000045                     NVMADRU         equ	69	;# 
  6140   000046                     NVMDAT          equ	70	;# 
  6141   000046                     NVMDATL         equ	70	;# 
  6142   000047                     NVMDATH         equ	71	;# 
  6143   000048                     VREGCON         equ	72	;# 
  6144   000049                     BORCON          equ	73	;# 
  6145   00004A                     HLVDCON0        equ	74	;# 
  6146   00004B                     HLVDCON1        equ	75	;# 
  6147   00004C                     ZCDCON          equ	76	;# 
  6148   000060                     PMD0            equ	96	;# 
  6149   000061                     PMD1            equ	97	;# 
  6150   000062                     PMD2            equ	98	;# 
  6151   000063                     PMD3            equ	99	;# 
  6152   000064                     PMD4            equ	100	;# 
  6153   000065                     PMD5            equ	101	;# 
  6154   000066                     PMD6            equ	102	;# 
  6155   000067                     PMD7            equ	103	;# 
  6156   000068                     PMD8            equ	104	;# 
  6157   00006A                     MD1CON0         equ	106	;# 
  6158   00006B                     MD1CON1         equ	107	;# 
  6159   00006C                     MD1SRC          equ	108	;# 
  6160   00006D                     MD1CARL         equ	109	;# 
  6161   00006E                     MD1CARH         equ	110	;# 
  6162   00006F                     CMOUT           equ	111	;# 
  6163   000070                     CM1CON0         equ	112	;# 
  6164   000071                     CM1CON1         equ	113	;# 
  6165   000072                     CM1NCH          equ	114	;# 
  6166   000073                     CM1PCH          equ	115	;# 
  6167   000074                     CM2CON0         equ	116	;# 
  6168   000075                     CM2CON1         equ	117	;# 
  6169   000076                     CM2NCH          equ	118	;# 
  6170   000077                     CM2PCH          equ	119	;# 
  6171   000078                     WDTCON0         equ	120	;# 
  6172   000079                     WDTCON1         equ	121	;# 
  6173   00007A                     WDTPSL          equ	122	;# 
  6174   00007B                     WDTPSH          equ	123	;# 
  6175   00007C                     WDTTMR          equ	124	;# 
  6176   00007D                     DAC1DAT         equ	125	;# 
  6177   00007D                     DAC1DATL        equ	125	;# 
  6178   00007F                     DAC1CON         equ	127	;# 
  6179   000080                     SPI1RXB         equ	128	;# 
  6180   000081                     SPI1TXB         equ	129	;# 
  6181   000082                     SPI1TCNT        equ	130	;# 
  6182   000082                     SPI1TCNTL       equ	130	;# 
  6183   000083                     SPI1TCNTH       equ	131	;# 
  6184   000084                     SPI1CON0        equ	132	;# 
  6185   000085                     SPI1CON1        equ	133	;# 
  6186   000086                     SPI1CON2        equ	134	;# 
  6187   000087                     SPI1STATUS      equ	135	;# 
  6188   000088                     SPI1TWIDTH      equ	136	;# 
  6189   000089                     SPI1BAUD        equ	137	;# 
  6190   00008A                     SPI1INTF        equ	138	;# 
  6191   00008B                     SPI1INTE        equ	139	;# 
  6192   00008C                     SPI1CLK         equ	140	;# 
  6193   00008D                     SPI2RXB         equ	141	;# 
  6194   00008E                     SPI2TXB         equ	142	;# 
  6195   00008F                     SPI2TCNT        equ	143	;# 
  6196   00008F                     SPI2TCNTL       equ	143	;# 
  6197   000090                     SPI2TCNTH       equ	144	;# 
  6198   000091                     SPI2CON0        equ	145	;# 
  6199   000092                     SPI2CON1        equ	146	;# 
  6200   000093                     SPI2CON2        equ	147	;# 
  6201   000094                     SPI2STATUS      equ	148	;# 
  6202   000095                     SPI2TWIDTH      equ	149	;# 
  6203   000096                     SPI2BAUD        equ	150	;# 
  6204   000097                     SPI2INTF        equ	151	;# 
  6205   000098                     SPI2INTE        equ	152	;# 
  6206   000099                     SPI2CLK         equ	153	;# 
  6207   0000AC                     ACTCON          equ	172	;# 
  6208   0000AD                     OSCCON1         equ	173	;# 
  6209   0000AE                     OSCCON2         equ	174	;# 
  6210   0000AF                     OSCCON3         equ	175	;# 
  6211   0000B0                     OSCTUNE         equ	176	;# 
  6212   0000B1                     OSCFRQ          equ	177	;# 
  6213   0000B1                     OSCFREQ         equ	177	;# 
  6214   0000B2                     OSCSTAT         equ	178	;# 
  6215   0000B2                     OSCSTAT1        equ	178	;# 
  6216   0000B3                     OSCEN           equ	179	;# 
  6217   0000B4                     PRLOCK          equ	180	;# 
  6218   0000B5                     SCANPR          equ	181	;# 
  6219   0000B6                     DMA1PR          equ	182	;# 
  6220   0000B7                     DMA2PR          equ	183	;# 
  6221   0000B8                     DMA3PR          equ	184	;# 
  6222   0000B9                     DMA4PR          equ	185	;# 
  6223   0000BA                     DMA5PR          equ	186	;# 
  6224   0000BB                     DMA6PR          equ	187	;# 
  6225   0000BC                     DMA7PR          equ	188	;# 
  6226   0000BD                     DMA8PR          equ	189	;# 
  6227   0000BE                     MAINPR          equ	190	;# 
  6228   0000BF                     ISRPR           equ	191	;# 
  6229   0000D4                     CLCDATA         equ	212	;# 
  6230   0000D5                     CLCSELECT       equ	213	;# 
  6231   0000D6                     CLCnCON         equ	214	;# 
  6232   0000D7                     CLCnPOL         equ	215	;# 
  6233   0000D8                     CLCnSEL0        equ	216	;# 
  6234   0000D9                     CLCnSEL1        equ	217	;# 
  6235   0000DA                     CLCnSEL2        equ	218	;# 
  6236   0000DB                     CLCnSEL3        equ	219	;# 
  6237   0000DC                     CLCnGLS0        equ	220	;# 
  6238   0000DD                     CLCnGLS1        equ	221	;# 
  6239   0000DE                     CLCnGLS2        equ	222	;# 
  6240   0000DF                     CLCnGLS3        equ	223	;# 
  6241   0000E8                     DMASELECT       equ	232	;# 
  6242   0000E9                     DMAnBUF         equ	233	;# 
  6243   0000EA                     DMAnDCNT        equ	234	;# 
  6244   0000EA                     DMAnDCNTL       equ	234	;# 
  6245   0000EB                     DMAnDCNTH       equ	235	;# 
  6246   0000EC                     DMAnDPTR        equ	236	;# 
  6247   0000EC                     DMAnDPTRL       equ	236	;# 
  6248   0000ED                     DMAnDPTRH       equ	237	;# 
  6249   0000EE                     DMAnDSZ         equ	238	;# 
  6250   0000EE                     DMAnDSZL        equ	238	;# 
  6251   0000EF                     DMAnDSZH        equ	239	;# 
  6252   0000F0                     DMAnDSA         equ	240	;# 
  6253   0000F0                     DMAnDSAL        equ	240	;# 
  6254   0000F1                     DMAnDSAH        equ	241	;# 
  6255   0000F2                     DMAnSCNT        equ	242	;# 
  6256   0000F2                     DMAnSCNTL       equ	242	;# 
  6257   0000F3                     DMAnSCNTH       equ	243	;# 
  6258   0000F4                     DMAnSPTR        equ	244	;# 
  6259   0000F4                     DMAnSPTRL       equ	244	;# 
  6260   0000F5                     DMAnSPTRH       equ	245	;# 
  6261   0000F6                     DMAnSPTRU       equ	246	;# 
  6262   0000F7                     DMAnSSZ         equ	247	;# 
  6263   0000F7                     DMAnSSZL        equ	247	;# 
  6264   0000F8                     DMAnSSZH        equ	248	;# 
  6265   0000F9                     DMAnSSA         equ	249	;# 
  6266   0000F9                     DMAnSSAL        equ	249	;# 
  6267   0000FA                     DMAnSSAH        equ	250	;# 
  6268   0000FB                     DMAnSSAU        equ	251	;# 
  6269   0000FC                     DMAnCON0        equ	252	;# 
  6270   0000FD                     DMAnCON1        equ	253	;# 
  6271   0000FE                     DMAnAIRQ        equ	254	;# 
  6272   0000FF                     DMAnSIRQ        equ	255	;# 
  6273   000100                     C1CONL          equ	256	;# 
  6274   000101                     C1CONH          equ	257	;# 
  6275   000102                     C1CONU          equ	258	;# 
  6276   000103                     C1CONT          equ	259	;# 
  6277   000104                     C1NBTCFGL       equ	260	;# 
  6278   000105                     C1NBTCFGH       equ	261	;# 
  6279   000106                     C1NBTCFGU       equ	262	;# 
  6280   000107                     C1NBTCFGT       equ	263	;# 
  6281   000108                     C1DBTCFGL       equ	264	;# 
  6282   000109                     C1DBTCFGH       equ	265	;# 
  6283   00010A                     C1DBTCFGU       equ	266	;# 
  6284   00010B                     C1DBTCFGT       equ	267	;# 
  6285   00010C                     C1TDCL          equ	268	;# 
  6286   00010D                     C1TDCH          equ	269	;# 
  6287   00010E                     C1TDCU          equ	270	;# 
  6288   000110                     C1TBC           equ	272	;# 
  6289   000110                     C1TBCL          equ	272	;# 
  6290   000111                     C1TBCH          equ	273	;# 
  6291   000112                     C1TBCU          equ	274	;# 
  6292   000113                     C1TBCT          equ	275	;# 
  6293   000114                     C1TSCONL        equ	276	;# 
  6294   000115                     C1TSCONH        equ	277	;# 
  6295   000116                     C1TSCONU        equ	278	;# 
  6296   000117                     C1TSCONT        equ	279	;# 
  6297   000118                     C1VECL          equ	280	;# 
  6298   000119                     C1VECH          equ	281	;# 
  6299   00011A                     C1VECU          equ	282	;# 
  6300   00011B                     C1VECT          equ	283	;# 
  6301   00011C                     C1INTL          equ	284	;# 
  6302   00011D                     C1INTH          equ	285	;# 
  6303   00011E                     C1INTU          equ	286	;# 
  6304   00011F                     C1INTT          equ	287	;# 
  6305   000120                     C1RXIF          equ	288	;# 
  6306   000120                     C1RXIFL         equ	288	;# 
  6307   000121                     C1RXIFH         equ	289	;# 
  6308   000122                     C1RXIFU         equ	290	;# 
  6309   000123                     C1RXIFT         equ	291	;# 
  6310   000124                     C1TXIF          equ	292	;# 
  6311   000124                     C1TXIFL         equ	292	;# 
  6312   000125                     C1TXIFH         equ	293	;# 
  6313   000126                     C1TXIFU         equ	294	;# 
  6314   000127                     C1TXIFT         equ	295	;# 
  6315   000128                     C1RXOVIF        equ	296	;# 
  6316   000128                     C1RXOVIFL       equ	296	;# 
  6317   000129                     C1RXOVIFH       equ	297	;# 
  6318   00012A                     C1RXOVIFU       equ	298	;# 
  6319   00012B                     C1RXOVIFT       equ	299	;# 
  6320   00012C                     C1TXATIF        equ	300	;# 
  6321   00012C                     C1TXATIFL       equ	300	;# 
  6322   00012D                     C1TXATIFH       equ	301	;# 
  6323   00012E                     C1TXATIFU       equ	302	;# 
  6324   00012F                     C1TXATIFT       equ	303	;# 
  6325   000130                     C1TXREQ         equ	304	;# 
  6326   000130                     C1TXREQL        equ	304	;# 
  6327   000131                     C1TXREQH        equ	305	;# 
  6328   000132                     C1TXREQU        equ	306	;# 
  6329   000133                     C1TXREQT        equ	307	;# 
  6330   000134                     C1TRECL         equ	308	;# 
  6331   000135                     C1TRECH         equ	309	;# 
  6332   000136                     C1TRECU         equ	310	;# 
  6333   000137                     C1TRECT         equ	311	;# 
  6334   000138                     C1BDIAG0L       equ	312	;# 
  6335   000139                     C1BDIAG0H       equ	313	;# 
  6336   00013C                     C1BDIAG1L       equ	316	;# 
  6337   00013D                     C1BDIAG1H       equ	317	;# 
  6338   00013E                     C1BDIAG1U       equ	318	;# 
  6339   00013F                     C1BDIAG1T       equ	319	;# 
  6340   000140                     C1TEFCONL       equ	320	;# 
  6341   000141                     C1TEFCONH       equ	321	;# 
  6342   000142                     C1TEFCONU       equ	322	;# 
  6343   000143                     C1TEFCONT       equ	323	;# 
  6344   000144                     C1TEFSTAL       equ	324	;# 
  6345   000145                     C1TEFSTAH       equ	325	;# 
  6346   000146                     C1TEFSTAU       equ	326	;# 
  6347   000147                     C1TEFSTAT       equ	327	;# 
  6348   000148                     C1TEFUA         equ	328	;# 
  6349   000148                     C1TEFUAL        equ	328	;# 
  6350   000149                     C1TEFUAH        equ	329	;# 
  6351   00014A                     C1TEFUAU        equ	330	;# 
  6352   00014B                     C1TEFUAT        equ	331	;# 
  6353   00014C                     C1FIFOBA        equ	332	;# 
  6354   00014C                     C1FIFOBAL       equ	332	;# 
  6355   00014D                     C1FIFOBAH       equ	333	;# 
  6356   00014E                     C1FIFOBAU       equ	334	;# 
  6357   00014F                     C1FIFOBAT       equ	335	;# 
  6358   000150                     C1TXQCONL       equ	336	;# 
  6359   000151                     C1TXQCONH       equ	337	;# 
  6360   000152                     C1TXQCONU       equ	338	;# 
  6361   000153                     C1TXQCONT       equ	339	;# 
  6362   000154                     C1TXQSTAL       equ	340	;# 
  6363   000155                     C1TXQSTAH       equ	341	;# 
  6364   000156                     C1TXQSTAU       equ	342	;# 
  6365   000157                     C1TXQSTAT       equ	343	;# 
  6366   000158                     C1TXQUA         equ	344	;# 
  6367   000158                     C1TXQUAL        equ	344	;# 
  6368   000159                     C1TXQUAH        equ	345	;# 
  6369   00015A                     C1TXQUAU        equ	346	;# 
  6370   00015B                     C1TXQUAT        equ	347	;# 
  6371   00015C                     C1FIFOCON1      equ	348	;# 
  6372   00015C                     C1FIFOCON1L     equ	348	;# 
  6373   00015D                     C1FIFOCON1H     equ	349	;# 
  6374   00015E                     C1FIFOCON1U     equ	350	;# 
  6375   00015F                     C1FIFOCON1T     equ	351	;# 
  6376   000160                     C1FIFOSTA1      equ	352	;# 
  6377   000160                     C1FIFOSTA1L     equ	352	;# 
  6378   000161                     C1FIFOSTA1H     equ	353	;# 
  6379   000162                     C1FIFOSTA1U     equ	354	;# 
  6380   000163                     C1FIFOSTA1T     equ	355	;# 
  6381   000164                     C1FIFOUA1       equ	356	;# 
  6382   000164                     C1FIFOUA1L      equ	356	;# 
  6383   000165                     C1FIFOUA1H      equ	357	;# 
  6384   000166                     C1FIFOUA1U      equ	358	;# 
  6385   000167                     C1FIFOUA1T      equ	359	;# 
  6386   000168                     C1FIFOCON2      equ	360	;# 
  6387   000168                     C1FIFOCON2L     equ	360	;# 
  6388   000169                     C1FIFOCON2H     equ	361	;# 
  6389   00016A                     C1FIFOCON2U     equ	362	;# 
  6390   00016B                     C1FIFOCON2T     equ	363	;# 
  6391   00016C                     C1FIFOSTA2      equ	364	;# 
  6392   00016C                     C1FIFOSTA2L     equ	364	;# 
  6393   00016D                     C1FIFOSTA2H     equ	365	;# 
  6394   00016E                     C1FIFOSTA2U     equ	366	;# 
  6395   00016F                     C1FIFOSTA2T     equ	367	;# 
  6396   000170                     C1FIFOUA2       equ	368	;# 
  6397   000170                     C1FIFOUA2L      equ	368	;# 
  6398   000171                     C1FIFOUA2H      equ	369	;# 
  6399   000172                     C1FIFOUA2U      equ	370	;# 
  6400   000173                     C1FIFOUA2T      equ	371	;# 
  6401   000174                     C1FIFOCON3      equ	372	;# 
  6402   000174                     C1FIFOCON3L     equ	372	;# 
  6403   000175                     C1FIFOCON3H     equ	373	;# 
  6404   000176                     C1FIFOCON3U     equ	374	;# 
  6405   000177                     C1FIFOCON3T     equ	375	;# 
  6406   000178                     C1FIFOSTA3      equ	376	;# 
  6407   000178                     C1FIFOSTA3L     equ	376	;# 
  6408   000179                     C1FIFOSTA3H     equ	377	;# 
  6409   00017A                     C1FIFOSTA3U     equ	378	;# 
  6410   00017B                     C1FIFOSTA3T     equ	379	;# 
  6411   00017C                     C1FIFOUA3       equ	380	;# 
  6412   00017C                     C1FIFOUA3L      equ	380	;# 
  6413   00017D                     C1FIFOUA3H      equ	381	;# 
  6414   00017E                     C1FIFOUA3U      equ	382	;# 
  6415   00017F                     C1FIFOUA3T      equ	383	;# 
  6416   000180                     C1FLTCON0L      equ	384	;# 
  6417   000181                     C1FLTCON0H      equ	385	;# 
  6418   000182                     C1FLTCON0U      equ	386	;# 
  6419   000183                     C1FLTCON0T      equ	387	;# 
  6420   000184                     C1FLTCON1L      equ	388	;# 
  6421   000185                     C1FLTCON1H      equ	389	;# 
  6422   000186                     C1FLTCON1U      equ	390	;# 
  6423   000187                     C1FLTCON1T      equ	391	;# 
  6424   000188                     C1FLTCON2L      equ	392	;# 
  6425   000189                     C1FLTCON2H      equ	393	;# 
  6426   00018A                     C1FLTCON2U      equ	394	;# 
  6427   00018B                     C1FLTCON2T      equ	395	;# 
  6428   00018C                     C1FLTOBJ0       equ	396	;# 
  6429   00018C                     C1FLTOBJ0L      equ	396	;# 
  6430   00018D                     C1FLTOBJ0H      equ	397	;# 
  6431   00018E                     C1FLTOBJ0U      equ	398	;# 
  6432   00018F                     C1FLTOBJ0T      equ	399	;# 
  6433   000190                     C1MASK0         equ	400	;# 
  6434   000190                     C1MASK0L        equ	400	;# 
  6435   000191                     C1MASK0H        equ	401	;# 
  6436   000192                     C1MASK0U        equ	402	;# 
  6437   000193                     C1MASK0T        equ	403	;# 
  6438   000194                     C1FLTOBJ1       equ	404	;# 
  6439   000194                     C1FLTOBJ1L      equ	404	;# 
  6440   000195                     C1FLTOBJ1H      equ	405	;# 
  6441   000196                     C1FLTOBJ1U      equ	406	;# 
  6442   000197                     C1FLTOBJ1T      equ	407	;# 
  6443   000198                     C1MASK1         equ	408	;# 
  6444   000198                     C1MASK1L        equ	408	;# 
  6445   000199                     C1MASK1H        equ	409	;# 
  6446   00019A                     C1MASK1U        equ	410	;# 
  6447   00019B                     C1MASK1T        equ	411	;# 
  6448   00019C                     C1FLTOBJ2       equ	412	;# 
  6449   00019C                     C1FLTOBJ2L      equ	412	;# 
  6450   00019D                     C1FLTOBJ2H      equ	413	;# 
  6451   00019E                     C1FLTOBJ2U      equ	414	;# 
  6452   00019F                     C1FLTOBJ2T      equ	415	;# 
  6453   0001A0                     C1MASK2         equ	416	;# 
  6454   0001A0                     C1MASK2L        equ	416	;# 
  6455   0001A1                     C1MASK2H        equ	417	;# 
  6456   0001A2                     C1MASK2U        equ	418	;# 
  6457   0001A3                     C1MASK2T        equ	419	;# 
  6458   0001A4                     C1FLTOBJ3       equ	420	;# 
  6459   0001A4                     C1FLTOBJ3L      equ	420	;# 
  6460   0001A5                     C1FLTOBJ3H      equ	421	;# 
  6461   0001A6                     C1FLTOBJ3U      equ	422	;# 
  6462   0001A7                     C1FLTOBJ3T      equ	423	;# 
  6463   0001A8                     C1MASK3         equ	424	;# 
  6464   0001A8                     C1MASK3L        equ	424	;# 
  6465   0001A9                     C1MASK3H        equ	425	;# 
  6466   0001AA                     C1MASK3U        equ	426	;# 
  6467   0001AB                     C1MASK3T        equ	427	;# 
  6468   0001AC                     C1FLTOBJ4       equ	428	;# 
  6469   0001AC                     C1FLTOBJ4L      equ	428	;# 
  6470   0001AD                     C1FLTOBJ4H      equ	429	;# 
  6471   0001AE                     C1FLTOBJ4U      equ	430	;# 
  6472   0001AF                     C1FLTOBJ4T      equ	431	;# 
  6473   0001B0                     C1MASK4         equ	432	;# 
  6474   0001B0                     C1MASK4L        equ	432	;# 
  6475   0001B1                     C1MASK4H        equ	433	;# 
  6476   0001B2                     C1MASK4U        equ	434	;# 
  6477   0001B3                     C1MASK4T        equ	435	;# 
  6478   0001B4                     C1FLTOBJ5       equ	436	;# 
  6479   0001B4                     C1FLTOBJ5L      equ	436	;# 
  6480   0001B5                     C1FLTOBJ5H      equ	437	;# 
  6481   0001B6                     C1FLTOBJ5U      equ	438	;# 
  6482   0001B7                     C1FLTOBJ5T      equ	439	;# 
  6483   0001B8                     C1MASK5         equ	440	;# 
  6484   0001B8                     C1MASK5L        equ	440	;# 
  6485   0001B9                     C1MASK5H        equ	441	;# 
  6486   0001BA                     C1MASK5U        equ	442	;# 
  6487   0001BB                     C1MASK5T        equ	443	;# 
  6488   0001BC                     C1FLTOBJ6       equ	444	;# 
  6489   0001BC                     C1FLTOBJ6L      equ	444	;# 
  6490   0001BD                     C1FLTOBJ6H      equ	445	;# 
  6491   0001BE                     C1FLTOBJ6U      equ	446	;# 
  6492   0001BF                     C1FLTOBJ6T      equ	447	;# 
  6493   0001C0                     C1MASK6         equ	448	;# 
  6494   0001C0                     C1MASK6L        equ	448	;# 
  6495   0001C1                     C1MASK6H        equ	449	;# 
  6496   0001C2                     C1MASK6U        equ	450	;# 
  6497   0001C3                     C1MASK6T        equ	451	;# 
  6498   0001C4                     C1FLTOBJ7       equ	452	;# 
  6499   0001C4                     C1FLTOBJ7L      equ	452	;# 
  6500   0001C5                     C1FLTOBJ7H      equ	453	;# 
  6501   0001C6                     C1FLTOBJ7U      equ	454	;# 
  6502   0001C7                     C1FLTOBJ7T      equ	455	;# 
  6503   0001C8                     C1MASK7         equ	456	;# 
  6504   0001C8                     C1MASK7L        equ	456	;# 
  6505   0001C9                     C1MASK7H        equ	457	;# 
  6506   0001CA                     C1MASK7U        equ	458	;# 
  6507   0001CB                     C1MASK7T        equ	459	;# 
  6508   0001CC                     C1FLTOBJ8       equ	460	;# 
  6509   0001CC                     C1FLTOBJ8L      equ	460	;# 
  6510   0001CD                     C1FLTOBJ8H      equ	461	;# 
  6511   0001CE                     C1FLTOBJ8U      equ	462	;# 
  6512   0001CF                     C1FLTOBJ8T      equ	463	;# 
  6513   0001D0                     C1MASK8         equ	464	;# 
  6514   0001D0                     C1MASK8L        equ	464	;# 
  6515   0001D1                     C1MASK8H        equ	465	;# 
  6516   0001D2                     C1MASK8U        equ	466	;# 
  6517   0001D3                     C1MASK8T        equ	467	;# 
  6518   0001D4                     C1FLTOBJ9       equ	468	;# 
  6519   0001D4                     C1FLTOBJ9L      equ	468	;# 
  6520   0001D5                     C1FLTOBJ9H      equ	469	;# 
  6521   0001D6                     C1FLTOBJ9U      equ	470	;# 
  6522   0001D7                     C1FLTOBJ9T      equ	471	;# 
  6523   0001D8                     C1MASK9         equ	472	;# 
  6524   0001D8                     C1MASK9L        equ	472	;# 
  6525   0001D9                     C1MASK9H        equ	473	;# 
  6526   0001DA                     C1MASK9U        equ	474	;# 
  6527   0001DB                     C1MASK9T        equ	475	;# 
  6528   0001DC                     C1FLTOBJ10      equ	476	;# 
  6529   0001DC                     C1FLTOBJ10L     equ	476	;# 
  6530   0001DD                     C1FLTOBJ10H     equ	477	;# 
  6531   0001DE                     C1FLTOBJ10U     equ	478	;# 
  6532   0001DF                     C1FLTOBJ10T     equ	479	;# 
  6533   0001E0                     C1MASK10        equ	480	;# 
  6534   0001E0                     C1MASK10L       equ	480	;# 
  6535   0001E1                     C1MASK10H       equ	481	;# 
  6536   0001E2                     C1MASK10U       equ	482	;# 
  6537   0001E3                     C1MASK10T       equ	483	;# 
  6538   0001E4                     C1FLTOBJ11      equ	484	;# 
  6539   0001E4                     C1FLTOBJ11L     equ	484	;# 
  6540   0001E5                     C1FLTOBJ11H     equ	485	;# 
  6541   0001E6                     C1FLTOBJ11U     equ	486	;# 
  6542   0001E7                     C1FLTOBJ11T     equ	487	;# 
  6543   0001E8                     C1MASK11        equ	488	;# 
  6544   0001E8                     C1MASK11L       equ	488	;# 
  6545   0001E9                     C1MASK11H       equ	489	;# 
  6546   0001EA                     C1MASK11U       equ	490	;# 
  6547   0001EB                     C1MASK11T       equ	491	;# 
  6548   000200                     PPSLOCK         equ	512	;# 
  6549   000201                     RA0PPS          equ	513	;# 
  6550   000202                     RA1PPS          equ	514	;# 
  6551   000203                     RA2PPS          equ	515	;# 
  6552   000204                     RA3PPS          equ	516	;# 
  6553   000205                     RA4PPS          equ	517	;# 
  6554   000206                     RA5PPS          equ	518	;# 
  6555   000207                     RA6PPS          equ	519	;# 
  6556   000208                     RA7PPS          equ	520	;# 
  6557   000209                     RB0PPS          equ	521	;# 
  6558   00020A                     RB1PPS          equ	522	;# 
  6559   00020B                     RB2PPS          equ	523	;# 
  6560   00020C                     RB3PPS          equ	524	;# 
  6561   00020D                     RB4PPS          equ	525	;# 
  6562   00020E                     RB5PPS          equ	526	;# 
  6563   00020F                     RB6PPS          equ	527	;# 
  6564   000210                     RB7PPS          equ	528	;# 
  6565   000211                     RC0PPS          equ	529	;# 
  6566   000212                     RC1PPS          equ	530	;# 
  6567   000213                     RC2PPS          equ	531	;# 
  6568   000214                     RC3PPS          equ	532	;# 
  6569   000215                     RC4PPS          equ	533	;# 
  6570   000216                     RC5PPS          equ	534	;# 
  6571   000217                     RC6PPS          equ	535	;# 
  6572   000218                     RC7PPS          equ	536	;# 
  6573   00023D                     CANRXPPS        equ	573	;# 
  6574   00023E                     INT0PPS         equ	574	;# 
  6575   00023F                     INT1PPS         equ	575	;# 
  6576   000240                     INT2PPS         equ	576	;# 
  6577   000241                     T0CKIPPS        equ	577	;# 
  6578   000242                     T1CKIPPS        equ	578	;# 
  6579   000243                     T1GPPS          equ	579	;# 
  6580   000244                     T3CKIPPS        equ	580	;# 
  6581   000245                     T3GPPS          equ	581	;# 
  6582   000246                     T5CKIPPS        equ	582	;# 
  6583   000247                     T5GPPS          equ	583	;# 
  6584   000248                     T2INPPS         equ	584	;# 
  6585   000249                     T4INPPS         equ	585	;# 
  6586   00024A                     T6INPPS         equ	586	;# 
  6587   00024B                     TUIN0PPS        equ	587	;# 
  6588   00024C                     TUIN1PPS        equ	588	;# 
  6589   00024F                     CCP1PPS         equ	591	;# 
  6590   000250                     CCP2PPS         equ	592	;# 
  6591   000251                     CCP3PPS         equ	593	;# 
  6592   000253                     PWM1ERSPPS      equ	595	;# 
  6593   000254                     PWM2ERSPPS      equ	596	;# 
  6594   000255                     PWM3ERSPPS      equ	597	;# 
  6595   000256                     PWM4ERSPPS      equ	598	;# 
  6596   000257                     PWMIN0PPS       equ	599	;# 
  6597   000258                     PWMIN1PPS       equ	600	;# 
  6598   000259                     SMT1WINPPS      equ	601	;# 
  6599   00025A                     SMT1SIGPPS      equ	602	;# 
  6600   00025B                     CWG1PPS         equ	603	;# 
  6601   00025B                     CWG1INPPS       equ	603	;# 
  6602   00025C                     CWG2PPS         equ	604	;# 
  6603   00025C                     CWG2INPPS       equ	604	;# 
  6604   00025D                     CWG3PPS         equ	605	;# 
  6605   00025D                     CWG3INPPS       equ	605	;# 
  6606   00025E                     MD1CARLPPS      equ	606	;# 
  6607   00025E                     MDCARLPPS       equ	606	;# 
  6608   00025F                     MD1CARHPPS      equ	607	;# 
  6609   00025F                     MDCARHPPS       equ	607	;# 
  6610   000260                     MD1SRCPPS       equ	608	;# 
  6611   000260                     MDSRCPPS        equ	608	;# 
  6612   000261                     CLCIN0PPS       equ	609	;# 
  6613   000262                     CLCIN1PPS       equ	610	;# 
  6614   000263                     CLCIN2PPS       equ	611	;# 
  6615   000264                     CLCIN3PPS       equ	612	;# 
  6616   000265                     CLCIN4PPS       equ	613	;# 
  6617   000266                     CLCIN5PPS       equ	614	;# 
  6618   000267                     CLCIN6PPS       equ	615	;# 
  6619   000268                     CLCIN7PPS       equ	616	;# 
  6620   000269                     ADACTPPS        equ	617	;# 
  6621   00026A                     SPI1SCKPPS      equ	618	;# 
  6622   00026B                     SPI1SDIPPS      equ	619	;# 
  6623   00026C                     SPI1SSPPS       equ	620	;# 
  6624   00026D                     SPI2SCKPPS      equ	621	;# 
  6625   00026E                     SPI2SDIPPS      equ	622	;# 
  6626   00026F                     SPI2SSPPS       equ	623	;# 
  6627   000270                     I2C1SDAPPS      equ	624	;# 
  6628   000271                     I2C1SCLPPS      equ	625	;# 
  6629   000272                     U1RXPPS         equ	626	;# 
  6630   000273                     U1CTSPPS        equ	627	;# 
  6631   000274                     U2RXPPS         equ	628	;# 
  6632   000275                     U2CTSPPS        equ	629	;# 
  6633   000276                     U3RXPPS         equ	630	;# 
  6634   000277                     U3CTSPPS        equ	631	;# 
  6635   000278                     U4RXPPS         equ	632	;# 
  6636   000279                     U4CTSPPS        equ	633	;# 
  6637   00027A                     U5RXPPS         equ	634	;# 
  6638   00027B                     U5CTSPPS        equ	635	;# 
  6639   000286                     RC4I2C          equ	646	;# 
  6640   000287                     RC3I2C          equ	647	;# 
  6641   000288                     RB2I2C          equ	648	;# 
  6642   000289                     RB1I2C          equ	649	;# 
  6643   00028A                     I2C1RXB         equ	650	;# 
  6644   00028B                     I2C1TXB         equ	651	;# 
  6645   00028C                     I2C1CNTL        equ	652	;# 
  6646   00028D                     I2C1CNTH        equ	653	;# 
  6647   00028E                     I2C1ADB0        equ	654	;# 
  6648   00028F                     I2C1ADB1        equ	655	;# 
  6649   000290                     I2C1ADR0        equ	656	;# 
  6650   000291                     I2C1ADR1        equ	657	;# 
  6651   000292                     I2C1ADR2        equ	658	;# 
  6652   000293                     I2C1ADR3        equ	659	;# 
  6653   000294                     I2C1CON0        equ	660	;# 
  6654   000295                     I2C1CON1        equ	661	;# 
  6655   000296                     I2C1CON2        equ	662	;# 
  6656   000297                     I2C1ERR         equ	663	;# 
  6657   000298                     I2C1STAT0       equ	664	;# 
  6658   000299                     I2C1STAT1       equ	665	;# 
  6659   00029A                     I2C1PIR         equ	666	;# 
  6660   00029B                     I2C1PIE         equ	667	;# 
  6661   00029C                     I2C1BTO         equ	668	;# 
  6662   00029D                     I2C1BAUD        equ	669	;# 
  6663   00029E                     I2C1CLK         equ	670	;# 
  6664   00029F                     I2C1BTOC        equ	671	;# 
  6665   0002A1                     U1RXB           equ	673	;# 
  6666   0002A1                     U1RXBL          equ	673	;# 
  6667   0002A2                     U1RXCHK         equ	674	;# 
  6668   0002A3                     U1TXB           equ	675	;# 
  6669   0002A3                     U1TXBL          equ	675	;# 
  6670   0002A4                     U1TXCHK         equ	676	;# 
  6671   0002A5                     U1P1            equ	677	;# 
  6672   0002A5                     U1P1L           equ	677	;# 
  6673   0002A6                     U1P1H           equ	678	;# 
  6674   0002A7                     U1P2            equ	679	;# 
  6675   0002A7                     U1P2L           equ	679	;# 
  6676   0002A8                     U1P2H           equ	680	;# 
  6677   0002A9                     U1P3            equ	681	;# 
  6678   0002A9                     U1P3L           equ	681	;# 
  6679   0002AA                     U1P3H           equ	682	;# 
  6680   0002AB                     U1CON0          equ	683	;# 
  6681   0002AC                     U1CON1          equ	684	;# 
  6682   0002AD                     U1CON2          equ	685	;# 
  6683   0002AE                     U1BRG           equ	686	;# 
  6684   0002AE                     U1BRGL          equ	686	;# 
  6685   0002AF                     U1BRGH          equ	687	;# 
  6686   0002B0                     U1FIFO          equ	688	;# 
  6687   0002B1                     U1UIR           equ	689	;# 
  6688   0002B2                     U1ERRIR         equ	690	;# 
  6689   0002B3                     U1ERRIE         equ	691	;# 
  6690   0002B4                     U2RXB           equ	692	;# 
  6691   0002B4                     U2RXBL          equ	692	;# 
  6692   0002B5                     U2RXCHK         equ	693	;# 
  6693   0002B6                     U2TXB           equ	694	;# 
  6694   0002B6                     U2TXBL          equ	694	;# 
  6695   0002B7                     U2TXCHK         equ	695	;# 
  6696   0002B8                     U2P1            equ	696	;# 
  6697   0002B8                     U2P1L           equ	696	;# 
  6698   0002B9                     U2P1H           equ	697	;# 
  6699   0002BA                     U2P2            equ	698	;# 
  6700   0002BA                     U2P2L           equ	698	;# 
  6701   0002BB                     U2P2H           equ	699	;# 
  6702   0002BC                     U2P3            equ	700	;# 
  6703   0002BC                     U2P3L           equ	700	;# 
  6704   0002BD                     U2P3H           equ	701	;# 
  6705   0002BE                     U2CON0          equ	702	;# 
  6706   0002BF                     U2CON1          equ	703	;# 
  6707   0002C0                     U2CON2          equ	704	;# 
  6708   0002C1                     U2BRG           equ	705	;# 
  6709   0002C1                     U2BRGL          equ	705	;# 
  6710   0002C2                     U2BRGH          equ	706	;# 
  6711   0002C3                     U2FIFO          equ	707	;# 
  6712   0002C4                     U2UIR           equ	708	;# 
  6713   0002C5                     U2ERRIR         equ	709	;# 
  6714   0002C6                     U2ERRIE         equ	710	;# 
  6715   0002C7                     U3RXB           equ	711	;# 
  6716   0002C7                     U3RXBL          equ	711	;# 
  6717   0002C9                     U3TXB           equ	713	;# 
  6718   0002C9                     U3TXBL          equ	713	;# 
  6719   0002CB                     U3P1            equ	715	;# 
  6720   0002CB                     U3P1L           equ	715	;# 
  6721   0002CD                     U3P2            equ	717	;# 
  6722   0002CD                     U3P2L           equ	717	;# 
  6723   0002CF                     U3P3            equ	719	;# 
  6724   0002CF                     U3P3L           equ	719	;# 
  6725   0002D1                     U3CON0          equ	721	;# 
  6726   0002D2                     U3CON1          equ	722	;# 
  6727   0002D3                     U3CON2          equ	723	;# 
  6728   0002D4                     U3BRG           equ	724	;# 
  6729   0002D4                     U3BRGL          equ	724	;# 
  6730   0002D5                     U3BRGH          equ	725	;# 
  6731   0002D6                     U3FIFO          equ	726	;# 
  6732   0002D7                     U3UIR           equ	727	;# 
  6733   0002D8                     U3ERRIR         equ	728	;# 
  6734   0002D9                     U3ERRIE         equ	729	;# 
  6735   0002DA                     U4RXB           equ	730	;# 
  6736   0002DA                     U4RXBL          equ	730	;# 
  6737   0002DC                     U4TXB           equ	732	;# 
  6738   0002DC                     U4TXBL          equ	732	;# 
  6739   0002DE                     U4P1            equ	734	;# 
  6740   0002DE                     U4P1L           equ	734	;# 
  6741   0002E0                     U4P2            equ	736	;# 
  6742   0002E0                     U4P2L           equ	736	;# 
  6743   0002E2                     U4P3            equ	738	;# 
  6744   0002E2                     U4P3L           equ	738	;# 
  6745   0002E4                     U4CON0          equ	740	;# 
  6746   0002E5                     U4CON1          equ	741	;# 
  6747   0002E6                     U4CON2          equ	742	;# 
  6748   0002E7                     U4BRG           equ	743	;# 
  6749   0002E7                     U4BRGL          equ	743	;# 
  6750   0002E8                     U4BRGH          equ	744	;# 
  6751   0002E9                     U4FIFO          equ	745	;# 
  6752   0002EA                     U4UIR           equ	746	;# 
  6753   0002EB                     U4ERRIR         equ	747	;# 
  6754   0002EC                     U4ERRIE         equ	748	;# 
  6755   0002ED                     U5RXB           equ	749	;# 
  6756   0002ED                     U5RXBL          equ	749	;# 
  6757   0002EF                     U5TXB           equ	751	;# 
  6758   0002EF                     U5TXBL          equ	751	;# 
  6759   0002F1                     U5P1            equ	753	;# 
  6760   0002F1                     U5P1L           equ	753	;# 
  6761   0002F3                     U5P2            equ	755	;# 
  6762   0002F3                     U5P2L           equ	755	;# 
  6763   0002F5                     U5P3            equ	757	;# 
  6764   0002F5                     U5P3L           equ	757	;# 
  6765   0002F7                     U5CON0          equ	759	;# 
  6766   0002F8                     U5CON1          equ	760	;# 
  6767   0002F9                     U5CON2          equ	761	;# 
  6768   0002FA                     U5BRG           equ	762	;# 
  6769   0002FA                     U5BRGL          equ	762	;# 
  6770   0002FB                     U5BRGH          equ	763	;# 
  6771   0002FC                     U5FIFO          equ	764	;# 
  6772   0002FD                     U5UIR           equ	765	;# 
  6773   0002FE                     U5ERRIR         equ	766	;# 
  6774   0002FF                     U5ERRIE         equ	767	;# 
  6775   000300                     SMT1TMR         equ	768	;# 
  6776   000300                     SMT1TMRL        equ	768	;# 
  6777   000301                     SMT1TMRH        equ	769	;# 
  6778   000302                     SMT1TMRU        equ	770	;# 
  6779   000303                     SMT1CPR         equ	771	;# 
  6780   000303                     SMT1CPRL        equ	771	;# 
  6781   000304                     SMT1CPRH        equ	772	;# 
  6782   000305                     SMT1CPRU        equ	773	;# 
  6783   000306                     SMT1CPW         equ	774	;# 
  6784   000306                     SMT1CPWL        equ	774	;# 
  6785   000307                     SMT1CPWH        equ	775	;# 
  6786   000308                     SMT1CPWU        equ	776	;# 
  6787   000309                     SMT1PR          equ	777	;# 
  6788   000309                     SMT1PRL         equ	777	;# 
  6789   00030A                     SMT1PRH         equ	778	;# 
  6790   00030B                     SMT1PRU         equ	779	;# 
  6791   00030C                     SMT1CON0        equ	780	;# 
  6792   00030D                     SMT1CON1        equ	781	;# 
  6793   00030E                     SMT1STAT        equ	782	;# 
  6794   00030F                     SMT1CLK         equ	783	;# 
  6795   000310                     SMT1SIG         equ	784	;# 
  6796   000311                     SMT1WIN         equ	785	;# 
  6797   000318                     TMR0L           equ	792	;# 
  6798   000318                     TMR0            equ	792	;# 
  6799   000319                     TMR0H           equ	793	;# 
  6800   000319                     PR0             equ	793	;# 
  6801   00031A                     T0CON0          equ	794	;# 
  6802   00031B                     T0CON1          equ	795	;# 
  6803   00031C                     TMR1            equ	796	;# 
  6804   00031C                     TMR1L           equ	796	;# 
  6805   00031D                     TMR1H           equ	797	;# 
  6806   00031E                     T1CON           equ	798	;# 
  6807   00031E                     TMR1CON         equ	798	;# 
  6808   00031F                     T1GCON          equ	799	;# 
  6809   00031F                     TMR1GCON        equ	799	;# 
  6810   000320                     T1GATE          equ	800	;# 
  6811   000320                     TMR1GATE        equ	800	;# 
  6812   000321                     T1CLK           equ	801	;# 
  6813   000321                     TMR1CLK         equ	801	;# 
  6814   000321                     PR1             equ	801	;# 
  6815   000322                     T2TMR           equ	802	;# 
  6816   000322                     TMR2            equ	802	;# 
  6817   000323                     T2PR            equ	803	;# 
  6818   000323                     PR2             equ	803	;# 
  6819   000324                     T2CON           equ	804	;# 
  6820   000325                     T2HLT           equ	805	;# 
  6821   000326                     T2CLKCON        equ	806	;# 
  6822   000326                     T2CLK           equ	806	;# 
  6823   000327                     T2RST           equ	807	;# 
  6824   000328                     TMR3            equ	808	;# 
  6825   000328                     TMR3L           equ	808	;# 
  6826   000329                     TMR3H           equ	809	;# 
  6827   00032A                     T3CON           equ	810	;# 
  6828   00032A                     TMR3CON         equ	810	;# 
  6829   00032B                     T3GCON          equ	811	;# 
  6830   00032B                     TMR3GCON        equ	811	;# 
  6831   00032C                     T3GATE          equ	812	;# 
  6832   00032C                     TMR3GATE        equ	812	;# 
  6833   00032D                     T3CLK           equ	813	;# 
  6834   00032D                     TMR3CLK         equ	813	;# 
  6835   00032D                     PR3             equ	813	;# 
  6836   00032E                     T4TMR           equ	814	;# 
  6837   00032E                     TMR4            equ	814	;# 
  6838   00032F                     T4PR            equ	815	;# 
  6839   00032F                     PR4             equ	815	;# 
  6840   000330                     T4CON           equ	816	;# 
  6841   000331                     T4HLT           equ	817	;# 
  6842   000332                     T4CLKCON        equ	818	;# 
  6843   000332                     T4CLK           equ	818	;# 
  6844   000333                     T4RST           equ	819	;# 
  6845   000334                     TMR5            equ	820	;# 
  6846   000334                     TMR5L           equ	820	;# 
  6847   000335                     TMR5H           equ	821	;# 
  6848   000336                     T5CON           equ	822	;# 
  6849   000336                     TMR5CON         equ	822	;# 
  6850   000337                     T5GCON          equ	823	;# 
  6851   000337                     TMR5GCON        equ	823	;# 
  6852   000338                     T5GATE          equ	824	;# 
  6853   000338                     TMR5GATE        equ	824	;# 
  6854   000339                     T5CLK           equ	825	;# 
  6855   000339                     TMR5CLK         equ	825	;# 
  6856   000339                     PR5             equ	825	;# 
  6857   00033A                     T6TMR           equ	826	;# 
  6858   00033A                     TMR6            equ	826	;# 
  6859   00033B                     T6PR            equ	827	;# 
  6860   00033B                     PR6             equ	827	;# 
  6861   00033C                     T6CON           equ	828	;# 
  6862   00033D                     T6HLT           equ	829	;# 
  6863   00033E                     T6CLKCON        equ	830	;# 
  6864   00033E                     T6CLK           equ	830	;# 
  6865   00033F                     T6RST           equ	831	;# 
  6866   000340                     CCPR1           equ	832	;# 
  6867   000340                     CCPR1L          equ	832	;# 
  6868   000341                     CCPR1H          equ	833	;# 
  6869   000342                     CCP1CON         equ	834	;# 
  6870   000343                     CCP1CAP         equ	835	;# 
  6871   000344                     CCPR2           equ	836	;# 
  6872   000344                     CCPR2L          equ	836	;# 
  6873   000345                     CCPR2H          equ	837	;# 
  6874   000346                     CCP2CON         equ	838	;# 
  6875   000347                     CCP2CAP         equ	839	;# 
  6876   000348                     CCPR3           equ	840	;# 
  6877   000348                     CCPR3L          equ	840	;# 
  6878   000349                     CCPR3H          equ	841	;# 
  6879   00034A                     CCP3CON         equ	842	;# 
  6880   00034B                     CCP3CAP         equ	843	;# 
  6881   00034C                     CCPTMRS0        equ	844	;# 
  6882   00034F                     CRCDATA         equ	847	;# 
  6883   00034F                     CRCDATAL        equ	847	;# 
  6884   000350                     CRCDATAH        equ	848	;# 
  6885   000351                     CRCDATAU        equ	849	;# 
  6886   000352                     CRCDATAT        equ	850	;# 
  6887   000353                     CRCOUT          equ	851	;# 
  6888   000353                     CRCSHFT         equ	851	;# 
  6889   000353                     CRCXOR          equ	851	;# 
  6890   000353                     CRCOUTL         equ	851	;# 
  6891   000353                     CRCSHFTL        equ	851	;# 
  6892   000353                     CRCSHIFTL       equ	851	;# 
  6893   000353                     CRCXORL         equ	851	;# 
  6894   000354                     CRCOUTH         equ	852	;# 
  6895   000354                     CRCSHFTH        equ	852	;# 
  6896   000354                     CRCSHIFTH       equ	852	;# 
  6897   000354                     CRCXORH         equ	852	;# 
  6898   000355                     CRCOUTU         equ	853	;# 
  6899   000355                     CRCSHFTU        equ	853	;# 
  6900   000355                     CRCSHIFTU       equ	853	;# 
  6901   000355                     CRCXORU         equ	853	;# 
  6902   000356                     CRCOUTT         equ	854	;# 
  6903   000356                     CRCSHFTT        equ	854	;# 
  6904   000356                     CRCSHIFTT       equ	854	;# 
  6905   000356                     CRCXORT         equ	854	;# 
  6906   000357                     CRCCON0         equ	855	;# 
  6907   000358                     CRCCON1         equ	856	;# 
  6908   000359                     CRCCON2         equ	857	;# 
  6909   00035A                     SCANLADR        equ	858	;# 
  6910   00035A                     SCANLADRL       equ	858	;# 
  6911   00035B                     SCANLADRH       equ	859	;# 
  6912   00035C                     SCANLADRU       equ	860	;# 
  6913   00035D                     SCANHADR        equ	861	;# 
  6914   00035D                     SCANHADRL       equ	861	;# 
  6915   00035E                     SCANHADRH       equ	862	;# 
  6916   00035F                     SCANHADRU       equ	863	;# 
  6917   000360                     SCANCON0        equ	864	;# 
  6918   000361                     SCANTRIG        equ	865	;# 
  6919   000362                     IPR0            equ	866	;# 
  6920   000363                     IPR1            equ	867	;# 
  6921   000364                     IPR2            equ	868	;# 
  6922   000365                     IPR3            equ	869	;# 
  6923   000366                     IPR4            equ	870	;# 
  6924   000367                     IPR5            equ	871	;# 
  6925   000368                     IPR6            equ	872	;# 
  6926   000369                     IPR7            equ	873	;# 
  6927   00036A                     IPR8            equ	874	;# 
  6928   00036B                     IPR9            equ	875	;# 
  6929   00036C                     IPR10           equ	876	;# 
  6930   00036D                     IPR11           equ	877	;# 
  6931   00036E                     IPR12           equ	878	;# 
  6932   00036F                     IPR13           equ	879	;# 
  6933   000370                     IPR14           equ	880	;# 
  6934   000371                     IPR15           equ	881	;# 
  6935   000373                     STATUS_CSHAD    equ	883	;# 
  6936   000374                     WREG_CSHAD      equ	884	;# 
  6937   000375                     BSR_CSHAD       equ	885	;# 
  6938   000376                     SHADCON         equ	886	;# 
  6939   000377                     STATUS_SHAD     equ	887	;# 
  6940   000378                     WREG_SHAD       equ	888	;# 
  6941   000379                     BSR_SHAD        equ	889	;# 
  6942   00037A                     PCLATH_SHAD     equ	890	;# 
  6943   00037B                     PCLATU_SHAD     equ	891	;# 
  6944   00037C                     FSR0SH          equ	892	;# 
  6945   00037C                     FSR0L_SHAD      equ	892	;# 
  6946   00037D                     FSR0H_SHAD      equ	893	;# 
  6947   00037E                     FSR1SH          equ	894	;# 
  6948   00037E                     FSR1L_SHAD      equ	894	;# 
  6949   00037F                     FSR1H_SHAD      equ	895	;# 
  6950   000380                     FSR2SH          equ	896	;# 
  6951   000380                     FSR2L_SHAD      equ	896	;# 
  6952   000381                     FSR2H_SHAD      equ	897	;# 
  6953   000382                     PRODSH          equ	898	;# 
  6954   000382                     PRODL_SHAD      equ	898	;# 
  6955   000383                     PRODH_SHAD      equ	899	;# 
  6956   000387                     TU16ACON0       equ	903	;# 
  6957   000388                     TU16ACON1       equ	904	;# 
  6958   000389                     TU16AHLT        equ	905	;# 
  6959   00038A                     TU16APS         equ	906	;# 
  6960   00038B                     TU16ATMR        equ	907	;# 
  6961   00038B                     TU16ACR         equ	907	;# 
  6962   00038B                     TU16ATMRL       equ	907	;# 
  6963   00038B                     TU16ACRL        equ	907	;# 
  6964   00038C                     TU16ATMRH       equ	908	;# 
  6965   00038C                     TU16ACRH        equ	908	;# 
  6966   00038D                     TU16APR         equ	909	;# 
  6967   00038D                     TU16APRL        equ	909	;# 
  6968   00038E                     TU16APRH        equ	910	;# 
  6969   00038F                     TU16ACLK        equ	911	;# 
  6970   000390                     TU16AERS        equ	912	;# 
  6971   000393                     TU16BCON0       equ	915	;# 
  6972   000394                     TU16BCON1       equ	916	;# 
  6973   000395                     TU16BHLT        equ	917	;# 
  6974   000396                     TU16BPS         equ	918	;# 
  6975   000397                     TU16BTMR        equ	919	;# 
  6976   000397                     TU16BCR         equ	919	;# 
  6977   000397                     TU16BTMRL       equ	919	;# 
  6978   000397                     TU16BCRL        equ	919	;# 
  6979   000398                     TU16BTMRH       equ	920	;# 
  6980   000398                     TU16BCRH        equ	920	;# 
  6981   000399                     TU16BPR         equ	921	;# 
  6982   000399                     TU16BPRL        equ	921	;# 
  6983   00039A                     TU16BPRH        equ	922	;# 
  6984   00039B                     TU16BCLK        equ	923	;# 
  6985   00039C                     TU16BERS        equ	924	;# 
  6986   0003BB                     TUCHAIN         equ	955	;# 
  6987   0003BC                     CWG1CLK         equ	956	;# 
  6988   0003BC                     CWG1CLKCON      equ	956	;# 
  6989   0003BD                     CWG1ISM         equ	957	;# 
  6990   0003BE                     CWG1DBR         equ	958	;# 
  6991   0003BF                     CWG1DBF         equ	959	;# 
  6992   0003C0                     CWG1CON0        equ	960	;# 
  6993   0003C1                     CWG1CON1        equ	961	;# 
  6994   0003C2                     CWG1AS0         equ	962	;# 
  6995   0003C3                     CWG1AS1         equ	963	;# 
  6996   0003C4                     CWG1STR         equ	964	;# 
  6997   0003C5                     CWG2CLK         equ	965	;# 
  6998   0003C5                     CWG2CLKCON      equ	965	;# 
  6999   0003C6                     CWG2ISM         equ	966	;# 
  7000   0003C7                     CWG2DBR         equ	967	;# 
  7001   0003C8                     CWG2DBF         equ	968	;# 
  7002   0003C9                     CWG2CON0        equ	969	;# 
  7003   0003CA                     CWG2CON1        equ	970	;# 
  7004   0003CB                     CWG2AS0         equ	971	;# 
  7005   0003CC                     CWG2AS1         equ	972	;# 
  7006   0003CD                     CWG2STR         equ	973	;# 
  7007   0003CE                     CWG3CLK         equ	974	;# 
  7008   0003CE                     CWG3CLKCON      equ	974	;# 
  7009   0003CF                     CWG3ISM         equ	975	;# 
  7010   0003D0                     CWG3DBR         equ	976	;# 
  7011   0003D1                     CWG3DBF         equ	977	;# 
  7012   0003D2                     CWG3CON0        equ	978	;# 
  7013   0003D3                     CWG3CON1        equ	979	;# 
  7014   0003D4                     CWG3AS0         equ	980	;# 
  7015   0003D5                     CWG3AS1         equ	981	;# 
  7016   0003D6                     CWG3STR         equ	982	;# 
  7017   0003D7                     FVRCON          equ	983	;# 
  7018   0003D8                     ADCPCON         equ	984	;# 
  7019   0003D8                     ADCP            equ	984	;# 
  7020   0003D9                     ADLTH           equ	985	;# 
  7021   0003D9                     ADLTHL          equ	985	;# 
  7022   0003DA                     ADLTHH          equ	986	;# 
  7023   0003DB                     ADUTH           equ	987	;# 
  7024   0003DB                     ADUTHL          equ	987	;# 
  7025   0003DC                     ADUTHH          equ	988	;# 
  7026   0003DD                     ADERR           equ	989	;# 
  7027   0003DD                     ADERRL          equ	989	;# 
  7028   0003DE                     ADERRH          equ	990	;# 
  7029   0003DF                     ADSTPT          equ	991	;# 
  7030   0003DF                     ADSTPTL         equ	991	;# 
  7031   0003E0                     ADSTPTH         equ	992	;# 
  7032   0003E1                     ADFLTR          equ	993	;# 
  7033   0003E1                     ADFLTRL         equ	993	;# 
  7034   0003E2                     ADFLTRH         equ	994	;# 
  7035   0003E3                     ADACC           equ	995	;# 
  7036   0003E3                     ADACCL          equ	995	;# 
  7037   0003E4                     ADACCH          equ	996	;# 
  7038   0003E5                     ADACCU          equ	997	;# 
  7039   0003E6                     ADCNT           equ	998	;# 
  7040   0003E7                     ADRPT           equ	999	;# 
  7041   0003E8                     ADPREV          equ	1000	;# 
  7042   0003E8                     ADPREVL         equ	1000	;# 
  7043   0003E9                     ADPREVH         equ	1001	;# 
  7044   0003EA                     ADRES           equ	1002	;# 
  7045   0003EA                     ADRESL          equ	1002	;# 
  7046   0003EB                     ADRESH          equ	1003	;# 
  7047   0003EC                     ADPCH           equ	1004	;# 
  7048   0003EE                     ADACQ           equ	1006	;# 
  7049   0003EE                     ADACQL          equ	1006	;# 
  7050   0003EF                     ADACQH          equ	1007	;# 
  7051   0003F0                     ADCAP           equ	1008	;# 
  7052   0003F1                     ADPRE           equ	1009	;# 
  7053   0003F1                     ADPREL          equ	1009	;# 
  7054   0003F2                     ADPREH          equ	1010	;# 
  7055   0003F3                     ADCON0          equ	1011	;# 
  7056   0003F4                     ADCON1          equ	1012	;# 
  7057   0003F5                     ADCON2          equ	1013	;# 
  7058   0003F6                     ADCON3          equ	1014	;# 
  7059   0003F7                     ADSTAT          equ	1015	;# 
  7060   0003F8                     ADREF           equ	1016	;# 
  7061   0003F9                     ADACT           equ	1017	;# 
  7062   0003FA                     ADCLK           equ	1018	;# 
  7063   0003FB                     ADCTX           equ	1019	;# 
  7064   0003FC                     ADCSEL1         equ	1020	;# 
  7065   0003FD                     ADCSEL2         equ	1021	;# 
  7066   0003FE                     ADCSEL3         equ	1022	;# 
  7067   0003FF                     ADCSEL4         equ	1023	;# 
  7068   000400                     ANSELA          equ	1024	;# 
  7069   000401                     WPUA            equ	1025	;# 
  7070   000402                     ODCONA          equ	1026	;# 
  7071   000403                     SLRCONA         equ	1027	;# 
  7072   000404                     INLVLA          equ	1028	;# 
  7073   000405                     IOCAP           equ	1029	;# 
  7074   000406                     IOCAN           equ	1030	;# 
  7075   000407                     IOCAF           equ	1031	;# 
  7076   000408                     ANSELB          equ	1032	;# 
  7077   000409                     WPUB            equ	1033	;# 
  7078   00040A                     ODCONB          equ	1034	;# 
  7079   00040B                     SLRCONB         equ	1035	;# 
  7080   00040C                     INLVLB          equ	1036	;# 
  7081   00040D                     IOCBP           equ	1037	;# 
  7082   00040E                     IOCBN           equ	1038	;# 
  7083   00040F                     IOCBF           equ	1039	;# 
  7084   000410                     ANSELC          equ	1040	;# 
  7085   000411                     WPUC            equ	1041	;# 
  7086   000412                     ODCONC          equ	1042	;# 
  7087   000413                     SLRCONC         equ	1043	;# 
  7088   000414                     INLVLC          equ	1044	;# 
  7089   000415                     IOCCP           equ	1045	;# 
  7090   000416                     IOCCN           equ	1046	;# 
  7091   000417                     IOCCF           equ	1047	;# 
  7092   000421                     WPUE            equ	1057	;# 
  7093   000424                     INLVLE          equ	1060	;# 
  7094   000425                     IOCEP           equ	1061	;# 
  7095   000426                     IOCEN           equ	1062	;# 
  7096   000427                     IOCEF           equ	1063	;# 
  7097   000440                     NCO1ACC         equ	1088	;# 
  7098   000440                     NCO1ACCL        equ	1088	;# 
  7099   000441                     NCO1ACCH        equ	1089	;# 
  7100   000442                     NCO1ACCU        equ	1090	;# 
  7101   000443                     NCO1INC         equ	1091	;# 
  7102   000443                     NCO1INCL        equ	1091	;# 
  7103   000444                     NCO1INCH        equ	1092	;# 
  7104   000445                     NCO1INCU        equ	1093	;# 
  7105   000446                     NCO1CON         equ	1094	;# 
  7106   000447                     NCO1CLK         equ	1095	;# 
  7107   000448                     NCO2ACC         equ	1096	;# 
  7108   000448                     NCO2ACCL        equ	1096	;# 
  7109   000449                     NCO2ACCH        equ	1097	;# 
  7110   00044A                     NCO2ACCU        equ	1098	;# 
  7111   00044B                     NCO2INC         equ	1099	;# 
  7112   00044B                     NCO2INCL        equ	1099	;# 
  7113   00044C                     NCO2INCH        equ	1100	;# 
  7114   00044D                     NCO2INCU        equ	1101	;# 
  7115   00044E                     NCO2CON         equ	1102	;# 
  7116   00044F                     NCO2CLK         equ	1103	;# 
  7117   000450                     NCO3ACC         equ	1104	;# 
  7118   000450                     NCO3ACCL        equ	1104	;# 
  7119   000451                     NCO3ACCH        equ	1105	;# 
  7120   000452                     NCO3ACCU        equ	1106	;# 
  7121   000453                     NCO3INC         equ	1107	;# 
  7122   000453                     NCO3INCL        equ	1107	;# 
  7123   000454                     NCO3INCH        equ	1108	;# 
  7124   000455                     NCO3INCU        equ	1109	;# 
  7125   000456                     NCO3CON         equ	1110	;# 
  7126   000457                     NCO3CLK         equ	1111	;# 
  7127   000458                     FSCMCON         equ	1112	;# 
  7128   000459                     IVTLOCK         equ	1113	;# 
  7129   00045A                     IVTAD           equ	1114	;# 
  7130   00045A                     IVTADL          equ	1114	;# 
  7131   00045B                     IVTADH          equ	1115	;# 
  7132   00045C                     IVTADU          equ	1116	;# 
  7133   00045D                     IVTBASE         equ	1117	;# 
  7134   00045D                     IVTBASEL        equ	1117	;# 
  7135   00045E                     IVTBASEH        equ	1118	;# 
  7136   00045F                     IVTBASEU        equ	1119	;# 
  7137   000460                     PWM1ERS         equ	1120	;# 
  7138   000461                     PWM1CLK         equ	1121	;# 
  7139   000462                     PWM1LDS         equ	1122	;# 
  7140   000463                     PWM1PR          equ	1123	;# 
  7141   000463                     PWM1PRL         equ	1123	;# 
  7142   000464                     PWM1PRH         equ	1124	;# 
  7143   000465                     PWM1CPRE        equ	1125	;# 
  7144   000466                     PWM1PIPOS       equ	1126	;# 
  7145   000467                     PWM1GIR         equ	1127	;# 
  7146   000468                     PWM1GIE         equ	1128	;# 
  7147   000469                     PWM1CON         equ	1129	;# 
  7148   00046A                     PWM1S1CFG       equ	1130	;# 
  7149   00046B                     PWM1S1P1        equ	1131	;# 
  7150   00046B                     PWM1S1P1L       equ	1131	;# 
  7151   00046C                     PWM1S1P1H       equ	1132	;# 
  7152   00046D                     PWM1S1P2        equ	1133	;# 
  7153   00046D                     PWM1S1P2L       equ	1133	;# 
  7154   00046E                     PWM1S1P2H       equ	1134	;# 
  7155   00046F                     PWM2ERS         equ	1135	;# 
  7156   000470                     PWM2CLK         equ	1136	;# 
  7157   000471                     PWM2LDS         equ	1137	;# 
  7158   000472                     PWM2PR          equ	1138	;# 
  7159   000472                     PWM2PRL         equ	1138	;# 
  7160   000473                     PWM2PRH         equ	1139	;# 
  7161   000474                     PWM2CPRE        equ	1140	;# 
  7162   000475                     PWM2PIPOS       equ	1141	;# 
  7163   000476                     PWM2GIR         equ	1142	;# 
  7164   000477                     PWM2GIE         equ	1143	;# 
  7165   000478                     PWM2CON         equ	1144	;# 
  7166   000479                     PWM2S1CFG       equ	1145	;# 
  7167   00047A                     PWM2S1P1        equ	1146	;# 
  7168   00047A                     PWM2S1P1L       equ	1146	;# 
  7169   00047B                     PWM2S1P1H       equ	1147	;# 
  7170   00047C                     PWM2S1P2        equ	1148	;# 
  7171   00047C                     PWM2S1P2L       equ	1148	;# 
  7172   00047D                     PWM2S1P2H       equ	1149	;# 
  7173   00047E                     PWM3ERS         equ	1150	;# 
  7174   00047F                     PWM3CLK         equ	1151	;# 
  7175   000480                     PWM3LDS         equ	1152	;# 
  7176   000481                     PWM3PR          equ	1153	;# 
  7177   000481                     PWM3PRL         equ	1153	;# 
  7178   000482                     PWM3PRH         equ	1154	;# 
  7179   000483                     PWM3CPRE        equ	1155	;# 
  7180   000484                     PWM3PIPOS       equ	1156	;# 
  7181   000485                     PWM3GIR         equ	1157	;# 
  7182   000486                     PWM3GIE         equ	1158	;# 
  7183   000487                     PWM3CON         equ	1159	;# 
  7184   000488                     PWM3S1CFG       equ	1160	;# 
  7185   000489                     PWM3S1P1        equ	1161	;# 
  7186   000489                     PWM3S1P1L       equ	1161	;# 
  7187   00048A                     PWM3S1P1H       equ	1162	;# 
  7188   00048B                     PWM3S1P2        equ	1163	;# 
  7189   00048B                     PWM3S1P2L       equ	1163	;# 
  7190   00048C                     PWM3S1P2H       equ	1164	;# 
  7191   00048D                     PWM4ERS         equ	1165	;# 
  7192   00048E                     PWM4CLK         equ	1166	;# 
  7193   00048F                     PWM4LDS         equ	1167	;# 
  7194   000490                     PWM4PR          equ	1168	;# 
  7195   000490                     PWM4PRL         equ	1168	;# 
  7196   000491                     PWM4PRH         equ	1169	;# 
  7197   000492                     PWM4CPRE        equ	1170	;# 
  7198   000493                     PWM4PIPOS       equ	1171	;# 
  7199   000494                     PWM4GIR         equ	1172	;# 
  7200   000495                     PWM4GIE         equ	1173	;# 
  7201   000496                     PWM4CON         equ	1174	;# 
  7202   000497                     PWM4S1CFG       equ	1175	;# 
  7203   000498                     PWM4S1P1        equ	1176	;# 
  7204   000498                     PWM4S1P1L       equ	1176	;# 
  7205   000499                     PWM4S1P1H       equ	1177	;# 
  7206   00049A                     PWM4S1P2        equ	1178	;# 
  7207   00049A                     PWM4S1P2L       equ	1178	;# 
  7208   00049B                     PWM4S1P2H       equ	1179	;# 
  7209   00049C                     PWMLOAD         equ	1180	;# 
  7210   00049D                     PWMEN           equ	1181	;# 
  7211   00049E                     PIE0            equ	1182	;# 
  7212   00049F                     PIE1            equ	1183	;# 
  7213   0004A0                     PIE2            equ	1184	;# 
  7214   0004A1                     PIE3            equ	1185	;# 
  7215   0004A2                     PIE4            equ	1186	;# 
  7216   0004A3                     PIE5            equ	1187	;# 
  7217   0004A4                     PIE6            equ	1188	;# 
  7218   0004A5                     PIE7            equ	1189	;# 
  7219   0004A6                     PIE8            equ	1190	;# 
  7220   0004A7                     PIE9            equ	1191	;# 
  7221   0004A8                     PIE10           equ	1192	;# 
  7222   0004A9                     PIE11           equ	1193	;# 
  7223   0004AA                     PIE12           equ	1194	;# 
  7224   0004AB                     PIE13           equ	1195	;# 
  7225   0004AC                     PIE14           equ	1196	;# 
  7226   0004AD                     PIE15           equ	1197	;# 
  7227   0004AE                     PIR0            equ	1198	;# 
  7228   0004AF                     PIR1            equ	1199	;# 
  7229   0004B0                     PIR2            equ	1200	;# 
  7230   0004B1                     PIR3            equ	1201	;# 
  7231   0004B2                     PIR4            equ	1202	;# 
  7232   0004B3                     PIR5            equ	1203	;# 
  7233   0004B4                     PIR6            equ	1204	;# 
  7234   0004B5                     PIR7            equ	1205	;# 
  7235   0004B6                     PIR8            equ	1206	;# 
  7236   0004B7                     PIR9            equ	1207	;# 
  7237   0004B8                     PIR10           equ	1208	;# 
  7238   0004B9                     PIR11           equ	1209	;# 
  7239   0004BA                     PIR12           equ	1210	;# 
  7240   0004BB                     PIR13           equ	1211	;# 
  7241   0004BC                     PIR14           equ	1212	;# 
  7242   0004BD                     PIR15           equ	1213	;# 
  7243   0004BE                     LATA            equ	1214	;# 
  7244   0004BF                     LATB            equ	1215	;# 
  7245   0004C0                     LATC            equ	1216	;# 
  7246   0004C6                     TRISA           equ	1222	;# 
  7247   0004C7                     TRISB           equ	1223	;# 
  7248   0004C8                     TRISC           equ	1224	;# 
  7249   0004CA                     TRISE           equ	1226	;# 
  7250   0004CE                     PORTA           equ	1230	;# 
  7251   0004CF                     PORTB           equ	1231	;# 
  7252   0004D0                     PORTC           equ	1232	;# 
  7253   0004D2                     PORTE           equ	1234	;# 
  7254   0004D6                     INTCON0         equ	1238	;# 
  7255   0004D7                     INTCON1         equ	1239	;# 
  7256   0004D8                     STATUS          equ	1240	;# 
  7257   0004D9                     FSR2            equ	1241	;# 
  7258   0004D9                     FSR2L           equ	1241	;# 
  7259   0004DA                     FSR2H           equ	1242	;# 
  7260   0004DB                     PLUSW2          equ	1243	;# 
  7261   0004DC                     PREINC2         equ	1244	;# 
  7262   0004DD                     POSTDEC2        equ	1245	;# 
  7263   0004DE                     POSTINC2        equ	1246	;# 
  7264   0004DF                     INDF2           equ	1247	;# 
  7265   0004E0                     BSR             equ	1248	;# 
  7266   0004E1                     FSR1            equ	1249	;# 
  7267   0004E1                     FSR1L           equ	1249	;# 
  7268   0004E2                     FSR1H           equ	1250	;# 
  7269   0004E3                     PLUSW1          equ	1251	;# 
  7270   0004E4                     PREINC1         equ	1252	;# 
  7271   0004E5                     POSTDEC1        equ	1253	;# 
  7272   0004E6                     POSTINC1        equ	1254	;# 
  7273   0004E7                     INDF1           equ	1255	;# 
  7274   0004E8                     WREG            equ	1256	;# 
  7275   0004E9                     FSR0            equ	1257	;# 
  7276   0004E9                     FSR0L           equ	1257	;# 
  7277   0004EA                     FSR0H           equ	1258	;# 
  7278   0004EB                     PLUSW0          equ	1259	;# 
  7279   0004EC                     PREINC0         equ	1260	;# 
  7280   0004ED                     POSTDEC0        equ	1261	;# 
  7281   0004EE                     POSTINC0        equ	1262	;# 
  7282   0004EF                     INDF0           equ	1263	;# 
  7283   0004F0                     PCON0           equ	1264	;# 
  7284   0004F1                     PCON1           equ	1265	;# 
  7285   0004F2                     CPUDOZE         equ	1266	;# 
  7286   0004F3                     PROD            equ	1267	;# 
  7287   0004F3                     PRODL           equ	1267	;# 
  7288   0004F4                     PRODH           equ	1268	;# 
  7289   0004F5                     TABLAT          equ	1269	;# 
  7290   0004F6                     TBLPTR          equ	1270	;# 
  7291   0004F6                     TBLPTRL         equ	1270	;# 
  7292   0004F7                     TBLPTRH         equ	1271	;# 
  7293   0004F8                     TBLPTRU         equ	1272	;# 
  7294   0004F9                     PCLAT           equ	1273	;# 
  7295   0004F9                     PCL             equ	1273	;# 
  7296   0004FA                     PCLATH          equ	1274	;# 
  7297   0004FB                     PCLATU          equ	1275	;# 
  7298   0004FC                     STKPTR          equ	1276	;# 
  7299   0004FD                     TOS             equ	1277	;# 
  7300   0004FD                     TOSL            equ	1277	;# 
  7301   0004FE                     TOSH            equ	1278	;# 
  7302   0004FF                     TOSU            equ	1279	;# 
  7303   000038                     BOOTREG         equ	56	;# 
  7304   000039                     CLKRCON         equ	57	;# 
  7305   00003A                     CLKRCLK         equ	58	;# 
  7306   000040                     NVMCON0         equ	64	;# 
  7307   000041                     NVMCON1         equ	65	;# 
  7308   000042                     NVMLOCK         equ	66	;# 
  7309   000043                     NVMADR          equ	67	;# 
  7310   000043                     NVMADRL         equ	67	;# 
  7311   000044                     NVMADRH         equ	68	;# 
  7312   000045                     NVMADRU         equ	69	;# 
  7313   000046                     NVMDAT          equ	70	;# 
  7314   000046                     NVMDATL         equ	70	;# 
  7315   000047                     NVMDATH         equ	71	;# 
  7316   000048                     VREGCON         equ	72	;# 
  7317   000049                     BORCON          equ	73	;# 
  7318   00004A                     HLVDCON0        equ	74	;# 
  7319   00004B                     HLVDCON1        equ	75	;# 
  7320   00004C                     ZCDCON          equ	76	;# 
  7321   000060                     PMD0            equ	96	;# 
  7322   000061                     PMD1            equ	97	;# 
  7323   000062                     PMD2            equ	98	;# 
  7324   000063                     PMD3            equ	99	;# 
  7325   000064                     PMD4            equ	100	;# 
  7326   000065                     PMD5            equ	101	;# 
  7327   000066                     PMD6            equ	102	;# 
  7328   000067                     PMD7            equ	103	;# 
  7329   000068                     PMD8            equ	104	;# 
  7330   00006A                     MD1CON0         equ	106	;# 
  7331   00006B                     MD1CON1         equ	107	;# 
  7332   00006C                     MD1SRC          equ	108	;# 
  7333   00006D                     MD1CARL         equ	109	;# 
  7334   00006E                     MD1CARH         equ	110	;# 
  7335   00006F                     CMOUT           equ	111	;# 
  7336   000070                     CM1CON0         equ	112	;# 
  7337   000071                     CM1CON1         equ	113	;# 
  7338   000072                     CM1NCH          equ	114	;# 
  7339   000073                     CM1PCH          equ	115	;# 
  7340   000074                     CM2CON0         equ	116	;# 
  7341   000075                     CM2CON1         equ	117	;# 
  7342   000076                     CM2NCH          equ	118	;# 
  7343   000077                     CM2PCH          equ	119	;# 
  7344   000078                     WDTCON0         equ	120	;# 
  7345   000079                     WDTCON1         equ	121	;# 
  7346   00007A                     WDTPSL          equ	122	;# 
  7347   00007B                     WDTPSH          equ	123	;# 
  7348   00007C                     WDTTMR          equ	124	;# 
  7349   00007D                     DAC1DAT         equ	125	;# 
  7350   00007D                     DAC1DATL        equ	125	;# 
  7351   00007F                     DAC1CON         equ	127	;# 
  7352   000080                     SPI1RXB         equ	128	;# 
  7353   000081                     SPI1TXB         equ	129	;# 
  7354   000082                     SPI1TCNT        equ	130	;# 
  7355   000082                     SPI1TCNTL       equ	130	;# 
  7356   000083                     SPI1TCNTH       equ	131	;# 
  7357   000084                     SPI1CON0        equ	132	;# 
  7358   000085                     SPI1CON1        equ	133	;# 
  7359   000086                     SPI1CON2        equ	134	;# 
  7360   000087                     SPI1STATUS      equ	135	;# 
  7361   000088                     SPI1TWIDTH      equ	136	;# 
  7362   000089                     SPI1BAUD        equ	137	;# 
  7363   00008A                     SPI1INTF        equ	138	;# 
  7364   00008B                     SPI1INTE        equ	139	;# 
  7365   00008C                     SPI1CLK         equ	140	;# 
  7366   00008D                     SPI2RXB         equ	141	;# 
  7367   00008E                     SPI2TXB         equ	142	;# 
  7368   00008F                     SPI2TCNT        equ	143	;# 
  7369   00008F                     SPI2TCNTL       equ	143	;# 
  7370   000090                     SPI2TCNTH       equ	144	;# 
  7371   000091                     SPI2CON0        equ	145	;# 
  7372   000092                     SPI2CON1        equ	146	;# 
  7373   000093                     SPI2CON2        equ	147	;# 
  7374   000094                     SPI2STATUS      equ	148	;# 
  7375   000095                     SPI2TWIDTH      equ	149	;# 
  7376   000096                     SPI2BAUD        equ	150	;# 
  7377   000097                     SPI2INTF        equ	151	;# 
  7378   000098                     SPI2INTE        equ	152	;# 
  7379   000099                     SPI2CLK         equ	153	;# 
  7380   0000AC                     ACTCON          equ	172	;# 
  7381   0000AD                     OSCCON1         equ	173	;# 
  7382   0000AE                     OSCCON2         equ	174	;# 
  7383   0000AF                     OSCCON3         equ	175	;# 
  7384   0000B0                     OSCTUNE         equ	176	;# 
  7385   0000B1                     OSCFRQ          equ	177	;# 
  7386   0000B1                     OSCFREQ         equ	177	;# 
  7387   0000B2                     OSCSTAT         equ	178	;# 
  7388   0000B2                     OSCSTAT1        equ	178	;# 
  7389   0000B3                     OSCEN           equ	179	;# 
  7390   0000B4                     PRLOCK          equ	180	;# 
  7391   0000B5                     SCANPR          equ	181	;# 
  7392   0000B6                     DMA1PR          equ	182	;# 
  7393   0000B7                     DMA2PR          equ	183	;# 
  7394   0000B8                     DMA3PR          equ	184	;# 
  7395   0000B9                     DMA4PR          equ	185	;# 
  7396   0000BA                     DMA5PR          equ	186	;# 
  7397   0000BB                     DMA6PR          equ	187	;# 
  7398   0000BC                     DMA7PR          equ	188	;# 
  7399   0000BD                     DMA8PR          equ	189	;# 
  7400   0000BE                     MAINPR          equ	190	;# 
  7401   0000BF                     ISRPR           equ	191	;# 
  7402   0000D4                     CLCDATA         equ	212	;# 
  7403   0000D5                     CLCSELECT       equ	213	;# 
  7404   0000D6                     CLCnCON         equ	214	;# 
  7405   0000D7                     CLCnPOL         equ	215	;# 
  7406   0000D8                     CLCnSEL0        equ	216	;# 
  7407   0000D9                     CLCnSEL1        equ	217	;# 
  7408   0000DA                     CLCnSEL2        equ	218	;# 
  7409   0000DB                     CLCnSEL3        equ	219	;# 
  7410   0000DC                     CLCnGLS0        equ	220	;# 
  7411   0000DD                     CLCnGLS1        equ	221	;# 
  7412   0000DE                     CLCnGLS2        equ	222	;# 
  7413   0000DF                     CLCnGLS3        equ	223	;# 
  7414   0000E8                     DMASELECT       equ	232	;# 
  7415   0000E9                     DMAnBUF         equ	233	;# 
  7416   0000EA                     DMAnDCNT        equ	234	;# 
  7417   0000EA                     DMAnDCNTL       equ	234	;# 
  7418   0000EB                     DMAnDCNTH       equ	235	;# 
  7419   0000EC                     DMAnDPTR        equ	236	;# 
  7420   0000EC                     DMAnDPTRL       equ	236	;# 
  7421   0000ED                     DMAnDPTRH       equ	237	;# 
  7422   0000EE                     DMAnDSZ         equ	238	;# 
  7423   0000EE                     DMAnDSZL        equ	238	;# 
  7424   0000EF                     DMAnDSZH        equ	239	;# 
  7425   0000F0                     DMAnDSA         equ	240	;# 
  7426   0000F0                     DMAnDSAL        equ	240	;# 
  7427   0000F1                     DMAnDSAH        equ	241	;# 
  7428   0000F2                     DMAnSCNT        equ	242	;# 
  7429   0000F2                     DMAnSCNTL       equ	242	;# 
  7430   0000F3                     DMAnSCNTH       equ	243	;# 
  7431   0000F4                     DMAnSPTR        equ	244	;# 
  7432   0000F4                     DMAnSPTRL       equ	244	;# 
  7433   0000F5                     DMAnSPTRH       equ	245	;# 
  7434   0000F6                     DMAnSPTRU       equ	246	;# 
  7435   0000F7                     DMAnSSZ         equ	247	;# 
  7436   0000F7                     DMAnSSZL        equ	247	;# 
  7437   0000F8                     DMAnSSZH        equ	248	;# 
  7438   0000F9                     DMAnSSA         equ	249	;# 
  7439   0000F9                     DMAnSSAL        equ	249	;# 
  7440   0000FA                     DMAnSSAH        equ	250	;# 
  7441   0000FB                     DMAnSSAU        equ	251	;# 
  7442   0000FC                     DMAnCON0        equ	252	;# 
  7443   0000FD                     DMAnCON1        equ	253	;# 
  7444   0000FE                     DMAnAIRQ        equ	254	;# 
  7445   0000FF                     DMAnSIRQ        equ	255	;# 
  7446   000100                     C1CONL          equ	256	;# 
  7447   000101                     C1CONH          equ	257	;# 
  7448   000102                     C1CONU          equ	258	;# 
  7449   000103                     C1CONT          equ	259	;# 
  7450   000104                     C1NBTCFGL       equ	260	;# 
  7451   000105                     C1NBTCFGH       equ	261	;# 
  7452   000106                     C1NBTCFGU       equ	262	;# 
  7453   000107                     C1NBTCFGT       equ	263	;# 
  7454   000108                     C1DBTCFGL       equ	264	;# 
  7455   000109                     C1DBTCFGH       equ	265	;# 
  7456   00010A                     C1DBTCFGU       equ	266	;# 
  7457   00010B                     C1DBTCFGT       equ	267	;# 
  7458   00010C                     C1TDCL          equ	268	;# 
  7459   00010D                     C1TDCH          equ	269	;# 
  7460   00010E                     C1TDCU          equ	270	;# 
  7461   000110                     C1TBC           equ	272	;# 
  7462   000110                     C1TBCL          equ	272	;# 
  7463   000111                     C1TBCH          equ	273	;# 
  7464   000112                     C1TBCU          equ	274	;# 
  7465   000113                     C1TBCT          equ	275	;# 
  7466   000114                     C1TSCONL        equ	276	;# 
  7467   000115                     C1TSCONH        equ	277	;# 
  7468   000116                     C1TSCONU        equ	278	;# 
  7469   000117                     C1TSCONT        equ	279	;# 
  7470   000118                     C1VECL          equ	280	;# 
  7471   000119                     C1VECH          equ	281	;# 
  7472   00011A                     C1VECU          equ	282	;# 
  7473   00011B                     C1VECT          equ	283	;# 
  7474   00011C                     C1INTL          equ	284	;# 
  7475   00011D                     C1INTH          equ	285	;# 
  7476   00011E                     C1INTU          equ	286	;# 
  7477   00011F                     C1INTT          equ	287	;# 
  7478   000120                     C1RXIF          equ	288	;# 
  7479   000120                     C1RXIFL         equ	288	;# 
  7480   000121                     C1RXIFH         equ	289	;# 
  7481   000122                     C1RXIFU         equ	290	;# 
  7482   000123                     C1RXIFT         equ	291	;# 
  7483   000124                     C1TXIF          equ	292	;# 
  7484   000124                     C1TXIFL         equ	292	;# 
  7485   000125                     C1TXIFH         equ	293	;# 
  7486   000126                     C1TXIFU         equ	294	;# 
  7487   000127                     C1TXIFT         equ	295	;# 
  7488   000128                     C1RXOVIF        equ	296	;# 
  7489   000128                     C1RXOVIFL       equ	296	;# 
  7490   000129                     C1RXOVIFH       equ	297	;# 
  7491   00012A                     C1RXOVIFU       equ	298	;# 
  7492   00012B                     C1RXOVIFT       equ	299	;# 
  7493   00012C                     C1TXATIF        equ	300	;# 
  7494   00012C                     C1TXATIFL       equ	300	;# 
  7495   00012D                     C1TXATIFH       equ	301	;# 
  7496   00012E                     C1TXATIFU       equ	302	;# 
  7497   00012F                     C1TXATIFT       equ	303	;# 
  7498   000130                     C1TXREQ         equ	304	;# 
  7499   000130                     C1TXREQL        equ	304	;# 
  7500   000131                     C1TXREQH        equ	305	;# 
  7501   000132                     C1TXREQU        equ	306	;# 
  7502   000133                     C1TXREQT        equ	307	;# 
  7503   000134                     C1TRECL         equ	308	;# 
  7504   000135                     C1TRECH         equ	309	;# 
  7505   000136                     C1TRECU         equ	310	;# 
  7506   000137                     C1TRECT         equ	311	;# 
  7507   000138                     C1BDIAG0L       equ	312	;# 
  7508   000139                     C1BDIAG0H       equ	313	;# 
  7509   00013C                     C1BDIAG1L       equ	316	;# 
  7510   00013D                     C1BDIAG1H       equ	317	;# 
  7511   00013E                     C1BDIAG1U       equ	318	;# 
  7512   00013F                     C1BDIAG1T       equ	319	;# 
  7513   000140                     C1TEFCONL       equ	320	;# 
  7514   000141                     C1TEFCONH       equ	321	;# 
  7515   000142                     C1TEFCONU       equ	322	;# 
  7516   000143                     C1TEFCONT       equ	323	;# 
  7517   000144                     C1TEFSTAL       equ	324	;# 
  7518   000145                     C1TEFSTAH       equ	325	;# 
  7519   000146                     C1TEFSTAU       equ	326	;# 
  7520   000147                     C1TEFSTAT       equ	327	;# 
  7521   000148                     C1TEFUA         equ	328	;# 
  7522   000148                     C1TEFUAL        equ	328	;# 
  7523   000149                     C1TEFUAH        equ	329	;# 
  7524   00014A                     C1TEFUAU        equ	330	;# 
  7525   00014B                     C1TEFUAT        equ	331	;# 
  7526   00014C                     C1FIFOBA        equ	332	;# 
  7527   00014C                     C1FIFOBAL       equ	332	;# 
  7528   00014D                     C1FIFOBAH       equ	333	;# 
  7529   00014E                     C1FIFOBAU       equ	334	;# 
  7530   00014F                     C1FIFOBAT       equ	335	;# 
  7531   000150                     C1TXQCONL       equ	336	;# 
  7532   000151                     C1TXQCONH       equ	337	;# 
  7533   000152                     C1TXQCONU       equ	338	;# 
  7534   000153                     C1TXQCONT       equ	339	;# 
  7535   000154                     C1TXQSTAL       equ	340	;# 
  7536   000155                     C1TXQSTAH       equ	341	;# 
  7537   000156                     C1TXQSTAU       equ	342	;# 
  7538   000157                     C1TXQSTAT       equ	343	;# 
  7539   000158                     C1TXQUA         equ	344	;# 
  7540   000158                     C1TXQUAL        equ	344	;# 
  7541   000159                     C1TXQUAH        equ	345	;# 
  7542   00015A                     C1TXQUAU        equ	346	;# 
  7543   00015B                     C1TXQUAT        equ	347	;# 
  7544   00015C                     C1FIFOCON1      equ	348	;# 
  7545   00015C                     C1FIFOCON1L     equ	348	;# 
  7546   00015D                     C1FIFOCON1H     equ	349	;# 
  7547   00015E                     C1FIFOCON1U     equ	350	;# 
  7548   00015F                     C1FIFOCON1T     equ	351	;# 
  7549   000160                     C1FIFOSTA1      equ	352	;# 
  7550   000160                     C1FIFOSTA1L     equ	352	;# 
  7551   000161                     C1FIFOSTA1H     equ	353	;# 
  7552   000162                     C1FIFOSTA1U     equ	354	;# 
  7553   000163                     C1FIFOSTA1T     equ	355	;# 
  7554   000164                     C1FIFOUA1       equ	356	;# 
  7555   000164                     C1FIFOUA1L      equ	356	;# 
  7556   000165                     C1FIFOUA1H      equ	357	;# 
  7557   000166                     C1FIFOUA1U      equ	358	;# 
  7558   000167                     C1FIFOUA1T      equ	359	;# 
  7559   000168                     C1FIFOCON2      equ	360	;# 
  7560   000168                     C1FIFOCON2L     equ	360	;# 
  7561   000169                     C1FIFOCON2H     equ	361	;# 
  7562   00016A                     C1FIFOCON2U     equ	362	;# 
  7563   00016B                     C1FIFOCON2T     equ	363	;# 
  7564   00016C                     C1FIFOSTA2      equ	364	;# 
  7565   00016C                     C1FIFOSTA2L     equ	364	;# 
  7566   00016D                     C1FIFOSTA2H     equ	365	;# 
  7567   00016E                     C1FIFOSTA2U     equ	366	;# 
  7568   00016F                     C1FIFOSTA2T     equ	367	;# 
  7569   000170                     C1FIFOUA2       equ	368	;# 
  7570   000170                     C1FIFOUA2L      equ	368	;# 
  7571   000171                     C1FIFOUA2H      equ	369	;# 
  7572   000172                     C1FIFOUA2U      equ	370	;# 
  7573   000173                     C1FIFOUA2T      equ	371	;# 
  7574   000174                     C1FIFOCON3      equ	372	;# 
  7575   000174                     C1FIFOCON3L     equ	372	;# 
  7576   000175                     C1FIFOCON3H     equ	373	;# 
  7577   000176                     C1FIFOCON3U     equ	374	;# 
  7578   000177                     C1FIFOCON3T     equ	375	;# 
  7579   000178                     C1FIFOSTA3      equ	376	;# 
  7580   000178                     C1FIFOSTA3L     equ	376	;# 
  7581   000179                     C1FIFOSTA3H     equ	377	;# 
  7582   00017A                     C1FIFOSTA3U     equ	378	;# 
  7583   00017B                     C1FIFOSTA3T     equ	379	;# 
  7584   00017C                     C1FIFOUA3       equ	380	;# 
  7585   00017C                     C1FIFOUA3L      equ	380	;# 
  7586   00017D                     C1FIFOUA3H      equ	381	;# 
  7587   00017E                     C1FIFOUA3U      equ	382	;# 
  7588   00017F                     C1FIFOUA3T      equ	383	;# 
  7589   000180                     C1FLTCON0L      equ	384	;# 
  7590   000181                     C1FLTCON0H      equ	385	;# 
  7591   000182                     C1FLTCON0U      equ	386	;# 
  7592   000183                     C1FLTCON0T      equ	387	;# 
  7593   000184                     C1FLTCON1L      equ	388	;# 
  7594   000185                     C1FLTCON1H      equ	389	;# 
  7595   000186                     C1FLTCON1U      equ	390	;# 
  7596   000187                     C1FLTCON1T      equ	391	;# 
  7597   000188                     C1FLTCON2L      equ	392	;# 
  7598   000189                     C1FLTCON2H      equ	393	;# 
  7599   00018A                     C1FLTCON2U      equ	394	;# 
  7600   00018B                     C1FLTCON2T      equ	395	;# 
  7601   00018C                     C1FLTOBJ0       equ	396	;# 
  7602   00018C                     C1FLTOBJ0L      equ	396	;# 
  7603   00018D                     C1FLTOBJ0H      equ	397	;# 
  7604   00018E                     C1FLTOBJ0U      equ	398	;# 
  7605   00018F                     C1FLTOBJ0T      equ	399	;# 
  7606   000190                     C1MASK0         equ	400	;# 
  7607   000190                     C1MASK0L        equ	400	;# 
  7608   000191                     C1MASK0H        equ	401	;# 
  7609   000192                     C1MASK0U        equ	402	;# 
  7610   000193                     C1MASK0T        equ	403	;# 
  7611   000194                     C1FLTOBJ1       equ	404	;# 
  7612   000194                     C1FLTOBJ1L      equ	404	;# 
  7613   000195                     C1FLTOBJ1H      equ	405	;# 
  7614   000196                     C1FLTOBJ1U      equ	406	;# 
  7615   000197                     C1FLTOBJ1T      equ	407	;# 
  7616   000198                     C1MASK1         equ	408	;# 
  7617   000198                     C1MASK1L        equ	408	;# 
  7618   000199                     C1MASK1H        equ	409	;# 
  7619   00019A                     C1MASK1U        equ	410	;# 
  7620   00019B                     C1MASK1T        equ	411	;# 
  7621   00019C                     C1FLTOBJ2       equ	412	;# 
  7622   00019C                     C1FLTOBJ2L      equ	412	;# 
  7623   00019D                     C1FLTOBJ2H      equ	413	;# 
  7624   00019E                     C1FLTOBJ2U      equ	414	;# 
  7625   00019F                     C1FLTOBJ2T      equ	415	;# 
  7626   0001A0                     C1MASK2         equ	416	;# 
  7627   0001A0                     C1MASK2L        equ	416	;# 
  7628   0001A1                     C1MASK2H        equ	417	;# 
  7629   0001A2                     C1MASK2U        equ	418	;# 
  7630   0001A3                     C1MASK2T        equ	419	;# 
  7631   0001A4                     C1FLTOBJ3       equ	420	;# 
  7632   0001A4                     C1FLTOBJ3L      equ	420	;# 
  7633   0001A5                     C1FLTOBJ3H      equ	421	;# 
  7634   0001A6                     C1FLTOBJ3U      equ	422	;# 
  7635   0001A7                     C1FLTOBJ3T      equ	423	;# 
  7636   0001A8                     C1MASK3         equ	424	;# 
  7637   0001A8                     C1MASK3L        equ	424	;# 
  7638   0001A9                     C1MASK3H        equ	425	;# 
  7639   0001AA                     C1MASK3U        equ	426	;# 
  7640   0001AB                     C1MASK3T        equ	427	;# 
  7641   0001AC                     C1FLTOBJ4       equ	428	;# 
  7642   0001AC                     C1FLTOBJ4L      equ	428	;# 
  7643   0001AD                     C1FLTOBJ4H      equ	429	;# 
  7644   0001AE                     C1FLTOBJ4U      equ	430	;# 
  7645   0001AF                     C1FLTOBJ4T      equ	431	;# 
  7646   0001B0                     C1MASK4         equ	432	;# 
  7647   0001B0                     C1MASK4L        equ	432	;# 
  7648   0001B1                     C1MASK4H        equ	433	;# 
  7649   0001B2                     C1MASK4U        equ	434	;# 
  7650   0001B3                     C1MASK4T        equ	435	;# 
  7651   0001B4                     C1FLTOBJ5       equ	436	;# 
  7652   0001B4                     C1FLTOBJ5L      equ	436	;# 
  7653   0001B5                     C1FLTOBJ5H      equ	437	;# 
  7654   0001B6                     C1FLTOBJ5U      equ	438	;# 
  7655   0001B7                     C1FLTOBJ5T      equ	439	;# 
  7656   0001B8                     C1MASK5         equ	440	;# 
  7657   0001B8                     C1MASK5L        equ	440	;# 
  7658   0001B9                     C1MASK5H        equ	441	;# 
  7659   0001BA                     C1MASK5U        equ	442	;# 
  7660   0001BB                     C1MASK5T        equ	443	;# 
  7661   0001BC                     C1FLTOBJ6       equ	444	;# 
  7662   0001BC                     C1FLTOBJ6L      equ	444	;# 
  7663   0001BD                     C1FLTOBJ6H      equ	445	;# 
  7664   0001BE                     C1FLTOBJ6U      equ	446	;# 
  7665   0001BF                     C1FLTOBJ6T      equ	447	;# 
  7666   0001C0                     C1MASK6         equ	448	;# 
  7667   0001C0                     C1MASK6L        equ	448	;# 
  7668   0001C1                     C1MASK6H        equ	449	;# 
  7669   0001C2                     C1MASK6U        equ	450	;# 
  7670   0001C3                     C1MASK6T        equ	451	;# 
  7671   0001C4                     C1FLTOBJ7       equ	452	;# 
  7672   0001C4                     C1FLTOBJ7L      equ	452	;# 
  7673   0001C5                     C1FLTOBJ7H      equ	453	;# 
  7674   0001C6                     C1FLTOBJ7U      equ	454	;# 
  7675   0001C7                     C1FLTOBJ7T      equ	455	;# 
  7676   0001C8                     C1MASK7         equ	456	;# 
  7677   0001C8                     C1MASK7L        equ	456	;# 
  7678   0001C9                     C1MASK7H        equ	457	;# 
  7679   0001CA                     C1MASK7U        equ	458	;# 
  7680   0001CB                     C1MASK7T        equ	459	;# 
  7681   0001CC                     C1FLTOBJ8       equ	460	;# 
  7682   0001CC                     C1FLTOBJ8L      equ	460	;# 
  7683   0001CD                     C1FLTOBJ8H      equ	461	;# 
  7684   0001CE                     C1FLTOBJ8U      equ	462	;# 
  7685   0001CF                     C1FLTOBJ8T      equ	463	;# 
  7686   0001D0                     C1MASK8         equ	464	;# 
  7687   0001D0                     C1MASK8L        equ	464	;# 
  7688   0001D1                     C1MASK8H        equ	465	;# 
  7689   0001D2                     C1MASK8U        equ	466	;# 
  7690   0001D3                     C1MASK8T        equ	467	;# 
  7691   0001D4                     C1FLTOBJ9       equ	468	;# 
  7692   0001D4                     C1FLTOBJ9L      equ	468	;# 
  7693   0001D5                     C1FLTOBJ9H      equ	469	;# 
  7694   0001D6                     C1FLTOBJ9U      equ	470	;# 
  7695   0001D7                     C1FLTOBJ9T      equ	471	;# 
  7696   0001D8                     C1MASK9         equ	472	;# 
  7697   0001D8                     C1MASK9L        equ	472	;# 
  7698   0001D9                     C1MASK9H        equ	473	;# 
  7699   0001DA                     C1MASK9U        equ	474	;# 
  7700   0001DB                     C1MASK9T        equ	475	;# 
  7701   0001DC                     C1FLTOBJ10      equ	476	;# 
  7702   0001DC                     C1FLTOBJ10L     equ	476	;# 
  7703   0001DD                     C1FLTOBJ10H     equ	477	;# 
  7704   0001DE                     C1FLTOBJ10U     equ	478	;# 
  7705   0001DF                     C1FLTOBJ10T     equ	479	;# 
  7706   0001E0                     C1MASK10        equ	480	;# 
  7707   0001E0                     C1MASK10L       equ	480	;# 
  7708   0001E1                     C1MASK10H       equ	481	;# 
  7709   0001E2                     C1MASK10U       equ	482	;# 
  7710   0001E3                     C1MASK10T       equ	483	;# 
  7711   0001E4                     C1FLTOBJ11      equ	484	;# 
  7712   0001E4                     C1FLTOBJ11L     equ	484	;# 
  7713   0001E5                     C1FLTOBJ11H     equ	485	;# 
  7714   0001E6                     C1FLTOBJ11U     equ	486	;# 
  7715   0001E7                     C1FLTOBJ11T     equ	487	;# 
  7716   0001E8                     C1MASK11        equ	488	;# 
  7717   0001E8                     C1MASK11L       equ	488	;# 
  7718   0001E9                     C1MASK11H       equ	489	;# 
  7719   0001EA                     C1MASK11U       equ	490	;# 
  7720   0001EB                     C1MASK11T       equ	491	;# 
  7721   000200                     PPSLOCK         equ	512	;# 
  7722   000201                     RA0PPS          equ	513	;# 
  7723   000202                     RA1PPS          equ	514	;# 
  7724   000203                     RA2PPS          equ	515	;# 
  7725   000204                     RA3PPS          equ	516	;# 
  7726   000205                     RA4PPS          equ	517	;# 
  7727   000206                     RA5PPS          equ	518	;# 
  7728   000207                     RA6PPS          equ	519	;# 
  7729   000208                     RA7PPS          equ	520	;# 
  7730   000209                     RB0PPS          equ	521	;# 
  7731   00020A                     RB1PPS          equ	522	;# 
  7732   00020B                     RB2PPS          equ	523	;# 
  7733   00020C                     RB3PPS          equ	524	;# 
  7734   00020D                     RB4PPS          equ	525	;# 
  7735   00020E                     RB5PPS          equ	526	;# 
  7736   00020F                     RB6PPS          equ	527	;# 
  7737   000210                     RB7PPS          equ	528	;# 
  7738   000211                     RC0PPS          equ	529	;# 
  7739   000212                     RC1PPS          equ	530	;# 
  7740   000213                     RC2PPS          equ	531	;# 
  7741   000214                     RC3PPS          equ	532	;# 
  7742   000215                     RC4PPS          equ	533	;# 
  7743   000216                     RC5PPS          equ	534	;# 
  7744   000217                     RC6PPS          equ	535	;# 
  7745   000218                     RC7PPS          equ	536	;# 
  7746   00023D                     CANRXPPS        equ	573	;# 
  7747   00023E                     INT0PPS         equ	574	;# 
  7748   00023F                     INT1PPS         equ	575	;# 
  7749   000240                     INT2PPS         equ	576	;# 
  7750   000241                     T0CKIPPS        equ	577	;# 
  7751   000242                     T1CKIPPS        equ	578	;# 
  7752   000243                     T1GPPS          equ	579	;# 
  7753   000244                     T3CKIPPS        equ	580	;# 
  7754   000245                     T3GPPS          equ	581	;# 
  7755   000246                     T5CKIPPS        equ	582	;# 
  7756   000247                     T5GPPS          equ	583	;# 
  7757   000248                     T2INPPS         equ	584	;# 
  7758   000249                     T4INPPS         equ	585	;# 
  7759   00024A                     T6INPPS         equ	586	;# 
  7760   00024B                     TUIN0PPS        equ	587	;# 
  7761   00024C                     TUIN1PPS        equ	588	;# 
  7762   00024F                     CCP1PPS         equ	591	;# 
  7763   000250                     CCP2PPS         equ	592	;# 
  7764   000251                     CCP3PPS         equ	593	;# 
  7765   000253                     PWM1ERSPPS      equ	595	;# 
  7766   000254                     PWM2ERSPPS      equ	596	;# 
  7767   000255                     PWM3ERSPPS      equ	597	;# 
  7768   000256                     PWM4ERSPPS      equ	598	;# 
  7769   000257                     PWMIN0PPS       equ	599	;# 
  7770   000258                     PWMIN1PPS       equ	600	;# 
  7771   000259                     SMT1WINPPS      equ	601	;# 
  7772   00025A                     SMT1SIGPPS      equ	602	;# 
  7773   00025B                     CWG1PPS         equ	603	;# 
  7774   00025B                     CWG1INPPS       equ	603	;# 
  7775   00025C                     CWG2PPS         equ	604	;# 
  7776   00025C                     CWG2INPPS       equ	604	;# 
  7777   00025D                     CWG3PPS         equ	605	;# 
  7778   00025D                     CWG3INPPS       equ	605	;# 
  7779   00025E                     MD1CARLPPS      equ	606	;# 
  7780   00025E                     MDCARLPPS       equ	606	;# 
  7781   00025F                     MD1CARHPPS      equ	607	;# 
  7782   00025F                     MDCARHPPS       equ	607	;# 
  7783   000260                     MD1SRCPPS       equ	608	;# 
  7784   000260                     MDSRCPPS        equ	608	;# 
  7785   000261                     CLCIN0PPS       equ	609	;# 
  7786   000262                     CLCIN1PPS       equ	610	;# 
  7787   000263                     CLCIN2PPS       equ	611	;# 
  7788   000264                     CLCIN3PPS       equ	612	;# 
  7789   000265                     CLCIN4PPS       equ	613	;# 
  7790   000266                     CLCIN5PPS       equ	614	;# 
  7791   000267                     CLCIN6PPS       equ	615	;# 
  7792   000268                     CLCIN7PPS       equ	616	;# 
  7793   000269                     ADACTPPS        equ	617	;# 
  7794   00026A                     SPI1SCKPPS      equ	618	;# 
  7795   00026B                     SPI1SDIPPS      equ	619	;# 
  7796   00026C                     SPI1SSPPS       equ	620	;# 
  7797   00026D                     SPI2SCKPPS      equ	621	;# 
  7798   00026E                     SPI2SDIPPS      equ	622	;# 
  7799   00026F                     SPI2SSPPS       equ	623	;# 
  7800   000270                     I2C1SDAPPS      equ	624	;# 
  7801   000271                     I2C1SCLPPS      equ	625	;# 
  7802   000272                     U1RXPPS         equ	626	;# 
  7803   000273                     U1CTSPPS        equ	627	;# 
  7804   000274                     U2RXPPS         equ	628	;# 
  7805   000275                     U2CTSPPS        equ	629	;# 
  7806   000276                     U3RXPPS         equ	630	;# 
  7807   000277                     U3CTSPPS        equ	631	;# 
  7808   000278                     U4RXPPS         equ	632	;# 
  7809   000279                     U4CTSPPS        equ	633	;# 
  7810   00027A                     U5RXPPS         equ	634	;# 
  7811   00027B                     U5CTSPPS        equ	635	;# 
  7812   000286                     RC4I2C          equ	646	;# 
  7813   000287                     RC3I2C          equ	647	;# 
  7814   000288                     RB2I2C          equ	648	;# 
  7815   000289                     RB1I2C          equ	649	;# 
  7816   00028A                     I2C1RXB         equ	650	;# 
  7817   00028B                     I2C1TXB         equ	651	;# 
  7818   00028C                     I2C1CNTL        equ	652	;# 
  7819   00028D                     I2C1CNTH        equ	653	;# 
  7820   00028E                     I2C1ADB0        equ	654	;# 
  7821   00028F                     I2C1ADB1        equ	655	;# 
  7822   000290                     I2C1ADR0        equ	656	;# 
  7823   000291                     I2C1ADR1        equ	657	;# 
  7824   000292                     I2C1ADR2        equ	658	;# 
  7825   000293                     I2C1ADR3        equ	659	;# 
  7826   000294                     I2C1CON0        equ	660	;# 
  7827   000295                     I2C1CON1        equ	661	;# 
  7828   000296                     I2C1CON2        equ	662	;# 
  7829   000297                     I2C1ERR         equ	663	;# 
  7830   000298                     I2C1STAT0       equ	664	;# 
  7831   000299                     I2C1STAT1       equ	665	;# 
  7832   00029A                     I2C1PIR         equ	666	;# 
  7833   00029B                     I2C1PIE         equ	667	;# 
  7834   00029C                     I2C1BTO         equ	668	;# 
  7835   00029D                     I2C1BAUD        equ	669	;# 
  7836   00029E                     I2C1CLK         equ	670	;# 
  7837   00029F                     I2C1BTOC        equ	671	;# 
  7838   0002A1                     U1RXB           equ	673	;# 
  7839   0002A1                     U1RXBL          equ	673	;# 
  7840   0002A2                     U1RXCHK         equ	674	;# 
  7841   0002A3                     U1TXB           equ	675	;# 
  7842   0002A3                     U1TXBL          equ	675	;# 
  7843   0002A4                     U1TXCHK         equ	676	;# 
  7844   0002A5                     U1P1            equ	677	;# 
  7845   0002A5                     U1P1L           equ	677	;# 
  7846   0002A6                     U1P1H           equ	678	;# 
  7847   0002A7                     U1P2            equ	679	;# 
  7848   0002A7                     U1P2L           equ	679	;# 
  7849   0002A8                     U1P2H           equ	680	;# 
  7850   0002A9                     U1P3            equ	681	;# 
  7851   0002A9                     U1P3L           equ	681	;# 
  7852   0002AA                     U1P3H           equ	682	;# 
  7853   0002AB                     U1CON0          equ	683	;# 
  7854   0002AC                     U1CON1          equ	684	;# 
  7855   0002AD                     U1CON2          equ	685	;# 
  7856   0002AE                     U1BRG           equ	686	;# 
  7857   0002AE                     U1BRGL          equ	686	;# 
  7858   0002AF                     U1BRGH          equ	687	;# 
  7859   0002B0                     U1FIFO          equ	688	;# 
  7860   0002B1                     U1UIR           equ	689	;# 
  7861   0002B2                     U1ERRIR         equ	690	;# 
  7862   0002B3                     U1ERRIE         equ	691	;# 
  7863   0002B4                     U2RXB           equ	692	;# 
  7864   0002B4                     U2RXBL          equ	692	;# 
  7865   0002B5                     U2RXCHK         equ	693	;# 
  7866   0002B6                     U2TXB           equ	694	;# 
  7867   0002B6                     U2TXBL          equ	694	;# 
  7868   0002B7                     U2TXCHK         equ	695	;# 
  7869   0002B8                     U2P1            equ	696	;# 
  7870   0002B8                     U2P1L           equ	696	;# 
  7871   0002B9                     U2P1H           equ	697	;# 
  7872   0002BA                     U2P2            equ	698	;# 
  7873   0002BA                     U2P2L           equ	698	;# 
  7874   0002BB                     U2P2H           equ	699	;# 
  7875   0002BC                     U2P3            equ	700	;# 
  7876   0002BC                     U2P3L           equ	700	;# 
  7877   0002BD                     U2P3H           equ	701	;# 
  7878   0002BE                     U2CON0          equ	702	;# 
  7879   0002BF                     U2CON1          equ	703	;# 
  7880   0002C0                     U2CON2          equ	704	;# 
  7881   0002C1                     U2BRG           equ	705	;# 
  7882   0002C1                     U2BRGL          equ	705	;# 
  7883   0002C2                     U2BRGH          equ	706	;# 
  7884   0002C3                     U2FIFO          equ	707	;# 
  7885   0002C4                     U2UIR           equ	708	;# 
  7886   0002C5                     U2ERRIR         equ	709	;# 
  7887   0002C6                     U2ERRIE         equ	710	;# 
  7888   0002C7                     U3RXB           equ	711	;# 
  7889   0002C7                     U3RXBL          equ	711	;# 
  7890   0002C9                     U3TXB           equ	713	;# 
  7891   0002C9                     U3TXBL          equ	713	;# 
  7892   0002CB                     U3P1            equ	715	;# 
  7893   0002CB                     U3P1L           equ	715	;# 
  7894   0002CD                     U3P2            equ	717	;# 
  7895   0002CD                     U3P2L           equ	717	;# 
  7896   0002CF                     U3P3            equ	719	;# 
  7897   0002CF                     U3P3L           equ	719	;# 
  7898   0002D1                     U3CON0          equ	721	;# 
  7899   0002D2                     U3CON1          equ	722	;# 
  7900   0002D3                     U3CON2          equ	723	;# 
  7901   0002D4                     U3BRG           equ	724	;# 
  7902   0002D4                     U3BRGL          equ	724	;# 
  7903   0002D5                     U3BRGH          equ	725	;# 
  7904   0002D6                     U3FIFO          equ	726	;# 
  7905   0002D7                     U3UIR           equ	727	;# 
  7906   0002D8                     U3ERRIR         equ	728	;# 
  7907   0002D9                     U3ERRIE         equ	729	;# 
  7908   0002DA                     U4RXB           equ	730	;# 
  7909   0002DA                     U4RXBL          equ	730	;# 
  7910   0002DC                     U4TXB           equ	732	;# 
  7911   0002DC                     U4TXBL          equ	732	;# 
  7912   0002DE                     U4P1            equ	734	;# 
  7913   0002DE                     U4P1L           equ	734	;# 
  7914   0002E0                     U4P2            equ	736	;# 
  7915   0002E0                     U4P2L           equ	736	;# 
  7916   0002E2                     U4P3            equ	738	;# 
  7917   0002E2                     U4P3L           equ	738	;# 
  7918   0002E4                     U4CON0          equ	740	;# 
  7919   0002E5                     U4CON1          equ	741	;# 
  7920   0002E6                     U4CON2          equ	742	;# 
  7921   0002E7                     U4BRG           equ	743	;# 
  7922   0002E7                     U4BRGL          equ	743	;# 
  7923   0002E8                     U4BRGH          equ	744	;# 
  7924   0002E9                     U4FIFO          equ	745	;# 
  7925   0002EA                     U4UIR           equ	746	;# 
  7926   0002EB                     U4ERRIR         equ	747	;# 
  7927   0002EC                     U4ERRIE         equ	748	;# 
  7928   0002ED                     U5RXB           equ	749	;# 
  7929   0002ED                     U5RXBL          equ	749	;# 
  7930   0002EF                     U5TXB           equ	751	;# 
  7931   0002EF                     U5TXBL          equ	751	;# 
  7932   0002F1                     U5P1            equ	753	;# 
  7933   0002F1                     U5P1L           equ	753	;# 
  7934   0002F3                     U5P2            equ	755	;# 
  7935   0002F3                     U5P2L           equ	755	;# 
  7936   0002F5                     U5P3            equ	757	;# 
  7937   0002F5                     U5P3L           equ	757	;# 
  7938   0002F7                     U5CON0          equ	759	;# 
  7939   0002F8                     U5CON1          equ	760	;# 
  7940   0002F9                     U5CON2          equ	761	;# 
  7941   0002FA                     U5BRG           equ	762	;# 
  7942   0002FA                     U5BRGL          equ	762	;# 
  7943   0002FB                     U5BRGH          equ	763	;# 
  7944   0002FC                     U5FIFO          equ	764	;# 
  7945   0002FD                     U5UIR           equ	765	;# 
  7946   0002FE                     U5ERRIR         equ	766	;# 
  7947   0002FF                     U5ERRIE         equ	767	;# 
  7948   000300                     SMT1TMR         equ	768	;# 
  7949   000300                     SMT1TMRL        equ	768	;# 
  7950   000301                     SMT1TMRH        equ	769	;# 
  7951   000302                     SMT1TMRU        equ	770	;# 
  7952   000303                     SMT1CPR         equ	771	;# 
  7953   000303                     SMT1CPRL        equ	771	;# 
  7954   000304                     SMT1CPRH        equ	772	;# 
  7955   000305                     SMT1CPRU        equ	773	;# 
  7956   000306                     SMT1CPW         equ	774	;# 
  7957   000306                     SMT1CPWL        equ	774	;# 
  7958   000307                     SMT1CPWH        equ	775	;# 
  7959   000308                     SMT1CPWU        equ	776	;# 
  7960   000309                     SMT1PR          equ	777	;# 
  7961   000309                     SMT1PRL         equ	777	;# 
  7962   00030A                     SMT1PRH         equ	778	;# 
  7963   00030B                     SMT1PRU         equ	779	;# 
  7964   00030C                     SMT1CON0        equ	780	;# 
  7965   00030D                     SMT1CON1        equ	781	;# 
  7966   00030E                     SMT1STAT        equ	782	;# 
  7967   00030F                     SMT1CLK         equ	783	;# 
  7968   000310                     SMT1SIG         equ	784	;# 
  7969   000311                     SMT1WIN         equ	785	;# 
  7970   000318                     TMR0L           equ	792	;# 
  7971   000318                     TMR0            equ	792	;# 
  7972   000319                     TMR0H           equ	793	;# 
  7973   000319                     PR0             equ	793	;# 
  7974   00031A                     T0CON0          equ	794	;# 
  7975   00031B                     T0CON1          equ	795	;# 
  7976   00031C                     TMR1            equ	796	;# 
  7977   00031C                     TMR1L           equ	796	;# 
  7978   00031D                     TMR1H           equ	797	;# 
  7979   00031E                     T1CON           equ	798	;# 
  7980   00031E                     TMR1CON         equ	798	;# 
  7981   00031F                     T1GCON          equ	799	;# 
  7982   00031F                     TMR1GCON        equ	799	;# 
  7983   000320                     T1GATE          equ	800	;# 
  7984   000320                     TMR1GATE        equ	800	;# 
  7985   000321                     T1CLK           equ	801	;# 
  7986   000321                     TMR1CLK         equ	801	;# 
  7987   000321                     PR1             equ	801	;# 
  7988   000322                     T2TMR           equ	802	;# 
  7989   000322                     TMR2            equ	802	;# 
  7990   000323                     T2PR            equ	803	;# 
  7991   000323                     PR2             equ	803	;# 
  7992   000324                     T2CON           equ	804	;# 
  7993   000325                     T2HLT           equ	805	;# 
  7994   000326                     T2CLKCON        equ	806	;# 
  7995   000326                     T2CLK           equ	806	;# 
  7996   000327                     T2RST           equ	807	;# 
  7997   000328                     TMR3            equ	808	;# 
  7998   000328                     TMR3L           equ	808	;# 
  7999   000329                     TMR3H           equ	809	;# 
  8000   00032A                     T3CON           equ	810	;# 
  8001   00032A                     TMR3CON         equ	810	;# 
  8002   00032B                     T3GCON          equ	811	;# 
  8003   00032B                     TMR3GCON        equ	811	;# 
  8004   00032C                     T3GATE          equ	812	;# 
  8005   00032C                     TMR3GATE        equ	812	;# 
  8006   00032D                     T3CLK           equ	813	;# 
  8007   00032D                     TMR3CLK         equ	813	;# 
  8008   00032D                     PR3             equ	813	;# 
  8009   00032E                     T4TMR           equ	814	;# 
  8010   00032E                     TMR4            equ	814	;# 
  8011   00032F                     T4PR            equ	815	;# 
  8012   00032F                     PR4             equ	815	;# 
  8013   000330                     T4CON           equ	816	;# 
  8014   000331                     T4HLT           equ	817	;# 
  8015   000332                     T4CLKCON        equ	818	;# 
  8016   000332                     T4CLK           equ	818	;# 
  8017   000333                     T4RST           equ	819	;# 
  8018   000334                     TMR5            equ	820	;# 
  8019   000334                     TMR5L           equ	820	;# 
  8020   000335                     TMR5H           equ	821	;# 
  8021   000336                     T5CON           equ	822	;# 
  8022   000336                     TMR5CON         equ	822	;# 
  8023   000337                     T5GCON          equ	823	;# 
  8024   000337                     TMR5GCON        equ	823	;# 
  8025   000338                     T5GATE          equ	824	;# 
  8026   000338                     TMR5GATE        equ	824	;# 
  8027   000339                     T5CLK           equ	825	;# 
  8028   000339                     TMR5CLK         equ	825	;# 
  8029   000339                     PR5             equ	825	;# 
  8030   00033A                     T6TMR           equ	826	;# 
  8031   00033A                     TMR6            equ	826	;# 
  8032   00033B                     T6PR            equ	827	;# 
  8033   00033B                     PR6             equ	827	;# 
  8034   00033C                     T6CON           equ	828	;# 
  8035   00033D                     T6HLT           equ	829	;# 
  8036   00033E                     T6CLKCON        equ	830	;# 
  8037   00033E                     T6CLK           equ	830	;# 
  8038   00033F                     T6RST           equ	831	;# 
  8039   000340                     CCPR1           equ	832	;# 
  8040   000340                     CCPR1L          equ	832	;# 
  8041   000341                     CCPR1H          equ	833	;# 
  8042   000342                     CCP1CON         equ	834	;# 
  8043   000343                     CCP1CAP         equ	835	;# 
  8044   000344                     CCPR2           equ	836	;# 
  8045   000344                     CCPR2L          equ	836	;# 
  8046   000345                     CCPR2H          equ	837	;# 
  8047   000346                     CCP2CON         equ	838	;# 
  8048   000347                     CCP2CAP         equ	839	;# 
  8049   000348                     CCPR3           equ	840	;# 
  8050   000348                     CCPR3L          equ	840	;# 
  8051   000349                     CCPR3H          equ	841	;# 
  8052   00034A                     CCP3CON         equ	842	;# 
  8053   00034B                     CCP3CAP         equ	843	;# 
  8054   00034C                     CCPTMRS0        equ	844	;# 
  8055   00034F                     CRCDATA         equ	847	;# 
  8056   00034F                     CRCDATAL        equ	847	;# 
  8057   000350                     CRCDATAH        equ	848	;# 
  8058   000351                     CRCDATAU        equ	849	;# 
  8059   000352                     CRCDATAT        equ	850	;# 
  8060   000353                     CRCOUT          equ	851	;# 
  8061   000353                     CRCSHFT         equ	851	;# 
  8062   000353                     CRCXOR          equ	851	;# 
  8063   000353                     CRCOUTL         equ	851	;# 
  8064   000353                     CRCSHFTL        equ	851	;# 
  8065   000353                     CRCSHIFTL       equ	851	;# 
  8066   000353                     CRCXORL         equ	851	;# 
  8067   000354                     CRCOUTH         equ	852	;# 
  8068   000354                     CRCSHFTH        equ	852	;# 
  8069   000354                     CRCSHIFTH       equ	852	;# 
  8070   000354                     CRCXORH         equ	852	;# 
  8071   000355                     CRCOUTU         equ	853	;# 
  8072   000355                     CRCSHFTU        equ	853	;# 
  8073   000355                     CRCSHIFTU       equ	853	;# 
  8074   000355                     CRCXORU         equ	853	;# 
  8075   000356                     CRCOUTT         equ	854	;# 
  8076   000356                     CRCSHFTT        equ	854	;# 
  8077   000356                     CRCSHIFTT       equ	854	;# 
  8078   000356                     CRCXORT         equ	854	;# 
  8079   000357                     CRCCON0         equ	855	;# 
  8080   000358                     CRCCON1         equ	856	;# 
  8081   000359                     CRCCON2         equ	857	;# 
  8082   00035A                     SCANLADR        equ	858	;# 
  8083   00035A                     SCANLADRL       equ	858	;# 
  8084   00035B                     SCANLADRH       equ	859	;# 
  8085   00035C                     SCANLADRU       equ	860	;# 
  8086   00035D                     SCANHADR        equ	861	;# 
  8087   00035D                     SCANHADRL       equ	861	;# 
  8088   00035E                     SCANHADRH       equ	862	;# 
  8089   00035F                     SCANHADRU       equ	863	;# 
  8090   000360                     SCANCON0        equ	864	;# 
  8091   000361                     SCANTRIG        equ	865	;# 
  8092   000362                     IPR0            equ	866	;# 
  8093   000363                     IPR1            equ	867	;# 
  8094   000364                     IPR2            equ	868	;# 
  8095   000365                     IPR3            equ	869	;# 
  8096   000366                     IPR4            equ	870	;# 
  8097   000367                     IPR5            equ	871	;# 
  8098   000368                     IPR6            equ	872	;# 
  8099   000369                     IPR7            equ	873	;# 
  8100   00036A                     IPR8            equ	874	;# 
  8101   00036B                     IPR9            equ	875	;# 
  8102   00036C                     IPR10           equ	876	;# 
  8103   00036D                     IPR11           equ	877	;# 
  8104   00036E                     IPR12           equ	878	;# 
  8105   00036F                     IPR13           equ	879	;# 
  8106   000370                     IPR14           equ	880	;# 
  8107   000371                     IPR15           equ	881	;# 
  8108   000373                     STATUS_CSHAD    equ	883	;# 
  8109   000374                     WREG_CSHAD      equ	884	;# 
  8110   000375                     BSR_CSHAD       equ	885	;# 
  8111   000376                     SHADCON         equ	886	;# 
  8112   000377                     STATUS_SHAD     equ	887	;# 
  8113   000378                     WREG_SHAD       equ	888	;# 
  8114   000379                     BSR_SHAD        equ	889	;# 
  8115   00037A                     PCLATH_SHAD     equ	890	;# 
  8116   00037B                     PCLATU_SHAD     equ	891	;# 
  8117   00037C                     FSR0SH          equ	892	;# 
  8118   00037C                     FSR0L_SHAD      equ	892	;# 
  8119   00037D                     FSR0H_SHAD      equ	893	;# 
  8120   00037E                     FSR1SH          equ	894	;# 
  8121   00037E                     FSR1L_SHAD      equ	894	;# 
  8122   00037F                     FSR1H_SHAD      equ	895	;# 
  8123   000380                     FSR2SH          equ	896	;# 
  8124   000380                     FSR2L_SHAD      equ	896	;# 
  8125   000381                     FSR2H_SHAD      equ	897	;# 
  8126   000382                     PRODSH          equ	898	;# 
  8127   000382                     PRODL_SHAD      equ	898	;# 
  8128   000383                     PRODH_SHAD      equ	899	;# 
  8129   000387                     TU16ACON0       equ	903	;# 
  8130   000388                     TU16ACON1       equ	904	;# 
  8131   000389                     TU16AHLT        equ	905	;# 
  8132   00038A                     TU16APS         equ	906	;# 
  8133   00038B                     TU16ATMR        equ	907	;# 
  8134   00038B                     TU16ACR         equ	907	;# 
  8135   00038B                     TU16ATMRL       equ	907	;# 
  8136   00038B                     TU16ACRL        equ	907	;# 
  8137   00038C                     TU16ATMRH       equ	908	;# 
  8138   00038C                     TU16ACRH        equ	908	;# 
  8139   00038D                     TU16APR         equ	909	;# 
  8140   00038D                     TU16APRL        equ	909	;# 
  8141   00038E                     TU16APRH        equ	910	;# 
  8142   00038F                     TU16ACLK        equ	911	;# 
  8143   000390                     TU16AERS        equ	912	;# 
  8144   000393                     TU16BCON0       equ	915	;# 
  8145   000394                     TU16BCON1       equ	916	;# 
  8146   000395                     TU16BHLT        equ	917	;# 
  8147   000396                     TU16BPS         equ	918	;# 
  8148   000397                     TU16BTMR        equ	919	;# 
  8149   000397                     TU16BCR         equ	919	;# 
  8150   000397                     TU16BTMRL       equ	919	;# 
  8151   000397                     TU16BCRL        equ	919	;# 
  8152   000398                     TU16BTMRH       equ	920	;# 
  8153   000398                     TU16BCRH        equ	920	;# 
  8154   000399                     TU16BPR         equ	921	;# 
  8155   000399                     TU16BPRL        equ	921	;# 
  8156   00039A                     TU16BPRH        equ	922	;# 
  8157   00039B                     TU16BCLK        equ	923	;# 
  8158   00039C                     TU16BERS        equ	924	;# 
  8159   0003BB                     TUCHAIN         equ	955	;# 
  8160   0003BC                     CWG1CLK         equ	956	;# 
  8161   0003BC                     CWG1CLKCON      equ	956	;# 
  8162   0003BD                     CWG1ISM         equ	957	;# 
  8163   0003BE                     CWG1DBR         equ	958	;# 
  8164   0003BF                     CWG1DBF         equ	959	;# 
  8165   0003C0                     CWG1CON0        equ	960	;# 
  8166   0003C1                     CWG1CON1        equ	961	;# 
  8167   0003C2                     CWG1AS0         equ	962	;# 
  8168   0003C3                     CWG1AS1         equ	963	;# 
  8169   0003C4                     CWG1STR         equ	964	;# 
  8170   0003C5                     CWG2CLK         equ	965	;# 
  8171   0003C5                     CWG2CLKCON      equ	965	;# 
  8172   0003C6                     CWG2ISM         equ	966	;# 
  8173   0003C7                     CWG2DBR         equ	967	;# 
  8174   0003C8                     CWG2DBF         equ	968	;# 
  8175   0003C9                     CWG2CON0        equ	969	;# 
  8176   0003CA                     CWG2CON1        equ	970	;# 
  8177   0003CB                     CWG2AS0         equ	971	;# 
  8178   0003CC                     CWG2AS1         equ	972	;# 
  8179   0003CD                     CWG2STR         equ	973	;# 
  8180   0003CE                     CWG3CLK         equ	974	;# 
  8181   0003CE                     CWG3CLKCON      equ	974	;# 
  8182   0003CF                     CWG3ISM         equ	975	;# 
  8183   0003D0                     CWG3DBR         equ	976	;# 
  8184   0003D1                     CWG3DBF         equ	977	;# 
  8185   0003D2                     CWG3CON0        equ	978	;# 
  8186   0003D3                     CWG3CON1        equ	979	;# 
  8187   0003D4                     CWG3AS0         equ	980	;# 
  8188   0003D5                     CWG3AS1         equ	981	;# 
  8189   0003D6                     CWG3STR         equ	982	;# 
  8190   0003D7                     FVRCON          equ	983	;# 
  8191   0003D8                     ADCPCON         equ	984	;# 
  8192   0003D8                     ADCP            equ	984	;# 
  8193   0003D9                     ADLTH           equ	985	;# 
  8194   0003D9                     ADLTHL          equ	985	;# 
  8195   0003DA                     ADLTHH          equ	986	;# 
  8196   0003DB                     ADUTH           equ	987	;# 
  8197   0003DB                     ADUTHL          equ	987	;# 
  8198   0003DC                     ADUTHH          equ	988	;# 
  8199   0003DD                     ADERR           equ	989	;# 
  8200   0003DD                     ADERRL          equ	989	;# 
  8201   0003DE                     ADERRH          equ	990	;# 
  8202   0003DF                     ADSTPT          equ	991	;# 
  8203   0003DF                     ADSTPTL         equ	991	;# 
  8204   0003E0                     ADSTPTH         equ	992	;# 
  8205   0003E1                     ADFLTR          equ	993	;# 
  8206   0003E1                     ADFLTRL         equ	993	;# 
  8207   0003E2                     ADFLTRH         equ	994	;# 
  8208   0003E3                     ADACC           equ	995	;# 
  8209   0003E3                     ADACCL          equ	995	;# 
  8210   0003E4                     ADACCH          equ	996	;# 
  8211   0003E5                     ADACCU          equ	997	;# 
  8212   0003E6                     ADCNT           equ	998	;# 
  8213   0003E7                     ADRPT           equ	999	;# 
  8214   0003E8                     ADPREV          equ	1000	;# 
  8215   0003E8                     ADPREVL         equ	1000	;# 
  8216   0003E9                     ADPREVH         equ	1001	;# 
  8217   0003EA                     ADRES           equ	1002	;# 
  8218   0003EA                     ADRESL          equ	1002	;# 
  8219   0003EB                     ADRESH          equ	1003	;# 
  8220   0003EC                     ADPCH           equ	1004	;# 
  8221   0003EE                     ADACQ           equ	1006	;# 
  8222   0003EE                     ADACQL          equ	1006	;# 
  8223   0003EF                     ADACQH          equ	1007	;# 
  8224   0003F0                     ADCAP           equ	1008	;# 
  8225   0003F1                     ADPRE           equ	1009	;# 
  8226   0003F1                     ADPREL          equ	1009	;# 
  8227   0003F2                     ADPREH          equ	1010	;# 
  8228   0003F3                     ADCON0          equ	1011	;# 
  8229   0003F4                     ADCON1          equ	1012	;# 
  8230   0003F5                     ADCON2          equ	1013	;# 
  8231   0003F6                     ADCON3          equ	1014	;# 
  8232   0003F7                     ADSTAT          equ	1015	;# 
  8233   0003F8                     ADREF           equ	1016	;# 
  8234   0003F9                     ADACT           equ	1017	;# 
  8235   0003FA                     ADCLK           equ	1018	;# 
  8236   0003FB                     ADCTX           equ	1019	;# 
  8237   0003FC                     ADCSEL1         equ	1020	;# 
  8238   0003FD                     ADCSEL2         equ	1021	;# 
  8239   0003FE                     ADCSEL3         equ	1022	;# 
  8240   0003FF                     ADCSEL4         equ	1023	;# 
  8241   000400                     ANSELA          equ	1024	;# 
  8242   000401                     WPUA            equ	1025	;# 
  8243   000402                     ODCONA          equ	1026	;# 
  8244   000403                     SLRCONA         equ	1027	;# 
  8245   000404                     INLVLA          equ	1028	;# 
  8246   000405                     IOCAP           equ	1029	;# 
  8247   000406                     IOCAN           equ	1030	;# 
  8248   000407                     IOCAF           equ	1031	;# 
  8249   000408                     ANSELB          equ	1032	;# 
  8250   000409                     WPUB            equ	1033	;# 
  8251   00040A                     ODCONB          equ	1034	;# 
  8252   00040B                     SLRCONB         equ	1035	;# 
  8253   00040C                     INLVLB          equ	1036	;# 
  8254   00040D                     IOCBP           equ	1037	;# 
  8255   00040E                     IOCBN           equ	1038	;# 
  8256   00040F                     IOCBF           equ	1039	;# 
  8257   000410                     ANSELC          equ	1040	;# 
  8258   000411                     WPUC            equ	1041	;# 
  8259   000412                     ODCONC          equ	1042	;# 
  8260   000413                     SLRCONC         equ	1043	;# 
  8261   000414                     INLVLC          equ	1044	;# 
  8262   000415                     IOCCP           equ	1045	;# 
  8263   000416                     IOCCN           equ	1046	;# 
  8264   000417                     IOCCF           equ	1047	;# 
  8265   000421                     WPUE            equ	1057	;# 
  8266   000424                     INLVLE          equ	1060	;# 
  8267   000425                     IOCEP           equ	1061	;# 
  8268   000426                     IOCEN           equ	1062	;# 
  8269   000427                     IOCEF           equ	1063	;# 
  8270   000440                     NCO1ACC         equ	1088	;# 
  8271   000440                     NCO1ACCL        equ	1088	;# 
  8272   000441                     NCO1ACCH        equ	1089	;# 
  8273   000442                     NCO1ACCU        equ	1090	;# 
  8274   000443                     NCO1INC         equ	1091	;# 
  8275   000443                     NCO1INCL        equ	1091	;# 
  8276   000444                     NCO1INCH        equ	1092	;# 
  8277   000445                     NCO1INCU        equ	1093	;# 
  8278   000446                     NCO1CON         equ	1094	;# 
  8279   000447                     NCO1CLK         equ	1095	;# 
  8280   000448                     NCO2ACC         equ	1096	;# 
  8281   000448                     NCO2ACCL        equ	1096	;# 
  8282   000449                     NCO2ACCH        equ	1097	;# 
  8283   00044A                     NCO2ACCU        equ	1098	;# 
  8284   00044B                     NCO2INC         equ	1099	;# 
  8285   00044B                     NCO2INCL        equ	1099	;# 
  8286   00044C                     NCO2INCH        equ	1100	;# 
  8287   00044D                     NCO2INCU        equ	1101	;# 
  8288   00044E                     NCO2CON         equ	1102	;# 
  8289   00044F                     NCO2CLK         equ	1103	;# 
  8290   000450                     NCO3ACC         equ	1104	;# 
  8291   000450                     NCO3ACCL        equ	1104	;# 
  8292   000451                     NCO3ACCH        equ	1105	;# 
  8293   000452                     NCO3ACCU        equ	1106	;# 
  8294   000453                     NCO3INC         equ	1107	;# 
  8295   000453                     NCO3INCL        equ	1107	;# 
  8296   000454                     NCO3INCH        equ	1108	;# 
  8297   000455                     NCO3INCU        equ	1109	;# 
  8298   000456                     NCO3CON         equ	1110	;# 
  8299   000457                     NCO3CLK         equ	1111	;# 
  8300   000458                     FSCMCON         equ	1112	;# 
  8301   000459                     IVTLOCK         equ	1113	;# 
  8302   00045A                     IVTAD           equ	1114	;# 
  8303   00045A                     IVTADL          equ	1114	;# 
  8304   00045B                     IVTADH          equ	1115	;# 
  8305   00045C                     IVTADU          equ	1116	;# 
  8306   00045D                     IVTBASE         equ	1117	;# 
  8307   00045D                     IVTBASEL        equ	1117	;# 
  8308   00045E                     IVTBASEH        equ	1118	;# 
  8309   00045F                     IVTBASEU        equ	1119	;# 
  8310   000460                     PWM1ERS         equ	1120	;# 
  8311   000461                     PWM1CLK         equ	1121	;# 
  8312   000462                     PWM1LDS         equ	1122	;# 
  8313   000463                     PWM1PR          equ	1123	;# 
  8314   000463                     PWM1PRL         equ	1123	;# 
  8315   000464                     PWM1PRH         equ	1124	;# 
  8316   000465                     PWM1CPRE        equ	1125	;# 
  8317   000466                     PWM1PIPOS       equ	1126	;# 
  8318   000467                     PWM1GIR         equ	1127	;# 
  8319   000468                     PWM1GIE         equ	1128	;# 
  8320   000469                     PWM1CON         equ	1129	;# 
  8321   00046A                     PWM1S1CFG       equ	1130	;# 
  8322   00046B                     PWM1S1P1        equ	1131	;# 
  8323   00046B                     PWM1S1P1L       equ	1131	;# 
  8324   00046C                     PWM1S1P1H       equ	1132	;# 
  8325   00046D                     PWM1S1P2        equ	1133	;# 
  8326   00046D                     PWM1S1P2L       equ	1133	;# 
  8327   00046E                     PWM1S1P2H       equ	1134	;# 
  8328   00046F                     PWM2ERS         equ	1135	;# 
  8329   000470                     PWM2CLK         equ	1136	;# 
  8330   000471                     PWM2LDS         equ	1137	;# 
  8331   000472                     PWM2PR          equ	1138	;# 
  8332   000472                     PWM2PRL         equ	1138	;# 
  8333   000473                     PWM2PRH         equ	1139	;# 
  8334   000474                     PWM2CPRE        equ	1140	;# 
  8335   000475                     PWM2PIPOS       equ	1141	;# 
  8336   000476                     PWM2GIR         equ	1142	;# 
  8337   000477                     PWM2GIE         equ	1143	;# 
  8338   000478                     PWM2CON         equ	1144	;# 
  8339   000479                     PWM2S1CFG       equ	1145	;# 
  8340   00047A                     PWM2S1P1        equ	1146	;# 
  8341   00047A                     PWM2S1P1L       equ	1146	;# 
  8342   00047B                     PWM2S1P1H       equ	1147	;# 
  8343   00047C                     PWM2S1P2        equ	1148	;# 
  8344   00047C                     PWM2S1P2L       equ	1148	;# 
  8345   00047D                     PWM2S1P2H       equ	1149	;# 
  8346   00047E                     PWM3ERS         equ	1150	;# 
  8347   00047F                     PWM3CLK         equ	1151	;# 
  8348   000480                     PWM3LDS         equ	1152	;# 
  8349   000481                     PWM3PR          equ	1153	;# 
  8350   000481                     PWM3PRL         equ	1153	;# 
  8351   000482                     PWM3PRH         equ	1154	;# 
  8352   000483                     PWM3CPRE        equ	1155	;# 
  8353   000484                     PWM3PIPOS       equ	1156	;# 
  8354   000485                     PWM3GIR         equ	1157	;# 
  8355   000486                     PWM3GIE         equ	1158	;# 
  8356   000487                     PWM3CON         equ	1159	;# 
  8357   000488                     PWM3S1CFG       equ	1160	;# 
  8358   000489                     PWM3S1P1        equ	1161	;# 
  8359   000489                     PWM3S1P1L       equ	1161	;# 
  8360   00048A                     PWM3S1P1H       equ	1162	;# 
  8361   00048B                     PWM3S1P2        equ	1163	;# 
  8362   00048B                     PWM3S1P2L       equ	1163	;# 
  8363   00048C                     PWM3S1P2H       equ	1164	;# 
  8364   00048D                     PWM4ERS         equ	1165	;# 
  8365   00048E                     PWM4CLK         equ	1166	;# 
  8366   00048F                     PWM4LDS         equ	1167	;# 
  8367   000490                     PWM4PR          equ	1168	;# 
  8368   000490                     PWM4PRL         equ	1168	;# 
  8369   000491                     PWM4PRH         equ	1169	;# 
  8370   000492                     PWM4CPRE        equ	1170	;# 
  8371   000493                     PWM4PIPOS       equ	1171	;# 
  8372   000494                     PWM4GIR         equ	1172	;# 
  8373   000495                     PWM4GIE         equ	1173	;# 
  8374   000496                     PWM4CON         equ	1174	;# 
  8375   000497                     PWM4S1CFG       equ	1175	;# 
  8376   000498                     PWM4S1P1        equ	1176	;# 
  8377   000498                     PWM4S1P1L       equ	1176	;# 
  8378   000499                     PWM4S1P1H       equ	1177	;# 
  8379   00049A                     PWM4S1P2        equ	1178	;# 
  8380   00049A                     PWM4S1P2L       equ	1178	;# 
  8381   00049B                     PWM4S1P2H       equ	1179	;# 
  8382   00049C                     PWMLOAD         equ	1180	;# 
  8383   00049D                     PWMEN           equ	1181	;# 
  8384   00049E                     PIE0            equ	1182	;# 
  8385   00049F                     PIE1            equ	1183	;# 
  8386   0004A0                     PIE2            equ	1184	;# 
  8387   0004A1                     PIE3            equ	1185	;# 
  8388   0004A2                     PIE4            equ	1186	;# 
  8389   0004A3                     PIE5            equ	1187	;# 
  8390   0004A4                     PIE6            equ	1188	;# 
  8391   0004A5                     PIE7            equ	1189	;# 
  8392   0004A6                     PIE8            equ	1190	;# 
  8393   0004A7                     PIE9            equ	1191	;# 
  8394   0004A8                     PIE10           equ	1192	;# 
  8395   0004A9                     PIE11           equ	1193	;# 
  8396   0004AA                     PIE12           equ	1194	;# 
  8397   0004AB                     PIE13           equ	1195	;# 
  8398   0004AC                     PIE14           equ	1196	;# 
  8399   0004AD                     PIE15           equ	1197	;# 
  8400   0004AE                     PIR0            equ	1198	;# 
  8401   0004AF                     PIR1            equ	1199	;# 
  8402   0004B0                     PIR2            equ	1200	;# 
  8403   0004B1                     PIR3            equ	1201	;# 
  8404   0004B2                     PIR4            equ	1202	;# 
  8405   0004B3                     PIR5            equ	1203	;# 
  8406   0004B4                     PIR6            equ	1204	;# 
  8407   0004B5                     PIR7            equ	1205	;# 
  8408   0004B6                     PIR8            equ	1206	;# 
  8409   0004B7                     PIR9            equ	1207	;# 
  8410   0004B8                     PIR10           equ	1208	;# 
  8411   0004B9                     PIR11           equ	1209	;# 
  8412   0004BA                     PIR12           equ	1210	;# 
  8413   0004BB                     PIR13           equ	1211	;# 
  8414   0004BC                     PIR14           equ	1212	;# 
  8415   0004BD                     PIR15           equ	1213	;# 
  8416   0004BE                     LATA            equ	1214	;# 
  8417   0004BF                     LATB            equ	1215	;# 
  8418   0004C0                     LATC            equ	1216	;# 
  8419   0004C6                     TRISA           equ	1222	;# 
  8420   0004C7                     TRISB           equ	1223	;# 
  8421   0004C8                     TRISC           equ	1224	;# 
  8422   0004CA                     TRISE           equ	1226	;# 
  8423   0004CE                     PORTA           equ	1230	;# 
  8424   0004CF                     PORTB           equ	1231	;# 
  8425   0004D0                     PORTC           equ	1232	;# 
  8426   0004D2                     PORTE           equ	1234	;# 
  8427   0004D6                     INTCON0         equ	1238	;# 
  8428   0004D7                     INTCON1         equ	1239	;# 
  8429   0004D8                     STATUS          equ	1240	;# 
  8430   0004D9                     FSR2            equ	1241	;# 
  8431   0004D9                     FSR2L           equ	1241	;# 
  8432   0004DA                     FSR2H           equ	1242	;# 
  8433   0004DB                     PLUSW2          equ	1243	;# 
  8434   0004DC                     PREINC2         equ	1244	;# 
  8435   0004DD                     POSTDEC2        equ	1245	;# 
  8436   0004DE                     POSTINC2        equ	1246	;# 
  8437   0004DF                     INDF2           equ	1247	;# 
  8438   0004E0                     BSR             equ	1248	;# 
  8439   0004E1                     FSR1            equ	1249	;# 
  8440   0004E1                     FSR1L           equ	1249	;# 
  8441   0004E2                     FSR1H           equ	1250	;# 
  8442   0004E3                     PLUSW1          equ	1251	;# 
  8443   0004E4                     PREINC1         equ	1252	;# 
  8444   0004E5                     POSTDEC1        equ	1253	;# 
  8445   0004E6                     POSTINC1        equ	1254	;# 
  8446   0004E7                     INDF1           equ	1255	;# 
  8447   0004E8                     WREG            equ	1256	;# 
  8448   0004E9                     FSR0            equ	1257	;# 
  8449   0004E9                     FSR0L           equ	1257	;# 
  8450   0004EA                     FSR0H           equ	1258	;# 
  8451   0004EB                     PLUSW0          equ	1259	;# 
  8452   0004EC                     PREINC0         equ	1260	;# 
  8453   0004ED                     POSTDEC0        equ	1261	;# 
  8454   0004EE                     POSTINC0        equ	1262	;# 
  8455   0004EF                     INDF0           equ	1263	;# 
  8456   0004F0                     PCON0           equ	1264	;# 
  8457   0004F1                     PCON1           equ	1265	;# 
  8458   0004F2                     CPUDOZE         equ	1266	;# 
  8459   0004F3                     PROD            equ	1267	;# 
  8460   0004F3                     PRODL           equ	1267	;# 
  8461   0004F4                     PRODH           equ	1268	;# 
  8462   0004F5                     TABLAT          equ	1269	;# 
  8463   0004F6                     TBLPTR          equ	1270	;# 
  8464   0004F6                     TBLPTRL         equ	1270	;# 
  8465   0004F7                     TBLPTRH         equ	1271	;# 
  8466   0004F8                     TBLPTRU         equ	1272	;# 
  8467   0004F9                     PCLAT           equ	1273	;# 
  8468   0004F9                     PCL             equ	1273	;# 
  8469   0004FA                     PCLATH          equ	1274	;# 
  8470   0004FB                     PCLATU          equ	1275	;# 
  8471   0004FC                     STKPTR          equ	1276	;# 
  8472   0004FD                     TOS             equ	1277	;# 
  8473   0004FD                     TOSL            equ	1277	;# 
  8474   0004FE                     TOSH            equ	1278	;# 
  8475   0004FF                     TOSU            equ	1279	;# 
  8476                           
  8477                           	psect	eeprom_data
  8478   3803FF                     	org	1023	;# 
  8479   3803FF  00                 	db	0	;# 
  8480   000038                     BOOTREG         equ	56	;# 
  8481   000039                     CLKRCON         equ	57	;# 
  8482   00003A                     CLKRCLK         equ	58	;# 
  8483   000040                     NVMCON0         equ	64	;# 
  8484   000041                     NVMCON1         equ	65	;# 
  8485   000042                     NVMLOCK         equ	66	;# 
  8486   000043                     NVMADR          equ	67	;# 
  8487   000043                     NVMADRL         equ	67	;# 
  8488   000044                     NVMADRH         equ	68	;# 
  8489   000045                     NVMADRU         equ	69	;# 
  8490   000046                     NVMDAT          equ	70	;# 
  8491   000046                     NVMDATL         equ	70	;# 
  8492   000047                     NVMDATH         equ	71	;# 
  8493   000048                     VREGCON         equ	72	;# 
  8494   000049                     BORCON          equ	73	;# 
  8495   00004A                     HLVDCON0        equ	74	;# 
  8496   00004B                     HLVDCON1        equ	75	;# 
  8497   00004C                     ZCDCON          equ	76	;# 
  8498   000060                     PMD0            equ	96	;# 
  8499   000061                     PMD1            equ	97	;# 
  8500   000062                     PMD2            equ	98	;# 
  8501   000063                     PMD3            equ	99	;# 
  8502   000064                     PMD4            equ	100	;# 
  8503   000065                     PMD5            equ	101	;# 
  8504   000066                     PMD6            equ	102	;# 
  8505   000067                     PMD7            equ	103	;# 
  8506   000068                     PMD8            equ	104	;# 
  8507   00006A                     MD1CON0         equ	106	;# 
  8508   00006B                     MD1CON1         equ	107	;# 
  8509   00006C                     MD1SRC          equ	108	;# 
  8510   00006D                     MD1CARL         equ	109	;# 
  8511   00006E                     MD1CARH         equ	110	;# 
  8512   00006F                     CMOUT           equ	111	;# 
  8513   000070                     CM1CON0         equ	112	;# 
  8514   000071                     CM1CON1         equ	113	;# 
  8515   000072                     CM1NCH          equ	114	;# 
  8516   000073                     CM1PCH          equ	115	;# 
  8517   000074                     CM2CON0         equ	116	;# 
  8518   000075                     CM2CON1         equ	117	;# 
  8519   000076                     CM2NCH          equ	118	;# 
  8520   000077                     CM2PCH          equ	119	;# 
  8521   000078                     WDTCON0         equ	120	;# 
  8522   000079                     WDTCON1         equ	121	;# 
  8523   00007A                     WDTPSL          equ	122	;# 
  8524   00007B                     WDTPSH          equ	123	;# 
  8525   00007C                     WDTTMR          equ	124	;# 
  8526   00007D                     DAC1DAT         equ	125	;# 
  8527   00007D                     DAC1DATL        equ	125	;# 
  8528   00007F                     DAC1CON         equ	127	;# 
  8529   000080                     SPI1RXB         equ	128	;# 
  8530   000081                     SPI1TXB         equ	129	;# 
  8531   000082                     SPI1TCNT        equ	130	;# 
  8532   000082                     SPI1TCNTL       equ	130	;# 
  8533   000083                     SPI1TCNTH       equ	131	;# 
  8534   000084                     SPI1CON0        equ	132	;# 
  8535   000085                     SPI1CON1        equ	133	;# 
  8536   000086                     SPI1CON2        equ	134	;# 
  8537   000087                     SPI1STATUS      equ	135	;# 
  8538   000088                     SPI1TWIDTH      equ	136	;# 
  8539   000089                     SPI1BAUD        equ	137	;# 
  8540   00008A                     SPI1INTF        equ	138	;# 
  8541   00008B                     SPI1INTE        equ	139	;# 
  8542   00008C                     SPI1CLK         equ	140	;# 
  8543   00008D                     SPI2RXB         equ	141	;# 
  8544   00008E                     SPI2TXB         equ	142	;# 
  8545   00008F                     SPI2TCNT        equ	143	;# 
  8546   00008F                     SPI2TCNTL       equ	143	;# 
  8547   000090                     SPI2TCNTH       equ	144	;# 
  8548   000091                     SPI2CON0        equ	145	;# 
  8549   000092                     SPI2CON1        equ	146	;# 
  8550   000093                     SPI2CON2        equ	147	;# 
  8551   000094                     SPI2STATUS      equ	148	;# 
  8552   000095                     SPI2TWIDTH      equ	149	;# 
  8553   000096                     SPI2BAUD        equ	150	;# 
  8554   000097                     SPI2INTF        equ	151	;# 
  8555   000098                     SPI2INTE        equ	152	;# 
  8556   000099                     SPI2CLK         equ	153	;# 
  8557   0000AC                     ACTCON          equ	172	;# 
  8558   0000AD                     OSCCON1         equ	173	;# 
  8559   0000AE                     OSCCON2         equ	174	;# 
  8560   0000AF                     OSCCON3         equ	175	;# 
  8561   0000B0                     OSCTUNE         equ	176	;# 
  8562   0000B1                     OSCFRQ          equ	177	;# 
  8563   0000B1                     OSCFREQ         equ	177	;# 
  8564   0000B2                     OSCSTAT         equ	178	;# 
  8565   0000B2                     OSCSTAT1        equ	178	;# 
  8566   0000B3                     OSCEN           equ	179	;# 
  8567   0000B4                     PRLOCK          equ	180	;# 
  8568   0000B5                     SCANPR          equ	181	;# 
  8569   0000B6                     DMA1PR          equ	182	;# 
  8570   0000B7                     DMA2PR          equ	183	;# 
  8571   0000B8                     DMA3PR          equ	184	;# 
  8572   0000B9                     DMA4PR          equ	185	;# 
  8573   0000BA                     DMA5PR          equ	186	;# 
  8574   0000BB                     DMA6PR          equ	187	;# 
  8575   0000BC                     DMA7PR          equ	188	;# 
  8576   0000BD                     DMA8PR          equ	189	;# 
  8577   0000BE                     MAINPR          equ	190	;# 
  8578   0000BF                     ISRPR           equ	191	;# 
  8579   0000D4                     CLCDATA         equ	212	;# 
  8580   0000D5                     CLCSELECT       equ	213	;# 
  8581   0000D6                     CLCnCON         equ	214	;# 
  8582   0000D7                     CLCnPOL         equ	215	;# 
  8583   0000D8                     CLCnSEL0        equ	216	;# 
  8584   0000D9                     CLCnSEL1        equ	217	;# 
  8585   0000DA                     CLCnSEL2        equ	218	;# 
  8586   0000DB                     CLCnSEL3        equ	219	;# 
  8587   0000DC                     CLCnGLS0        equ	220	;# 
  8588   0000DD                     CLCnGLS1        equ	221	;# 
  8589   0000DE                     CLCnGLS2        equ	222	;# 
  8590   0000DF                     CLCnGLS3        equ	223	;# 
  8591   0000E8                     DMASELECT       equ	232	;# 
  8592   0000E9                     DMAnBUF         equ	233	;# 
  8593   0000EA                     DMAnDCNT        equ	234	;# 
  8594   0000EA                     DMAnDCNTL       equ	234	;# 
  8595   0000EB                     DMAnDCNTH       equ	235	;# 
  8596   0000EC                     DMAnDPTR        equ	236	;# 
  8597   0000EC                     DMAnDPTRL       equ	236	;# 
  8598   0000ED                     DMAnDPTRH       equ	237	;# 
  8599   0000EE                     DMAnDSZ         equ	238	;# 
  8600   0000EE                     DMAnDSZL        equ	238	;# 
  8601   0000EF                     DMAnDSZH        equ	239	;# 
  8602   0000F0                     DMAnDSA         equ	240	;# 
  8603   0000F0                     DMAnDSAL        equ	240	;# 
  8604   0000F1                     DMAnDSAH        equ	241	;# 
  8605   0000F2                     DMAnSCNT        equ	242	;# 
  8606   0000F2                     DMAnSCNTL       equ	242	;# 
  8607   0000F3                     DMAnSCNTH       equ	243	;# 
  8608   0000F4                     DMAnSPTR        equ	244	;# 
  8609   0000F4                     DMAnSPTRL       equ	244	;# 
  8610   0000F5                     DMAnSPTRH       equ	245	;# 
  8611   0000F6                     DMAnSPTRU       equ	246	;# 
  8612   0000F7                     DMAnSSZ         equ	247	;# 
  8613   0000F7                     DMAnSSZL        equ	247	;# 
  8614   0000F8                     DMAnSSZH        equ	248	;# 
  8615   0000F9                     DMAnSSA         equ	249	;# 
  8616   0000F9                     DMAnSSAL        equ	249	;# 
  8617   0000FA                     DMAnSSAH        equ	250	;# 
  8618   0000FB                     DMAnSSAU        equ	251	;# 
  8619   0000FC                     DMAnCON0        equ	252	;# 
  8620   0000FD                     DMAnCON1        equ	253	;# 
  8621   0000FE                     DMAnAIRQ        equ	254	;# 
  8622   0000FF                     DMAnSIRQ        equ	255	;# 
  8623   000100                     C1CONL          equ	256	;# 
  8624   000101                     C1CONH          equ	257	;# 
  8625   000102                     C1CONU          equ	258	;# 
  8626   000103                     C1CONT          equ	259	;# 
  8627   000104                     C1NBTCFGL       equ	260	;# 
  8628   000105                     C1NBTCFGH       equ	261	;# 
  8629   000106                     C1NBTCFGU       equ	262	;# 
  8630   000107                     C1NBTCFGT       equ	263	;# 
  8631   000108                     C1DBTCFGL       equ	264	;# 
  8632   000109                     C1DBTCFGH       equ	265	;# 
  8633   00010A                     C1DBTCFGU       equ	266	;# 
  8634   00010B                     C1DBTCFGT       equ	267	;# 
  8635   00010C                     C1TDCL          equ	268	;# 
  8636   00010D                     C1TDCH          equ	269	;# 
  8637   00010E                     C1TDCU          equ	270	;# 
  8638   000110                     C1TBC           equ	272	;# 
  8639   000110                     C1TBCL          equ	272	;# 
  8640   000111                     C1TBCH          equ	273	;# 
  8641   000112                     C1TBCU          equ	274	;# 
  8642   000113                     C1TBCT          equ	275	;# 
  8643   000114                     C1TSCONL        equ	276	;# 
  8644   000115                     C1TSCONH        equ	277	;# 
  8645   000116                     C1TSCONU        equ	278	;# 
  8646   000117                     C1TSCONT        equ	279	;# 
  8647   000118                     C1VECL          equ	280	;# 
  8648   000119                     C1VECH          equ	281	;# 
  8649   00011A                     C1VECU          equ	282	;# 
  8650   00011B                     C1VECT          equ	283	;# 
  8651   00011C                     C1INTL          equ	284	;# 
  8652   00011D                     C1INTH          equ	285	;# 
  8653   00011E                     C1INTU          equ	286	;# 
  8654   00011F                     C1INTT          equ	287	;# 
  8655   000120                     C1RXIF          equ	288	;# 
  8656   000120                     C1RXIFL         equ	288	;# 
  8657   000121                     C1RXIFH         equ	289	;# 
  8658   000122                     C1RXIFU         equ	290	;# 
  8659   000123                     C1RXIFT         equ	291	;# 
  8660   000124                     C1TXIF          equ	292	;# 
  8661   000124                     C1TXIFL         equ	292	;# 
  8662   000125                     C1TXIFH         equ	293	;# 
  8663   000126                     C1TXIFU         equ	294	;# 
  8664   000127                     C1TXIFT         equ	295	;# 
  8665   000128                     C1RXOVIF        equ	296	;# 
  8666   000128                     C1RXOVIFL       equ	296	;# 
  8667   000129                     C1RXOVIFH       equ	297	;# 
  8668   00012A                     C1RXOVIFU       equ	298	;# 
  8669   00012B                     C1RXOVIFT       equ	299	;# 
  8670   00012C                     C1TXATIF        equ	300	;# 
  8671   00012C                     C1TXATIFL       equ	300	;# 
  8672   00012D                     C1TXATIFH       equ	301	;# 
  8673   00012E                     C1TXATIFU       equ	302	;# 
  8674   00012F                     C1TXATIFT       equ	303	;# 
  8675   000130                     C1TXREQ         equ	304	;# 
  8676   000130                     C1TXREQL        equ	304	;# 
  8677   000131                     C1TXREQH        equ	305	;# 
  8678   000132                     C1TXREQU        equ	306	;# 
  8679   000133                     C1TXREQT        equ	307	;# 
  8680   000134                     C1TRECL         equ	308	;# 
  8681   000135                     C1TRECH         equ	309	;# 
  8682   000136                     C1TRECU         equ	310	;# 
  8683   000137                     C1TRECT         equ	311	;# 
  8684   000138                     C1BDIAG0L       equ	312	;# 
  8685   000139                     C1BDIAG0H       equ	313	;# 
  8686   00013C                     C1BDIAG1L       equ	316	;# 
  8687   00013D                     C1BDIAG1H       equ	317	;# 
  8688   00013E                     C1BDIAG1U       equ	318	;# 
  8689   00013F                     C1BDIAG1T       equ	319	;# 
  8690   000140                     C1TEFCONL       equ	320	;# 
  8691   000141                     C1TEFCONH       equ	321	;# 
  8692   000142                     C1TEFCONU       equ	322	;# 
  8693   000143                     C1TEFCONT       equ	323	;# 
  8694   000144                     C1TEFSTAL       equ	324	;# 
  8695   000145                     C1TEFSTAH       equ	325	;# 
  8696   000146                     C1TEFSTAU       equ	326	;# 
  8697   000147                     C1TEFSTAT       equ	327	;# 
  8698   000148                     C1TEFUA         equ	328	;# 
  8699   000148                     C1TEFUAL        equ	328	;# 
  8700   000149                     C1TEFUAH        equ	329	;# 
  8701   00014A                     C1TEFUAU        equ	330	;# 
  8702   00014B                     C1TEFUAT        equ	331	;# 
  8703   00014C                     C1FIFOBA        equ	332	;# 
  8704   00014C                     C1FIFOBAL       equ	332	;# 
  8705   00014D                     C1FIFOBAH       equ	333	;# 
  8706   00014E                     C1FIFOBAU       equ	334	;# 
  8707   00014F                     C1FIFOBAT       equ	335	;# 
  8708   000150                     C1TXQCONL       equ	336	;# 
  8709   000151                     C1TXQCONH       equ	337	;# 
  8710   000152                     C1TXQCONU       equ	338	;# 
  8711   000153                     C1TXQCONT       equ	339	;# 
  8712   000154                     C1TXQSTAL       equ	340	;# 
  8713   000155                     C1TXQSTAH       equ	341	;# 
  8714   000156                     C1TXQSTAU       equ	342	;# 
  8715   000157                     C1TXQSTAT       equ	343	;# 
  8716   000158                     C1TXQUA         equ	344	;# 
  8717   000158                     C1TXQUAL        equ	344	;# 
  8718   000159                     C1TXQUAH        equ	345	;# 
  8719   00015A                     C1TXQUAU        equ	346	;# 
  8720   00015B                     C1TXQUAT        equ	347	;# 
  8721   00015C                     C1FIFOCON1      equ	348	;# 
  8722   00015C                     C1FIFOCON1L     equ	348	;# 
  8723   00015D                     C1FIFOCON1H     equ	349	;# 
  8724   00015E                     C1FIFOCON1U     equ	350	;# 
  8725   00015F                     C1FIFOCON1T     equ	351	;# 
  8726   000160                     C1FIFOSTA1      equ	352	;# 
  8727   000160                     C1FIFOSTA1L     equ	352	;# 
  8728   000161                     C1FIFOSTA1H     equ	353	;# 
  8729   000162                     C1FIFOSTA1U     equ	354	;# 
  8730   000163                     C1FIFOSTA1T     equ	355	;# 
  8731   000164                     C1FIFOUA1       equ	356	;# 
  8732   000164                     C1FIFOUA1L      equ	356	;# 
  8733   000165                     C1FIFOUA1H      equ	357	;# 
  8734   000166                     C1FIFOUA1U      equ	358	;# 
  8735   000167                     C1FIFOUA1T      equ	359	;# 
  8736   000168                     C1FIFOCON2      equ	360	;# 
  8737   000168                     C1FIFOCON2L     equ	360	;# 
  8738   000169                     C1FIFOCON2H     equ	361	;# 
  8739   00016A                     C1FIFOCON2U     equ	362	;# 
  8740   00016B                     C1FIFOCON2T     equ	363	;# 
  8741   00016C                     C1FIFOSTA2      equ	364	;# 
  8742   00016C                     C1FIFOSTA2L     equ	364	;# 
  8743   00016D                     C1FIFOSTA2H     equ	365	;# 
  8744   00016E                     C1FIFOSTA2U     equ	366	;# 
  8745   00016F                     C1FIFOSTA2T     equ	367	;# 
  8746   000170                     C1FIFOUA2       equ	368	;# 
  8747   000170                     C1FIFOUA2L      equ	368	;# 
  8748   000171                     C1FIFOUA2H      equ	369	;# 
  8749   000172                     C1FIFOUA2U      equ	370	;# 
  8750   000173                     C1FIFOUA2T      equ	371	;# 
  8751   000174                     C1FIFOCON3      equ	372	;# 
  8752   000174                     C1FIFOCON3L     equ	372	;# 
  8753   000175                     C1FIFOCON3H     equ	373	;# 
  8754   000176                     C1FIFOCON3U     equ	374	;# 
  8755   000177                     C1FIFOCON3T     equ	375	;# 
  8756   000178                     C1FIFOSTA3      equ	376	;# 
  8757   000178                     C1FIFOSTA3L     equ	376	;# 
  8758   000179                     C1FIFOSTA3H     equ	377	;# 
  8759   00017A                     C1FIFOSTA3U     equ	378	;# 
  8760   00017B                     C1FIFOSTA3T     equ	379	;# 
  8761   00017C                     C1FIFOUA3       equ	380	;# 
  8762   00017C                     C1FIFOUA3L      equ	380	;# 
  8763   00017D                     C1FIFOUA3H      equ	381	;# 
  8764   00017E                     C1FIFOUA3U      equ	382	;# 
  8765   00017F                     C1FIFOUA3T      equ	383	;# 
  8766   000180                     C1FLTCON0L      equ	384	;# 
  8767   000181                     C1FLTCON0H      equ	385	;# 
  8768   000182                     C1FLTCON0U      equ	386	;# 
  8769   000183                     C1FLTCON0T      equ	387	;# 
  8770   000184                     C1FLTCON1L      equ	388	;# 
  8771   000185                     C1FLTCON1H      equ	389	;# 
  8772   000186                     C1FLTCON1U      equ	390	;# 
  8773   000187                     C1FLTCON1T      equ	391	;# 
  8774   000188                     C1FLTCON2L      equ	392	;# 
  8775   000189                     C1FLTCON2H      equ	393	;# 
  8776   00018A                     C1FLTCON2U      equ	394	;# 
  8777   00018B                     C1FLTCON2T      equ	395	;# 
  8778   00018C                     C1FLTOBJ0       equ	396	;# 
  8779   00018C                     C1FLTOBJ0L      equ	396	;# 
  8780   00018D                     C1FLTOBJ0H      equ	397	;# 
  8781   00018E                     C1FLTOBJ0U      equ	398	;# 
  8782   00018F                     C1FLTOBJ0T      equ	399	;# 
  8783   000190                     C1MASK0         equ	400	;# 
  8784   000190                     C1MASK0L        equ	400	;# 
  8785   000191                     C1MASK0H        equ	401	;# 
  8786   000192                     C1MASK0U        equ	402	;# 
  8787   000193                     C1MASK0T        equ	403	;# 
  8788   000194                     C1FLTOBJ1       equ	404	;# 
  8789   000194                     C1FLTOBJ1L      equ	404	;# 
  8790   000195                     C1FLTOBJ1H      equ	405	;# 
  8791   000196                     C1FLTOBJ1U      equ	406	;# 
  8792   000197                     C1FLTOBJ1T      equ	407	;# 
  8793   000198                     C1MASK1         equ	408	;# 
  8794   000198                     C1MASK1L        equ	408	;# 
  8795   000199                     C1MASK1H        equ	409	;# 
  8796   00019A                     C1MASK1U        equ	410	;# 
  8797   00019B                     C1MASK1T        equ	411	;# 
  8798   00019C                     C1FLTOBJ2       equ	412	;# 
  8799   00019C                     C1FLTOBJ2L      equ	412	;# 
  8800   00019D                     C1FLTOBJ2H      equ	413	;# 
  8801   00019E                     C1FLTOBJ2U      equ	414	;# 
  8802   00019F                     C1FLTOBJ2T      equ	415	;# 
  8803   0001A0                     C1MASK2         equ	416	;# 
  8804   0001A0                     C1MASK2L        equ	416	;# 
  8805   0001A1                     C1MASK2H        equ	417	;# 
  8806   0001A2                     C1MASK2U        equ	418	;# 
  8807   0001A3                     C1MASK2T        equ	419	;# 
  8808   0001A4                     C1FLTOBJ3       equ	420	;# 
  8809   0001A4                     C1FLTOBJ3L      equ	420	;# 
  8810   0001A5                     C1FLTOBJ3H      equ	421	;# 
  8811   0001A6                     C1FLTOBJ3U      equ	422	;# 
  8812   0001A7                     C1FLTOBJ3T      equ	423	;# 
  8813   0001A8                     C1MASK3         equ	424	;# 
  8814   0001A8                     C1MASK3L        equ	424	;# 
  8815   0001A9                     C1MASK3H        equ	425	;# 
  8816   0001AA                     C1MASK3U        equ	426	;# 
  8817   0001AB                     C1MASK3T        equ	427	;# 
  8818   0001AC                     C1FLTOBJ4       equ	428	;# 
  8819   0001AC                     C1FLTOBJ4L      equ	428	;# 
  8820   0001AD                     C1FLTOBJ4H      equ	429	;# 
  8821   0001AE                     C1FLTOBJ4U      equ	430	;# 
  8822   0001AF                     C1FLTOBJ4T      equ	431	;# 
  8823   0001B0                     C1MASK4         equ	432	;# 
  8824   0001B0                     C1MASK4L        equ	432	;# 
  8825   0001B1                     C1MASK4H        equ	433	;# 
  8826   0001B2                     C1MASK4U        equ	434	;# 
  8827   0001B3                     C1MASK4T        equ	435	;# 
  8828   0001B4                     C1FLTOBJ5       equ	436	;# 
  8829   0001B4                     C1FLTOBJ5L      equ	436	;# 
  8830   0001B5                     C1FLTOBJ5H      equ	437	;# 
  8831   0001B6                     C1FLTOBJ5U      equ	438	;# 
  8832   0001B7                     C1FLTOBJ5T      equ	439	;# 
  8833   0001B8                     C1MASK5         equ	440	;# 
  8834   0001B8                     C1MASK5L        equ	440	;# 
  8835   0001B9                     C1MASK5H        equ	441	;# 
  8836   0001BA                     C1MASK5U        equ	442	;# 
  8837   0001BB                     C1MASK5T        equ	443	;# 
  8838   0001BC                     C1FLTOBJ6       equ	444	;# 
  8839   0001BC                     C1FLTOBJ6L      equ	444	;# 
  8840   0001BD                     C1FLTOBJ6H      equ	445	;# 
  8841   0001BE                     C1FLTOBJ6U      equ	446	;# 
  8842   0001BF                     C1FLTOBJ6T      equ	447	;# 
  8843   0001C0                     C1MASK6         equ	448	;# 
  8844   0001C0                     C1MASK6L        equ	448	;# 
  8845   0001C1                     C1MASK6H        equ	449	;# 
  8846   0001C2                     C1MASK6U        equ	450	;# 
  8847   0001C3                     C1MASK6T        equ	451	;# 
  8848   0001C4                     C1FLTOBJ7       equ	452	;# 
  8849   0001C4                     C1FLTOBJ7L      equ	452	;# 
  8850   0001C5                     C1FLTOBJ7H      equ	453	;# 
  8851   0001C6                     C1FLTOBJ7U      equ	454	;# 
  8852   0001C7                     C1FLTOBJ7T      equ	455	;# 
  8853   0001C8                     C1MASK7         equ	456	;# 
  8854   0001C8                     C1MASK7L        equ	456	;# 
  8855   0001C9                     C1MASK7H        equ	457	;# 
  8856   0001CA                     C1MASK7U        equ	458	;# 
  8857   0001CB                     C1MASK7T        equ	459	;# 
  8858   0001CC                     C1FLTOBJ8       equ	460	;# 
  8859   0001CC                     C1FLTOBJ8L      equ	460	;# 
  8860   0001CD                     C1FLTOBJ8H      equ	461	;# 
  8861   0001CE                     C1FLTOBJ8U      equ	462	;# 
  8862   0001CF                     C1FLTOBJ8T      equ	463	;# 
  8863   0001D0                     C1MASK8         equ	464	;# 
  8864   0001D0                     C1MASK8L        equ	464	;# 
  8865   0001D1                     C1MASK8H        equ	465	;# 
  8866   0001D2                     C1MASK8U        equ	466	;# 
  8867   0001D3                     C1MASK8T        equ	467	;# 
  8868   0001D4                     C1FLTOBJ9       equ	468	;# 
  8869   0001D4                     C1FLTOBJ9L      equ	468	;# 
  8870   0001D5                     C1FLTOBJ9H      equ	469	;# 
  8871   0001D6                     C1FLTOBJ9U      equ	470	;# 
  8872   0001D7                     C1FLTOBJ9T      equ	471	;# 
  8873   0001D8                     C1MASK9         equ	472	;# 
  8874   0001D8                     C1MASK9L        equ	472	;# 
  8875   0001D9                     C1MASK9H        equ	473	;# 
  8876   0001DA                     C1MASK9U        equ	474	;# 
  8877   0001DB                     C1MASK9T        equ	475	;# 
  8878   0001DC                     C1FLTOBJ10      equ	476	;# 
  8879   0001DC                     C1FLTOBJ10L     equ	476	;# 
  8880   0001DD                     C1FLTOBJ10H     equ	477	;# 
  8881   0001DE                     C1FLTOBJ10U     equ	478	;# 
  8882   0001DF                     C1FLTOBJ10T     equ	479	;# 
  8883   0001E0                     C1MASK10        equ	480	;# 
  8884   0001E0                     C1MASK10L       equ	480	;# 
  8885   0001E1                     C1MASK10H       equ	481	;# 
  8886   0001E2                     C1MASK10U       equ	482	;# 
  8887   0001E3                     C1MASK10T       equ	483	;# 
  8888   0001E4                     C1FLTOBJ11      equ	484	;# 
  8889   0001E4                     C1FLTOBJ11L     equ	484	;# 
  8890   0001E5                     C1FLTOBJ11H     equ	485	;# 
  8891   0001E6                     C1FLTOBJ11U     equ	486	;# 
  8892   0001E7                     C1FLTOBJ11T     equ	487	;# 
  8893   0001E8                     C1MASK11        equ	488	;# 
  8894   0001E8                     C1MASK11L       equ	488	;# 
  8895   0001E9                     C1MASK11H       equ	489	;# 
  8896   0001EA                     C1MASK11U       equ	490	;# 
  8897   0001EB                     C1MASK11T       equ	491	;# 
  8898   000200                     PPSLOCK         equ	512	;# 
  8899   000201                     RA0PPS          equ	513	;# 
  8900   000202                     RA1PPS          equ	514	;# 
  8901   000203                     RA2PPS          equ	515	;# 
  8902   000204                     RA3PPS          equ	516	;# 
  8903   000205                     RA4PPS          equ	517	;# 
  8904   000206                     RA5PPS          equ	518	;# 
  8905   000207                     RA6PPS          equ	519	;# 
  8906   000208                     RA7PPS          equ	520	;# 
  8907   000209                     RB0PPS          equ	521	;# 
  8908   00020A                     RB1PPS          equ	522	;# 
  8909   00020B                     RB2PPS          equ	523	;# 
  8910   00020C                     RB3PPS          equ	524	;# 
  8911   00020D                     RB4PPS          equ	525	;# 
  8912   00020E                     RB5PPS          equ	526	;# 
  8913   00020F                     RB6PPS          equ	527	;# 
  8914   000210                     RB7PPS          equ	528	;# 
  8915   000211                     RC0PPS          equ	529	;# 
  8916   000212                     RC1PPS          equ	530	;# 
  8917   000213                     RC2PPS          equ	531	;# 
  8918   000214                     RC3PPS          equ	532	;# 
  8919   000215                     RC4PPS          equ	533	;# 
  8920   000216                     RC5PPS          equ	534	;# 
  8921   000217                     RC6PPS          equ	535	;# 
  8922   000218                     RC7PPS          equ	536	;# 
  8923   00023D                     CANRXPPS        equ	573	;# 
  8924   00023E                     INT0PPS         equ	574	;# 
  8925   00023F                     INT1PPS         equ	575	;# 
  8926   000240                     INT2PPS         equ	576	;# 
  8927   000241                     T0CKIPPS        equ	577	;# 
  8928   000242                     T1CKIPPS        equ	578	;# 
  8929   000243                     T1GPPS          equ	579	;# 
  8930   000244                     T3CKIPPS        equ	580	;# 
  8931   000245                     T3GPPS          equ	581	;# 
  8932   000246                     T5CKIPPS        equ	582	;# 
  8933   000247                     T5GPPS          equ	583	;# 
  8934   000248                     T2INPPS         equ	584	;# 
  8935   000249                     T4INPPS         equ	585	;# 
  8936   00024A                     T6INPPS         equ	586	;# 
  8937   00024B                     TUIN0PPS        equ	587	;# 
  8938   00024C                     TUIN1PPS        equ	588	;# 
  8939   00024F                     CCP1PPS         equ	591	;# 
  8940   000250                     CCP2PPS         equ	592	;# 
  8941   000251                     CCP3PPS         equ	593	;# 
  8942   000253                     PWM1ERSPPS      equ	595	;# 
  8943   000254                     PWM2ERSPPS      equ	596	;# 
  8944   000255                     PWM3ERSPPS      equ	597	;# 
  8945   000256                     PWM4ERSPPS      equ	598	;# 
  8946   000257                     PWMIN0PPS       equ	599	;# 
  8947   000258                     PWMIN1PPS       equ	600	;# 
  8948   000259                     SMT1WINPPS      equ	601	;# 
  8949   00025A                     SMT1SIGPPS      equ	602	;# 
  8950   00025B                     CWG1PPS         equ	603	;# 
  8951   00025B                     CWG1INPPS       equ	603	;# 
  8952   00025C                     CWG2PPS         equ	604	;# 
  8953   00025C                     CWG2INPPS       equ	604	;# 
  8954   00025D                     CWG3PPS         equ	605	;# 
  8955   00025D                     CWG3INPPS       equ	605	;# 
  8956   00025E                     MD1CARLPPS      equ	606	;# 
  8957   00025E                     MDCARLPPS       equ	606	;# 
  8958   00025F                     MD1CARHPPS      equ	607	;# 
  8959   00025F                     MDCARHPPS       equ	607	;# 
  8960   000260                     MD1SRCPPS       equ	608	;# 
  8961   000260                     MDSRCPPS        equ	608	;# 
  8962   000261                     CLCIN0PPS       equ	609	;# 
  8963   000262                     CLCIN1PPS       equ	610	;# 
  8964   000263                     CLCIN2PPS       equ	611	;# 
  8965   000264                     CLCIN3PPS       equ	612	;# 
  8966   000265                     CLCIN4PPS       equ	613	;# 
  8967   000266                     CLCIN5PPS       equ	614	;# 
  8968   000267                     CLCIN6PPS       equ	615	;# 
  8969   000268                     CLCIN7PPS       equ	616	;# 
  8970   000269                     ADACTPPS        equ	617	;# 
  8971   00026A                     SPI1SCKPPS      equ	618	;# 
  8972   00026B                     SPI1SDIPPS      equ	619	;# 
  8973   00026C                     SPI1SSPPS       equ	620	;# 
  8974   00026D                     SPI2SCKPPS      equ	621	;# 
  8975   00026E                     SPI2SDIPPS      equ	622	;# 
  8976   00026F                     SPI2SSPPS       equ	623	;# 
  8977   000270                     I2C1SDAPPS      equ	624	;# 
  8978   000271                     I2C1SCLPPS      equ	625	;# 
  8979   000272                     U1RXPPS         equ	626	;# 
  8980   000273                     U1CTSPPS        equ	627	;# 
  8981   000274                     U2RXPPS         equ	628	;# 
  8982   000275                     U2CTSPPS        equ	629	;# 
  8983   000276                     U3RXPPS         equ	630	;# 
  8984   000277                     U3CTSPPS        equ	631	;# 
  8985   000278                     U4RXPPS         equ	632	;# 
  8986   000279                     U4CTSPPS        equ	633	;# 
  8987   00027A                     U5RXPPS         equ	634	;# 
  8988   00027B                     U5CTSPPS        equ	635	;# 
  8989   000286                     RC4I2C          equ	646	;# 
  8990   000287                     RC3I2C          equ	647	;# 
  8991   000288                     RB2I2C          equ	648	;# 
  8992   000289                     RB1I2C          equ	649	;# 
  8993   00028A                     I2C1RXB         equ	650	;# 
  8994   00028B                     I2C1TXB         equ	651	;# 
  8995   00028C                     I2C1CNTL        equ	652	;# 
  8996   00028D                     I2C1CNTH        equ	653	;# 
  8997   00028E                     I2C1ADB0        equ	654	;# 
  8998   00028F                     I2C1ADB1        equ	655	;# 
  8999   000290                     I2C1ADR0        equ	656	;# 
  9000   000291                     I2C1ADR1        equ	657	;# 
  9001   000292                     I2C1ADR2        equ	658	;# 
  9002   000293                     I2C1ADR3        equ	659	;# 
  9003   000294                     I2C1CON0        equ	660	;# 
  9004   000295                     I2C1CON1        equ	661	;# 
  9005   000296                     I2C1CON2        equ	662	;# 
  9006   000297                     I2C1ERR         equ	663	;# 
  9007   000298                     I2C1STAT0       equ	664	;# 
  9008   000299                     I2C1STAT1       equ	665	;# 
  9009   00029A                     I2C1PIR         equ	666	;# 
  9010   00029B                     I2C1PIE         equ	667	;# 
  9011   00029C                     I2C1BTO         equ	668	;# 
  9012   00029D                     I2C1BAUD        equ	669	;# 
  9013   00029E                     I2C1CLK         equ	670	;# 
  9014   00029F                     I2C1BTOC        equ	671	;# 
  9015   0002A1                     U1RXB           equ	673	;# 
  9016   0002A1                     U1RXBL          equ	673	;# 
  9017   0002A2                     U1RXCHK         equ	674	;# 
  9018   0002A3                     U1TXB           equ	675	;# 
  9019   0002A3                     U1TXBL          equ	675	;# 
  9020   0002A4                     U1TXCHK         equ	676	;# 
  9021   0002A5                     U1P1            equ	677	;# 
  9022   0002A5                     U1P1L           equ	677	;# 
  9023   0002A6                     U1P1H           equ	678	;# 
  9024   0002A7                     U1P2            equ	679	;# 
  9025   0002A7                     U1P2L           equ	679	;# 
  9026   0002A8                     U1P2H           equ	680	;# 
  9027   0002A9                     U1P3            equ	681	;# 
  9028   0002A9                     U1P3L           equ	681	;# 
  9029   0002AA                     U1P3H           equ	682	;# 
  9030   0002AB                     U1CON0          equ	683	;# 
  9031   0002AC                     U1CON1          equ	684	;# 
  9032   0002AD                     U1CON2          equ	685	;# 
  9033   0002AE                     U1BRG           equ	686	;# 
  9034   0002AE                     U1BRGL          equ	686	;# 
  9035   0002AF                     U1BRGH          equ	687	;# 
  9036   0002B0                     U1FIFO          equ	688	;# 
  9037   0002B1                     U1UIR           equ	689	;# 
  9038   0002B2                     U1ERRIR         equ	690	;# 
  9039   0002B3                     U1ERRIE         equ	691	;# 
  9040   0002B4                     U2RXB           equ	692	;# 
  9041   0002B4                     U2RXBL          equ	692	;# 
  9042   0002B5                     U2RXCHK         equ	693	;# 
  9043   0002B6                     U2TXB           equ	694	;# 
  9044   0002B6                     U2TXBL          equ	694	;# 
  9045   0002B7                     U2TXCHK         equ	695	;# 
  9046   0002B8                     U2P1            equ	696	;# 
  9047   0002B8                     U2P1L           equ	696	;# 
  9048   0002B9                     U2P1H           equ	697	;# 
  9049   0002BA                     U2P2            equ	698	;# 
  9050   0002BA                     U2P2L           equ	698	;# 
  9051   0002BB                     U2P2H           equ	699	;# 
  9052   0002BC                     U2P3            equ	700	;# 
  9053   0002BC                     U2P3L           equ	700	;# 
  9054   0002BD                     U2P3H           equ	701	;# 
  9055   0002BE                     U2CON0          equ	702	;# 
  9056   0002BF                     U2CON1          equ	703	;# 
  9057   0002C0                     U2CON2          equ	704	;# 
  9058   0002C1                     U2BRG           equ	705	;# 
  9059   0002C1                     U2BRGL          equ	705	;# 
  9060   0002C2                     U2BRGH          equ	706	;# 
  9061   0002C3                     U2FIFO          equ	707	;# 
  9062   0002C4                     U2UIR           equ	708	;# 
  9063   0002C5                     U2ERRIR         equ	709	;# 
  9064   0002C6                     U2ERRIE         equ	710	;# 
  9065   0002C7                     U3RXB           equ	711	;# 
  9066   0002C7                     U3RXBL          equ	711	;# 
  9067   0002C9                     U3TXB           equ	713	;# 
  9068   0002C9                     U3TXBL          equ	713	;# 
  9069   0002CB                     U3P1            equ	715	;# 
  9070   0002CB                     U3P1L           equ	715	;# 
  9071   0002CD                     U3P2            equ	717	;# 
  9072   0002CD                     U3P2L           equ	717	;# 
  9073   0002CF                     U3P3            equ	719	;# 
  9074   0002CF                     U3P3L           equ	719	;# 
  9075   0002D1                     U3CON0          equ	721	;# 
  9076   0002D2                     U3CON1          equ	722	;# 
  9077   0002D3                     U3CON2          equ	723	;# 
  9078   0002D4                     U3BRG           equ	724	;# 
  9079   0002D4                     U3BRGL          equ	724	;# 
  9080   0002D5                     U3BRGH          equ	725	;# 
  9081   0002D6                     U3FIFO          equ	726	;# 
  9082   0002D7                     U3UIR           equ	727	;# 
  9083   0002D8                     U3ERRIR         equ	728	;# 
  9084   0002D9                     U3ERRIE         equ	729	;# 
  9085   0002DA                     U4RXB           equ	730	;# 
  9086   0002DA                     U4RXBL          equ	730	;# 
  9087   0002DC                     U4TXB           equ	732	;# 
  9088   0002DC                     U4TXBL          equ	732	;# 
  9089   0002DE                     U4P1            equ	734	;# 
  9090   0002DE                     U4P1L           equ	734	;# 
  9091   0002E0                     U4P2            equ	736	;# 
  9092   0002E0                     U4P2L           equ	736	;# 
  9093   0002E2                     U4P3            equ	738	;# 
  9094   0002E2                     U4P3L           equ	738	;# 
  9095   0002E4                     U4CON0          equ	740	;# 
  9096   0002E5                     U4CON1          equ	741	;# 
  9097   0002E6                     U4CON2          equ	742	;# 
  9098   0002E7                     U4BRG           equ	743	;# 
  9099   0002E7                     U4BRGL          equ	743	;# 
  9100   0002E8                     U4BRGH          equ	744	;# 
  9101   0002E9                     U4FIFO          equ	745	;# 
  9102   0002EA                     U4UIR           equ	746	;# 
  9103   0002EB                     U4ERRIR         equ	747	;# 
  9104   0002EC                     U4ERRIE         equ	748	;# 
  9105   0002ED                     U5RXB           equ	749	;# 
  9106   0002ED                     U5RXBL          equ	749	;# 
  9107   0002EF                     U5TXB           equ	751	;# 
  9108   0002EF                     U5TXBL          equ	751	;# 
  9109   0002F1                     U5P1            equ	753	;# 
  9110   0002F1                     U5P1L           equ	753	;# 
  9111   0002F3                     U5P2            equ	755	;# 
  9112   0002F3                     U5P2L           equ	755	;# 
  9113   0002F5                     U5P3            equ	757	;# 
  9114   0002F5                     U5P3L           equ	757	;# 
  9115   0002F7                     U5CON0          equ	759	;# 
  9116   0002F8                     U5CON1          equ	760	;# 
  9117   0002F9                     U5CON2          equ	761	;# 
  9118   0002FA                     U5BRG           equ	762	;# 
  9119   0002FA                     U5BRGL          equ	762	;# 
  9120   0002FB                     U5BRGH          equ	763	;# 
  9121   0002FC                     U5FIFO          equ	764	;# 
  9122   0002FD                     U5UIR           equ	765	;# 
  9123   0002FE                     U5ERRIR         equ	766	;# 
  9124   0002FF                     U5ERRIE         equ	767	;# 
  9125   000300                     SMT1TMR         equ	768	;# 
  9126   000300                     SMT1TMRL        equ	768	;# 
  9127   000301                     SMT1TMRH        equ	769	;# 
  9128   000302                     SMT1TMRU        equ	770	;# 
  9129   000303                     SMT1CPR         equ	771	;# 
  9130   000303                     SMT1CPRL        equ	771	;# 
  9131   000304                     SMT1CPRH        equ	772	;# 
  9132   000305                     SMT1CPRU        equ	773	;# 
  9133   000306                     SMT1CPW         equ	774	;# 
  9134   000306                     SMT1CPWL        equ	774	;# 
  9135   000307                     SMT1CPWH        equ	775	;# 
  9136   000308                     SMT1CPWU        equ	776	;# 
  9137   000309                     SMT1PR          equ	777	;# 
  9138   000309                     SMT1PRL         equ	777	;# 
  9139   00030A                     SMT1PRH         equ	778	;# 
  9140   00030B                     SMT1PRU         equ	779	;# 
  9141   00030C                     SMT1CON0        equ	780	;# 
  9142   00030D                     SMT1CON1        equ	781	;# 
  9143   00030E                     SMT1STAT        equ	782	;# 
  9144   00030F                     SMT1CLK         equ	783	;# 
  9145   000310                     SMT1SIG         equ	784	;# 
  9146   000311                     SMT1WIN         equ	785	;# 
  9147   000318                     TMR0L           equ	792	;# 
  9148   000318                     TMR0            equ	792	;# 
  9149   000319                     TMR0H           equ	793	;# 
  9150   000319                     PR0             equ	793	;# 
  9151   00031A                     T0CON0          equ	794	;# 
  9152   00031B                     T0CON1          equ	795	;# 
  9153   00031C                     TMR1            equ	796	;# 
  9154   00031C                     TMR1L           equ	796	;# 
  9155   00031D                     TMR1H           equ	797	;# 
  9156   00031E                     T1CON           equ	798	;# 
  9157   00031E                     TMR1CON         equ	798	;# 
  9158   00031F                     T1GCON          equ	799	;# 
  9159   00031F                     TMR1GCON        equ	799	;# 
  9160   000320                     T1GATE          equ	800	;# 
  9161   000320                     TMR1GATE        equ	800	;# 
  9162   000321                     T1CLK           equ	801	;# 
  9163   000321                     TMR1CLK         equ	801	;# 
  9164   000321                     PR1             equ	801	;# 
  9165   000322                     T2TMR           equ	802	;# 
  9166   000322                     TMR2            equ	802	;# 
  9167   000323                     T2PR            equ	803	;# 
  9168   000323                     PR2             equ	803	;# 
  9169   000324                     T2CON           equ	804	;# 
  9170   000325                     T2HLT           equ	805	;# 
  9171   000326                     T2CLKCON        equ	806	;# 
  9172   000326                     T2CLK           equ	806	;# 
  9173   000327                     T2RST           equ	807	;# 
  9174   000328                     TMR3            equ	808	;# 
  9175   000328                     TMR3L           equ	808	;# 
  9176   000329                     TMR3H           equ	809	;# 
  9177   00032A                     T3CON           equ	810	;# 
  9178   00032A                     TMR3CON         equ	810	;# 
  9179   00032B                     T3GCON          equ	811	;# 
  9180   00032B                     TMR3GCON        equ	811	;# 
  9181   00032C                     T3GATE          equ	812	;# 
  9182   00032C                     TMR3GATE        equ	812	;# 
  9183   00032D                     T3CLK           equ	813	;# 
  9184   00032D                     TMR3CLK         equ	813	;# 
  9185   00032D                     PR3             equ	813	;# 
  9186   00032E                     T4TMR           equ	814	;# 
  9187   00032E                     TMR4            equ	814	;# 
  9188   00032F                     T4PR            equ	815	;# 
  9189   00032F                     PR4             equ	815	;# 
  9190   000330                     T4CON           equ	816	;# 
  9191   000331                     T4HLT           equ	817	;# 
  9192   000332                     T4CLKCON        equ	818	;# 
  9193   000332                     T4CLK           equ	818	;# 
  9194   000333                     T4RST           equ	819	;# 
  9195   000334                     TMR5            equ	820	;# 
  9196   000334                     TMR5L           equ	820	;# 
  9197   000335                     TMR5H           equ	821	;# 
  9198   000336                     T5CON           equ	822	;# 
  9199   000336                     TMR5CON         equ	822	;# 
  9200   000337                     T5GCON          equ	823	;# 
  9201   000337                     TMR5GCON        equ	823	;# 
  9202   000338                     T5GATE          equ	824	;# 
  9203   000338                     TMR5GATE        equ	824	;# 
  9204   000339                     T5CLK           equ	825	;# 
  9205   000339                     TMR5CLK         equ	825	;# 
  9206   000339                     PR5             equ	825	;# 
  9207   00033A                     T6TMR           equ	826	;# 
  9208   00033A                     TMR6            equ	826	;# 
  9209   00033B                     T6PR            equ	827	;# 
  9210   00033B                     PR6             equ	827	;# 
  9211   00033C                     T6CON           equ	828	;# 
  9212   00033D                     T6HLT           equ	829	;# 
  9213   00033E                     T6CLKCON        equ	830	;# 
  9214   00033E                     T6CLK           equ	830	;# 
  9215   00033F                     T6RST           equ	831	;# 
  9216   000340                     CCPR1           equ	832	;# 
  9217   000340                     CCPR1L          equ	832	;# 
  9218   000341                     CCPR1H          equ	833	;# 
  9219   000342                     CCP1CON         equ	834	;# 
  9220   000343                     CCP1CAP         equ	835	;# 
  9221   000344                     CCPR2           equ	836	;# 
  9222   000344                     CCPR2L          equ	836	;# 
  9223   000345                     CCPR2H          equ	837	;# 
  9224   000346                     CCP2CON         equ	838	;# 
  9225   000347                     CCP2CAP         equ	839	;# 
  9226   000348                     CCPR3           equ	840	;# 
  9227   000348                     CCPR3L          equ	840	;# 
  9228   000349                     CCPR3H          equ	841	;# 
  9229   00034A                     CCP3CON         equ	842	;# 
  9230   00034B                     CCP3CAP         equ	843	;# 
  9231   00034C                     CCPTMRS0        equ	844	;# 
  9232   00034F                     CRCDATA         equ	847	;# 
  9233   00034F                     CRCDATAL        equ	847	;# 
  9234   000350                     CRCDATAH        equ	848	;# 
  9235   000351                     CRCDATAU        equ	849	;# 
  9236   000352                     CRCDATAT        equ	850	;# 
  9237   000353                     CRCOUT          equ	851	;# 
  9238   000353                     CRCSHFT         equ	851	;# 
  9239   000353                     CRCXOR          equ	851	;# 
  9240   000353                     CRCOUTL         equ	851	;# 
  9241   000353                     CRCSHFTL        equ	851	;# 
  9242   000353                     CRCSHIFTL       equ	851	;# 
  9243   000353                     CRCXORL         equ	851	;# 
  9244   000354                     CRCOUTH         equ	852	;# 
  9245   000354                     CRCSHFTH        equ	852	;# 
  9246   000354                     CRCSHIFTH       equ	852	;# 
  9247   000354                     CRCXORH         equ	852	;# 
  9248   000355                     CRCOUTU         equ	853	;# 
  9249   000355                     CRCSHFTU        equ	853	;# 
  9250   000355                     CRCSHIFTU       equ	853	;# 
  9251   000355                     CRCXORU         equ	853	;# 
  9252   000356                     CRCOUTT         equ	854	;# 
  9253   000356                     CRCSHFTT        equ	854	;# 
  9254   000356                     CRCSHIFTT       equ	854	;# 
  9255   000356                     CRCXORT         equ	854	;# 
  9256   000357                     CRCCON0         equ	855	;# 
  9257   000358                     CRCCON1         equ	856	;# 
  9258   000359                     CRCCON2         equ	857	;# 
  9259   00035A                     SCANLADR        equ	858	;# 
  9260   00035A                     SCANLADRL       equ	858	;# 
  9261   00035B                     SCANLADRH       equ	859	;# 
  9262   00035C                     SCANLADRU       equ	860	;# 
  9263   00035D                     SCANHADR        equ	861	;# 
  9264   00035D                     SCANHADRL       equ	861	;# 
  9265   00035E                     SCANHADRH       equ	862	;# 
  9266   00035F                     SCANHADRU       equ	863	;# 
  9267   000360                     SCANCON0        equ	864	;# 
  9268   000361                     SCANTRIG        equ	865	;# 
  9269   000362                     IPR0            equ	866	;# 
  9270   000363                     IPR1            equ	867	;# 
  9271   000364                     IPR2            equ	868	;# 
  9272   000365                     IPR3            equ	869	;# 
  9273   000366                     IPR4            equ	870	;# 
  9274   000367                     IPR5            equ	871	;# 
  9275   000368                     IPR6            equ	872	;# 
  9276   000369                     IPR7            equ	873	;# 
  9277   00036A                     IPR8            equ	874	;# 
  9278   00036B                     IPR9            equ	875	;# 
  9279   00036C                     IPR10           equ	876	;# 
  9280   00036D                     IPR11           equ	877	;# 
  9281   00036E                     IPR12           equ	878	;# 
  9282   00036F                     IPR13           equ	879	;# 
  9283   000370                     IPR14           equ	880	;# 
  9284   000371                     IPR15           equ	881	;# 
  9285   000373                     STATUS_CSHAD    equ	883	;# 
  9286   000374                     WREG_CSHAD      equ	884	;# 
  9287   000375                     BSR_CSHAD       equ	885	;# 
  9288   000376                     SHADCON         equ	886	;# 
  9289   000377                     STATUS_SHAD     equ	887	;# 
  9290   000378                     WREG_SHAD       equ	888	;# 
  9291   000379                     BSR_SHAD        equ	889	;# 
  9292   00037A                     PCLATH_SHAD     equ	890	;# 
  9293   00037B                     PCLATU_SHAD     equ	891	;# 
  9294   00037C                     FSR0SH          equ	892	;# 
  9295   00037C                     FSR0L_SHAD      equ	892	;# 
  9296   00037D                     FSR0H_SHAD      equ	893	;# 
  9297   00037E                     FSR1SH          equ	894	;# 
  9298   00037E                     FSR1L_SHAD      equ	894	;# 
  9299   00037F                     FSR1H_SHAD      equ	895	;# 
  9300   000380                     FSR2SH          equ	896	;# 
  9301   000380                     FSR2L_SHAD      equ	896	;# 
  9302   000381                     FSR2H_SHAD      equ	897	;# 
  9303   000382                     PRODSH          equ	898	;# 
  9304   000382                     PRODL_SHAD      equ	898	;# 
  9305   000383                     PRODH_SHAD      equ	899	;# 
  9306   000387                     TU16ACON0       equ	903	;# 
  9307   000388                     TU16ACON1       equ	904	;# 
  9308   000389                     TU16AHLT        equ	905	;# 
  9309   00038A                     TU16APS         equ	906	;# 
  9310   00038B                     TU16ATMR        equ	907	;# 
  9311   00038B                     TU16ACR         equ	907	;# 
  9312   00038B                     TU16ATMRL       equ	907	;# 
  9313   00038B                     TU16ACRL        equ	907	;# 
  9314   00038C                     TU16ATMRH       equ	908	;# 
  9315   00038C                     TU16ACRH        equ	908	;# 
  9316   00038D                     TU16APR         equ	909	;# 
  9317   00038D                     TU16APRL        equ	909	;# 
  9318   00038E                     TU16APRH        equ	910	;# 
  9319   00038F                     TU16ACLK        equ	911	;# 
  9320   000390                     TU16AERS        equ	912	;# 
  9321   000393                     TU16BCON0       equ	915	;# 
  9322   000394                     TU16BCON1       equ	916	;# 
  9323   000395                     TU16BHLT        equ	917	;# 
  9324   000396                     TU16BPS         equ	918	;# 
  9325   000397                     TU16BTMR        equ	919	;# 
  9326   000397                     TU16BCR         equ	919	;# 
  9327   000397                     TU16BTMRL       equ	919	;# 
  9328   000397                     TU16BCRL        equ	919	;# 
  9329   000398                     TU16BTMRH       equ	920	;# 
  9330   000398                     TU16BCRH        equ	920	;# 
  9331   000399                     TU16BPR         equ	921	;# 
  9332   000399                     TU16BPRL        equ	921	;# 
  9333   00039A                     TU16BPRH        equ	922	;# 
  9334   00039B                     TU16BCLK        equ	923	;# 
  9335   00039C                     TU16BERS        equ	924	;# 
  9336   0003BB                     TUCHAIN         equ	955	;# 
  9337   0003BC                     CWG1CLK         equ	956	;# 
  9338   0003BC                     CWG1CLKCON      equ	956	;# 
  9339   0003BD                     CWG1ISM         equ	957	;# 
  9340   0003BE                     CWG1DBR         equ	958	;# 
  9341   0003BF                     CWG1DBF         equ	959	;# 
  9342   0003C0                     CWG1CON0        equ	960	;# 
  9343   0003C1                     CWG1CON1        equ	961	;# 
  9344   0003C2                     CWG1AS0         equ	962	;# 
  9345   0003C3                     CWG1AS1         equ	963	;# 
  9346   0003C4                     CWG1STR         equ	964	;# 
  9347   0003C5                     CWG2CLK         equ	965	;# 
  9348   0003C5                     CWG2CLKCON      equ	965	;# 
  9349   0003C6                     CWG2ISM         equ	966	;# 
  9350   0003C7                     CWG2DBR         equ	967	;# 
  9351   0003C8                     CWG2DBF         equ	968	;# 
  9352   0003C9                     CWG2CON0        equ	969	;# 
  9353   0003CA                     CWG2CON1        equ	970	;# 
  9354   0003CB                     CWG2AS0         equ	971	;# 
  9355   0003CC                     CWG2AS1         equ	972	;# 
  9356   0003CD                     CWG2STR         equ	973	;# 
  9357   0003CE                     CWG3CLK         equ	974	;# 
  9358   0003CE                     CWG3CLKCON      equ	974	;# 
  9359   0003CF                     CWG3ISM         equ	975	;# 
  9360   0003D0                     CWG3DBR         equ	976	;# 
  9361   0003D1                     CWG3DBF         equ	977	;# 
  9362   0003D2                     CWG3CON0        equ	978	;# 
  9363   0003D3                     CWG3CON1        equ	979	;# 
  9364   0003D4                     CWG3AS0         equ	980	;# 
  9365   0003D5                     CWG3AS1         equ	981	;# 
  9366   0003D6                     CWG3STR         equ	982	;# 
  9367   0003D7                     FVRCON          equ	983	;# 
  9368   0003D8                     ADCPCON         equ	984	;# 
  9369   0003D8                     ADCP            equ	984	;# 
  9370   0003D9                     ADLTH           equ	985	;# 
  9371   0003D9                     ADLTHL          equ	985	;# 
  9372   0003DA                     ADLTHH          equ	986	;# 
  9373   0003DB                     ADUTH           equ	987	;# 
  9374   0003DB                     ADUTHL          equ	987	;# 
  9375   0003DC                     ADUTHH          equ	988	;# 
  9376   0003DD                     ADERR           equ	989	;# 
  9377   0003DD                     ADERRL          equ	989	;# 
  9378   0003DE                     ADERRH          equ	990	;# 
  9379   0003DF                     ADSTPT          equ	991	;# 
  9380   0003DF                     ADSTPTL         equ	991	;# 
  9381   0003E0                     ADSTPTH         equ	992	;# 
  9382   0003E1                     ADFLTR          equ	993	;# 
  9383   0003E1                     ADFLTRL         equ	993	;# 
  9384   0003E2                     ADFLTRH         equ	994	;# 
  9385   0003E3                     ADACC           equ	995	;# 
  9386   0003E3                     ADACCL          equ	995	;# 
  9387   0003E4                     ADACCH          equ	996	;# 
  9388   0003E5                     ADACCU          equ	997	;# 
  9389   0003E6                     ADCNT           equ	998	;# 
  9390   0003E7                     ADRPT           equ	999	;# 
  9391   0003E8                     ADPREV          equ	1000	;# 
  9392   0003E8                     ADPREVL         equ	1000	;# 
  9393   0003E9                     ADPREVH         equ	1001	;# 
  9394   0003EA                     ADRES           equ	1002	;# 
  9395   0003EA                     ADRESL          equ	1002	;# 
  9396   0003EB                     ADRESH          equ	1003	;# 
  9397   0003EC                     ADPCH           equ	1004	;# 
  9398   0003EE                     ADACQ           equ	1006	;# 
  9399   0003EE                     ADACQL          equ	1006	;# 
  9400   0003EF                     ADACQH          equ	1007	;# 
  9401   0003F0                     ADCAP           equ	1008	;# 
  9402   0003F1                     ADPRE           equ	1009	;# 
  9403   0003F1                     ADPREL          equ	1009	;# 
  9404   0003F2                     ADPREH          equ	1010	;# 
  9405   0003F3                     ADCON0          equ	1011	;# 
  9406   0003F4                     ADCON1          equ	1012	;# 
  9407   0003F5                     ADCON2          equ	1013	;# 
  9408   0003F6                     ADCON3          equ	1014	;# 
  9409   0003F7                     ADSTAT          equ	1015	;# 
  9410   0003F8                     ADREF           equ	1016	;# 
  9411   0003F9                     ADACT           equ	1017	;# 
  9412   0003FA                     ADCLK           equ	1018	;# 
  9413   0003FB                     ADCTX           equ	1019	;# 
  9414   0003FC                     ADCSEL1         equ	1020	;# 
  9415   0003FD                     ADCSEL2         equ	1021	;# 
  9416   0003FE                     ADCSEL3         equ	1022	;# 
  9417   0003FF                     ADCSEL4         equ	1023	;# 
  9418   000400                     ANSELA          equ	1024	;# 
  9419   000401                     WPUA            equ	1025	;# 
  9420   000402                     ODCONA          equ	1026	;# 
  9421   000403                     SLRCONA         equ	1027	;# 
  9422   000404                     INLVLA          equ	1028	;# 
  9423   000405                     IOCAP           equ	1029	;# 
  9424   000406                     IOCAN           equ	1030	;# 
  9425   000407                     IOCAF           equ	1031	;# 
  9426   000408                     ANSELB          equ	1032	;# 
  9427   000409                     WPUB            equ	1033	;# 
  9428   00040A                     ODCONB          equ	1034	;# 
  9429   00040B                     SLRCONB         equ	1035	;# 
  9430   00040C                     INLVLB          equ	1036	;# 
  9431   00040D                     IOCBP           equ	1037	;# 
  9432   00040E                     IOCBN           equ	1038	;# 
  9433   00040F                     IOCBF           equ	1039	;# 
  9434   000410                     ANSELC          equ	1040	;# 
  9435   000411                     WPUC            equ	1041	;# 
  9436   000412                     ODCONC          equ	1042	;# 
  9437   000413                     SLRCONC         equ	1043	;# 
  9438   000414                     INLVLC          equ	1044	;# 
  9439   000415                     IOCCP           equ	1045	;# 
  9440   000416                     IOCCN           equ	1046	;# 
  9441   000417                     IOCCF           equ	1047	;# 
  9442   000421                     WPUE            equ	1057	;# 
  9443   000424                     INLVLE          equ	1060	;# 
  9444   000425                     IOCEP           equ	1061	;# 
  9445   000426                     IOCEN           equ	1062	;# 
  9446   000427                     IOCEF           equ	1063	;# 
  9447   000440                     NCO1ACC         equ	1088	;# 
  9448   000440                     NCO1ACCL        equ	1088	;# 
  9449   000441                     NCO1ACCH        equ	1089	;# 
  9450   000442                     NCO1ACCU        equ	1090	;# 
  9451   000443                     NCO1INC         equ	1091	;# 
  9452   000443                     NCO1INCL        equ	1091	;# 
  9453   000444                     NCO1INCH        equ	1092	;# 
  9454   000445                     NCO1INCU        equ	1093	;# 
  9455   000446                     NCO1CON         equ	1094	;# 
  9456   000447                     NCO1CLK         equ	1095	;# 
  9457   000448                     NCO2ACC         equ	1096	;# 
  9458   000448                     NCO2ACCL        equ	1096	;# 
  9459   000449                     NCO2ACCH        equ	1097	;# 
  9460   00044A                     NCO2ACCU        equ	1098	;# 
  9461   00044B                     NCO2INC         equ	1099	;# 
  9462   00044B                     NCO2INCL        equ	1099	;# 
  9463   00044C                     NCO2INCH        equ	1100	;# 
  9464   00044D                     NCO2INCU        equ	1101	;# 
  9465   00044E                     NCO2CON         equ	1102	;# 
  9466   00044F                     NCO2CLK         equ	1103	;# 
  9467   000450                     NCO3ACC         equ	1104	;# 
  9468   000450                     NCO3ACCL        equ	1104	;# 
  9469   000451                     NCO3ACCH        equ	1105	;# 
  9470   000452                     NCO3ACCU        equ	1106	;# 
  9471   000453                     NCO3INC         equ	1107	;# 
  9472   000453                     NCO3INCL        equ	1107	;# 
  9473   000454                     NCO3INCH        equ	1108	;# 
  9474   000455                     NCO3INCU        equ	1109	;# 
  9475   000456                     NCO3CON         equ	1110	;# 
  9476   000457                     NCO3CLK         equ	1111	;# 
  9477   000458                     FSCMCON         equ	1112	;# 
  9478   000459                     IVTLOCK         equ	1113	;# 
  9479   00045A                     IVTAD           equ	1114	;# 
  9480   00045A                     IVTADL          equ	1114	;# 
  9481   00045B                     IVTADH          equ	1115	;# 
  9482   00045C                     IVTADU          equ	1116	;# 
  9483   00045D                     IVTBASE         equ	1117	;# 
  9484   00045D                     IVTBASEL        equ	1117	;# 
  9485   00045E                     IVTBASEH        equ	1118	;# 
  9486   00045F                     IVTBASEU        equ	1119	;# 
  9487   000460                     PWM1ERS         equ	1120	;# 
  9488   000461                     PWM1CLK         equ	1121	;# 
  9489   000462                     PWM1LDS         equ	1122	;# 
  9490   000463                     PWM1PR          equ	1123	;# 
  9491   000463                     PWM1PRL         equ	1123	;# 
  9492   000464                     PWM1PRH         equ	1124	;# 
  9493   000465                     PWM1CPRE        equ	1125	;# 
  9494   000466                     PWM1PIPOS       equ	1126	;# 
  9495   000467                     PWM1GIR         equ	1127	;# 
  9496   000468                     PWM1GIE         equ	1128	;# 
  9497   000469                     PWM1CON         equ	1129	;# 
  9498   00046A                     PWM1S1CFG       equ	1130	;# 
  9499   00046B                     PWM1S1P1        equ	1131	;# 
  9500   00046B                     PWM1S1P1L       equ	1131	;# 
  9501   00046C                     PWM1S1P1H       equ	1132	;# 
  9502   00046D                     PWM1S1P2        equ	1133	;# 
  9503   00046D                     PWM1S1P2L       equ	1133	;# 
  9504   00046E                     PWM1S1P2H       equ	1134	;# 
  9505   00046F                     PWM2ERS         equ	1135	;# 
  9506   000470                     PWM2CLK         equ	1136	;# 
  9507   000471                     PWM2LDS         equ	1137	;# 
  9508   000472                     PWM2PR          equ	1138	;# 
  9509   000472                     PWM2PRL         equ	1138	;# 
  9510   000473                     PWM2PRH         equ	1139	;# 
  9511   000474                     PWM2CPRE        equ	1140	;# 
  9512   000475                     PWM2PIPOS       equ	1141	;# 
  9513   000476                     PWM2GIR         equ	1142	;# 
  9514   000477                     PWM2GIE         equ	1143	;# 
  9515   000478                     PWM2CON         equ	1144	;# 
  9516   000479                     PWM2S1CFG       equ	1145	;# 
  9517   00047A                     PWM2S1P1        equ	1146	;# 
  9518   00047A                     PWM2S1P1L       equ	1146	;# 
  9519   00047B                     PWM2S1P1H       equ	1147	;# 
  9520   00047C                     PWM2S1P2        equ	1148	;# 
  9521   00047C                     PWM2S1P2L       equ	1148	;# 
  9522   00047D                     PWM2S1P2H       equ	1149	;# 
  9523   00047E                     PWM3ERS         equ	1150	;# 
  9524   00047F                     PWM3CLK         equ	1151	;# 
  9525   000480                     PWM3LDS         equ	1152	;# 
  9526   000481                     PWM3PR          equ	1153	;# 
  9527   000481                     PWM3PRL         equ	1153	;# 
  9528   000482                     PWM3PRH         equ	1154	;# 
  9529   000483                     PWM3CPRE        equ	1155	;# 
  9530   000484                     PWM3PIPOS       equ	1156	;# 
  9531   000485                     PWM3GIR         equ	1157	;# 
  9532   000486                     PWM3GIE         equ	1158	;# 
  9533   000487                     PWM3CON         equ	1159	;# 
  9534   000488                     PWM3S1CFG       equ	1160	;# 
  9535   000489                     PWM3S1P1        equ	1161	;# 
  9536   000489                     PWM3S1P1L       equ	1161	;# 
  9537   00048A                     PWM3S1P1H       equ	1162	;# 
  9538   00048B                     PWM3S1P2        equ	1163	;# 
  9539   00048B                     PWM3S1P2L       equ	1163	;# 
  9540   00048C                     PWM3S1P2H       equ	1164	;# 
  9541   00048D                     PWM4ERS         equ	1165	;# 
  9542   00048E                     PWM4CLK         equ	1166	;# 
  9543   00048F                     PWM4LDS         equ	1167	;# 
  9544   000490                     PWM4PR          equ	1168	;# 
  9545   000490                     PWM4PRL         equ	1168	;# 
  9546   000491                     PWM4PRH         equ	1169	;# 
  9547   000492                     PWM4CPRE        equ	1170	;# 
  9548   000493                     PWM4PIPOS       equ	1171	;# 
  9549   000494                     PWM4GIR         equ	1172	;# 
  9550   000495                     PWM4GIE         equ	1173	;# 
  9551   000496                     PWM4CON         equ	1174	;# 
  9552   000497                     PWM4S1CFG       equ	1175	;# 
  9553   000498                     PWM4S1P1        equ	1176	;# 
  9554   000498                     PWM4S1P1L       equ	1176	;# 
  9555   000499                     PWM4S1P1H       equ	1177	;# 
  9556   00049A                     PWM4S1P2        equ	1178	;# 
  9557   00049A                     PWM4S1P2L       equ	1178	;# 
  9558   00049B                     PWM4S1P2H       equ	1179	;# 
  9559   00049C                     PWMLOAD         equ	1180	;# 
  9560   00049D                     PWMEN           equ	1181	;# 
  9561   00049E                     PIE0            equ	1182	;# 
  9562   00049F                     PIE1            equ	1183	;# 
  9563   0004A0                     PIE2            equ	1184	;# 
  9564   0004A1                     PIE3            equ	1185	;# 
  9565   0004A2                     PIE4            equ	1186	;# 
  9566   0004A3                     PIE5            equ	1187	;# 
  9567   0004A4                     PIE6            equ	1188	;# 
  9568   0004A5                     PIE7            equ	1189	;# 
  9569   0004A6                     PIE8            equ	1190	;# 
  9570   0004A7                     PIE9            equ	1191	;# 
  9571   0004A8                     PIE10           equ	1192	;# 
  9572   0004A9                     PIE11           equ	1193	;# 
  9573   0004AA                     PIE12           equ	1194	;# 
  9574   0004AB                     PIE13           equ	1195	;# 
  9575   0004AC                     PIE14           equ	1196	;# 
  9576   0004AD                     PIE15           equ	1197	;# 
  9577   0004AE                     PIR0            equ	1198	;# 
  9578   0004AF                     PIR1            equ	1199	;# 
  9579   0004B0                     PIR2            equ	1200	;# 
  9580   0004B1                     PIR3            equ	1201	;# 
  9581   0004B2                     PIR4            equ	1202	;# 
  9582   0004B3                     PIR5            equ	1203	;# 
  9583   0004B4                     PIR6            equ	1204	;# 
  9584   0004B5                     PIR7            equ	1205	;# 
  9585   0004B6                     PIR8            equ	1206	;# 
  9586   0004B7                     PIR9            equ	1207	;# 
  9587   0004B8                     PIR10           equ	1208	;# 
  9588   0004B9                     PIR11           equ	1209	;# 
  9589   0004BA                     PIR12           equ	1210	;# 
  9590   0004BB                     PIR13           equ	1211	;# 
  9591   0004BC                     PIR14           equ	1212	;# 
  9592   0004BD                     PIR15           equ	1213	;# 
  9593   0004BE                     LATA            equ	1214	;# 
  9594   0004BF                     LATB            equ	1215	;# 
  9595   0004C0                     LATC            equ	1216	;# 
  9596   0004C6                     TRISA           equ	1222	;# 
  9597   0004C7                     TRISB           equ	1223	;# 
  9598   0004C8                     TRISC           equ	1224	;# 
  9599   0004CA                     TRISE           equ	1226	;# 
  9600   0004CE                     PORTA           equ	1230	;# 
  9601   0004CF                     PORTB           equ	1231	;# 
  9602   0004D0                     PORTC           equ	1232	;# 
  9603   0004D2                     PORTE           equ	1234	;# 
  9604   0004D6                     INTCON0         equ	1238	;# 
  9605   0004D7                     INTCON1         equ	1239	;# 
  9606   0004D8                     STATUS          equ	1240	;# 
  9607   0004D9                     FSR2            equ	1241	;# 
  9608   0004D9                     FSR2L           equ	1241	;# 
  9609   0004DA                     FSR2H           equ	1242	;# 
  9610   0004DB                     PLUSW2          equ	1243	;# 
  9611   0004DC                     PREINC2         equ	1244	;# 
  9612   0004DD                     POSTDEC2        equ	1245	;# 
  9613   0004DE                     POSTINC2        equ	1246	;# 
  9614   0004DF                     INDF2           equ	1247	;# 
  9615   0004E0                     BSR             equ	1248	;# 
  9616   0004E1                     FSR1            equ	1249	;# 
  9617   0004E1                     FSR1L           equ	1249	;# 
  9618   0004E2                     FSR1H           equ	1250	;# 
  9619   0004E3                     PLUSW1          equ	1251	;# 
  9620   0004E4                     PREINC1         equ	1252	;# 
  9621   0004E5                     POSTDEC1        equ	1253	;# 
  9622   0004E6                     POSTINC1        equ	1254	;# 
  9623   0004E7                     INDF1           equ	1255	;# 
  9624   0004E8                     WREG            equ	1256	;# 
  9625   0004E9                     FSR0            equ	1257	;# 
  9626   0004E9                     FSR0L           equ	1257	;# 
  9627   0004EA                     FSR0H           equ	1258	;# 
  9628   0004EB                     PLUSW0          equ	1259	;# 
  9629   0004EC                     PREINC0         equ	1260	;# 
  9630   0004ED                     POSTDEC0        equ	1261	;# 
  9631   0004EE                     POSTINC0        equ	1262	;# 
  9632   0004EF                     INDF0           equ	1263	;# 
  9633   0004F0                     PCON0           equ	1264	;# 
  9634   0004F1                     PCON1           equ	1265	;# 
  9635   0004F2                     CPUDOZE         equ	1266	;# 
  9636   0004F3                     PROD            equ	1267	;# 
  9637   0004F3                     PRODL           equ	1267	;# 
  9638   0004F4                     PRODH           equ	1268	;# 
  9639   0004F5                     TABLAT          equ	1269	;# 
  9640   0004F6                     TBLPTR          equ	1270	;# 
  9641   0004F6                     TBLPTRL         equ	1270	;# 
  9642   0004F7                     TBLPTRH         equ	1271	;# 
  9643   0004F8                     TBLPTRU         equ	1272	;# 
  9644   0004F9                     PCLAT           equ	1273	;# 
  9645   0004F9                     PCL             equ	1273	;# 
  9646   0004FA                     PCLATH          equ	1274	;# 
  9647   0004FB                     PCLATU          equ	1275	;# 
  9648   0004FC                     STKPTR          equ	1276	;# 
  9649   0004FD                     TOS             equ	1277	;# 
  9650   0004FD                     TOSL            equ	1277	;# 
  9651   0004FE                     TOSH            equ	1278	;# 
  9652   0004FF                     TOSU            equ	1279	;# 
  9653   000038                     BOOTREG         equ	56	;# 
  9654   000039                     CLKRCON         equ	57	;# 
  9655   00003A                     CLKRCLK         equ	58	;# 
  9656   000040                     NVMCON0         equ	64	;# 
  9657   000041                     NVMCON1         equ	65	;# 
  9658   000042                     NVMLOCK         equ	66	;# 
  9659   000043                     NVMADR          equ	67	;# 
  9660   000043                     NVMADRL         equ	67	;# 
  9661   000044                     NVMADRH         equ	68	;# 
  9662   000045                     NVMADRU         equ	69	;# 
  9663   000046                     NVMDAT          equ	70	;# 
  9664   000046                     NVMDATL         equ	70	;# 
  9665   000047                     NVMDATH         equ	71	;# 
  9666   000048                     VREGCON         equ	72	;# 
  9667   000049                     BORCON          equ	73	;# 
  9668   00004A                     HLVDCON0        equ	74	;# 
  9669   00004B                     HLVDCON1        equ	75	;# 
  9670   00004C                     ZCDCON          equ	76	;# 
  9671   000060                     PMD0            equ	96	;# 
  9672   000061                     PMD1            equ	97	;# 
  9673   000062                     PMD2            equ	98	;# 
  9674   000063                     PMD3            equ	99	;# 
  9675   000064                     PMD4            equ	100	;# 
  9676   000065                     PMD5            equ	101	;# 
  9677   000066                     PMD6            equ	102	;# 
  9678   000067                     PMD7            equ	103	;# 
  9679   000068                     PMD8            equ	104	;# 
  9680   00006A                     MD1CON0         equ	106	;# 
  9681   00006B                     MD1CON1         equ	107	;# 
  9682   00006C                     MD1SRC          equ	108	;# 
  9683   00006D                     MD1CARL         equ	109	;# 
  9684   00006E                     MD1CARH         equ	110	;# 
  9685   00006F                     CMOUT           equ	111	;# 
  9686   000070                     CM1CON0         equ	112	;# 
  9687   000071                     CM1CON1         equ	113	;# 
  9688   000072                     CM1NCH          equ	114	;# 
  9689   000073                     CM1PCH          equ	115	;# 
  9690   000074                     CM2CON0         equ	116	;# 
  9691   000075                     CM2CON1         equ	117	;# 
  9692   000076                     CM2NCH          equ	118	;# 
  9693   000077                     CM2PCH          equ	119	;# 
  9694   000078                     WDTCON0         equ	120	;# 
  9695   000079                     WDTCON1         equ	121	;# 
  9696   00007A                     WDTPSL          equ	122	;# 
  9697   00007B                     WDTPSH          equ	123	;# 
  9698   00007C                     WDTTMR          equ	124	;# 
  9699   00007D                     DAC1DAT         equ	125	;# 
  9700   00007D                     DAC1DATL        equ	125	;# 
  9701   00007F                     DAC1CON         equ	127	;# 
  9702   000080                     SPI1RXB         equ	128	;# 
  9703   000081                     SPI1TXB         equ	129	;# 
  9704   000082                     SPI1TCNT        equ	130	;# 
  9705   000082                     SPI1TCNTL       equ	130	;# 
  9706   000083                     SPI1TCNTH       equ	131	;# 
  9707   000084                     SPI1CON0        equ	132	;# 
  9708   000085                     SPI1CON1        equ	133	;# 
  9709   000086                     SPI1CON2        equ	134	;# 
  9710   000087                     SPI1STATUS      equ	135	;# 
  9711   000088                     SPI1TWIDTH      equ	136	;# 
  9712   000089                     SPI1BAUD        equ	137	;# 
  9713   00008A                     SPI1INTF        equ	138	;# 
  9714   00008B                     SPI1INTE        equ	139	;# 
  9715   00008C                     SPI1CLK         equ	140	;# 
  9716   00008D                     SPI2RXB         equ	141	;# 
  9717   00008E                     SPI2TXB         equ	142	;# 
  9718   00008F                     SPI2TCNT        equ	143	;# 
  9719   00008F                     SPI2TCNTL       equ	143	;# 
  9720   000090                     SPI2TCNTH       equ	144	;# 
  9721   000091                     SPI2CON0        equ	145	;# 
  9722   000092                     SPI2CON1        equ	146	;# 
  9723   000093                     SPI2CON2        equ	147	;# 
  9724   000094                     SPI2STATUS      equ	148	;# 
  9725   000095                     SPI2TWIDTH      equ	149	;# 
  9726   000096                     SPI2BAUD        equ	150	;# 
  9727   000097                     SPI2INTF        equ	151	;# 
  9728   000098                     SPI2INTE        equ	152	;# 
  9729   000099                     SPI2CLK         equ	153	;# 
  9730   0000AC                     ACTCON          equ	172	;# 
  9731   0000AD                     OSCCON1         equ	173	;# 
  9732   0000AE                     OSCCON2         equ	174	;# 
  9733   0000AF                     OSCCON3         equ	175	;# 
  9734   0000B0                     OSCTUNE         equ	176	;# 
  9735   0000B1                     OSCFRQ          equ	177	;# 
  9736   0000B1                     OSCFREQ         equ	177	;# 
  9737   0000B2                     OSCSTAT         equ	178	;# 
  9738   0000B2                     OSCSTAT1        equ	178	;# 
  9739   0000B3                     OSCEN           equ	179	;# 
  9740   0000B4                     PRLOCK          equ	180	;# 
  9741   0000B5                     SCANPR          equ	181	;# 
  9742   0000B6                     DMA1PR          equ	182	;# 
  9743   0000B7                     DMA2PR          equ	183	;# 
  9744   0000B8                     DMA3PR          equ	184	;# 
  9745   0000B9                     DMA4PR          equ	185	;# 
  9746   0000BA                     DMA5PR          equ	186	;# 
  9747   0000BB                     DMA6PR          equ	187	;# 
  9748   0000BC                     DMA7PR          equ	188	;# 
  9749   0000BD                     DMA8PR          equ	189	;# 
  9750   0000BE                     MAINPR          equ	190	;# 
  9751   0000BF                     ISRPR           equ	191	;# 
  9752   0000D4                     CLCDATA         equ	212	;# 
  9753   0000D5                     CLCSELECT       equ	213	;# 
  9754   0000D6                     CLCnCON         equ	214	;# 
  9755   0000D7                     CLCnPOL         equ	215	;# 
  9756   0000D8                     CLCnSEL0        equ	216	;# 
  9757   0000D9                     CLCnSEL1        equ	217	;# 
  9758   0000DA                     CLCnSEL2        equ	218	;# 
  9759   0000DB                     CLCnSEL3        equ	219	;# 
  9760   0000DC                     CLCnGLS0        equ	220	;# 
  9761   0000DD                     CLCnGLS1        equ	221	;# 
  9762   0000DE                     CLCnGLS2        equ	222	;# 
  9763   0000DF                     CLCnGLS3        equ	223	;# 
  9764   0000E8                     DMASELECT       equ	232	;# 
  9765   0000E9                     DMAnBUF         equ	233	;# 
  9766   0000EA                     DMAnDCNT        equ	234	;# 
  9767   0000EA                     DMAnDCNTL       equ	234	;# 
  9768   0000EB                     DMAnDCNTH       equ	235	;# 
  9769   0000EC                     DMAnDPTR        equ	236	;# 
  9770   0000EC                     DMAnDPTRL       equ	236	;# 
  9771   0000ED                     DMAnDPTRH       equ	237	;# 
  9772   0000EE                     DMAnDSZ         equ	238	;# 
  9773   0000EE                     DMAnDSZL        equ	238	;# 
  9774   0000EF                     DMAnDSZH        equ	239	;# 
  9775   0000F0                     DMAnDSA         equ	240	;# 
  9776   0000F0                     DMAnDSAL        equ	240	;# 
  9777   0000F1                     DMAnDSAH        equ	241	;# 
  9778   0000F2                     DMAnSCNT        equ	242	;# 
  9779   0000F2                     DMAnSCNTL       equ	242	;# 
  9780   0000F3                     DMAnSCNTH       equ	243	;# 
  9781   0000F4                     DMAnSPTR        equ	244	;# 
  9782   0000F4                     DMAnSPTRL       equ	244	;# 
  9783   0000F5                     DMAnSPTRH       equ	245	;# 
  9784   0000F6                     DMAnSPTRU       equ	246	;# 
  9785   0000F7                     DMAnSSZ         equ	247	;# 
  9786   0000F7                     DMAnSSZL        equ	247	;# 
  9787   0000F8                     DMAnSSZH        equ	248	;# 
  9788   0000F9                     DMAnSSA         equ	249	;# 
  9789   0000F9                     DMAnSSAL        equ	249	;# 
  9790   0000FA                     DMAnSSAH        equ	250	;# 
  9791   0000FB                     DMAnSSAU        equ	251	;# 
  9792   0000FC                     DMAnCON0        equ	252	;# 
  9793   0000FD                     DMAnCON1        equ	253	;# 
  9794   0000FE                     DMAnAIRQ        equ	254	;# 
  9795   0000FF                     DMAnSIRQ        equ	255	;# 
  9796   000100                     C1CONL          equ	256	;# 
  9797   000101                     C1CONH          equ	257	;# 
  9798   000102                     C1CONU          equ	258	;# 
  9799   000103                     C1CONT          equ	259	;# 
  9800   000104                     C1NBTCFGL       equ	260	;# 
  9801   000105                     C1NBTCFGH       equ	261	;# 
  9802   000106                     C1NBTCFGU       equ	262	;# 
  9803   000107                     C1NBTCFGT       equ	263	;# 
  9804   000108                     C1DBTCFGL       equ	264	;# 
  9805   000109                     C1DBTCFGH       equ	265	;# 
  9806   00010A                     C1DBTCFGU       equ	266	;# 
  9807   00010B                     C1DBTCFGT       equ	267	;# 
  9808   00010C                     C1TDCL          equ	268	;# 
  9809   00010D                     C1TDCH          equ	269	;# 
  9810   00010E                     C1TDCU          equ	270	;# 
  9811   000110                     C1TBC           equ	272	;# 
  9812   000110                     C1TBCL          equ	272	;# 
  9813   000111                     C1TBCH          equ	273	;# 
  9814   000112                     C1TBCU          equ	274	;# 
  9815   000113                     C1TBCT          equ	275	;# 
  9816   000114                     C1TSCONL        equ	276	;# 
  9817   000115                     C1TSCONH        equ	277	;# 
  9818   000116                     C1TSCONU        equ	278	;# 
  9819   000117                     C1TSCONT        equ	279	;# 
  9820   000118                     C1VECL          equ	280	;# 
  9821   000119                     C1VECH          equ	281	;# 
  9822   00011A                     C1VECU          equ	282	;# 
  9823   00011B                     C1VECT          equ	283	;# 
  9824   00011C                     C1INTL          equ	284	;# 
  9825   00011D                     C1INTH          equ	285	;# 
  9826   00011E                     C1INTU          equ	286	;# 
  9827   00011F                     C1INTT          equ	287	;# 
  9828   000120                     C1RXIF          equ	288	;# 
  9829   000120                     C1RXIFL         equ	288	;# 
  9830   000121                     C1RXIFH         equ	289	;# 
  9831   000122                     C1RXIFU         equ	290	;# 
  9832   000123                     C1RXIFT         equ	291	;# 
  9833   000124                     C1TXIF          equ	292	;# 
  9834   000124                     C1TXIFL         equ	292	;# 
  9835   000125                     C1TXIFH         equ	293	;# 
  9836   000126                     C1TXIFU         equ	294	;# 
  9837   000127                     C1TXIFT         equ	295	;# 
  9838   000128                     C1RXOVIF        equ	296	;# 
  9839   000128                     C1RXOVIFL       equ	296	;# 
  9840   000129                     C1RXOVIFH       equ	297	;# 
  9841   00012A                     C1RXOVIFU       equ	298	;# 
  9842   00012B                     C1RXOVIFT       equ	299	;# 
  9843   00012C                     C1TXATIF        equ	300	;# 
  9844   00012C                     C1TXATIFL       equ	300	;# 
  9845   00012D                     C1TXATIFH       equ	301	;# 
  9846   00012E                     C1TXATIFU       equ	302	;# 
  9847   00012F                     C1TXATIFT       equ	303	;# 
  9848   000130                     C1TXREQ         equ	304	;# 
  9849   000130                     C1TXREQL        equ	304	;# 
  9850   000131                     C1TXREQH        equ	305	;# 
  9851   000132                     C1TXREQU        equ	306	;# 
  9852   000133                     C1TXREQT        equ	307	;# 
  9853   000134                     C1TRECL         equ	308	;# 
  9854   000135                     C1TRECH         equ	309	;# 
  9855   000136                     C1TRECU         equ	310	;# 
  9856   000137                     C1TRECT         equ	311	;# 
  9857   000138                     C1BDIAG0L       equ	312	;# 
  9858   000139                     C1BDIAG0H       equ	313	;# 
  9859   00013C                     C1BDIAG1L       equ	316	;# 
  9860   00013D                     C1BDIAG1H       equ	317	;# 
  9861   00013E                     C1BDIAG1U       equ	318	;# 
  9862   00013F                     C1BDIAG1T       equ	319	;# 
  9863   000140                     C1TEFCONL       equ	320	;# 
  9864   000141                     C1TEFCONH       equ	321	;# 
  9865   000142                     C1TEFCONU       equ	322	;# 
  9866   000143                     C1TEFCONT       equ	323	;# 
  9867   000144                     C1TEFSTAL       equ	324	;# 
  9868   000145                     C1TEFSTAH       equ	325	;# 
  9869   000146                     C1TEFSTAU       equ	326	;# 
  9870   000147                     C1TEFSTAT       equ	327	;# 
  9871   000148                     C1TEFUA         equ	328	;# 
  9872   000148                     C1TEFUAL        equ	328	;# 
  9873   000149                     C1TEFUAH        equ	329	;# 
  9874   00014A                     C1TEFUAU        equ	330	;# 
  9875   00014B                     C1TEFUAT        equ	331	;# 
  9876   00014C                     C1FIFOBA        equ	332	;# 
  9877   00014C                     C1FIFOBAL       equ	332	;# 
  9878   00014D                     C1FIFOBAH       equ	333	;# 
  9879   00014E                     C1FIFOBAU       equ	334	;# 
  9880   00014F                     C1FIFOBAT       equ	335	;# 
  9881   000150                     C1TXQCONL       equ	336	;# 
  9882   000151                     C1TXQCONH       equ	337	;# 
  9883   000152                     C1TXQCONU       equ	338	;# 
  9884   000153                     C1TXQCONT       equ	339	;# 
  9885   000154                     C1TXQSTAL       equ	340	;# 
  9886   000155                     C1TXQSTAH       equ	341	;# 
  9887   000156                     C1TXQSTAU       equ	342	;# 
  9888   000157                     C1TXQSTAT       equ	343	;# 
  9889   000158                     C1TXQUA         equ	344	;# 
  9890   000158                     C1TXQUAL        equ	344	;# 
  9891   000159                     C1TXQUAH        equ	345	;# 
  9892   00015A                     C1TXQUAU        equ	346	;# 
  9893   00015B                     C1TXQUAT        equ	347	;# 
  9894   00015C                     C1FIFOCON1      equ	348	;# 
  9895   00015C                     C1FIFOCON1L     equ	348	;# 
  9896   00015D                     C1FIFOCON1H     equ	349	;# 
  9897   00015E                     C1FIFOCON1U     equ	350	;# 
  9898   00015F                     C1FIFOCON1T     equ	351	;# 
  9899   000160                     C1FIFOSTA1      equ	352	;# 
  9900   000160                     C1FIFOSTA1L     equ	352	;# 
  9901   000161                     C1FIFOSTA1H     equ	353	;# 
  9902   000162                     C1FIFOSTA1U     equ	354	;# 
  9903   000163                     C1FIFOSTA1T     equ	355	;# 
  9904   000164                     C1FIFOUA1       equ	356	;# 
  9905   000164                     C1FIFOUA1L      equ	356	;# 
  9906   000165                     C1FIFOUA1H      equ	357	;# 
  9907   000166                     C1FIFOUA1U      equ	358	;# 
  9908   000167                     C1FIFOUA1T      equ	359	;# 
  9909   000168                     C1FIFOCON2      equ	360	;# 
  9910   000168                     C1FIFOCON2L     equ	360	;# 
  9911   000169                     C1FIFOCON2H     equ	361	;# 
  9912   00016A                     C1FIFOCON2U     equ	362	;# 
  9913   00016B                     C1FIFOCON2T     equ	363	;# 
  9914   00016C                     C1FIFOSTA2      equ	364	;# 
  9915   00016C                     C1FIFOSTA2L     equ	364	;# 
  9916   00016D                     C1FIFOSTA2H     equ	365	;# 
  9917   00016E                     C1FIFOSTA2U     equ	366	;# 
  9918   00016F                     C1FIFOSTA2T     equ	367	;# 
  9919   000170                     C1FIFOUA2       equ	368	;# 
  9920   000170                     C1FIFOUA2L      equ	368	;# 
  9921   000171                     C1FIFOUA2H      equ	369	;# 
  9922   000172                     C1FIFOUA2U      equ	370	;# 
  9923   000173                     C1FIFOUA2T      equ	371	;# 
  9924   000174                     C1FIFOCON3      equ	372	;# 
  9925   000174                     C1FIFOCON3L     equ	372	;# 
  9926   000175                     C1FIFOCON3H     equ	373	;# 
  9927   000176                     C1FIFOCON3U     equ	374	;# 
  9928   000177                     C1FIFOCON3T     equ	375	;# 
  9929   000178                     C1FIFOSTA3      equ	376	;# 
  9930   000178                     C1FIFOSTA3L     equ	376	;# 
  9931   000179                     C1FIFOSTA3H     equ	377	;# 
  9932   00017A                     C1FIFOSTA3U     equ	378	;# 
  9933   00017B                     C1FIFOSTA3T     equ	379	;# 
  9934   00017C                     C1FIFOUA3       equ	380	;# 
  9935   00017C                     C1FIFOUA3L      equ	380	;# 
  9936   00017D                     C1FIFOUA3H      equ	381	;# 
  9937   00017E                     C1FIFOUA3U      equ	382	;# 
  9938   00017F                     C1FIFOUA3T      equ	383	;# 
  9939   000180                     C1FLTCON0L      equ	384	;# 
  9940   000181                     C1FLTCON0H      equ	385	;# 
  9941   000182                     C1FLTCON0U      equ	386	;# 
  9942   000183                     C1FLTCON0T      equ	387	;# 
  9943   000184                     C1FLTCON1L      equ	388	;# 
  9944   000185                     C1FLTCON1H      equ	389	;# 
  9945   000186                     C1FLTCON1U      equ	390	;# 
  9946   000187                     C1FLTCON1T      equ	391	;# 
  9947   000188                     C1FLTCON2L      equ	392	;# 
  9948   000189                     C1FLTCON2H      equ	393	;# 
  9949   00018A                     C1FLTCON2U      equ	394	;# 
  9950   00018B                     C1FLTCON2T      equ	395	;# 
  9951   00018C                     C1FLTOBJ0       equ	396	;# 
  9952   00018C                     C1FLTOBJ0L      equ	396	;# 
  9953   00018D                     C1FLTOBJ0H      equ	397	;# 
  9954   00018E                     C1FLTOBJ0U      equ	398	;# 
  9955   00018F                     C1FLTOBJ0T      equ	399	;# 
  9956   000190                     C1MASK0         equ	400	;# 
  9957   000190                     C1MASK0L        equ	400	;# 
  9958   000191                     C1MASK0H        equ	401	;# 
  9959   000192                     C1MASK0U        equ	402	;# 
  9960   000193                     C1MASK0T        equ	403	;# 
  9961   000194                     C1FLTOBJ1       equ	404	;# 
  9962   000194                     C1FLTOBJ1L      equ	404	;# 
  9963   000195                     C1FLTOBJ1H      equ	405	;# 
  9964   000196                     C1FLTOBJ1U      equ	406	;# 
  9965   000197                     C1FLTOBJ1T      equ	407	;# 
  9966   000198                     C1MASK1         equ	408	;# 
  9967   000198                     C1MASK1L        equ	408	;# 
  9968   000199                     C1MASK1H        equ	409	;# 
  9969   00019A                     C1MASK1U        equ	410	;# 
  9970   00019B                     C1MASK1T        equ	411	;# 
  9971   00019C                     C1FLTOBJ2       equ	412	;# 
  9972   00019C                     C1FLTOBJ2L      equ	412	;# 
  9973   00019D                     C1FLTOBJ2H      equ	413	;# 
  9974   00019E                     C1FLTOBJ2U      equ	414	;# 
  9975   00019F                     C1FLTOBJ2T      equ	415	;# 
  9976   0001A0                     C1MASK2         equ	416	;# 
  9977   0001A0                     C1MASK2L        equ	416	;# 
  9978   0001A1                     C1MASK2H        equ	417	;# 
  9979   0001A2                     C1MASK2U        equ	418	;# 
  9980   0001A3                     C1MASK2T        equ	419	;# 
  9981   0001A4                     C1FLTOBJ3       equ	420	;# 
  9982   0001A4                     C1FLTOBJ3L      equ	420	;# 
  9983   0001A5                     C1FLTOBJ3H      equ	421	;# 
  9984   0001A6                     C1FLTOBJ3U      equ	422	;# 
  9985   0001A7                     C1FLTOBJ3T      equ	423	;# 
  9986   0001A8                     C1MASK3         equ	424	;# 
  9987   0001A8                     C1MASK3L        equ	424	;# 
  9988   0001A9                     C1MASK3H        equ	425	;# 
  9989   0001AA                     C1MASK3U        equ	426	;# 
  9990   0001AB                     C1MASK3T        equ	427	;# 
  9991   0001AC                     C1FLTOBJ4       equ	428	;# 
  9992   0001AC                     C1FLTOBJ4L      equ	428	;# 
  9993   0001AD                     C1FLTOBJ4H      equ	429	;# 
  9994   0001AE                     C1FLTOBJ4U      equ	430	;# 
  9995   0001AF                     C1FLTOBJ4T      equ	431	;# 
  9996   0001B0                     C1MASK4         equ	432	;# 
  9997   0001B0                     C1MASK4L        equ	432	;# 
  9998   0001B1                     C1MASK4H        equ	433	;# 
  9999   0001B2                     C1MASK4U        equ	434	;# 
 10000   0001B3                     C1MASK4T        equ	435	;# 
 10001   0001B4                     C1FLTOBJ5       equ	436	;# 
 10002   0001B4                     C1FLTOBJ5L      equ	436	;# 
 10003   0001B5                     C1FLTOBJ5H      equ	437	;# 
 10004   0001B6                     C1FLTOBJ5U      equ	438	;# 
 10005   0001B7                     C1FLTOBJ5T      equ	439	;# 
 10006   0001B8                     C1MASK5         equ	440	;# 
 10007   0001B8                     C1MASK5L        equ	440	;# 
 10008   0001B9                     C1MASK5H        equ	441	;# 
 10009   0001BA                     C1MASK5U        equ	442	;# 
 10010   0001BB                     C1MASK5T        equ	443	;# 
 10011   0001BC                     C1FLTOBJ6       equ	444	;# 
 10012   0001BC                     C1FLTOBJ6L      equ	444	;# 
 10013   0001BD                     C1FLTOBJ6H      equ	445	;# 
 10014   0001BE                     C1FLTOBJ6U      equ	446	;# 
 10015   0001BF                     C1FLTOBJ6T      equ	447	;# 
 10016   0001C0                     C1MASK6         equ	448	;# 
 10017   0001C0                     C1MASK6L        equ	448	;# 
 10018   0001C1                     C1MASK6H        equ	449	;# 
 10019   0001C2                     C1MASK6U        equ	450	;# 
 10020   0001C3                     C1MASK6T        equ	451	;# 
 10021   0001C4                     C1FLTOBJ7       equ	452	;# 
 10022   0001C4                     C1FLTOBJ7L      equ	452	;# 
 10023   0001C5                     C1FLTOBJ7H      equ	453	;# 
 10024   0001C6                     C1FLTOBJ7U      equ	454	;# 
 10025   0001C7                     C1FLTOBJ7T      equ	455	;# 
 10026   0001C8                     C1MASK7         equ	456	;# 
 10027   0001C8                     C1MASK7L        equ	456	;# 
 10028   0001C9                     C1MASK7H        equ	457	;# 
 10029   0001CA                     C1MASK7U        equ	458	;# 
 10030   0001CB                     C1MASK7T        equ	459	;# 
 10031   0001CC                     C1FLTOBJ8       equ	460	;# 
 10032   0001CC                     C1FLTOBJ8L      equ	460	;# 
 10033   0001CD                     C1FLTOBJ8H      equ	461	;# 
 10034   0001CE                     C1FLTOBJ8U      equ	462	;# 
 10035   0001CF                     C1FLTOBJ8T      equ	463	;# 
 10036   0001D0                     C1MASK8         equ	464	;# 
 10037   0001D0                     C1MASK8L        equ	464	;# 
 10038   0001D1                     C1MASK8H        equ	465	;# 
 10039   0001D2                     C1MASK8U        equ	466	;# 
 10040   0001D3                     C1MASK8T        equ	467	;# 
 10041   0001D4                     C1FLTOBJ9       equ	468	;# 
 10042   0001D4                     C1FLTOBJ9L      equ	468	;# 
 10043   0001D5                     C1FLTOBJ9H      equ	469	;# 
 10044   0001D6                     C1FLTOBJ9U      equ	470	;# 
 10045   0001D7                     C1FLTOBJ9T      equ	471	;# 
 10046   0001D8                     C1MASK9         equ	472	;# 
 10047   0001D8                     C1MASK9L        equ	472	;# 
 10048   0001D9                     C1MASK9H        equ	473	;# 
 10049   0001DA                     C1MASK9U        equ	474	;# 
 10050   0001DB                     C1MASK9T        equ	475	;# 
 10051   0001DC                     C1FLTOBJ10      equ	476	;# 
 10052   0001DC                     C1FLTOBJ10L     equ	476	;# 
 10053   0001DD                     C1FLTOBJ10H     equ	477	;# 
 10054   0001DE                     C1FLTOBJ10U     equ	478	;# 
 10055   0001DF                     C1FLTOBJ10T     equ	479	;# 
 10056   0001E0                     C1MASK10        equ	480	;# 
 10057   0001E0                     C1MASK10L       equ	480	;# 
 10058   0001E1                     C1MASK10H       equ	481	;# 
 10059   0001E2                     C1MASK10U       equ	482	;# 
 10060   0001E3                     C1MASK10T       equ	483	;# 
 10061   0001E4                     C1FLTOBJ11      equ	484	;# 
 10062   0001E4                     C1FLTOBJ11L     equ	484	;# 
 10063   0001E5                     C1FLTOBJ11H     equ	485	;# 
 10064   0001E6                     C1FLTOBJ11U     equ	486	;# 
 10065   0001E7                     C1FLTOBJ11T     equ	487	;# 
 10066   0001E8                     C1MASK11        equ	488	;# 
 10067   0001E8                     C1MASK11L       equ	488	;# 
 10068   0001E9                     C1MASK11H       equ	489	;# 
 10069   0001EA                     C1MASK11U       equ	490	;# 
 10070   0001EB                     C1MASK11T       equ	491	;# 
 10071   000200                     PPSLOCK         equ	512	;# 
 10072   000201                     RA0PPS          equ	513	;# 
 10073   000202                     RA1PPS          equ	514	;# 
 10074   000203                     RA2PPS          equ	515	;# 
 10075   000204                     RA3PPS          equ	516	;# 
 10076   000205                     RA4PPS          equ	517	;# 
 10077   000206                     RA5PPS          equ	518	;# 
 10078   000207                     RA6PPS          equ	519	;# 
 10079   000208                     RA7PPS          equ	520	;# 
 10080   000209                     RB0PPS          equ	521	;# 
 10081   00020A                     RB1PPS          equ	522	;# 
 10082   00020B                     RB2PPS          equ	523	;# 
 10083   00020C                     RB3PPS          equ	524	;# 
 10084   00020D                     RB4PPS          equ	525	;# 
 10085   00020E                     RB5PPS          equ	526	;# 
 10086   00020F                     RB6PPS          equ	527	;# 
 10087   000210                     RB7PPS          equ	528	;# 
 10088   000211                     RC0PPS          equ	529	;# 
 10089   000212                     RC1PPS          equ	530	;# 
 10090   000213                     RC2PPS          equ	531	;# 
 10091   000214                     RC3PPS          equ	532	;# 
 10092   000215                     RC4PPS          equ	533	;# 
 10093   000216                     RC5PPS          equ	534	;# 
 10094   000217                     RC6PPS          equ	535	;# 
 10095   000218                     RC7PPS          equ	536	;# 
 10096   00023D                     CANRXPPS        equ	573	;# 
 10097   00023E                     INT0PPS         equ	574	;# 
 10098   00023F                     INT1PPS         equ	575	;# 
 10099   000240                     INT2PPS         equ	576	;# 
 10100   000241                     T0CKIPPS        equ	577	;# 
 10101   000242                     T1CKIPPS        equ	578	;# 
 10102   000243                     T1GPPS          equ	579	;# 
 10103   000244                     T3CKIPPS        equ	580	;# 
 10104   000245                     T3GPPS          equ	581	;# 
 10105   000246                     T5CKIPPS        equ	582	;# 
 10106   000247                     T5GPPS          equ	583	;# 
 10107   000248                     T2INPPS         equ	584	;# 
 10108   000249                     T4INPPS         equ	585	;# 
 10109   00024A                     T6INPPS         equ	586	;# 
 10110   00024B                     TUIN0PPS        equ	587	;# 
 10111   00024C                     TUIN1PPS        equ	588	;# 
 10112   00024F                     CCP1PPS         equ	591	;# 
 10113   000250                     CCP2PPS         equ	592	;# 
 10114   000251                     CCP3PPS         equ	593	;# 
 10115   000253                     PWM1ERSPPS      equ	595	;# 
 10116   000254                     PWM2ERSPPS      equ	596	;# 
 10117   000255                     PWM3ERSPPS      equ	597	;# 
 10118   000256                     PWM4ERSPPS      equ	598	;# 
 10119   000257                     PWMIN0PPS       equ	599	;# 
 10120   000258                     PWMIN1PPS       equ	600	;# 
 10121   000259                     SMT1WINPPS      equ	601	;# 
 10122   00025A                     SMT1SIGPPS      equ	602	;# 
 10123   00025B                     CWG1PPS         equ	603	;# 
 10124   00025B                     CWG1INPPS       equ	603	;# 
 10125   00025C                     CWG2PPS         equ	604	;# 
 10126   00025C                     CWG2INPPS       equ	604	;# 
 10127   00025D                     CWG3PPS         equ	605	;# 
 10128   00025D                     CWG3INPPS       equ	605	;# 
 10129   00025E                     MD1CARLPPS      equ	606	;# 
 10130   00025E                     MDCARLPPS       equ	606	;# 
 10131   00025F                     MD1CARHPPS      equ	607	;# 
 10132   00025F                     MDCARHPPS       equ	607	;# 
 10133   000260                     MD1SRCPPS       equ	608	;# 
 10134   000260                     MDSRCPPS        equ	608	;# 
 10135   000261                     CLCIN0PPS       equ	609	;# 
 10136   000262                     CLCIN1PPS       equ	610	;# 
 10137   000263                     CLCIN2PPS       equ	611	;# 
 10138   000264                     CLCIN3PPS       equ	612	;# 
 10139   000265                     CLCIN4PPS       equ	613	;# 
 10140   000266                     CLCIN5PPS       equ	614	;# 
 10141   000267                     CLCIN6PPS       equ	615	;# 
 10142   000268                     CLCIN7PPS       equ	616	;# 
 10143   000269                     ADACTPPS        equ	617	;# 
 10144   00026A                     SPI1SCKPPS      equ	618	;# 
 10145   00026B                     SPI1SDIPPS      equ	619	;# 
 10146   00026C                     SPI1SSPPS       equ	620	;# 
 10147   00026D                     SPI2SCKPPS      equ	621	;# 
 10148   00026E                     SPI2SDIPPS      equ	622	;# 
 10149   00026F                     SPI2SSPPS       equ	623	;# 
 10150   000270                     I2C1SDAPPS      equ	624	;# 
 10151   000271                     I2C1SCLPPS      equ	625	;# 
 10152   000272                     U1RXPPS         equ	626	;# 
 10153   000273                     U1CTSPPS        equ	627	;# 
 10154   000274                     U2RXPPS         equ	628	;# 
 10155   000275                     U2CTSPPS        equ	629	;# 
 10156   000276                     U3RXPPS         equ	630	;# 
 10157   000277                     U3CTSPPS        equ	631	;# 
 10158   000278                     U4RXPPS         equ	632	;# 
 10159   000279                     U4CTSPPS        equ	633	;# 
 10160   00027A                     U5RXPPS         equ	634	;# 
 10161   00027B                     U5CTSPPS        equ	635	;# 
 10162   000286                     RC4I2C          equ	646	;# 
 10163   000287                     RC3I2C          equ	647	;# 
 10164   000288                     RB2I2C          equ	648	;# 
 10165   000289                     RB1I2C          equ	649	;# 
 10166   00028A                     I2C1RXB         equ	650	;# 
 10167   00028B                     I2C1TXB         equ	651	;# 
 10168   00028C                     I2C1CNTL        equ	652	;# 
 10169   00028D                     I2C1CNTH        equ	653	;# 
 10170   00028E                     I2C1ADB0        equ	654	;# 
 10171   00028F                     I2C1ADB1        equ	655	;# 
 10172   000290                     I2C1ADR0        equ	656	;# 
 10173   000291                     I2C1ADR1        equ	657	;# 
 10174   000292                     I2C1ADR2        equ	658	;# 
 10175   000293                     I2C1ADR3        equ	659	;# 
 10176   000294                     I2C1CON0        equ	660	;# 
 10177   000295                     I2C1CON1        equ	661	;# 
 10178   000296                     I2C1CON2        equ	662	;# 
 10179   000297                     I2C1ERR         equ	663	;# 
 10180   000298                     I2C1STAT0       equ	664	;# 
 10181   000299                     I2C1STAT1       equ	665	;# 
 10182   00029A                     I2C1PIR         equ	666	;# 
 10183   00029B                     I2C1PIE         equ	667	;# 
 10184   00029C                     I2C1BTO         equ	668	;# 
 10185   00029D                     I2C1BAUD        equ	669	;# 
 10186   00029E                     I2C1CLK         equ	670	;# 
 10187   00029F                     I2C1BTOC        equ	671	;# 
 10188   0002A1                     U1RXB           equ	673	;# 
 10189   0002A1                     U1RXBL          equ	673	;# 
 10190   0002A2                     U1RXCHK         equ	674	;# 
 10191   0002A3                     U1TXB           equ	675	;# 
 10192   0002A3                     U1TXBL          equ	675	;# 
 10193   0002A4                     U1TXCHK         equ	676	;# 
 10194   0002A5                     U1P1            equ	677	;# 
 10195   0002A5                     U1P1L           equ	677	;# 
 10196   0002A6                     U1P1H           equ	678	;# 
 10197   0002A7                     U1P2            equ	679	;# 
 10198   0002A7                     U1P2L           equ	679	;# 
 10199   0002A8                     U1P2H           equ	680	;# 
 10200   0002A9                     U1P3            equ	681	;# 
 10201   0002A9                     U1P3L           equ	681	;# 
 10202   0002AA                     U1P3H           equ	682	;# 
 10203   0002AB                     U1CON0          equ	683	;# 
 10204   0002AC                     U1CON1          equ	684	;# 
 10205   0002AD                     U1CON2          equ	685	;# 
 10206   0002AE                     U1BRG           equ	686	;# 
 10207   0002AE                     U1BRGL          equ	686	;# 
 10208   0002AF                     U1BRGH          equ	687	;# 
 10209   0002B0                     U1FIFO          equ	688	;# 
 10210   0002B1                     U1UIR           equ	689	;# 
 10211   0002B2                     U1ERRIR         equ	690	;# 
 10212   0002B3                     U1ERRIE         equ	691	;# 
 10213   0002B4                     U2RXB           equ	692	;# 
 10214   0002B4                     U2RXBL          equ	692	;# 
 10215   0002B5                     U2RXCHK         equ	693	;# 
 10216   0002B6                     U2TXB           equ	694	;# 
 10217   0002B6                     U2TXBL          equ	694	;# 
 10218   0002B7                     U2TXCHK         equ	695	;# 
 10219   0002B8                     U2P1            equ	696	;# 
 10220   0002B8                     U2P1L           equ	696	;# 
 10221   0002B9                     U2P1H           equ	697	;# 
 10222   0002BA                     U2P2            equ	698	;# 
 10223   0002BA                     U2P2L           equ	698	;# 
 10224   0002BB                     U2P2H           equ	699	;# 
 10225   0002BC                     U2P3            equ	700	;# 
 10226   0002BC                     U2P3L           equ	700	;# 
 10227   0002BD                     U2P3H           equ	701	;# 
 10228   0002BE                     U2CON0          equ	702	;# 
 10229   0002BF                     U2CON1          equ	703	;# 
 10230   0002C0                     U2CON2          equ	704	;# 
 10231   0002C1                     U2BRG           equ	705	;# 
 10232   0002C1                     U2BRGL          equ	705	;# 
 10233   0002C2                     U2BRGH          equ	706	;# 
 10234   0002C3                     U2FIFO          equ	707	;# 
 10235   0002C4                     U2UIR           equ	708	;# 
 10236   0002C5                     U2ERRIR         equ	709	;# 
 10237   0002C6                     U2ERRIE         equ	710	;# 
 10238   0002C7                     U3RXB           equ	711	;# 
 10239   0002C7                     U3RXBL          equ	711	;# 
 10240   0002C9                     U3TXB           equ	713	;# 
 10241   0002C9                     U3TXBL          equ	713	;# 
 10242   0002CB                     U3P1            equ	715	;# 
 10243   0002CB                     U3P1L           equ	715	;# 
 10244   0002CD                     U3P2            equ	717	;# 
 10245   0002CD                     U3P2L           equ	717	;# 
 10246   0002CF                     U3P3            equ	719	;# 
 10247   0002CF                     U3P3L           equ	719	;# 
 10248   0002D1                     U3CON0          equ	721	;# 
 10249   0002D2                     U3CON1          equ	722	;# 
 10250   0002D3                     U3CON2          equ	723	;# 
 10251   0002D4                     U3BRG           equ	724	;# 
 10252   0002D4                     U3BRGL          equ	724	;# 
 10253   0002D5                     U3BRGH          equ	725	;# 
 10254   0002D6                     U3FIFO          equ	726	;# 
 10255   0002D7                     U3UIR           equ	727	;# 
 10256   0002D8                     U3ERRIR         equ	728	;# 
 10257   0002D9                     U3ERRIE         equ	729	;# 
 10258   0002DA                     U4RXB           equ	730	;# 
 10259   0002DA                     U4RXBL          equ	730	;# 
 10260   0002DC                     U4TXB           equ	732	;# 
 10261   0002DC                     U4TXBL          equ	732	;# 
 10262   0002DE                     U4P1            equ	734	;# 
 10263   0002DE                     U4P1L           equ	734	;# 
 10264   0002E0                     U4P2            equ	736	;# 
 10265   0002E0                     U4P2L           equ	736	;# 
 10266   0002E2                     U4P3            equ	738	;# 
 10267   0002E2                     U4P3L           equ	738	;# 
 10268   0002E4                     U4CON0          equ	740	;# 
 10269   0002E5                     U4CON1          equ	741	;# 
 10270   0002E6                     U4CON2          equ	742	;# 
 10271   0002E7                     U4BRG           equ	743	;# 
 10272   0002E7                     U4BRGL          equ	743	;# 
 10273   0002E8                     U4BRGH          equ	744	;# 
 10274   0002E9                     U4FIFO          equ	745	;# 
 10275   0002EA                     U4UIR           equ	746	;# 
 10276   0002EB                     U4ERRIR         equ	747	;# 
 10277   0002EC                     U4ERRIE         equ	748	;# 
 10278   0002ED                     U5RXB           equ	749	;# 
 10279   0002ED                     U5RXBL          equ	749	;# 
 10280   0002EF                     U5TXB           equ	751	;# 
 10281   0002EF                     U5TXBL          equ	751	;# 
 10282   0002F1                     U5P1            equ	753	;# 
 10283   0002F1                     U5P1L           equ	753	;# 
 10284   0002F3                     U5P2            equ	755	;# 
 10285   0002F3                     U5P2L           equ	755	;# 
 10286   0002F5                     U5P3            equ	757	;# 
 10287   0002F5                     U5P3L           equ	757	;# 
 10288   0002F7                     U5CON0          equ	759	;# 
 10289   0002F8                     U5CON1          equ	760	;# 
 10290   0002F9                     U5CON2          equ	761	;# 
 10291   0002FA                     U5BRG           equ	762	;# 
 10292   0002FA                     U5BRGL          equ	762	;# 
 10293   0002FB                     U5BRGH          equ	763	;# 
 10294   0002FC                     U5FIFO          equ	764	;# 
 10295   0002FD                     U5UIR           equ	765	;# 
 10296   0002FE                     U5ERRIR         equ	766	;# 
 10297   0002FF                     U5ERRIE         equ	767	;# 
 10298   000300                     SMT1TMR         equ	768	;# 
 10299   000300                     SMT1TMRL        equ	768	;# 
 10300   000301                     SMT1TMRH        equ	769	;# 
 10301   000302                     SMT1TMRU        equ	770	;# 
 10302   000303                     SMT1CPR         equ	771	;# 
 10303   000303                     SMT1CPRL        equ	771	;# 
 10304   000304                     SMT1CPRH        equ	772	;# 
 10305   000305                     SMT1CPRU        equ	773	;# 
 10306   000306                     SMT1CPW         equ	774	;# 
 10307   000306                     SMT1CPWL        equ	774	;# 
 10308   000307                     SMT1CPWH        equ	775	;# 
 10309   000308                     SMT1CPWU        equ	776	;# 
 10310   000309                     SMT1PR          equ	777	;# 
 10311   000309                     SMT1PRL         equ	777	;# 
 10312   00030A                     SMT1PRH         equ	778	;# 
 10313   00030B                     SMT1PRU         equ	779	;# 
 10314   00030C                     SMT1CON0        equ	780	;# 
 10315   00030D                     SMT1CON1        equ	781	;# 
 10316   00030E                     SMT1STAT        equ	782	;# 
 10317   00030F                     SMT1CLK         equ	783	;# 
 10318   000310                     SMT1SIG         equ	784	;# 
 10319   000311                     SMT1WIN         equ	785	;# 
 10320   000318                     TMR0L           equ	792	;# 
 10321   000318                     TMR0            equ	792	;# 
 10322   000319                     TMR0H           equ	793	;# 
 10323   000319                     PR0             equ	793	;# 
 10324   00031A                     T0CON0          equ	794	;# 
 10325   00031B                     T0CON1          equ	795	;# 
 10326   00031C                     TMR1            equ	796	;# 
 10327   00031C                     TMR1L           equ	796	;# 
 10328   00031D                     TMR1H           equ	797	;# 
 10329   00031E                     T1CON           equ	798	;# 
 10330   00031E                     TMR1CON         equ	798	;# 
 10331   00031F                     T1GCON          equ	799	;# 
 10332   00031F                     TMR1GCON        equ	799	;# 
 10333   000320                     T1GATE          equ	800	;# 
 10334   000320                     TMR1GATE        equ	800	;# 
 10335   000321                     T1CLK           equ	801	;# 
 10336   000321                     TMR1CLK         equ	801	;# 
 10337   000321                     PR1             equ	801	;# 
 10338   000322                     T2TMR           equ	802	;# 
 10339   000322                     TMR2            equ	802	;# 
 10340   000323                     T2PR            equ	803	;# 
 10341   000323                     PR2             equ	803	;# 
 10342   000324                     T2CON           equ	804	;# 
 10343   000325                     T2HLT           equ	805	;# 
 10344   000326                     T2CLKCON        equ	806	;# 
 10345   000326                     T2CLK           equ	806	;# 
 10346   000327                     T2RST           equ	807	;# 
 10347   000328                     TMR3            equ	808	;# 
 10348   000328                     TMR3L           equ	808	;# 
 10349   000329                     TMR3H           equ	809	;# 
 10350   00032A                     T3CON           equ	810	;# 
 10351   00032A                     TMR3CON         equ	810	;# 
 10352   00032B                     T3GCON          equ	811	;# 
 10353   00032B                     TMR3GCON        equ	811	;# 
 10354   00032C                     T3GATE          equ	812	;# 
 10355   00032C                     TMR3GATE        equ	812	;# 
 10356   00032D                     T3CLK           equ	813	;# 
 10357   00032D                     TMR3CLK         equ	813	;# 
 10358   00032D                     PR3             equ	813	;# 
 10359   00032E                     T4TMR           equ	814	;# 
 10360   00032E                     TMR4            equ	814	;# 
 10361   00032F                     T4PR            equ	815	;# 
 10362   00032F                     PR4             equ	815	;# 
 10363   000330                     T4CON           equ	816	;# 
 10364   000331                     T4HLT           equ	817	;# 
 10365   000332                     T4CLKCON        equ	818	;# 
 10366   000332                     T4CLK           equ	818	;# 
 10367   000333                     T4RST           equ	819	;# 
 10368   000334                     TMR5            equ	820	;# 
 10369   000334                     TMR5L           equ	820	;# 
 10370   000335                     TMR5H           equ	821	;# 
 10371   000336                     T5CON           equ	822	;# 
 10372   000336                     TMR5CON         equ	822	;# 
 10373   000337                     T5GCON          equ	823	;# 
 10374   000337                     TMR5GCON        equ	823	;# 
 10375   000338                     T5GATE          equ	824	;# 
 10376   000338                     TMR5GATE        equ	824	;# 
 10377   000339                     T5CLK           equ	825	;# 
 10378   000339                     TMR5CLK         equ	825	;# 
 10379   000339                     PR5             equ	825	;# 
 10380   00033A                     T6TMR           equ	826	;# 
 10381   00033A                     TMR6            equ	826	;# 
 10382   00033B                     T6PR            equ	827	;# 
 10383   00033B                     PR6             equ	827	;# 
 10384   00033C                     T6CON           equ	828	;# 
 10385   00033D                     T6HLT           equ	829	;# 
 10386   00033E                     T6CLKCON        equ	830	;# 
 10387   00033E                     T6CLK           equ	830	;# 
 10388   00033F                     T6RST           equ	831	;# 
 10389   000340                     CCPR1           equ	832	;# 
 10390   000340                     CCPR1L          equ	832	;# 
 10391   000341                     CCPR1H          equ	833	;# 
 10392   000342                     CCP1CON         equ	834	;# 
 10393   000343                     CCP1CAP         equ	835	;# 
 10394   000344                     CCPR2           equ	836	;# 
 10395   000344                     CCPR2L          equ	836	;# 
 10396   000345                     CCPR2H          equ	837	;# 
 10397   000346                     CCP2CON         equ	838	;# 
 10398   000347                     CCP2CAP         equ	839	;# 
 10399   000348                     CCPR3           equ	840	;# 
 10400   000348                     CCPR3L          equ	840	;# 
 10401   000349                     CCPR3H          equ	841	;# 
 10402   00034A                     CCP3CON         equ	842	;# 
 10403   00034B                     CCP3CAP         equ	843	;# 
 10404   00034C                     CCPTMRS0        equ	844	;# 
 10405   00034F                     CRCDATA         equ	847	;# 
 10406   00034F                     CRCDATAL        equ	847	;# 
 10407   000350                     CRCDATAH        equ	848	;# 
 10408   000351                     CRCDATAU        equ	849	;# 
 10409   000352                     CRCDATAT        equ	850	;# 
 10410   000353                     CRCOUT          equ	851	;# 
 10411   000353                     CRCSHFT         equ	851	;# 
 10412   000353                     CRCXOR          equ	851	;# 
 10413   000353                     CRCOUTL         equ	851	;# 
 10414   000353                     CRCSHFTL        equ	851	;# 
 10415   000353                     CRCSHIFTL       equ	851	;# 
 10416   000353                     CRCXORL         equ	851	;# 
 10417   000354                     CRCOUTH         equ	852	;# 
 10418   000354                     CRCSHFTH        equ	852	;# 
 10419   000354                     CRCSHIFTH       equ	852	;# 
 10420   000354                     CRCXORH         equ	852	;# 
 10421   000355                     CRCOUTU         equ	853	;# 
 10422   000355                     CRCSHFTU        equ	853	;# 
 10423   000355                     CRCSHIFTU       equ	853	;# 
 10424   000355                     CRCXORU         equ	853	;# 
 10425   000356                     CRCOUTT         equ	854	;# 
 10426   000356                     CRCSHFTT        equ	854	;# 
 10427   000356                     CRCSHIFTT       equ	854	;# 
 10428   000356                     CRCXORT         equ	854	;# 
 10429   000357                     CRCCON0         equ	855	;# 
 10430   000358                     CRCCON1         equ	856	;# 
 10431   000359                     CRCCON2         equ	857	;# 
 10432   00035A                     SCANLADR        equ	858	;# 
 10433   00035A                     SCANLADRL       equ	858	;# 
 10434   00035B                     SCANLADRH       equ	859	;# 
 10435   00035C                     SCANLADRU       equ	860	;# 
 10436   00035D                     SCANHADR        equ	861	;# 
 10437   00035D                     SCANHADRL       equ	861	;# 
 10438   00035E                     SCANHADRH       equ	862	;# 
 10439   00035F                     SCANHADRU       equ	863	;# 
 10440   000360                     SCANCON0        equ	864	;# 
 10441   000361                     SCANTRIG        equ	865	;# 
 10442   000362                     IPR0            equ	866	;# 
 10443   000363                     IPR1            equ	867	;# 
 10444   000364                     IPR2            equ	868	;# 
 10445   000365                     IPR3            equ	869	;# 
 10446   000366                     IPR4            equ	870	;# 
 10447   000367                     IPR5            equ	871	;# 
 10448   000368                     IPR6            equ	872	;# 
 10449   000369                     IPR7            equ	873	;# 
 10450   00036A                     IPR8            equ	874	;# 
 10451   00036B                     IPR9            equ	875	;# 
 10452   00036C                     IPR10           equ	876	;# 
 10453   00036D                     IPR11           equ	877	;# 
 10454   00036E                     IPR12           equ	878	;# 
 10455   00036F                     IPR13           equ	879	;# 
 10456   000370                     IPR14           equ	880	;# 
 10457   000371                     IPR15           equ	881	;# 
 10458   000373                     STATUS_CSHAD    equ	883	;# 
 10459   000374                     WREG_CSHAD      equ	884	;# 
 10460   000375                     BSR_CSHAD       equ	885	;# 
 10461   000376                     SHADCON         equ	886	;# 
 10462   000377                     STATUS_SHAD     equ	887	;# 
 10463   000378                     WREG_SHAD       equ	888	;# 
 10464   000379                     BSR_SHAD        equ	889	;# 
 10465   00037A                     PCLATH_SHAD     equ	890	;# 
 10466   00037B                     PCLATU_SHAD     equ	891	;# 
 10467   00037C                     FSR0SH          equ	892	;# 
 10468   00037C                     FSR0L_SHAD      equ	892	;# 
 10469   00037D                     FSR0H_SHAD      equ	893	;# 
 10470   00037E                     FSR1SH          equ	894	;# 
 10471   00037E                     FSR1L_SHAD      equ	894	;# 
 10472   00037F                     FSR1H_SHAD      equ	895	;# 
 10473   000380                     FSR2SH          equ	896	;# 
 10474   000380                     FSR2L_SHAD      equ	896	;# 
 10475   000381                     FSR2H_SHAD      equ	897	;# 
 10476   000382                     PRODSH          equ	898	;# 
 10477   000382                     PRODL_SHAD      equ	898	;# 
 10478   000383                     PRODH_SHAD      equ	899	;# 
 10479   000387                     TU16ACON0       equ	903	;# 
 10480   000388                     TU16ACON1       equ	904	;# 
 10481   000389                     TU16AHLT        equ	905	;# 
 10482   00038A                     TU16APS         equ	906	;# 
 10483   00038B                     TU16ATMR        equ	907	;# 
 10484   00038B                     TU16ACR         equ	907	;# 
 10485   00038B                     TU16ATMRL       equ	907	;# 
 10486   00038B                     TU16ACRL        equ	907	;# 
 10487   00038C                     TU16ATMRH       equ	908	;# 
 10488   00038C                     TU16ACRH        equ	908	;# 
 10489   00038D                     TU16APR         equ	909	;# 
 10490   00038D                     TU16APRL        equ	909	;# 
 10491   00038E                     TU16APRH        equ	910	;# 
 10492   00038F                     TU16ACLK        equ	911	;# 
 10493   000390                     TU16AERS        equ	912	;# 
 10494   000393                     TU16BCON0       equ	915	;# 
 10495   000394                     TU16BCON1       equ	916	;# 
 10496   000395                     TU16BHLT        equ	917	;# 
 10497   000396                     TU16BPS         equ	918	;# 
 10498   000397                     TU16BTMR        equ	919	;# 
 10499   000397                     TU16BCR         equ	919	;# 
 10500   000397                     TU16BTMRL       equ	919	;# 
 10501   000397                     TU16BCRL        equ	919	;# 
 10502   000398                     TU16BTMRH       equ	920	;# 
 10503   000398                     TU16BCRH        equ	920	;# 
 10504   000399                     TU16BPR         equ	921	;# 
 10505   000399                     TU16BPRL        equ	921	;# 
 10506   00039A                     TU16BPRH        equ	922	;# 
 10507   00039B                     TU16BCLK        equ	923	;# 
 10508   00039C                     TU16BERS        equ	924	;# 
 10509   0003BB                     TUCHAIN         equ	955	;# 
 10510   0003BC                     CWG1CLK         equ	956	;# 
 10511   0003BC                     CWG1CLKCON      equ	956	;# 
 10512   0003BD                     CWG1ISM         equ	957	;# 
 10513   0003BE                     CWG1DBR         equ	958	;# 
 10514   0003BF                     CWG1DBF         equ	959	;# 
 10515   0003C0                     CWG1CON0        equ	960	;# 
 10516   0003C1                     CWG1CON1        equ	961	;# 
 10517   0003C2                     CWG1AS0         equ	962	;# 
 10518   0003C3                     CWG1AS1         equ	963	;# 
 10519   0003C4                     CWG1STR         equ	964	;# 
 10520   0003C5                     CWG2CLK         equ	965	;# 
 10521   0003C5                     CWG2CLKCON      equ	965	;# 
 10522   0003C6                     CWG2ISM         equ	966	;# 
 10523   0003C7                     CWG2DBR         equ	967	;# 
 10524   0003C8                     CWG2DBF         equ	968	;# 
 10525   0003C9                     CWG2CON0        equ	969	;# 
 10526   0003CA                     CWG2CON1        equ	970	;# 
 10527   0003CB                     CWG2AS0         equ	971	;# 
 10528   0003CC                     CWG2AS1         equ	972	;# 
 10529   0003CD                     CWG2STR         equ	973	;# 
 10530   0003CE                     CWG3CLK         equ	974	;# 
 10531   0003CE                     CWG3CLKCON      equ	974	;# 
 10532   0003CF                     CWG3ISM         equ	975	;# 
 10533   0003D0                     CWG3DBR         equ	976	;# 
 10534   0003D1                     CWG3DBF         equ	977	;# 
 10535   0003D2                     CWG3CON0        equ	978	;# 
 10536   0003D3                     CWG3CON1        equ	979	;# 
 10537   0003D4                     CWG3AS0         equ	980	;# 
 10538   0003D5                     CWG3AS1         equ	981	;# 
 10539   0003D6                     CWG3STR         equ	982	;# 
 10540   0003D7                     FVRCON          equ	983	;# 
 10541   0003D8                     ADCPCON         equ	984	;# 
 10542   0003D8                     ADCP            equ	984	;# 
 10543   0003D9                     ADLTH           equ	985	;# 
 10544   0003D9                     ADLTHL          equ	985	;# 
 10545   0003DA                     ADLTHH          equ	986	;# 
 10546   0003DB                     ADUTH           equ	987	;# 
 10547   0003DB                     ADUTHL          equ	987	;# 
 10548   0003DC                     ADUTHH          equ	988	;# 
 10549   0003DD                     ADERR           equ	989	;# 
 10550   0003DD                     ADERRL          equ	989	;# 
 10551   0003DE                     ADERRH          equ	990	;# 
 10552   0003DF                     ADSTPT          equ	991	;# 
 10553   0003DF                     ADSTPTL         equ	991	;# 
 10554   0003E0                     ADSTPTH         equ	992	;# 
 10555   0003E1                     ADFLTR          equ	993	;# 
 10556   0003E1                     ADFLTRL         equ	993	;# 
 10557   0003E2                     ADFLTRH         equ	994	;# 
 10558   0003E3                     ADACC           equ	995	;# 
 10559   0003E3                     ADACCL          equ	995	;# 
 10560   0003E4                     ADACCH          equ	996	;# 
 10561   0003E5                     ADACCU          equ	997	;# 
 10562   0003E6                     ADCNT           equ	998	;# 
 10563   0003E7                     ADRPT           equ	999	;# 
 10564   0003E8                     ADPREV          equ	1000	;# 
 10565   0003E8                     ADPREVL         equ	1000	;# 
 10566   0003E9                     ADPREVH         equ	1001	;# 
 10567   0003EA                     ADRES           equ	1002	;# 
 10568   0003EA                     ADRESL          equ	1002	;# 
 10569   0003EB                     ADRESH          equ	1003	;# 
 10570   0003EC                     ADPCH           equ	1004	;# 
 10571   0003EE                     ADACQ           equ	1006	;# 
 10572   0003EE                     ADACQL          equ	1006	;# 
 10573   0003EF                     ADACQH          equ	1007	;# 
 10574   0003F0                     ADCAP           equ	1008	;# 
 10575   0003F1                     ADPRE           equ	1009	;# 
 10576   0003F1                     ADPREL          equ	1009	;# 
 10577   0003F2                     ADPREH          equ	1010	;# 
 10578   0003F3                     ADCON0          equ	1011	;# 
 10579   0003F4                     ADCON1          equ	1012	;# 
 10580   0003F5                     ADCON2          equ	1013	;# 
 10581   0003F6                     ADCON3          equ	1014	;# 
 10582   0003F7                     ADSTAT          equ	1015	;# 
 10583   0003F8                     ADREF           equ	1016	;# 
 10584   0003F9                     ADACT           equ	1017	;# 
 10585   0003FA                     ADCLK           equ	1018	;# 
 10586   0003FB                     ADCTX           equ	1019	;# 
 10587   0003FC                     ADCSEL1         equ	1020	;# 
 10588   0003FD                     ADCSEL2         equ	1021	;# 
 10589   0003FE                     ADCSEL3         equ	1022	;# 
 10590   0003FF                     ADCSEL4         equ	1023	;# 
 10591   000400                     ANSELA          equ	1024	;# 
 10592   000401                     WPUA            equ	1025	;# 
 10593   000402                     ODCONA          equ	1026	;# 
 10594   000403                     SLRCONA         equ	1027	;# 
 10595   000404                     INLVLA          equ	1028	;# 
 10596   000405                     IOCAP           equ	1029	;# 
 10597   000406                     IOCAN           equ	1030	;# 
 10598   000407                     IOCAF           equ	1031	;# 
 10599   000408                     ANSELB          equ	1032	;# 
 10600   000409                     WPUB            equ	1033	;# 
 10601   00040A                     ODCONB          equ	1034	;# 
 10602   00040B                     SLRCONB         equ	1035	;# 
 10603   00040C                     INLVLB          equ	1036	;# 
 10604   00040D                     IOCBP           equ	1037	;# 
 10605   00040E                     IOCBN           equ	1038	;# 
 10606   00040F                     IOCBF           equ	1039	;# 
 10607   000410                     ANSELC          equ	1040	;# 
 10608   000411                     WPUC            equ	1041	;# 
 10609   000412                     ODCONC          equ	1042	;# 
 10610   000413                     SLRCONC         equ	1043	;# 
 10611   000414                     INLVLC          equ	1044	;# 
 10612   000415                     IOCCP           equ	1045	;# 
 10613   000416                     IOCCN           equ	1046	;# 
 10614   000417                     IOCCF           equ	1047	;# 
 10615   000421                     WPUE            equ	1057	;# 
 10616   000424                     INLVLE          equ	1060	;# 
 10617   000425                     IOCEP           equ	1061	;# 
 10618   000426                     IOCEN           equ	1062	;# 
 10619   000427                     IOCEF           equ	1063	;# 
 10620   000440                     NCO1ACC         equ	1088	;# 
 10621   000440                     NCO1ACCL        equ	1088	;# 
 10622   000441                     NCO1ACCH        equ	1089	;# 
 10623   000442                     NCO1ACCU        equ	1090	;# 
 10624   000443                     NCO1INC         equ	1091	;# 
 10625   000443                     NCO1INCL        equ	1091	;# 
 10626   000444                     NCO1INCH        equ	1092	;# 
 10627   000445                     NCO1INCU        equ	1093	;# 
 10628   000446                     NCO1CON         equ	1094	;# 
 10629   000447                     NCO1CLK         equ	1095	;# 
 10630   000448                     NCO2ACC         equ	1096	;# 
 10631   000448                     NCO2ACCL        equ	1096	;# 
 10632   000449                     NCO2ACCH        equ	1097	;# 
 10633   00044A                     NCO2ACCU        equ	1098	;# 
 10634   00044B                     NCO2INC         equ	1099	;# 
 10635   00044B                     NCO2INCL        equ	1099	;# 
 10636   00044C                     NCO2INCH        equ	1100	;# 
 10637   00044D                     NCO2INCU        equ	1101	;# 
 10638   00044E                     NCO2CON         equ	1102	;# 
 10639   00044F                     NCO2CLK         equ	1103	;# 
 10640   000450                     NCO3ACC         equ	1104	;# 
 10641   000450                     NCO3ACCL        equ	1104	;# 
 10642   000451                     NCO3ACCH        equ	1105	;# 
 10643   000452                     NCO3ACCU        equ	1106	;# 
 10644   000453                     NCO3INC         equ	1107	;# 
 10645   000453                     NCO3INCL        equ	1107	;# 
 10646   000454                     NCO3INCH        equ	1108	;# 
 10647   000455                     NCO3INCU        equ	1109	;# 
 10648   000456                     NCO3CON         equ	1110	;# 
 10649   000457                     NCO3CLK         equ	1111	;# 
 10650   000458                     FSCMCON         equ	1112	;# 
 10651   000459                     IVTLOCK         equ	1113	;# 
 10652   00045A                     IVTAD           equ	1114	;# 
 10653   00045A                     IVTADL          equ	1114	;# 
 10654   00045B                     IVTADH          equ	1115	;# 
 10655   00045C                     IVTADU          equ	1116	;# 
 10656   00045D                     IVTBASE         equ	1117	;# 
 10657   00045D                     IVTBASEL        equ	1117	;# 
 10658   00045E                     IVTBASEH        equ	1118	;# 
 10659   00045F                     IVTBASEU        equ	1119	;# 
 10660   000460                     PWM1ERS         equ	1120	;# 
 10661   000461                     PWM1CLK         equ	1121	;# 
 10662   000462                     PWM1LDS         equ	1122	;# 
 10663   000463                     PWM1PR          equ	1123	;# 
 10664   000463                     PWM1PRL         equ	1123	;# 
 10665   000464                     PWM1PRH         equ	1124	;# 
 10666   000465                     PWM1CPRE        equ	1125	;# 
 10667   000466                     PWM1PIPOS       equ	1126	;# 
 10668   000467                     PWM1GIR         equ	1127	;# 
 10669   000468                     PWM1GIE         equ	1128	;# 
 10670   000469                     PWM1CON         equ	1129	;# 
 10671   00046A                     PWM1S1CFG       equ	1130	;# 
 10672   00046B                     PWM1S1P1        equ	1131	;# 
 10673   00046B                     PWM1S1P1L       equ	1131	;# 
 10674   00046C                     PWM1S1P1H       equ	1132	;# 
 10675   00046D                     PWM1S1P2        equ	1133	;# 
 10676   00046D                     PWM1S1P2L       equ	1133	;# 
 10677   00046E                     PWM1S1P2H       equ	1134	;# 
 10678   00046F                     PWM2ERS         equ	1135	;# 
 10679   000470                     PWM2CLK         equ	1136	;# 
 10680   000471                     PWM2LDS         equ	1137	;# 
 10681   000472                     PWM2PR          equ	1138	;# 
 10682   000472                     PWM2PRL         equ	1138	;# 
 10683   000473                     PWM2PRH         equ	1139	;# 
 10684   000474                     PWM2CPRE        equ	1140	;# 
 10685   000475                     PWM2PIPOS       equ	1141	;# 
 10686   000476                     PWM2GIR         equ	1142	;# 
 10687   000477                     PWM2GIE         equ	1143	;# 
 10688   000478                     PWM2CON         equ	1144	;# 
 10689   000479                     PWM2S1CFG       equ	1145	;# 
 10690   00047A                     PWM2S1P1        equ	1146	;# 
 10691   00047A                     PWM2S1P1L       equ	1146	;# 
 10692   00047B                     PWM2S1P1H       equ	1147	;# 
 10693   00047C                     PWM2S1P2        equ	1148	;# 
 10694   00047C                     PWM2S1P2L       equ	1148	;# 
 10695   00047D                     PWM2S1P2H       equ	1149	;# 
 10696   00047E                     PWM3ERS         equ	1150	;# 
 10697   00047F                     PWM3CLK         equ	1151	;# 
 10698   000480                     PWM3LDS         equ	1152	;# 
 10699   000481                     PWM3PR          equ	1153	;# 
 10700   000481                     PWM3PRL         equ	1153	;# 
 10701   000482                     PWM3PRH         equ	1154	;# 
 10702   000483                     PWM3CPRE        equ	1155	;# 
 10703   000484                     PWM3PIPOS       equ	1156	;# 
 10704   000485                     PWM3GIR         equ	1157	;# 
 10705   000486                     PWM3GIE         equ	1158	;# 
 10706   000487                     PWM3CON         equ	1159	;# 
 10707   000488                     PWM3S1CFG       equ	1160	;# 
 10708   000489                     PWM3S1P1        equ	1161	;# 
 10709   000489                     PWM3S1P1L       equ	1161	;# 
 10710   00048A                     PWM3S1P1H       equ	1162	;# 
 10711   00048B                     PWM3S1P2        equ	1163	;# 
 10712   00048B                     PWM3S1P2L       equ	1163	;# 
 10713   00048C                     PWM3S1P2H       equ	1164	;# 
 10714   00048D                     PWM4ERS         equ	1165	;# 
 10715   00048E                     PWM4CLK         equ	1166	;# 
 10716   00048F                     PWM4LDS         equ	1167	;# 
 10717   000490                     PWM4PR          equ	1168	;# 
 10718   000490                     PWM4PRL         equ	1168	;# 
 10719   000491                     PWM4PRH         equ	1169	;# 
 10720   000492                     PWM4CPRE        equ	1170	;# 
 10721   000493                     PWM4PIPOS       equ	1171	;# 
 10722   000494                     PWM4GIR         equ	1172	;# 
 10723   000495                     PWM4GIE         equ	1173	;# 
 10724   000496                     PWM4CON         equ	1174	;# 
 10725   000497                     PWM4S1CFG       equ	1175	;# 
 10726   000498                     PWM4S1P1        equ	1176	;# 
 10727   000498                     PWM4S1P1L       equ	1176	;# 
 10728   000499                     PWM4S1P1H       equ	1177	;# 
 10729   00049A                     PWM4S1P2        equ	1178	;# 
 10730   00049A                     PWM4S1P2L       equ	1178	;# 
 10731   00049B                     PWM4S1P2H       equ	1179	;# 
 10732   00049C                     PWMLOAD         equ	1180	;# 
 10733   00049D                     PWMEN           equ	1181	;# 
 10734   00049E                     PIE0            equ	1182	;# 
 10735   00049F                     PIE1            equ	1183	;# 
 10736   0004A0                     PIE2            equ	1184	;# 
 10737   0004A1                     PIE3            equ	1185	;# 
 10738   0004A2                     PIE4            equ	1186	;# 
 10739   0004A3                     PIE5            equ	1187	;# 
 10740   0004A4                     PIE6            equ	1188	;# 
 10741   0004A5                     PIE7            equ	1189	;# 
 10742   0004A6                     PIE8            equ	1190	;# 
 10743   0004A7                     PIE9            equ	1191	;# 
 10744   0004A8                     PIE10           equ	1192	;# 
 10745   0004A9                     PIE11           equ	1193	;# 
 10746   0004AA                     PIE12           equ	1194	;# 
 10747   0004AB                     PIE13           equ	1195	;# 
 10748   0004AC                     PIE14           equ	1196	;# 
 10749   0004AD                     PIE15           equ	1197	;# 
 10750   0004AE                     PIR0            equ	1198	;# 
 10751   0004AF                     PIR1            equ	1199	;# 
 10752   0004B0                     PIR2            equ	1200	;# 
 10753   0004B1                     PIR3            equ	1201	;# 
 10754   0004B2                     PIR4            equ	1202	;# 
 10755   0004B3                     PIR5            equ	1203	;# 
 10756   0004B4                     PIR6            equ	1204	;# 
 10757   0004B5                     PIR7            equ	1205	;# 
 10758   0004B6                     PIR8            equ	1206	;# 
 10759   0004B7                     PIR9            equ	1207	;# 
 10760   0004B8                     PIR10           equ	1208	;# 
 10761   0004B9                     PIR11           equ	1209	;# 
 10762   0004BA                     PIR12           equ	1210	;# 
 10763   0004BB                     PIR13           equ	1211	;# 
 10764   0004BC                     PIR14           equ	1212	;# 
 10765   0004BD                     PIR15           equ	1213	;# 
 10766   0004BE                     LATA            equ	1214	;# 
 10767   0004BF                     LATB            equ	1215	;# 
 10768   0004C0                     LATC            equ	1216	;# 
 10769   0004C6                     TRISA           equ	1222	;# 
 10770   0004C7                     TRISB           equ	1223	;# 
 10771   0004C8                     TRISC           equ	1224	;# 
 10772   0004CA                     TRISE           equ	1226	;# 
 10773   0004CE                     PORTA           equ	1230	;# 
 10774   0004CF                     PORTB           equ	1231	;# 
 10775   0004D0                     PORTC           equ	1232	;# 
 10776   0004D2                     PORTE           equ	1234	;# 
 10777   0004D6                     INTCON0         equ	1238	;# 
 10778   0004D7                     INTCON1         equ	1239	;# 
 10779   0004D8                     STATUS          equ	1240	;# 
 10780   0004D9                     FSR2            equ	1241	;# 
 10781   0004D9                     FSR2L           equ	1241	;# 
 10782   0004DA                     FSR2H           equ	1242	;# 
 10783   0004DB                     PLUSW2          equ	1243	;# 
 10784   0004DC                     PREINC2         equ	1244	;# 
 10785   0004DD                     POSTDEC2        equ	1245	;# 
 10786   0004DE                     POSTINC2        equ	1246	;# 
 10787   0004DF                     INDF2           equ	1247	;# 
 10788   0004E0                     BSR             equ	1248	;# 
 10789   0004E1                     FSR1            equ	1249	;# 
 10790   0004E1                     FSR1L           equ	1249	;# 
 10791   0004E2                     FSR1H           equ	1250	;# 
 10792   0004E3                     PLUSW1          equ	1251	;# 
 10793   0004E4                     PREINC1         equ	1252	;# 
 10794   0004E5                     POSTDEC1        equ	1253	;# 
 10795   0004E6                     POSTINC1        equ	1254	;# 
 10796   0004E7                     INDF1           equ	1255	;# 
 10797   0004E8                     WREG            equ	1256	;# 
 10798   0004E9                     FSR0            equ	1257	;# 
 10799   0004E9                     FSR0L           equ	1257	;# 
 10800   0004EA                     FSR0H           equ	1258	;# 
 10801   0004EB                     PLUSW0          equ	1259	;# 
 10802   0004EC                     PREINC0         equ	1260	;# 
 10803   0004ED                     POSTDEC0        equ	1261	;# 
 10804   0004EE                     POSTINC0        equ	1262	;# 
 10805   0004EF                     INDF0           equ	1263	;# 
 10806   0004F0                     PCON0           equ	1264	;# 
 10807   0004F1                     PCON1           equ	1265	;# 
 10808   0004F2                     CPUDOZE         equ	1266	;# 
 10809   0004F3                     PROD            equ	1267	;# 
 10810   0004F3                     PRODL           equ	1267	;# 
 10811   0004F4                     PRODH           equ	1268	;# 
 10812   0004F5                     TABLAT          equ	1269	;# 
 10813   0004F6                     TBLPTR          equ	1270	;# 
 10814   0004F6                     TBLPTRL         equ	1270	;# 
 10815   0004F7                     TBLPTRH         equ	1271	;# 
 10816   0004F8                     TBLPTRU         equ	1272	;# 
 10817   0004F9                     PCLAT           equ	1273	;# 
 10818   0004F9                     PCL             equ	1273	;# 
 10819   0004FA                     PCLATH          equ	1274	;# 
 10820   0004FB                     PCLATU          equ	1275	;# 
 10821   0004FC                     STKPTR          equ	1276	;# 
 10822   0004FD                     TOS             equ	1277	;# 
 10823   0004FD                     TOSL            equ	1277	;# 
 10824   0004FE                     TOSH            equ	1278	;# 
 10825   0004FF                     TOSU            equ	1279	;# 
 10826   000038                     BOOTREG         equ	56	;# 
 10827   000039                     CLKRCON         equ	57	;# 
 10828   00003A                     CLKRCLK         equ	58	;# 
 10829   000040                     NVMCON0         equ	64	;# 
 10830   000041                     NVMCON1         equ	65	;# 
 10831   000042                     NVMLOCK         equ	66	;# 
 10832   000043                     NVMADR          equ	67	;# 
 10833   000043                     NVMADRL         equ	67	;# 
 10834   000044                     NVMADRH         equ	68	;# 
 10835   000045                     NVMADRU         equ	69	;# 
 10836   000046                     NVMDAT          equ	70	;# 
 10837   000046                     NVMDATL         equ	70	;# 
 10838   000047                     NVMDATH         equ	71	;# 
 10839   000048                     VREGCON         equ	72	;# 
 10840   000049                     BORCON          equ	73	;# 
 10841   00004A                     HLVDCON0        equ	74	;# 
 10842   00004B                     HLVDCON1        equ	75	;# 
 10843   00004C                     ZCDCON          equ	76	;# 
 10844   000060                     PMD0            equ	96	;# 
 10845   000061                     PMD1            equ	97	;# 
 10846   000062                     PMD2            equ	98	;# 
 10847   000063                     PMD3            equ	99	;# 
 10848   000064                     PMD4            equ	100	;# 
 10849   000065                     PMD5            equ	101	;# 
 10850   000066                     PMD6            equ	102	;# 
 10851   000067                     PMD7            equ	103	;# 
 10852   000068                     PMD8            equ	104	;# 
 10853   00006A                     MD1CON0         equ	106	;# 
 10854   00006B                     MD1CON1         equ	107	;# 
 10855   00006C                     MD1SRC          equ	108	;# 
 10856   00006D                     MD1CARL         equ	109	;# 
 10857   00006E                     MD1CARH         equ	110	;# 
 10858   00006F                     CMOUT           equ	111	;# 
 10859   000070                     CM1CON0         equ	112	;# 
 10860   000071                     CM1CON1         equ	113	;# 
 10861   000072                     CM1NCH          equ	114	;# 
 10862   000073                     CM1PCH          equ	115	;# 
 10863   000074                     CM2CON0         equ	116	;# 
 10864   000075                     CM2CON1         equ	117	;# 
 10865   000076                     CM2NCH          equ	118	;# 
 10866   000077                     CM2PCH          equ	119	;# 
 10867   000078                     WDTCON0         equ	120	;# 
 10868   000079                     WDTCON1         equ	121	;# 
 10869   00007A                     WDTPSL          equ	122	;# 
 10870   00007B                     WDTPSH          equ	123	;# 
 10871   00007C                     WDTTMR          equ	124	;# 
 10872   00007D                     DAC1DAT         equ	125	;# 
 10873   00007D                     DAC1DATL        equ	125	;# 
 10874   00007F                     DAC1CON         equ	127	;# 
 10875   000080                     SPI1RXB         equ	128	;# 
 10876   000081                     SPI1TXB         equ	129	;# 
 10877   000082                     SPI1TCNT        equ	130	;# 
 10878   000082                     SPI1TCNTL       equ	130	;# 
 10879   000083                     SPI1TCNTH       equ	131	;# 
 10880   000084                     SPI1CON0        equ	132	;# 
 10881   000085                     SPI1CON1        equ	133	;# 
 10882   000086                     SPI1CON2        equ	134	;# 
 10883   000087                     SPI1STATUS      equ	135	;# 
 10884   000088                     SPI1TWIDTH      equ	136	;# 
 10885   000089                     SPI1BAUD        equ	137	;# 
 10886   00008A                     SPI1INTF        equ	138	;# 
 10887   00008B                     SPI1INTE        equ	139	;# 
 10888   00008C                     SPI1CLK         equ	140	;# 
 10889   00008D                     SPI2RXB         equ	141	;# 
 10890   00008E                     SPI2TXB         equ	142	;# 
 10891   00008F                     SPI2TCNT        equ	143	;# 
 10892   00008F                     SPI2TCNTL       equ	143	;# 
 10893   000090                     SPI2TCNTH       equ	144	;# 
 10894   000091                     SPI2CON0        equ	145	;# 
 10895   000092                     SPI2CON1        equ	146	;# 
 10896   000093                     SPI2CON2        equ	147	;# 
 10897   000094                     SPI2STATUS      equ	148	;# 
 10898   000095                     SPI2TWIDTH      equ	149	;# 
 10899   000096                     SPI2BAUD        equ	150	;# 
 10900   000097                     SPI2INTF        equ	151	;# 
 10901   000098                     SPI2INTE        equ	152	;# 
 10902   000099                     SPI2CLK         equ	153	;# 
 10903   0000AC                     ACTCON          equ	172	;# 
 10904   0000AD                     OSCCON1         equ	173	;# 
 10905   0000AE                     OSCCON2         equ	174	;# 
 10906   0000AF                     OSCCON3         equ	175	;# 
 10907   0000B0                     OSCTUNE         equ	176	;# 
 10908   0000B1                     OSCFRQ          equ	177	;# 
 10909   0000B1                     OSCFREQ         equ	177	;# 
 10910   0000B2                     OSCSTAT         equ	178	;# 
 10911   0000B2                     OSCSTAT1        equ	178	;# 
 10912   0000B3                     OSCEN           equ	179	;# 
 10913   0000B4                     PRLOCK          equ	180	;# 
 10914   0000B5                     SCANPR          equ	181	;# 
 10915   0000B6                     DMA1PR          equ	182	;# 
 10916   0000B7                     DMA2PR          equ	183	;# 
 10917   0000B8                     DMA3PR          equ	184	;# 
 10918   0000B9                     DMA4PR          equ	185	;# 
 10919   0000BA                     DMA5PR          equ	186	;# 
 10920   0000BB                     DMA6PR          equ	187	;# 
 10921   0000BC                     DMA7PR          equ	188	;# 
 10922   0000BD                     DMA8PR          equ	189	;# 
 10923   0000BE                     MAINPR          equ	190	;# 
 10924   0000BF                     ISRPR           equ	191	;# 
 10925   0000D4                     CLCDATA         equ	212	;# 
 10926   0000D5                     CLCSELECT       equ	213	;# 
 10927   0000D6                     CLCnCON         equ	214	;# 
 10928   0000D7                     CLCnPOL         equ	215	;# 
 10929   0000D8                     CLCnSEL0        equ	216	;# 
 10930   0000D9                     CLCnSEL1        equ	217	;# 
 10931   0000DA                     CLCnSEL2        equ	218	;# 
 10932   0000DB                     CLCnSEL3        equ	219	;# 
 10933   0000DC                     CLCnGLS0        equ	220	;# 
 10934   0000DD                     CLCnGLS1        equ	221	;# 
 10935   0000DE                     CLCnGLS2        equ	222	;# 
 10936   0000DF                     CLCnGLS3        equ	223	;# 
 10937   0000E8                     DMASELECT       equ	232	;# 
 10938   0000E9                     DMAnBUF         equ	233	;# 
 10939   0000EA                     DMAnDCNT        equ	234	;# 
 10940   0000EA                     DMAnDCNTL       equ	234	;# 
 10941   0000EB                     DMAnDCNTH       equ	235	;# 
 10942   0000EC                     DMAnDPTR        equ	236	;# 
 10943   0000EC                     DMAnDPTRL       equ	236	;# 
 10944   0000ED                     DMAnDPTRH       equ	237	;# 
 10945   0000EE                     DMAnDSZ         equ	238	;# 
 10946   0000EE                     DMAnDSZL        equ	238	;# 
 10947   0000EF                     DMAnDSZH        equ	239	;# 
 10948   0000F0                     DMAnDSA         equ	240	;# 
 10949   0000F0                     DMAnDSAL        equ	240	;# 
 10950   0000F1                     DMAnDSAH        equ	241	;# 
 10951   0000F2                     DMAnSCNT        equ	242	;# 
 10952   0000F2                     DMAnSCNTL       equ	242	;# 
 10953   0000F3                     DMAnSCNTH       equ	243	;# 
 10954   0000F4                     DMAnSPTR        equ	244	;# 
 10955   0000F4                     DMAnSPTRL       equ	244	;# 
 10956   0000F5                     DMAnSPTRH       equ	245	;# 
 10957   0000F6                     DMAnSPTRU       equ	246	;# 
 10958   0000F7                     DMAnSSZ         equ	247	;# 
 10959   0000F7                     DMAnSSZL        equ	247	;# 
 10960   0000F8                     DMAnSSZH        equ	248	;# 
 10961   0000F9                     DMAnSSA         equ	249	;# 
 10962   0000F9                     DMAnSSAL        equ	249	;# 
 10963   0000FA                     DMAnSSAH        equ	250	;# 
 10964   0000FB                     DMAnSSAU        equ	251	;# 
 10965   0000FC                     DMAnCON0        equ	252	;# 
 10966   0000FD                     DMAnCON1        equ	253	;# 
 10967   0000FE                     DMAnAIRQ        equ	254	;# 
 10968   0000FF                     DMAnSIRQ        equ	255	;# 
 10969   000100                     C1CONL          equ	256	;# 
 10970   000101                     C1CONH          equ	257	;# 
 10971   000102                     C1CONU          equ	258	;# 
 10972   000103                     C1CONT          equ	259	;# 
 10973   000104                     C1NBTCFGL       equ	260	;# 
 10974   000105                     C1NBTCFGH       equ	261	;# 
 10975   000106                     C1NBTCFGU       equ	262	;# 
 10976   000107                     C1NBTCFGT       equ	263	;# 
 10977   000108                     C1DBTCFGL       equ	264	;# 
 10978   000109                     C1DBTCFGH       equ	265	;# 
 10979   00010A                     C1DBTCFGU       equ	266	;# 
 10980   00010B                     C1DBTCFGT       equ	267	;# 
 10981   00010C                     C1TDCL          equ	268	;# 
 10982   00010D                     C1TDCH          equ	269	;# 
 10983   00010E                     C1TDCU          equ	270	;# 
 10984   000110                     C1TBC           equ	272	;# 
 10985   000110                     C1TBCL          equ	272	;# 
 10986   000111                     C1TBCH          equ	273	;# 
 10987   000112                     C1TBCU          equ	274	;# 
 10988   000113                     C1TBCT          equ	275	;# 
 10989   000114                     C1TSCONL        equ	276	;# 
 10990   000115                     C1TSCONH        equ	277	;# 
 10991   000116                     C1TSCONU        equ	278	;# 
 10992   000117                     C1TSCONT        equ	279	;# 
 10993   000118                     C1VECL          equ	280	;# 
 10994   000119                     C1VECH          equ	281	;# 
 10995   00011A                     C1VECU          equ	282	;# 
 10996   00011B                     C1VECT          equ	283	;# 
 10997   00011C                     C1INTL          equ	284	;# 
 10998   00011D                     C1INTH          equ	285	;# 
 10999   00011E                     C1INTU          equ	286	;# 
 11000   00011F                     C1INTT          equ	287	;# 
 11001   000120                     C1RXIF          equ	288	;# 
 11002   000120                     C1RXIFL         equ	288	;# 
 11003   000121                     C1RXIFH         equ	289	;# 
 11004   000122                     C1RXIFU         equ	290	;# 
 11005   000123                     C1RXIFT         equ	291	;# 
 11006   000124                     C1TXIF          equ	292	;# 
 11007   000124                     C1TXIFL         equ	292	;# 
 11008   000125                     C1TXIFH         equ	293	;# 
 11009   000126                     C1TXIFU         equ	294	;# 
 11010   000127                     C1TXIFT         equ	295	;# 
 11011   000128                     C1RXOVIF        equ	296	;# 
 11012   000128                     C1RXOVIFL       equ	296	;# 
 11013   000129                     C1RXOVIFH       equ	297	;# 
 11014   00012A                     C1RXOVIFU       equ	298	;# 
 11015   00012B                     C1RXOVIFT       equ	299	;# 
 11016   00012C                     C1TXATIF        equ	300	;# 
 11017   00012C                     C1TXATIFL       equ	300	;# 
 11018   00012D                     C1TXATIFH       equ	301	;# 
 11019   00012E                     C1TXATIFU       equ	302	;# 
 11020   00012F                     C1TXATIFT       equ	303	;# 
 11021   000130                     C1TXREQ         equ	304	;# 
 11022   000130                     C1TXREQL        equ	304	;# 
 11023   000131                     C1TXREQH        equ	305	;# 
 11024   000132                     C1TXREQU        equ	306	;# 
 11025   000133                     C1TXREQT        equ	307	;# 
 11026   000134                     C1TRECL         equ	308	;# 
 11027   000135                     C1TRECH         equ	309	;# 
 11028   000136                     C1TRECU         equ	310	;# 
 11029   000137                     C1TRECT         equ	311	;# 
 11030   000138                     C1BDIAG0L       equ	312	;# 
 11031   000139                     C1BDIAG0H       equ	313	;# 
 11032   00013C                     C1BDIAG1L       equ	316	;# 
 11033   00013D                     C1BDIAG1H       equ	317	;# 
 11034   00013E                     C1BDIAG1U       equ	318	;# 
 11035   00013F                     C1BDIAG1T       equ	319	;# 
 11036   000140                     C1TEFCONL       equ	320	;# 
 11037   000141                     C1TEFCONH       equ	321	;# 
 11038   000142                     C1TEFCONU       equ	322	;# 
 11039   000143                     C1TEFCONT       equ	323	;# 
 11040   000144                     C1TEFSTAL       equ	324	;# 
 11041   000145                     C1TEFSTAH       equ	325	;# 
 11042   000146                     C1TEFSTAU       equ	326	;# 
 11043   000147                     C1TEFSTAT       equ	327	;# 
 11044   000148                     C1TEFUA         equ	328	;# 
 11045   000148                     C1TEFUAL        equ	328	;# 
 11046   000149                     C1TEFUAH        equ	329	;# 
 11047   00014A                     C1TEFUAU        equ	330	;# 
 11048   00014B                     C1TEFUAT        equ	331	;# 
 11049   00014C                     C1FIFOBA        equ	332	;# 
 11050   00014C                     C1FIFOBAL       equ	332	;# 
 11051   00014D                     C1FIFOBAH       equ	333	;# 
 11052   00014E                     C1FIFOBAU       equ	334	;# 
 11053   00014F                     C1FIFOBAT       equ	335	;# 
 11054   000150                     C1TXQCONL       equ	336	;# 
 11055   000151                     C1TXQCONH       equ	337	;# 
 11056   000152                     C1TXQCONU       equ	338	;# 
 11057   000153                     C1TXQCONT       equ	339	;# 
 11058   000154                     C1TXQSTAL       equ	340	;# 
 11059   000155                     C1TXQSTAH       equ	341	;# 
 11060   000156                     C1TXQSTAU       equ	342	;# 
 11061   000157                     C1TXQSTAT       equ	343	;# 
 11062   000158                     C1TXQUA         equ	344	;# 
 11063   000158                     C1TXQUAL        equ	344	;# 
 11064   000159                     C1TXQUAH        equ	345	;# 
 11065   00015A                     C1TXQUAU        equ	346	;# 
 11066   00015B                     C1TXQUAT        equ	347	;# 
 11067   00015C                     C1FIFOCON1      equ	348	;# 
 11068   00015C                     C1FIFOCON1L     equ	348	;# 
 11069   00015D                     C1FIFOCON1H     equ	349	;# 
 11070   00015E                     C1FIFOCON1U     equ	350	;# 
 11071   00015F                     C1FIFOCON1T     equ	351	;# 
 11072   000160                     C1FIFOSTA1      equ	352	;# 
 11073   000160                     C1FIFOSTA1L     equ	352	;# 
 11074   000161                     C1FIFOSTA1H     equ	353	;# 
 11075   000162                     C1FIFOSTA1U     equ	354	;# 
 11076   000163                     C1FIFOSTA1T     equ	355	;# 
 11077   000164                     C1FIFOUA1       equ	356	;# 
 11078   000164                     C1FIFOUA1L      equ	356	;# 
 11079   000165                     C1FIFOUA1H      equ	357	;# 
 11080   000166                     C1FIFOUA1U      equ	358	;# 
 11081   000167                     C1FIFOUA1T      equ	359	;# 
 11082   000168                     C1FIFOCON2      equ	360	;# 
 11083   000168                     C1FIFOCON2L     equ	360	;# 
 11084   000169                     C1FIFOCON2H     equ	361	;# 
 11085   00016A                     C1FIFOCON2U     equ	362	;# 
 11086   00016B                     C1FIFOCON2T     equ	363	;# 
 11087   00016C                     C1FIFOSTA2      equ	364	;# 
 11088   00016C                     C1FIFOSTA2L     equ	364	;# 
 11089   00016D                     C1FIFOSTA2H     equ	365	;# 
 11090   00016E                     C1FIFOSTA2U     equ	366	;# 
 11091   00016F                     C1FIFOSTA2T     equ	367	;# 
 11092   000170                     C1FIFOUA2       equ	368	;# 
 11093   000170                     C1FIFOUA2L      equ	368	;# 
 11094   000171                     C1FIFOUA2H      equ	369	;# 
 11095   000172                     C1FIFOUA2U      equ	370	;# 
 11096   000173                     C1FIFOUA2T      equ	371	;# 
 11097   000174                     C1FIFOCON3      equ	372	;# 
 11098   000174                     C1FIFOCON3L     equ	372	;# 
 11099   000175                     C1FIFOCON3H     equ	373	;# 
 11100   000176                     C1FIFOCON3U     equ	374	;# 
 11101   000177                     C1FIFOCON3T     equ	375	;# 
 11102   000178                     C1FIFOSTA3      equ	376	;# 
 11103   000178                     C1FIFOSTA3L     equ	376	;# 
 11104   000179                     C1FIFOSTA3H     equ	377	;# 
 11105   00017A                     C1FIFOSTA3U     equ	378	;# 
 11106   00017B                     C1FIFOSTA3T     equ	379	;# 
 11107   00017C                     C1FIFOUA3       equ	380	;# 
 11108   00017C                     C1FIFOUA3L      equ	380	;# 
 11109   00017D                     C1FIFOUA3H      equ	381	;# 
 11110   00017E                     C1FIFOUA3U      equ	382	;# 
 11111   00017F                     C1FIFOUA3T      equ	383	;# 
 11112   000180                     C1FLTCON0L      equ	384	;# 
 11113   000181                     C1FLTCON0H      equ	385	;# 
 11114   000182                     C1FLTCON0U      equ	386	;# 
 11115   000183                     C1FLTCON0T      equ	387	;# 
 11116   000184                     C1FLTCON1L      equ	388	;# 
 11117   000185                     C1FLTCON1H      equ	389	;# 
 11118   000186                     C1FLTCON1U      equ	390	;# 
 11119   000187                     C1FLTCON1T      equ	391	;# 
 11120   000188                     C1FLTCON2L      equ	392	;# 
 11121   000189                     C1FLTCON2H      equ	393	;# 
 11122   00018A                     C1FLTCON2U      equ	394	;# 
 11123   00018B                     C1FLTCON2T      equ	395	;# 
 11124   00018C                     C1FLTOBJ0       equ	396	;# 
 11125   00018C                     C1FLTOBJ0L      equ	396	;# 
 11126   00018D                     C1FLTOBJ0H      equ	397	;# 
 11127   00018E                     C1FLTOBJ0U      equ	398	;# 
 11128   00018F                     C1FLTOBJ0T      equ	399	;# 
 11129   000190                     C1MASK0         equ	400	;# 
 11130   000190                     C1MASK0L        equ	400	;# 
 11131   000191                     C1MASK0H        equ	401	;# 
 11132   000192                     C1MASK0U        equ	402	;# 
 11133   000193                     C1MASK0T        equ	403	;# 
 11134   000194                     C1FLTOBJ1       equ	404	;# 
 11135   000194                     C1FLTOBJ1L      equ	404	;# 
 11136   000195                     C1FLTOBJ1H      equ	405	;# 
 11137   000196                     C1FLTOBJ1U      equ	406	;# 
 11138   000197                     C1FLTOBJ1T      equ	407	;# 
 11139   000198                     C1MASK1         equ	408	;# 
 11140   000198                     C1MASK1L        equ	408	;# 
 11141   000199                     C1MASK1H        equ	409	;# 
 11142   00019A                     C1MASK1U        equ	410	;# 
 11143   00019B                     C1MASK1T        equ	411	;# 
 11144   00019C                     C1FLTOBJ2       equ	412	;# 
 11145   00019C                     C1FLTOBJ2L      equ	412	;# 
 11146   00019D                     C1FLTOBJ2H      equ	413	;# 
 11147   00019E                     C1FLTOBJ2U      equ	414	;# 
 11148   00019F                     C1FLTOBJ2T      equ	415	;# 
 11149   0001A0                     C1MASK2         equ	416	;# 
 11150   0001A0                     C1MASK2L        equ	416	;# 
 11151   0001A1                     C1MASK2H        equ	417	;# 
 11152   0001A2                     C1MASK2U        equ	418	;# 
 11153   0001A3                     C1MASK2T        equ	419	;# 
 11154   0001A4                     C1FLTOBJ3       equ	420	;# 
 11155   0001A4                     C1FLTOBJ3L      equ	420	;# 
 11156   0001A5                     C1FLTOBJ3H      equ	421	;# 
 11157   0001A6                     C1FLTOBJ3U      equ	422	;# 
 11158   0001A7                     C1FLTOBJ3T      equ	423	;# 
 11159   0001A8                     C1MASK3         equ	424	;# 
 11160   0001A8                     C1MASK3L        equ	424	;# 
 11161   0001A9                     C1MASK3H        equ	425	;# 
 11162   0001AA                     C1MASK3U        equ	426	;# 
 11163   0001AB                     C1MASK3T        equ	427	;# 
 11164   0001AC                     C1FLTOBJ4       equ	428	;# 
 11165   0001AC                     C1FLTOBJ4L      equ	428	;# 
 11166   0001AD                     C1FLTOBJ4H      equ	429	;# 
 11167   0001AE                     C1FLTOBJ4U      equ	430	;# 
 11168   0001AF                     C1FLTOBJ4T      equ	431	;# 
 11169   0001B0                     C1MASK4         equ	432	;# 
 11170   0001B0                     C1MASK4L        equ	432	;# 
 11171   0001B1                     C1MASK4H        equ	433	;# 
 11172   0001B2                     C1MASK4U        equ	434	;# 
 11173   0001B3                     C1MASK4T        equ	435	;# 
 11174   0001B4                     C1FLTOBJ5       equ	436	;# 
 11175   0001B4                     C1FLTOBJ5L      equ	436	;# 
 11176   0001B5                     C1FLTOBJ5H      equ	437	;# 
 11177   0001B6                     C1FLTOBJ5U      equ	438	;# 
 11178   0001B7                     C1FLTOBJ5T      equ	439	;# 
 11179   0001B8                     C1MASK5         equ	440	;# 
 11180   0001B8                     C1MASK5L        equ	440	;# 
 11181   0001B9                     C1MASK5H        equ	441	;# 
 11182   0001BA                     C1MASK5U        equ	442	;# 
 11183   0001BB                     C1MASK5T        equ	443	;# 
 11184   0001BC                     C1FLTOBJ6       equ	444	;# 
 11185   0001BC                     C1FLTOBJ6L      equ	444	;# 
 11186   0001BD                     C1FLTOBJ6H      equ	445	;# 
 11187   0001BE                     C1FLTOBJ6U      equ	446	;# 
 11188   0001BF                     C1FLTOBJ6T      equ	447	;# 
 11189   0001C0                     C1MASK6         equ	448	;# 
 11190   0001C0                     C1MASK6L        equ	448	;# 
 11191   0001C1                     C1MASK6H        equ	449	;# 
 11192   0001C2                     C1MASK6U        equ	450	;# 
 11193   0001C3                     C1MASK6T        equ	451	;# 
 11194   0001C4                     C1FLTOBJ7       equ	452	;# 
 11195   0001C4                     C1FLTOBJ7L      equ	452	;# 
 11196   0001C5                     C1FLTOBJ7H      equ	453	;# 
 11197   0001C6                     C1FLTOBJ7U      equ	454	;# 
 11198   0001C7                     C1FLTOBJ7T      equ	455	;# 
 11199   0001C8                     C1MASK7         equ	456	;# 
 11200   0001C8                     C1MASK7L        equ	456	;# 
 11201   0001C9                     C1MASK7H        equ	457	;# 
 11202   0001CA                     C1MASK7U        equ	458	;# 
 11203   0001CB                     C1MASK7T        equ	459	;# 
 11204   0001CC                     C1FLTOBJ8       equ	460	;# 
 11205   0001CC                     C1FLTOBJ8L      equ	460	;# 
 11206   0001CD                     C1FLTOBJ8H      equ	461	;# 
 11207   0001CE                     C1FLTOBJ8U      equ	462	;# 
 11208   0001CF                     C1FLTOBJ8T      equ	463	;# 
 11209   0001D0                     C1MASK8         equ	464	;# 
 11210   0001D0                     C1MASK8L        equ	464	;# 
 11211   0001D1                     C1MASK8H        equ	465	;# 
 11212   0001D2                     C1MASK8U        equ	466	;# 
 11213   0001D3                     C1MASK8T        equ	467	;# 
 11214   0001D4                     C1FLTOBJ9       equ	468	;# 
 11215   0001D4                     C1FLTOBJ9L      equ	468	;# 
 11216   0001D5                     C1FLTOBJ9H      equ	469	;# 
 11217   0001D6                     C1FLTOBJ9U      equ	470	;# 
 11218   0001D7                     C1FLTOBJ9T      equ	471	;# 
 11219   0001D8                     C1MASK9         equ	472	;# 
 11220   0001D8                     C1MASK9L        equ	472	;# 
 11221   0001D9                     C1MASK9H        equ	473	;# 
 11222   0001DA                     C1MASK9U        equ	474	;# 
 11223   0001DB                     C1MASK9T        equ	475	;# 
 11224   0001DC                     C1FLTOBJ10      equ	476	;# 
 11225   0001DC                     C1FLTOBJ10L     equ	476	;# 
 11226   0001DD                     C1FLTOBJ10H     equ	477	;# 
 11227   0001DE                     C1FLTOBJ10U     equ	478	;# 
 11228   0001DF                     C1FLTOBJ10T     equ	479	;# 
 11229   0001E0                     C1MASK10        equ	480	;# 
 11230   0001E0                     C1MASK10L       equ	480	;# 
 11231   0001E1                     C1MASK10H       equ	481	;# 
 11232   0001E2                     C1MASK10U       equ	482	;# 
 11233   0001E3                     C1MASK10T       equ	483	;# 
 11234   0001E4                     C1FLTOBJ11      equ	484	;# 
 11235   0001E4                     C1FLTOBJ11L     equ	484	;# 
 11236   0001E5                     C1FLTOBJ11H     equ	485	;# 
 11237   0001E6                     C1FLTOBJ11U     equ	486	;# 
 11238   0001E7                     C1FLTOBJ11T     equ	487	;# 
 11239   0001E8                     C1MASK11        equ	488	;# 
 11240   0001E8                     C1MASK11L       equ	488	;# 
 11241   0001E9                     C1MASK11H       equ	489	;# 
 11242   0001EA                     C1MASK11U       equ	490	;# 
 11243   0001EB                     C1MASK11T       equ	491	;# 
 11244   000200                     PPSLOCK         equ	512	;# 
 11245   000201                     RA0PPS          equ	513	;# 
 11246   000202                     RA1PPS          equ	514	;# 
 11247   000203                     RA2PPS          equ	515	;# 
 11248   000204                     RA3PPS          equ	516	;# 
 11249   000205                     RA4PPS          equ	517	;# 
 11250   000206                     RA5PPS          equ	518	;# 
 11251   000207                     RA6PPS          equ	519	;# 
 11252   000208                     RA7PPS          equ	520	;# 
 11253   000209                     RB0PPS          equ	521	;# 
 11254   00020A                     RB1PPS          equ	522	;# 
 11255   00020B                     RB2PPS          equ	523	;# 
 11256   00020C                     RB3PPS          equ	524	;# 
 11257   00020D                     RB4PPS          equ	525	;# 
 11258   00020E                     RB5PPS          equ	526	;# 
 11259   00020F                     RB6PPS          equ	527	;# 
 11260   000210                     RB7PPS          equ	528	;# 
 11261   000211                     RC0PPS          equ	529	;# 
 11262   000212                     RC1PPS          equ	530	;# 
 11263   000213                     RC2PPS          equ	531	;# 
 11264   000214                     RC3PPS          equ	532	;# 
 11265   000215                     RC4PPS          equ	533	;# 
 11266   000216                     RC5PPS          equ	534	;# 
 11267   000217                     RC6PPS          equ	535	;# 
 11268   000218                     RC7PPS          equ	536	;# 
 11269   00023D                     CANRXPPS        equ	573	;# 
 11270   00023E                     INT0PPS         equ	574	;# 
 11271   00023F                     INT1PPS         equ	575	;# 
 11272   000240                     INT2PPS         equ	576	;# 
 11273   000241                     T0CKIPPS        equ	577	;# 
 11274   000242                     T1CKIPPS        equ	578	;# 
 11275   000243                     T1GPPS          equ	579	;# 
 11276   000244                     T3CKIPPS        equ	580	;# 
 11277   000245                     T3GPPS          equ	581	;# 
 11278   000246                     T5CKIPPS        equ	582	;# 
 11279   000247                     T5GPPS          equ	583	;# 
 11280   000248                     T2INPPS         equ	584	;# 
 11281   000249                     T4INPPS         equ	585	;# 
 11282   00024A                     T6INPPS         equ	586	;# 
 11283   00024B                     TUIN0PPS        equ	587	;# 
 11284   00024C                     TUIN1PPS        equ	588	;# 
 11285   00024F                     CCP1PPS         equ	591	;# 
 11286   000250                     CCP2PPS         equ	592	;# 
 11287   000251                     CCP3PPS         equ	593	;# 
 11288   000253                     PWM1ERSPPS      equ	595	;# 
 11289   000254                     PWM2ERSPPS      equ	596	;# 
 11290   000255                     PWM3ERSPPS      equ	597	;# 
 11291   000256                     PWM4ERSPPS      equ	598	;# 
 11292   000257                     PWMIN0PPS       equ	599	;# 
 11293   000258                     PWMIN1PPS       equ	600	;# 
 11294   000259                     SMT1WINPPS      equ	601	;# 
 11295   00025A                     SMT1SIGPPS      equ	602	;# 
 11296   00025B                     CWG1PPS         equ	603	;# 
 11297   00025B                     CWG1INPPS       equ	603	;# 
 11298   00025C                     CWG2PPS         equ	604	;# 
 11299   00025C                     CWG2INPPS       equ	604	;# 
 11300   00025D                     CWG3PPS         equ	605	;# 
 11301   00025D                     CWG3INPPS       equ	605	;# 
 11302   00025E                     MD1CARLPPS      equ	606	;# 
 11303   00025E                     MDCARLPPS       equ	606	;# 
 11304   00025F                     MD1CARHPPS      equ	607	;# 
 11305   00025F                     MDCARHPPS       equ	607	;# 
 11306   000260                     MD1SRCPPS       equ	608	;# 
 11307   000260                     MDSRCPPS        equ	608	;# 
 11308   000261                     CLCIN0PPS       equ	609	;# 
 11309   000262                     CLCIN1PPS       equ	610	;# 
 11310   000263                     CLCIN2PPS       equ	611	;# 
 11311   000264                     CLCIN3PPS       equ	612	;# 
 11312   000265                     CLCIN4PPS       equ	613	;# 
 11313   000266                     CLCIN5PPS       equ	614	;# 
 11314   000267                     CLCIN6PPS       equ	615	;# 
 11315   000268                     CLCIN7PPS       equ	616	;# 
 11316   000269                     ADACTPPS        equ	617	;# 
 11317   00026A                     SPI1SCKPPS      equ	618	;# 
 11318   00026B                     SPI1SDIPPS      equ	619	;# 
 11319   00026C                     SPI1SSPPS       equ	620	;# 
 11320   00026D                     SPI2SCKPPS      equ	621	;# 
 11321   00026E                     SPI2SDIPPS      equ	622	;# 
 11322   00026F                     SPI2SSPPS       equ	623	;# 
 11323   000270                     I2C1SDAPPS      equ	624	;# 
 11324   000271                     I2C1SCLPPS      equ	625	;# 
 11325   000272                     U1RXPPS         equ	626	;# 
 11326   000273                     U1CTSPPS        equ	627	;# 
 11327   000274                     U2RXPPS         equ	628	;# 
 11328   000275                     U2CTSPPS        equ	629	;# 
 11329   000276                     U3RXPPS         equ	630	;# 
 11330   000277                     U3CTSPPS        equ	631	;# 
 11331   000278                     U4RXPPS         equ	632	;# 
 11332   000279                     U4CTSPPS        equ	633	;# 
 11333   00027A                     U5RXPPS         equ	634	;# 
 11334   00027B                     U5CTSPPS        equ	635	;# 
 11335   000286                     RC4I2C          equ	646	;# 
 11336   000287                     RC3I2C          equ	647	;# 
 11337   000288                     RB2I2C          equ	648	;# 
 11338   000289                     RB1I2C          equ	649	;# 
 11339   00028A                     I2C1RXB         equ	650	;# 
 11340   00028B                     I2C1TXB         equ	651	;# 
 11341   00028C                     I2C1CNTL        equ	652	;# 
 11342   00028D                     I2C1CNTH        equ	653	;# 
 11343   00028E                     I2C1ADB0        equ	654	;# 
 11344   00028F                     I2C1ADB1        equ	655	;# 
 11345   000290                     I2C1ADR0        equ	656	;# 
 11346   000291                     I2C1ADR1        equ	657	;# 
 11347   000292                     I2C1ADR2        equ	658	;# 
 11348   000293                     I2C1ADR3        equ	659	;# 
 11349   000294                     I2C1CON0        equ	660	;# 
 11350   000295                     I2C1CON1        equ	661	;# 
 11351   000296                     I2C1CON2        equ	662	;# 
 11352   000297                     I2C1ERR         equ	663	;# 
 11353   000298                     I2C1STAT0       equ	664	;# 
 11354   000299                     I2C1STAT1       equ	665	;# 
 11355   00029A                     I2C1PIR         equ	666	;# 
 11356   00029B                     I2C1PIE         equ	667	;# 
 11357   00029C                     I2C1BTO         equ	668	;# 
 11358   00029D                     I2C1BAUD        equ	669	;# 
 11359   00029E                     I2C1CLK         equ	670	;# 
 11360   00029F                     I2C1BTOC        equ	671	;# 
 11361   0002A1                     U1RXB           equ	673	;# 
 11362   0002A1                     U1RXBL          equ	673	;# 
 11363   0002A2                     U1RXCHK         equ	674	;# 
 11364   0002A3                     U1TXB           equ	675	;# 
 11365   0002A3                     U1TXBL          equ	675	;# 
 11366   0002A4                     U1TXCHK         equ	676	;# 
 11367   0002A5                     U1P1            equ	677	;# 
 11368   0002A5                     U1P1L           equ	677	;# 
 11369   0002A6                     U1P1H           equ	678	;# 
 11370   0002A7                     U1P2            equ	679	;# 
 11371   0002A7                     U1P2L           equ	679	;# 
 11372   0002A8                     U1P2H           equ	680	;# 
 11373   0002A9                     U1P3            equ	681	;# 
 11374   0002A9                     U1P3L           equ	681	;# 
 11375   0002AA                     U1P3H           equ	682	;# 
 11376   0002AB                     U1CON0          equ	683	;# 
 11377   0002AC                     U1CON1          equ	684	;# 
 11378   0002AD                     U1CON2          equ	685	;# 
 11379   0002AE                     U1BRG           equ	686	;# 
 11380   0002AE                     U1BRGL          equ	686	;# 
 11381   0002AF                     U1BRGH          equ	687	;# 
 11382   0002B0                     U1FIFO          equ	688	;# 
 11383   0002B1                     U1UIR           equ	689	;# 
 11384   0002B2                     U1ERRIR         equ	690	;# 
 11385   0002B3                     U1ERRIE         equ	691	;# 
 11386   0002B4                     U2RXB           equ	692	;# 
 11387   0002B4                     U2RXBL          equ	692	;# 
 11388   0002B5                     U2RXCHK         equ	693	;# 
 11389   0002B6                     U2TXB           equ	694	;# 
 11390   0002B6                     U2TXBL          equ	694	;# 
 11391   0002B7                     U2TXCHK         equ	695	;# 
 11392   0002B8                     U2P1            equ	696	;# 
 11393   0002B8                     U2P1L           equ	696	;# 
 11394   0002B9                     U2P1H           equ	697	;# 
 11395   0002BA                     U2P2            equ	698	;# 
 11396   0002BA                     U2P2L           equ	698	;# 
 11397   0002BB                     U2P2H           equ	699	;# 
 11398   0002BC                     U2P3            equ	700	;# 
 11399   0002BC                     U2P3L           equ	700	;# 
 11400   0002BD                     U2P3H           equ	701	;# 
 11401   0002BE                     U2CON0          equ	702	;# 
 11402   0002BF                     U2CON1          equ	703	;# 
 11403   0002C0                     U2CON2          equ	704	;# 
 11404   0002C1                     U2BRG           equ	705	;# 
 11405   0002C1                     U2BRGL          equ	705	;# 
 11406   0002C2                     U2BRGH          equ	706	;# 
 11407   0002C3                     U2FIFO          equ	707	;# 
 11408   0002C4                     U2UIR           equ	708	;# 
 11409   0002C5                     U2ERRIR         equ	709	;# 
 11410   0002C6                     U2ERRIE         equ	710	;# 
 11411   0002C7                     U3RXB           equ	711	;# 
 11412   0002C7                     U3RXBL          equ	711	;# 
 11413   0002C9                     U3TXB           equ	713	;# 
 11414   0002C9                     U3TXBL          equ	713	;# 
 11415   0002CB                     U3P1            equ	715	;# 
 11416   0002CB                     U3P1L           equ	715	;# 
 11417   0002CD                     U3P2            equ	717	;# 
 11418   0002CD                     U3P2L           equ	717	;# 
 11419   0002CF                     U3P3            equ	719	;# 
 11420   0002CF                     U3P3L           equ	719	;# 
 11421   0002D1                     U3CON0          equ	721	;# 
 11422   0002D2                     U3CON1          equ	722	;# 
 11423   0002D3                     U3CON2          equ	723	;# 
 11424   0002D4                     U3BRG           equ	724	;# 
 11425   0002D4                     U3BRGL          equ	724	;# 
 11426   0002D5                     U3BRGH          equ	725	;# 
 11427   0002D6                     U3FIFO          equ	726	;# 
 11428   0002D7                     U3UIR           equ	727	;# 
 11429   0002D8                     U3ERRIR         equ	728	;# 
 11430   0002D9                     U3ERRIE         equ	729	;# 
 11431   0002DA                     U4RXB           equ	730	;# 
 11432   0002DA                     U4RXBL          equ	730	;# 
 11433   0002DC                     U4TXB           equ	732	;# 
 11434   0002DC                     U4TXBL          equ	732	;# 
 11435   0002DE                     U4P1            equ	734	;# 
 11436   0002DE                     U4P1L           equ	734	;# 
 11437   0002E0                     U4P2            equ	736	;# 
 11438   0002E0                     U4P2L           equ	736	;# 
 11439   0002E2                     U4P3            equ	738	;# 
 11440   0002E2                     U4P3L           equ	738	;# 
 11441   0002E4                     U4CON0          equ	740	;# 
 11442   0002E5                     U4CON1          equ	741	;# 
 11443   0002E6                     U4CON2          equ	742	;# 
 11444   0002E7                     U4BRG           equ	743	;# 
 11445   0002E7                     U4BRGL          equ	743	;# 
 11446   0002E8                     U4BRGH          equ	744	;# 
 11447   0002E9                     U4FIFO          equ	745	;# 
 11448   0002EA                     U4UIR           equ	746	;# 
 11449   0002EB                     U4ERRIR         equ	747	;# 
 11450   0002EC                     U4ERRIE         equ	748	;# 
 11451   0002ED                     U5RXB           equ	749	;# 
 11452   0002ED                     U5RXBL          equ	749	;# 
 11453   0002EF                     U5TXB           equ	751	;# 
 11454   0002EF                     U5TXBL          equ	751	;# 
 11455   0002F1                     U5P1            equ	753	;# 
 11456   0002F1                     U5P1L           equ	753	;# 
 11457   0002F3                     U5P2            equ	755	;# 
 11458   0002F3                     U5P2L           equ	755	;# 
 11459   0002F5                     U5P3            equ	757	;# 
 11460   0002F5                     U5P3L           equ	757	;# 
 11461   0002F7                     U5CON0          equ	759	;# 
 11462   0002F8                     U5CON1          equ	760	;# 
 11463   0002F9                     U5CON2          equ	761	;# 
 11464   0002FA                     U5BRG           equ	762	;# 
 11465   0002FA                     U5BRGL          equ	762	;# 
 11466   0002FB                     U5BRGH          equ	763	;# 
 11467   0002FC                     U5FIFO          equ	764	;# 
 11468   0002FD                     U5UIR           equ	765	;# 
 11469   0002FE                     U5ERRIR         equ	766	;# 
 11470   0002FF                     U5ERRIE         equ	767	;# 
 11471   000300                     SMT1TMR         equ	768	;# 
 11472   000300                     SMT1TMRL        equ	768	;# 
 11473   000301                     SMT1TMRH        equ	769	;# 
 11474   000302                     SMT1TMRU        equ	770	;# 
 11475   000303                     SMT1CPR         equ	771	;# 
 11476   000303                     SMT1CPRL        equ	771	;# 
 11477   000304                     SMT1CPRH        equ	772	;# 
 11478   000305                     SMT1CPRU        equ	773	;# 
 11479   000306                     SMT1CPW         equ	774	;# 
 11480   000306                     SMT1CPWL        equ	774	;# 
 11481   000307                     SMT1CPWH        equ	775	;# 
 11482   000308                     SMT1CPWU        equ	776	;# 
 11483   000309                     SMT1PR          equ	777	;# 
 11484   000309                     SMT1PRL         equ	777	;# 
 11485   00030A                     SMT1PRH         equ	778	;# 
 11486   00030B                     SMT1PRU         equ	779	;# 
 11487   00030C                     SMT1CON0        equ	780	;# 
 11488   00030D                     SMT1CON1        equ	781	;# 
 11489   00030E                     SMT1STAT        equ	782	;# 
 11490   00030F                     SMT1CLK         equ	783	;# 
 11491   000310                     SMT1SIG         equ	784	;# 
 11492   000311                     SMT1WIN         equ	785	;# 
 11493   000318                     TMR0L           equ	792	;# 
 11494   000318                     TMR0            equ	792	;# 
 11495   000319                     TMR0H           equ	793	;# 
 11496   000319                     PR0             equ	793	;# 
 11497   00031A                     T0CON0          equ	794	;# 
 11498   00031B                     T0CON1          equ	795	;# 
 11499   00031C                     TMR1            equ	796	;# 
 11500   00031C                     TMR1L           equ	796	;# 
 11501   00031D                     TMR1H           equ	797	;# 
 11502   00031E                     T1CON           equ	798	;# 
 11503   00031E                     TMR1CON         equ	798	;# 
 11504   00031F                     T1GCON          equ	799	;# 
 11505   00031F                     TMR1GCON        equ	799	;# 
 11506   000320                     T1GATE          equ	800	;# 
 11507   000320                     TMR1GATE        equ	800	;# 
 11508   000321                     T1CLK           equ	801	;# 
 11509   000321                     TMR1CLK         equ	801	;# 
 11510   000321                     PR1             equ	801	;# 
 11511   000322                     T2TMR           equ	802	;# 
 11512   000322                     TMR2            equ	802	;# 
 11513   000323                     T2PR            equ	803	;# 
 11514   000323                     PR2             equ	803	;# 
 11515   000324                     T2CON           equ	804	;# 
 11516   000325                     T2HLT           equ	805	;# 
 11517   000326                     T2CLKCON        equ	806	;# 
 11518   000326                     T2CLK           equ	806	;# 
 11519   000327                     T2RST           equ	807	;# 
 11520   000328                     TMR3            equ	808	;# 
 11521   000328                     TMR3L           equ	808	;# 
 11522   000329                     TMR3H           equ	809	;# 
 11523   00032A                     T3CON           equ	810	;# 
 11524   00032A                     TMR3CON         equ	810	;# 
 11525   00032B                     T3GCON          equ	811	;# 
 11526   00032B                     TMR3GCON        equ	811	;# 
 11527   00032C                     T3GATE          equ	812	;# 
 11528   00032C                     TMR3GATE        equ	812	;# 
 11529   00032D                     T3CLK           equ	813	;# 
 11530   00032D                     TMR3CLK         equ	813	;# 
 11531   00032D                     PR3             equ	813	;# 
 11532   00032E                     T4TMR           equ	814	;# 
 11533   00032E                     TMR4            equ	814	;# 
 11534   00032F                     T4PR            equ	815	;# 
 11535   00032F                     PR4             equ	815	;# 
 11536   000330                     T4CON           equ	816	;# 
 11537   000331                     T4HLT           equ	817	;# 
 11538   000332                     T4CLKCON        equ	818	;# 
 11539   000332                     T4CLK           equ	818	;# 
 11540   000333                     T4RST           equ	819	;# 
 11541   000334                     TMR5            equ	820	;# 
 11542   000334                     TMR5L           equ	820	;# 
 11543   000335                     TMR5H           equ	821	;# 
 11544   000336                     T5CON           equ	822	;# 
 11545   000336                     TMR5CON         equ	822	;# 
 11546   000337                     T5GCON          equ	823	;# 
 11547   000337                     TMR5GCON        equ	823	;# 
 11548   000338                     T5GATE          equ	824	;# 
 11549   000338                     TMR5GATE        equ	824	;# 
 11550   000339                     T5CLK           equ	825	;# 
 11551   000339                     TMR5CLK         equ	825	;# 
 11552   000339                     PR5             equ	825	;# 
 11553   00033A                     T6TMR           equ	826	;# 
 11554   00033A                     TMR6            equ	826	;# 
 11555   00033B                     T6PR            equ	827	;# 
 11556   00033B                     PR6             equ	827	;# 
 11557   00033C                     T6CON           equ	828	;# 
 11558   00033D                     T6HLT           equ	829	;# 
 11559   00033E                     T6CLKCON        equ	830	;# 
 11560   00033E                     T6CLK           equ	830	;# 
 11561   00033F                     T6RST           equ	831	;# 
 11562   000340                     CCPR1           equ	832	;# 
 11563   000340                     CCPR1L          equ	832	;# 
 11564   000341                     CCPR1H          equ	833	;# 
 11565   000342                     CCP1CON         equ	834	;# 
 11566   000343                     CCP1CAP         equ	835	;# 
 11567   000344                     CCPR2           equ	836	;# 
 11568   000344                     CCPR2L          equ	836	;# 
 11569   000345                     CCPR2H          equ	837	;# 
 11570   000346                     CCP2CON         equ	838	;# 
 11571   000347                     CCP2CAP         equ	839	;# 
 11572   000348                     CCPR3           equ	840	;# 
 11573   000348                     CCPR3L          equ	840	;# 
 11574   000349                     CCPR3H          equ	841	;# 
 11575   00034A                     CCP3CON         equ	842	;# 
 11576   00034B                     CCP3CAP         equ	843	;# 
 11577   00034C                     CCPTMRS0        equ	844	;# 
 11578   00034F                     CRCDATA         equ	847	;# 
 11579   00034F                     CRCDATAL        equ	847	;# 
 11580   000350                     CRCDATAH        equ	848	;# 
 11581   000351                     CRCDATAU        equ	849	;# 
 11582   000352                     CRCDATAT        equ	850	;# 
 11583   000353                     CRCOUT          equ	851	;# 
 11584   000353                     CRCSHFT         equ	851	;# 
 11585   000353                     CRCXOR          equ	851	;# 
 11586   000353                     CRCOUTL         equ	851	;# 
 11587   000353                     CRCSHFTL        equ	851	;# 
 11588   000353                     CRCSHIFTL       equ	851	;# 
 11589   000353                     CRCXORL         equ	851	;# 
 11590   000354                     CRCOUTH         equ	852	;# 
 11591   000354                     CRCSHFTH        equ	852	;# 
 11592   000354                     CRCSHIFTH       equ	852	;# 
 11593   000354                     CRCXORH         equ	852	;# 
 11594   000355                     CRCOUTU         equ	853	;# 
 11595   000355                     CRCSHFTU        equ	853	;# 
 11596   000355                     CRCSHIFTU       equ	853	;# 
 11597   000355                     CRCXORU         equ	853	;# 
 11598   000356                     CRCOUTT         equ	854	;# 
 11599   000356                     CRCSHFTT        equ	854	;# 
 11600   000356                     CRCSHIFTT       equ	854	;# 
 11601   000356                     CRCXORT         equ	854	;# 
 11602   000357                     CRCCON0         equ	855	;# 
 11603   000358                     CRCCON1         equ	856	;# 
 11604   000359                     CRCCON2         equ	857	;# 
 11605   00035A                     SCANLADR        equ	858	;# 
 11606   00035A                     SCANLADRL       equ	858	;# 
 11607   00035B                     SCANLADRH       equ	859	;# 
 11608   00035C                     SCANLADRU       equ	860	;# 
 11609   00035D                     SCANHADR        equ	861	;# 
 11610   00035D                     SCANHADRL       equ	861	;# 
 11611   00035E                     SCANHADRH       equ	862	;# 
 11612   00035F                     SCANHADRU       equ	863	;# 
 11613   000360                     SCANCON0        equ	864	;# 
 11614   000361                     SCANTRIG        equ	865	;# 
 11615   000362                     IPR0            equ	866	;# 
 11616   000363                     IPR1            equ	867	;# 
 11617   000364                     IPR2            equ	868	;# 
 11618   000365                     IPR3            equ	869	;# 
 11619   000366                     IPR4            equ	870	;# 
 11620   000367                     IPR5            equ	871	;# 
 11621   000368                     IPR6            equ	872	;# 
 11622   000369                     IPR7            equ	873	;# 
 11623   00036A                     IPR8            equ	874	;# 
 11624   00036B                     IPR9            equ	875	;# 
 11625   00036C                     IPR10           equ	876	;# 
 11626   00036D                     IPR11           equ	877	;# 
 11627   00036E                     IPR12           equ	878	;# 
 11628   00036F                     IPR13           equ	879	;# 
 11629   000370                     IPR14           equ	880	;# 
 11630   000371                     IPR15           equ	881	;# 
 11631   000373                     STATUS_CSHAD    equ	883	;# 
 11632   000374                     WREG_CSHAD      equ	884	;# 
 11633   000375                     BSR_CSHAD       equ	885	;# 
 11634   000376                     SHADCON         equ	886	;# 
 11635   000377                     STATUS_SHAD     equ	887	;# 
 11636   000378                     WREG_SHAD       equ	888	;# 
 11637   000379                     BSR_SHAD        equ	889	;# 
 11638   00037A                     PCLATH_SHAD     equ	890	;# 
 11639   00037B                     PCLATU_SHAD     equ	891	;# 
 11640   00037C                     FSR0SH          equ	892	;# 
 11641   00037C                     FSR0L_SHAD      equ	892	;# 
 11642   00037D                     FSR0H_SHAD      equ	893	;# 
 11643   00037E                     FSR1SH          equ	894	;# 
 11644   00037E                     FSR1L_SHAD      equ	894	;# 
 11645   00037F                     FSR1H_SHAD      equ	895	;# 
 11646   000380                     FSR2SH          equ	896	;# 
 11647   000380                     FSR2L_SHAD      equ	896	;# 
 11648   000381                     FSR2H_SHAD      equ	897	;# 
 11649   000382                     PRODSH          equ	898	;# 
 11650   000382                     PRODL_SHAD      equ	898	;# 
 11651   000383                     PRODH_SHAD      equ	899	;# 
 11652   000387                     TU16ACON0       equ	903	;# 
 11653   000388                     TU16ACON1       equ	904	;# 
 11654   000389                     TU16AHLT        equ	905	;# 
 11655   00038A                     TU16APS         equ	906	;# 
 11656   00038B                     TU16ATMR        equ	907	;# 
 11657   00038B                     TU16ACR         equ	907	;# 
 11658   00038B                     TU16ATMRL       equ	907	;# 
 11659   00038B                     TU16ACRL        equ	907	;# 
 11660   00038C                     TU16ATMRH       equ	908	;# 
 11661   00038C                     TU16ACRH        equ	908	;# 
 11662   00038D                     TU16APR         equ	909	;# 
 11663   00038D                     TU16APRL        equ	909	;# 
 11664   00038E                     TU16APRH        equ	910	;# 
 11665   00038F                     TU16ACLK        equ	911	;# 
 11666   000390                     TU16AERS        equ	912	;# 
 11667   000393                     TU16BCON0       equ	915	;# 
 11668   000394                     TU16BCON1       equ	916	;# 
 11669   000395                     TU16BHLT        equ	917	;# 
 11670   000396                     TU16BPS         equ	918	;# 
 11671   000397                     TU16BTMR        equ	919	;# 
 11672   000397                     TU16BCR         equ	919	;# 
 11673   000397                     TU16BTMRL       equ	919	;# 
 11674   000397                     TU16BCRL        equ	919	;# 
 11675   000398                     TU16BTMRH       equ	920	;# 
 11676   000398                     TU16BCRH        equ	920	;# 
 11677   000399                     TU16BPR         equ	921	;# 
 11678   000399                     TU16BPRL        equ	921	;# 
 11679   00039A                     TU16BPRH        equ	922	;# 
 11680   00039B                     TU16BCLK        equ	923	;# 
 11681   00039C                     TU16BERS        equ	924	;# 
 11682   0003BB                     TUCHAIN         equ	955	;# 
 11683   0003BC                     CWG1CLK         equ	956	;# 
 11684   0003BC                     CWG1CLKCON      equ	956	;# 
 11685   0003BD                     CWG1ISM         equ	957	;# 
 11686   0003BE                     CWG1DBR         equ	958	;# 
 11687   0003BF                     CWG1DBF         equ	959	;# 
 11688   0003C0                     CWG1CON0        equ	960	;# 
 11689   0003C1                     CWG1CON1        equ	961	;# 
 11690   0003C2                     CWG1AS0         equ	962	;# 
 11691   0003C3                     CWG1AS1         equ	963	;# 
 11692   0003C4                     CWG1STR         equ	964	;# 
 11693   0003C5                     CWG2CLK         equ	965	;# 
 11694   0003C5                     CWG2CLKCON      equ	965	;# 
 11695   0003C6                     CWG2ISM         equ	966	;# 
 11696   0003C7                     CWG2DBR         equ	967	;# 
 11697   0003C8                     CWG2DBF         equ	968	;# 
 11698   0003C9                     CWG2CON0        equ	969	;# 
 11699   0003CA                     CWG2CON1        equ	970	;# 
 11700   0003CB                     CWG2AS0         equ	971	;# 
 11701   0003CC                     CWG2AS1         equ	972	;# 
 11702   0003CD                     CWG2STR         equ	973	;# 
 11703   0003CE                     CWG3CLK         equ	974	;# 
 11704   0003CE                     CWG3CLKCON      equ	974	;# 
 11705   0003CF                     CWG3ISM         equ	975	;# 
 11706   0003D0                     CWG3DBR         equ	976	;# 
 11707   0003D1                     CWG3DBF         equ	977	;# 
 11708   0003D2                     CWG3CON0        equ	978	;# 
 11709   0003D3                     CWG3CON1        equ	979	;# 
 11710   0003D4                     CWG3AS0         equ	980	;# 
 11711   0003D5                     CWG3AS1         equ	981	;# 
 11712   0003D6                     CWG3STR         equ	982	;# 
 11713   0003D7                     FVRCON          equ	983	;# 
 11714   0003D8                     ADCPCON         equ	984	;# 
 11715   0003D8                     ADCP            equ	984	;# 
 11716   0003D9                     ADLTH           equ	985	;# 
 11717   0003D9                     ADLTHL          equ	985	;# 
 11718   0003DA                     ADLTHH          equ	986	;# 
 11719   0003DB                     ADUTH           equ	987	;# 
 11720   0003DB                     ADUTHL          equ	987	;# 
 11721   0003DC                     ADUTHH          equ	988	;# 
 11722   0003DD                     ADERR           equ	989	;# 
 11723   0003DD                     ADERRL          equ	989	;# 
 11724   0003DE                     ADERRH          equ	990	;# 
 11725   0003DF                     ADSTPT          equ	991	;# 
 11726   0003DF                     ADSTPTL         equ	991	;# 
 11727   0003E0                     ADSTPTH         equ	992	;# 
 11728   0003E1                     ADFLTR          equ	993	;# 
 11729   0003E1                     ADFLTRL         equ	993	;# 
 11730   0003E2                     ADFLTRH         equ	994	;# 
 11731   0003E3                     ADACC           equ	995	;# 
 11732   0003E3                     ADACCL          equ	995	;# 
 11733   0003E4                     ADACCH          equ	996	;# 
 11734   0003E5                     ADACCU          equ	997	;# 
 11735   0003E6                     ADCNT           equ	998	;# 
 11736   0003E7                     ADRPT           equ	999	;# 
 11737   0003E8                     ADPREV          equ	1000	;# 
 11738   0003E8                     ADPREVL         equ	1000	;# 
 11739   0003E9                     ADPREVH         equ	1001	;# 
 11740   0003EA                     ADRES           equ	1002	;# 
 11741   0003EA                     ADRESL          equ	1002	;# 
 11742   0003EB                     ADRESH          equ	1003	;# 
 11743   0003EC                     ADPCH           equ	1004	;# 
 11744   0003EE                     ADACQ           equ	1006	;# 
 11745   0003EE                     ADACQL          equ	1006	;# 
 11746   0003EF                     ADACQH          equ	1007	;# 
 11747   0003F0                     ADCAP           equ	1008	;# 
 11748   0003F1                     ADPRE           equ	1009	;# 
 11749   0003F1                     ADPREL          equ	1009	;# 
 11750   0003F2                     ADPREH          equ	1010	;# 
 11751   0003F3                     ADCON0          equ	1011	;# 
 11752   0003F4                     ADCON1          equ	1012	;# 
 11753   0003F5                     ADCON2          equ	1013	;# 
 11754   0003F6                     ADCON3          equ	1014	;# 
 11755   0003F7                     ADSTAT          equ	1015	;# 
 11756   0003F8                     ADREF           equ	1016	;# 
 11757   0003F9                     ADACT           equ	1017	;# 
 11758   0003FA                     ADCLK           equ	1018	;# 
 11759   0003FB                     ADCTX           equ	1019	;# 
 11760   0003FC                     ADCSEL1         equ	1020	;# 
 11761   0003FD                     ADCSEL2         equ	1021	;# 
 11762   0003FE                     ADCSEL3         equ	1022	;# 
 11763   0003FF                     ADCSEL4         equ	1023	;# 
 11764   000400                     ANSELA          equ	1024	;# 
 11765   000401                     WPUA            equ	1025	;# 
 11766   000402                     ODCONA          equ	1026	;# 
 11767   000403                     SLRCONA         equ	1027	;# 
 11768   000404                     INLVLA          equ	1028	;# 
 11769   000405                     IOCAP           equ	1029	;# 
 11770   000406                     IOCAN           equ	1030	;# 
 11771   000407                     IOCAF           equ	1031	;# 
 11772   000408                     ANSELB          equ	1032	;# 
 11773   000409                     WPUB            equ	1033	;# 
 11774   00040A                     ODCONB          equ	1034	;# 
 11775   00040B                     SLRCONB         equ	1035	;# 
 11776   00040C                     INLVLB          equ	1036	;# 
 11777   00040D                     IOCBP           equ	1037	;# 
 11778   00040E                     IOCBN           equ	1038	;# 
 11779   00040F                     IOCBF           equ	1039	;# 
 11780   000410                     ANSELC          equ	1040	;# 
 11781   000411                     WPUC            equ	1041	;# 
 11782   000412                     ODCONC          equ	1042	;# 
 11783   000413                     SLRCONC         equ	1043	;# 
 11784   000414                     INLVLC          equ	1044	;# 
 11785   000415                     IOCCP           equ	1045	;# 
 11786   000416                     IOCCN           equ	1046	;# 
 11787   000417                     IOCCF           equ	1047	;# 
 11788   000421                     WPUE            equ	1057	;# 
 11789   000424                     INLVLE          equ	1060	;# 
 11790   000425                     IOCEP           equ	1061	;# 
 11791   000426                     IOCEN           equ	1062	;# 
 11792   000427                     IOCEF           equ	1063	;# 
 11793   000440                     NCO1ACC         equ	1088	;# 
 11794   000440                     NCO1ACCL        equ	1088	;# 
 11795   000441                     NCO1ACCH        equ	1089	;# 
 11796   000442                     NCO1ACCU        equ	1090	;# 
 11797   000443                     NCO1INC         equ	1091	;# 
 11798   000443                     NCO1INCL        equ	1091	;# 
 11799   000444                     NCO1INCH        equ	1092	;# 
 11800   000445                     NCO1INCU        equ	1093	;# 
 11801   000446                     NCO1CON         equ	1094	;# 
 11802   000447                     NCO1CLK         equ	1095	;# 
 11803   000448                     NCO2ACC         equ	1096	;# 
 11804   000448                     NCO2ACCL        equ	1096	;# 
 11805   000449                     NCO2ACCH        equ	1097	;# 
 11806   00044A                     NCO2ACCU        equ	1098	;# 
 11807   00044B                     NCO2INC         equ	1099	;# 
 11808   00044B                     NCO2INCL        equ	1099	;# 
 11809   00044C                     NCO2INCH        equ	1100	;# 
 11810   00044D                     NCO2INCU        equ	1101	;# 
 11811   00044E                     NCO2CON         equ	1102	;# 
 11812   00044F                     NCO2CLK         equ	1103	;# 
 11813   000450                     NCO3ACC         equ	1104	;# 
 11814   000450                     NCO3ACCL        equ	1104	;# 
 11815   000451                     NCO3ACCH        equ	1105	;# 
 11816   000452                     NCO3ACCU        equ	1106	;# 
 11817   000453                     NCO3INC         equ	1107	;# 
 11818   000453                     NCO3INCL        equ	1107	;# 
 11819   000454                     NCO3INCH        equ	1108	;# 
 11820   000455                     NCO3INCU        equ	1109	;# 
 11821   000456                     NCO3CON         equ	1110	;# 
 11822   000457                     NCO3CLK         equ	1111	;# 
 11823   000458                     FSCMCON         equ	1112	;# 
 11824   000459                     IVTLOCK         equ	1113	;# 
 11825   00045A                     IVTAD           equ	1114	;# 
 11826   00045A                     IVTADL          equ	1114	;# 
 11827   00045B                     IVTADH          equ	1115	;# 
 11828   00045C                     IVTADU          equ	1116	;# 
 11829   00045D                     IVTBASE         equ	1117	;# 
 11830   00045D                     IVTBASEL        equ	1117	;# 
 11831   00045E                     IVTBASEH        equ	1118	;# 
 11832   00045F                     IVTBASEU        equ	1119	;# 
 11833   000460                     PWM1ERS         equ	1120	;# 
 11834   000461                     PWM1CLK         equ	1121	;# 
 11835   000462                     PWM1LDS         equ	1122	;# 
 11836   000463                     PWM1PR          equ	1123	;# 
 11837   000463                     PWM1PRL         equ	1123	;# 
 11838   000464                     PWM1PRH         equ	1124	;# 
 11839   000465                     PWM1CPRE        equ	1125	;# 
 11840   000466                     PWM1PIPOS       equ	1126	;# 
 11841   000467                     PWM1GIR         equ	1127	;# 
 11842   000468                     PWM1GIE         equ	1128	;# 
 11843   000469                     PWM1CON         equ	1129	;# 
 11844   00046A                     PWM1S1CFG       equ	1130	;# 
 11845   00046B                     PWM1S1P1        equ	1131	;# 
 11846   00046B                     PWM1S1P1L       equ	1131	;# 
 11847   00046C                     PWM1S1P1H       equ	1132	;# 
 11848   00046D                     PWM1S1P2        equ	1133	;# 
 11849   00046D                     PWM1S1P2L       equ	1133	;# 
 11850   00046E                     PWM1S1P2H       equ	1134	;# 
 11851   00046F                     PWM2ERS         equ	1135	;# 
 11852   000470                     PWM2CLK         equ	1136	;# 
 11853   000471                     PWM2LDS         equ	1137	;# 
 11854   000472                     PWM2PR          equ	1138	;# 
 11855   000472                     PWM2PRL         equ	1138	;# 
 11856   000473                     PWM2PRH         equ	1139	;# 
 11857   000474                     PWM2CPRE        equ	1140	;# 
 11858   000475                     PWM2PIPOS       equ	1141	;# 
 11859   000476                     PWM2GIR         equ	1142	;# 
 11860   000477                     PWM2GIE         equ	1143	;# 
 11861   000478                     PWM2CON         equ	1144	;# 
 11862   000479                     PWM2S1CFG       equ	1145	;# 
 11863   00047A                     PWM2S1P1        equ	1146	;# 
 11864   00047A                     PWM2S1P1L       equ	1146	;# 
 11865   00047B                     PWM2S1P1H       equ	1147	;# 
 11866   00047C                     PWM2S1P2        equ	1148	;# 
 11867   00047C                     PWM2S1P2L       equ	1148	;# 
 11868   00047D                     PWM2S1P2H       equ	1149	;# 
 11869   00047E                     PWM3ERS         equ	1150	;# 
 11870   00047F                     PWM3CLK         equ	1151	;# 
 11871   000480                     PWM3LDS         equ	1152	;# 
 11872   000481                     PWM3PR          equ	1153	;# 
 11873   000481                     PWM3PRL         equ	1153	;# 
 11874   000482                     PWM3PRH         equ	1154	;# 
 11875   000483                     PWM3CPRE        equ	1155	;# 
 11876   000484                     PWM3PIPOS       equ	1156	;# 
 11877   000485                     PWM3GIR         equ	1157	;# 
 11878   000486                     PWM3GIE         equ	1158	;# 
 11879   000487                     PWM3CON         equ	1159	;# 
 11880   000488                     PWM3S1CFG       equ	1160	;# 
 11881   000489                     PWM3S1P1        equ	1161	;# 
 11882   000489                     PWM3S1P1L       equ	1161	;# 
 11883   00048A                     PWM3S1P1H       equ	1162	;# 
 11884   00048B                     PWM3S1P2        equ	1163	;# 
 11885   00048B                     PWM3S1P2L       equ	1163	;# 
 11886   00048C                     PWM3S1P2H       equ	1164	;# 
 11887   00048D                     PWM4ERS         equ	1165	;# 
 11888   00048E                     PWM4CLK         equ	1166	;# 
 11889   00048F                     PWM4LDS         equ	1167	;# 
 11890   000490                     PWM4PR          equ	1168	;# 
 11891   000490                     PWM4PRL         equ	1168	;# 
 11892   000491                     PWM4PRH         equ	1169	;# 
 11893   000492                     PWM4CPRE        equ	1170	;# 
 11894   000493                     PWM4PIPOS       equ	1171	;# 
 11895   000494                     PWM4GIR         equ	1172	;# 
 11896   000495                     PWM4GIE         equ	1173	;# 
 11897   000496                     PWM4CON         equ	1174	;# 
 11898   000497                     PWM4S1CFG       equ	1175	;# 
 11899   000498                     PWM4S1P1        equ	1176	;# 
 11900   000498                     PWM4S1P1L       equ	1176	;# 
 11901   000499                     PWM4S1P1H       equ	1177	;# 
 11902   00049A                     PWM4S1P2        equ	1178	;# 
 11903   00049A                     PWM4S1P2L       equ	1178	;# 
 11904   00049B                     PWM4S1P2H       equ	1179	;# 
 11905   00049C                     PWMLOAD         equ	1180	;# 
 11906   00049D                     PWMEN           equ	1181	;# 
 11907   00049E                     PIE0            equ	1182	;# 
 11908   00049F                     PIE1            equ	1183	;# 
 11909   0004A0                     PIE2            equ	1184	;# 
 11910   0004A1                     PIE3            equ	1185	;# 
 11911   0004A2                     PIE4            equ	1186	;# 
 11912   0004A3                     PIE5            equ	1187	;# 
 11913   0004A4                     PIE6            equ	1188	;# 
 11914   0004A5                     PIE7            equ	1189	;# 
 11915   0004A6                     PIE8            equ	1190	;# 
 11916   0004A7                     PIE9            equ	1191	;# 
 11917   0004A8                     PIE10           equ	1192	;# 
 11918   0004A9                     PIE11           equ	1193	;# 
 11919   0004AA                     PIE12           equ	1194	;# 
 11920   0004AB                     PIE13           equ	1195	;# 
 11921   0004AC                     PIE14           equ	1196	;# 
 11922   0004AD                     PIE15           equ	1197	;# 
 11923   0004AE                     PIR0            equ	1198	;# 
 11924   0004AF                     PIR1            equ	1199	;# 
 11925   0004B0                     PIR2            equ	1200	;# 
 11926   0004B1                     PIR3            equ	1201	;# 
 11927   0004B2                     PIR4            equ	1202	;# 
 11928   0004B3                     PIR5            equ	1203	;# 
 11929   0004B4                     PIR6            equ	1204	;# 
 11930   0004B5                     PIR7            equ	1205	;# 
 11931   0004B6                     PIR8            equ	1206	;# 
 11932   0004B7                     PIR9            equ	1207	;# 
 11933   0004B8                     PIR10           equ	1208	;# 
 11934   0004B9                     PIR11           equ	1209	;# 
 11935   0004BA                     PIR12           equ	1210	;# 
 11936   0004BB                     PIR13           equ	1211	;# 
 11937   0004BC                     PIR14           equ	1212	;# 
 11938   0004BD                     PIR15           equ	1213	;# 
 11939   0004BE                     LATA            equ	1214	;# 
 11940   0004BF                     LATB            equ	1215	;# 
 11941   0004C0                     LATC            equ	1216	;# 
 11942   0004C6                     TRISA           equ	1222	;# 
 11943   0004C7                     TRISB           equ	1223	;# 
 11944   0004C8                     TRISC           equ	1224	;# 
 11945   0004CA                     TRISE           equ	1226	;# 
 11946   0004CE                     PORTA           equ	1230	;# 
 11947   0004CF                     PORTB           equ	1231	;# 
 11948   0004D0                     PORTC           equ	1232	;# 
 11949   0004D2                     PORTE           equ	1234	;# 
 11950   0004D6                     INTCON0         equ	1238	;# 
 11951   0004D7                     INTCON1         equ	1239	;# 
 11952   0004D8                     STATUS          equ	1240	;# 
 11953   0004D9                     FSR2            equ	1241	;# 
 11954   0004D9                     FSR2L           equ	1241	;# 
 11955   0004DA                     FSR2H           equ	1242	;# 
 11956   0004DB                     PLUSW2          equ	1243	;# 
 11957   0004DC                     PREINC2         equ	1244	;# 
 11958   0004DD                     POSTDEC2        equ	1245	;# 
 11959   0004DE                     POSTINC2        equ	1246	;# 
 11960   0004DF                     INDF2           equ	1247	;# 
 11961   0004E0                     BSR             equ	1248	;# 
 11962   0004E1                     FSR1            equ	1249	;# 
 11963   0004E1                     FSR1L           equ	1249	;# 
 11964   0004E2                     FSR1H           equ	1250	;# 
 11965   0004E3                     PLUSW1          equ	1251	;# 
 11966   0004E4                     PREINC1         equ	1252	;# 
 11967   0004E5                     POSTDEC1        equ	1253	;# 
 11968   0004E6                     POSTINC1        equ	1254	;# 
 11969   0004E7                     INDF1           equ	1255	;# 
 11970   0004E8                     WREG            equ	1256	;# 
 11971   0004E9                     FSR0            equ	1257	;# 
 11972   0004E9                     FSR0L           equ	1257	;# 
 11973   0004EA                     FSR0H           equ	1258	;# 
 11974   0004EB                     PLUSW0          equ	1259	;# 
 11975   0004EC                     PREINC0         equ	1260	;# 
 11976   0004ED                     POSTDEC0        equ	1261	;# 
 11977   0004EE                     POSTINC0        equ	1262	;# 
 11978   0004EF                     INDF0           equ	1263	;# 
 11979   0004F0                     PCON0           equ	1264	;# 
 11980   0004F1                     PCON1           equ	1265	;# 
 11981   0004F2                     CPUDOZE         equ	1266	;# 
 11982   0004F3                     PROD            equ	1267	;# 
 11983   0004F3                     PRODL           equ	1267	;# 
 11984   0004F4                     PRODH           equ	1268	;# 
 11985   0004F5                     TABLAT          equ	1269	;# 
 11986   0004F6                     TBLPTR          equ	1270	;# 
 11987   0004F6                     TBLPTRL         equ	1270	;# 
 11988   0004F7                     TBLPTRH         equ	1271	;# 
 11989   0004F8                     TBLPTRU         equ	1272	;# 
 11990   0004F9                     PCLAT           equ	1273	;# 
 11991   0004F9                     PCL             equ	1273	;# 
 11992   0004FA                     PCLATH          equ	1274	;# 
 11993   0004FB                     PCLATU          equ	1275	;# 
 11994   0004FC                     STKPTR          equ	1276	;# 
 11995   0004FD                     TOS             equ	1277	;# 
 11996   0004FD                     TOSL            equ	1277	;# 
 11997   0004FE                     TOSH            equ	1278	;# 
 11998   0004FF                     TOSU            equ	1279	;# 
 11999   000038                     BOOTREG         equ	56	;# 
 12000   000039                     CLKRCON         equ	57	;# 
 12001   00003A                     CLKRCLK         equ	58	;# 
 12002   000040                     NVMCON0         equ	64	;# 
 12003   000041                     NVMCON1         equ	65	;# 
 12004   000042                     NVMLOCK         equ	66	;# 
 12005   000043                     NVMADR          equ	67	;# 
 12006   000043                     NVMADRL         equ	67	;# 
 12007   000044                     NVMADRH         equ	68	;# 
 12008   000045                     NVMADRU         equ	69	;# 
 12009   000046                     NVMDAT          equ	70	;# 
 12010   000046                     NVMDATL         equ	70	;# 
 12011   000047                     NVMDATH         equ	71	;# 
 12012   000048                     VREGCON         equ	72	;# 
 12013   000049                     BORCON          equ	73	;# 
 12014   00004A                     HLVDCON0        equ	74	;# 
 12015   00004B                     HLVDCON1        equ	75	;# 
 12016   00004C                     ZCDCON          equ	76	;# 
 12017   000060                     PMD0            equ	96	;# 
 12018   000061                     PMD1            equ	97	;# 
 12019   000062                     PMD2            equ	98	;# 
 12020   000063                     PMD3            equ	99	;# 
 12021   000064                     PMD4            equ	100	;# 
 12022   000065                     PMD5            equ	101	;# 
 12023   000066                     PMD6            equ	102	;# 
 12024   000067                     PMD7            equ	103	;# 
 12025   000068                     PMD8            equ	104	;# 
 12026   00006A                     MD1CON0         equ	106	;# 
 12027   00006B                     MD1CON1         equ	107	;# 
 12028   00006C                     MD1SRC          equ	108	;# 
 12029   00006D                     MD1CARL         equ	109	;# 
 12030   00006E                     MD1CARH         equ	110	;# 
 12031   00006F                     CMOUT           equ	111	;# 
 12032   000070                     CM1CON0         equ	112	;# 
 12033   000071                     CM1CON1         equ	113	;# 
 12034   000072                     CM1NCH          equ	114	;# 
 12035   000073                     CM1PCH          equ	115	;# 
 12036   000074                     CM2CON0         equ	116	;# 
 12037   000075                     CM2CON1         equ	117	;# 
 12038   000076                     CM2NCH          equ	118	;# 
 12039   000077                     CM2PCH          equ	119	;# 
 12040   000078                     WDTCON0         equ	120	;# 
 12041   000079                     WDTCON1         equ	121	;# 
 12042   00007A                     WDTPSL          equ	122	;# 
 12043   00007B                     WDTPSH          equ	123	;# 
 12044   00007C                     WDTTMR          equ	124	;# 
 12045   00007D                     DAC1DAT         equ	125	;# 
 12046   00007D                     DAC1DATL        equ	125	;# 
 12047   00007F                     DAC1CON         equ	127	;# 
 12048   000080                     SPI1RXB         equ	128	;# 
 12049   000081                     SPI1TXB         equ	129	;# 
 12050   000082                     SPI1TCNT        equ	130	;# 
 12051   000082                     SPI1TCNTL       equ	130	;# 
 12052   000083                     SPI1TCNTH       equ	131	;# 
 12053   000084                     SPI1CON0        equ	132	;# 
 12054   000085                     SPI1CON1        equ	133	;# 
 12055   000086                     SPI1CON2        equ	134	;# 
 12056   000087                     SPI1STATUS      equ	135	;# 
 12057   000088                     SPI1TWIDTH      equ	136	;# 
 12058   000089                     SPI1BAUD        equ	137	;# 
 12059   00008A                     SPI1INTF        equ	138	;# 
 12060   00008B                     SPI1INTE        equ	139	;# 
 12061   00008C                     SPI1CLK         equ	140	;# 
 12062   00008D                     SPI2RXB         equ	141	;# 
 12063   00008E                     SPI2TXB         equ	142	;# 
 12064   00008F                     SPI2TCNT        equ	143	;# 
 12065   00008F                     SPI2TCNTL       equ	143	;# 
 12066   000090                     SPI2TCNTH       equ	144	;# 
 12067   000091                     SPI2CON0        equ	145	;# 
 12068   000092                     SPI2CON1        equ	146	;# 
 12069   000093                     SPI2CON2        equ	147	;# 
 12070   000094                     SPI2STATUS      equ	148	;# 
 12071   000095                     SPI2TWIDTH      equ	149	;# 
 12072   000096                     SPI2BAUD        equ	150	;# 
 12073   000097                     SPI2INTF        equ	151	;# 
 12074   000098                     SPI2INTE        equ	152	;# 
 12075   000099                     SPI2CLK         equ	153	;# 
 12076   0000AC                     ACTCON          equ	172	;# 
 12077   0000AD                     OSCCON1         equ	173	;# 
 12078   0000AE                     OSCCON2         equ	174	;# 
 12079   0000AF                     OSCCON3         equ	175	;# 
 12080   0000B0                     OSCTUNE         equ	176	;# 
 12081   0000B1                     OSCFRQ          equ	177	;# 
 12082   0000B1                     OSCFREQ         equ	177	;# 
 12083   0000B2                     OSCSTAT         equ	178	;# 
 12084   0000B2                     OSCSTAT1        equ	178	;# 
 12085   0000B3                     OSCEN           equ	179	;# 
 12086   0000B4                     PRLOCK          equ	180	;# 
 12087   0000B5                     SCANPR          equ	181	;# 
 12088   0000B6                     DMA1PR          equ	182	;# 
 12089   0000B7                     DMA2PR          equ	183	;# 
 12090   0000B8                     DMA3PR          equ	184	;# 
 12091   0000B9                     DMA4PR          equ	185	;# 
 12092   0000BA                     DMA5PR          equ	186	;# 
 12093   0000BB                     DMA6PR          equ	187	;# 
 12094   0000BC                     DMA7PR          equ	188	;# 
 12095   0000BD                     DMA8PR          equ	189	;# 
 12096   0000BE                     MAINPR          equ	190	;# 
 12097   0000BF                     ISRPR           equ	191	;# 
 12098   0000D4                     CLCDATA         equ	212	;# 
 12099   0000D5                     CLCSELECT       equ	213	;# 
 12100   0000D6                     CLCnCON         equ	214	;# 
 12101   0000D7                     CLCnPOL         equ	215	;# 
 12102   0000D8                     CLCnSEL0        equ	216	;# 
 12103   0000D9                     CLCnSEL1        equ	217	;# 
 12104   0000DA                     CLCnSEL2        equ	218	;# 
 12105   0000DB                     CLCnSEL3        equ	219	;# 
 12106   0000DC                     CLCnGLS0        equ	220	;# 
 12107   0000DD                     CLCnGLS1        equ	221	;# 
 12108   0000DE                     CLCnGLS2        equ	222	;# 
 12109   0000DF                     CLCnGLS3        equ	223	;# 
 12110   0000E8                     DMASELECT       equ	232	;# 
 12111   0000E9                     DMAnBUF         equ	233	;# 
 12112   0000EA                     DMAnDCNT        equ	234	;# 
 12113   0000EA                     DMAnDCNTL       equ	234	;# 
 12114   0000EB                     DMAnDCNTH       equ	235	;# 
 12115   0000EC                     DMAnDPTR        equ	236	;# 
 12116   0000EC                     DMAnDPTRL       equ	236	;# 
 12117   0000ED                     DMAnDPTRH       equ	237	;# 
 12118   0000EE                     DMAnDSZ         equ	238	;# 
 12119   0000EE                     DMAnDSZL        equ	238	;# 
 12120   0000EF                     DMAnDSZH        equ	239	;# 
 12121   0000F0                     DMAnDSA         equ	240	;# 
 12122   0000F0                     DMAnDSAL        equ	240	;# 
 12123   0000F1                     DMAnDSAH        equ	241	;# 
 12124   0000F2                     DMAnSCNT        equ	242	;# 
 12125   0000F2                     DMAnSCNTL       equ	242	;# 
 12126   0000F3                     DMAnSCNTH       equ	243	;# 
 12127   0000F4                     DMAnSPTR        equ	244	;# 
 12128   0000F4                     DMAnSPTRL       equ	244	;# 
 12129   0000F5                     DMAnSPTRH       equ	245	;# 
 12130   0000F6                     DMAnSPTRU       equ	246	;# 
 12131   0000F7                     DMAnSSZ         equ	247	;# 
 12132   0000F7                     DMAnSSZL        equ	247	;# 
 12133   0000F8                     DMAnSSZH        equ	248	;# 
 12134   0000F9                     DMAnSSA         equ	249	;# 
 12135   0000F9                     DMAnSSAL        equ	249	;# 
 12136   0000FA                     DMAnSSAH        equ	250	;# 
 12137   0000FB                     DMAnSSAU        equ	251	;# 
 12138   0000FC                     DMAnCON0        equ	252	;# 
 12139   0000FD                     DMAnCON1        equ	253	;# 
 12140   0000FE                     DMAnAIRQ        equ	254	;# 
 12141   0000FF                     DMAnSIRQ        equ	255	;# 
 12142   000100                     C1CONL          equ	256	;# 
 12143   000101                     C1CONH          equ	257	;# 
 12144   000102                     C1CONU          equ	258	;# 
 12145   000103                     C1CONT          equ	259	;# 
 12146   000104                     C1NBTCFGL       equ	260	;# 
 12147   000105                     C1NBTCFGH       equ	261	;# 
 12148   000106                     C1NBTCFGU       equ	262	;# 
 12149   000107                     C1NBTCFGT       equ	263	;# 
 12150   000108                     C1DBTCFGL       equ	264	;# 
 12151   000109                     C1DBTCFGH       equ	265	;# 
 12152   00010A                     C1DBTCFGU       equ	266	;# 
 12153   00010B                     C1DBTCFGT       equ	267	;# 
 12154   00010C                     C1TDCL          equ	268	;# 
 12155   00010D                     C1TDCH          equ	269	;# 
 12156   00010E                     C1TDCU          equ	270	;# 
 12157   000110                     C1TBC           equ	272	;# 
 12158   000110                     C1TBCL          equ	272	;# 
 12159   000111                     C1TBCH          equ	273	;# 
 12160   000112                     C1TBCU          equ	274	;# 
 12161   000113                     C1TBCT          equ	275	;# 
 12162   000114                     C1TSCONL        equ	276	;# 
 12163   000115                     C1TSCONH        equ	277	;# 
 12164   000116                     C1TSCONU        equ	278	;# 
 12165   000117                     C1TSCONT        equ	279	;# 
 12166   000118                     C1VECL          equ	280	;# 
 12167   000119                     C1VECH          equ	281	;# 
 12168   00011A                     C1VECU          equ	282	;# 
 12169   00011B                     C1VECT          equ	283	;# 
 12170   00011C                     C1INTL          equ	284	;# 
 12171   00011D                     C1INTH          equ	285	;# 
 12172   00011E                     C1INTU          equ	286	;# 
 12173   00011F                     C1INTT          equ	287	;# 
 12174   000120                     C1RXIF          equ	288	;# 
 12175   000120                     C1RXIFL         equ	288	;# 
 12176   000121                     C1RXIFH         equ	289	;# 
 12177   000122                     C1RXIFU         equ	290	;# 
 12178   000123                     C1RXIFT         equ	291	;# 
 12179   000124                     C1TXIF          equ	292	;# 
 12180   000124                     C1TXIFL         equ	292	;# 
 12181   000125                     C1TXIFH         equ	293	;# 
 12182   000126                     C1TXIFU         equ	294	;# 
 12183   000127                     C1TXIFT         equ	295	;# 
 12184   000128                     C1RXOVIF        equ	296	;# 
 12185   000128                     C1RXOVIFL       equ	296	;# 
 12186   000129                     C1RXOVIFH       equ	297	;# 
 12187   00012A                     C1RXOVIFU       equ	298	;# 
 12188   00012B                     C1RXOVIFT       equ	299	;# 
 12189   00012C                     C1TXATIF        equ	300	;# 
 12190   00012C                     C1TXATIFL       equ	300	;# 
 12191   00012D                     C1TXATIFH       equ	301	;# 
 12192   00012E                     C1TXATIFU       equ	302	;# 
 12193   00012F                     C1TXATIFT       equ	303	;# 
 12194   000130                     C1TXREQ         equ	304	;# 
 12195   000130                     C1TXREQL        equ	304	;# 
 12196   000131                     C1TXREQH        equ	305	;# 
 12197   000132                     C1TXREQU        equ	306	;# 
 12198   000133                     C1TXREQT        equ	307	;# 
 12199   000134                     C1TRECL         equ	308	;# 
 12200   000135                     C1TRECH         equ	309	;# 
 12201   000136                     C1TRECU         equ	310	;# 
 12202   000137                     C1TRECT         equ	311	;# 
 12203   000138                     C1BDIAG0L       equ	312	;# 
 12204   000139                     C1BDIAG0H       equ	313	;# 
 12205   00013C                     C1BDIAG1L       equ	316	;# 
 12206   00013D                     C1BDIAG1H       equ	317	;# 
 12207   00013E                     C1BDIAG1U       equ	318	;# 
 12208   00013F                     C1BDIAG1T       equ	319	;# 
 12209   000140                     C1TEFCONL       equ	320	;# 
 12210   000141                     C1TEFCONH       equ	321	;# 
 12211   000142                     C1TEFCONU       equ	322	;# 
 12212   000143                     C1TEFCONT       equ	323	;# 
 12213   000144                     C1TEFSTAL       equ	324	;# 
 12214   000145                     C1TEFSTAH       equ	325	;# 
 12215   000146                     C1TEFSTAU       equ	326	;# 
 12216   000147                     C1TEFSTAT       equ	327	;# 
 12217   000148                     C1TEFUA         equ	328	;# 
 12218   000148                     C1TEFUAL        equ	328	;# 
 12219   000149                     C1TEFUAH        equ	329	;# 
 12220   00014A                     C1TEFUAU        equ	330	;# 
 12221   00014B                     C1TEFUAT        equ	331	;# 
 12222   00014C                     C1FIFOBA        equ	332	;# 
 12223   00014C                     C1FIFOBAL       equ	332	;# 
 12224   00014D                     C1FIFOBAH       equ	333	;# 
 12225   00014E                     C1FIFOBAU       equ	334	;# 
 12226   00014F                     C1FIFOBAT       equ	335	;# 
 12227   000150                     C1TXQCONL       equ	336	;# 
 12228   000151                     C1TXQCONH       equ	337	;# 
 12229   000152                     C1TXQCONU       equ	338	;# 
 12230   000153                     C1TXQCONT       equ	339	;# 
 12231   000154                     C1TXQSTAL       equ	340	;# 
 12232   000155                     C1TXQSTAH       equ	341	;# 
 12233   000156                     C1TXQSTAU       equ	342	;# 
 12234   000157                     C1TXQSTAT       equ	343	;# 
 12235   000158                     C1TXQUA         equ	344	;# 
 12236   000158                     C1TXQUAL        equ	344	;# 
 12237   000159                     C1TXQUAH        equ	345	;# 
 12238   00015A                     C1TXQUAU        equ	346	;# 
 12239   00015B                     C1TXQUAT        equ	347	;# 
 12240   00015C                     C1FIFOCON1      equ	348	;# 
 12241   00015C                     C1FIFOCON1L     equ	348	;# 
 12242   00015D                     C1FIFOCON1H     equ	349	;# 
 12243   00015E                     C1FIFOCON1U     equ	350	;# 
 12244   00015F                     C1FIFOCON1T     equ	351	;# 
 12245   000160                     C1FIFOSTA1      equ	352	;# 
 12246   000160                     C1FIFOSTA1L     equ	352	;# 
 12247   000161                     C1FIFOSTA1H     equ	353	;# 
 12248   000162                     C1FIFOSTA1U     equ	354	;# 
 12249   000163                     C1FIFOSTA1T     equ	355	;# 
 12250   000164                     C1FIFOUA1       equ	356	;# 
 12251   000164                     C1FIFOUA1L      equ	356	;# 
 12252   000165                     C1FIFOUA1H      equ	357	;# 
 12253   000166                     C1FIFOUA1U      equ	358	;# 
 12254   000167                     C1FIFOUA1T      equ	359	;# 
 12255   000168                     C1FIFOCON2      equ	360	;# 
 12256   000168                     C1FIFOCON2L     equ	360	;# 
 12257   000169                     C1FIFOCON2H     equ	361	;# 
 12258   00016A                     C1FIFOCON2U     equ	362	;# 
 12259   00016B                     C1FIFOCON2T     equ	363	;# 
 12260   00016C                     C1FIFOSTA2      equ	364	;# 
 12261   00016C                     C1FIFOSTA2L     equ	364	;# 
 12262   00016D                     C1FIFOSTA2H     equ	365	;# 
 12263   00016E                     C1FIFOSTA2U     equ	366	;# 
 12264   00016F                     C1FIFOSTA2T     equ	367	;# 
 12265   000170                     C1FIFOUA2       equ	368	;# 
 12266   000170                     C1FIFOUA2L      equ	368	;# 
 12267   000171                     C1FIFOUA2H      equ	369	;# 
 12268   000172                     C1FIFOUA2U      equ	370	;# 
 12269   000173                     C1FIFOUA2T      equ	371	;# 
 12270   000174                     C1FIFOCON3      equ	372	;# 
 12271   000174                     C1FIFOCON3L     equ	372	;# 
 12272   000175                     C1FIFOCON3H     equ	373	;# 
 12273   000176                     C1FIFOCON3U     equ	374	;# 
 12274   000177                     C1FIFOCON3T     equ	375	;# 
 12275   000178                     C1FIFOSTA3      equ	376	;# 
 12276   000178                     C1FIFOSTA3L     equ	376	;# 
 12277   000179                     C1FIFOSTA3H     equ	377	;# 
 12278   00017A                     C1FIFOSTA3U     equ	378	;# 
 12279   00017B                     C1FIFOSTA3T     equ	379	;# 
 12280   00017C                     C1FIFOUA3       equ	380	;# 
 12281   00017C                     C1FIFOUA3L      equ	380	;# 
 12282   00017D                     C1FIFOUA3H      equ	381	;# 
 12283   00017E                     C1FIFOUA3U      equ	382	;# 
 12284   00017F                     C1FIFOUA3T      equ	383	;# 
 12285   000180                     C1FLTCON0L      equ	384	;# 
 12286   000181                     C1FLTCON0H      equ	385	;# 
 12287   000182                     C1FLTCON0U      equ	386	;# 
 12288   000183                     C1FLTCON0T      equ	387	;# 
 12289   000184                     C1FLTCON1L      equ	388	;# 
 12290   000185                     C1FLTCON1H      equ	389	;# 
 12291   000186                     C1FLTCON1U      equ	390	;# 
 12292   000187                     C1FLTCON1T      equ	391	;# 
 12293   000188                     C1FLTCON2L      equ	392	;# 
 12294   000189                     C1FLTCON2H      equ	393	;# 
 12295   00018A                     C1FLTCON2U      equ	394	;# 
 12296   00018B                     C1FLTCON2T      equ	395	;# 
 12297   00018C                     C1FLTOBJ0       equ	396	;# 
 12298   00018C                     C1FLTOBJ0L      equ	396	;# 
 12299   00018D                     C1FLTOBJ0H      equ	397	;# 
 12300   00018E                     C1FLTOBJ0U      equ	398	;# 
 12301   00018F                     C1FLTOBJ0T      equ	399	;# 
 12302   000190                     C1MASK0         equ	400	;# 
 12303   000190                     C1MASK0L        equ	400	;# 
 12304   000191                     C1MASK0H        equ	401	;# 
 12305   000192                     C1MASK0U        equ	402	;# 
 12306   000193                     C1MASK0T        equ	403	;# 
 12307   000194                     C1FLTOBJ1       equ	404	;# 
 12308   000194                     C1FLTOBJ1L      equ	404	;# 
 12309   000195                     C1FLTOBJ1H      equ	405	;# 
 12310   000196                     C1FLTOBJ1U      equ	406	;# 
 12311   000197                     C1FLTOBJ1T      equ	407	;# 
 12312   000198                     C1MASK1         equ	408	;# 
 12313   000198                     C1MASK1L        equ	408	;# 
 12314   000199                     C1MASK1H        equ	409	;# 
 12315   00019A                     C1MASK1U        equ	410	;# 
 12316   00019B                     C1MASK1T        equ	411	;# 
 12317   00019C                     C1FLTOBJ2       equ	412	;# 
 12318   00019C                     C1FLTOBJ2L      equ	412	;# 
 12319   00019D                     C1FLTOBJ2H      equ	413	;# 
 12320   00019E                     C1FLTOBJ2U      equ	414	;# 
 12321   00019F                     C1FLTOBJ2T      equ	415	;# 
 12322   0001A0                     C1MASK2         equ	416	;# 
 12323   0001A0                     C1MASK2L        equ	416	;# 
 12324   0001A1                     C1MASK2H        equ	417	;# 
 12325   0001A2                     C1MASK2U        equ	418	;# 
 12326   0001A3                     C1MASK2T        equ	419	;# 
 12327   0001A4                     C1FLTOBJ3       equ	420	;# 
 12328   0001A4                     C1FLTOBJ3L      equ	420	;# 
 12329   0001A5                     C1FLTOBJ3H      equ	421	;# 
 12330   0001A6                     C1FLTOBJ3U      equ	422	;# 
 12331   0001A7                     C1FLTOBJ3T      equ	423	;# 
 12332   0001A8                     C1MASK3         equ	424	;# 
 12333   0001A8                     C1MASK3L        equ	424	;# 
 12334   0001A9                     C1MASK3H        equ	425	;# 
 12335   0001AA                     C1MASK3U        equ	426	;# 
 12336   0001AB                     C1MASK3T        equ	427	;# 
 12337   0001AC                     C1FLTOBJ4       equ	428	;# 
 12338   0001AC                     C1FLTOBJ4L      equ	428	;# 
 12339   0001AD                     C1FLTOBJ4H      equ	429	;# 
 12340   0001AE                     C1FLTOBJ4U      equ	430	;# 
 12341   0001AF                     C1FLTOBJ4T      equ	431	;# 
 12342   0001B0                     C1MASK4         equ	432	;# 
 12343   0001B0                     C1MASK4L        equ	432	;# 
 12344   0001B1                     C1MASK4H        equ	433	;# 
 12345   0001B2                     C1MASK4U        equ	434	;# 
 12346   0001B3                     C1MASK4T        equ	435	;# 
 12347   0001B4                     C1FLTOBJ5       equ	436	;# 
 12348   0001B4                     C1FLTOBJ5L      equ	436	;# 
 12349   0001B5                     C1FLTOBJ5H      equ	437	;# 
 12350   0001B6                     C1FLTOBJ5U      equ	438	;# 
 12351   0001B7                     C1FLTOBJ5T      equ	439	;# 
 12352   0001B8                     C1MASK5         equ	440	;# 
 12353   0001B8                     C1MASK5L        equ	440	;# 
 12354   0001B9                     C1MASK5H        equ	441	;# 
 12355   0001BA                     C1MASK5U        equ	442	;# 
 12356   0001BB                     C1MASK5T        equ	443	;# 
 12357   0001BC                     C1FLTOBJ6       equ	444	;# 
 12358   0001BC                     C1FLTOBJ6L      equ	444	;# 
 12359   0001BD                     C1FLTOBJ6H      equ	445	;# 
 12360   0001BE                     C1FLTOBJ6U      equ	446	;# 
 12361   0001BF                     C1FLTOBJ6T      equ	447	;# 
 12362   0001C0                     C1MASK6         equ	448	;# 
 12363   0001C0                     C1MASK6L        equ	448	;# 
 12364   0001C1                     C1MASK6H        equ	449	;# 
 12365   0001C2                     C1MASK6U        equ	450	;# 
 12366   0001C3                     C1MASK6T        equ	451	;# 
 12367   0001C4                     C1FLTOBJ7       equ	452	;# 
 12368   0001C4                     C1FLTOBJ7L      equ	452	;# 
 12369   0001C5                     C1FLTOBJ7H      equ	453	;# 
 12370   0001C6                     C1FLTOBJ7U      equ	454	;# 
 12371   0001C7                     C1FLTOBJ7T      equ	455	;# 
 12372   0001C8                     C1MASK7         equ	456	;# 
 12373   0001C8                     C1MASK7L        equ	456	;# 
 12374   0001C9                     C1MASK7H        equ	457	;# 
 12375   0001CA                     C1MASK7U        equ	458	;# 
 12376   0001CB                     C1MASK7T        equ	459	;# 
 12377   0001CC                     C1FLTOBJ8       equ	460	;# 
 12378   0001CC                     C1FLTOBJ8L      equ	460	;# 
 12379   0001CD                     C1FLTOBJ8H      equ	461	;# 
 12380   0001CE                     C1FLTOBJ8U      equ	462	;# 
 12381   0001CF                     C1FLTOBJ8T      equ	463	;# 
 12382   0001D0                     C1MASK8         equ	464	;# 
 12383   0001D0                     C1MASK8L        equ	464	;# 
 12384   0001D1                     C1MASK8H        equ	465	;# 
 12385   0001D2                     C1MASK8U        equ	466	;# 
 12386   0001D3                     C1MASK8T        equ	467	;# 
 12387   0001D4                     C1FLTOBJ9       equ	468	;# 
 12388   0001D4                     C1FLTOBJ9L      equ	468	;# 
 12389   0001D5                     C1FLTOBJ9H      equ	469	;# 
 12390   0001D6                     C1FLTOBJ9U      equ	470	;# 
 12391   0001D7                     C1FLTOBJ9T      equ	471	;# 
 12392   0001D8                     C1MASK9         equ	472	;# 
 12393   0001D8                     C1MASK9L        equ	472	;# 
 12394   0001D9                     C1MASK9H        equ	473	;# 
 12395   0001DA                     C1MASK9U        equ	474	;# 
 12396   0001DB                     C1MASK9T        equ	475	;# 
 12397   0001DC                     C1FLTOBJ10      equ	476	;# 
 12398   0001DC                     C1FLTOBJ10L     equ	476	;# 
 12399   0001DD                     C1FLTOBJ10H     equ	477	;# 
 12400   0001DE                     C1FLTOBJ10U     equ	478	;# 
 12401   0001DF                     C1FLTOBJ10T     equ	479	;# 
 12402   0001E0                     C1MASK10        equ	480	;# 
 12403   0001E0                     C1MASK10L       equ	480	;# 
 12404   0001E1                     C1MASK10H       equ	481	;# 
 12405   0001E2                     C1MASK10U       equ	482	;# 
 12406   0001E3                     C1MASK10T       equ	483	;# 
 12407   0001E4                     C1FLTOBJ11      equ	484	;# 
 12408   0001E4                     C1FLTOBJ11L     equ	484	;# 
 12409   0001E5                     C1FLTOBJ11H     equ	485	;# 
 12410   0001E6                     C1FLTOBJ11U     equ	486	;# 
 12411   0001E7                     C1FLTOBJ11T     equ	487	;# 
 12412   0001E8                     C1MASK11        equ	488	;# 
 12413   0001E8                     C1MASK11L       equ	488	;# 
 12414   0001E9                     C1MASK11H       equ	489	;# 
 12415   0001EA                     C1MASK11U       equ	490	;# 
 12416   0001EB                     C1MASK11T       equ	491	;# 
 12417   000200                     PPSLOCK         equ	512	;# 
 12418   000201                     RA0PPS          equ	513	;# 
 12419   000202                     RA1PPS          equ	514	;# 
 12420   000203                     RA2PPS          equ	515	;# 
 12421   000204                     RA3PPS          equ	516	;# 
 12422   000205                     RA4PPS          equ	517	;# 
 12423   000206                     RA5PPS          equ	518	;# 
 12424   000207                     RA6PPS          equ	519	;# 
 12425   000208                     RA7PPS          equ	520	;# 
 12426   000209                     RB0PPS          equ	521	;# 
 12427   00020A                     RB1PPS          equ	522	;# 
 12428   00020B                     RB2PPS          equ	523	;# 
 12429   00020C                     RB3PPS          equ	524	;# 
 12430   00020D                     RB4PPS          equ	525	;# 
 12431   00020E                     RB5PPS          equ	526	;# 
 12432   00020F                     RB6PPS          equ	527	;# 
 12433   000210                     RB7PPS          equ	528	;# 
 12434   000211                     RC0PPS          equ	529	;# 
 12435   000212                     RC1PPS          equ	530	;# 
 12436   000213                     RC2PPS          equ	531	;# 
 12437   000214                     RC3PPS          equ	532	;# 
 12438   000215                     RC4PPS          equ	533	;# 
 12439   000216                     RC5PPS          equ	534	;# 
 12440   000217                     RC6PPS          equ	535	;# 
 12441   000218                     RC7PPS          equ	536	;# 
 12442   00023D                     CANRXPPS        equ	573	;# 
 12443   00023E                     INT0PPS         equ	574	;# 
 12444   00023F                     INT1PPS         equ	575	;# 
 12445   000240                     INT2PPS         equ	576	;# 
 12446   000241                     T0CKIPPS        equ	577	;# 
 12447   000242                     T1CKIPPS        equ	578	;# 
 12448   000243                     T1GPPS          equ	579	;# 
 12449   000244                     T3CKIPPS        equ	580	;# 
 12450   000245                     T3GPPS          equ	581	;# 
 12451   000246                     T5CKIPPS        equ	582	;# 
 12452   000247                     T5GPPS          equ	583	;# 
 12453   000248                     T2INPPS         equ	584	;# 
 12454   000249                     T4INPPS         equ	585	;# 
 12455   00024A                     T6INPPS         equ	586	;# 
 12456   00024B                     TUIN0PPS        equ	587	;# 
 12457   00024C                     TUIN1PPS        equ	588	;# 
 12458   00024F                     CCP1PPS         equ	591	;# 
 12459   000250                     CCP2PPS         equ	592	;# 
 12460   000251                     CCP3PPS         equ	593	;# 
 12461   000253                     PWM1ERSPPS      equ	595	;# 
 12462   000254                     PWM2ERSPPS      equ	596	;# 
 12463   000255                     PWM3ERSPPS      equ	597	;# 
 12464   000256                     PWM4ERSPPS      equ	598	;# 
 12465   000257                     PWMIN0PPS       equ	599	;# 
 12466   000258                     PWMIN1PPS       equ	600	;# 
 12467   000259                     SMT1WINPPS      equ	601	;# 
 12468   00025A                     SMT1SIGPPS      equ	602	;# 
 12469   00025B                     CWG1PPS         equ	603	;# 
 12470   00025B                     CWG1INPPS       equ	603	;# 
 12471   00025C                     CWG2PPS         equ	604	;# 
 12472   00025C                     CWG2INPPS       equ	604	;# 
 12473   00025D                     CWG3PPS         equ	605	;# 
 12474   00025D                     CWG3INPPS       equ	605	;# 
 12475   00025E                     MD1CARLPPS      equ	606	;# 
 12476   00025E                     MDCARLPPS       equ	606	;# 
 12477   00025F                     MD1CARHPPS      equ	607	;# 
 12478   00025F                     MDCARHPPS       equ	607	;# 
 12479   000260                     MD1SRCPPS       equ	608	;# 
 12480   000260                     MDSRCPPS        equ	608	;# 
 12481   000261                     CLCIN0PPS       equ	609	;# 
 12482   000262                     CLCIN1PPS       equ	610	;# 
 12483   000263                     CLCIN2PPS       equ	611	;# 
 12484   000264                     CLCIN3PPS       equ	612	;# 
 12485   000265                     CLCIN4PPS       equ	613	;# 
 12486   000266                     CLCIN5PPS       equ	614	;# 
 12487   000267                     CLCIN6PPS       equ	615	;# 
 12488   000268                     CLCIN7PPS       equ	616	;# 
 12489   000269                     ADACTPPS        equ	617	;# 
 12490   00026A                     SPI1SCKPPS      equ	618	;# 
 12491   00026B                     SPI1SDIPPS      equ	619	;# 
 12492   00026C                     SPI1SSPPS       equ	620	;# 
 12493   00026D                     SPI2SCKPPS      equ	621	;# 
 12494   00026E                     SPI2SDIPPS      equ	622	;# 
 12495   00026F                     SPI2SSPPS       equ	623	;# 
 12496   000270                     I2C1SDAPPS      equ	624	;# 
 12497   000271                     I2C1SCLPPS      equ	625	;# 
 12498   000272                     U1RXPPS         equ	626	;# 
 12499   000273                     U1CTSPPS        equ	627	;# 
 12500   000274                     U2RXPPS         equ	628	;# 
 12501   000275                     U2CTSPPS        equ	629	;# 
 12502   000276                     U3RXPPS         equ	630	;# 
 12503   000277                     U3CTSPPS        equ	631	;# 
 12504   000278                     U4RXPPS         equ	632	;# 
 12505   000279                     U4CTSPPS        equ	633	;# 
 12506   00027A                     U5RXPPS         equ	634	;# 
 12507   00027B                     U5CTSPPS        equ	635	;# 
 12508   000286                     RC4I2C          equ	646	;# 
 12509   000287                     RC3I2C          equ	647	;# 
 12510   000288                     RB2I2C          equ	648	;# 
 12511   000289                     RB1I2C          equ	649	;# 
 12512   00028A                     I2C1RXB         equ	650	;# 
 12513   00028B                     I2C1TXB         equ	651	;# 
 12514   00028C                     I2C1CNTL        equ	652	;# 
 12515   00028D                     I2C1CNTH        equ	653	;# 
 12516   00028E                     I2C1ADB0        equ	654	;# 
 12517   00028F                     I2C1ADB1        equ	655	;# 
 12518   000290                     I2C1ADR0        equ	656	;# 
 12519   000291                     I2C1ADR1        equ	657	;# 
 12520   000292                     I2C1ADR2        equ	658	;# 
 12521   000293                     I2C1ADR3        equ	659	;# 
 12522   000294                     I2C1CON0        equ	660	;# 
 12523   000295                     I2C1CON1        equ	661	;# 
 12524   000296                     I2C1CON2        equ	662	;# 
 12525   000297                     I2C1ERR         equ	663	;# 
 12526   000298                     I2C1STAT0       equ	664	;# 
 12527   000299                     I2C1STAT1       equ	665	;# 
 12528   00029A                     I2C1PIR         equ	666	;# 
 12529   00029B                     I2C1PIE         equ	667	;# 
 12530   00029C                     I2C1BTO         equ	668	;# 
 12531   00029D                     I2C1BAUD        equ	669	;# 
 12532   00029E                     I2C1CLK         equ	670	;# 
 12533   00029F                     I2C1BTOC        equ	671	;# 
 12534   0002A1                     U1RXB           equ	673	;# 
 12535   0002A1                     U1RXBL          equ	673	;# 
 12536   0002A2                     U1RXCHK         equ	674	;# 
 12537   0002A3                     U1TXB           equ	675	;# 
 12538   0002A3                     U1TXBL          equ	675	;# 
 12539   0002A4                     U1TXCHK         equ	676	;# 
 12540   0002A5                     U1P1            equ	677	;# 
 12541   0002A5                     U1P1L           equ	677	;# 
 12542   0002A6                     U1P1H           equ	678	;# 
 12543   0002A7                     U1P2            equ	679	;# 
 12544   0002A7                     U1P2L           equ	679	;# 
 12545   0002A8                     U1P2H           equ	680	;# 
 12546   0002A9                     U1P3            equ	681	;# 
 12547   0002A9                     U1P3L           equ	681	;# 
 12548   0002AA                     U1P3H           equ	682	;# 
 12549   0002AB                     U1CON0          equ	683	;# 
 12550   0002AC                     U1CON1          equ	684	;# 
 12551   0002AD                     U1CON2          equ	685	;# 
 12552   0002AE                     U1BRG           equ	686	;# 
 12553   0002AE                     U1BRGL          equ	686	;# 
 12554   0002AF                     U1BRGH          equ	687	;# 
 12555   0002B0                     U1FIFO          equ	688	;# 
 12556   0002B1                     U1UIR           equ	689	;# 
 12557   0002B2                     U1ERRIR         equ	690	;# 
 12558   0002B3                     U1ERRIE         equ	691	;# 
 12559   0002B4                     U2RXB           equ	692	;# 
 12560   0002B4                     U2RXBL          equ	692	;# 
 12561   0002B5                     U2RXCHK         equ	693	;# 
 12562   0002B6                     U2TXB           equ	694	;# 
 12563   0002B6                     U2TXBL          equ	694	;# 
 12564   0002B7                     U2TXCHK         equ	695	;# 
 12565   0002B8                     U2P1            equ	696	;# 
 12566   0002B8                     U2P1L           equ	696	;# 
 12567   0002B9                     U2P1H           equ	697	;# 
 12568   0002BA                     U2P2            equ	698	;# 
 12569   0002BA                     U2P2L           equ	698	;# 
 12570   0002BB                     U2P2H           equ	699	;# 
 12571   0002BC                     U2P3            equ	700	;# 
 12572   0002BC                     U2P3L           equ	700	;# 
 12573   0002BD                     U2P3H           equ	701	;# 
 12574   0002BE                     U2CON0          equ	702	;# 
 12575   0002BF                     U2CON1          equ	703	;# 
 12576   0002C0                     U2CON2          equ	704	;# 
 12577   0002C1                     U2BRG           equ	705	;# 
 12578   0002C1                     U2BRGL          equ	705	;# 
 12579   0002C2                     U2BRGH          equ	706	;# 
 12580   0002C3                     U2FIFO          equ	707	;# 
 12581   0002C4                     U2UIR           equ	708	;# 
 12582   0002C5                     U2ERRIR         equ	709	;# 
 12583   0002C6                     U2ERRIE         equ	710	;# 
 12584   0002C7                     U3RXB           equ	711	;# 
 12585   0002C7                     U3RXBL          equ	711	;# 
 12586   0002C9                     U3TXB           equ	713	;# 
 12587   0002C9                     U3TXBL          equ	713	;# 
 12588   0002CB                     U3P1            equ	715	;# 
 12589   0002CB                     U3P1L           equ	715	;# 
 12590   0002CD                     U3P2            equ	717	;# 
 12591   0002CD                     U3P2L           equ	717	;# 
 12592   0002CF                     U3P3            equ	719	;# 
 12593   0002CF                     U3P3L           equ	719	;# 
 12594   0002D1                     U3CON0          equ	721	;# 
 12595   0002D2                     U3CON1          equ	722	;# 
 12596   0002D3                     U3CON2          equ	723	;# 
 12597   0002D4                     U3BRG           equ	724	;# 
 12598   0002D4                     U3BRGL          equ	724	;# 
 12599   0002D5                     U3BRGH          equ	725	;# 
 12600   0002D6                     U3FIFO          equ	726	;# 
 12601   0002D7                     U3UIR           equ	727	;# 
 12602   0002D8                     U3ERRIR         equ	728	;# 
 12603   0002D9                     U3ERRIE         equ	729	;# 
 12604   0002DA                     U4RXB           equ	730	;# 
 12605   0002DA                     U4RXBL          equ	730	;# 
 12606   0002DC                     U4TXB           equ	732	;# 
 12607   0002DC                     U4TXBL          equ	732	;# 
 12608   0002DE                     U4P1            equ	734	;# 
 12609   0002DE                     U4P1L           equ	734	;# 
 12610   0002E0                     U4P2            equ	736	;# 
 12611   0002E0                     U4P2L           equ	736	;# 
 12612   0002E2                     U4P3            equ	738	;# 
 12613   0002E2                     U4P3L           equ	738	;# 
 12614   0002E4                     U4CON0          equ	740	;# 
 12615   0002E5                     U4CON1          equ	741	;# 
 12616   0002E6                     U4CON2          equ	742	;# 
 12617   0002E7                     U4BRG           equ	743	;# 
 12618   0002E7                     U4BRGL          equ	743	;# 
 12619   0002E8                     U4BRGH          equ	744	;# 
 12620   0002E9                     U4FIFO          equ	745	;# 
 12621   0002EA                     U4UIR           equ	746	;# 
 12622   0002EB                     U4ERRIR         equ	747	;# 
 12623   0002EC                     U4ERRIE         equ	748	;# 
 12624   0002ED                     U5RXB           equ	749	;# 
 12625   0002ED                     U5RXBL          equ	749	;# 
 12626   0002EF                     U5TXB           equ	751	;# 
 12627   0002EF                     U5TXBL          equ	751	;# 
 12628   0002F1                     U5P1            equ	753	;# 
 12629   0002F1                     U5P1L           equ	753	;# 
 12630   0002F3                     U5P2            equ	755	;# 
 12631   0002F3                     U5P2L           equ	755	;# 
 12632   0002F5                     U5P3            equ	757	;# 
 12633   0002F5                     U5P3L           equ	757	;# 
 12634   0002F7                     U5CON0          equ	759	;# 
 12635   0002F8                     U5CON1          equ	760	;# 
 12636   0002F9                     U5CON2          equ	761	;# 
 12637   0002FA                     U5BRG           equ	762	;# 
 12638   0002FA                     U5BRGL          equ	762	;# 
 12639   0002FB                     U5BRGH          equ	763	;# 
 12640   0002FC                     U5FIFO          equ	764	;# 
 12641   0002FD                     U5UIR           equ	765	;# 
 12642   0002FE                     U5ERRIR         equ	766	;# 
 12643   0002FF                     U5ERRIE         equ	767	;# 
 12644   000300                     SMT1TMR         equ	768	;# 
 12645   000300                     SMT1TMRL        equ	768	;# 
 12646   000301                     SMT1TMRH        equ	769	;# 
 12647   000302                     SMT1TMRU        equ	770	;# 
 12648   000303                     SMT1CPR         equ	771	;# 
 12649   000303                     SMT1CPRL        equ	771	;# 
 12650   000304                     SMT1CPRH        equ	772	;# 
 12651   000305                     SMT1CPRU        equ	773	;# 
 12652   000306                     SMT1CPW         equ	774	;# 
 12653   000306                     SMT1CPWL        equ	774	;# 
 12654   000307                     SMT1CPWH        equ	775	;# 
 12655   000308                     SMT1CPWU        equ	776	;# 
 12656   000309                     SMT1PR          equ	777	;# 
 12657   000309                     SMT1PRL         equ	777	;# 
 12658   00030A                     SMT1PRH         equ	778	;# 
 12659   00030B                     SMT1PRU         equ	779	;# 
 12660   00030C                     SMT1CON0        equ	780	;# 
 12661   00030D                     SMT1CON1        equ	781	;# 
 12662   00030E                     SMT1STAT        equ	782	;# 
 12663   00030F                     SMT1CLK         equ	783	;# 
 12664   000310                     SMT1SIG         equ	784	;# 
 12665   000311                     SMT1WIN         equ	785	;# 
 12666   000318                     TMR0L           equ	792	;# 
 12667   000318                     TMR0            equ	792	;# 
 12668   000319                     TMR0H           equ	793	;# 
 12669   000319                     PR0             equ	793	;# 
 12670   00031A                     T0CON0          equ	794	;# 
 12671   00031B                     T0CON1          equ	795	;# 
 12672   00031C                     TMR1            equ	796	;# 
 12673   00031C                     TMR1L           equ	796	;# 
 12674   00031D                     TMR1H           equ	797	;# 
 12675   00031E                     T1CON           equ	798	;# 
 12676   00031E                     TMR1CON         equ	798	;# 
 12677   00031F                     T1GCON          equ	799	;# 
 12678   00031F                     TMR1GCON        equ	799	;# 
 12679   000320                     T1GATE          equ	800	;# 
 12680   000320                     TMR1GATE        equ	800	;# 
 12681   000321                     T1CLK           equ	801	;# 
 12682   000321                     TMR1CLK         equ	801	;# 
 12683   000321                     PR1             equ	801	;# 
 12684   000322                     T2TMR           equ	802	;# 
 12685   000322                     TMR2            equ	802	;# 
 12686   000323                     T2PR            equ	803	;# 
 12687   000323                     PR2             equ	803	;# 
 12688   000324                     T2CON           equ	804	;# 
 12689   000325                     T2HLT           equ	805	;# 
 12690   000326                     T2CLKCON        equ	806	;# 
 12691   000326                     T2CLK           equ	806	;# 
 12692   000327                     T2RST           equ	807	;# 
 12693   000328                     TMR3            equ	808	;# 
 12694   000328                     TMR3L           equ	808	;# 
 12695   000329                     TMR3H           equ	809	;# 
 12696   00032A                     T3CON           equ	810	;# 
 12697   00032A                     TMR3CON         equ	810	;# 
 12698   00032B                     T3GCON          equ	811	;# 
 12699   00032B                     TMR3GCON        equ	811	;# 
 12700   00032C                     T3GATE          equ	812	;# 
 12701   00032C                     TMR3GATE        equ	812	;# 
 12702   00032D                     T3CLK           equ	813	;# 
 12703   00032D                     TMR3CLK         equ	813	;# 
 12704   00032D                     PR3             equ	813	;# 
 12705   00032E                     T4TMR           equ	814	;# 
 12706   00032E                     TMR4            equ	814	;# 
 12707   00032F                     T4PR            equ	815	;# 
 12708   00032F                     PR4             equ	815	;# 
 12709   000330                     T4CON           equ	816	;# 
 12710   000331                     T4HLT           equ	817	;# 
 12711   000332                     T4CLKCON        equ	818	;# 
 12712   000332                     T4CLK           equ	818	;# 
 12713   000333                     T4RST           equ	819	;# 
 12714   000334                     TMR5            equ	820	;# 
 12715   000334                     TMR5L           equ	820	;# 
 12716   000335                     TMR5H           equ	821	;# 
 12717   000336                     T5CON           equ	822	;# 
 12718   000336                     TMR5CON         equ	822	;# 
 12719   000337                     T5GCON          equ	823	;# 
 12720   000337                     TMR5GCON        equ	823	;# 
 12721   000338                     T5GATE          equ	824	;# 
 12722   000338                     TMR5GATE        equ	824	;# 
 12723   000339                     T5CLK           equ	825	;# 
 12724   000339                     TMR5CLK         equ	825	;# 
 12725   000339                     PR5             equ	825	;# 
 12726   00033A                     T6TMR           equ	826	;# 
 12727   00033A                     TMR6            equ	826	;# 
 12728   00033B                     T6PR            equ	827	;# 
 12729   00033B                     PR6             equ	827	;# 
 12730   00033C                     T6CON           equ	828	;# 
 12731   00033D                     T6HLT           equ	829	;# 
 12732   00033E                     T6CLKCON        equ	830	;# 
 12733   00033E                     T6CLK           equ	830	;# 
 12734   00033F                     T6RST           equ	831	;# 
 12735   000340                     CCPR1           equ	832	;# 
 12736   000340                     CCPR1L          equ	832	;# 
 12737   000341                     CCPR1H          equ	833	;# 
 12738   000342                     CCP1CON         equ	834	;# 
 12739   000343                     CCP1CAP         equ	835	;# 
 12740   000344                     CCPR2           equ	836	;# 
 12741   000344                     CCPR2L          equ	836	;# 
 12742   000345                     CCPR2H          equ	837	;# 
 12743   000346                     CCP2CON         equ	838	;# 
 12744   000347                     CCP2CAP         equ	839	;# 
 12745   000348                     CCPR3           equ	840	;# 
 12746   000348                     CCPR3L          equ	840	;# 
 12747   000349                     CCPR3H          equ	841	;# 
 12748   00034A                     CCP3CON         equ	842	;# 
 12749   00034B                     CCP3CAP         equ	843	;# 
 12750   00034C                     CCPTMRS0        equ	844	;# 
 12751   00034F                     CRCDATA         equ	847	;# 
 12752   00034F                     CRCDATAL        equ	847	;# 
 12753   000350                     CRCDATAH        equ	848	;# 
 12754   000351                     CRCDATAU        equ	849	;# 
 12755   000352                     CRCDATAT        equ	850	;# 
 12756   000353                     CRCOUT          equ	851	;# 
 12757   000353                     CRCSHFT         equ	851	;# 
 12758   000353                     CRCXOR          equ	851	;# 
 12759   000353                     CRCOUTL         equ	851	;# 
 12760   000353                     CRCSHFTL        equ	851	;# 
 12761   000353                     CRCSHIFTL       equ	851	;# 
 12762   000353                     CRCXORL         equ	851	;# 
 12763   000354                     CRCOUTH         equ	852	;# 
 12764   000354                     CRCSHFTH        equ	852	;# 
 12765   000354                     CRCSHIFTH       equ	852	;# 
 12766   000354                     CRCXORH         equ	852	;# 
 12767   000355                     CRCOUTU         equ	853	;# 
 12768   000355                     CRCSHFTU        equ	853	;# 
 12769   000355                     CRCSHIFTU       equ	853	;# 
 12770   000355                     CRCXORU         equ	853	;# 
 12771   000356                     CRCOUTT         equ	854	;# 
 12772   000356                     CRCSHFTT        equ	854	;# 
 12773   000356                     CRCSHIFTT       equ	854	;# 
 12774   000356                     CRCXORT         equ	854	;# 
 12775   000357                     CRCCON0         equ	855	;# 
 12776   000358                     CRCCON1         equ	856	;# 
 12777   000359                     CRCCON2         equ	857	;# 
 12778   00035A                     SCANLADR        equ	858	;# 
 12779   00035A                     SCANLADRL       equ	858	;# 
 12780   00035B                     SCANLADRH       equ	859	;# 
 12781   00035C                     SCANLADRU       equ	860	;# 
 12782   00035D                     SCANHADR        equ	861	;# 
 12783   00035D                     SCANHADRL       equ	861	;# 
 12784   00035E                     SCANHADRH       equ	862	;# 
 12785   00035F                     SCANHADRU       equ	863	;# 
 12786   000360                     SCANCON0        equ	864	;# 
 12787   000361                     SCANTRIG        equ	865	;# 
 12788   000362                     IPR0            equ	866	;# 
 12789   000363                     IPR1            equ	867	;# 
 12790   000364                     IPR2            equ	868	;# 
 12791   000365                     IPR3            equ	869	;# 
 12792   000366                     IPR4            equ	870	;# 
 12793   000367                     IPR5            equ	871	;# 
 12794   000368                     IPR6            equ	872	;# 
 12795   000369                     IPR7            equ	873	;# 
 12796   00036A                     IPR8            equ	874	;# 
 12797   00036B                     IPR9            equ	875	;# 
 12798   00036C                     IPR10           equ	876	;# 
 12799   00036D                     IPR11           equ	877	;# 
 12800   00036E                     IPR12           equ	878	;# 
 12801   00036F                     IPR13           equ	879	;# 
 12802   000370                     IPR14           equ	880	;# 
 12803   000371                     IPR15           equ	881	;# 
 12804   000373                     STATUS_CSHAD    equ	883	;# 
 12805   000374                     WREG_CSHAD      equ	884	;# 
 12806   000375                     BSR_CSHAD       equ	885	;# 
 12807   000376                     SHADCON         equ	886	;# 
 12808   000377                     STATUS_SHAD     equ	887	;# 
 12809   000378                     WREG_SHAD       equ	888	;# 
 12810   000379                     BSR_SHAD        equ	889	;# 
 12811   00037A                     PCLATH_SHAD     equ	890	;# 
 12812   00037B                     PCLATU_SHAD     equ	891	;# 
 12813   00037C                     FSR0SH          equ	892	;# 
 12814   00037C                     FSR0L_SHAD      equ	892	;# 
 12815   00037D                     FSR0H_SHAD      equ	893	;# 
 12816   00037E                     FSR1SH          equ	894	;# 
 12817   00037E                     FSR1L_SHAD      equ	894	;# 
 12818   00037F                     FSR1H_SHAD      equ	895	;# 
 12819   000380                     FSR2SH          equ	896	;# 
 12820   000380                     FSR2L_SHAD      equ	896	;# 
 12821   000381                     FSR2H_SHAD      equ	897	;# 
 12822   000382                     PRODSH          equ	898	;# 
 12823   000382                     PRODL_SHAD      equ	898	;# 
 12824   000383                     PRODH_SHAD      equ	899	;# 
 12825   000387                     TU16ACON0       equ	903	;# 
 12826   000388                     TU16ACON1       equ	904	;# 
 12827   000389                     TU16AHLT        equ	905	;# 
 12828   00038A                     TU16APS         equ	906	;# 
 12829   00038B                     TU16ATMR        equ	907	;# 
 12830   00038B                     TU16ACR         equ	907	;# 
 12831   00038B                     TU16ATMRL       equ	907	;# 
 12832   00038B                     TU16ACRL        equ	907	;# 
 12833   00038C                     TU16ATMRH       equ	908	;# 
 12834   00038C                     TU16ACRH        equ	908	;# 
 12835   00038D                     TU16APR         equ	909	;# 
 12836   00038D                     TU16APRL        equ	909	;# 
 12837   00038E                     TU16APRH        equ	910	;# 
 12838   00038F                     TU16ACLK        equ	911	;# 
 12839   000390                     TU16AERS        equ	912	;# 
 12840   000393                     TU16BCON0       equ	915	;# 
 12841   000394                     TU16BCON1       equ	916	;# 
 12842   000395                     TU16BHLT        equ	917	;# 
 12843   000396                     TU16BPS         equ	918	;# 
 12844   000397                     TU16BTMR        equ	919	;# 
 12845   000397                     TU16BCR         equ	919	;# 
 12846   000397                     TU16BTMRL       equ	919	;# 
 12847   000397                     TU16BCRL        equ	919	;# 
 12848   000398                     TU16BTMRH       equ	920	;# 
 12849   000398                     TU16BCRH        equ	920	;# 
 12850   000399                     TU16BPR         equ	921	;# 
 12851   000399                     TU16BPRL        equ	921	;# 
 12852   00039A                     TU16BPRH        equ	922	;# 
 12853   00039B                     TU16BCLK        equ	923	;# 
 12854   00039C                     TU16BERS        equ	924	;# 
 12855   0003BB                     TUCHAIN         equ	955	;# 
 12856   0003BC                     CWG1CLK         equ	956	;# 
 12857   0003BC                     CWG1CLKCON      equ	956	;# 
 12858   0003BD                     CWG1ISM         equ	957	;# 
 12859   0003BE                     CWG1DBR         equ	958	;# 
 12860   0003BF                     CWG1DBF         equ	959	;# 
 12861   0003C0                     CWG1CON0        equ	960	;# 
 12862   0003C1                     CWG1CON1        equ	961	;# 
 12863   0003C2                     CWG1AS0         equ	962	;# 
 12864   0003C3                     CWG1AS1         equ	963	;# 
 12865   0003C4                     CWG1STR         equ	964	;# 
 12866   0003C5                     CWG2CLK         equ	965	;# 
 12867   0003C5                     CWG2CLKCON      equ	965	;# 
 12868   0003C6                     CWG2ISM         equ	966	;# 
 12869   0003C7                     CWG2DBR         equ	967	;# 
 12870   0003C8                     CWG2DBF         equ	968	;# 
 12871   0003C9                     CWG2CON0        equ	969	;# 
 12872   0003CA                     CWG2CON1        equ	970	;# 
 12873   0003CB                     CWG2AS0         equ	971	;# 
 12874   0003CC                     CWG2AS1         equ	972	;# 
 12875   0003CD                     CWG2STR         equ	973	;# 
 12876   0003CE                     CWG3CLK         equ	974	;# 
 12877   0003CE                     CWG3CLKCON      equ	974	;# 
 12878   0003CF                     CWG3ISM         equ	975	;# 
 12879   0003D0                     CWG3DBR         equ	976	;# 
 12880   0003D1                     CWG3DBF         equ	977	;# 
 12881   0003D2                     CWG3CON0        equ	978	;# 
 12882   0003D3                     CWG3CON1        equ	979	;# 
 12883   0003D4                     CWG3AS0         equ	980	;# 
 12884   0003D5                     CWG3AS1         equ	981	;# 
 12885   0003D6                     CWG3STR         equ	982	;# 
 12886   0003D7                     FVRCON          equ	983	;# 
 12887   0003D8                     ADCPCON         equ	984	;# 
 12888   0003D8                     ADCP            equ	984	;# 
 12889   0003D9                     ADLTH           equ	985	;# 
 12890   0003D9                     ADLTHL          equ	985	;# 
 12891   0003DA                     ADLTHH          equ	986	;# 
 12892   0003DB                     ADUTH           equ	987	;# 
 12893   0003DB                     ADUTHL          equ	987	;# 
 12894   0003DC                     ADUTHH          equ	988	;# 
 12895   0003DD                     ADERR           equ	989	;# 
 12896   0003DD                     ADERRL          equ	989	;# 
 12897   0003DE                     ADERRH          equ	990	;# 
 12898   0003DF                     ADSTPT          equ	991	;# 
 12899   0003DF                     ADSTPTL         equ	991	;# 
 12900   0003E0                     ADSTPTH         equ	992	;# 
 12901   0003E1                     ADFLTR          equ	993	;# 
 12902   0003E1                     ADFLTRL         equ	993	;# 
 12903   0003E2                     ADFLTRH         equ	994	;# 
 12904   0003E3                     ADACC           equ	995	;# 
 12905   0003E3                     ADACCL          equ	995	;# 
 12906   0003E4                     ADACCH          equ	996	;# 
 12907   0003E5                     ADACCU          equ	997	;# 
 12908   0003E6                     ADCNT           equ	998	;# 
 12909   0003E7                     ADRPT           equ	999	;# 
 12910   0003E8                     ADPREV          equ	1000	;# 
 12911   0003E8                     ADPREVL         equ	1000	;# 
 12912   0003E9                     ADPREVH         equ	1001	;# 
 12913   0003EA                     ADRES           equ	1002	;# 
 12914   0003EA                     ADRESL          equ	1002	;# 
 12915   0003EB                     ADRESH          equ	1003	;# 
 12916   0003EC                     ADPCH           equ	1004	;# 
 12917   0003EE                     ADACQ           equ	1006	;# 
 12918   0003EE                     ADACQL          equ	1006	;# 
 12919   0003EF                     ADACQH          equ	1007	;# 
 12920   0003F0                     ADCAP           equ	1008	;# 
 12921   0003F1                     ADPRE           equ	1009	;# 
 12922   0003F1                     ADPREL          equ	1009	;# 
 12923   0003F2                     ADPREH          equ	1010	;# 
 12924   0003F3                     ADCON0          equ	1011	;# 
 12925   0003F4                     ADCON1          equ	1012	;# 
 12926   0003F5                     ADCON2          equ	1013	;# 
 12927   0003F6                     ADCON3          equ	1014	;# 
 12928   0003F7                     ADSTAT          equ	1015	;# 
 12929   0003F8                     ADREF           equ	1016	;# 
 12930   0003F9                     ADACT           equ	1017	;# 
 12931   0003FA                     ADCLK           equ	1018	;# 
 12932   0003FB                     ADCTX           equ	1019	;# 
 12933   0003FC                     ADCSEL1         equ	1020	;# 
 12934   0003FD                     ADCSEL2         equ	1021	;# 
 12935   0003FE                     ADCSEL3         equ	1022	;# 
 12936   0003FF                     ADCSEL4         equ	1023	;# 
 12937   000400                     ANSELA          equ	1024	;# 
 12938   000401                     WPUA            equ	1025	;# 
 12939   000402                     ODCONA          equ	1026	;# 
 12940   000403                     SLRCONA         equ	1027	;# 
 12941   000404                     INLVLA          equ	1028	;# 
 12942   000405                     IOCAP           equ	1029	;# 
 12943   000406                     IOCAN           equ	1030	;# 
 12944   000407                     IOCAF           equ	1031	;# 
 12945   000408                     ANSELB          equ	1032	;# 
 12946   000409                     WPUB            equ	1033	;# 
 12947   00040A                     ODCONB          equ	1034	;# 
 12948   00040B                     SLRCONB         equ	1035	;# 
 12949   00040C                     INLVLB          equ	1036	;# 
 12950   00040D                     IOCBP           equ	1037	;# 
 12951   00040E                     IOCBN           equ	1038	;# 
 12952   00040F                     IOCBF           equ	1039	;# 
 12953   000410                     ANSELC          equ	1040	;# 
 12954   000411                     WPUC            equ	1041	;# 
 12955   000412                     ODCONC          equ	1042	;# 
 12956   000413                     SLRCONC         equ	1043	;# 
 12957   000414                     INLVLC          equ	1044	;# 
 12958   000415                     IOCCP           equ	1045	;# 
 12959   000416                     IOCCN           equ	1046	;# 
 12960   000417                     IOCCF           equ	1047	;# 
 12961   000421                     WPUE            equ	1057	;# 
 12962   000424                     INLVLE          equ	1060	;# 
 12963   000425                     IOCEP           equ	1061	;# 
 12964   000426                     IOCEN           equ	1062	;# 
 12965   000427                     IOCEF           equ	1063	;# 
 12966   000440                     NCO1ACC         equ	1088	;# 
 12967   000440                     NCO1ACCL        equ	1088	;# 
 12968   000441                     NCO1ACCH        equ	1089	;# 
 12969   000442                     NCO1ACCU        equ	1090	;# 
 12970   000443                     NCO1INC         equ	1091	;# 
 12971   000443                     NCO1INCL        equ	1091	;# 
 12972   000444                     NCO1INCH        equ	1092	;# 
 12973   000445                     NCO1INCU        equ	1093	;# 
 12974   000446                     NCO1CON         equ	1094	;# 
 12975   000447                     NCO1CLK         equ	1095	;# 
 12976   000448                     NCO2ACC         equ	1096	;# 
 12977   000448                     NCO2ACCL        equ	1096	;# 
 12978   000449                     NCO2ACCH        equ	1097	;# 
 12979   00044A                     NCO2ACCU        equ	1098	;# 
 12980   00044B                     NCO2INC         equ	1099	;# 
 12981   00044B                     NCO2INCL        equ	1099	;# 
 12982   00044C                     NCO2INCH        equ	1100	;# 
 12983   00044D                     NCO2INCU        equ	1101	;# 
 12984   00044E                     NCO2CON         equ	1102	;# 
 12985   00044F                     NCO2CLK         equ	1103	;# 
 12986   000450                     NCO3ACC         equ	1104	;# 
 12987   000450                     NCO3ACCL        equ	1104	;# 
 12988   000451                     NCO3ACCH        equ	1105	;# 
 12989   000452                     NCO3ACCU        equ	1106	;# 
 12990   000453                     NCO3INC         equ	1107	;# 
 12991   000453                     NCO3INCL        equ	1107	;# 
 12992   000454                     NCO3INCH        equ	1108	;# 
 12993   000455                     NCO3INCU        equ	1109	;# 
 12994   000456                     NCO3CON         equ	1110	;# 
 12995   000457                     NCO3CLK         equ	1111	;# 
 12996   000458                     FSCMCON         equ	1112	;# 
 12997   000459                     IVTLOCK         equ	1113	;# 
 12998   00045A                     IVTAD           equ	1114	;# 
 12999   00045A                     IVTADL          equ	1114	;# 
 13000   00045B                     IVTADH          equ	1115	;# 
 13001   00045C                     IVTADU          equ	1116	;# 
 13002   00045D                     IVTBASE         equ	1117	;# 
 13003   00045D                     IVTBASEL        equ	1117	;# 
 13004   00045E                     IVTBASEH        equ	1118	;# 
 13005   00045F                     IVTBASEU        equ	1119	;# 
 13006   000460                     PWM1ERS         equ	1120	;# 
 13007   000461                     PWM1CLK         equ	1121	;# 
 13008   000462                     PWM1LDS         equ	1122	;# 
 13009   000463                     PWM1PR          equ	1123	;# 
 13010   000463                     PWM1PRL         equ	1123	;# 
 13011   000464                     PWM1PRH         equ	1124	;# 
 13012   000465                     PWM1CPRE        equ	1125	;# 
 13013   000466                     PWM1PIPOS       equ	1126	;# 
 13014   000467                     PWM1GIR         equ	1127	;# 
 13015   000468                     PWM1GIE         equ	1128	;# 
 13016   000469                     PWM1CON         equ	1129	;# 
 13017   00046A                     PWM1S1CFG       equ	1130	;# 
 13018   00046B                     PWM1S1P1        equ	1131	;# 
 13019   00046B                     PWM1S1P1L       equ	1131	;# 
 13020   00046C                     PWM1S1P1H       equ	1132	;# 
 13021   00046D                     PWM1S1P2        equ	1133	;# 
 13022   00046D                     PWM1S1P2L       equ	1133	;# 
 13023   00046E                     PWM1S1P2H       equ	1134	;# 
 13024   00046F                     PWM2ERS         equ	1135	;# 
 13025   000470                     PWM2CLK         equ	1136	;# 
 13026   000471                     PWM2LDS         equ	1137	;# 
 13027   000472                     PWM2PR          equ	1138	;# 
 13028   000472                     PWM2PRL         equ	1138	;# 
 13029   000473                     PWM2PRH         equ	1139	;# 
 13030   000474                     PWM2CPRE        equ	1140	;# 
 13031   000475                     PWM2PIPOS       equ	1141	;# 
 13032   000476                     PWM2GIR         equ	1142	;# 
 13033   000477                     PWM2GIE         equ	1143	;# 
 13034   000478                     PWM2CON         equ	1144	;# 
 13035   000479                     PWM2S1CFG       equ	1145	;# 
 13036   00047A                     PWM2S1P1        equ	1146	;# 
 13037   00047A                     PWM2S1P1L       equ	1146	;# 
 13038   00047B                     PWM2S1P1H       equ	1147	;# 
 13039   00047C                     PWM2S1P2        equ	1148	;# 
 13040   00047C                     PWM2S1P2L       equ	1148	;# 
 13041   00047D                     PWM2S1P2H       equ	1149	;# 
 13042   00047E                     PWM3ERS         equ	1150	;# 
 13043   00047F                     PWM3CLK         equ	1151	;# 
 13044   000480                     PWM3LDS         equ	1152	;# 
 13045   000481                     PWM3PR          equ	1153	;# 
 13046   000481                     PWM3PRL         equ	1153	;# 
 13047   000482                     PWM3PRH         equ	1154	;# 
 13048   000483                     PWM3CPRE        equ	1155	;# 
 13049   000484                     PWM3PIPOS       equ	1156	;# 
 13050   000485                     PWM3GIR         equ	1157	;# 
 13051   000486                     PWM3GIE         equ	1158	;# 
 13052   000487                     PWM3CON         equ	1159	;# 
 13053   000488                     PWM3S1CFG       equ	1160	;# 
 13054   000489                     PWM3S1P1        equ	1161	;# 
 13055   000489                     PWM3S1P1L       equ	1161	;# 
 13056   00048A                     PWM3S1P1H       equ	1162	;# 
 13057   00048B                     PWM3S1P2        equ	1163	;# 
 13058   00048B                     PWM3S1P2L       equ	1163	;# 
 13059   00048C                     PWM3S1P2H       equ	1164	;# 
 13060   00048D                     PWM4ERS         equ	1165	;# 
 13061   00048E                     PWM4CLK         equ	1166	;# 
 13062   00048F                     PWM4LDS         equ	1167	;# 
 13063   000490                     PWM4PR          equ	1168	;# 
 13064   000490                     PWM4PRL         equ	1168	;# 
 13065   000491                     PWM4PRH         equ	1169	;# 
 13066   000492                     PWM4CPRE        equ	1170	;# 
 13067   000493                     PWM4PIPOS       equ	1171	;# 
 13068   000494                     PWM4GIR         equ	1172	;# 
 13069   000495                     PWM4GIE         equ	1173	;# 
 13070   000496                     PWM4CON         equ	1174	;# 
 13071   000497                     PWM4S1CFG       equ	1175	;# 
 13072   000498                     PWM4S1P1        equ	1176	;# 
 13073   000498                     PWM4S1P1L       equ	1176	;# 
 13074   000499                     PWM4S1P1H       equ	1177	;# 
 13075   00049A                     PWM4S1P2        equ	1178	;# 
 13076   00049A                     PWM4S1P2L       equ	1178	;# 
 13077   00049B                     PWM4S1P2H       equ	1179	;# 
 13078   00049C                     PWMLOAD         equ	1180	;# 
 13079   00049D                     PWMEN           equ	1181	;# 
 13080   00049E                     PIE0            equ	1182	;# 
 13081   00049F                     PIE1            equ	1183	;# 
 13082   0004A0                     PIE2            equ	1184	;# 
 13083   0004A1                     PIE3            equ	1185	;# 
 13084   0004A2                     PIE4            equ	1186	;# 
 13085   0004A3                     PIE5            equ	1187	;# 
 13086   0004A4                     PIE6            equ	1188	;# 
 13087   0004A5                     PIE7            equ	1189	;# 
 13088   0004A6                     PIE8            equ	1190	;# 
 13089   0004A7                     PIE9            equ	1191	;# 
 13090   0004A8                     PIE10           equ	1192	;# 
 13091   0004A9                     PIE11           equ	1193	;# 
 13092   0004AA                     PIE12           equ	1194	;# 
 13093   0004AB                     PIE13           equ	1195	;# 
 13094   0004AC                     PIE14           equ	1196	;# 
 13095   0004AD                     PIE15           equ	1197	;# 
 13096   0004AE                     PIR0            equ	1198	;# 
 13097   0004AF                     PIR1            equ	1199	;# 
 13098   0004B0                     PIR2            equ	1200	;# 
 13099   0004B1                     PIR3            equ	1201	;# 
 13100   0004B2                     PIR4            equ	1202	;# 
 13101   0004B3                     PIR5            equ	1203	;# 
 13102   0004B4                     PIR6            equ	1204	;# 
 13103   0004B5                     PIR7            equ	1205	;# 
 13104   0004B6                     PIR8            equ	1206	;# 
 13105   0004B7                     PIR9            equ	1207	;# 
 13106   0004B8                     PIR10           equ	1208	;# 
 13107   0004B9                     PIR11           equ	1209	;# 
 13108   0004BA                     PIR12           equ	1210	;# 
 13109   0004BB                     PIR13           equ	1211	;# 
 13110   0004BC                     PIR14           equ	1212	;# 
 13111   0004BD                     PIR15           equ	1213	;# 
 13112   0004BE                     LATA            equ	1214	;# 
 13113   0004BF                     LATB            equ	1215	;# 
 13114   0004C0                     LATC            equ	1216	;# 
 13115   0004C6                     TRISA           equ	1222	;# 
 13116   0004C7                     TRISB           equ	1223	;# 
 13117   0004C8                     TRISC           equ	1224	;# 
 13118   0004CA                     TRISE           equ	1226	;# 
 13119   0004CE                     PORTA           equ	1230	;# 
 13120   0004CF                     PORTB           equ	1231	;# 
 13121   0004D0                     PORTC           equ	1232	;# 
 13122   0004D2                     PORTE           equ	1234	;# 
 13123   0004D6                     INTCON0         equ	1238	;# 
 13124   0004D7                     INTCON1         equ	1239	;# 
 13125   0004D8                     STATUS          equ	1240	;# 
 13126   0004D9                     FSR2            equ	1241	;# 
 13127   0004D9                     FSR2L           equ	1241	;# 
 13128   0004DA                     FSR2H           equ	1242	;# 
 13129   0004DB                     PLUSW2          equ	1243	;# 
 13130   0004DC                     PREINC2         equ	1244	;# 
 13131   0004DD                     POSTDEC2        equ	1245	;# 
 13132   0004DE                     POSTINC2        equ	1246	;# 
 13133   0004DF                     INDF2           equ	1247	;# 
 13134   0004E0                     BSR             equ	1248	;# 
 13135   0004E1                     FSR1            equ	1249	;# 
 13136   0004E1                     FSR1L           equ	1249	;# 
 13137   0004E2                     FSR1H           equ	1250	;# 
 13138   0004E3                     PLUSW1          equ	1251	;# 
 13139   0004E4                     PREINC1         equ	1252	;# 
 13140   0004E5                     POSTDEC1        equ	1253	;# 
 13141   0004E6                     POSTINC1        equ	1254	;# 
 13142   0004E7                     INDF1           equ	1255	;# 
 13143   0004E8                     WREG            equ	1256	;# 
 13144   0004E9                     FSR0            equ	1257	;# 
 13145   0004E9                     FSR0L           equ	1257	;# 
 13146   0004EA                     FSR0H           equ	1258	;# 
 13147   0004EB                     PLUSW0          equ	1259	;# 
 13148   0004EC                     PREINC0         equ	1260	;# 
 13149   0004ED                     POSTDEC0        equ	1261	;# 
 13150   0004EE                     POSTINC0        equ	1262	;# 
 13151   0004EF                     INDF0           equ	1263	;# 
 13152   0004F0                     PCON0           equ	1264	;# 
 13153   0004F1                     PCON1           equ	1265	;# 
 13154   0004F2                     CPUDOZE         equ	1266	;# 
 13155   0004F3                     PROD            equ	1267	;# 
 13156   0004F3                     PRODL           equ	1267	;# 
 13157   0004F4                     PRODH           equ	1268	;# 
 13158   0004F5                     TABLAT          equ	1269	;# 
 13159   0004F6                     TBLPTR          equ	1270	;# 
 13160   0004F6                     TBLPTRL         equ	1270	;# 
 13161   0004F7                     TBLPTRH         equ	1271	;# 
 13162   0004F8                     TBLPTRU         equ	1272	;# 
 13163   0004F9                     PCLAT           equ	1273	;# 
 13164   0004F9                     PCL             equ	1273	;# 
 13165   0004FA                     PCLATH          equ	1274	;# 
 13166   0004FB                     PCLATU          equ	1275	;# 
 13167   0004FC                     STKPTR          equ	1276	;# 
 13168   0004FD                     TOS             equ	1277	;# 
 13169   0004FD                     TOSL            equ	1277	;# 
 13170   0004FE                     TOSH            equ	1278	;# 
 13171   0004FF                     TOSU            equ	1279	;# 
 13172   000038                     BOOTREG         equ	56	;# 
 13173   000039                     CLKRCON         equ	57	;# 
 13174   00003A                     CLKRCLK         equ	58	;# 
 13175   000040                     NVMCON0         equ	64	;# 
 13176   000041                     NVMCON1         equ	65	;# 
 13177   000042                     NVMLOCK         equ	66	;# 
 13178   000043                     NVMADR          equ	67	;# 
 13179   000043                     NVMADRL         equ	67	;# 
 13180   000044                     NVMADRH         equ	68	;# 
 13181   000045                     NVMADRU         equ	69	;# 
 13182   000046                     NVMDAT          equ	70	;# 
 13183   000046                     NVMDATL         equ	70	;# 
 13184   000047                     NVMDATH         equ	71	;# 
 13185   000048                     VREGCON         equ	72	;# 
 13186   000049                     BORCON          equ	73	;# 
 13187   00004A                     HLVDCON0        equ	74	;# 
 13188   00004B                     HLVDCON1        equ	75	;# 
 13189   00004C                     ZCDCON          equ	76	;# 
 13190   000060                     PMD0            equ	96	;# 
 13191   000061                     PMD1            equ	97	;# 
 13192   000062                     PMD2            equ	98	;# 
 13193   000063                     PMD3            equ	99	;# 
 13194   000064                     PMD4            equ	100	;# 
 13195   000065                     PMD5            equ	101	;# 
 13196   000066                     PMD6            equ	102	;# 
 13197   000067                     PMD7            equ	103	;# 
 13198   000068                     PMD8            equ	104	;# 
 13199   00006A                     MD1CON0         equ	106	;# 
 13200   00006B                     MD1CON1         equ	107	;# 
 13201   00006C                     MD1SRC          equ	108	;# 
 13202   00006D                     MD1CARL         equ	109	;# 
 13203   00006E                     MD1CARH         equ	110	;# 
 13204   00006F                     CMOUT           equ	111	;# 
 13205   000070                     CM1CON0         equ	112	;# 
 13206   000071                     CM1CON1         equ	113	;# 
 13207   000072                     CM1NCH          equ	114	;# 
 13208   000073                     CM1PCH          equ	115	;# 
 13209   000074                     CM2CON0         equ	116	;# 
 13210   000075                     CM2CON1         equ	117	;# 
 13211   000076                     CM2NCH          equ	118	;# 
 13212   000077                     CM2PCH          equ	119	;# 
 13213   000078                     WDTCON0         equ	120	;# 
 13214   000079                     WDTCON1         equ	121	;# 
 13215   00007A                     WDTPSL          equ	122	;# 
 13216   00007B                     WDTPSH          equ	123	;# 
 13217   00007C                     WDTTMR          equ	124	;# 
 13218   00007D                     DAC1DAT         equ	125	;# 
 13219   00007D                     DAC1DATL        equ	125	;# 
 13220   00007F                     DAC1CON         equ	127	;# 
 13221   000080                     SPI1RXB         equ	128	;# 
 13222   000081                     SPI1TXB         equ	129	;# 
 13223   000082                     SPI1TCNT        equ	130	;# 
 13224   000082                     SPI1TCNTL       equ	130	;# 
 13225   000083                     SPI1TCNTH       equ	131	;# 
 13226   000084                     SPI1CON0        equ	132	;# 
 13227   000085                     SPI1CON1        equ	133	;# 
 13228   000086                     SPI1CON2        equ	134	;# 
 13229   000087                     SPI1STATUS      equ	135	;# 
 13230   000088                     SPI1TWIDTH      equ	136	;# 
 13231   000089                     SPI1BAUD        equ	137	;# 
 13232   00008A                     SPI1INTF        equ	138	;# 
 13233   00008B                     SPI1INTE        equ	139	;# 
 13234   00008C                     SPI1CLK         equ	140	;# 
 13235   00008D                     SPI2RXB         equ	141	;# 
 13236   00008E                     SPI2TXB         equ	142	;# 
 13237   00008F                     SPI2TCNT        equ	143	;# 
 13238   00008F                     SPI2TCNTL       equ	143	;# 
 13239   000090                     SPI2TCNTH       equ	144	;# 
 13240   000091                     SPI2CON0        equ	145	;# 
 13241   000092                     SPI2CON1        equ	146	;# 
 13242   000093                     SPI2CON2        equ	147	;# 
 13243   000094                     SPI2STATUS      equ	148	;# 
 13244   000095                     SPI2TWIDTH      equ	149	;# 
 13245   000096                     SPI2BAUD        equ	150	;# 
 13246   000097                     SPI2INTF        equ	151	;# 
 13247   000098                     SPI2INTE        equ	152	;# 
 13248   000099                     SPI2CLK         equ	153	;# 
 13249   0000AC                     ACTCON          equ	172	;# 
 13250   0000AD                     OSCCON1         equ	173	;# 
 13251   0000AE                     OSCCON2         equ	174	;# 
 13252   0000AF                     OSCCON3         equ	175	;# 
 13253   0000B0                     OSCTUNE         equ	176	;# 
 13254   0000B1                     OSCFRQ          equ	177	;# 
 13255   0000B1                     OSCFREQ         equ	177	;# 
 13256   0000B2                     OSCSTAT         equ	178	;# 
 13257   0000B2                     OSCSTAT1        equ	178	;# 
 13258   0000B3                     OSCEN           equ	179	;# 
 13259   0000B4                     PRLOCK          equ	180	;# 
 13260   0000B5                     SCANPR          equ	181	;# 
 13261   0000B6                     DMA1PR          equ	182	;# 
 13262   0000B7                     DMA2PR          equ	183	;# 
 13263   0000B8                     DMA3PR          equ	184	;# 
 13264   0000B9                     DMA4PR          equ	185	;# 
 13265   0000BA                     DMA5PR          equ	186	;# 
 13266   0000BB                     DMA6PR          equ	187	;# 
 13267   0000BC                     DMA7PR          equ	188	;# 
 13268   0000BD                     DMA8PR          equ	189	;# 
 13269   0000BE                     MAINPR          equ	190	;# 
 13270   0000BF                     ISRPR           equ	191	;# 
 13271   0000D4                     CLCDATA         equ	212	;# 
 13272   0000D5                     CLCSELECT       equ	213	;# 
 13273   0000D6                     CLCnCON         equ	214	;# 
 13274   0000D7                     CLCnPOL         equ	215	;# 
 13275   0000D8                     CLCnSEL0        equ	216	;# 
 13276   0000D9                     CLCnSEL1        equ	217	;# 
 13277   0000DA                     CLCnSEL2        equ	218	;# 
 13278   0000DB                     CLCnSEL3        equ	219	;# 
 13279   0000DC                     CLCnGLS0        equ	220	;# 
 13280   0000DD                     CLCnGLS1        equ	221	;# 
 13281   0000DE                     CLCnGLS2        equ	222	;# 
 13282   0000DF                     CLCnGLS3        equ	223	;# 
 13283   0000E8                     DMASELECT       equ	232	;# 
 13284   0000E9                     DMAnBUF         equ	233	;# 
 13285   0000EA                     DMAnDCNT        equ	234	;# 
 13286   0000EA                     DMAnDCNTL       equ	234	;# 
 13287   0000EB                     DMAnDCNTH       equ	235	;# 
 13288   0000EC                     DMAnDPTR        equ	236	;# 
 13289   0000EC                     DMAnDPTRL       equ	236	;# 
 13290   0000ED                     DMAnDPTRH       equ	237	;# 
 13291   0000EE                     DMAnDSZ         equ	238	;# 
 13292   0000EE                     DMAnDSZL        equ	238	;# 
 13293   0000EF                     DMAnDSZH        equ	239	;# 
 13294   0000F0                     DMAnDSA         equ	240	;# 
 13295   0000F0                     DMAnDSAL        equ	240	;# 
 13296   0000F1                     DMAnDSAH        equ	241	;# 
 13297   0000F2                     DMAnSCNT        equ	242	;# 
 13298   0000F2                     DMAnSCNTL       equ	242	;# 
 13299   0000F3                     DMAnSCNTH       equ	243	;# 
 13300   0000F4                     DMAnSPTR        equ	244	;# 
 13301   0000F4                     DMAnSPTRL       equ	244	;# 
 13302   0000F5                     DMAnSPTRH       equ	245	;# 
 13303   0000F6                     DMAnSPTRU       equ	246	;# 
 13304   0000F7                     DMAnSSZ         equ	247	;# 
 13305   0000F7                     DMAnSSZL        equ	247	;# 
 13306   0000F8                     DMAnSSZH        equ	248	;# 
 13307   0000F9                     DMAnSSA         equ	249	;# 
 13308   0000F9                     DMAnSSAL        equ	249	;# 
 13309   0000FA                     DMAnSSAH        equ	250	;# 
 13310   0000FB                     DMAnSSAU        equ	251	;# 
 13311   0000FC                     DMAnCON0        equ	252	;# 
 13312   0000FD                     DMAnCON1        equ	253	;# 
 13313   0000FE                     DMAnAIRQ        equ	254	;# 
 13314   0000FF                     DMAnSIRQ        equ	255	;# 
 13315   000100                     C1CONL          equ	256	;# 
 13316   000101                     C1CONH          equ	257	;# 
 13317   000102                     C1CONU          equ	258	;# 
 13318   000103                     C1CONT          equ	259	;# 
 13319   000104                     C1NBTCFGL       equ	260	;# 
 13320   000105                     C1NBTCFGH       equ	261	;# 
 13321   000106                     C1NBTCFGU       equ	262	;# 
 13322   000107                     C1NBTCFGT       equ	263	;# 
 13323   000108                     C1DBTCFGL       equ	264	;# 
 13324   000109                     C1DBTCFGH       equ	265	;# 
 13325   00010A                     C1DBTCFGU       equ	266	;# 
 13326   00010B                     C1DBTCFGT       equ	267	;# 
 13327   00010C                     C1TDCL          equ	268	;# 
 13328   00010D                     C1TDCH          equ	269	;# 
 13329   00010E                     C1TDCU          equ	270	;# 
 13330   000110                     C1TBC           equ	272	;# 
 13331   000110                     C1TBCL          equ	272	;# 
 13332   000111                     C1TBCH          equ	273	;# 
 13333   000112                     C1TBCU          equ	274	;# 
 13334   000113                     C1TBCT          equ	275	;# 
 13335   000114                     C1TSCONL        equ	276	;# 
 13336   000115                     C1TSCONH        equ	277	;# 
 13337   000116                     C1TSCONU        equ	278	;# 
 13338   000117                     C1TSCONT        equ	279	;# 
 13339   000118                     C1VECL          equ	280	;# 
 13340   000119                     C1VECH          equ	281	;# 
 13341   00011A                     C1VECU          equ	282	;# 
 13342   00011B                     C1VECT          equ	283	;# 
 13343   00011C                     C1INTL          equ	284	;# 
 13344   00011D                     C1INTH          equ	285	;# 
 13345   00011E                     C1INTU          equ	286	;# 
 13346   00011F                     C1INTT          equ	287	;# 
 13347   000120                     C1RXIF          equ	288	;# 
 13348   000120                     C1RXIFL         equ	288	;# 
 13349   000121                     C1RXIFH         equ	289	;# 
 13350   000122                     C1RXIFU         equ	290	;# 
 13351   000123                     C1RXIFT         equ	291	;# 
 13352   000124                     C1TXIF          equ	292	;# 
 13353   000124                     C1TXIFL         equ	292	;# 
 13354   000125                     C1TXIFH         equ	293	;# 
 13355   000126                     C1TXIFU         equ	294	;# 
 13356   000127                     C1TXIFT         equ	295	;# 
 13357   000128                     C1RXOVIF        equ	296	;# 
 13358   000128                     C1RXOVIFL       equ	296	;# 
 13359   000129                     C1RXOVIFH       equ	297	;# 
 13360   00012A                     C1RXOVIFU       equ	298	;# 
 13361   00012B                     C1RXOVIFT       equ	299	;# 
 13362   00012C                     C1TXATIF        equ	300	;# 
 13363   00012C                     C1TXATIFL       equ	300	;# 
 13364   00012D                     C1TXATIFH       equ	301	;# 
 13365   00012E                     C1TXATIFU       equ	302	;# 
 13366   00012F                     C1TXATIFT       equ	303	;# 
 13367   000130                     C1TXREQ         equ	304	;# 
 13368   000130                     C1TXREQL        equ	304	;# 
 13369   000131                     C1TXREQH        equ	305	;# 
 13370   000132                     C1TXREQU        equ	306	;# 
 13371   000133                     C1TXREQT        equ	307	;# 
 13372   000134                     C1TRECL         equ	308	;# 
 13373   000135                     C1TRECH         equ	309	;# 
 13374   000136                     C1TRECU         equ	310	;# 
 13375   000137                     C1TRECT         equ	311	;# 
 13376   000138                     C1BDIAG0L       equ	312	;# 
 13377   000139                     C1BDIAG0H       equ	313	;# 
 13378   00013C                     C1BDIAG1L       equ	316	;# 
 13379   00013D                     C1BDIAG1H       equ	317	;# 
 13380   00013E                     C1BDIAG1U       equ	318	;# 
 13381   00013F                     C1BDIAG1T       equ	319	;# 
 13382   000140                     C1TEFCONL       equ	320	;# 
 13383   000141                     C1TEFCONH       equ	321	;# 
 13384   000142                     C1TEFCONU       equ	322	;# 
 13385   000143                     C1TEFCONT       equ	323	;# 
 13386   000144                     C1TEFSTAL       equ	324	;# 
 13387   000145                     C1TEFSTAH       equ	325	;# 
 13388   000146                     C1TEFSTAU       equ	326	;# 
 13389   000147                     C1TEFSTAT       equ	327	;# 
 13390   000148                     C1TEFUA         equ	328	;# 
 13391   000148                     C1TEFUAL        equ	328	;# 
 13392   000149                     C1TEFUAH        equ	329	;# 
 13393   00014A                     C1TEFUAU        equ	330	;# 
 13394   00014B                     C1TEFUAT        equ	331	;# 
 13395   00014C                     C1FIFOBA        equ	332	;# 
 13396   00014C                     C1FIFOBAL       equ	332	;# 
 13397   00014D                     C1FIFOBAH       equ	333	;# 
 13398   00014E                     C1FIFOBAU       equ	334	;# 
 13399   00014F                     C1FIFOBAT       equ	335	;# 
 13400   000150                     C1TXQCONL       equ	336	;# 
 13401   000151                     C1TXQCONH       equ	337	;# 
 13402   000152                     C1TXQCONU       equ	338	;# 
 13403   000153                     C1TXQCONT       equ	339	;# 
 13404   000154                     C1TXQSTAL       equ	340	;# 
 13405   000155                     C1TXQSTAH       equ	341	;# 
 13406   000156                     C1TXQSTAU       equ	342	;# 
 13407   000157                     C1TXQSTAT       equ	343	;# 
 13408   000158                     C1TXQUA         equ	344	;# 
 13409   000158                     C1TXQUAL        equ	344	;# 
 13410   000159                     C1TXQUAH        equ	345	;# 
 13411   00015A                     C1TXQUAU        equ	346	;# 
 13412   00015B                     C1TXQUAT        equ	347	;# 
 13413   00015C                     C1FIFOCON1      equ	348	;# 
 13414   00015C                     C1FIFOCON1L     equ	348	;# 
 13415   00015D                     C1FIFOCON1H     equ	349	;# 
 13416   00015E                     C1FIFOCON1U     equ	350	;# 
 13417   00015F                     C1FIFOCON1T     equ	351	;# 
 13418   000160                     C1FIFOSTA1      equ	352	;# 
 13419   000160                     C1FIFOSTA1L     equ	352	;# 
 13420   000161                     C1FIFOSTA1H     equ	353	;# 
 13421   000162                     C1FIFOSTA1U     equ	354	;# 
 13422   000163                     C1FIFOSTA1T     equ	355	;# 
 13423   000164                     C1FIFOUA1       equ	356	;# 
 13424   000164                     C1FIFOUA1L      equ	356	;# 
 13425   000165                     C1FIFOUA1H      equ	357	;# 
 13426   000166                     C1FIFOUA1U      equ	358	;# 
 13427   000167                     C1FIFOUA1T      equ	359	;# 
 13428   000168                     C1FIFOCON2      equ	360	;# 
 13429   000168                     C1FIFOCON2L     equ	360	;# 
 13430   000169                     C1FIFOCON2H     equ	361	;# 
 13431   00016A                     C1FIFOCON2U     equ	362	;# 
 13432   00016B                     C1FIFOCON2T     equ	363	;# 
 13433   00016C                     C1FIFOSTA2      equ	364	;# 
 13434   00016C                     C1FIFOSTA2L     equ	364	;# 
 13435   00016D                     C1FIFOSTA2H     equ	365	;# 
 13436   00016E                     C1FIFOSTA2U     equ	366	;# 
 13437   00016F                     C1FIFOSTA2T     equ	367	;# 
 13438   000170                     C1FIFOUA2       equ	368	;# 
 13439   000170                     C1FIFOUA2L      equ	368	;# 
 13440   000171                     C1FIFOUA2H      equ	369	;# 
 13441   000172                     C1FIFOUA2U      equ	370	;# 
 13442   000173                     C1FIFOUA2T      equ	371	;# 
 13443   000174                     C1FIFOCON3      equ	372	;# 
 13444   000174                     C1FIFOCON3L     equ	372	;# 
 13445   000175                     C1FIFOCON3H     equ	373	;# 
 13446   000176                     C1FIFOCON3U     equ	374	;# 
 13447   000177                     C1FIFOCON3T     equ	375	;# 
 13448   000178                     C1FIFOSTA3      equ	376	;# 
 13449   000178                     C1FIFOSTA3L     equ	376	;# 
 13450   000179                     C1FIFOSTA3H     equ	377	;# 
 13451   00017A                     C1FIFOSTA3U     equ	378	;# 
 13452   00017B                     C1FIFOSTA3T     equ	379	;# 
 13453   00017C                     C1FIFOUA3       equ	380	;# 
 13454   00017C                     C1FIFOUA3L      equ	380	;# 
 13455   00017D                     C1FIFOUA3H      equ	381	;# 
 13456   00017E                     C1FIFOUA3U      equ	382	;# 
 13457   00017F                     C1FIFOUA3T      equ	383	;# 
 13458   000180                     C1FLTCON0L      equ	384	;# 
 13459   000181                     C1FLTCON0H      equ	385	;# 
 13460   000182                     C1FLTCON0U      equ	386	;# 
 13461   000183                     C1FLTCON0T      equ	387	;# 
 13462   000184                     C1FLTCON1L      equ	388	;# 
 13463   000185                     C1FLTCON1H      equ	389	;# 
 13464   000186                     C1FLTCON1U      equ	390	;# 
 13465   000187                     C1FLTCON1T      equ	391	;# 
 13466   000188                     C1FLTCON2L      equ	392	;# 
 13467   000189                     C1FLTCON2H      equ	393	;# 
 13468   00018A                     C1FLTCON2U      equ	394	;# 
 13469   00018B                     C1FLTCON2T      equ	395	;# 
 13470   00018C                     C1FLTOBJ0       equ	396	;# 
 13471   00018C                     C1FLTOBJ0L      equ	396	;# 
 13472   00018D                     C1FLTOBJ0H      equ	397	;# 
 13473   00018E                     C1FLTOBJ0U      equ	398	;# 
 13474   00018F                     C1FLTOBJ0T      equ	399	;# 
 13475   000190                     C1MASK0         equ	400	;# 
 13476   000190                     C1MASK0L        equ	400	;# 
 13477   000191                     C1MASK0H        equ	401	;# 
 13478   000192                     C1MASK0U        equ	402	;# 
 13479   000193                     C1MASK0T        equ	403	;# 
 13480   000194                     C1FLTOBJ1       equ	404	;# 
 13481   000194                     C1FLTOBJ1L      equ	404	;# 
 13482   000195                     C1FLTOBJ1H      equ	405	;# 
 13483   000196                     C1FLTOBJ1U      equ	406	;# 
 13484   000197                     C1FLTOBJ1T      equ	407	;# 
 13485   000198                     C1MASK1         equ	408	;# 
 13486   000198                     C1MASK1L        equ	408	;# 
 13487   000199                     C1MASK1H        equ	409	;# 
 13488   00019A                     C1MASK1U        equ	410	;# 
 13489   00019B                     C1MASK1T        equ	411	;# 
 13490   00019C                     C1FLTOBJ2       equ	412	;# 
 13491   00019C                     C1FLTOBJ2L      equ	412	;# 
 13492   00019D                     C1FLTOBJ2H      equ	413	;# 
 13493   00019E                     C1FLTOBJ2U      equ	414	;# 
 13494   00019F                     C1FLTOBJ2T      equ	415	;# 
 13495   0001A0                     C1MASK2         equ	416	;# 
 13496   0001A0                     C1MASK2L        equ	416	;# 
 13497   0001A1                     C1MASK2H        equ	417	;# 
 13498   0001A2                     C1MASK2U        equ	418	;# 
 13499   0001A3                     C1MASK2T        equ	419	;# 
 13500   0001A4                     C1FLTOBJ3       equ	420	;# 
 13501   0001A4                     C1FLTOBJ3L      equ	420	;# 
 13502   0001A5                     C1FLTOBJ3H      equ	421	;# 
 13503   0001A6                     C1FLTOBJ3U      equ	422	;# 
 13504   0001A7                     C1FLTOBJ3T      equ	423	;# 
 13505   0001A8                     C1MASK3         equ	424	;# 
 13506   0001A8                     C1MASK3L        equ	424	;# 
 13507   0001A9                     C1MASK3H        equ	425	;# 
 13508   0001AA                     C1MASK3U        equ	426	;# 
 13509   0001AB                     C1MASK3T        equ	427	;# 
 13510   0001AC                     C1FLTOBJ4       equ	428	;# 
 13511   0001AC                     C1FLTOBJ4L      equ	428	;# 
 13512   0001AD                     C1FLTOBJ4H      equ	429	;# 
 13513   0001AE                     C1FLTOBJ4U      equ	430	;# 
 13514   0001AF                     C1FLTOBJ4T      equ	431	;# 
 13515   0001B0                     C1MASK4         equ	432	;# 
 13516   0001B0                     C1MASK4L        equ	432	;# 
 13517   0001B1                     C1MASK4H        equ	433	;# 
 13518   0001B2                     C1MASK4U        equ	434	;# 
 13519   0001B3                     C1MASK4T        equ	435	;# 
 13520   0001B4                     C1FLTOBJ5       equ	436	;# 
 13521   0001B4                     C1FLTOBJ5L      equ	436	;# 
 13522   0001B5                     C1FLTOBJ5H      equ	437	;# 
 13523   0001B6                     C1FLTOBJ5U      equ	438	;# 
 13524   0001B7                     C1FLTOBJ5T      equ	439	;# 
 13525   0001B8                     C1MASK5         equ	440	;# 
 13526   0001B8                     C1MASK5L        equ	440	;# 
 13527   0001B9                     C1MASK5H        equ	441	;# 
 13528   0001BA                     C1MASK5U        equ	442	;# 
 13529   0001BB                     C1MASK5T        equ	443	;# 
 13530   0001BC                     C1FLTOBJ6       equ	444	;# 
 13531   0001BC                     C1FLTOBJ6L      equ	444	;# 
 13532   0001BD                     C1FLTOBJ6H      equ	445	;# 
 13533   0001BE                     C1FLTOBJ6U      equ	446	;# 
 13534   0001BF                     C1FLTOBJ6T      equ	447	;# 
 13535   0001C0                     C1MASK6         equ	448	;# 
 13536   0001C0                     C1MASK6L        equ	448	;# 
 13537   0001C1                     C1MASK6H        equ	449	;# 
 13538   0001C2                     C1MASK6U        equ	450	;# 
 13539   0001C3                     C1MASK6T        equ	451	;# 
 13540   0001C4                     C1FLTOBJ7       equ	452	;# 
 13541   0001C4                     C1FLTOBJ7L      equ	452	;# 
 13542   0001C5                     C1FLTOBJ7H      equ	453	;# 
 13543   0001C6                     C1FLTOBJ7U      equ	454	;# 
 13544   0001C7                     C1FLTOBJ7T      equ	455	;# 
 13545   0001C8                     C1MASK7         equ	456	;# 
 13546   0001C8                     C1MASK7L        equ	456	;# 
 13547   0001C9                     C1MASK7H        equ	457	;# 
 13548   0001CA                     C1MASK7U        equ	458	;# 
 13549   0001CB                     C1MASK7T        equ	459	;# 
 13550   0001CC                     C1FLTOBJ8       equ	460	;# 
 13551   0001CC                     C1FLTOBJ8L      equ	460	;# 
 13552   0001CD                     C1FLTOBJ8H      equ	461	;# 
 13553   0001CE                     C1FLTOBJ8U      equ	462	;# 
 13554   0001CF                     C1FLTOBJ8T      equ	463	;# 
 13555   0001D0                     C1MASK8         equ	464	;# 
 13556   0001D0                     C1MASK8L        equ	464	;# 
 13557   0001D1                     C1MASK8H        equ	465	;# 
 13558   0001D2                     C1MASK8U        equ	466	;# 
 13559   0001D3                     C1MASK8T        equ	467	;# 
 13560   0001D4                     C1FLTOBJ9       equ	468	;# 
 13561   0001D4                     C1FLTOBJ9L      equ	468	;# 
 13562   0001D5                     C1FLTOBJ9H      equ	469	;# 
 13563   0001D6                     C1FLTOBJ9U      equ	470	;# 
 13564   0001D7                     C1FLTOBJ9T      equ	471	;# 
 13565   0001D8                     C1MASK9         equ	472	;# 
 13566   0001D8                     C1MASK9L        equ	472	;# 
 13567   0001D9                     C1MASK9H        equ	473	;# 
 13568   0001DA                     C1MASK9U        equ	474	;# 
 13569   0001DB                     C1MASK9T        equ	475	;# 
 13570   0001DC                     C1FLTOBJ10      equ	476	;# 
 13571   0001DC                     C1FLTOBJ10L     equ	476	;# 
 13572   0001DD                     C1FLTOBJ10H     equ	477	;# 
 13573   0001DE                     C1FLTOBJ10U     equ	478	;# 
 13574   0001DF                     C1FLTOBJ10T     equ	479	;# 
 13575   0001E0                     C1MASK10        equ	480	;# 
 13576   0001E0                     C1MASK10L       equ	480	;# 
 13577   0001E1                     C1MASK10H       equ	481	;# 
 13578   0001E2                     C1MASK10U       equ	482	;# 
 13579   0001E3                     C1MASK10T       equ	483	;# 
 13580   0001E4                     C1FLTOBJ11      equ	484	;# 
 13581   0001E4                     C1FLTOBJ11L     equ	484	;# 
 13582   0001E5                     C1FLTOBJ11H     equ	485	;# 
 13583   0001E6                     C1FLTOBJ11U     equ	486	;# 
 13584   0001E7                     C1FLTOBJ11T     equ	487	;# 
 13585   0001E8                     C1MASK11        equ	488	;# 
 13586   0001E8                     C1MASK11L       equ	488	;# 
 13587   0001E9                     C1MASK11H       equ	489	;# 
 13588   0001EA                     C1MASK11U       equ	490	;# 
 13589   0001EB                     C1MASK11T       equ	491	;# 
 13590   000200                     PPSLOCK         equ	512	;# 
 13591   000201                     RA0PPS          equ	513	;# 
 13592   000202                     RA1PPS          equ	514	;# 
 13593   000203                     RA2PPS          equ	515	;# 
 13594   000204                     RA3PPS          equ	516	;# 
 13595   000205                     RA4PPS          equ	517	;# 
 13596   000206                     RA5PPS          equ	518	;# 
 13597   000207                     RA6PPS          equ	519	;# 
 13598   000208                     RA7PPS          equ	520	;# 
 13599   000209                     RB0PPS          equ	521	;# 
 13600   00020A                     RB1PPS          equ	522	;# 
 13601   00020B                     RB2PPS          equ	523	;# 
 13602   00020C                     RB3PPS          equ	524	;# 
 13603   00020D                     RB4PPS          equ	525	;# 
 13604   00020E                     RB5PPS          equ	526	;# 
 13605   00020F                     RB6PPS          equ	527	;# 
 13606   000210                     RB7PPS          equ	528	;# 
 13607   000211                     RC0PPS          equ	529	;# 
 13608   000212                     RC1PPS          equ	530	;# 
 13609   000213                     RC2PPS          equ	531	;# 
 13610   000214                     RC3PPS          equ	532	;# 
 13611   000215                     RC4PPS          equ	533	;# 
 13612   000216                     RC5PPS          equ	534	;# 
 13613   000217                     RC6PPS          equ	535	;# 
 13614   000218                     RC7PPS          equ	536	;# 
 13615   00023D                     CANRXPPS        equ	573	;# 
 13616   00023E                     INT0PPS         equ	574	;# 
 13617   00023F                     INT1PPS         equ	575	;# 
 13618   000240                     INT2PPS         equ	576	;# 
 13619   000241                     T0CKIPPS        equ	577	;# 
 13620   000242                     T1CKIPPS        equ	578	;# 
 13621   000243                     T1GPPS          equ	579	;# 
 13622   000244                     T3CKIPPS        equ	580	;# 
 13623   000245                     T3GPPS          equ	581	;# 
 13624   000246                     T5CKIPPS        equ	582	;# 
 13625   000247                     T5GPPS          equ	583	;# 
 13626   000248                     T2INPPS         equ	584	;# 
 13627   000249                     T4INPPS         equ	585	;# 
 13628   00024A                     T6INPPS         equ	586	;# 
 13629   00024B                     TUIN0PPS        equ	587	;# 
 13630   00024C                     TUIN1PPS        equ	588	;# 
 13631   00024F                     CCP1PPS         equ	591	;# 
 13632   000250                     CCP2PPS         equ	592	;# 
 13633   000251                     CCP3PPS         equ	593	;# 
 13634   000253                     PWM1ERSPPS      equ	595	;# 
 13635   000254                     PWM2ERSPPS      equ	596	;# 
 13636   000255                     PWM3ERSPPS      equ	597	;# 
 13637   000256                     PWM4ERSPPS      equ	598	;# 
 13638   000257                     PWMIN0PPS       equ	599	;# 
 13639   000258                     PWMIN1PPS       equ	600	;# 
 13640   000259                     SMT1WINPPS      equ	601	;# 
 13641   00025A                     SMT1SIGPPS      equ	602	;# 
 13642   00025B                     CWG1PPS         equ	603	;# 
 13643   00025B                     CWG1INPPS       equ	603	;# 
 13644   00025C                     CWG2PPS         equ	604	;# 
 13645   00025C                     CWG2INPPS       equ	604	;# 
 13646   00025D                     CWG3PPS         equ	605	;# 
 13647   00025D                     CWG3INPPS       equ	605	;# 
 13648   00025E                     MD1CARLPPS      equ	606	;# 
 13649   00025E                     MDCARLPPS       equ	606	;# 
 13650   00025F                     MD1CARHPPS      equ	607	;# 
 13651   00025F                     MDCARHPPS       equ	607	;# 
 13652   000260                     MD1SRCPPS       equ	608	;# 
 13653   000260                     MDSRCPPS        equ	608	;# 
 13654   000261                     CLCIN0PPS       equ	609	;# 
 13655   000262                     CLCIN1PPS       equ	610	;# 
 13656   000263                     CLCIN2PPS       equ	611	;# 
 13657   000264                     CLCIN3PPS       equ	612	;# 
 13658   000265                     CLCIN4PPS       equ	613	;# 
 13659   000266                     CLCIN5PPS       equ	614	;# 
 13660   000267                     CLCIN6PPS       equ	615	;# 
 13661   000268                     CLCIN7PPS       equ	616	;# 
 13662   000269                     ADACTPPS        equ	617	;# 
 13663   00026A                     SPI1SCKPPS      equ	618	;# 
 13664   00026B                     SPI1SDIPPS      equ	619	;# 
 13665   00026C                     SPI1SSPPS       equ	620	;# 
 13666   00026D                     SPI2SCKPPS      equ	621	;# 
 13667   00026E                     SPI2SDIPPS      equ	622	;# 
 13668   00026F                     SPI2SSPPS       equ	623	;# 
 13669   000270                     I2C1SDAPPS      equ	624	;# 
 13670   000271                     I2C1SCLPPS      equ	625	;# 
 13671   000272                     U1RXPPS         equ	626	;# 
 13672   000273                     U1CTSPPS        equ	627	;# 
 13673   000274                     U2RXPPS         equ	628	;# 
 13674   000275                     U2CTSPPS        equ	629	;# 
 13675   000276                     U3RXPPS         equ	630	;# 
 13676   000277                     U3CTSPPS        equ	631	;# 
 13677   000278                     U4RXPPS         equ	632	;# 
 13678   000279                     U4CTSPPS        equ	633	;# 
 13679   00027A                     U5RXPPS         equ	634	;# 
 13680   00027B                     U5CTSPPS        equ	635	;# 
 13681   000286                     RC4I2C          equ	646	;# 
 13682   000287                     RC3I2C          equ	647	;# 
 13683   000288                     RB2I2C          equ	648	;# 
 13684   000289                     RB1I2C          equ	649	;# 
 13685   00028A                     I2C1RXB         equ	650	;# 
 13686   00028B                     I2C1TXB         equ	651	;# 
 13687   00028C                     I2C1CNTL        equ	652	;# 
 13688   00028D                     I2C1CNTH        equ	653	;# 
 13689   00028E                     I2C1ADB0        equ	654	;# 
 13690   00028F                     I2C1ADB1        equ	655	;# 
 13691   000290                     I2C1ADR0        equ	656	;# 
 13692   000291                     I2C1ADR1        equ	657	;# 
 13693   000292                     I2C1ADR2        equ	658	;# 
 13694   000293                     I2C1ADR3        equ	659	;# 
 13695   000294                     I2C1CON0        equ	660	;# 
 13696   000295                     I2C1CON1        equ	661	;# 
 13697   000296                     I2C1CON2        equ	662	;# 
 13698   000297                     I2C1ERR         equ	663	;# 
 13699   000298                     I2C1STAT0       equ	664	;# 
 13700   000299                     I2C1STAT1       equ	665	;# 
 13701   00029A                     I2C1PIR         equ	666	;# 
 13702   00029B                     I2C1PIE         equ	667	;# 
 13703   00029C                     I2C1BTO         equ	668	;# 
 13704   00029D                     I2C1BAUD        equ	669	;# 
 13705   00029E                     I2C1CLK         equ	670	;# 
 13706   00029F                     I2C1BTOC        equ	671	;# 
 13707   0002A1                     U1RXB           equ	673	;# 
 13708   0002A1                     U1RXBL          equ	673	;# 
 13709   0002A2                     U1RXCHK         equ	674	;# 
 13710   0002A3                     U1TXB           equ	675	;# 
 13711   0002A3                     U1TXBL          equ	675	;# 
 13712   0002A4                     U1TXCHK         equ	676	;# 
 13713   0002A5                     U1P1            equ	677	;# 
 13714   0002A5                     U1P1L           equ	677	;# 
 13715   0002A6                     U1P1H           equ	678	;# 
 13716   0002A7                     U1P2            equ	679	;# 
 13717   0002A7                     U1P2L           equ	679	;# 
 13718   0002A8                     U1P2H           equ	680	;# 
 13719   0002A9                     U1P3            equ	681	;# 
 13720   0002A9                     U1P3L           equ	681	;# 
 13721   0002AA                     U1P3H           equ	682	;# 
 13722   0002AB                     U1CON0          equ	683	;# 
 13723   0002AC                     U1CON1          equ	684	;# 
 13724   0002AD                     U1CON2          equ	685	;# 
 13725   0002AE                     U1BRG           equ	686	;# 
 13726   0002AE                     U1BRGL          equ	686	;# 
 13727   0002AF                     U1BRGH          equ	687	;# 
 13728   0002B0                     U1FIFO          equ	688	;# 
 13729   0002B1                     U1UIR           equ	689	;# 
 13730   0002B2                     U1ERRIR         equ	690	;# 
 13731   0002B3                     U1ERRIE         equ	691	;# 
 13732   0002B4                     U2RXB           equ	692	;# 
 13733   0002B4                     U2RXBL          equ	692	;# 
 13734   0002B5                     U2RXCHK         equ	693	;# 
 13735   0002B6                     U2TXB           equ	694	;# 
 13736   0002B6                     U2TXBL          equ	694	;# 
 13737   0002B7                     U2TXCHK         equ	695	;# 
 13738   0002B8                     U2P1            equ	696	;# 
 13739   0002B8                     U2P1L           equ	696	;# 
 13740   0002B9                     U2P1H           equ	697	;# 
 13741   0002BA                     U2P2            equ	698	;# 
 13742   0002BA                     U2P2L           equ	698	;# 
 13743   0002BB                     U2P2H           equ	699	;# 
 13744   0002BC                     U2P3            equ	700	;# 
 13745   0002BC                     U2P3L           equ	700	;# 
 13746   0002BD                     U2P3H           equ	701	;# 
 13747   0002BE                     U2CON0          equ	702	;# 
 13748   0002BF                     U2CON1          equ	703	;# 
 13749   0002C0                     U2CON2          equ	704	;# 
 13750   0002C1                     U2BRG           equ	705	;# 
 13751   0002C1                     U2BRGL          equ	705	;# 
 13752   0002C2                     U2BRGH          equ	706	;# 
 13753   0002C3                     U2FIFO          equ	707	;# 
 13754   0002C4                     U2UIR           equ	708	;# 
 13755   0002C5                     U2ERRIR         equ	709	;# 
 13756   0002C6                     U2ERRIE         equ	710	;# 
 13757   0002C7                     U3RXB           equ	711	;# 
 13758   0002C7                     U3RXBL          equ	711	;# 
 13759   0002C9                     U3TXB           equ	713	;# 
 13760   0002C9                     U3TXBL          equ	713	;# 
 13761   0002CB                     U3P1            equ	715	;# 
 13762   0002CB                     U3P1L           equ	715	;# 
 13763   0002CD                     U3P2            equ	717	;# 
 13764   0002CD                     U3P2L           equ	717	;# 
 13765   0002CF                     U3P3            equ	719	;# 
 13766   0002CF                     U3P3L           equ	719	;# 
 13767   0002D1                     U3CON0          equ	721	;# 
 13768   0002D2                     U3CON1          equ	722	;# 
 13769   0002D3                     U3CON2          equ	723	;# 
 13770   0002D4                     U3BRG           equ	724	;# 
 13771   0002D4                     U3BRGL          equ	724	;# 
 13772   0002D5                     U3BRGH          equ	725	;# 
 13773   0002D6                     U3FIFO          equ	726	;# 
 13774   0002D7                     U3UIR           equ	727	;# 
 13775   0002D8                     U3ERRIR         equ	728	;# 
 13776   0002D9                     U3ERRIE         equ	729	;# 
 13777   0002DA                     U4RXB           equ	730	;# 
 13778   0002DA                     U4RXBL          equ	730	;# 
 13779   0002DC                     U4TXB           equ	732	;# 
 13780   0002DC                     U4TXBL          equ	732	;# 
 13781   0002DE                     U4P1            equ	734	;# 
 13782   0002DE                     U4P1L           equ	734	;# 
 13783   0002E0                     U4P2            equ	736	;# 
 13784   0002E0                     U4P2L           equ	736	;# 
 13785   0002E2                     U4P3            equ	738	;# 
 13786   0002E2                     U4P3L           equ	738	;# 
 13787   0002E4                     U4CON0          equ	740	;# 
 13788   0002E5                     U4CON1          equ	741	;# 
 13789   0002E6                     U4CON2          equ	742	;# 
 13790   0002E7                     U4BRG           equ	743	;# 
 13791   0002E7                     U4BRGL          equ	743	;# 
 13792   0002E8                     U4BRGH          equ	744	;# 
 13793   0002E9                     U4FIFO          equ	745	;# 
 13794   0002EA                     U4UIR           equ	746	;# 
 13795   0002EB                     U4ERRIR         equ	747	;# 
 13796   0002EC                     U4ERRIE         equ	748	;# 
 13797   0002ED                     U5RXB           equ	749	;# 
 13798   0002ED                     U5RXBL          equ	749	;# 
 13799   0002EF                     U5TXB           equ	751	;# 
 13800   0002EF                     U5TXBL          equ	751	;# 
 13801   0002F1                     U5P1            equ	753	;# 
 13802   0002F1                     U5P1L           equ	753	;# 
 13803   0002F3                     U5P2            equ	755	;# 
 13804   0002F3                     U5P2L           equ	755	;# 
 13805   0002F5                     U5P3            equ	757	;# 
 13806   0002F5                     U5P3L           equ	757	;# 
 13807   0002F7                     U5CON0          equ	759	;# 
 13808   0002F8                     U5CON1          equ	760	;# 
 13809   0002F9                     U5CON2          equ	761	;# 
 13810   0002FA                     U5BRG           equ	762	;# 
 13811   0002FA                     U5BRGL          equ	762	;# 
 13812   0002FB                     U5BRGH          equ	763	;# 
 13813   0002FC                     U5FIFO          equ	764	;# 
 13814   0002FD                     U5UIR           equ	765	;# 
 13815   0002FE                     U5ERRIR         equ	766	;# 
 13816   0002FF                     U5ERRIE         equ	767	;# 
 13817   000300                     SMT1TMR         equ	768	;# 
 13818   000300                     SMT1TMRL        equ	768	;# 
 13819   000301                     SMT1TMRH        equ	769	;# 
 13820   000302                     SMT1TMRU        equ	770	;# 
 13821   000303                     SMT1CPR         equ	771	;# 
 13822   000303                     SMT1CPRL        equ	771	;# 
 13823   000304                     SMT1CPRH        equ	772	;# 
 13824   000305                     SMT1CPRU        equ	773	;# 
 13825   000306                     SMT1CPW         equ	774	;# 
 13826   000306                     SMT1CPWL        equ	774	;# 
 13827   000307                     SMT1CPWH        equ	775	;# 
 13828   000308                     SMT1CPWU        equ	776	;# 
 13829   000309                     SMT1PR          equ	777	;# 
 13830   000309                     SMT1PRL         equ	777	;# 
 13831   00030A                     SMT1PRH         equ	778	;# 
 13832   00030B                     SMT1PRU         equ	779	;# 
 13833   00030C                     SMT1CON0        equ	780	;# 
 13834   00030D                     SMT1CON1        equ	781	;# 
 13835   00030E                     SMT1STAT        equ	782	;# 
 13836   00030F                     SMT1CLK         equ	783	;# 
 13837   000310                     SMT1SIG         equ	784	;# 
 13838   000311                     SMT1WIN         equ	785	;# 
 13839   000318                     TMR0L           equ	792	;# 
 13840   000318                     TMR0            equ	792	;# 
 13841   000319                     TMR0H           equ	793	;# 
 13842   000319                     PR0             equ	793	;# 
 13843   00031A                     T0CON0          equ	794	;# 
 13844   00031B                     T0CON1          equ	795	;# 
 13845   00031C                     TMR1            equ	796	;# 
 13846   00031C                     TMR1L           equ	796	;# 
 13847   00031D                     TMR1H           equ	797	;# 
 13848   00031E                     T1CON           equ	798	;# 
 13849   00031E                     TMR1CON         equ	798	;# 
 13850   00031F                     T1GCON          equ	799	;# 
 13851   00031F                     TMR1GCON        equ	799	;# 
 13852   000320                     T1GATE          equ	800	;# 
 13853   000320                     TMR1GATE        equ	800	;# 
 13854   000321                     T1CLK           equ	801	;# 
 13855   000321                     TMR1CLK         equ	801	;# 
 13856   000321                     PR1             equ	801	;# 
 13857   000322                     T2TMR           equ	802	;# 
 13858   000322                     TMR2            equ	802	;# 
 13859   000323                     T2PR            equ	803	;# 
 13860   000323                     PR2             equ	803	;# 
 13861   000324                     T2CON           equ	804	;# 
 13862   000325                     T2HLT           equ	805	;# 
 13863   000326                     T2CLKCON        equ	806	;# 
 13864   000326                     T2CLK           equ	806	;# 
 13865   000327                     T2RST           equ	807	;# 
 13866   000328                     TMR3            equ	808	;# 
 13867   000328                     TMR3L           equ	808	;# 
 13868   000329                     TMR3H           equ	809	;# 
 13869   00032A                     T3CON           equ	810	;# 
 13870   00032A                     TMR3CON         equ	810	;# 
 13871   00032B                     T3GCON          equ	811	;# 
 13872   00032B                     TMR3GCON        equ	811	;# 
 13873   00032C                     T3GATE          equ	812	;# 
 13874   00032C                     TMR3GATE        equ	812	;# 
 13875   00032D                     T3CLK           equ	813	;# 
 13876   00032D                     TMR3CLK         equ	813	;# 
 13877   00032D                     PR3             equ	813	;# 
 13878   00032E                     T4TMR           equ	814	;# 
 13879   00032E                     TMR4            equ	814	;# 
 13880   00032F                     T4PR            equ	815	;# 
 13881   00032F                     PR4             equ	815	;# 
 13882   000330                     T4CON           equ	816	;# 
 13883   000331                     T4HLT           equ	817	;# 
 13884   000332                     T4CLKCON        equ	818	;# 
 13885   000332                     T4CLK           equ	818	;# 
 13886   000333                     T4RST           equ	819	;# 
 13887   000334                     TMR5            equ	820	;# 
 13888   000334                     TMR5L           equ	820	;# 
 13889   000335                     TMR5H           equ	821	;# 
 13890   000336                     T5CON           equ	822	;# 
 13891   000336                     TMR5CON         equ	822	;# 
 13892   000337                     T5GCON          equ	823	;# 
 13893   000337                     TMR5GCON        equ	823	;# 
 13894   000338                     T5GATE          equ	824	;# 
 13895   000338                     TMR5GATE        equ	824	;# 
 13896   000339                     T5CLK           equ	825	;# 
 13897   000339                     TMR5CLK         equ	825	;# 
 13898   000339                     PR5             equ	825	;# 
 13899   00033A                     T6TMR           equ	826	;# 
 13900   00033A                     TMR6            equ	826	;# 
 13901   00033B                     T6PR            equ	827	;# 
 13902   00033B                     PR6             equ	827	;# 
 13903   00033C                     T6CON           equ	828	;# 
 13904   00033D                     T6HLT           equ	829	;# 
 13905   00033E                     T6CLKCON        equ	830	;# 
 13906   00033E                     T6CLK           equ	830	;# 
 13907   00033F                     T6RST           equ	831	;# 
 13908   000340                     CCPR1           equ	832	;# 
 13909   000340                     CCPR1L          equ	832	;# 
 13910   000341                     CCPR1H          equ	833	;# 
 13911   000342                     CCP1CON         equ	834	;# 
 13912   000343                     CCP1CAP         equ	835	;# 
 13913   000344                     CCPR2           equ	836	;# 
 13914   000344                     CCPR2L          equ	836	;# 
 13915   000345                     CCPR2H          equ	837	;# 
 13916   000346                     CCP2CON         equ	838	;# 
 13917   000347                     CCP2CAP         equ	839	;# 
 13918   000348                     CCPR3           equ	840	;# 
 13919   000348                     CCPR3L          equ	840	;# 
 13920   000349                     CCPR3H          equ	841	;# 
 13921   00034A                     CCP3CON         equ	842	;# 
 13922   00034B                     CCP3CAP         equ	843	;# 
 13923   00034C                     CCPTMRS0        equ	844	;# 
 13924   00034F                     CRCDATA         equ	847	;# 
 13925   00034F                     CRCDATAL        equ	847	;# 
 13926   000350                     CRCDATAH        equ	848	;# 
 13927   000351                     CRCDATAU        equ	849	;# 
 13928   000352                     CRCDATAT        equ	850	;# 
 13929   000353                     CRCOUT          equ	851	;# 
 13930   000353                     CRCSHFT         equ	851	;# 
 13931   000353                     CRCXOR          equ	851	;# 
 13932   000353                     CRCOUTL         equ	851	;# 
 13933   000353                     CRCSHFTL        equ	851	;# 
 13934   000353                     CRCSHIFTL       equ	851	;# 
 13935   000353                     CRCXORL         equ	851	;# 
 13936   000354                     CRCOUTH         equ	852	;# 
 13937   000354                     CRCSHFTH        equ	852	;# 
 13938   000354                     CRCSHIFTH       equ	852	;# 
 13939   000354                     CRCXORH         equ	852	;# 
 13940   000355                     CRCOUTU         equ	853	;# 
 13941   000355                     CRCSHFTU        equ	853	;# 
 13942   000355                     CRCSHIFTU       equ	853	;# 
 13943   000355                     CRCXORU         equ	853	;# 
 13944   000356                     CRCOUTT         equ	854	;# 
 13945   000356                     CRCSHFTT        equ	854	;# 
 13946   000356                     CRCSHIFTT       equ	854	;# 
 13947   000356                     CRCXORT         equ	854	;# 
 13948   000357                     CRCCON0         equ	855	;# 
 13949   000358                     CRCCON1         equ	856	;# 
 13950   000359                     CRCCON2         equ	857	;# 
 13951   00035A                     SCANLADR        equ	858	;# 
 13952   00035A                     SCANLADRL       equ	858	;# 
 13953   00035B                     SCANLADRH       equ	859	;# 
 13954   00035C                     SCANLADRU       equ	860	;# 
 13955   00035D                     SCANHADR        equ	861	;# 
 13956   00035D                     SCANHADRL       equ	861	;# 
 13957   00035E                     SCANHADRH       equ	862	;# 
 13958   00035F                     SCANHADRU       equ	863	;# 
 13959   000360                     SCANCON0        equ	864	;# 
 13960   000361                     SCANTRIG        equ	865	;# 
 13961   000362                     IPR0            equ	866	;# 
 13962   000363                     IPR1            equ	867	;# 
 13963   000364                     IPR2            equ	868	;# 
 13964   000365                     IPR3            equ	869	;# 
 13965   000366                     IPR4            equ	870	;# 
 13966   000367                     IPR5            equ	871	;# 
 13967   000368                     IPR6            equ	872	;# 
 13968   000369                     IPR7            equ	873	;# 
 13969   00036A                     IPR8            equ	874	;# 
 13970   00036B                     IPR9            equ	875	;# 
 13971   00036C                     IPR10           equ	876	;# 
 13972   00036D                     IPR11           equ	877	;# 
 13973   00036E                     IPR12           equ	878	;# 
 13974   00036F                     IPR13           equ	879	;# 
 13975   000370                     IPR14           equ	880	;# 
 13976   000371                     IPR15           equ	881	;# 
 13977   000373                     STATUS_CSHAD    equ	883	;# 
 13978   000374                     WREG_CSHAD      equ	884	;# 
 13979   000375                     BSR_CSHAD       equ	885	;# 
 13980   000376                     SHADCON         equ	886	;# 
 13981   000377                     STATUS_SHAD     equ	887	;# 
 13982   000378                     WREG_SHAD       equ	888	;# 
 13983   000379                     BSR_SHAD        equ	889	;# 
 13984   00037A                     PCLATH_SHAD     equ	890	;# 
 13985   00037B                     PCLATU_SHAD     equ	891	;# 
 13986   00037C                     FSR0SH          equ	892	;# 
 13987   00037C                     FSR0L_SHAD      equ	892	;# 
 13988   00037D                     FSR0H_SHAD      equ	893	;# 
 13989   00037E                     FSR1SH          equ	894	;# 
 13990   00037E                     FSR1L_SHAD      equ	894	;# 
 13991   00037F                     FSR1H_SHAD      equ	895	;# 
 13992   000380                     FSR2SH          equ	896	;# 
 13993   000380                     FSR2L_SHAD      equ	896	;# 
 13994   000381                     FSR2H_SHAD      equ	897	;# 
 13995   000382                     PRODSH          equ	898	;# 
 13996   000382                     PRODL_SHAD      equ	898	;# 
 13997   000383                     PRODH_SHAD      equ	899	;# 
 13998   000387                     TU16ACON0       equ	903	;# 
 13999   000388                     TU16ACON1       equ	904	;# 
 14000   000389                     TU16AHLT        equ	905	;# 
 14001   00038A                     TU16APS         equ	906	;# 
 14002   00038B                     TU16ATMR        equ	907	;# 
 14003   00038B                     TU16ACR         equ	907	;# 
 14004   00038B                     TU16ATMRL       equ	907	;# 
 14005   00038B                     TU16ACRL        equ	907	;# 
 14006   00038C                     TU16ATMRH       equ	908	;# 
 14007   00038C                     TU16ACRH        equ	908	;# 
 14008   00038D                     TU16APR         equ	909	;# 
 14009   00038D                     TU16APRL        equ	909	;# 
 14010   00038E                     TU16APRH        equ	910	;# 
 14011   00038F                     TU16ACLK        equ	911	;# 
 14012   000390                     TU16AERS        equ	912	;# 
 14013   000393                     TU16BCON0       equ	915	;# 
 14014   000394                     TU16BCON1       equ	916	;# 
 14015   000395                     TU16BHLT        equ	917	;# 
 14016   000396                     TU16BPS         equ	918	;# 
 14017   000397                     TU16BTMR        equ	919	;# 
 14018   000397                     TU16BCR         equ	919	;# 
 14019   000397                     TU16BTMRL       equ	919	;# 
 14020   000397                     TU16BCRL        equ	919	;# 
 14021   000398                     TU16BTMRH       equ	920	;# 
 14022   000398                     TU16BCRH        equ	920	;# 
 14023   000399                     TU16BPR         equ	921	;# 
 14024   000399                     TU16BPRL        equ	921	;# 
 14025   00039A                     TU16BPRH        equ	922	;# 
 14026   00039B                     TU16BCLK        equ	923	;# 
 14027   00039C                     TU16BERS        equ	924	;# 
 14028   0003BB                     TUCHAIN         equ	955	;# 
 14029   0003BC                     CWG1CLK         equ	956	;# 
 14030   0003BC                     CWG1CLKCON      equ	956	;# 
 14031   0003BD                     CWG1ISM         equ	957	;# 
 14032   0003BE                     CWG1DBR         equ	958	;# 
 14033   0003BF                     CWG1DBF         equ	959	;# 
 14034   0003C0                     CWG1CON0        equ	960	;# 
 14035   0003C1                     CWG1CON1        equ	961	;# 
 14036   0003C2                     CWG1AS0         equ	962	;# 
 14037   0003C3                     CWG1AS1         equ	963	;# 
 14038   0003C4                     CWG1STR         equ	964	;# 
 14039   0003C5                     CWG2CLK         equ	965	;# 
 14040   0003C5                     CWG2CLKCON      equ	965	;# 
 14041   0003C6                     CWG2ISM         equ	966	;# 
 14042   0003C7                     CWG2DBR         equ	967	;# 
 14043   0003C8                     CWG2DBF         equ	968	;# 
 14044   0003C9                     CWG2CON0        equ	969	;# 
 14045   0003CA                     CWG2CON1        equ	970	;# 
 14046   0003CB                     CWG2AS0         equ	971	;# 
 14047   0003CC                     CWG2AS1         equ	972	;# 
 14048   0003CD                     CWG2STR         equ	973	;# 
 14049   0003CE                     CWG3CLK         equ	974	;# 
 14050   0003CE                     CWG3CLKCON      equ	974	;# 
 14051   0003CF                     CWG3ISM         equ	975	;# 
 14052   0003D0                     CWG3DBR         equ	976	;# 
 14053   0003D1                     CWG3DBF         equ	977	;# 
 14054   0003D2                     CWG3CON0        equ	978	;# 
 14055   0003D3                     CWG3CON1        equ	979	;# 
 14056   0003D4                     CWG3AS0         equ	980	;# 
 14057   0003D5                     CWG3AS1         equ	981	;# 
 14058   0003D6                     CWG3STR         equ	982	;# 
 14059   0003D7                     FVRCON          equ	983	;# 
 14060   0003D8                     ADCPCON         equ	984	;# 
 14061   0003D8                     ADCP            equ	984	;# 
 14062   0003D9                     ADLTH           equ	985	;# 
 14063   0003D9                     ADLTHL          equ	985	;# 
 14064   0003DA                     ADLTHH          equ	986	;# 
 14065   0003DB                     ADUTH           equ	987	;# 
 14066   0003DB                     ADUTHL          equ	987	;# 
 14067   0003DC                     ADUTHH          equ	988	;# 
 14068   0003DD                     ADERR           equ	989	;# 
 14069   0003DD                     ADERRL          equ	989	;# 
 14070   0003DE                     ADERRH          equ	990	;# 
 14071   0003DF                     ADSTPT          equ	991	;# 
 14072   0003DF                     ADSTPTL         equ	991	;# 
 14073   0003E0                     ADSTPTH         equ	992	;# 
 14074   0003E1                     ADFLTR          equ	993	;# 
 14075   0003E1                     ADFLTRL         equ	993	;# 
 14076   0003E2                     ADFLTRH         equ	994	;# 
 14077   0003E3                     ADACC           equ	995	;# 
 14078   0003E3                     ADACCL          equ	995	;# 
 14079   0003E4                     ADACCH          equ	996	;# 
 14080   0003E5                     ADACCU          equ	997	;# 
 14081   0003E6                     ADCNT           equ	998	;# 
 14082   0003E7                     ADRPT           equ	999	;# 
 14083   0003E8                     ADPREV          equ	1000	;# 
 14084   0003E8                     ADPREVL         equ	1000	;# 
 14085   0003E9                     ADPREVH         equ	1001	;# 
 14086   0003EA                     ADRES           equ	1002	;# 
 14087   0003EA                     ADRESL          equ	1002	;# 
 14088   0003EB                     ADRESH          equ	1003	;# 
 14089   0003EC                     ADPCH           equ	1004	;# 
 14090   0003EE                     ADACQ           equ	1006	;# 
 14091   0003EE                     ADACQL          equ	1006	;# 
 14092   0003EF                     ADACQH          equ	1007	;# 
 14093   0003F0                     ADCAP           equ	1008	;# 
 14094   0003F1                     ADPRE           equ	1009	;# 
 14095   0003F1                     ADPREL          equ	1009	;# 
 14096   0003F2                     ADPREH          equ	1010	;# 
 14097   0003F3                     ADCON0          equ	1011	;# 
 14098   0003F4                     ADCON1          equ	1012	;# 
 14099   0003F5                     ADCON2          equ	1013	;# 
 14100   0003F6                     ADCON3          equ	1014	;# 
 14101   0003F7                     ADSTAT          equ	1015	;# 
 14102   0003F8                     ADREF           equ	1016	;# 
 14103   0003F9                     ADACT           equ	1017	;# 
 14104   0003FA                     ADCLK           equ	1018	;# 
 14105   0003FB                     ADCTX           equ	1019	;# 
 14106   0003FC                     ADCSEL1         equ	1020	;# 
 14107   0003FD                     ADCSEL2         equ	1021	;# 
 14108   0003FE                     ADCSEL3         equ	1022	;# 
 14109   0003FF                     ADCSEL4         equ	1023	;# 
 14110   000400                     ANSELA          equ	1024	;# 
 14111   000401                     WPUA            equ	1025	;# 
 14112   000402                     ODCONA          equ	1026	;# 
 14113   000403                     SLRCONA         equ	1027	;# 
 14114   000404                     INLVLA          equ	1028	;# 
 14115   000405                     IOCAP           equ	1029	;# 
 14116   000406                     IOCAN           equ	1030	;# 
 14117   000407                     IOCAF           equ	1031	;# 
 14118   000408                     ANSELB          equ	1032	;# 
 14119   000409                     WPUB            equ	1033	;# 
 14120   00040A                     ODCONB          equ	1034	;# 
 14121   00040B                     SLRCONB         equ	1035	;# 
 14122   00040C                     INLVLB          equ	1036	;# 
 14123   00040D                     IOCBP           equ	1037	;# 
 14124   00040E                     IOCBN           equ	1038	;# 
 14125   00040F                     IOCBF           equ	1039	;# 
 14126   000410                     ANSELC          equ	1040	;# 
 14127   000411                     WPUC            equ	1041	;# 
 14128   000412                     ODCONC          equ	1042	;# 
 14129   000413                     SLRCONC         equ	1043	;# 
 14130   000414                     INLVLC          equ	1044	;# 
 14131   000415                     IOCCP           equ	1045	;# 
 14132   000416                     IOCCN           equ	1046	;# 
 14133   000417                     IOCCF           equ	1047	;# 
 14134   000421                     WPUE            equ	1057	;# 
 14135   000424                     INLVLE          equ	1060	;# 
 14136   000425                     IOCEP           equ	1061	;# 
 14137   000426                     IOCEN           equ	1062	;# 
 14138   000427                     IOCEF           equ	1063	;# 
 14139   000440                     NCO1ACC         equ	1088	;# 
 14140   000440                     NCO1ACCL        equ	1088	;# 
 14141   000441                     NCO1ACCH        equ	1089	;# 
 14142   000442                     NCO1ACCU        equ	1090	;# 
 14143   000443                     NCO1INC         equ	1091	;# 
 14144   000443                     NCO1INCL        equ	1091	;# 
 14145   000444                     NCO1INCH        equ	1092	;# 
 14146   000445                     NCO1INCU        equ	1093	;# 
 14147   000446                     NCO1CON         equ	1094	;# 
 14148   000447                     NCO1CLK         equ	1095	;# 
 14149   000448                     NCO2ACC         equ	1096	;# 
 14150   000448                     NCO2ACCL        equ	1096	;# 
 14151   000449                     NCO2ACCH        equ	1097	;# 
 14152   00044A                     NCO2ACCU        equ	1098	;# 
 14153   00044B                     NCO2INC         equ	1099	;# 
 14154   00044B                     NCO2INCL        equ	1099	;# 
 14155   00044C                     NCO2INCH        equ	1100	;# 
 14156   00044D                     NCO2INCU        equ	1101	;# 
 14157   00044E                     NCO2CON         equ	1102	;# 
 14158   00044F                     NCO2CLK         equ	1103	;# 
 14159   000450                     NCO3ACC         equ	1104	;# 
 14160   000450                     NCO3ACCL        equ	1104	;# 
 14161   000451                     NCO3ACCH        equ	1105	;# 
 14162   000452                     NCO3ACCU        equ	1106	;# 
 14163   000453                     NCO3INC         equ	1107	;# 
 14164   000453                     NCO3INCL        equ	1107	;# 
 14165   000454                     NCO3INCH        equ	1108	;# 
 14166   000455                     NCO3INCU        equ	1109	;# 
 14167   000456                     NCO3CON         equ	1110	;# 
 14168   000457                     NCO3CLK         equ	1111	;# 
 14169   000458                     FSCMCON         equ	1112	;# 
 14170   000459                     IVTLOCK         equ	1113	;# 
 14171   00045A                     IVTAD           equ	1114	;# 
 14172   00045A                     IVTADL          equ	1114	;# 
 14173   00045B                     IVTADH          equ	1115	;# 
 14174   00045C                     IVTADU          equ	1116	;# 
 14175   00045D                     IVTBASE         equ	1117	;# 
 14176   00045D                     IVTBASEL        equ	1117	;# 
 14177   00045E                     IVTBASEH        equ	1118	;# 
 14178   00045F                     IVTBASEU        equ	1119	;# 
 14179   000460                     PWM1ERS         equ	1120	;# 
 14180   000461                     PWM1CLK         equ	1121	;# 
 14181   000462                     PWM1LDS         equ	1122	;# 
 14182   000463                     PWM1PR          equ	1123	;# 
 14183   000463                     PWM1PRL         equ	1123	;# 
 14184   000464                     PWM1PRH         equ	1124	;# 
 14185   000465                     PWM1CPRE        equ	1125	;# 
 14186   000466                     PWM1PIPOS       equ	1126	;# 
 14187   000467                     PWM1GIR         equ	1127	;# 
 14188   000468                     PWM1GIE         equ	1128	;# 
 14189   000469                     PWM1CON         equ	1129	;# 
 14190   00046A                     PWM1S1CFG       equ	1130	;# 
 14191   00046B                     PWM1S1P1        equ	1131	;# 
 14192   00046B                     PWM1S1P1L       equ	1131	;# 
 14193   00046C                     PWM1S1P1H       equ	1132	;# 
 14194   00046D                     PWM1S1P2        equ	1133	;# 
 14195   00046D                     PWM1S1P2L       equ	1133	;# 
 14196   00046E                     PWM1S1P2H       equ	1134	;# 
 14197   00046F                     PWM2ERS         equ	1135	;# 
 14198   000470                     PWM2CLK         equ	1136	;# 
 14199   000471                     PWM2LDS         equ	1137	;# 
 14200   000472                     PWM2PR          equ	1138	;# 
 14201   000472                     PWM2PRL         equ	1138	;# 
 14202   000473                     PWM2PRH         equ	1139	;# 
 14203   000474                     PWM2CPRE        equ	1140	;# 
 14204   000475                     PWM2PIPOS       equ	1141	;# 
 14205   000476                     PWM2GIR         equ	1142	;# 
 14206   000477                     PWM2GIE         equ	1143	;# 
 14207   000478                     PWM2CON         equ	1144	;# 
 14208   000479                     PWM2S1CFG       equ	1145	;# 
 14209   00047A                     PWM2S1P1        equ	1146	;# 
 14210   00047A                     PWM2S1P1L       equ	1146	;# 
 14211   00047B                     PWM2S1P1H       equ	1147	;# 
 14212   00047C                     PWM2S1P2        equ	1148	;# 
 14213   00047C                     PWM2S1P2L       equ	1148	;# 
 14214   00047D                     PWM2S1P2H       equ	1149	;# 
 14215   00047E                     PWM3ERS         equ	1150	;# 
 14216   00047F                     PWM3CLK         equ	1151	;# 
 14217   000480                     PWM3LDS         equ	1152	;# 
 14218   000481                     PWM3PR          equ	1153	;# 
 14219   000481                     PWM3PRL         equ	1153	;# 
 14220   000482                     PWM3PRH         equ	1154	;# 
 14221   000483                     PWM3CPRE        equ	1155	;# 
 14222   000484                     PWM3PIPOS       equ	1156	;# 
 14223   000485                     PWM3GIR         equ	1157	;# 
 14224   000486                     PWM3GIE         equ	1158	;# 
 14225   000487                     PWM3CON         equ	1159	;# 
 14226   000488                     PWM3S1CFG       equ	1160	;# 
 14227   000489                     PWM3S1P1        equ	1161	;# 
 14228   000489                     PWM3S1P1L       equ	1161	;# 
 14229   00048A                     PWM3S1P1H       equ	1162	;# 
 14230   00048B                     PWM3S1P2        equ	1163	;# 
 14231   00048B                     PWM3S1P2L       equ	1163	;# 
 14232   00048C                     PWM3S1P2H       equ	1164	;# 
 14233   00048D                     PWM4ERS         equ	1165	;# 
 14234   00048E                     PWM4CLK         equ	1166	;# 
 14235   00048F                     PWM4LDS         equ	1167	;# 
 14236   000490                     PWM4PR          equ	1168	;# 
 14237   000490                     PWM4PRL         equ	1168	;# 
 14238   000491                     PWM4PRH         equ	1169	;# 
 14239   000492                     PWM4CPRE        equ	1170	;# 
 14240   000493                     PWM4PIPOS       equ	1171	;# 
 14241   000494                     PWM4GIR         equ	1172	;# 
 14242   000495                     PWM4GIE         equ	1173	;# 
 14243   000496                     PWM4CON         equ	1174	;# 
 14244   000497                     PWM4S1CFG       equ	1175	;# 
 14245   000498                     PWM4S1P1        equ	1176	;# 
 14246   000498                     PWM4S1P1L       equ	1176	;# 
 14247   000499                     PWM4S1P1H       equ	1177	;# 
 14248   00049A                     PWM4S1P2        equ	1178	;# 
 14249   00049A                     PWM4S1P2L       equ	1178	;# 
 14250   00049B                     PWM4S1P2H       equ	1179	;# 
 14251   00049C                     PWMLOAD         equ	1180	;# 
 14252   00049D                     PWMEN           equ	1181	;# 
 14253   00049E                     PIE0            equ	1182	;# 
 14254   00049F                     PIE1            equ	1183	;# 
 14255   0004A0                     PIE2            equ	1184	;# 
 14256   0004A1                     PIE3            equ	1185	;# 
 14257   0004A2                     PIE4            equ	1186	;# 
 14258   0004A3                     PIE5            equ	1187	;# 
 14259   0004A4                     PIE6            equ	1188	;# 
 14260   0004A5                     PIE7            equ	1189	;# 
 14261   0004A6                     PIE8            equ	1190	;# 
 14262   0004A7                     PIE9            equ	1191	;# 
 14263   0004A8                     PIE10           equ	1192	;# 
 14264   0004A9                     PIE11           equ	1193	;# 
 14265   0004AA                     PIE12           equ	1194	;# 
 14266   0004AB                     PIE13           equ	1195	;# 
 14267   0004AC                     PIE14           equ	1196	;# 
 14268   0004AD                     PIE15           equ	1197	;# 
 14269   0004AE                     PIR0            equ	1198	;# 
 14270   0004AF                     PIR1            equ	1199	;# 
 14271   0004B0                     PIR2            equ	1200	;# 
 14272   0004B1                     PIR3            equ	1201	;# 
 14273   0004B2                     PIR4            equ	1202	;# 
 14274   0004B3                     PIR5            equ	1203	;# 
 14275   0004B4                     PIR6            equ	1204	;# 
 14276   0004B5                     PIR7            equ	1205	;# 
 14277   0004B6                     PIR8            equ	1206	;# 
 14278   0004B7                     PIR9            equ	1207	;# 
 14279   0004B8                     PIR10           equ	1208	;# 
 14280   0004B9                     PIR11           equ	1209	;# 
 14281   0004BA                     PIR12           equ	1210	;# 
 14282   0004BB                     PIR13           equ	1211	;# 
 14283   0004BC                     PIR14           equ	1212	;# 
 14284   0004BD                     PIR15           equ	1213	;# 
 14285   0004BE                     LATA            equ	1214	;# 
 14286   0004BF                     LATB            equ	1215	;# 
 14287   0004C0                     LATC            equ	1216	;# 
 14288   0004C6                     TRISA           equ	1222	;# 
 14289   0004C7                     TRISB           equ	1223	;# 
 14290   0004C8                     TRISC           equ	1224	;# 
 14291   0004CA                     TRISE           equ	1226	;# 
 14292   0004CE                     PORTA           equ	1230	;# 
 14293   0004CF                     PORTB           equ	1231	;# 
 14294   0004D0                     PORTC           equ	1232	;# 
 14295   0004D2                     PORTE           equ	1234	;# 
 14296   0004D6                     INTCON0         equ	1238	;# 
 14297   0004D7                     INTCON1         equ	1239	;# 
 14298   0004D8                     STATUS          equ	1240	;# 
 14299   0004D9                     FSR2            equ	1241	;# 
 14300   0004D9                     FSR2L           equ	1241	;# 
 14301   0004DA                     FSR2H           equ	1242	;# 
 14302   0004DB                     PLUSW2          equ	1243	;# 
 14303   0004DC                     PREINC2         equ	1244	;# 
 14304   0004DD                     POSTDEC2        equ	1245	;# 
 14305   0004DE                     POSTINC2        equ	1246	;# 
 14306   0004DF                     INDF2           equ	1247	;# 
 14307   0004E0                     BSR             equ	1248	;# 
 14308   0004E1                     FSR1            equ	1249	;# 
 14309   0004E1                     FSR1L           equ	1249	;# 
 14310   0004E2                     FSR1H           equ	1250	;# 
 14311   0004E3                     PLUSW1          equ	1251	;# 
 14312   0004E4                     PREINC1         equ	1252	;# 
 14313   0004E5                     POSTDEC1        equ	1253	;# 
 14314   0004E6                     POSTINC1        equ	1254	;# 
 14315   0004E7                     INDF1           equ	1255	;# 
 14316   0004E8                     WREG            equ	1256	;# 
 14317   0004E9                     FSR0            equ	1257	;# 
 14318   0004E9                     FSR0L           equ	1257	;# 
 14319   0004EA                     FSR0H           equ	1258	;# 
 14320   0004EB                     PLUSW0          equ	1259	;# 
 14321   0004EC                     PREINC0         equ	1260	;# 
 14322   0004ED                     POSTDEC0        equ	1261	;# 
 14323   0004EE                     POSTINC0        equ	1262	;# 
 14324   0004EF                     INDF0           equ	1263	;# 
 14325   0004F0                     PCON0           equ	1264	;# 
 14326   0004F1                     PCON1           equ	1265	;# 
 14327   0004F2                     CPUDOZE         equ	1266	;# 
 14328   0004F3                     PROD            equ	1267	;# 
 14329   0004F3                     PRODL           equ	1267	;# 
 14330   0004F4                     PRODH           equ	1268	;# 
 14331   0004F5                     TABLAT          equ	1269	;# 
 14332   0004F6                     TBLPTR          equ	1270	;# 
 14333   0004F6                     TBLPTRL         equ	1270	;# 
 14334   0004F7                     TBLPTRH         equ	1271	;# 
 14335   0004F8                     TBLPTRU         equ	1272	;# 
 14336   0004F9                     PCLAT           equ	1273	;# 
 14337   0004F9                     PCL             equ	1273	;# 
 14338   0004FA                     PCLATH          equ	1274	;# 
 14339   0004FB                     PCLATU          equ	1275	;# 
 14340   0004FC                     STKPTR          equ	1276	;# 
 14341   0004FD                     TOS             equ	1277	;# 
 14342   0004FD                     TOSL            equ	1277	;# 
 14343   0004FE                     TOSH            equ	1278	;# 
 14344   0004FF                     TOSU            equ	1279	;# 
 14345   000038                     BOOTREG         equ	56	;# 
 14346   000039                     CLKRCON         equ	57	;# 
 14347   00003A                     CLKRCLK         equ	58	;# 
 14348   000040                     NVMCON0         equ	64	;# 
 14349   000041                     NVMCON1         equ	65	;# 
 14350   000042                     NVMLOCK         equ	66	;# 
 14351   000043                     NVMADR          equ	67	;# 
 14352   000043                     NVMADRL         equ	67	;# 
 14353   000044                     NVMADRH         equ	68	;# 
 14354   000045                     NVMADRU         equ	69	;# 
 14355   000046                     NVMDAT          equ	70	;# 
 14356   000046                     NVMDATL         equ	70	;# 
 14357   000047                     NVMDATH         equ	71	;# 
 14358   000048                     VREGCON         equ	72	;# 
 14359   000049                     BORCON          equ	73	;# 
 14360   00004A                     HLVDCON0        equ	74	;# 
 14361   00004B                     HLVDCON1        equ	75	;# 
 14362   00004C                     ZCDCON          equ	76	;# 
 14363   000060                     PMD0            equ	96	;# 
 14364   000061                     PMD1            equ	97	;# 
 14365   000062                     PMD2            equ	98	;# 
 14366   000063                     PMD3            equ	99	;# 
 14367   000064                     PMD4            equ	100	;# 
 14368   000065                     PMD5            equ	101	;# 
 14369   000066                     PMD6            equ	102	;# 
 14370   000067                     PMD7            equ	103	;# 
 14371   000068                     PMD8            equ	104	;# 
 14372   00006A                     MD1CON0         equ	106	;# 
 14373   00006B                     MD1CON1         equ	107	;# 
 14374   00006C                     MD1SRC          equ	108	;# 
 14375   00006D                     MD1CARL         equ	109	;# 
 14376   00006E                     MD1CARH         equ	110	;# 
 14377   00006F                     CMOUT           equ	111	;# 
 14378   000070                     CM1CON0         equ	112	;# 
 14379   000071                     CM1CON1         equ	113	;# 
 14380   000072                     CM1NCH          equ	114	;# 
 14381   000073                     CM1PCH          equ	115	;# 
 14382   000074                     CM2CON0         equ	116	;# 
 14383   000075                     CM2CON1         equ	117	;# 
 14384   000076                     CM2NCH          equ	118	;# 
 14385   000077                     CM2PCH          equ	119	;# 
 14386   000078                     WDTCON0         equ	120	;# 
 14387   000079                     WDTCON1         equ	121	;# 
 14388   00007A                     WDTPSL          equ	122	;# 
 14389   00007B                     WDTPSH          equ	123	;# 
 14390   00007C                     WDTTMR          equ	124	;# 
 14391   00007D                     DAC1DAT         equ	125	;# 
 14392   00007D                     DAC1DATL        equ	125	;# 
 14393   00007F                     DAC1CON         equ	127	;# 
 14394   000080                     SPI1RXB         equ	128	;# 
 14395   000081                     SPI1TXB         equ	129	;# 
 14396   000082                     SPI1TCNT        equ	130	;# 
 14397   000082                     SPI1TCNTL       equ	130	;# 
 14398   000083                     SPI1TCNTH       equ	131	;# 
 14399   000084                     SPI1CON0        equ	132	;# 
 14400   000085                     SPI1CON1        equ	133	;# 
 14401   000086                     SPI1CON2        equ	134	;# 
 14402   000087                     SPI1STATUS      equ	135	;# 
 14403   000088                     SPI1TWIDTH      equ	136	;# 
 14404   000089                     SPI1BAUD        equ	137	;# 
 14405   00008A                     SPI1INTF        equ	138	;# 
 14406   00008B                     SPI1INTE        equ	139	;# 
 14407   00008C                     SPI1CLK         equ	140	;# 
 14408   00008D                     SPI2RXB         equ	141	;# 
 14409   00008E                     SPI2TXB         equ	142	;# 
 14410   00008F                     SPI2TCNT        equ	143	;# 
 14411   00008F                     SPI2TCNTL       equ	143	;# 
 14412   000090                     SPI2TCNTH       equ	144	;# 
 14413   000091                     SPI2CON0        equ	145	;# 
 14414   000092                     SPI2CON1        equ	146	;# 
 14415   000093                     SPI2CON2        equ	147	;# 
 14416   000094                     SPI2STATUS      equ	148	;# 
 14417   000095                     SPI2TWIDTH      equ	149	;# 
 14418   000096                     SPI2BAUD        equ	150	;# 
 14419   000097                     SPI2INTF        equ	151	;# 
 14420   000098                     SPI2INTE        equ	152	;# 
 14421   000099                     SPI2CLK         equ	153	;# 
 14422   0000AC                     ACTCON          equ	172	;# 
 14423   0000AD                     OSCCON1         equ	173	;# 
 14424   0000AE                     OSCCON2         equ	174	;# 
 14425   0000AF                     OSCCON3         equ	175	;# 
 14426   0000B0                     OSCTUNE         equ	176	;# 
 14427   0000B1                     OSCFRQ          equ	177	;# 
 14428   0000B1                     OSCFREQ         equ	177	;# 
 14429   0000B2                     OSCSTAT         equ	178	;# 
 14430   0000B2                     OSCSTAT1        equ	178	;# 
 14431   0000B3                     OSCEN           equ	179	;# 
 14432   0000B4                     PRLOCK          equ	180	;# 
 14433   0000B5                     SCANPR          equ	181	;# 
 14434   0000B6                     DMA1PR          equ	182	;# 
 14435   0000B7                     DMA2PR          equ	183	;# 
 14436   0000B8                     DMA3PR          equ	184	;# 
 14437   0000B9                     DMA4PR          equ	185	;# 
 14438   0000BA                     DMA5PR          equ	186	;# 
 14439   0000BB                     DMA6PR          equ	187	;# 
 14440   0000BC                     DMA7PR          equ	188	;# 
 14441   0000BD                     DMA8PR          equ	189	;# 
 14442   0000BE                     MAINPR          equ	190	;# 
 14443   0000BF                     ISRPR           equ	191	;# 
 14444   0000D4                     CLCDATA         equ	212	;# 
 14445   0000D5                     CLCSELECT       equ	213	;# 
 14446   0000D6                     CLCnCON         equ	214	;# 
 14447   0000D7                     CLCnPOL         equ	215	;# 
 14448   0000D8                     CLCnSEL0        equ	216	;# 
 14449   0000D9                     CLCnSEL1        equ	217	;# 
 14450   0000DA                     CLCnSEL2        equ	218	;# 
 14451   0000DB                     CLCnSEL3        equ	219	;# 
 14452   0000DC                     CLCnGLS0        equ	220	;# 
 14453   0000DD                     CLCnGLS1        equ	221	;# 
 14454   0000DE                     CLCnGLS2        equ	222	;# 
 14455   0000DF                     CLCnGLS3        equ	223	;# 
 14456   0000E8                     DMASELECT       equ	232	;# 
 14457   0000E9                     DMAnBUF         equ	233	;# 
 14458   0000EA                     DMAnDCNT        equ	234	;# 
 14459   0000EA                     DMAnDCNTL       equ	234	;# 
 14460   0000EB                     DMAnDCNTH       equ	235	;# 
 14461   0000EC                     DMAnDPTR        equ	236	;# 
 14462   0000EC                     DMAnDPTRL       equ	236	;# 
 14463   0000ED                     DMAnDPTRH       equ	237	;# 
 14464   0000EE                     DMAnDSZ         equ	238	;# 
 14465   0000EE                     DMAnDSZL        equ	238	;# 
 14466   0000EF                     DMAnDSZH        equ	239	;# 
 14467   0000F0                     DMAnDSA         equ	240	;# 
 14468   0000F0                     DMAnDSAL        equ	240	;# 
 14469   0000F1                     DMAnDSAH        equ	241	;# 
 14470   0000F2                     DMAnSCNT        equ	242	;# 
 14471   0000F2                     DMAnSCNTL       equ	242	;# 
 14472   0000F3                     DMAnSCNTH       equ	243	;# 
 14473   0000F4                     DMAnSPTR        equ	244	;# 
 14474   0000F4                     DMAnSPTRL       equ	244	;# 
 14475   0000F5                     DMAnSPTRH       equ	245	;# 
 14476   0000F6                     DMAnSPTRU       equ	246	;# 
 14477   0000F7                     DMAnSSZ         equ	247	;# 
 14478   0000F7                     DMAnSSZL        equ	247	;# 
 14479   0000F8                     DMAnSSZH        equ	248	;# 
 14480   0000F9                     DMAnSSA         equ	249	;# 
 14481   0000F9                     DMAnSSAL        equ	249	;# 
 14482   0000FA                     DMAnSSAH        equ	250	;# 
 14483   0000FB                     DMAnSSAU        equ	251	;# 
 14484   0000FC                     DMAnCON0        equ	252	;# 
 14485   0000FD                     DMAnCON1        equ	253	;# 
 14486   0000FE                     DMAnAIRQ        equ	254	;# 
 14487   0000FF                     DMAnSIRQ        equ	255	;# 
 14488   000100                     C1CONL          equ	256	;# 
 14489   000101                     C1CONH          equ	257	;# 
 14490   000102                     C1CONU          equ	258	;# 
 14491   000103                     C1CONT          equ	259	;# 
 14492   000104                     C1NBTCFGL       equ	260	;# 
 14493   000105                     C1NBTCFGH       equ	261	;# 
 14494   000106                     C1NBTCFGU       equ	262	;# 
 14495   000107                     C1NBTCFGT       equ	263	;# 
 14496   000108                     C1DBTCFGL       equ	264	;# 
 14497   000109                     C1DBTCFGH       equ	265	;# 
 14498   00010A                     C1DBTCFGU       equ	266	;# 
 14499   00010B                     C1DBTCFGT       equ	267	;# 
 14500   00010C                     C1TDCL          equ	268	;# 
 14501   00010D                     C1TDCH          equ	269	;# 
 14502   00010E                     C1TDCU          equ	270	;# 
 14503   000110                     C1TBC           equ	272	;# 
 14504   000110                     C1TBCL          equ	272	;# 
 14505   000111                     C1TBCH          equ	273	;# 
 14506   000112                     C1TBCU          equ	274	;# 
 14507   000113                     C1TBCT          equ	275	;# 
 14508   000114                     C1TSCONL        equ	276	;# 
 14509   000115                     C1TSCONH        equ	277	;# 
 14510   000116                     C1TSCONU        equ	278	;# 
 14511   000117                     C1TSCONT        equ	279	;# 
 14512   000118                     C1VECL          equ	280	;# 
 14513   000119                     C1VECH          equ	281	;# 
 14514   00011A                     C1VECU          equ	282	;# 
 14515   00011B                     C1VECT          equ	283	;# 
 14516   00011C                     C1INTL          equ	284	;# 
 14517   00011D                     C1INTH          equ	285	;# 
 14518   00011E                     C1INTU          equ	286	;# 
 14519   00011F                     C1INTT          equ	287	;# 
 14520   000120                     C1RXIF          equ	288	;# 
 14521   000120                     C1RXIFL         equ	288	;# 
 14522   000121                     C1RXIFH         equ	289	;# 
 14523   000122                     C1RXIFU         equ	290	;# 
 14524   000123                     C1RXIFT         equ	291	;# 
 14525   000124                     C1TXIF          equ	292	;# 
 14526   000124                     C1TXIFL         equ	292	;# 
 14527   000125                     C1TXIFH         equ	293	;# 
 14528   000126                     C1TXIFU         equ	294	;# 
 14529   000127                     C1TXIFT         equ	295	;# 
 14530   000128                     C1RXOVIF        equ	296	;# 
 14531   000128                     C1RXOVIFL       equ	296	;# 
 14532   000129                     C1RXOVIFH       equ	297	;# 
 14533   00012A                     C1RXOVIFU       equ	298	;# 
 14534   00012B                     C1RXOVIFT       equ	299	;# 
 14535   00012C                     C1TXATIF        equ	300	;# 
 14536   00012C                     C1TXATIFL       equ	300	;# 
 14537   00012D                     C1TXATIFH       equ	301	;# 
 14538   00012E                     C1TXATIFU       equ	302	;# 
 14539   00012F                     C1TXATIFT       equ	303	;# 
 14540   000130                     C1TXREQ         equ	304	;# 
 14541   000130                     C1TXREQL        equ	304	;# 
 14542   000131                     C1TXREQH        equ	305	;# 
 14543   000132                     C1TXREQU        equ	306	;# 
 14544   000133                     C1TXREQT        equ	307	;# 
 14545   000134                     C1TRECL         equ	308	;# 
 14546   000135                     C1TRECH         equ	309	;# 
 14547   000136                     C1TRECU         equ	310	;# 
 14548   000137                     C1TRECT         equ	311	;# 
 14549   000138                     C1BDIAG0L       equ	312	;# 
 14550   000139                     C1BDIAG0H       equ	313	;# 
 14551   00013C                     C1BDIAG1L       equ	316	;# 
 14552   00013D                     C1BDIAG1H       equ	317	;# 
 14553   00013E                     C1BDIAG1U       equ	318	;# 
 14554   00013F                     C1BDIAG1T       equ	319	;# 
 14555   000140                     C1TEFCONL       equ	320	;# 
 14556   000141                     C1TEFCONH       equ	321	;# 
 14557   000142                     C1TEFCONU       equ	322	;# 
 14558   000143                     C1TEFCONT       equ	323	;# 
 14559   000144                     C1TEFSTAL       equ	324	;# 
 14560   000145                     C1TEFSTAH       equ	325	;# 
 14561   000146                     C1TEFSTAU       equ	326	;# 
 14562   000147                     C1TEFSTAT       equ	327	;# 
 14563   000148                     C1TEFUA         equ	328	;# 
 14564   000148                     C1TEFUAL        equ	328	;# 
 14565   000149                     C1TEFUAH        equ	329	;# 
 14566   00014A                     C1TEFUAU        equ	330	;# 
 14567   00014B                     C1TEFUAT        equ	331	;# 
 14568   00014C                     C1FIFOBA        equ	332	;# 
 14569   00014C                     C1FIFOBAL       equ	332	;# 
 14570   00014D                     C1FIFOBAH       equ	333	;# 
 14571   00014E                     C1FIFOBAU       equ	334	;# 
 14572   00014F                     C1FIFOBAT       equ	335	;# 
 14573   000150                     C1TXQCONL       equ	336	;# 
 14574   000151                     C1TXQCONH       equ	337	;# 
 14575   000152                     C1TXQCONU       equ	338	;# 
 14576   000153                     C1TXQCONT       equ	339	;# 
 14577   000154                     C1TXQSTAL       equ	340	;# 
 14578   000155                     C1TXQSTAH       equ	341	;# 
 14579   000156                     C1TXQSTAU       equ	342	;# 
 14580   000157                     C1TXQSTAT       equ	343	;# 
 14581   000158                     C1TXQUA         equ	344	;# 
 14582   000158                     C1TXQUAL        equ	344	;# 
 14583   000159                     C1TXQUAH        equ	345	;# 
 14584   00015A                     C1TXQUAU        equ	346	;# 
 14585   00015B                     C1TXQUAT        equ	347	;# 
 14586   00015C                     C1FIFOCON1      equ	348	;# 
 14587   00015C                     C1FIFOCON1L     equ	348	;# 
 14588   00015D                     C1FIFOCON1H     equ	349	;# 
 14589   00015E                     C1FIFOCON1U     equ	350	;# 
 14590   00015F                     C1FIFOCON1T     equ	351	;# 
 14591   000160                     C1FIFOSTA1      equ	352	;# 
 14592   000160                     C1FIFOSTA1L     equ	352	;# 
 14593   000161                     C1FIFOSTA1H     equ	353	;# 
 14594   000162                     C1FIFOSTA1U     equ	354	;# 
 14595   000163                     C1FIFOSTA1T     equ	355	;# 
 14596   000164                     C1FIFOUA1       equ	356	;# 
 14597   000164                     C1FIFOUA1L      equ	356	;# 
 14598   000165                     C1FIFOUA1H      equ	357	;# 
 14599   000166                     C1FIFOUA1U      equ	358	;# 
 14600   000167                     C1FIFOUA1T      equ	359	;# 
 14601   000168                     C1FIFOCON2      equ	360	;# 
 14602   000168                     C1FIFOCON2L     equ	360	;# 
 14603   000169                     C1FIFOCON2H     equ	361	;# 
 14604   00016A                     C1FIFOCON2U     equ	362	;# 
 14605   00016B                     C1FIFOCON2T     equ	363	;# 
 14606   00016C                     C1FIFOSTA2      equ	364	;# 
 14607   00016C                     C1FIFOSTA2L     equ	364	;# 
 14608   00016D                     C1FIFOSTA2H     equ	365	;# 
 14609   00016E                     C1FIFOSTA2U     equ	366	;# 
 14610   00016F                     C1FIFOSTA2T     equ	367	;# 
 14611   000170                     C1FIFOUA2       equ	368	;# 
 14612   000170                     C1FIFOUA2L      equ	368	;# 
 14613   000171                     C1FIFOUA2H      equ	369	;# 
 14614   000172                     C1FIFOUA2U      equ	370	;# 
 14615   000173                     C1FIFOUA2T      equ	371	;# 
 14616   000174                     C1FIFOCON3      equ	372	;# 
 14617   000174                     C1FIFOCON3L     equ	372	;# 
 14618   000175                     C1FIFOCON3H     equ	373	;# 
 14619   000176                     C1FIFOCON3U     equ	374	;# 
 14620   000177                     C1FIFOCON3T     equ	375	;# 
 14621   000178                     C1FIFOSTA3      equ	376	;# 
 14622   000178                     C1FIFOSTA3L     equ	376	;# 
 14623   000179                     C1FIFOSTA3H     equ	377	;# 
 14624   00017A                     C1FIFOSTA3U     equ	378	;# 
 14625   00017B                     C1FIFOSTA3T     equ	379	;# 
 14626   00017C                     C1FIFOUA3       equ	380	;# 
 14627   00017C                     C1FIFOUA3L      equ	380	;# 
 14628   00017D                     C1FIFOUA3H      equ	381	;# 
 14629   00017E                     C1FIFOUA3U      equ	382	;# 
 14630   00017F                     C1FIFOUA3T      equ	383	;# 
 14631   000180                     C1FLTCON0L      equ	384	;# 
 14632   000181                     C1FLTCON0H      equ	385	;# 
 14633   000182                     C1FLTCON0U      equ	386	;# 
 14634   000183                     C1FLTCON0T      equ	387	;# 
 14635   000184                     C1FLTCON1L      equ	388	;# 
 14636   000185                     C1FLTCON1H      equ	389	;# 
 14637   000186                     C1FLTCON1U      equ	390	;# 
 14638   000187                     C1FLTCON1T      equ	391	;# 
 14639   000188                     C1FLTCON2L      equ	392	;# 
 14640   000189                     C1FLTCON2H      equ	393	;# 
 14641   00018A                     C1FLTCON2U      equ	394	;# 
 14642   00018B                     C1FLTCON2T      equ	395	;# 
 14643   00018C                     C1FLTOBJ0       equ	396	;# 
 14644   00018C                     C1FLTOBJ0L      equ	396	;# 
 14645   00018D                     C1FLTOBJ0H      equ	397	;# 
 14646   00018E                     C1FLTOBJ0U      equ	398	;# 
 14647   00018F                     C1FLTOBJ0T      equ	399	;# 
 14648   000190                     C1MASK0         equ	400	;# 
 14649   000190                     C1MASK0L        equ	400	;# 
 14650   000191                     C1MASK0H        equ	401	;# 
 14651   000192                     C1MASK0U        equ	402	;# 
 14652   000193                     C1MASK0T        equ	403	;# 
 14653   000194                     C1FLTOBJ1       equ	404	;# 
 14654   000194                     C1FLTOBJ1L      equ	404	;# 
 14655   000195                     C1FLTOBJ1H      equ	405	;# 
 14656   000196                     C1FLTOBJ1U      equ	406	;# 
 14657   000197                     C1FLTOBJ1T      equ	407	;# 
 14658   000198                     C1MASK1         equ	408	;# 
 14659   000198                     C1MASK1L        equ	408	;# 
 14660   000199                     C1MASK1H        equ	409	;# 
 14661   00019A                     C1MASK1U        equ	410	;# 
 14662   00019B                     C1MASK1T        equ	411	;# 
 14663   00019C                     C1FLTOBJ2       equ	412	;# 
 14664   00019C                     C1FLTOBJ2L      equ	412	;# 
 14665   00019D                     C1FLTOBJ2H      equ	413	;# 
 14666   00019E                     C1FLTOBJ2U      equ	414	;# 
 14667   00019F                     C1FLTOBJ2T      equ	415	;# 
 14668   0001A0                     C1MASK2         equ	416	;# 
 14669   0001A0                     C1MASK2L        equ	416	;# 
 14670   0001A1                     C1MASK2H        equ	417	;# 
 14671   0001A2                     C1MASK2U        equ	418	;# 
 14672   0001A3                     C1MASK2T        equ	419	;# 
 14673   0001A4                     C1FLTOBJ3       equ	420	;# 
 14674   0001A4                     C1FLTOBJ3L      equ	420	;# 
 14675   0001A5                     C1FLTOBJ3H      equ	421	;# 
 14676   0001A6                     C1FLTOBJ3U      equ	422	;# 
 14677   0001A7                     C1FLTOBJ3T      equ	423	;# 
 14678   0001A8                     C1MASK3         equ	424	;# 
 14679   0001A8                     C1MASK3L        equ	424	;# 
 14680   0001A9                     C1MASK3H        equ	425	;# 
 14681   0001AA                     C1MASK3U        equ	426	;# 
 14682   0001AB                     C1MASK3T        equ	427	;# 
 14683   0001AC                     C1FLTOBJ4       equ	428	;# 
 14684   0001AC                     C1FLTOBJ4L      equ	428	;# 
 14685   0001AD                     C1FLTOBJ4H      equ	429	;# 
 14686   0001AE                     C1FLTOBJ4U      equ	430	;# 
 14687   0001AF                     C1FLTOBJ4T      equ	431	;# 
 14688   0001B0                     C1MASK4         equ	432	;# 
 14689   0001B0                     C1MASK4L        equ	432	;# 
 14690   0001B1                     C1MASK4H        equ	433	;# 
 14691   0001B2                     C1MASK4U        equ	434	;# 
 14692   0001B3                     C1MASK4T        equ	435	;# 
 14693   0001B4                     C1FLTOBJ5       equ	436	;# 
 14694   0001B4                     C1FLTOBJ5L      equ	436	;# 
 14695   0001B5                     C1FLTOBJ5H      equ	437	;# 
 14696   0001B6                     C1FLTOBJ5U      equ	438	;# 
 14697   0001B7                     C1FLTOBJ5T      equ	439	;# 
 14698   0001B8                     C1MASK5         equ	440	;# 
 14699   0001B8                     C1MASK5L        equ	440	;# 
 14700   0001B9                     C1MASK5H        equ	441	;# 
 14701   0001BA                     C1MASK5U        equ	442	;# 
 14702   0001BB                     C1MASK5T        equ	443	;# 
 14703   0001BC                     C1FLTOBJ6       equ	444	;# 
 14704   0001BC                     C1FLTOBJ6L      equ	444	;# 
 14705   0001BD                     C1FLTOBJ6H      equ	445	;# 
 14706   0001BE                     C1FLTOBJ6U      equ	446	;# 
 14707   0001BF                     C1FLTOBJ6T      equ	447	;# 
 14708   0001C0                     C1MASK6         equ	448	;# 
 14709   0001C0                     C1MASK6L        equ	448	;# 
 14710   0001C1                     C1MASK6H        equ	449	;# 
 14711   0001C2                     C1MASK6U        equ	450	;# 
 14712   0001C3                     C1MASK6T        equ	451	;# 
 14713   0001C4                     C1FLTOBJ7       equ	452	;# 
 14714   0001C4                     C1FLTOBJ7L      equ	452	;# 
 14715   0001C5                     C1FLTOBJ7H      equ	453	;# 
 14716   0001C6                     C1FLTOBJ7U      equ	454	;# 
 14717   0001C7                     C1FLTOBJ7T      equ	455	;# 
 14718   0001C8                     C1MASK7         equ	456	;# 
 14719   0001C8                     C1MASK7L        equ	456	;# 
 14720   0001C9                     C1MASK7H        equ	457	;# 
 14721   0001CA                     C1MASK7U        equ	458	;# 
 14722   0001CB                     C1MASK7T        equ	459	;# 
 14723   0001CC                     C1FLTOBJ8       equ	460	;# 
 14724   0001CC                     C1FLTOBJ8L      equ	460	;# 
 14725   0001CD                     C1FLTOBJ8H      equ	461	;# 
 14726   0001CE                     C1FLTOBJ8U      equ	462	;# 
 14727   0001CF                     C1FLTOBJ8T      equ	463	;# 
 14728   0001D0                     C1MASK8         equ	464	;# 
 14729   0001D0                     C1MASK8L        equ	464	;# 
 14730   0001D1                     C1MASK8H        equ	465	;# 
 14731   0001D2                     C1MASK8U        equ	466	;# 
 14732   0001D3                     C1MASK8T        equ	467	;# 
 14733   0001D4                     C1FLTOBJ9       equ	468	;# 
 14734   0001D4                     C1FLTOBJ9L      equ	468	;# 
 14735   0001D5                     C1FLTOBJ9H      equ	469	;# 
 14736   0001D6                     C1FLTOBJ9U      equ	470	;# 
 14737   0001D7                     C1FLTOBJ9T      equ	471	;# 
 14738   0001D8                     C1MASK9         equ	472	;# 
 14739   0001D8                     C1MASK9L        equ	472	;# 
 14740   0001D9                     C1MASK9H        equ	473	;# 
 14741   0001DA                     C1MASK9U        equ	474	;# 
 14742   0001DB                     C1MASK9T        equ	475	;# 
 14743   0001DC                     C1FLTOBJ10      equ	476	;# 
 14744   0001DC                     C1FLTOBJ10L     equ	476	;# 
 14745   0001DD                     C1FLTOBJ10H     equ	477	;# 
 14746   0001DE                     C1FLTOBJ10U     equ	478	;# 
 14747   0001DF                     C1FLTOBJ10T     equ	479	;# 
 14748   0001E0                     C1MASK10        equ	480	;# 
 14749   0001E0                     C1MASK10L       equ	480	;# 
 14750   0001E1                     C1MASK10H       equ	481	;# 
 14751   0001E2                     C1MASK10U       equ	482	;# 
 14752   0001E3                     C1MASK10T       equ	483	;# 
 14753   0001E4                     C1FLTOBJ11      equ	484	;# 
 14754   0001E4                     C1FLTOBJ11L     equ	484	;# 
 14755   0001E5                     C1FLTOBJ11H     equ	485	;# 
 14756   0001E6                     C1FLTOBJ11U     equ	486	;# 
 14757   0001E7                     C1FLTOBJ11T     equ	487	;# 
 14758   0001E8                     C1MASK11        equ	488	;# 
 14759   0001E8                     C1MASK11L       equ	488	;# 
 14760   0001E9                     C1MASK11H       equ	489	;# 
 14761   0001EA                     C1MASK11U       equ	490	;# 
 14762   0001EB                     C1MASK11T       equ	491	;# 
 14763   000200                     PPSLOCK         equ	512	;# 
 14764   000201                     RA0PPS          equ	513	;# 
 14765   000202                     RA1PPS          equ	514	;# 
 14766   000203                     RA2PPS          equ	515	;# 
 14767   000204                     RA3PPS          equ	516	;# 
 14768   000205                     RA4PPS          equ	517	;# 
 14769   000206                     RA5PPS          equ	518	;# 
 14770   000207                     RA6PPS          equ	519	;# 
 14771   000208                     RA7PPS          equ	520	;# 
 14772   000209                     RB0PPS          equ	521	;# 
 14773   00020A                     RB1PPS          equ	522	;# 
 14774   00020B                     RB2PPS          equ	523	;# 
 14775   00020C                     RB3PPS          equ	524	;# 
 14776   00020D                     RB4PPS          equ	525	;# 
 14777   00020E                     RB5PPS          equ	526	;# 
 14778   00020F                     RB6PPS          equ	527	;# 
 14779   000210                     RB7PPS          equ	528	;# 
 14780   000211                     RC0PPS          equ	529	;# 
 14781   000212                     RC1PPS          equ	530	;# 
 14782   000213                     RC2PPS          equ	531	;# 
 14783   000214                     RC3PPS          equ	532	;# 
 14784   000215                     RC4PPS          equ	533	;# 
 14785   000216                     RC5PPS          equ	534	;# 
 14786   000217                     RC6PPS          equ	535	;# 
 14787   000218                     RC7PPS          equ	536	;# 
 14788   00023D                     CANRXPPS        equ	573	;# 
 14789   00023E                     INT0PPS         equ	574	;# 
 14790   00023F                     INT1PPS         equ	575	;# 
 14791   000240                     INT2PPS         equ	576	;# 
 14792   000241                     T0CKIPPS        equ	577	;# 
 14793   000242                     T1CKIPPS        equ	578	;# 
 14794   000243                     T1GPPS          equ	579	;# 
 14795   000244                     T3CKIPPS        equ	580	;# 
 14796   000245                     T3GPPS          equ	581	;# 
 14797   000246                     T5CKIPPS        equ	582	;# 
 14798   000247                     T5GPPS          equ	583	;# 
 14799   000248                     T2INPPS         equ	584	;# 
 14800   000249                     T4INPPS         equ	585	;# 
 14801   00024A                     T6INPPS         equ	586	;# 
 14802   00024B                     TUIN0PPS        equ	587	;# 
 14803   00024C                     TUIN1PPS        equ	588	;# 
 14804   00024F                     CCP1PPS         equ	591	;# 
 14805   000250                     CCP2PPS         equ	592	;# 
 14806   000251                     CCP3PPS         equ	593	;# 
 14807   000253                     PWM1ERSPPS      equ	595	;# 
 14808   000254                     PWM2ERSPPS      equ	596	;# 
 14809   000255                     PWM3ERSPPS      equ	597	;# 
 14810   000256                     PWM4ERSPPS      equ	598	;# 
 14811   000257                     PWMIN0PPS       equ	599	;# 
 14812   000258                     PWMIN1PPS       equ	600	;# 
 14813   000259                     SMT1WINPPS      equ	601	;# 
 14814   00025A                     SMT1SIGPPS      equ	602	;# 
 14815   00025B                     CWG1PPS         equ	603	;# 
 14816   00025B                     CWG1INPPS       equ	603	;# 
 14817   00025C                     CWG2PPS         equ	604	;# 
 14818   00025C                     CWG2INPPS       equ	604	;# 
 14819   00025D                     CWG3PPS         equ	605	;# 
 14820   00025D                     CWG3INPPS       equ	605	;# 
 14821   00025E                     MD1CARLPPS      equ	606	;# 
 14822   00025E                     MDCARLPPS       equ	606	;# 
 14823   00025F                     MD1CARHPPS      equ	607	;# 
 14824   00025F                     MDCARHPPS       equ	607	;# 
 14825   000260                     MD1SRCPPS       equ	608	;# 
 14826   000260                     MDSRCPPS        equ	608	;# 
 14827   000261                     CLCIN0PPS       equ	609	;# 
 14828   000262                     CLCIN1PPS       equ	610	;# 
 14829   000263                     CLCIN2PPS       equ	611	;# 
 14830   000264                     CLCIN3PPS       equ	612	;# 
 14831   000265                     CLCIN4PPS       equ	613	;# 
 14832   000266                     CLCIN5PPS       equ	614	;# 
 14833   000267                     CLCIN6PPS       equ	615	;# 
 14834   000268                     CLCIN7PPS       equ	616	;# 
 14835   000269                     ADACTPPS        equ	617	;# 
 14836   00026A                     SPI1SCKPPS      equ	618	;# 
 14837   00026B                     SPI1SDIPPS      equ	619	;# 
 14838   00026C                     SPI1SSPPS       equ	620	;# 
 14839   00026D                     SPI2SCKPPS      equ	621	;# 
 14840   00026E                     SPI2SDIPPS      equ	622	;# 
 14841   00026F                     SPI2SSPPS       equ	623	;# 
 14842   000270                     I2C1SDAPPS      equ	624	;# 
 14843   000271                     I2C1SCLPPS      equ	625	;# 
 14844   000272                     U1RXPPS         equ	626	;# 
 14845   000273                     U1CTSPPS        equ	627	;# 
 14846   000274                     U2RXPPS         equ	628	;# 
 14847   000275                     U2CTSPPS        equ	629	;# 
 14848   000276                     U3RXPPS         equ	630	;# 
 14849   000277                     U3CTSPPS        equ	631	;# 
 14850   000278                     U4RXPPS         equ	632	;# 
 14851   000279                     U4CTSPPS        equ	633	;# 
 14852   00027A                     U5RXPPS         equ	634	;# 
 14853   00027B                     U5CTSPPS        equ	635	;# 
 14854   000286                     RC4I2C          equ	646	;# 
 14855   000287                     RC3I2C          equ	647	;# 
 14856   000288                     RB2I2C          equ	648	;# 
 14857   000289                     RB1I2C          equ	649	;# 
 14858   00028A                     I2C1RXB         equ	650	;# 
 14859   00028B                     I2C1TXB         equ	651	;# 
 14860   00028C                     I2C1CNTL        equ	652	;# 
 14861   00028D                     I2C1CNTH        equ	653	;# 
 14862   00028E                     I2C1ADB0        equ	654	;# 
 14863   00028F                     I2C1ADB1        equ	655	;# 
 14864   000290                     I2C1ADR0        equ	656	;# 
 14865   000291                     I2C1ADR1        equ	657	;# 
 14866   000292                     I2C1ADR2        equ	658	;# 
 14867   000293                     I2C1ADR3        equ	659	;# 
 14868   000294                     I2C1CON0        equ	660	;# 
 14869   000295                     I2C1CON1        equ	661	;# 
 14870   000296                     I2C1CON2        equ	662	;# 
 14871   000297                     I2C1ERR         equ	663	;# 
 14872   000298                     I2C1STAT0       equ	664	;# 
 14873   000299                     I2C1STAT1       equ	665	;# 
 14874   00029A                     I2C1PIR         equ	666	;# 
 14875   00029B                     I2C1PIE         equ	667	;# 
 14876   00029C                     I2C1BTO         equ	668	;# 
 14877   00029D                     I2C1BAUD        equ	669	;# 
 14878   00029E                     I2C1CLK         equ	670	;# 
 14879   00029F                     I2C1BTOC        equ	671	;# 
 14880   0002A1                     U1RXB           equ	673	;# 
 14881   0002A1                     U1RXBL          equ	673	;# 
 14882   0002A2                     U1RXCHK         equ	674	;# 
 14883   0002A3                     U1TXB           equ	675	;# 
 14884   0002A3                     U1TXBL          equ	675	;# 
 14885   0002A4                     U1TXCHK         equ	676	;# 
 14886   0002A5                     U1P1            equ	677	;# 
 14887   0002A5                     U1P1L           equ	677	;# 
 14888   0002A6                     U1P1H           equ	678	;# 
 14889   0002A7                     U1P2            equ	679	;# 
 14890   0002A7                     U1P2L           equ	679	;# 
 14891   0002A8                     U1P2H           equ	680	;# 
 14892   0002A9                     U1P3            equ	681	;# 
 14893   0002A9                     U1P3L           equ	681	;# 
 14894   0002AA                     U1P3H           equ	682	;# 
 14895   0002AB                     U1CON0          equ	683	;# 
 14896   0002AC                     U1CON1          equ	684	;# 
 14897   0002AD                     U1CON2          equ	685	;# 
 14898   0002AE                     U1BRG           equ	686	;# 
 14899   0002AE                     U1BRGL          equ	686	;# 
 14900   0002AF                     U1BRGH          equ	687	;# 
 14901   0002B0                     U1FIFO          equ	688	;# 
 14902   0002B1                     U1UIR           equ	689	;# 
 14903   0002B2                     U1ERRIR         equ	690	;# 
 14904   0002B3                     U1ERRIE         equ	691	;# 
 14905   0002B4                     U2RXB           equ	692	;# 
 14906   0002B4                     U2RXBL          equ	692	;# 
 14907   0002B5                     U2RXCHK         equ	693	;# 
 14908   0002B6                     U2TXB           equ	694	;# 
 14909   0002B6                     U2TXBL          equ	694	;# 
 14910   0002B7                     U2TXCHK         equ	695	;# 
 14911   0002B8                     U2P1            equ	696	;# 
 14912   0002B8                     U2P1L           equ	696	;# 
 14913   0002B9                     U2P1H           equ	697	;# 
 14914   0002BA                     U2P2            equ	698	;# 
 14915   0002BA                     U2P2L           equ	698	;# 
 14916   0002BB                     U2P2H           equ	699	;# 
 14917   0002BC                     U2P3            equ	700	;# 
 14918   0002BC                     U2P3L           equ	700	;# 
 14919   0002BD                     U2P3H           equ	701	;# 
 14920   0002BE                     U2CON0          equ	702	;# 
 14921   0002BF                     U2CON1          equ	703	;# 
 14922   0002C0                     U2CON2          equ	704	;# 
 14923   0002C1                     U2BRG           equ	705	;# 
 14924   0002C1                     U2BRGL          equ	705	;# 
 14925   0002C2                     U2BRGH          equ	706	;# 
 14926   0002C3                     U2FIFO          equ	707	;# 
 14927   0002C4                     U2UIR           equ	708	;# 
 14928   0002C5                     U2ERRIR         equ	709	;# 
 14929   0002C6                     U2ERRIE         equ	710	;# 
 14930   0002C7                     U3RXB           equ	711	;# 
 14931   0002C7                     U3RXBL          equ	711	;# 
 14932   0002C9                     U3TXB           equ	713	;# 
 14933   0002C9                     U3TXBL          equ	713	;# 
 14934   0002CB                     U3P1            equ	715	;# 
 14935   0002CB                     U3P1L           equ	715	;# 
 14936   0002CD                     U3P2            equ	717	;# 
 14937   0002CD                     U3P2L           equ	717	;# 
 14938   0002CF                     U3P3            equ	719	;# 
 14939   0002CF                     U3P3L           equ	719	;# 
 14940   0002D1                     U3CON0          equ	721	;# 
 14941   0002D2                     U3CON1          equ	722	;# 
 14942   0002D3                     U3CON2          equ	723	;# 
 14943   0002D4                     U3BRG           equ	724	;# 
 14944   0002D4                     U3BRGL          equ	724	;# 
 14945   0002D5                     U3BRGH          equ	725	;# 
 14946   0002D6                     U3FIFO          equ	726	;# 
 14947   0002D7                     U3UIR           equ	727	;# 
 14948   0002D8                     U3ERRIR         equ	728	;# 
 14949   0002D9                     U3ERRIE         equ	729	;# 
 14950   0002DA                     U4RXB           equ	730	;# 
 14951   0002DA                     U4RXBL          equ	730	;# 
 14952   0002DC                     U4TXB           equ	732	;# 
 14953   0002DC                     U4TXBL          equ	732	;# 
 14954   0002DE                     U4P1            equ	734	;# 
 14955   0002DE                     U4P1L           equ	734	;# 
 14956   0002E0                     U4P2            equ	736	;# 
 14957   0002E0                     U4P2L           equ	736	;# 
 14958   0002E2                     U4P3            equ	738	;# 
 14959   0002E2                     U4P3L           equ	738	;# 
 14960   0002E4                     U4CON0          equ	740	;# 
 14961   0002E5                     U4CON1          equ	741	;# 
 14962   0002E6                     U4CON2          equ	742	;# 
 14963   0002E7                     U4BRG           equ	743	;# 
 14964   0002E7                     U4BRGL          equ	743	;# 
 14965   0002E8                     U4BRGH          equ	744	;# 
 14966   0002E9                     U4FIFO          equ	745	;# 
 14967   0002EA                     U4UIR           equ	746	;# 
 14968   0002EB                     U4ERRIR         equ	747	;# 
 14969   0002EC                     U4ERRIE         equ	748	;# 
 14970   0002ED                     U5RXB           equ	749	;# 
 14971   0002ED                     U5RXBL          equ	749	;# 
 14972   0002EF                     U5TXB           equ	751	;# 
 14973   0002EF                     U5TXBL          equ	751	;# 
 14974   0002F1                     U5P1            equ	753	;# 
 14975   0002F1                     U5P1L           equ	753	;# 
 14976   0002F3                     U5P2            equ	755	;# 
 14977   0002F3                     U5P2L           equ	755	;# 
 14978   0002F5                     U5P3            equ	757	;# 
 14979   0002F5                     U5P3L           equ	757	;# 
 14980   0002F7                     U5CON0          equ	759	;# 
 14981   0002F8                     U5CON1          equ	760	;# 
 14982   0002F9                     U5CON2          equ	761	;# 
 14983   0002FA                     U5BRG           equ	762	;# 
 14984   0002FA                     U5BRGL          equ	762	;# 
 14985   0002FB                     U5BRGH          equ	763	;# 
 14986   0002FC                     U5FIFO          equ	764	;# 
 14987   0002FD                     U5UIR           equ	765	;# 
 14988   0002FE                     U5ERRIR         equ	766	;# 
 14989   0002FF                     U5ERRIE         equ	767	;# 
 14990   000300                     SMT1TMR         equ	768	;# 
 14991   000300                     SMT1TMRL        equ	768	;# 
 14992   000301                     SMT1TMRH        equ	769	;# 
 14993   000302                     SMT1TMRU        equ	770	;# 
 14994   000303                     SMT1CPR         equ	771	;# 
 14995   000303                     SMT1CPRL        equ	771	;# 
 14996   000304                     SMT1CPRH        equ	772	;# 
 14997   000305                     SMT1CPRU        equ	773	;# 
 14998   000306                     SMT1CPW         equ	774	;# 
 14999   000306                     SMT1CPWL        equ	774	;# 
 15000   000307                     SMT1CPWH        equ	775	;# 
 15001   000308                     SMT1CPWU        equ	776	;# 
 15002   000309                     SMT1PR          equ	777	;# 
 15003   000309                     SMT1PRL         equ	777	;# 
 15004   00030A                     SMT1PRH         equ	778	;# 
 15005   00030B                     SMT1PRU         equ	779	;# 
 15006   00030C                     SMT1CON0        equ	780	;# 
 15007   00030D                     SMT1CON1        equ	781	;# 
 15008   00030E                     SMT1STAT        equ	782	;# 
 15009   00030F                     SMT1CLK         equ	783	;# 
 15010   000310                     SMT1SIG         equ	784	;# 
 15011   000311                     SMT1WIN         equ	785	;# 
 15012   000318                     TMR0L           equ	792	;# 
 15013   000318                     TMR0            equ	792	;# 
 15014   000319                     TMR0H           equ	793	;# 
 15015   000319                     PR0             equ	793	;# 
 15016   00031A                     T0CON0          equ	794	;# 
 15017   00031B                     T0CON1          equ	795	;# 
 15018   00031C                     TMR1            equ	796	;# 
 15019   00031C                     TMR1L           equ	796	;# 
 15020   00031D                     TMR1H           equ	797	;# 
 15021   00031E                     T1CON           equ	798	;# 
 15022   00031E                     TMR1CON         equ	798	;# 
 15023   00031F                     T1GCON          equ	799	;# 
 15024   00031F                     TMR1GCON        equ	799	;# 
 15025   000320                     T1GATE          equ	800	;# 
 15026   000320                     TMR1GATE        equ	800	;# 
 15027   000321                     T1CLK           equ	801	;# 
 15028   000321                     TMR1CLK         equ	801	;# 
 15029   000321                     PR1             equ	801	;# 
 15030   000322                     T2TMR           equ	802	;# 
 15031   000322                     TMR2            equ	802	;# 
 15032   000323                     T2PR            equ	803	;# 
 15033   000323                     PR2             equ	803	;# 
 15034   000324                     T2CON           equ	804	;# 
 15035   000325                     T2HLT           equ	805	;# 
 15036   000326                     T2CLKCON        equ	806	;# 
 15037   000326                     T2CLK           equ	806	;# 
 15038   000327                     T2RST           equ	807	;# 
 15039   000328                     TMR3            equ	808	;# 
 15040   000328                     TMR3L           equ	808	;# 
 15041   000329                     TMR3H           equ	809	;# 
 15042   00032A                     T3CON           equ	810	;# 
 15043   00032A                     TMR3CON         equ	810	;# 
 15044   00032B                     T3GCON          equ	811	;# 
 15045   00032B                     TMR3GCON        equ	811	;# 
 15046   00032C                     T3GATE          equ	812	;# 
 15047   00032C                     TMR3GATE        equ	812	;# 
 15048   00032D                     T3CLK           equ	813	;# 
 15049   00032D                     TMR3CLK         equ	813	;# 
 15050   00032D                     PR3             equ	813	;# 
 15051   00032E                     T4TMR           equ	814	;# 
 15052   00032E                     TMR4            equ	814	;# 
 15053   00032F                     T4PR            equ	815	;# 
 15054   00032F                     PR4             equ	815	;# 
 15055   000330                     T4CON           equ	816	;# 
 15056   000331                     T4HLT           equ	817	;# 
 15057   000332                     T4CLKCON        equ	818	;# 
 15058   000332                     T4CLK           equ	818	;# 
 15059   000333                     T4RST           equ	819	;# 
 15060   000334                     TMR5            equ	820	;# 
 15061   000334                     TMR5L           equ	820	;# 
 15062   000335                     TMR5H           equ	821	;# 
 15063   000336                     T5CON           equ	822	;# 
 15064   000336                     TMR5CON         equ	822	;# 
 15065   000337                     T5GCON          equ	823	;# 
 15066   000337                     TMR5GCON        equ	823	;# 
 15067   000338                     T5GATE          equ	824	;# 
 15068   000338                     TMR5GATE        equ	824	;# 
 15069   000339                     T5CLK           equ	825	;# 
 15070   000339                     TMR5CLK         equ	825	;# 
 15071   000339                     PR5             equ	825	;# 
 15072   00033A                     T6TMR           equ	826	;# 
 15073   00033A                     TMR6            equ	826	;# 
 15074   00033B                     T6PR            equ	827	;# 
 15075   00033B                     PR6             equ	827	;# 
 15076   00033C                     T6CON           equ	828	;# 
 15077   00033D                     T6HLT           equ	829	;# 
 15078   00033E                     T6CLKCON        equ	830	;# 
 15079   00033E                     T6CLK           equ	830	;# 
 15080   00033F                     T6RST           equ	831	;# 
 15081   000340                     CCPR1           equ	832	;# 
 15082   000340                     CCPR1L          equ	832	;# 
 15083   000341                     CCPR1H          equ	833	;# 
 15084   000342                     CCP1CON         equ	834	;# 
 15085   000343                     CCP1CAP         equ	835	;# 
 15086   000344                     CCPR2           equ	836	;# 
 15087   000344                     CCPR2L          equ	836	;# 
 15088   000345                     CCPR2H          equ	837	;# 
 15089   000346                     CCP2CON         equ	838	;# 
 15090   000347                     CCP2CAP         equ	839	;# 
 15091   000348                     CCPR3           equ	840	;# 
 15092   000348                     CCPR3L          equ	840	;# 
 15093   000349                     CCPR3H          equ	841	;# 
 15094   00034A                     CCP3CON         equ	842	;# 
 15095   00034B                     CCP3CAP         equ	843	;# 
 15096   00034C                     CCPTMRS0        equ	844	;# 
 15097   00034F                     CRCDATA         equ	847	;# 
 15098   00034F                     CRCDATAL        equ	847	;# 
 15099   000350                     CRCDATAH        equ	848	;# 
 15100   000351                     CRCDATAU        equ	849	;# 
 15101   000352                     CRCDATAT        equ	850	;# 
 15102   000353                     CRCOUT          equ	851	;# 
 15103   000353                     CRCSHFT         equ	851	;# 
 15104   000353                     CRCXOR          equ	851	;# 
 15105   000353                     CRCOUTL         equ	851	;# 
 15106   000353                     CRCSHFTL        equ	851	;# 
 15107   000353                     CRCSHIFTL       equ	851	;# 
 15108   000353                     CRCXORL         equ	851	;# 
 15109   000354                     CRCOUTH         equ	852	;# 
 15110   000354                     CRCSHFTH        equ	852	;# 
 15111   000354                     CRCSHIFTH       equ	852	;# 
 15112   000354                     CRCXORH         equ	852	;# 
 15113   000355                     CRCOUTU         equ	853	;# 
 15114   000355                     CRCSHFTU        equ	853	;# 
 15115   000355                     CRCSHIFTU       equ	853	;# 
 15116   000355                     CRCXORU         equ	853	;# 
 15117   000356                     CRCOUTT         equ	854	;# 
 15118   000356                     CRCSHFTT        equ	854	;# 
 15119   000356                     CRCSHIFTT       equ	854	;# 
 15120   000356                     CRCXORT         equ	854	;# 
 15121   000357                     CRCCON0         equ	855	;# 
 15122   000358                     CRCCON1         equ	856	;# 
 15123   000359                     CRCCON2         equ	857	;# 
 15124   00035A                     SCANLADR        equ	858	;# 
 15125   00035A                     SCANLADRL       equ	858	;# 
 15126   00035B                     SCANLADRH       equ	859	;# 
 15127   00035C                     SCANLADRU       equ	860	;# 
 15128   00035D                     SCANHADR        equ	861	;# 
 15129   00035D                     SCANHADRL       equ	861	;# 
 15130   00035E                     SCANHADRH       equ	862	;# 
 15131   00035F                     SCANHADRU       equ	863	;# 
 15132   000360                     SCANCON0        equ	864	;# 
 15133   000361                     SCANTRIG        equ	865	;# 
 15134   000362                     IPR0            equ	866	;# 
 15135   000363                     IPR1            equ	867	;# 
 15136   000364                     IPR2            equ	868	;# 
 15137   000365                     IPR3            equ	869	;# 
 15138   000366                     IPR4            equ	870	;# 
 15139   000367                     IPR5            equ	871	;# 
 15140   000368                     IPR6            equ	872	;# 
 15141   000369                     IPR7            equ	873	;# 
 15142   00036A                     IPR8            equ	874	;# 
 15143   00036B                     IPR9            equ	875	;# 
 15144   00036C                     IPR10           equ	876	;# 
 15145   00036D                     IPR11           equ	877	;# 
 15146   00036E                     IPR12           equ	878	;# 
 15147   00036F                     IPR13           equ	879	;# 
 15148   000370                     IPR14           equ	880	;# 
 15149   000371                     IPR15           equ	881	;# 
 15150   000373                     STATUS_CSHAD    equ	883	;# 
 15151   000374                     WREG_CSHAD      equ	884	;# 
 15152   000375                     BSR_CSHAD       equ	885	;# 
 15153   000376                     SHADCON         equ	886	;# 
 15154   000377                     STATUS_SHAD     equ	887	;# 
 15155   000378                     WREG_SHAD       equ	888	;# 
 15156   000379                     BSR_SHAD        equ	889	;# 
 15157   00037A                     PCLATH_SHAD     equ	890	;# 
 15158   00037B                     PCLATU_SHAD     equ	891	;# 
 15159   00037C                     FSR0SH          equ	892	;# 
 15160   00037C                     FSR0L_SHAD      equ	892	;# 
 15161   00037D                     FSR0H_SHAD      equ	893	;# 
 15162   00037E                     FSR1SH          equ	894	;# 
 15163   00037E                     FSR1L_SHAD      equ	894	;# 
 15164   00037F                     FSR1H_SHAD      equ	895	;# 
 15165   000380                     FSR2SH          equ	896	;# 
 15166   000380                     FSR2L_SHAD      equ	896	;# 
 15167   000381                     FSR2H_SHAD      equ	897	;# 
 15168   000382                     PRODSH          equ	898	;# 
 15169   000382                     PRODL_SHAD      equ	898	;# 
 15170   000383                     PRODH_SHAD      equ	899	;# 
 15171   000387                     TU16ACON0       equ	903	;# 
 15172   000388                     TU16ACON1       equ	904	;# 
 15173   000389                     TU16AHLT        equ	905	;# 
 15174   00038A                     TU16APS         equ	906	;# 
 15175   00038B                     TU16ATMR        equ	907	;# 
 15176   00038B                     TU16ACR         equ	907	;# 
 15177   00038B                     TU16ATMRL       equ	907	;# 
 15178   00038B                     TU16ACRL        equ	907	;# 
 15179   00038C                     TU16ATMRH       equ	908	;# 
 15180   00038C                     TU16ACRH        equ	908	;# 
 15181   00038D                     TU16APR         equ	909	;# 
 15182   00038D                     TU16APRL        equ	909	;# 
 15183   00038E                     TU16APRH        equ	910	;# 
 15184   00038F                     TU16ACLK        equ	911	;# 
 15185   000390                     TU16AERS        equ	912	;# 
 15186   000393                     TU16BCON0       equ	915	;# 
 15187   000394                     TU16BCON1       equ	916	;# 
 15188   000395                     TU16BHLT        equ	917	;# 
 15189   000396                     TU16BPS         equ	918	;# 
 15190   000397                     TU16BTMR        equ	919	;# 
 15191   000397                     TU16BCR         equ	919	;# 
 15192   000397                     TU16BTMRL       equ	919	;# 
 15193   000397                     TU16BCRL        equ	919	;# 
 15194   000398                     TU16BTMRH       equ	920	;# 
 15195   000398                     TU16BCRH        equ	920	;# 
 15196   000399                     TU16BPR         equ	921	;# 
 15197   000399                     TU16BPRL        equ	921	;# 
 15198   00039A                     TU16BPRH        equ	922	;# 
 15199   00039B                     TU16BCLK        equ	923	;# 
 15200   00039C                     TU16BERS        equ	924	;# 
 15201   0003BB                     TUCHAIN         equ	955	;# 
 15202   0003BC                     CWG1CLK         equ	956	;# 
 15203   0003BC                     CWG1CLKCON      equ	956	;# 
 15204   0003BD                     CWG1ISM         equ	957	;# 
 15205   0003BE                     CWG1DBR         equ	958	;# 
 15206   0003BF                     CWG1DBF         equ	959	;# 
 15207   0003C0                     CWG1CON0        equ	960	;# 
 15208   0003C1                     CWG1CON1        equ	961	;# 
 15209   0003C2                     CWG1AS0         equ	962	;# 
 15210   0003C3                     CWG1AS1         equ	963	;# 
 15211   0003C4                     CWG1STR         equ	964	;# 
 15212   0003C5                     CWG2CLK         equ	965	;# 
 15213   0003C5                     CWG2CLKCON      equ	965	;# 
 15214   0003C6                     CWG2ISM         equ	966	;# 
 15215   0003C7                     CWG2DBR         equ	967	;# 
 15216   0003C8                     CWG2DBF         equ	968	;# 
 15217   0003C9                     CWG2CON0        equ	969	;# 
 15218   0003CA                     CWG2CON1        equ	970	;# 
 15219   0003CB                     CWG2AS0         equ	971	;# 
 15220   0003CC                     CWG2AS1         equ	972	;# 
 15221   0003CD                     CWG2STR         equ	973	;# 
 15222   0003CE                     CWG3CLK         equ	974	;# 
 15223   0003CE                     CWG3CLKCON      equ	974	;# 
 15224   0003CF                     CWG3ISM         equ	975	;# 
 15225   0003D0                     CWG3DBR         equ	976	;# 
 15226   0003D1                     CWG3DBF         equ	977	;# 
 15227   0003D2                     CWG3CON0        equ	978	;# 
 15228   0003D3                     CWG3CON1        equ	979	;# 
 15229   0003D4                     CWG3AS0         equ	980	;# 
 15230   0003D5                     CWG3AS1         equ	981	;# 
 15231   0003D6                     CWG3STR         equ	982	;# 
 15232   0003D7                     FVRCON          equ	983	;# 
 15233   0003D8                     ADCPCON         equ	984	;# 
 15234   0003D8                     ADCP            equ	984	;# 
 15235   0003D9                     ADLTH           equ	985	;# 
 15236   0003D9                     ADLTHL          equ	985	;# 
 15237   0003DA                     ADLTHH          equ	986	;# 
 15238   0003DB                     ADUTH           equ	987	;# 
 15239   0003DB                     ADUTHL          equ	987	;# 
 15240   0003DC                     ADUTHH          equ	988	;# 
 15241   0003DD                     ADERR           equ	989	;# 
 15242   0003DD                     ADERRL          equ	989	;# 
 15243   0003DE                     ADERRH          equ	990	;# 
 15244   0003DF                     ADSTPT          equ	991	;# 
 15245   0003DF                     ADSTPTL         equ	991	;# 
 15246   0003E0                     ADSTPTH         equ	992	;# 
 15247   0003E1                     ADFLTR          equ	993	;# 
 15248   0003E1                     ADFLTRL         equ	993	;# 
 15249   0003E2                     ADFLTRH         equ	994	;# 
 15250   0003E3                     ADACC           equ	995	;# 
 15251   0003E3                     ADACCL          equ	995	;# 
 15252   0003E4                     ADACCH          equ	996	;# 
 15253   0003E5                     ADACCU          equ	997	;# 
 15254   0003E6                     ADCNT           equ	998	;# 
 15255   0003E7                     ADRPT           equ	999	;# 
 15256   0003E8                     ADPREV          equ	1000	;# 
 15257   0003E8                     ADPREVL         equ	1000	;# 
 15258   0003E9                     ADPREVH         equ	1001	;# 
 15259   0003EA                     ADRES           equ	1002	;# 
 15260   0003EA                     ADRESL          equ	1002	;# 
 15261   0003EB                     ADRESH          equ	1003	;# 
 15262   0003EC                     ADPCH           equ	1004	;# 
 15263   0003EE                     ADACQ           equ	1006	;# 
 15264   0003EE                     ADACQL          equ	1006	;# 
 15265   0003EF                     ADACQH          equ	1007	;# 
 15266   0003F0                     ADCAP           equ	1008	;# 
 15267   0003F1                     ADPRE           equ	1009	;# 
 15268   0003F1                     ADPREL          equ	1009	;# 
 15269   0003F2                     ADPREH          equ	1010	;# 
 15270   0003F3                     ADCON0          equ	1011	;# 
 15271   0003F4                     ADCON1          equ	1012	;# 
 15272   0003F5                     ADCON2          equ	1013	;# 
 15273   0003F6                     ADCON3          equ	1014	;# 
 15274   0003F7                     ADSTAT          equ	1015	;# 
 15275   0003F8                     ADREF           equ	1016	;# 
 15276   0003F9                     ADACT           equ	1017	;# 
 15277   0003FA                     ADCLK           equ	1018	;# 
 15278   0003FB                     ADCTX           equ	1019	;# 
 15279   0003FC                     ADCSEL1         equ	1020	;# 
 15280   0003FD                     ADCSEL2         equ	1021	;# 
 15281   0003FE                     ADCSEL3         equ	1022	;# 
 15282   0003FF                     ADCSEL4         equ	1023	;# 
 15283   000400                     ANSELA          equ	1024	;# 
 15284   000401                     WPUA            equ	1025	;# 
 15285   000402                     ODCONA          equ	1026	;# 
 15286   000403                     SLRCONA         equ	1027	;# 
 15287   000404                     INLVLA          equ	1028	;# 
 15288   000405                     IOCAP           equ	1029	;# 
 15289   000406                     IOCAN           equ	1030	;# 
 15290   000407                     IOCAF           equ	1031	;# 
 15291   000408                     ANSELB          equ	1032	;# 
 15292   000409                     WPUB            equ	1033	;# 
 15293   00040A                     ODCONB          equ	1034	;# 
 15294   00040B                     SLRCONB         equ	1035	;# 
 15295   00040C                     INLVLB          equ	1036	;# 
 15296   00040D                     IOCBP           equ	1037	;# 
 15297   00040E                     IOCBN           equ	1038	;# 
 15298   00040F                     IOCBF           equ	1039	;# 
 15299   000410                     ANSELC          equ	1040	;# 
 15300   000411                     WPUC            equ	1041	;# 
 15301   000412                     ODCONC          equ	1042	;# 
 15302   000413                     SLRCONC         equ	1043	;# 
 15303   000414                     INLVLC          equ	1044	;# 
 15304   000415                     IOCCP           equ	1045	;# 
 15305   000416                     IOCCN           equ	1046	;# 
 15306   000417                     IOCCF           equ	1047	;# 
 15307   000421                     WPUE            equ	1057	;# 
 15308   000424                     INLVLE          equ	1060	;# 
 15309   000425                     IOCEP           equ	1061	;# 
 15310   000426                     IOCEN           equ	1062	;# 
 15311   000427                     IOCEF           equ	1063	;# 
 15312   000440                     NCO1ACC         equ	1088	;# 
 15313   000440                     NCO1ACCL        equ	1088	;# 
 15314   000441                     NCO1ACCH        equ	1089	;# 
 15315   000442                     NCO1ACCU        equ	1090	;# 
 15316   000443                     NCO1INC         equ	1091	;# 
 15317   000443                     NCO1INCL        equ	1091	;# 
 15318   000444                     NCO1INCH        equ	1092	;# 
 15319   000445                     NCO1INCU        equ	1093	;# 
 15320   000446                     NCO1CON         equ	1094	;# 
 15321   000447                     NCO1CLK         equ	1095	;# 
 15322   000448                     NCO2ACC         equ	1096	;# 
 15323   000448                     NCO2ACCL        equ	1096	;# 
 15324   000449                     NCO2ACCH        equ	1097	;# 
 15325   00044A                     NCO2ACCU        equ	1098	;# 
 15326   00044B                     NCO2INC         equ	1099	;# 
 15327   00044B                     NCO2INCL        equ	1099	;# 
 15328   00044C                     NCO2INCH        equ	1100	;# 
 15329   00044D                     NCO2INCU        equ	1101	;# 
 15330   00044E                     NCO2CON         equ	1102	;# 
 15331   00044F                     NCO2CLK         equ	1103	;# 
 15332   000450                     NCO3ACC         equ	1104	;# 
 15333   000450                     NCO3ACCL        equ	1104	;# 
 15334   000451                     NCO3ACCH        equ	1105	;# 
 15335   000452                     NCO3ACCU        equ	1106	;# 
 15336   000453                     NCO3INC         equ	1107	;# 
 15337   000453                     NCO3INCL        equ	1107	;# 
 15338   000454                     NCO3INCH        equ	1108	;# 
 15339   000455                     NCO3INCU        equ	1109	;# 
 15340   000456                     NCO3CON         equ	1110	;# 
 15341   000457                     NCO3CLK         equ	1111	;# 
 15342   000458                     FSCMCON         equ	1112	;# 
 15343   000459                     IVTLOCK         equ	1113	;# 
 15344   00045A                     IVTAD           equ	1114	;# 
 15345   00045A                     IVTADL          equ	1114	;# 
 15346   00045B                     IVTADH          equ	1115	;# 
 15347   00045C                     IVTADU          equ	1116	;# 
 15348   00045D                     IVTBASE         equ	1117	;# 
 15349   00045D                     IVTBASEL        equ	1117	;# 
 15350   00045E                     IVTBASEH        equ	1118	;# 
 15351   00045F                     IVTBASEU        equ	1119	;# 
 15352   000460                     PWM1ERS         equ	1120	;# 
 15353   000461                     PWM1CLK         equ	1121	;# 
 15354   000462                     PWM1LDS         equ	1122	;# 
 15355   000463                     PWM1PR          equ	1123	;# 
 15356   000463                     PWM1PRL         equ	1123	;# 
 15357   000464                     PWM1PRH         equ	1124	;# 
 15358   000465                     PWM1CPRE        equ	1125	;# 
 15359   000466                     PWM1PIPOS       equ	1126	;# 
 15360   000467                     PWM1GIR         equ	1127	;# 
 15361   000468                     PWM1GIE         equ	1128	;# 
 15362   000469                     PWM1CON         equ	1129	;# 
 15363   00046A                     PWM1S1CFG       equ	1130	;# 
 15364   00046B                     PWM1S1P1        equ	1131	;# 
 15365   00046B                     PWM1S1P1L       equ	1131	;# 
 15366   00046C                     PWM1S1P1H       equ	1132	;# 
 15367   00046D                     PWM1S1P2        equ	1133	;# 
 15368   00046D                     PWM1S1P2L       equ	1133	;# 
 15369   00046E                     PWM1S1P2H       equ	1134	;# 
 15370   00046F                     PWM2ERS         equ	1135	;# 
 15371   000470                     PWM2CLK         equ	1136	;# 
 15372   000471                     PWM2LDS         equ	1137	;# 
 15373   000472                     PWM2PR          equ	1138	;# 
 15374   000472                     PWM2PRL         equ	1138	;# 
 15375   000473                     PWM2PRH         equ	1139	;# 
 15376   000474                     PWM2CPRE        equ	1140	;# 
 15377   000475                     PWM2PIPOS       equ	1141	;# 
 15378   000476                     PWM2GIR         equ	1142	;# 
 15379   000477                     PWM2GIE         equ	1143	;# 
 15380   000478                     PWM2CON         equ	1144	;# 
 15381   000479                     PWM2S1CFG       equ	1145	;# 
 15382   00047A                     PWM2S1P1        equ	1146	;# 
 15383   00047A                     PWM2S1P1L       equ	1146	;# 
 15384   00047B                     PWM2S1P1H       equ	1147	;# 
 15385   00047C                     PWM2S1P2        equ	1148	;# 
 15386   00047C                     PWM2S1P2L       equ	1148	;# 
 15387   00047D                     PWM2S1P2H       equ	1149	;# 
 15388   00047E                     PWM3ERS         equ	1150	;# 
 15389   00047F                     PWM3CLK         equ	1151	;# 
 15390   000480                     PWM3LDS         equ	1152	;# 
 15391   000481                     PWM3PR          equ	1153	;# 
 15392   000481                     PWM3PRL         equ	1153	;# 
 15393   000482                     PWM3PRH         equ	1154	;# 
 15394   000483                     PWM3CPRE        equ	1155	;# 
 15395   000484                     PWM3PIPOS       equ	1156	;# 
 15396   000485                     PWM3GIR         equ	1157	;# 
 15397   000486                     PWM3GIE         equ	1158	;# 
 15398   000487                     PWM3CON         equ	1159	;# 
 15399   000488                     PWM3S1CFG       equ	1160	;# 
 15400   000489                     PWM3S1P1        equ	1161	;# 
 15401   000489                     PWM3S1P1L       equ	1161	;# 
 15402   00048A                     PWM3S1P1H       equ	1162	;# 
 15403   00048B                     PWM3S1P2        equ	1163	;# 
 15404   00048B                     PWM3S1P2L       equ	1163	;# 
 15405   00048C                     PWM3S1P2H       equ	1164	;# 
 15406   00048D                     PWM4ERS         equ	1165	;# 
 15407   00048E                     PWM4CLK         equ	1166	;# 
 15408   00048F                     PWM4LDS         equ	1167	;# 
 15409   000490                     PWM4PR          equ	1168	;# 
 15410   000490                     PWM4PRL         equ	1168	;# 
 15411   000491                     PWM4PRH         equ	1169	;# 
 15412   000492                     PWM4CPRE        equ	1170	;# 
 15413   000493                     PWM4PIPOS       equ	1171	;# 
 15414   000494                     PWM4GIR         equ	1172	;# 
 15415   000495                     PWM4GIE         equ	1173	;# 
 15416   000496                     PWM4CON         equ	1174	;# 
 15417   000497                     PWM4S1CFG       equ	1175	;# 
 15418   000498                     PWM4S1P1        equ	1176	;# 
 15419   000498                     PWM4S1P1L       equ	1176	;# 
 15420   000499                     PWM4S1P1H       equ	1177	;# 
 15421   00049A                     PWM4S1P2        equ	1178	;# 
 15422   00049A                     PWM4S1P2L       equ	1178	;# 
 15423   00049B                     PWM4S1P2H       equ	1179	;# 
 15424   00049C                     PWMLOAD         equ	1180	;# 
 15425   00049D                     PWMEN           equ	1181	;# 
 15426   00049E                     PIE0            equ	1182	;# 
 15427   00049F                     PIE1            equ	1183	;# 
 15428   0004A0                     PIE2            equ	1184	;# 
 15429   0004A1                     PIE3            equ	1185	;# 
 15430   0004A2                     PIE4            equ	1186	;# 
 15431   0004A3                     PIE5            equ	1187	;# 
 15432   0004A4                     PIE6            equ	1188	;# 
 15433   0004A5                     PIE7            equ	1189	;# 
 15434   0004A6                     PIE8            equ	1190	;# 
 15435   0004A7                     PIE9            equ	1191	;# 
 15436   0004A8                     PIE10           equ	1192	;# 
 15437   0004A9                     PIE11           equ	1193	;# 
 15438   0004AA                     PIE12           equ	1194	;# 
 15439   0004AB                     PIE13           equ	1195	;# 
 15440   0004AC                     PIE14           equ	1196	;# 
 15441   0004AD                     PIE15           equ	1197	;# 
 15442   0004AE                     PIR0            equ	1198	;# 
 15443   0004AF                     PIR1            equ	1199	;# 
 15444   0004B0                     PIR2            equ	1200	;# 
 15445   0004B1                     PIR3            equ	1201	;# 
 15446   0004B2                     PIR4            equ	1202	;# 
 15447   0004B3                     PIR5            equ	1203	;# 
 15448   0004B4                     PIR6            equ	1204	;# 
 15449   0004B5                     PIR7            equ	1205	;# 
 15450   0004B6                     PIR8            equ	1206	;# 
 15451   0004B7                     PIR9            equ	1207	;# 
 15452   0004B8                     PIR10           equ	1208	;# 
 15453   0004B9                     PIR11           equ	1209	;# 
 15454   0004BA                     PIR12           equ	1210	;# 
 15455   0004BB                     PIR13           equ	1211	;# 
 15456   0004BC                     PIR14           equ	1212	;# 
 15457   0004BD                     PIR15           equ	1213	;# 
 15458   0004BE                     LATA            equ	1214	;# 
 15459   0004BF                     LATB            equ	1215	;# 
 15460   0004C0                     LATC            equ	1216	;# 
 15461   0004C6                     TRISA           equ	1222	;# 
 15462   0004C7                     TRISB           equ	1223	;# 
 15463   0004C8                     TRISC           equ	1224	;# 
 15464   0004CA                     TRISE           equ	1226	;# 
 15465   0004CE                     PORTA           equ	1230	;# 
 15466   0004CF                     PORTB           equ	1231	;# 
 15467   0004D0                     PORTC           equ	1232	;# 
 15468   0004D2                     PORTE           equ	1234	;# 
 15469   0004D6                     INTCON0         equ	1238	;# 
 15470   0004D7                     INTCON1         equ	1239	;# 
 15471   0004D8                     STATUS          equ	1240	;# 
 15472   0004D9                     FSR2            equ	1241	;# 
 15473   0004D9                     FSR2L           equ	1241	;# 
 15474   0004DA                     FSR2H           equ	1242	;# 
 15475   0004DB                     PLUSW2          equ	1243	;# 
 15476   0004DC                     PREINC2         equ	1244	;# 
 15477   0004DD                     POSTDEC2        equ	1245	;# 
 15478   0004DE                     POSTINC2        equ	1246	;# 
 15479   0004DF                     INDF2           equ	1247	;# 
 15480   0004E0                     BSR             equ	1248	;# 
 15481   0004E1                     FSR1            equ	1249	;# 
 15482   0004E1                     FSR1L           equ	1249	;# 
 15483   0004E2                     FSR1H           equ	1250	;# 
 15484   0004E3                     PLUSW1          equ	1251	;# 
 15485   0004E4                     PREINC1         equ	1252	;# 
 15486   0004E5                     POSTDEC1        equ	1253	;# 
 15487   0004E6                     POSTINC1        equ	1254	;# 
 15488   0004E7                     INDF1           equ	1255	;# 
 15489   0004E8                     WREG            equ	1256	;# 
 15490   0004E9                     FSR0            equ	1257	;# 
 15491   0004E9                     FSR0L           equ	1257	;# 
 15492   0004EA                     FSR0H           equ	1258	;# 
 15493   0004EB                     PLUSW0          equ	1259	;# 
 15494   0004EC                     PREINC0         equ	1260	;# 
 15495   0004ED                     POSTDEC0        equ	1261	;# 
 15496   0004EE                     POSTINC0        equ	1262	;# 
 15497   0004EF                     INDF0           equ	1263	;# 
 15498   0004F0                     PCON0           equ	1264	;# 
 15499   0004F1                     PCON1           equ	1265	;# 
 15500   0004F2                     CPUDOZE         equ	1266	;# 
 15501   0004F3                     PROD            equ	1267	;# 
 15502   0004F3                     PRODL           equ	1267	;# 
 15503   0004F4                     PRODH           equ	1268	;# 
 15504   0004F5                     TABLAT          equ	1269	;# 
 15505   0004F6                     TBLPTR          equ	1270	;# 
 15506   0004F6                     TBLPTRL         equ	1270	;# 
 15507   0004F7                     TBLPTRH         equ	1271	;# 
 15508   0004F8                     TBLPTRU         equ	1272	;# 
 15509   0004F9                     PCLAT           equ	1273	;# 
 15510   0004F9                     PCL             equ	1273	;# 
 15511   0004FA                     PCLATH          equ	1274	;# 
 15512   0004FB                     PCLATU          equ	1275	;# 
 15513   0004FC                     STKPTR          equ	1276	;# 
 15514   0004FD                     TOS             equ	1277	;# 
 15515   0004FD                     TOSL            equ	1277	;# 
 15516   0004FE                     TOSH            equ	1278	;# 
 15517   0004FF                     TOSU            equ	1279	;# 
 15518   000038                     BOOTREG         equ	56	;# 
 15519   000039                     CLKRCON         equ	57	;# 
 15520   00003A                     CLKRCLK         equ	58	;# 
 15521   000040                     NVMCON0         equ	64	;# 
 15522   000041                     NVMCON1         equ	65	;# 
 15523   000042                     NVMLOCK         equ	66	;# 
 15524   000043                     NVMADR          equ	67	;# 
 15525   000043                     NVMADRL         equ	67	;# 
 15526   000044                     NVMADRH         equ	68	;# 
 15527   000045                     NVMADRU         equ	69	;# 
 15528   000046                     NVMDAT          equ	70	;# 
 15529   000046                     NVMDATL         equ	70	;# 
 15530   000047                     NVMDATH         equ	71	;# 
 15531   000048                     VREGCON         equ	72	;# 
 15532   000049                     BORCON          equ	73	;# 
 15533   00004A                     HLVDCON0        equ	74	;# 
 15534   00004B                     HLVDCON1        equ	75	;# 
 15535   00004C                     ZCDCON          equ	76	;# 
 15536   000060                     PMD0            equ	96	;# 
 15537   000061                     PMD1            equ	97	;# 
 15538   000062                     PMD2            equ	98	;# 
 15539   000063                     PMD3            equ	99	;# 
 15540   000064                     PMD4            equ	100	;# 
 15541   000065                     PMD5            equ	101	;# 
 15542   000066                     PMD6            equ	102	;# 
 15543   000067                     PMD7            equ	103	;# 
 15544   000068                     PMD8            equ	104	;# 
 15545   00006A                     MD1CON0         equ	106	;# 
 15546   00006B                     MD1CON1         equ	107	;# 
 15547   00006C                     MD1SRC          equ	108	;# 
 15548   00006D                     MD1CARL         equ	109	;# 
 15549   00006E                     MD1CARH         equ	110	;# 
 15550   00006F                     CMOUT           equ	111	;# 
 15551   000070                     CM1CON0         equ	112	;# 
 15552   000071                     CM1CON1         equ	113	;# 
 15553   000072                     CM1NCH          equ	114	;# 
 15554   000073                     CM1PCH          equ	115	;# 
 15555   000074                     CM2CON0         equ	116	;# 
 15556   000075                     CM2CON1         equ	117	;# 
 15557   000076                     CM2NCH          equ	118	;# 
 15558   000077                     CM2PCH          equ	119	;# 
 15559   000078                     WDTCON0         equ	120	;# 
 15560   000079                     WDTCON1         equ	121	;# 
 15561   00007A                     WDTPSL          equ	122	;# 
 15562   00007B                     WDTPSH          equ	123	;# 
 15563   00007C                     WDTTMR          equ	124	;# 
 15564   00007D                     DAC1DAT         equ	125	;# 
 15565   00007D                     DAC1DATL        equ	125	;# 
 15566   00007F                     DAC1CON         equ	127	;# 
 15567   000080                     SPI1RXB         equ	128	;# 
 15568   000081                     SPI1TXB         equ	129	;# 
 15569   000082                     SPI1TCNT        equ	130	;# 
 15570   000082                     SPI1TCNTL       equ	130	;# 
 15571   000083                     SPI1TCNTH       equ	131	;# 
 15572   000084                     SPI1CON0        equ	132	;# 
 15573   000085                     SPI1CON1        equ	133	;# 
 15574   000086                     SPI1CON2        equ	134	;# 
 15575   000087                     SPI1STATUS      equ	135	;# 
 15576   000088                     SPI1TWIDTH      equ	136	;# 
 15577   000089                     SPI1BAUD        equ	137	;# 
 15578   00008A                     SPI1INTF        equ	138	;# 
 15579   00008B                     SPI1INTE        equ	139	;# 
 15580   00008C                     SPI1CLK         equ	140	;# 
 15581   00008D                     SPI2RXB         equ	141	;# 
 15582   00008E                     SPI2TXB         equ	142	;# 
 15583   00008F                     SPI2TCNT        equ	143	;# 
 15584   00008F                     SPI2TCNTL       equ	143	;# 
 15585   000090                     SPI2TCNTH       equ	144	;# 
 15586   000091                     SPI2CON0        equ	145	;# 
 15587   000092                     SPI2CON1        equ	146	;# 
 15588   000093                     SPI2CON2        equ	147	;# 
 15589   000094                     SPI2STATUS      equ	148	;# 
 15590   000095                     SPI2TWIDTH      equ	149	;# 
 15591   000096                     SPI2BAUD        equ	150	;# 
 15592   000097                     SPI2INTF        equ	151	;# 
 15593   000098                     SPI2INTE        equ	152	;# 
 15594   000099                     SPI2CLK         equ	153	;# 
 15595   0000AC                     ACTCON          equ	172	;# 
 15596   0000AD                     OSCCON1         equ	173	;# 
 15597   0000AE                     OSCCON2         equ	174	;# 
 15598   0000AF                     OSCCON3         equ	175	;# 
 15599   0000B0                     OSCTUNE         equ	176	;# 
 15600   0000B1                     OSCFRQ          equ	177	;# 
 15601   0000B1                     OSCFREQ         equ	177	;# 
 15602   0000B2                     OSCSTAT         equ	178	;# 
 15603   0000B2                     OSCSTAT1        equ	178	;# 
 15604   0000B3                     OSCEN           equ	179	;# 
 15605   0000B4                     PRLOCK          equ	180	;# 
 15606   0000B5                     SCANPR          equ	181	;# 
 15607   0000B6                     DMA1PR          equ	182	;# 
 15608   0000B7                     DMA2PR          equ	183	;# 
 15609   0000B8                     DMA3PR          equ	184	;# 
 15610   0000B9                     DMA4PR          equ	185	;# 
 15611   0000BA                     DMA5PR          equ	186	;# 
 15612   0000BB                     DMA6PR          equ	187	;# 
 15613   0000BC                     DMA7PR          equ	188	;# 
 15614   0000BD                     DMA8PR          equ	189	;# 
 15615   0000BE                     MAINPR          equ	190	;# 
 15616   0000BF                     ISRPR           equ	191	;# 
 15617   0000D4                     CLCDATA         equ	212	;# 
 15618   0000D5                     CLCSELECT       equ	213	;# 
 15619   0000D6                     CLCnCON         equ	214	;# 
 15620   0000D7                     CLCnPOL         equ	215	;# 
 15621   0000D8                     CLCnSEL0        equ	216	;# 
 15622   0000D9                     CLCnSEL1        equ	217	;# 
 15623   0000DA                     CLCnSEL2        equ	218	;# 
 15624   0000DB                     CLCnSEL3        equ	219	;# 
 15625   0000DC                     CLCnGLS0        equ	220	;# 
 15626   0000DD                     CLCnGLS1        equ	221	;# 
 15627   0000DE                     CLCnGLS2        equ	222	;# 
 15628   0000DF                     CLCnGLS3        equ	223	;# 
 15629   0000E8                     DMASELECT       equ	232	;# 
 15630   0000E9                     DMAnBUF         equ	233	;# 
 15631   0000EA                     DMAnDCNT        equ	234	;# 
 15632   0000EA                     DMAnDCNTL       equ	234	;# 
 15633   0000EB                     DMAnDCNTH       equ	235	;# 
 15634   0000EC                     DMAnDPTR        equ	236	;# 
 15635   0000EC                     DMAnDPTRL       equ	236	;# 
 15636   0000ED                     DMAnDPTRH       equ	237	;# 
 15637   0000EE                     DMAnDSZ         equ	238	;# 
 15638   0000EE                     DMAnDSZL        equ	238	;# 
 15639   0000EF                     DMAnDSZH        equ	239	;# 
 15640   0000F0                     DMAnDSA         equ	240	;# 
 15641   0000F0                     DMAnDSAL        equ	240	;# 
 15642   0000F1                     DMAnDSAH        equ	241	;# 
 15643   0000F2                     DMAnSCNT        equ	242	;# 
 15644   0000F2                     DMAnSCNTL       equ	242	;# 
 15645   0000F3                     DMAnSCNTH       equ	243	;# 
 15646   0000F4                     DMAnSPTR        equ	244	;# 
 15647   0000F4                     DMAnSPTRL       equ	244	;# 
 15648   0000F5                     DMAnSPTRH       equ	245	;# 
 15649   0000F6                     DMAnSPTRU       equ	246	;# 
 15650   0000F7                     DMAnSSZ         equ	247	;# 
 15651   0000F7                     DMAnSSZL        equ	247	;# 
 15652   0000F8                     DMAnSSZH        equ	248	;# 
 15653   0000F9                     DMAnSSA         equ	249	;# 
 15654   0000F9                     DMAnSSAL        equ	249	;# 
 15655   0000FA                     DMAnSSAH        equ	250	;# 
 15656   0000FB                     DMAnSSAU        equ	251	;# 
 15657   0000FC                     DMAnCON0        equ	252	;# 
 15658   0000FD                     DMAnCON1        equ	253	;# 
 15659   0000FE                     DMAnAIRQ        equ	254	;# 
 15660   0000FF                     DMAnSIRQ        equ	255	;# 
 15661   000100                     C1CONL          equ	256	;# 
 15662   000101                     C1CONH          equ	257	;# 
 15663   000102                     C1CONU          equ	258	;# 
 15664   000103                     C1CONT          equ	259	;# 
 15665   000104                     C1NBTCFGL       equ	260	;# 
 15666   000105                     C1NBTCFGH       equ	261	;# 
 15667   000106                     C1NBTCFGU       equ	262	;# 
 15668   000107                     C1NBTCFGT       equ	263	;# 
 15669   000108                     C1DBTCFGL       equ	264	;# 
 15670   000109                     C1DBTCFGH       equ	265	;# 
 15671   00010A                     C1DBTCFGU       equ	266	;# 
 15672   00010B                     C1DBTCFGT       equ	267	;# 
 15673   00010C                     C1TDCL          equ	268	;# 
 15674   00010D                     C1TDCH          equ	269	;# 
 15675   00010E                     C1TDCU          equ	270	;# 
 15676   000110                     C1TBC           equ	272	;# 
 15677   000110                     C1TBCL          equ	272	;# 
 15678   000111                     C1TBCH          equ	273	;# 
 15679   000112                     C1TBCU          equ	274	;# 
 15680   000113                     C1TBCT          equ	275	;# 
 15681   000114                     C1TSCONL        equ	276	;# 
 15682   000115                     C1TSCONH        equ	277	;# 
 15683   000116                     C1TSCONU        equ	278	;# 
 15684   000117                     C1TSCONT        equ	279	;# 
 15685   000118                     C1VECL          equ	280	;# 
 15686   000119                     C1VECH          equ	281	;# 
 15687   00011A                     C1VECU          equ	282	;# 
 15688   00011B                     C1VECT          equ	283	;# 
 15689   00011C                     C1INTL          equ	284	;# 
 15690   00011D                     C1INTH          equ	285	;# 
 15691   00011E                     C1INTU          equ	286	;# 
 15692   00011F                     C1INTT          equ	287	;# 
 15693   000120                     C1RXIF          equ	288	;# 
 15694   000120                     C1RXIFL         equ	288	;# 
 15695   000121                     C1RXIFH         equ	289	;# 
 15696   000122                     C1RXIFU         equ	290	;# 
 15697   000123                     C1RXIFT         equ	291	;# 
 15698   000124                     C1TXIF          equ	292	;# 
 15699   000124                     C1TXIFL         equ	292	;# 
 15700   000125                     C1TXIFH         equ	293	;# 
 15701   000126                     C1TXIFU         equ	294	;# 
 15702   000127                     C1TXIFT         equ	295	;# 
 15703   000128                     C1RXOVIF        equ	296	;# 
 15704   000128                     C1RXOVIFL       equ	296	;# 
 15705   000129                     C1RXOVIFH       equ	297	;# 
 15706   00012A                     C1RXOVIFU       equ	298	;# 
 15707   00012B                     C1RXOVIFT       equ	299	;# 
 15708   00012C                     C1TXATIF        equ	300	;# 
 15709   00012C                     C1TXATIFL       equ	300	;# 
 15710   00012D                     C1TXATIFH       equ	301	;# 
 15711   00012E                     C1TXATIFU       equ	302	;# 
 15712   00012F                     C1TXATIFT       equ	303	;# 
 15713   000130                     C1TXREQ         equ	304	;# 
 15714   000130                     C1TXREQL        equ	304	;# 
 15715   000131                     C1TXREQH        equ	305	;# 
 15716   000132                     C1TXREQU        equ	306	;# 
 15717   000133                     C1TXREQT        equ	307	;# 
 15718   000134                     C1TRECL         equ	308	;# 
 15719   000135                     C1TRECH         equ	309	;# 
 15720   000136                     C1TRECU         equ	310	;# 
 15721   000137                     C1TRECT         equ	311	;# 
 15722   000138                     C1BDIAG0L       equ	312	;# 
 15723   000139                     C1BDIAG0H       equ	313	;# 
 15724   00013C                     C1BDIAG1L       equ	316	;# 
 15725   00013D                     C1BDIAG1H       equ	317	;# 
 15726   00013E                     C1BDIAG1U       equ	318	;# 
 15727   00013F                     C1BDIAG1T       equ	319	;# 
 15728   000140                     C1TEFCONL       equ	320	;# 
 15729   000141                     C1TEFCONH       equ	321	;# 
 15730   000142                     C1TEFCONU       equ	322	;# 
 15731   000143                     C1TEFCONT       equ	323	;# 
 15732   000144                     C1TEFSTAL       equ	324	;# 
 15733   000145                     C1TEFSTAH       equ	325	;# 
 15734   000146                     C1TEFSTAU       equ	326	;# 
 15735   000147                     C1TEFSTAT       equ	327	;# 
 15736   000148                     C1TEFUA         equ	328	;# 
 15737   000148                     C1TEFUAL        equ	328	;# 
 15738   000149                     C1TEFUAH        equ	329	;# 
 15739   00014A                     C1TEFUAU        equ	330	;# 
 15740   00014B                     C1TEFUAT        equ	331	;# 
 15741   00014C                     C1FIFOBA        equ	332	;# 
 15742   00014C                     C1FIFOBAL       equ	332	;# 
 15743   00014D                     C1FIFOBAH       equ	333	;# 
 15744   00014E                     C1FIFOBAU       equ	334	;# 
 15745   00014F                     C1FIFOBAT       equ	335	;# 
 15746   000150                     C1TXQCONL       equ	336	;# 
 15747   000151                     C1TXQCONH       equ	337	;# 
 15748   000152                     C1TXQCONU       equ	338	;# 
 15749   000153                     C1TXQCONT       equ	339	;# 
 15750   000154                     C1TXQSTAL       equ	340	;# 
 15751   000155                     C1TXQSTAH       equ	341	;# 
 15752   000156                     C1TXQSTAU       equ	342	;# 
 15753   000157                     C1TXQSTAT       equ	343	;# 
 15754   000158                     C1TXQUA         equ	344	;# 
 15755   000158                     C1TXQUAL        equ	344	;# 
 15756   000159                     C1TXQUAH        equ	345	;# 
 15757   00015A                     C1TXQUAU        equ	346	;# 
 15758   00015B                     C1TXQUAT        equ	347	;# 
 15759   00015C                     C1FIFOCON1      equ	348	;# 
 15760   00015C                     C1FIFOCON1L     equ	348	;# 
 15761   00015D                     C1FIFOCON1H     equ	349	;# 
 15762   00015E                     C1FIFOCON1U     equ	350	;# 
 15763   00015F                     C1FIFOCON1T     equ	351	;# 
 15764   000160                     C1FIFOSTA1      equ	352	;# 
 15765   000160                     C1FIFOSTA1L     equ	352	;# 
 15766   000161                     C1FIFOSTA1H     equ	353	;# 
 15767   000162                     C1FIFOSTA1U     equ	354	;# 
 15768   000163                     C1FIFOSTA1T     equ	355	;# 
 15769   000164                     C1FIFOUA1       equ	356	;# 
 15770   000164                     C1FIFOUA1L      equ	356	;# 
 15771   000165                     C1FIFOUA1H      equ	357	;# 
 15772   000166                     C1FIFOUA1U      equ	358	;# 
 15773   000167                     C1FIFOUA1T      equ	359	;# 
 15774   000168                     C1FIFOCON2      equ	360	;# 
 15775   000168                     C1FIFOCON2L     equ	360	;# 
 15776   000169                     C1FIFOCON2H     equ	361	;# 
 15777   00016A                     C1FIFOCON2U     equ	362	;# 
 15778   00016B                     C1FIFOCON2T     equ	363	;# 
 15779   00016C                     C1FIFOSTA2      equ	364	;# 
 15780   00016C                     C1FIFOSTA2L     equ	364	;# 
 15781   00016D                     C1FIFOSTA2H     equ	365	;# 
 15782   00016E                     C1FIFOSTA2U     equ	366	;# 
 15783   00016F                     C1FIFOSTA2T     equ	367	;# 
 15784   000170                     C1FIFOUA2       equ	368	;# 
 15785   000170                     C1FIFOUA2L      equ	368	;# 
 15786   000171                     C1FIFOUA2H      equ	369	;# 
 15787   000172                     C1FIFOUA2U      equ	370	;# 
 15788   000173                     C1FIFOUA2T      equ	371	;# 
 15789   000174                     C1FIFOCON3      equ	372	;# 
 15790   000174                     C1FIFOCON3L     equ	372	;# 
 15791   000175                     C1FIFOCON3H     equ	373	;# 
 15792   000176                     C1FIFOCON3U     equ	374	;# 
 15793   000177                     C1FIFOCON3T     equ	375	;# 
 15794   000178                     C1FIFOSTA3      equ	376	;# 
 15795   000178                     C1FIFOSTA3L     equ	376	;# 
 15796   000179                     C1FIFOSTA3H     equ	377	;# 
 15797   00017A                     C1FIFOSTA3U     equ	378	;# 
 15798   00017B                     C1FIFOSTA3T     equ	379	;# 
 15799   00017C                     C1FIFOUA3       equ	380	;# 
 15800   00017C                     C1FIFOUA3L      equ	380	;# 
 15801   00017D                     C1FIFOUA3H      equ	381	;# 
 15802   00017E                     C1FIFOUA3U      equ	382	;# 
 15803   00017F                     C1FIFOUA3T      equ	383	;# 
 15804   000180                     C1FLTCON0L      equ	384	;# 
 15805   000181                     C1FLTCON0H      equ	385	;# 
 15806   000182                     C1FLTCON0U      equ	386	;# 
 15807   000183                     C1FLTCON0T      equ	387	;# 
 15808   000184                     C1FLTCON1L      equ	388	;# 
 15809   000185                     C1FLTCON1H      equ	389	;# 
 15810   000186                     C1FLTCON1U      equ	390	;# 
 15811   000187                     C1FLTCON1T      equ	391	;# 
 15812   000188                     C1FLTCON2L      equ	392	;# 
 15813   000189                     C1FLTCON2H      equ	393	;# 
 15814   00018A                     C1FLTCON2U      equ	394	;# 
 15815   00018B                     C1FLTCON2T      equ	395	;# 
 15816   00018C                     C1FLTOBJ0       equ	396	;# 
 15817   00018C                     C1FLTOBJ0L      equ	396	;# 
 15818   00018D                     C1FLTOBJ0H      equ	397	;# 
 15819   00018E                     C1FLTOBJ0U      equ	398	;# 
 15820   00018F                     C1FLTOBJ0T      equ	399	;# 
 15821   000190                     C1MASK0         equ	400	;# 
 15822   000190                     C1MASK0L        equ	400	;# 
 15823   000191                     C1MASK0H        equ	401	;# 
 15824   000192                     C1MASK0U        equ	402	;# 
 15825   000193                     C1MASK0T        equ	403	;# 
 15826   000194                     C1FLTOBJ1       equ	404	;# 
 15827   000194                     C1FLTOBJ1L      equ	404	;# 
 15828   000195                     C1FLTOBJ1H      equ	405	;# 
 15829   000196                     C1FLTOBJ1U      equ	406	;# 
 15830   000197                     C1FLTOBJ1T      equ	407	;# 
 15831   000198                     C1MASK1         equ	408	;# 
 15832   000198                     C1MASK1L        equ	408	;# 
 15833   000199                     C1MASK1H        equ	409	;# 
 15834   00019A                     C1MASK1U        equ	410	;# 
 15835   00019B                     C1MASK1T        equ	411	;# 
 15836   00019C                     C1FLTOBJ2       equ	412	;# 
 15837   00019C                     C1FLTOBJ2L      equ	412	;# 
 15838   00019D                     C1FLTOBJ2H      equ	413	;# 
 15839   00019E                     C1FLTOBJ2U      equ	414	;# 
 15840   00019F                     C1FLTOBJ2T      equ	415	;# 
 15841   0001A0                     C1MASK2         equ	416	;# 
 15842   0001A0                     C1MASK2L        equ	416	;# 
 15843   0001A1                     C1MASK2H        equ	417	;# 
 15844   0001A2                     C1MASK2U        equ	418	;# 
 15845   0001A3                     C1MASK2T        equ	419	;# 
 15846   0001A4                     C1FLTOBJ3       equ	420	;# 
 15847   0001A4                     C1FLTOBJ3L      equ	420	;# 
 15848   0001A5                     C1FLTOBJ3H      equ	421	;# 
 15849   0001A6                     C1FLTOBJ3U      equ	422	;# 
 15850   0001A7                     C1FLTOBJ3T      equ	423	;# 
 15851   0001A8                     C1MASK3         equ	424	;# 
 15852   0001A8                     C1MASK3L        equ	424	;# 
 15853   0001A9                     C1MASK3H        equ	425	;# 
 15854   0001AA                     C1MASK3U        equ	426	;# 
 15855   0001AB                     C1MASK3T        equ	427	;# 
 15856   0001AC                     C1FLTOBJ4       equ	428	;# 
 15857   0001AC                     C1FLTOBJ4L      equ	428	;# 
 15858   0001AD                     C1FLTOBJ4H      equ	429	;# 
 15859   0001AE                     C1FLTOBJ4U      equ	430	;# 
 15860   0001AF                     C1FLTOBJ4T      equ	431	;# 
 15861   0001B0                     C1MASK4         equ	432	;# 
 15862   0001B0                     C1MASK4L        equ	432	;# 
 15863   0001B1                     C1MASK4H        equ	433	;# 
 15864   0001B2                     C1MASK4U        equ	434	;# 
 15865   0001B3                     C1MASK4T        equ	435	;# 
 15866   0001B4                     C1FLTOBJ5       equ	436	;# 
 15867   0001B4                     C1FLTOBJ5L      equ	436	;# 
 15868   0001B5                     C1FLTOBJ5H      equ	437	;# 
 15869   0001B6                     C1FLTOBJ5U      equ	438	;# 
 15870   0001B7                     C1FLTOBJ5T      equ	439	;# 
 15871   0001B8                     C1MASK5         equ	440	;# 
 15872   0001B8                     C1MASK5L        equ	440	;# 
 15873   0001B9                     C1MASK5H        equ	441	;# 
 15874   0001BA                     C1MASK5U        equ	442	;# 
 15875   0001BB                     C1MASK5T        equ	443	;# 
 15876   0001BC                     C1FLTOBJ6       equ	444	;# 
 15877   0001BC                     C1FLTOBJ6L      equ	444	;# 
 15878   0001BD                     C1FLTOBJ6H      equ	445	;# 
 15879   0001BE                     C1FLTOBJ6U      equ	446	;# 
 15880   0001BF                     C1FLTOBJ6T      equ	447	;# 
 15881   0001C0                     C1MASK6         equ	448	;# 
 15882   0001C0                     C1MASK6L        equ	448	;# 
 15883   0001C1                     C1MASK6H        equ	449	;# 
 15884   0001C2                     C1MASK6U        equ	450	;# 
 15885   0001C3                     C1MASK6T        equ	451	;# 
 15886   0001C4                     C1FLTOBJ7       equ	452	;# 
 15887   0001C4                     C1FLTOBJ7L      equ	452	;# 
 15888   0001C5                     C1FLTOBJ7H      equ	453	;# 
 15889   0001C6                     C1FLTOBJ7U      equ	454	;# 
 15890   0001C7                     C1FLTOBJ7T      equ	455	;# 
 15891   0001C8                     C1MASK7         equ	456	;# 
 15892   0001C8                     C1MASK7L        equ	456	;# 
 15893   0001C9                     C1MASK7H        equ	457	;# 
 15894   0001CA                     C1MASK7U        equ	458	;# 
 15895   0001CB                     C1MASK7T        equ	459	;# 
 15896   0001CC                     C1FLTOBJ8       equ	460	;# 
 15897   0001CC                     C1FLTOBJ8L      equ	460	;# 
 15898   0001CD                     C1FLTOBJ8H      equ	461	;# 
 15899   0001CE                     C1FLTOBJ8U      equ	462	;# 
 15900   0001CF                     C1FLTOBJ8T      equ	463	;# 
 15901   0001D0                     C1MASK8         equ	464	;# 
 15902   0001D0                     C1MASK8L        equ	464	;# 
 15903   0001D1                     C1MASK8H        equ	465	;# 
 15904   0001D2                     C1MASK8U        equ	466	;# 
 15905   0001D3                     C1MASK8T        equ	467	;# 
 15906   0001D4                     C1FLTOBJ9       equ	468	;# 
 15907   0001D4                     C1FLTOBJ9L      equ	468	;# 
 15908   0001D5                     C1FLTOBJ9H      equ	469	;# 
 15909   0001D6                     C1FLTOBJ9U      equ	470	;# 
 15910   0001D7                     C1FLTOBJ9T      equ	471	;# 
 15911   0001D8                     C1MASK9         equ	472	;# 
 15912   0001D8                     C1MASK9L        equ	472	;# 
 15913   0001D9                     C1MASK9H        equ	473	;# 
 15914   0001DA                     C1MASK9U        equ	474	;# 
 15915   0001DB                     C1MASK9T        equ	475	;# 
 15916   0001DC                     C1FLTOBJ10      equ	476	;# 
 15917   0001DC                     C1FLTOBJ10L     equ	476	;# 
 15918   0001DD                     C1FLTOBJ10H     equ	477	;# 
 15919   0001DE                     C1FLTOBJ10U     equ	478	;# 
 15920   0001DF                     C1FLTOBJ10T     equ	479	;# 
 15921   0001E0                     C1MASK10        equ	480	;# 
 15922   0001E0                     C1MASK10L       equ	480	;# 
 15923   0001E1                     C1MASK10H       equ	481	;# 
 15924   0001E2                     C1MASK10U       equ	482	;# 
 15925   0001E3                     C1MASK10T       equ	483	;# 
 15926   0001E4                     C1FLTOBJ11      equ	484	;# 
 15927   0001E4                     C1FLTOBJ11L     equ	484	;# 
 15928   0001E5                     C1FLTOBJ11H     equ	485	;# 
 15929   0001E6                     C1FLTOBJ11U     equ	486	;# 
 15930   0001E7                     C1FLTOBJ11T     equ	487	;# 
 15931   0001E8                     C1MASK11        equ	488	;# 
 15932   0001E8                     C1MASK11L       equ	488	;# 
 15933   0001E9                     C1MASK11H       equ	489	;# 
 15934   0001EA                     C1MASK11U       equ	490	;# 
 15935   0001EB                     C1MASK11T       equ	491	;# 
 15936   000200                     PPSLOCK         equ	512	;# 
 15937   000201                     RA0PPS          equ	513	;# 
 15938   000202                     RA1PPS          equ	514	;# 
 15939   000203                     RA2PPS          equ	515	;# 
 15940   000204                     RA3PPS          equ	516	;# 
 15941   000205                     RA4PPS          equ	517	;# 
 15942   000206                     RA5PPS          equ	518	;# 
 15943   000207                     RA6PPS          equ	519	;# 
 15944   000208                     RA7PPS          equ	520	;# 
 15945   000209                     RB0PPS          equ	521	;# 
 15946   00020A                     RB1PPS          equ	522	;# 
 15947   00020B                     RB2PPS          equ	523	;# 
 15948   00020C                     RB3PPS          equ	524	;# 
 15949   00020D                     RB4PPS          equ	525	;# 
 15950   00020E                     RB5PPS          equ	526	;# 
 15951   00020F                     RB6PPS          equ	527	;# 
 15952   000210                     RB7PPS          equ	528	;# 
 15953   000211                     RC0PPS          equ	529	;# 
 15954   000212                     RC1PPS          equ	530	;# 
 15955   000213                     RC2PPS          equ	531	;# 
 15956   000214                     RC3PPS          equ	532	;# 
 15957   000215                     RC4PPS          equ	533	;# 
 15958   000216                     RC5PPS          equ	534	;# 
 15959   000217                     RC6PPS          equ	535	;# 
 15960   000218                     RC7PPS          equ	536	;# 
 15961   00023D                     CANRXPPS        equ	573	;# 
 15962   00023E                     INT0PPS         equ	574	;# 
 15963   00023F                     INT1PPS         equ	575	;# 
 15964   000240                     INT2PPS         equ	576	;# 
 15965   000241                     T0CKIPPS        equ	577	;# 
 15966   000242                     T1CKIPPS        equ	578	;# 
 15967   000243                     T1GPPS          equ	579	;# 
 15968   000244                     T3CKIPPS        equ	580	;# 
 15969   000245                     T3GPPS          equ	581	;# 
 15970   000246                     T5CKIPPS        equ	582	;# 
 15971   000247                     T5GPPS          equ	583	;# 
 15972   000248                     T2INPPS         equ	584	;# 
 15973   000249                     T4INPPS         equ	585	;# 
 15974   00024A                     T6INPPS         equ	586	;# 
 15975   00024B                     TUIN0PPS        equ	587	;# 
 15976   00024C                     TUIN1PPS        equ	588	;# 
 15977   00024F                     CCP1PPS         equ	591	;# 
 15978   000250                     CCP2PPS         equ	592	;# 
 15979   000251                     CCP3PPS         equ	593	;# 
 15980   000253                     PWM1ERSPPS      equ	595	;# 
 15981   000254                     PWM2ERSPPS      equ	596	;# 
 15982   000255                     PWM3ERSPPS      equ	597	;# 
 15983   000256                     PWM4ERSPPS      equ	598	;# 
 15984   000257                     PWMIN0PPS       equ	599	;# 
 15985   000258                     PWMIN1PPS       equ	600	;# 
 15986   000259                     SMT1WINPPS      equ	601	;# 
 15987   00025A                     SMT1SIGPPS      equ	602	;# 
 15988   00025B                     CWG1PPS         equ	603	;# 
 15989   00025B                     CWG1INPPS       equ	603	;# 
 15990   00025C                     CWG2PPS         equ	604	;# 
 15991   00025C                     CWG2INPPS       equ	604	;# 
 15992   00025D                     CWG3PPS         equ	605	;# 
 15993   00025D                     CWG3INPPS       equ	605	;# 
 15994   00025E                     MD1CARLPPS      equ	606	;# 
 15995   00025E                     MDCARLPPS       equ	606	;# 
 15996   00025F                     MD1CARHPPS      equ	607	;# 
 15997   00025F                     MDCARHPPS       equ	607	;# 
 15998   000260                     MD1SRCPPS       equ	608	;# 
 15999   000260                     MDSRCPPS        equ	608	;# 
 16000   000261                     CLCIN0PPS       equ	609	;# 
 16001   000262                     CLCIN1PPS       equ	610	;# 
 16002   000263                     CLCIN2PPS       equ	611	;# 
 16003   000264                     CLCIN3PPS       equ	612	;# 
 16004   000265                     CLCIN4PPS       equ	613	;# 
 16005   000266                     CLCIN5PPS       equ	614	;# 
 16006   000267                     CLCIN6PPS       equ	615	;# 
 16007   000268                     CLCIN7PPS       equ	616	;# 
 16008   000269                     ADACTPPS        equ	617	;# 
 16009   00026A                     SPI1SCKPPS      equ	618	;# 
 16010   00026B                     SPI1SDIPPS      equ	619	;# 
 16011   00026C                     SPI1SSPPS       equ	620	;# 
 16012   00026D                     SPI2SCKPPS      equ	621	;# 
 16013   00026E                     SPI2SDIPPS      equ	622	;# 
 16014   00026F                     SPI2SSPPS       equ	623	;# 
 16015   000270                     I2C1SDAPPS      equ	624	;# 
 16016   000271                     I2C1SCLPPS      equ	625	;# 
 16017   000272                     U1RXPPS         equ	626	;# 
 16018   000273                     U1CTSPPS        equ	627	;# 
 16019   000274                     U2RXPPS         equ	628	;# 
 16020   000275                     U2CTSPPS        equ	629	;# 
 16021   000276                     U3RXPPS         equ	630	;# 
 16022   000277                     U3CTSPPS        equ	631	;# 
 16023   000278                     U4RXPPS         equ	632	;# 
 16024   000279                     U4CTSPPS        equ	633	;# 
 16025   00027A                     U5RXPPS         equ	634	;# 
 16026   00027B                     U5CTSPPS        equ	635	;# 
 16027   000286                     RC4I2C          equ	646	;# 
 16028   000287                     RC3I2C          equ	647	;# 
 16029   000288                     RB2I2C          equ	648	;# 
 16030   000289                     RB1I2C          equ	649	;# 
 16031   00028A                     I2C1RXB         equ	650	;# 
 16032   00028B                     I2C1TXB         equ	651	;# 
 16033   00028C                     I2C1CNTL        equ	652	;# 
 16034   00028D                     I2C1CNTH        equ	653	;# 
 16035   00028E                     I2C1ADB0        equ	654	;# 
 16036   00028F                     I2C1ADB1        equ	655	;# 
 16037   000290                     I2C1ADR0        equ	656	;# 
 16038   000291                     I2C1ADR1        equ	657	;# 
 16039   000292                     I2C1ADR2        equ	658	;# 
 16040   000293                     I2C1ADR3        equ	659	;# 
 16041   000294                     I2C1CON0        equ	660	;# 
 16042   000295                     I2C1CON1        equ	661	;# 
 16043   000296                     I2C1CON2        equ	662	;# 
 16044   000297                     I2C1ERR         equ	663	;# 
 16045   000298                     I2C1STAT0       equ	664	;# 
 16046   000299                     I2C1STAT1       equ	665	;# 
 16047   00029A                     I2C1PIR         equ	666	;# 
 16048   00029B                     I2C1PIE         equ	667	;# 
 16049   00029C                     I2C1BTO         equ	668	;# 
 16050   00029D                     I2C1BAUD        equ	669	;# 
 16051   00029E                     I2C1CLK         equ	670	;# 
 16052   00029F                     I2C1BTOC        equ	671	;# 
 16053   0002A1                     U1RXB           equ	673	;# 
 16054   0002A1                     U1RXBL          equ	673	;# 
 16055   0002A2                     U1RXCHK         equ	674	;# 
 16056   0002A3                     U1TXB           equ	675	;# 
 16057   0002A3                     U1TXBL          equ	675	;# 
 16058   0002A4                     U1TXCHK         equ	676	;# 
 16059   0002A5                     U1P1            equ	677	;# 
 16060   0002A5                     U1P1L           equ	677	;# 
 16061   0002A6                     U1P1H           equ	678	;# 
 16062   0002A7                     U1P2            equ	679	;# 
 16063   0002A7                     U1P2L           equ	679	;# 
 16064   0002A8                     U1P2H           equ	680	;# 
 16065   0002A9                     U1P3            equ	681	;# 
 16066   0002A9                     U1P3L           equ	681	;# 
 16067   0002AA                     U1P3H           equ	682	;# 
 16068   0002AB                     U1CON0          equ	683	;# 
 16069   0002AC                     U1CON1          equ	684	;# 
 16070   0002AD                     U1CON2          equ	685	;# 
 16071   0002AE                     U1BRG           equ	686	;# 
 16072   0002AE                     U1BRGL          equ	686	;# 
 16073   0002AF                     U1BRGH          equ	687	;# 
 16074   0002B0                     U1FIFO          equ	688	;# 
 16075   0002B1                     U1UIR           equ	689	;# 
 16076   0002B2                     U1ERRIR         equ	690	;# 
 16077   0002B3                     U1ERRIE         equ	691	;# 
 16078   0002B4                     U2RXB           equ	692	;# 
 16079   0002B4                     U2RXBL          equ	692	;# 
 16080   0002B5                     U2RXCHK         equ	693	;# 
 16081   0002B6                     U2TXB           equ	694	;# 
 16082   0002B6                     U2TXBL          equ	694	;# 
 16083   0002B7                     U2TXCHK         equ	695	;# 
 16084   0002B8                     U2P1            equ	696	;# 
 16085   0002B8                     U2P1L           equ	696	;# 
 16086   0002B9                     U2P1H           equ	697	;# 
 16087   0002BA                     U2P2            equ	698	;# 
 16088   0002BA                     U2P2L           equ	698	;# 
 16089   0002BB                     U2P2H           equ	699	;# 
 16090   0002BC                     U2P3            equ	700	;# 
 16091   0002BC                     U2P3L           equ	700	;# 
 16092   0002BD                     U2P3H           equ	701	;# 
 16093   0002BE                     U2CON0          equ	702	;# 
 16094   0002BF                     U2CON1          equ	703	;# 
 16095   0002C0                     U2CON2          equ	704	;# 
 16096   0002C1                     U2BRG           equ	705	;# 
 16097   0002C1                     U2BRGL          equ	705	;# 
 16098   0002C2                     U2BRGH          equ	706	;# 
 16099   0002C3                     U2FIFO          equ	707	;# 
 16100   0002C4                     U2UIR           equ	708	;# 
 16101   0002C5                     U2ERRIR         equ	709	;# 
 16102   0002C6                     U2ERRIE         equ	710	;# 
 16103   0002C7                     U3RXB           equ	711	;# 
 16104   0002C7                     U3RXBL          equ	711	;# 
 16105   0002C9                     U3TXB           equ	713	;# 
 16106   0002C9                     U3TXBL          equ	713	;# 
 16107   0002CB                     U3P1            equ	715	;# 
 16108   0002CB                     U3P1L           equ	715	;# 
 16109   0002CD                     U3P2            equ	717	;# 
 16110   0002CD                     U3P2L           equ	717	;# 
 16111   0002CF                     U3P3            equ	719	;# 
 16112   0002CF                     U3P3L           equ	719	;# 
 16113   0002D1                     U3CON0          equ	721	;# 
 16114   0002D2                     U3CON1          equ	722	;# 
 16115   0002D3                     U3CON2          equ	723	;# 
 16116   0002D4                     U3BRG           equ	724	;# 
 16117   0002D4                     U3BRGL          equ	724	;# 
 16118   0002D5                     U3BRGH          equ	725	;# 
 16119   0002D6                     U3FIFO          equ	726	;# 
 16120   0002D7                     U3UIR           equ	727	;# 
 16121   0002D8                     U3ERRIR         equ	728	;# 
 16122   0002D9                     U3ERRIE         equ	729	;# 
 16123   0002DA                     U4RXB           equ	730	;# 
 16124   0002DA                     U4RXBL          equ	730	;# 
 16125   0002DC                     U4TXB           equ	732	;# 
 16126   0002DC                     U4TXBL          equ	732	;# 
 16127   0002DE                     U4P1            equ	734	;# 
 16128   0002DE                     U4P1L           equ	734	;# 
 16129   0002E0                     U4P2            equ	736	;# 
 16130   0002E0                     U4P2L           equ	736	;# 
 16131   0002E2                     U4P3            equ	738	;# 
 16132   0002E2                     U4P3L           equ	738	;# 
 16133   0002E4                     U4CON0          equ	740	;# 
 16134   0002E5                     U4CON1          equ	741	;# 
 16135   0002E6                     U4CON2          equ	742	;# 
 16136   0002E7                     U4BRG           equ	743	;# 
 16137   0002E7                     U4BRGL          equ	743	;# 
 16138   0002E8                     U4BRGH          equ	744	;# 
 16139   0002E9                     U4FIFO          equ	745	;# 
 16140   0002EA                     U4UIR           equ	746	;# 
 16141   0002EB                     U4ERRIR         equ	747	;# 
 16142   0002EC                     U4ERRIE         equ	748	;# 
 16143   0002ED                     U5RXB           equ	749	;# 
 16144   0002ED                     U5RXBL          equ	749	;# 
 16145   0002EF                     U5TXB           equ	751	;# 
 16146   0002EF                     U5TXBL          equ	751	;# 
 16147   0002F1                     U5P1            equ	753	;# 
 16148   0002F1                     U5P1L           equ	753	;# 
 16149   0002F3                     U5P2            equ	755	;# 
 16150   0002F3                     U5P2L           equ	755	;# 
 16151   0002F5                     U5P3            equ	757	;# 
 16152   0002F5                     U5P3L           equ	757	;# 
 16153   0002F7                     U5CON0          equ	759	;# 
 16154   0002F8                     U5CON1          equ	760	;# 
 16155   0002F9                     U5CON2          equ	761	;# 
 16156   0002FA                     U5BRG           equ	762	;# 
 16157   0002FA                     U5BRGL          equ	762	;# 
 16158   0002FB                     U5BRGH          equ	763	;# 
 16159   0002FC                     U5FIFO          equ	764	;# 
 16160   0002FD                     U5UIR           equ	765	;# 
 16161   0002FE                     U5ERRIR         equ	766	;# 
 16162   0002FF                     U5ERRIE         equ	767	;# 
 16163   000300                     SMT1TMR         equ	768	;# 
 16164   000300                     SMT1TMRL        equ	768	;# 
 16165   000301                     SMT1TMRH        equ	769	;# 
 16166   000302                     SMT1TMRU        equ	770	;# 
 16167   000303                     SMT1CPR         equ	771	;# 
 16168   000303                     SMT1CPRL        equ	771	;# 
 16169   000304                     SMT1CPRH        equ	772	;# 
 16170   000305                     SMT1CPRU        equ	773	;# 
 16171   000306                     SMT1CPW         equ	774	;# 
 16172   000306                     SMT1CPWL        equ	774	;# 
 16173   000307                     SMT1CPWH        equ	775	;# 
 16174   000308                     SMT1CPWU        equ	776	;# 
 16175   000309                     SMT1PR          equ	777	;# 
 16176   000309                     SMT1PRL         equ	777	;# 
 16177   00030A                     SMT1PRH         equ	778	;# 
 16178   00030B                     SMT1PRU         equ	779	;# 
 16179   00030C                     SMT1CON0        equ	780	;# 
 16180   00030D                     SMT1CON1        equ	781	;# 
 16181   00030E                     SMT1STAT        equ	782	;# 
 16182   00030F                     SMT1CLK         equ	783	;# 
 16183   000310                     SMT1SIG         equ	784	;# 
 16184   000311                     SMT1WIN         equ	785	;# 
 16185   000318                     TMR0L           equ	792	;# 
 16186   000318                     TMR0            equ	792	;# 
 16187   000319                     TMR0H           equ	793	;# 
 16188   000319                     PR0             equ	793	;# 
 16189   00031A                     T0CON0          equ	794	;# 
 16190   00031B                     T0CON1          equ	795	;# 
 16191   00031C                     TMR1            equ	796	;# 
 16192   00031C                     TMR1L           equ	796	;# 
 16193   00031D                     TMR1H           equ	797	;# 
 16194   00031E                     T1CON           equ	798	;# 
 16195   00031E                     TMR1CON         equ	798	;# 
 16196   00031F                     T1GCON          equ	799	;# 
 16197   00031F                     TMR1GCON        equ	799	;# 
 16198   000320                     T1GATE          equ	800	;# 
 16199   000320                     TMR1GATE        equ	800	;# 
 16200   000321                     T1CLK           equ	801	;# 
 16201   000321                     TMR1CLK         equ	801	;# 
 16202   000321                     PR1             equ	801	;# 
 16203   000322                     T2TMR           equ	802	;# 
 16204   000322                     TMR2            equ	802	;# 
 16205   000323                     T2PR            equ	803	;# 
 16206   000323                     PR2             equ	803	;# 
 16207   000324                     T2CON           equ	804	;# 
 16208   000325                     T2HLT           equ	805	;# 
 16209   000326                     T2CLKCON        equ	806	;# 
 16210   000326                     T2CLK           equ	806	;# 
 16211   000327                     T2RST           equ	807	;# 
 16212   000328                     TMR3            equ	808	;# 
 16213   000328                     TMR3L           equ	808	;# 
 16214   000329                     TMR3H           equ	809	;# 
 16215   00032A                     T3CON           equ	810	;# 
 16216   00032A                     TMR3CON         equ	810	;# 
 16217   00032B                     T3GCON          equ	811	;# 
 16218   00032B                     TMR3GCON        equ	811	;# 
 16219   00032C                     T3GATE          equ	812	;# 
 16220   00032C                     TMR3GATE        equ	812	;# 
 16221   00032D                     T3CLK           equ	813	;# 
 16222   00032D                     TMR3CLK         equ	813	;# 
 16223   00032D                     PR3             equ	813	;# 
 16224   00032E                     T4TMR           equ	814	;# 
 16225   00032E                     TMR4            equ	814	;# 
 16226   00032F                     T4PR            equ	815	;# 
 16227   00032F                     PR4             equ	815	;# 
 16228   000330                     T4CON           equ	816	;# 
 16229   000331                     T4HLT           equ	817	;# 
 16230   000332                     T4CLKCON        equ	818	;# 
 16231   000332                     T4CLK           equ	818	;# 
 16232   000333                     T4RST           equ	819	;# 
 16233   000334                     TMR5            equ	820	;# 
 16234   000334                     TMR5L           equ	820	;# 
 16235   000335                     TMR5H           equ	821	;# 
 16236   000336                     T5CON           equ	822	;# 
 16237   000336                     TMR5CON         equ	822	;# 
 16238   000337                     T5GCON          equ	823	;# 
 16239   000337                     TMR5GCON        equ	823	;# 
 16240   000338                     T5GATE          equ	824	;# 
 16241   000338                     TMR5GATE        equ	824	;# 
 16242   000339                     T5CLK           equ	825	;# 
 16243   000339                     TMR5CLK         equ	825	;# 
 16244   000339                     PR5             equ	825	;# 
 16245   00033A                     T6TMR           equ	826	;# 
 16246   00033A                     TMR6            equ	826	;# 
 16247   00033B                     T6PR            equ	827	;# 
 16248   00033B                     PR6             equ	827	;# 
 16249   00033C                     T6CON           equ	828	;# 
 16250   00033D                     T6HLT           equ	829	;# 
 16251   00033E                     T6CLKCON        equ	830	;# 
 16252   00033E                     T6CLK           equ	830	;# 
 16253   00033F                     T6RST           equ	831	;# 
 16254   000340                     CCPR1           equ	832	;# 
 16255   000340                     CCPR1L          equ	832	;# 
 16256   000341                     CCPR1H          equ	833	;# 
 16257   000342                     CCP1CON         equ	834	;# 
 16258   000343                     CCP1CAP         equ	835	;# 
 16259   000344                     CCPR2           equ	836	;# 
 16260   000344                     CCPR2L          equ	836	;# 
 16261   000345                     CCPR2H          equ	837	;# 
 16262   000346                     CCP2CON         equ	838	;# 
 16263   000347                     CCP2CAP         equ	839	;# 
 16264   000348                     CCPR3           equ	840	;# 
 16265   000348                     CCPR3L          equ	840	;# 
 16266   000349                     CCPR3H          equ	841	;# 
 16267   00034A                     CCP3CON         equ	842	;# 
 16268   00034B                     CCP3CAP         equ	843	;# 
 16269   00034C                     CCPTMRS0        equ	844	;# 
 16270   00034F                     CRCDATA         equ	847	;# 
 16271   00034F                     CRCDATAL        equ	847	;# 
 16272   000350                     CRCDATAH        equ	848	;# 
 16273   000351                     CRCDATAU        equ	849	;# 
 16274   000352                     CRCDATAT        equ	850	;# 
 16275   000353                     CRCOUT          equ	851	;# 
 16276   000353                     CRCSHFT         equ	851	;# 
 16277   000353                     CRCXOR          equ	851	;# 
 16278   000353                     CRCOUTL         equ	851	;# 
 16279   000353                     CRCSHFTL        equ	851	;# 
 16280   000353                     CRCSHIFTL       equ	851	;# 
 16281   000353                     CRCXORL         equ	851	;# 
 16282   000354                     CRCOUTH         equ	852	;# 
 16283   000354                     CRCSHFTH        equ	852	;# 
 16284   000354                     CRCSHIFTH       equ	852	;# 
 16285   000354                     CRCXORH         equ	852	;# 
 16286   000355                     CRCOUTU         equ	853	;# 
 16287   000355                     CRCSHFTU        equ	853	;# 
 16288   000355                     CRCSHIFTU       equ	853	;# 
 16289   000355                     CRCXORU         equ	853	;# 
 16290   000356                     CRCOUTT         equ	854	;# 
 16291   000356                     CRCSHFTT        equ	854	;# 
 16292   000356                     CRCSHIFTT       equ	854	;# 
 16293   000356                     CRCXORT         equ	854	;# 
 16294   000357                     CRCCON0         equ	855	;# 
 16295   000358                     CRCCON1         equ	856	;# 
 16296   000359                     CRCCON2         equ	857	;# 
 16297   00035A                     SCANLADR        equ	858	;# 
 16298   00035A                     SCANLADRL       equ	858	;# 
 16299   00035B                     SCANLADRH       equ	859	;# 
 16300   00035C                     SCANLADRU       equ	860	;# 
 16301   00035D                     SCANHADR        equ	861	;# 
 16302   00035D                     SCANHADRL       equ	861	;# 
 16303   00035E                     SCANHADRH       equ	862	;# 
 16304   00035F                     SCANHADRU       equ	863	;# 
 16305   000360                     SCANCON0        equ	864	;# 
 16306   000361                     SCANTRIG        equ	865	;# 
 16307   000362                     IPR0            equ	866	;# 
 16308   000363                     IPR1            equ	867	;# 
 16309   000364                     IPR2            equ	868	;# 
 16310   000365                     IPR3            equ	869	;# 
 16311   000366                     IPR4            equ	870	;# 
 16312   000367                     IPR5            equ	871	;# 
 16313   000368                     IPR6            equ	872	;# 
 16314   000369                     IPR7            equ	873	;# 
 16315   00036A                     IPR8            equ	874	;# 
 16316   00036B                     IPR9            equ	875	;# 
 16317   00036C                     IPR10           equ	876	;# 
 16318   00036D                     IPR11           equ	877	;# 
 16319   00036E                     IPR12           equ	878	;# 
 16320   00036F                     IPR13           equ	879	;# 
 16321   000370                     IPR14           equ	880	;# 
 16322   000371                     IPR15           equ	881	;# 
 16323   000373                     STATUS_CSHAD    equ	883	;# 
 16324   000374                     WREG_CSHAD      equ	884	;# 
 16325   000375                     BSR_CSHAD       equ	885	;# 
 16326   000376                     SHADCON         equ	886	;# 
 16327   000377                     STATUS_SHAD     equ	887	;# 
 16328   000378                     WREG_SHAD       equ	888	;# 
 16329   000379                     BSR_SHAD        equ	889	;# 
 16330   00037A                     PCLATH_SHAD     equ	890	;# 
 16331   00037B                     PCLATU_SHAD     equ	891	;# 
 16332   00037C                     FSR0SH          equ	892	;# 
 16333   00037C                     FSR0L_SHAD      equ	892	;# 
 16334   00037D                     FSR0H_SHAD      equ	893	;# 
 16335   00037E                     FSR1SH          equ	894	;# 
 16336   00037E                     FSR1L_SHAD      equ	894	;# 
 16337   00037F                     FSR1H_SHAD      equ	895	;# 
 16338   000380                     FSR2SH          equ	896	;# 
 16339   000380                     FSR2L_SHAD      equ	896	;# 
 16340   000381                     FSR2H_SHAD      equ	897	;# 
 16341   000382                     PRODSH          equ	898	;# 
 16342   000382                     PRODL_SHAD      equ	898	;# 
 16343   000383                     PRODH_SHAD      equ	899	;# 
 16344   000387                     TU16ACON0       equ	903	;# 
 16345   000388                     TU16ACON1       equ	904	;# 
 16346   000389                     TU16AHLT        equ	905	;# 
 16347   00038A                     TU16APS         equ	906	;# 
 16348   00038B                     TU16ATMR        equ	907	;# 
 16349   00038B                     TU16ACR         equ	907	;# 
 16350   00038B                     TU16ATMRL       equ	907	;# 
 16351   00038B                     TU16ACRL        equ	907	;# 
 16352   00038C                     TU16ATMRH       equ	908	;# 
 16353   00038C                     TU16ACRH        equ	908	;# 
 16354   00038D                     TU16APR         equ	909	;# 
 16355   00038D                     TU16APRL        equ	909	;# 
 16356   00038E                     TU16APRH        equ	910	;# 
 16357   00038F                     TU16ACLK        equ	911	;# 
 16358   000390                     TU16AERS        equ	912	;# 
 16359   000393                     TU16BCON0       equ	915	;# 
 16360   000394                     TU16BCON1       equ	916	;# 
 16361   000395                     TU16BHLT        equ	917	;# 
 16362   000396                     TU16BPS         equ	918	;# 
 16363   000397                     TU16BTMR        equ	919	;# 
 16364   000397                     TU16BCR         equ	919	;# 
 16365   000397                     TU16BTMRL       equ	919	;# 
 16366   000397                     TU16BCRL        equ	919	;# 
 16367   000398                     TU16BTMRH       equ	920	;# 
 16368   000398                     TU16BCRH        equ	920	;# 
 16369   000399                     TU16BPR         equ	921	;# 
 16370   000399                     TU16BPRL        equ	921	;# 
 16371   00039A                     TU16BPRH        equ	922	;# 
 16372   00039B                     TU16BCLK        equ	923	;# 
 16373   00039C                     TU16BERS        equ	924	;# 
 16374   0003BB                     TUCHAIN         equ	955	;# 
 16375   0003BC                     CWG1CLK         equ	956	;# 
 16376   0003BC                     CWG1CLKCON      equ	956	;# 
 16377   0003BD                     CWG1ISM         equ	957	;# 
 16378   0003BE                     CWG1DBR         equ	958	;# 
 16379   0003BF                     CWG1DBF         equ	959	;# 
 16380   0003C0                     CWG1CON0        equ	960	;# 
 16381   0003C1                     CWG1CON1        equ	961	;# 
 16382   0003C2                     CWG1AS0         equ	962	;# 
 16383   0003C3                     CWG1AS1         equ	963	;# 
 16384   0003C4                     CWG1STR         equ	964	;# 
 16385   0003C5                     CWG2CLK         equ	965	;# 
 16386   0003C5                     CWG2CLKCON      equ	965	;# 
 16387   0003C6                     CWG2ISM         equ	966	;# 
 16388   0003C7                     CWG2DBR         equ	967	;# 
 16389   0003C8                     CWG2DBF         equ	968	;# 
 16390   0003C9                     CWG2CON0        equ	969	;# 
 16391   0003CA                     CWG2CON1        equ	970	;# 
 16392   0003CB                     CWG2AS0         equ	971	;# 
 16393   0003CC                     CWG2AS1         equ	972	;# 
 16394   0003CD                     CWG2STR         equ	973	;# 
 16395   0003CE                     CWG3CLK         equ	974	;# 
 16396   0003CE                     CWG3CLKCON      equ	974	;# 
 16397   0003CF                     CWG3ISM         equ	975	;# 
 16398   0003D0                     CWG3DBR         equ	976	;# 
 16399   0003D1                     CWG3DBF         equ	977	;# 
 16400   0003D2                     CWG3CON0        equ	978	;# 
 16401   0003D3                     CWG3CON1        equ	979	;# 
 16402   0003D4                     CWG3AS0         equ	980	;# 
 16403   0003D5                     CWG3AS1         equ	981	;# 
 16404   0003D6                     CWG3STR         equ	982	;# 
 16405   0003D7                     FVRCON          equ	983	;# 
 16406   0003D8                     ADCPCON         equ	984	;# 
 16407   0003D8                     ADCP            equ	984	;# 
 16408   0003D9                     ADLTH           equ	985	;# 
 16409   0003D9                     ADLTHL          equ	985	;# 
 16410   0003DA                     ADLTHH          equ	986	;# 
 16411   0003DB                     ADUTH           equ	987	;# 
 16412   0003DB                     ADUTHL          equ	987	;# 
 16413   0003DC                     ADUTHH          equ	988	;# 
 16414   0003DD                     ADERR           equ	989	;# 
 16415   0003DD                     ADERRL          equ	989	;# 
 16416   0003DE                     ADERRH          equ	990	;# 
 16417   0003DF                     ADSTPT          equ	991	;# 
 16418   0003DF                     ADSTPTL         equ	991	;# 
 16419   0003E0                     ADSTPTH         equ	992	;# 
 16420   0003E1                     ADFLTR          equ	993	;# 
 16421   0003E1                     ADFLTRL         equ	993	;# 
 16422   0003E2                     ADFLTRH         equ	994	;# 
 16423   0003E3                     ADACC           equ	995	;# 
 16424   0003E3                     ADACCL          equ	995	;# 
 16425   0003E4                     ADACCH          equ	996	;# 
 16426   0003E5                     ADACCU          equ	997	;# 
 16427   0003E6                     ADCNT           equ	998	;# 
 16428   0003E7                     ADRPT           equ	999	;# 
 16429   0003E8                     ADPREV          equ	1000	;# 
 16430   0003E8                     ADPREVL         equ	1000	;# 
 16431   0003E9                     ADPREVH         equ	1001	;# 
 16432   0003EA                     ADRES           equ	1002	;# 
 16433   0003EA                     ADRESL          equ	1002	;# 
 16434   0003EB                     ADRESH          equ	1003	;# 
 16435   0003EC                     ADPCH           equ	1004	;# 
 16436   0003EE                     ADACQ           equ	1006	;# 
 16437   0003EE                     ADACQL          equ	1006	;# 
 16438   0003EF                     ADACQH          equ	1007	;# 
 16439   0003F0                     ADCAP           equ	1008	;# 
 16440   0003F1                     ADPRE           equ	1009	;# 
 16441   0003F1                     ADPREL          equ	1009	;# 
 16442   0003F2                     ADPREH          equ	1010	;# 
 16443   0003F3                     ADCON0          equ	1011	;# 
 16444   0003F4                     ADCON1          equ	1012	;# 
 16445   0003F5                     ADCON2          equ	1013	;# 
 16446   0003F6                     ADCON3          equ	1014	;# 
 16447   0003F7                     ADSTAT          equ	1015	;# 
 16448   0003F8                     ADREF           equ	1016	;# 
 16449   0003F9                     ADACT           equ	1017	;# 
 16450   0003FA                     ADCLK           equ	1018	;# 
 16451   0003FB                     ADCTX           equ	1019	;# 
 16452   0003FC                     ADCSEL1         equ	1020	;# 
 16453   0003FD                     ADCSEL2         equ	1021	;# 
 16454   0003FE                     ADCSEL3         equ	1022	;# 
 16455   0003FF                     ADCSEL4         equ	1023	;# 
 16456   000400                     ANSELA          equ	1024	;# 
 16457   000401                     WPUA            equ	1025	;# 
 16458   000402                     ODCONA          equ	1026	;# 
 16459   000403                     SLRCONA         equ	1027	;# 
 16460   000404                     INLVLA          equ	1028	;# 
 16461   000405                     IOCAP           equ	1029	;# 
 16462   000406                     IOCAN           equ	1030	;# 
 16463   000407                     IOCAF           equ	1031	;# 
 16464   000408                     ANSELB          equ	1032	;# 
 16465   000409                     WPUB            equ	1033	;# 
 16466   00040A                     ODCONB          equ	1034	;# 
 16467   00040B                     SLRCONB         equ	1035	;# 
 16468   00040C                     INLVLB          equ	1036	;# 
 16469   00040D                     IOCBP           equ	1037	;# 
 16470   00040E                     IOCBN           equ	1038	;# 
 16471   00040F                     IOCBF           equ	1039	;# 
 16472   000410                     ANSELC          equ	1040	;# 
 16473   000411                     WPUC            equ	1041	;# 
 16474   000412                     ODCONC          equ	1042	;# 
 16475   000413                     SLRCONC         equ	1043	;# 
 16476   000414                     INLVLC          equ	1044	;# 
 16477   000415                     IOCCP           equ	1045	;# 
 16478   000416                     IOCCN           equ	1046	;# 
 16479   000417                     IOCCF           equ	1047	;# 
 16480   000421                     WPUE            equ	1057	;# 
 16481   000424                     INLVLE          equ	1060	;# 
 16482   000425                     IOCEP           equ	1061	;# 
 16483   000426                     IOCEN           equ	1062	;# 
 16484   000427                     IOCEF           equ	1063	;# 
 16485   000440                     NCO1ACC         equ	1088	;# 
 16486   000440                     NCO1ACCL        equ	1088	;# 
 16487   000441                     NCO1ACCH        equ	1089	;# 
 16488   000442                     NCO1ACCU        equ	1090	;# 
 16489   000443                     NCO1INC         equ	1091	;# 
 16490   000443                     NCO1INCL        equ	1091	;# 
 16491   000444                     NCO1INCH        equ	1092	;# 
 16492   000445                     NCO1INCU        equ	1093	;# 
 16493   000446                     NCO1CON         equ	1094	;# 
 16494   000447                     NCO1CLK         equ	1095	;# 
 16495   000448                     NCO2ACC         equ	1096	;# 
 16496   000448                     NCO2ACCL        equ	1096	;# 
 16497   000449                     NCO2ACCH        equ	1097	;# 
 16498   00044A                     NCO2ACCU        equ	1098	;# 
 16499   00044B                     NCO2INC         equ	1099	;# 
 16500   00044B                     NCO2INCL        equ	1099	;# 
 16501   00044C                     NCO2INCH        equ	1100	;# 
 16502   00044D                     NCO2INCU        equ	1101	;# 
 16503   00044E                     NCO2CON         equ	1102	;# 
 16504   00044F                     NCO2CLK         equ	1103	;# 
 16505   000450                     NCO3ACC         equ	1104	;# 
 16506   000450                     NCO3ACCL        equ	1104	;# 
 16507   000451                     NCO3ACCH        equ	1105	;# 
 16508   000452                     NCO3ACCU        equ	1106	;# 
 16509   000453                     NCO3INC         equ	1107	;# 
 16510   000453                     NCO3INCL        equ	1107	;# 
 16511   000454                     NCO3INCH        equ	1108	;# 
 16512   000455                     NCO3INCU        equ	1109	;# 
 16513   000456                     NCO3CON         equ	1110	;# 
 16514   000457                     NCO3CLK         equ	1111	;# 
 16515   000458                     FSCMCON         equ	1112	;# 
 16516   000459                     IVTLOCK         equ	1113	;# 
 16517   00045A                     IVTAD           equ	1114	;# 
 16518   00045A                     IVTADL          equ	1114	;# 
 16519   00045B                     IVTADH          equ	1115	;# 
 16520   00045C                     IVTADU          equ	1116	;# 
 16521   00045D                     IVTBASE         equ	1117	;# 
 16522   00045D                     IVTBASEL        equ	1117	;# 
 16523   00045E                     IVTBASEH        equ	1118	;# 
 16524   00045F                     IVTBASEU        equ	1119	;# 
 16525   000460                     PWM1ERS         equ	1120	;# 
 16526   000461                     PWM1CLK         equ	1121	;# 
 16527   000462                     PWM1LDS         equ	1122	;# 
 16528   000463                     PWM1PR          equ	1123	;# 
 16529   000463                     PWM1PRL         equ	1123	;# 
 16530   000464                     PWM1PRH         equ	1124	;# 
 16531   000465                     PWM1CPRE        equ	1125	;# 
 16532   000466                     PWM1PIPOS       equ	1126	;# 
 16533   000467                     PWM1GIR         equ	1127	;# 
 16534   000468                     PWM1GIE         equ	1128	;# 
 16535   000469                     PWM1CON         equ	1129	;# 
 16536   00046A                     PWM1S1CFG       equ	1130	;# 
 16537   00046B                     PWM1S1P1        equ	1131	;# 
 16538   00046B                     PWM1S1P1L       equ	1131	;# 
 16539   00046C                     PWM1S1P1H       equ	1132	;# 
 16540   00046D                     PWM1S1P2        equ	1133	;# 
 16541   00046D                     PWM1S1P2L       equ	1133	;# 
 16542   00046E                     PWM1S1P2H       equ	1134	;# 
 16543   00046F                     PWM2ERS         equ	1135	;# 
 16544   000470                     PWM2CLK         equ	1136	;# 
 16545   000471                     PWM2LDS         equ	1137	;# 
 16546   000472                     PWM2PR          equ	1138	;# 
 16547   000472                     PWM2PRL         equ	1138	;# 
 16548   000473                     PWM2PRH         equ	1139	;# 
 16549   000474                     PWM2CPRE        equ	1140	;# 
 16550   000475                     PWM2PIPOS       equ	1141	;# 
 16551   000476                     PWM2GIR         equ	1142	;# 
 16552   000477                     PWM2GIE         equ	1143	;# 
 16553   000478                     PWM2CON         equ	1144	;# 
 16554   000479                     PWM2S1CFG       equ	1145	;# 
 16555   00047A                     PWM2S1P1        equ	1146	;# 
 16556   00047A                     PWM2S1P1L       equ	1146	;# 
 16557   00047B                     PWM2S1P1H       equ	1147	;# 
 16558   00047C                     PWM2S1P2        equ	1148	;# 
 16559   00047C                     PWM2S1P2L       equ	1148	;# 
 16560   00047D                     PWM2S1P2H       equ	1149	;# 
 16561   00047E                     PWM3ERS         equ	1150	;# 
 16562   00047F                     PWM3CLK         equ	1151	;# 
 16563   000480                     PWM3LDS         equ	1152	;# 
 16564   000481                     PWM3PR          equ	1153	;# 
 16565   000481                     PWM3PRL         equ	1153	;# 
 16566   000482                     PWM3PRH         equ	1154	;# 
 16567   000483                     PWM3CPRE        equ	1155	;# 
 16568   000484                     PWM3PIPOS       equ	1156	;# 
 16569   000485                     PWM3GIR         equ	1157	;# 
 16570   000486                     PWM3GIE         equ	1158	;# 
 16571   000487                     PWM3CON         equ	1159	;# 
 16572   000488                     PWM3S1CFG       equ	1160	;# 
 16573   000489                     PWM3S1P1        equ	1161	;# 
 16574   000489                     PWM3S1P1L       equ	1161	;# 
 16575   00048A                     PWM3S1P1H       equ	1162	;# 
 16576   00048B                     PWM3S1P2        equ	1163	;# 
 16577   00048B                     PWM3S1P2L       equ	1163	;# 
 16578   00048C                     PWM3S1P2H       equ	1164	;# 
 16579   00048D                     PWM4ERS         equ	1165	;# 
 16580   00048E                     PWM4CLK         equ	1166	;# 
 16581   00048F                     PWM4LDS         equ	1167	;# 
 16582   000490                     PWM4PR          equ	1168	;# 
 16583   000490                     PWM4PRL         equ	1168	;# 
 16584   000491                     PWM4PRH         equ	1169	;# 
 16585   000492                     PWM4CPRE        equ	1170	;# 
 16586   000493                     PWM4PIPOS       equ	1171	;# 
 16587   000494                     PWM4GIR         equ	1172	;# 
 16588   000495                     PWM4GIE         equ	1173	;# 
 16589   000496                     PWM4CON         equ	1174	;# 
 16590   000497                     PWM4S1CFG       equ	1175	;# 
 16591   000498                     PWM4S1P1        equ	1176	;# 
 16592   000498                     PWM4S1P1L       equ	1176	;# 
 16593   000499                     PWM4S1P1H       equ	1177	;# 
 16594   00049A                     PWM4S1P2        equ	1178	;# 
 16595   00049A                     PWM4S1P2L       equ	1178	;# 
 16596   00049B                     PWM4S1P2H       equ	1179	;# 
 16597   00049C                     PWMLOAD         equ	1180	;# 
 16598   00049D                     PWMEN           equ	1181	;# 
 16599   00049E                     PIE0            equ	1182	;# 
 16600   00049F                     PIE1            equ	1183	;# 
 16601   0004A0                     PIE2            equ	1184	;# 
 16602   0004A1                     PIE3            equ	1185	;# 
 16603   0004A2                     PIE4            equ	1186	;# 
 16604   0004A3                     PIE5            equ	1187	;# 
 16605   0004A4                     PIE6            equ	1188	;# 
 16606   0004A5                     PIE7            equ	1189	;# 
 16607   0004A6                     PIE8            equ	1190	;# 
 16608   0004A7                     PIE9            equ	1191	;# 
 16609   0004A8                     PIE10           equ	1192	;# 
 16610   0004A9                     PIE11           equ	1193	;# 
 16611   0004AA                     PIE12           equ	1194	;# 
 16612   0004AB                     PIE13           equ	1195	;# 
 16613   0004AC                     PIE14           equ	1196	;# 
 16614   0004AD                     PIE15           equ	1197	;# 
 16615   0004AE                     PIR0            equ	1198	;# 
 16616   0004AF                     PIR1            equ	1199	;# 
 16617   0004B0                     PIR2            equ	1200	;# 
 16618   0004B1                     PIR3            equ	1201	;# 
 16619   0004B2                     PIR4            equ	1202	;# 
 16620   0004B3                     PIR5            equ	1203	;# 
 16621   0004B4                     PIR6            equ	1204	;# 
 16622   0004B5                     PIR7            equ	1205	;# 
 16623   0004B6                     PIR8            equ	1206	;# 
 16624   0004B7                     PIR9            equ	1207	;# 
 16625   0004B8                     PIR10           equ	1208	;# 
 16626   0004B9                     PIR11           equ	1209	;# 
 16627   0004BA                     PIR12           equ	1210	;# 
 16628   0004BB                     PIR13           equ	1211	;# 
 16629   0004BC                     PIR14           equ	1212	;# 
 16630   0004BD                     PIR15           equ	1213	;# 
 16631   0004BE                     LATA            equ	1214	;# 
 16632   0004BF                     LATB            equ	1215	;# 
 16633   0004C0                     LATC            equ	1216	;# 
 16634   0004C6                     TRISA           equ	1222	;# 
 16635   0004C7                     TRISB           equ	1223	;# 
 16636   0004C8                     TRISC           equ	1224	;# 
 16637   0004CA                     TRISE           equ	1226	;# 
 16638   0004CE                     PORTA           equ	1230	;# 
 16639   0004CF                     PORTB           equ	1231	;# 
 16640   0004D0                     PORTC           equ	1232	;# 
 16641   0004D2                     PORTE           equ	1234	;# 
 16642   0004D6                     INTCON0         equ	1238	;# 
 16643   0004D7                     INTCON1         equ	1239	;# 
 16644   0004D8                     STATUS          equ	1240	;# 
 16645   0004D9                     FSR2            equ	1241	;# 
 16646   0004D9                     FSR2L           equ	1241	;# 
 16647   0004DA                     FSR2H           equ	1242	;# 
 16648   0004DB                     PLUSW2          equ	1243	;# 
 16649   0004DC                     PREINC2         equ	1244	;# 
 16650   0004DD                     POSTDEC2        equ	1245	;# 
 16651   0004DE                     POSTINC2        equ	1246	;# 
 16652   0004DF                     INDF2           equ	1247	;# 
 16653   0004E0                     BSR             equ	1248	;# 
 16654   0004E1                     FSR1            equ	1249	;# 
 16655   0004E1                     FSR1L           equ	1249	;# 
 16656   0004E2                     FSR1H           equ	1250	;# 
 16657   0004E3                     PLUSW1          equ	1251	;# 
 16658   0004E4                     PREINC1         equ	1252	;# 
 16659   0004E5                     POSTDEC1        equ	1253	;# 
 16660   0004E6                     POSTINC1        equ	1254	;# 
 16661   0004E7                     INDF1           equ	1255	;# 
 16662   0004E8                     WREG            equ	1256	;# 
 16663   0004E9                     FSR0            equ	1257	;# 
 16664   0004E9                     FSR0L           equ	1257	;# 
 16665   0004EA                     FSR0H           equ	1258	;# 
 16666   0004EB                     PLUSW0          equ	1259	;# 
 16667   0004EC                     PREINC0         equ	1260	;# 
 16668   0004ED                     POSTDEC0        equ	1261	;# 
 16669   0004EE                     POSTINC0        equ	1262	;# 
 16670   0004EF                     INDF0           equ	1263	;# 
 16671   0004F0                     PCON0           equ	1264	;# 
 16672   0004F1                     PCON1           equ	1265	;# 
 16673   0004F2                     CPUDOZE         equ	1266	;# 
 16674   0004F3                     PROD            equ	1267	;# 
 16675   0004F3                     PRODL           equ	1267	;# 
 16676   0004F4                     PRODH           equ	1268	;# 
 16677   0004F5                     TABLAT          equ	1269	;# 
 16678   0004F6                     TBLPTR          equ	1270	;# 
 16679   0004F6                     TBLPTRL         equ	1270	;# 
 16680   0004F7                     TBLPTRH         equ	1271	;# 
 16681   0004F8                     TBLPTRU         equ	1272	;# 
 16682   0004F9                     PCLAT           equ	1273	;# 
 16683   0004F9                     PCL             equ	1273	;# 
 16684   0004FA                     PCLATH          equ	1274	;# 
 16685   0004FB                     PCLATU          equ	1275	;# 
 16686   0004FC                     STKPTR          equ	1276	;# 
 16687   0004FD                     TOS             equ	1277	;# 
 16688   0004FD                     TOSL            equ	1277	;# 
 16689   0004FE                     TOSH            equ	1278	;# 
 16690   0004FF                     TOSU            equ	1279	;# 
 16691   000038                     BOOTREG         equ	56	;# 
 16692   000039                     CLKRCON         equ	57	;# 
 16693   00003A                     CLKRCLK         equ	58	;# 
 16694   000040                     NVMCON0         equ	64	;# 
 16695   000041                     NVMCON1         equ	65	;# 
 16696   000042                     NVMLOCK         equ	66	;# 
 16697   000043                     NVMADR          equ	67	;# 
 16698   000043                     NVMADRL         equ	67	;# 
 16699   000044                     NVMADRH         equ	68	;# 
 16700   000045                     NVMADRU         equ	69	;# 
 16701   000046                     NVMDAT          equ	70	;# 
 16702   000046                     NVMDATL         equ	70	;# 
 16703   000047                     NVMDATH         equ	71	;# 
 16704   000048                     VREGCON         equ	72	;# 
 16705   000049                     BORCON          equ	73	;# 
 16706   00004A                     HLVDCON0        equ	74	;# 
 16707   00004B                     HLVDCON1        equ	75	;# 
 16708   00004C                     ZCDCON          equ	76	;# 
 16709   000060                     PMD0            equ	96	;# 
 16710   000061                     PMD1            equ	97	;# 
 16711   000062                     PMD2            equ	98	;# 
 16712   000063                     PMD3            equ	99	;# 
 16713   000064                     PMD4            equ	100	;# 
 16714   000065                     PMD5            equ	101	;# 
 16715   000066                     PMD6            equ	102	;# 
 16716   000067                     PMD7            equ	103	;# 
 16717   000068                     PMD8            equ	104	;# 
 16718   00006A                     MD1CON0         equ	106	;# 
 16719   00006B                     MD1CON1         equ	107	;# 
 16720   00006C                     MD1SRC          equ	108	;# 
 16721   00006D                     MD1CARL         equ	109	;# 
 16722   00006E                     MD1CARH         equ	110	;# 
 16723   00006F                     CMOUT           equ	111	;# 
 16724   000070                     CM1CON0         equ	112	;# 
 16725   000071                     CM1CON1         equ	113	;# 
 16726   000072                     CM1NCH          equ	114	;# 
 16727   000073                     CM1PCH          equ	115	;# 
 16728   000074                     CM2CON0         equ	116	;# 
 16729   000075                     CM2CON1         equ	117	;# 
 16730   000076                     CM2NCH          equ	118	;# 
 16731   000077                     CM2PCH          equ	119	;# 
 16732   000078                     WDTCON0         equ	120	;# 
 16733   000079                     WDTCON1         equ	121	;# 
 16734   00007A                     WDTPSL          equ	122	;# 
 16735   00007B                     WDTPSH          equ	123	;# 
 16736   00007C                     WDTTMR          equ	124	;# 
 16737   00007D                     DAC1DAT         equ	125	;# 
 16738   00007D                     DAC1DATL        equ	125	;# 
 16739   00007F                     DAC1CON         equ	127	;# 
 16740   000080                     SPI1RXB         equ	128	;# 
 16741   000081                     SPI1TXB         equ	129	;# 
 16742   000082                     SPI1TCNT        equ	130	;# 
 16743   000082                     SPI1TCNTL       equ	130	;# 
 16744   000083                     SPI1TCNTH       equ	131	;# 
 16745   000084                     SPI1CON0        equ	132	;# 
 16746   000085                     SPI1CON1        equ	133	;# 
 16747   000086                     SPI1CON2        equ	134	;# 
 16748   000087                     SPI1STATUS      equ	135	;# 
 16749   000088                     SPI1TWIDTH      equ	136	;# 
 16750   000089                     SPI1BAUD        equ	137	;# 
 16751   00008A                     SPI1INTF        equ	138	;# 
 16752   00008B                     SPI1INTE        equ	139	;# 
 16753   00008C                     SPI1CLK         equ	140	;# 
 16754   00008D                     SPI2RXB         equ	141	;# 
 16755   00008E                     SPI2TXB         equ	142	;# 
 16756   00008F                     SPI2TCNT        equ	143	;# 
 16757   00008F                     SPI2TCNTL       equ	143	;# 
 16758   000090                     SPI2TCNTH       equ	144	;# 
 16759   000091                     SPI2CON0        equ	145	;# 
 16760   000092                     SPI2CON1        equ	146	;# 
 16761   000093                     SPI2CON2        equ	147	;# 
 16762   000094                     SPI2STATUS      equ	148	;# 
 16763   000095                     SPI2TWIDTH      equ	149	;# 
 16764   000096                     SPI2BAUD        equ	150	;# 
 16765   000097                     SPI2INTF        equ	151	;# 
 16766   000098                     SPI2INTE        equ	152	;# 
 16767   000099                     SPI2CLK         equ	153	;# 
 16768   0000AC                     ACTCON          equ	172	;# 
 16769   0000AD                     OSCCON1         equ	173	;# 
 16770   0000AE                     OSCCON2         equ	174	;# 
 16771   0000AF                     OSCCON3         equ	175	;# 
 16772   0000B0                     OSCTUNE         equ	176	;# 
 16773   0000B1                     OSCFRQ          equ	177	;# 
 16774   0000B1                     OSCFREQ         equ	177	;# 
 16775   0000B2                     OSCSTAT         equ	178	;# 
 16776   0000B2                     OSCSTAT1        equ	178	;# 
 16777   0000B3                     OSCEN           equ	179	;# 
 16778   0000B4                     PRLOCK          equ	180	;# 
 16779   0000B5                     SCANPR          equ	181	;# 
 16780   0000B6                     DMA1PR          equ	182	;# 
 16781   0000B7                     DMA2PR          equ	183	;# 
 16782   0000B8                     DMA3PR          equ	184	;# 
 16783   0000B9                     DMA4PR          equ	185	;# 
 16784   0000BA                     DMA5PR          equ	186	;# 
 16785   0000BB                     DMA6PR          equ	187	;# 
 16786   0000BC                     DMA7PR          equ	188	;# 
 16787   0000BD                     DMA8PR          equ	189	;# 
 16788   0000BE                     MAINPR          equ	190	;# 
 16789   0000BF                     ISRPR           equ	191	;# 
 16790   0000D4                     CLCDATA         equ	212	;# 
 16791   0000D5                     CLCSELECT       equ	213	;# 
 16792   0000D6                     CLCnCON         equ	214	;# 
 16793   0000D7                     CLCnPOL         equ	215	;# 
 16794   0000D8                     CLCnSEL0        equ	216	;# 
 16795   0000D9                     CLCnSEL1        equ	217	;# 
 16796   0000DA                     CLCnSEL2        equ	218	;# 
 16797   0000DB                     CLCnSEL3        equ	219	;# 
 16798   0000DC                     CLCnGLS0        equ	220	;# 
 16799   0000DD                     CLCnGLS1        equ	221	;# 
 16800   0000DE                     CLCnGLS2        equ	222	;# 
 16801   0000DF                     CLCnGLS3        equ	223	;# 
 16802   0000E8                     DMASELECT       equ	232	;# 
 16803   0000E9                     DMAnBUF         equ	233	;# 
 16804   0000EA                     DMAnDCNT        equ	234	;# 
 16805   0000EA                     DMAnDCNTL       equ	234	;# 
 16806   0000EB                     DMAnDCNTH       equ	235	;# 
 16807   0000EC                     DMAnDPTR        equ	236	;# 
 16808   0000EC                     DMAnDPTRL       equ	236	;# 
 16809   0000ED                     DMAnDPTRH       equ	237	;# 
 16810   0000EE                     DMAnDSZ         equ	238	;# 
 16811   0000EE                     DMAnDSZL        equ	238	;# 
 16812   0000EF                     DMAnDSZH        equ	239	;# 
 16813   0000F0                     DMAnDSA         equ	240	;# 
 16814   0000F0                     DMAnDSAL        equ	240	;# 
 16815   0000F1                     DMAnDSAH        equ	241	;# 
 16816   0000F2                     DMAnSCNT        equ	242	;# 
 16817   0000F2                     DMAnSCNTL       equ	242	;# 
 16818   0000F3                     DMAnSCNTH       equ	243	;# 
 16819   0000F4                     DMAnSPTR        equ	244	;# 
 16820   0000F4                     DMAnSPTRL       equ	244	;# 
 16821   0000F5                     DMAnSPTRH       equ	245	;# 
 16822   0000F6                     DMAnSPTRU       equ	246	;# 
 16823   0000F7                     DMAnSSZ         equ	247	;# 
 16824   0000F7                     DMAnSSZL        equ	247	;# 
 16825   0000F8                     DMAnSSZH        equ	248	;# 
 16826   0000F9                     DMAnSSA         equ	249	;# 
 16827   0000F9                     DMAnSSAL        equ	249	;# 
 16828   0000FA                     DMAnSSAH        equ	250	;# 
 16829   0000FB                     DMAnSSAU        equ	251	;# 
 16830   0000FC                     DMAnCON0        equ	252	;# 
 16831   0000FD                     DMAnCON1        equ	253	;# 
 16832   0000FE                     DMAnAIRQ        equ	254	;# 
 16833   0000FF                     DMAnSIRQ        equ	255	;# 
 16834   000100                     C1CONL          equ	256	;# 
 16835   000101                     C1CONH          equ	257	;# 
 16836   000102                     C1CONU          equ	258	;# 
 16837   000103                     C1CONT          equ	259	;# 
 16838   000104                     C1NBTCFGL       equ	260	;# 
 16839   000105                     C1NBTCFGH       equ	261	;# 
 16840   000106                     C1NBTCFGU       equ	262	;# 
 16841   000107                     C1NBTCFGT       equ	263	;# 
 16842   000108                     C1DBTCFGL       equ	264	;# 
 16843   000109                     C1DBTCFGH       equ	265	;# 
 16844   00010A                     C1DBTCFGU       equ	266	;# 
 16845   00010B                     C1DBTCFGT       equ	267	;# 
 16846   00010C                     C1TDCL          equ	268	;# 
 16847   00010D                     C1TDCH          equ	269	;# 
 16848   00010E                     C1TDCU          equ	270	;# 
 16849   000110                     C1TBC           equ	272	;# 
 16850   000110                     C1TBCL          equ	272	;# 
 16851   000111                     C1TBCH          equ	273	;# 
 16852   000112                     C1TBCU          equ	274	;# 
 16853   000113                     C1TBCT          equ	275	;# 
 16854   000114                     C1TSCONL        equ	276	;# 
 16855   000115                     C1TSCONH        equ	277	;# 
 16856   000116                     C1TSCONU        equ	278	;# 
 16857   000117                     C1TSCONT        equ	279	;# 
 16858   000118                     C1VECL          equ	280	;# 
 16859   000119                     C1VECH          equ	281	;# 
 16860   00011A                     C1VECU          equ	282	;# 
 16861   00011B                     C1VECT          equ	283	;# 
 16862   00011C                     C1INTL          equ	284	;# 
 16863   00011D                     C1INTH          equ	285	;# 
 16864   00011E                     C1INTU          equ	286	;# 
 16865   00011F                     C1INTT          equ	287	;# 
 16866   000120                     C1RXIF          equ	288	;# 
 16867   000120                     C1RXIFL         equ	288	;# 
 16868   000121                     C1RXIFH         equ	289	;# 
 16869   000122                     C1RXIFU         equ	290	;# 
 16870   000123                     C1RXIFT         equ	291	;# 
 16871   000124                     C1TXIF          equ	292	;# 
 16872   000124                     C1TXIFL         equ	292	;# 
 16873   000125                     C1TXIFH         equ	293	;# 
 16874   000126                     C1TXIFU         equ	294	;# 
 16875   000127                     C1TXIFT         equ	295	;# 
 16876   000128                     C1RXOVIF        equ	296	;# 
 16877   000128                     C1RXOVIFL       equ	296	;# 
 16878   000129                     C1RXOVIFH       equ	297	;# 
 16879   00012A                     C1RXOVIFU       equ	298	;# 
 16880   00012B                     C1RXOVIFT       equ	299	;# 
 16881   00012C                     C1TXATIF        equ	300	;# 
 16882   00012C                     C1TXATIFL       equ	300	;# 
 16883   00012D                     C1TXATIFH       equ	301	;# 
 16884   00012E                     C1TXATIFU       equ	302	;# 
 16885   00012F                     C1TXATIFT       equ	303	;# 
 16886   000130                     C1TXREQ         equ	304	;# 
 16887   000130                     C1TXREQL        equ	304	;# 
 16888   000131                     C1TXREQH        equ	305	;# 
 16889   000132                     C1TXREQU        equ	306	;# 
 16890   000133                     C1TXREQT        equ	307	;# 
 16891   000134                     C1TRECL         equ	308	;# 
 16892   000135                     C1TRECH         equ	309	;# 
 16893   000136                     C1TRECU         equ	310	;# 
 16894   000137                     C1TRECT         equ	311	;# 
 16895   000138                     C1BDIAG0L       equ	312	;# 
 16896   000139                     C1BDIAG0H       equ	313	;# 
 16897   00013C                     C1BDIAG1L       equ	316	;# 
 16898   00013D                     C1BDIAG1H       equ	317	;# 
 16899   00013E                     C1BDIAG1U       equ	318	;# 
 16900   00013F                     C1BDIAG1T       equ	319	;# 
 16901   000140                     C1TEFCONL       equ	320	;# 
 16902   000141                     C1TEFCONH       equ	321	;# 
 16903   000142                     C1TEFCONU       equ	322	;# 
 16904   000143                     C1TEFCONT       equ	323	;# 
 16905   000144                     C1TEFSTAL       equ	324	;# 
 16906   000145                     C1TEFSTAH       equ	325	;# 
 16907   000146                     C1TEFSTAU       equ	326	;# 
 16908   000147                     C1TEFSTAT       equ	327	;# 
 16909   000148                     C1TEFUA         equ	328	;# 
 16910   000148                     C1TEFUAL        equ	328	;# 
 16911   000149                     C1TEFUAH        equ	329	;# 
 16912   00014A                     C1TEFUAU        equ	330	;# 
 16913   00014B                     C1TEFUAT        equ	331	;# 
 16914   00014C                     C1FIFOBA        equ	332	;# 
 16915   00014C                     C1FIFOBAL       equ	332	;# 
 16916   00014D                     C1FIFOBAH       equ	333	;# 
 16917   00014E                     C1FIFOBAU       equ	334	;# 
 16918   00014F                     C1FIFOBAT       equ	335	;# 
 16919   000150                     C1TXQCONL       equ	336	;# 
 16920   000151                     C1TXQCONH       equ	337	;# 
 16921   000152                     C1TXQCONU       equ	338	;# 
 16922   000153                     C1TXQCONT       equ	339	;# 
 16923   000154                     C1TXQSTAL       equ	340	;# 
 16924   000155                     C1TXQSTAH       equ	341	;# 
 16925   000156                     C1TXQSTAU       equ	342	;# 
 16926   000157                     C1TXQSTAT       equ	343	;# 
 16927   000158                     C1TXQUA         equ	344	;# 
 16928   000158                     C1TXQUAL        equ	344	;# 
 16929   000159                     C1TXQUAH        equ	345	;# 
 16930   00015A                     C1TXQUAU        equ	346	;# 
 16931   00015B                     C1TXQUAT        equ	347	;# 
 16932   00015C                     C1FIFOCON1      equ	348	;# 
 16933   00015C                     C1FIFOCON1L     equ	348	;# 
 16934   00015D                     C1FIFOCON1H     equ	349	;# 
 16935   00015E                     C1FIFOCON1U     equ	350	;# 
 16936   00015F                     C1FIFOCON1T     equ	351	;# 
 16937   000160                     C1FIFOSTA1      equ	352	;# 
 16938   000160                     C1FIFOSTA1L     equ	352	;# 
 16939   000161                     C1FIFOSTA1H     equ	353	;# 
 16940   000162                     C1FIFOSTA1U     equ	354	;# 
 16941   000163                     C1FIFOSTA1T     equ	355	;# 
 16942   000164                     C1FIFOUA1       equ	356	;# 
 16943   000164                     C1FIFOUA1L      equ	356	;# 
 16944   000165                     C1FIFOUA1H      equ	357	;# 
 16945   000166                     C1FIFOUA1U      equ	358	;# 
 16946   000167                     C1FIFOUA1T      equ	359	;# 
 16947   000168                     C1FIFOCON2      equ	360	;# 
 16948   000168                     C1FIFOCON2L     equ	360	;# 
 16949   000169                     C1FIFOCON2H     equ	361	;# 
 16950   00016A                     C1FIFOCON2U     equ	362	;# 
 16951   00016B                     C1FIFOCON2T     equ	363	;# 
 16952   00016C                     C1FIFOSTA2      equ	364	;# 
 16953   00016C                     C1FIFOSTA2L     equ	364	;# 
 16954   00016D                     C1FIFOSTA2H     equ	365	;# 
 16955   00016E                     C1FIFOSTA2U     equ	366	;# 
 16956   00016F                     C1FIFOSTA2T     equ	367	;# 
 16957   000170                     C1FIFOUA2       equ	368	;# 
 16958   000170                     C1FIFOUA2L      equ	368	;# 
 16959   000171                     C1FIFOUA2H      equ	369	;# 
 16960   000172                     C1FIFOUA2U      equ	370	;# 
 16961   000173                     C1FIFOUA2T      equ	371	;# 
 16962   000174                     C1FIFOCON3      equ	372	;# 
 16963   000174                     C1FIFOCON3L     equ	372	;# 
 16964   000175                     C1FIFOCON3H     equ	373	;# 
 16965   000176                     C1FIFOCON3U     equ	374	;# 
 16966   000177                     C1FIFOCON3T     equ	375	;# 
 16967   000178                     C1FIFOSTA3      equ	376	;# 
 16968   000178                     C1FIFOSTA3L     equ	376	;# 
 16969   000179                     C1FIFOSTA3H     equ	377	;# 
 16970   00017A                     C1FIFOSTA3U     equ	378	;# 
 16971   00017B                     C1FIFOSTA3T     equ	379	;# 
 16972   00017C                     C1FIFOUA3       equ	380	;# 
 16973   00017C                     C1FIFOUA3L      equ	380	;# 
 16974   00017D                     C1FIFOUA3H      equ	381	;# 
 16975   00017E                     C1FIFOUA3U      equ	382	;# 
 16976   00017F                     C1FIFOUA3T      equ	383	;# 
 16977   000180                     C1FLTCON0L      equ	384	;# 
 16978   000181                     C1FLTCON0H      equ	385	;# 
 16979   000182                     C1FLTCON0U      equ	386	;# 
 16980   000183                     C1FLTCON0T      equ	387	;# 
 16981   000184                     C1FLTCON1L      equ	388	;# 
 16982   000185                     C1FLTCON1H      equ	389	;# 
 16983   000186                     C1FLTCON1U      equ	390	;# 
 16984   000187                     C1FLTCON1T      equ	391	;# 
 16985   000188                     C1FLTCON2L      equ	392	;# 
 16986   000189                     C1FLTCON2H      equ	393	;# 
 16987   00018A                     C1FLTCON2U      equ	394	;# 
 16988   00018B                     C1FLTCON2T      equ	395	;# 
 16989   00018C                     C1FLTOBJ0       equ	396	;# 
 16990   00018C                     C1FLTOBJ0L      equ	396	;# 
 16991   00018D                     C1FLTOBJ0H      equ	397	;# 
 16992   00018E                     C1FLTOBJ0U      equ	398	;# 
 16993   00018F                     C1FLTOBJ0T      equ	399	;# 
 16994   000190                     C1MASK0         equ	400	;# 
 16995   000190                     C1MASK0L        equ	400	;# 
 16996   000191                     C1MASK0H        equ	401	;# 
 16997   000192                     C1MASK0U        equ	402	;# 
 16998   000193                     C1MASK0T        equ	403	;# 
 16999   000194                     C1FLTOBJ1       equ	404	;# 
 17000   000194                     C1FLTOBJ1L      equ	404	;# 
 17001   000195                     C1FLTOBJ1H      equ	405	;# 
 17002   000196                     C1FLTOBJ1U      equ	406	;# 
 17003   000197                     C1FLTOBJ1T      equ	407	;# 
 17004   000198                     C1MASK1         equ	408	;# 
 17005   000198                     C1MASK1L        equ	408	;# 
 17006   000199                     C1MASK1H        equ	409	;# 
 17007   00019A                     C1MASK1U        equ	410	;# 
 17008   00019B                     C1MASK1T        equ	411	;# 
 17009   00019C                     C1FLTOBJ2       equ	412	;# 
 17010   00019C                     C1FLTOBJ2L      equ	412	;# 
 17011   00019D                     C1FLTOBJ2H      equ	413	;# 
 17012   00019E                     C1FLTOBJ2U      equ	414	;# 
 17013   00019F                     C1FLTOBJ2T      equ	415	;# 
 17014   0001A0                     C1MASK2         equ	416	;# 
 17015   0001A0                     C1MASK2L        equ	416	;# 
 17016   0001A1                     C1MASK2H        equ	417	;# 
 17017   0001A2                     C1MASK2U        equ	418	;# 
 17018   0001A3                     C1MASK2T        equ	419	;# 
 17019   0001A4                     C1FLTOBJ3       equ	420	;# 
 17020   0001A4                     C1FLTOBJ3L      equ	420	;# 
 17021   0001A5                     C1FLTOBJ3H      equ	421	;# 
 17022   0001A6                     C1FLTOBJ3U      equ	422	;# 
 17023   0001A7                     C1FLTOBJ3T      equ	423	;# 
 17024   0001A8                     C1MASK3         equ	424	;# 
 17025   0001A8                     C1MASK3L        equ	424	;# 
 17026   0001A9                     C1MASK3H        equ	425	;# 
 17027   0001AA                     C1MASK3U        equ	426	;# 
 17028   0001AB                     C1MASK3T        equ	427	;# 
 17029   0001AC                     C1FLTOBJ4       equ	428	;# 
 17030   0001AC                     C1FLTOBJ4L      equ	428	;# 
 17031   0001AD                     C1FLTOBJ4H      equ	429	;# 
 17032   0001AE                     C1FLTOBJ4U      equ	430	;# 
 17033   0001AF                     C1FLTOBJ4T      equ	431	;# 
 17034   0001B0                     C1MASK4         equ	432	;# 
 17035   0001B0                     C1MASK4L        equ	432	;# 
 17036   0001B1                     C1MASK4H        equ	433	;# 
 17037   0001B2                     C1MASK4U        equ	434	;# 
 17038   0001B3                     C1MASK4T        equ	435	;# 
 17039   0001B4                     C1FLTOBJ5       equ	436	;# 
 17040   0001B4                     C1FLTOBJ5L      equ	436	;# 
 17041   0001B5                     C1FLTOBJ5H      equ	437	;# 
 17042   0001B6                     C1FLTOBJ5U      equ	438	;# 
 17043   0001B7                     C1FLTOBJ5T      equ	439	;# 
 17044   0001B8                     C1MASK5         equ	440	;# 
 17045   0001B8                     C1MASK5L        equ	440	;# 
 17046   0001B9                     C1MASK5H        equ	441	;# 
 17047   0001BA                     C1MASK5U        equ	442	;# 
 17048   0001BB                     C1MASK5T        equ	443	;# 
 17049   0001BC                     C1FLTOBJ6       equ	444	;# 
 17050   0001BC                     C1FLTOBJ6L      equ	444	;# 
 17051   0001BD                     C1FLTOBJ6H      equ	445	;# 
 17052   0001BE                     C1FLTOBJ6U      equ	446	;# 
 17053   0001BF                     C1FLTOBJ6T      equ	447	;# 
 17054   0001C0                     C1MASK6         equ	448	;# 
 17055   0001C0                     C1MASK6L        equ	448	;# 
 17056   0001C1                     C1MASK6H        equ	449	;# 
 17057   0001C2                     C1MASK6U        equ	450	;# 
 17058   0001C3                     C1MASK6T        equ	451	;# 
 17059   0001C4                     C1FLTOBJ7       equ	452	;# 
 17060   0001C4                     C1FLTOBJ7L      equ	452	;# 
 17061   0001C5                     C1FLTOBJ7H      equ	453	;# 
 17062   0001C6                     C1FLTOBJ7U      equ	454	;# 
 17063   0001C7                     C1FLTOBJ7T      equ	455	;# 
 17064   0001C8                     C1MASK7         equ	456	;# 
 17065   0001C8                     C1MASK7L        equ	456	;# 
 17066   0001C9                     C1MASK7H        equ	457	;# 
 17067   0001CA                     C1MASK7U        equ	458	;# 
 17068   0001CB                     C1MASK7T        equ	459	;# 
 17069   0001CC                     C1FLTOBJ8       equ	460	;# 
 17070   0001CC                     C1FLTOBJ8L      equ	460	;# 
 17071   0001CD                     C1FLTOBJ8H      equ	461	;# 
 17072   0001CE                     C1FLTOBJ8U      equ	462	;# 
 17073   0001CF                     C1FLTOBJ8T      equ	463	;# 
 17074   0001D0                     C1MASK8         equ	464	;# 
 17075   0001D0                     C1MASK8L        equ	464	;# 
 17076   0001D1                     C1MASK8H        equ	465	;# 
 17077   0001D2                     C1MASK8U        equ	466	;# 
 17078   0001D3                     C1MASK8T        equ	467	;# 
 17079   0001D4                     C1FLTOBJ9       equ	468	;# 
 17080   0001D4                     C1FLTOBJ9L      equ	468	;# 
 17081   0001D5                     C1FLTOBJ9H      equ	469	;# 
 17082   0001D6                     C1FLTOBJ9U      equ	470	;# 
 17083   0001D7                     C1FLTOBJ9T      equ	471	;# 
 17084   0001D8                     C1MASK9         equ	472	;# 
 17085   0001D8                     C1MASK9L        equ	472	;# 
 17086   0001D9                     C1MASK9H        equ	473	;# 
 17087   0001DA                     C1MASK9U        equ	474	;# 
 17088   0001DB                     C1MASK9T        equ	475	;# 
 17089   0001DC                     C1FLTOBJ10      equ	476	;# 
 17090   0001DC                     C1FLTOBJ10L     equ	476	;# 
 17091   0001DD                     C1FLTOBJ10H     equ	477	;# 
 17092   0001DE                     C1FLTOBJ10U     equ	478	;# 
 17093   0001DF                     C1FLTOBJ10T     equ	479	;# 
 17094   0001E0                     C1MASK10        equ	480	;# 
 17095   0001E0                     C1MASK10L       equ	480	;# 
 17096   0001E1                     C1MASK10H       equ	481	;# 
 17097   0001E2                     C1MASK10U       equ	482	;# 
 17098   0001E3                     C1MASK10T       equ	483	;# 
 17099   0001E4                     C1FLTOBJ11      equ	484	;# 
 17100   0001E4                     C1FLTOBJ11L     equ	484	;# 
 17101   0001E5                     C1FLTOBJ11H     equ	485	;# 
 17102   0001E6                     C1FLTOBJ11U     equ	486	;# 
 17103   0001E7                     C1FLTOBJ11T     equ	487	;# 
 17104   0001E8                     C1MASK11        equ	488	;# 
 17105   0001E8                     C1MASK11L       equ	488	;# 
 17106   0001E9                     C1MASK11H       equ	489	;# 
 17107   0001EA                     C1MASK11U       equ	490	;# 
 17108   0001EB                     C1MASK11T       equ	491	;# 
 17109   000200                     PPSLOCK         equ	512	;# 
 17110   000201                     RA0PPS          equ	513	;# 
 17111   000202                     RA1PPS          equ	514	;# 
 17112   000203                     RA2PPS          equ	515	;# 
 17113   000204                     RA3PPS          equ	516	;# 
 17114   000205                     RA4PPS          equ	517	;# 
 17115   000206                     RA5PPS          equ	518	;# 
 17116   000207                     RA6PPS          equ	519	;# 
 17117   000208                     RA7PPS          equ	520	;# 
 17118   000209                     RB0PPS          equ	521	;# 
 17119   00020A                     RB1PPS          equ	522	;# 
 17120   00020B                     RB2PPS          equ	523	;# 
 17121   00020C                     RB3PPS          equ	524	;# 
 17122   00020D                     RB4PPS          equ	525	;# 
 17123   00020E                     RB5PPS          equ	526	;# 
 17124   00020F                     RB6PPS          equ	527	;# 
 17125   000210                     RB7PPS          equ	528	;# 
 17126   000211                     RC0PPS          equ	529	;# 
 17127   000212                     RC1PPS          equ	530	;# 
 17128   000213                     RC2PPS          equ	531	;# 
 17129   000214                     RC3PPS          equ	532	;# 
 17130   000215                     RC4PPS          equ	533	;# 
 17131   000216                     RC5PPS          equ	534	;# 
 17132   000217                     RC6PPS          equ	535	;# 
 17133   000218                     RC7PPS          equ	536	;# 
 17134   00023D                     CANRXPPS        equ	573	;# 
 17135   00023E                     INT0PPS         equ	574	;# 
 17136   00023F                     INT1PPS         equ	575	;# 
 17137   000240                     INT2PPS         equ	576	;# 
 17138   000241                     T0CKIPPS        equ	577	;# 
 17139   000242                     T1CKIPPS        equ	578	;# 
 17140   000243                     T1GPPS          equ	579	;# 
 17141   000244                     T3CKIPPS        equ	580	;# 
 17142   000245                     T3GPPS          equ	581	;# 
 17143   000246                     T5CKIPPS        equ	582	;# 
 17144   000247                     T5GPPS          equ	583	;# 
 17145   000248                     T2INPPS         equ	584	;# 
 17146   000249                     T4INPPS         equ	585	;# 
 17147   00024A                     T6INPPS         equ	586	;# 
 17148   00024B                     TUIN0PPS        equ	587	;# 
 17149   00024C                     TUIN1PPS        equ	588	;# 
 17150   00024F                     CCP1PPS         equ	591	;# 
 17151   000250                     CCP2PPS         equ	592	;# 
 17152   000251                     CCP3PPS         equ	593	;# 
 17153   000253                     PWM1ERSPPS      equ	595	;# 
 17154   000254                     PWM2ERSPPS      equ	596	;# 
 17155   000255                     PWM3ERSPPS      equ	597	;# 
 17156   000256                     PWM4ERSPPS      equ	598	;# 
 17157   000257                     PWMIN0PPS       equ	599	;# 
 17158   000258                     PWMIN1PPS       equ	600	;# 
 17159   000259                     SMT1WINPPS      equ	601	;# 
 17160   00025A                     SMT1SIGPPS      equ	602	;# 
 17161   00025B                     CWG1PPS         equ	603	;# 
 17162   00025B                     CWG1INPPS       equ	603	;# 
 17163   00025C                     CWG2PPS         equ	604	;# 
 17164   00025C                     CWG2INPPS       equ	604	;# 
 17165   00025D                     CWG3PPS         equ	605	;# 
 17166   00025D                     CWG3INPPS       equ	605	;# 
 17167   00025E                     MD1CARLPPS      equ	606	;# 
 17168   00025E                     MDCARLPPS       equ	606	;# 
 17169   00025F                     MD1CARHPPS      equ	607	;# 
 17170   00025F                     MDCARHPPS       equ	607	;# 
 17171   000260                     MD1SRCPPS       equ	608	;# 
 17172   000260                     MDSRCPPS        equ	608	;# 
 17173   000261                     CLCIN0PPS       equ	609	;# 
 17174   000262                     CLCIN1PPS       equ	610	;# 
 17175   000263                     CLCIN2PPS       equ	611	;# 
 17176   000264                     CLCIN3PPS       equ	612	;# 
 17177   000265                     CLCIN4PPS       equ	613	;# 
 17178   000266                     CLCIN5PPS       equ	614	;# 
 17179   000267                     CLCIN6PPS       equ	615	;# 
 17180   000268                     CLCIN7PPS       equ	616	;# 
 17181   000269                     ADACTPPS        equ	617	;# 
 17182   00026A                     SPI1SCKPPS      equ	618	;# 
 17183   00026B                     SPI1SDIPPS      equ	619	;# 
 17184   00026C                     SPI1SSPPS       equ	620	;# 
 17185   00026D                     SPI2SCKPPS      equ	621	;# 
 17186   00026E                     SPI2SDIPPS      equ	622	;# 
 17187   00026F                     SPI2SSPPS       equ	623	;# 
 17188   000270                     I2C1SDAPPS      equ	624	;# 
 17189   000271                     I2C1SCLPPS      equ	625	;# 
 17190   000272                     U1RXPPS         equ	626	;# 
 17191   000273                     U1CTSPPS        equ	627	;# 
 17192   000274                     U2RXPPS         equ	628	;# 
 17193   000275                     U2CTSPPS        equ	629	;# 
 17194   000276                     U3RXPPS         equ	630	;# 
 17195   000277                     U3CTSPPS        equ	631	;# 
 17196   000278                     U4RXPPS         equ	632	;# 
 17197   000279                     U4CTSPPS        equ	633	;# 
 17198   00027A                     U5RXPPS         equ	634	;# 
 17199   00027B                     U5CTSPPS        equ	635	;# 
 17200   000286                     RC4I2C          equ	646	;# 
 17201   000287                     RC3I2C          equ	647	;# 
 17202   000288                     RB2I2C          equ	648	;# 
 17203   000289                     RB1I2C          equ	649	;# 
 17204   00028A                     I2C1RXB         equ	650	;# 
 17205   00028B                     I2C1TXB         equ	651	;# 
 17206   00028C                     I2C1CNTL        equ	652	;# 
 17207   00028D                     I2C1CNTH        equ	653	;# 
 17208   00028E                     I2C1ADB0        equ	654	;# 
 17209   00028F                     I2C1ADB1        equ	655	;# 
 17210   000290                     I2C1ADR0        equ	656	;# 
 17211   000291                     I2C1ADR1        equ	657	;# 
 17212   000292                     I2C1ADR2        equ	658	;# 
 17213   000293                     I2C1ADR3        equ	659	;# 
 17214   000294                     I2C1CON0        equ	660	;# 
 17215   000295                     I2C1CON1        equ	661	;# 
 17216   000296                     I2C1CON2        equ	662	;# 
 17217   000297                     I2C1ERR         equ	663	;# 
 17218   000298                     I2C1STAT0       equ	664	;# 
 17219   000299                     I2C1STAT1       equ	665	;# 
 17220   00029A                     I2C1PIR         equ	666	;# 
 17221   00029B                     I2C1PIE         equ	667	;# 
 17222   00029C                     I2C1BTO         equ	668	;# 
 17223   00029D                     I2C1BAUD        equ	669	;# 
 17224   00029E                     I2C1CLK         equ	670	;# 
 17225   00029F                     I2C1BTOC        equ	671	;# 
 17226   0002A1                     U1RXB           equ	673	;# 
 17227   0002A1                     U1RXBL          equ	673	;# 
 17228   0002A2                     U1RXCHK         equ	674	;# 
 17229   0002A3                     U1TXB           equ	675	;# 
 17230   0002A3                     U1TXBL          equ	675	;# 
 17231   0002A4                     U1TXCHK         equ	676	;# 
 17232   0002A5                     U1P1            equ	677	;# 
 17233   0002A5                     U1P1L           equ	677	;# 
 17234   0002A6                     U1P1H           equ	678	;# 
 17235   0002A7                     U1P2            equ	679	;# 
 17236   0002A7                     U1P2L           equ	679	;# 
 17237   0002A8                     U1P2H           equ	680	;# 
 17238   0002A9                     U1P3            equ	681	;# 
 17239   0002A9                     U1P3L           equ	681	;# 
 17240   0002AA                     U1P3H           equ	682	;# 
 17241   0002AB                     U1CON0          equ	683	;# 
 17242   0002AC                     U1CON1          equ	684	;# 
 17243   0002AD                     U1CON2          equ	685	;# 
 17244   0002AE                     U1BRG           equ	686	;# 
 17245   0002AE                     U1BRGL          equ	686	;# 
 17246   0002AF                     U1BRGH          equ	687	;# 
 17247   0002B0                     U1FIFO          equ	688	;# 
 17248   0002B1                     U1UIR           equ	689	;# 
 17249   0002B2                     U1ERRIR         equ	690	;# 
 17250   0002B3                     U1ERRIE         equ	691	;# 
 17251   0002B4                     U2RXB           equ	692	;# 
 17252   0002B4                     U2RXBL          equ	692	;# 
 17253   0002B5                     U2RXCHK         equ	693	;# 
 17254   0002B6                     U2TXB           equ	694	;# 
 17255   0002B6                     U2TXBL          equ	694	;# 
 17256   0002B7                     U2TXCHK         equ	695	;# 
 17257   0002B8                     U2P1            equ	696	;# 
 17258   0002B8                     U2P1L           equ	696	;# 
 17259   0002B9                     U2P1H           equ	697	;# 
 17260   0002BA                     U2P2            equ	698	;# 
 17261   0002BA                     U2P2L           equ	698	;# 
 17262   0002BB                     U2P2H           equ	699	;# 
 17263   0002BC                     U2P3            equ	700	;# 
 17264   0002BC                     U2P3L           equ	700	;# 
 17265   0002BD                     U2P3H           equ	701	;# 
 17266   0002BE                     U2CON0          equ	702	;# 
 17267   0002BF                     U2CON1          equ	703	;# 
 17268   0002C0                     U2CON2          equ	704	;# 
 17269   0002C1                     U2BRG           equ	705	;# 
 17270   0002C1                     U2BRGL          equ	705	;# 
 17271   0002C2                     U2BRGH          equ	706	;# 
 17272   0002C3                     U2FIFO          equ	707	;# 
 17273   0002C4                     U2UIR           equ	708	;# 
 17274   0002C5                     U2ERRIR         equ	709	;# 
 17275   0002C6                     U2ERRIE         equ	710	;# 
 17276   0002C7                     U3RXB           equ	711	;# 
 17277   0002C7                     U3RXBL          equ	711	;# 
 17278   0002C9                     U3TXB           equ	713	;# 
 17279   0002C9                     U3TXBL          equ	713	;# 
 17280   0002CB                     U3P1            equ	715	;# 
 17281   0002CB                     U3P1L           equ	715	;# 
 17282   0002CD                     U3P2            equ	717	;# 
 17283   0002CD                     U3P2L           equ	717	;# 
 17284   0002CF                     U3P3            equ	719	;# 
 17285   0002CF                     U3P3L           equ	719	;# 
 17286   0002D1                     U3CON0          equ	721	;# 
 17287   0002D2                     U3CON1          equ	722	;# 
 17288   0002D3                     U3CON2          equ	723	;# 
 17289   0002D4                     U3BRG           equ	724	;# 
 17290   0002D4                     U3BRGL          equ	724	;# 
 17291   0002D5                     U3BRGH          equ	725	;# 
 17292   0002D6                     U3FIFO          equ	726	;# 
 17293   0002D7                     U3UIR           equ	727	;# 
 17294   0002D8                     U3ERRIR         equ	728	;# 
 17295   0002D9                     U3ERRIE         equ	729	;# 
 17296   0002DA                     U4RXB           equ	730	;# 
 17297   0002DA                     U4RXBL          equ	730	;# 
 17298   0002DC                     U4TXB           equ	732	;# 
 17299   0002DC                     U4TXBL          equ	732	;# 
 17300   0002DE                     U4P1            equ	734	;# 
 17301   0002DE                     U4P1L           equ	734	;# 
 17302   0002E0                     U4P2            equ	736	;# 
 17303   0002E0                     U4P2L           equ	736	;# 
 17304   0002E2                     U4P3            equ	738	;# 
 17305   0002E2                     U4P3L           equ	738	;# 
 17306   0002E4                     U4CON0          equ	740	;# 
 17307   0002E5                     U4CON1          equ	741	;# 
 17308   0002E6                     U4CON2          equ	742	;# 
 17309   0002E7                     U4BRG           equ	743	;# 
 17310   0002E7                     U4BRGL          equ	743	;# 
 17311   0002E8                     U4BRGH          equ	744	;# 
 17312   0002E9                     U4FIFO          equ	745	;# 
 17313   0002EA                     U4UIR           equ	746	;# 
 17314   0002EB                     U4ERRIR         equ	747	;# 
 17315   0002EC                     U4ERRIE         equ	748	;# 
 17316   0002ED                     U5RXB           equ	749	;# 
 17317   0002ED                     U5RXBL          equ	749	;# 
 17318   0002EF                     U5TXB           equ	751	;# 
 17319   0002EF                     U5TXBL          equ	751	;# 
 17320   0002F1                     U5P1            equ	753	;# 
 17321   0002F1                     U5P1L           equ	753	;# 
 17322   0002F3                     U5P2            equ	755	;# 
 17323   0002F3                     U5P2L           equ	755	;# 
 17324   0002F5                     U5P3            equ	757	;# 
 17325   0002F5                     U5P3L           equ	757	;# 
 17326   0002F7                     U5CON0          equ	759	;# 
 17327   0002F8                     U5CON1          equ	760	;# 
 17328   0002F9                     U5CON2          equ	761	;# 
 17329   0002FA                     U5BRG           equ	762	;# 
 17330   0002FA                     U5BRGL          equ	762	;# 
 17331   0002FB                     U5BRGH          equ	763	;# 
 17332   0002FC                     U5FIFO          equ	764	;# 
 17333   0002FD                     U5UIR           equ	765	;# 
 17334   0002FE                     U5ERRIR         equ	766	;# 
 17335   0002FF                     U5ERRIE         equ	767	;# 
 17336   000300                     SMT1TMR         equ	768	;# 
 17337   000300                     SMT1TMRL        equ	768	;# 
 17338   000301                     SMT1TMRH        equ	769	;# 
 17339   000302                     SMT1TMRU        equ	770	;# 
 17340   000303                     SMT1CPR         equ	771	;# 
 17341   000303                     SMT1CPRL        equ	771	;# 
 17342   000304                     SMT1CPRH        equ	772	;# 
 17343   000305                     SMT1CPRU        equ	773	;# 
 17344   000306                     SMT1CPW         equ	774	;# 
 17345   000306                     SMT1CPWL        equ	774	;# 
 17346   000307                     SMT1CPWH        equ	775	;# 
 17347   000308                     SMT1CPWU        equ	776	;# 
 17348   000309                     SMT1PR          equ	777	;# 
 17349   000309                     SMT1PRL         equ	777	;# 
 17350   00030A                     SMT1PRH         equ	778	;# 
 17351   00030B                     SMT1PRU         equ	779	;# 
 17352   00030C                     SMT1CON0        equ	780	;# 
 17353   00030D                     SMT1CON1        equ	781	;# 
 17354   00030E                     SMT1STAT        equ	782	;# 
 17355   00030F                     SMT1CLK         equ	783	;# 
 17356   000310                     SMT1SIG         equ	784	;# 
 17357   000311                     SMT1WIN         equ	785	;# 
 17358   000318                     TMR0L           equ	792	;# 
 17359   000318                     TMR0            equ	792	;# 
 17360   000319                     TMR0H           equ	793	;# 
 17361   000319                     PR0             equ	793	;# 
 17362   00031A                     T0CON0          equ	794	;# 
 17363   00031B                     T0CON1          equ	795	;# 
 17364   00031C                     TMR1            equ	796	;# 
 17365   00031C                     TMR1L           equ	796	;# 
 17366   00031D                     TMR1H           equ	797	;# 
 17367   00031E                     T1CON           equ	798	;# 
 17368   00031E                     TMR1CON         equ	798	;# 
 17369   00031F                     T1GCON          equ	799	;# 
 17370   00031F                     TMR1GCON        equ	799	;# 
 17371   000320                     T1GATE          equ	800	;# 
 17372   000320                     TMR1GATE        equ	800	;# 
 17373   000321                     T1CLK           equ	801	;# 
 17374   000321                     TMR1CLK         equ	801	;# 
 17375   000321                     PR1             equ	801	;# 
 17376   000322                     T2TMR           equ	802	;# 
 17377   000322                     TMR2            equ	802	;# 
 17378   000323                     T2PR            equ	803	;# 
 17379   000323                     PR2             equ	803	;# 
 17380   000324                     T2CON           equ	804	;# 
 17381   000325                     T2HLT           equ	805	;# 
 17382   000326                     T2CLKCON        equ	806	;# 
 17383   000326                     T2CLK           equ	806	;# 
 17384   000327                     T2RST           equ	807	;# 
 17385   000328                     TMR3            equ	808	;# 
 17386   000328                     TMR3L           equ	808	;# 
 17387   000329                     TMR3H           equ	809	;# 
 17388   00032A                     T3CON           equ	810	;# 
 17389   00032A                     TMR3CON         equ	810	;# 
 17390   00032B                     T3GCON          equ	811	;# 
 17391   00032B                     TMR3GCON        equ	811	;# 
 17392   00032C                     T3GATE          equ	812	;# 
 17393   00032C                     TMR3GATE        equ	812	;# 
 17394   00032D                     T3CLK           equ	813	;# 
 17395   00032D                     TMR3CLK         equ	813	;# 
 17396   00032D                     PR3             equ	813	;# 
 17397   00032E                     T4TMR           equ	814	;# 
 17398   00032E                     TMR4            equ	814	;# 
 17399   00032F                     T4PR            equ	815	;# 
 17400   00032F                     PR4             equ	815	;# 
 17401   000330                     T4CON           equ	816	;# 
 17402   000331                     T4HLT           equ	817	;# 
 17403   000332                     T4CLKCON        equ	818	;# 
 17404   000332                     T4CLK           equ	818	;# 
 17405   000333                     T4RST           equ	819	;# 
 17406   000334                     TMR5            equ	820	;# 
 17407   000334                     TMR5L           equ	820	;# 
 17408   000335                     TMR5H           equ	821	;# 
 17409   000336                     T5CON           equ	822	;# 
 17410   000336                     TMR5CON         equ	822	;# 
 17411   000337                     T5GCON          equ	823	;# 
 17412   000337                     TMR5GCON        equ	823	;# 
 17413   000338                     T5GATE          equ	824	;# 
 17414   000338                     TMR5GATE        equ	824	;# 
 17415   000339                     T5CLK           equ	825	;# 
 17416   000339                     TMR5CLK         equ	825	;# 
 17417   000339                     PR5             equ	825	;# 
 17418   00033A                     T6TMR           equ	826	;# 
 17419   00033A                     TMR6            equ	826	;# 
 17420   00033B                     T6PR            equ	827	;# 
 17421   00033B                     PR6             equ	827	;# 
 17422   00033C                     T6CON           equ	828	;# 
 17423   00033D                     T6HLT           equ	829	;# 
 17424   00033E                     T6CLKCON        equ	830	;# 
 17425   00033E                     T6CLK           equ	830	;# 
 17426   00033F                     T6RST           equ	831	;# 
 17427   000340                     CCPR1           equ	832	;# 
 17428   000340                     CCPR1L          equ	832	;# 
 17429   000341                     CCPR1H          equ	833	;# 
 17430   000342                     CCP1CON         equ	834	;# 
 17431   000343                     CCP1CAP         equ	835	;# 
 17432   000344                     CCPR2           equ	836	;# 
 17433   000344                     CCPR2L          equ	836	;# 
 17434   000345                     CCPR2H          equ	837	;# 
 17435   000346                     CCP2CON         equ	838	;# 
 17436   000347                     CCP2CAP         equ	839	;# 
 17437   000348                     CCPR3           equ	840	;# 
 17438   000348                     CCPR3L          equ	840	;# 
 17439   000349                     CCPR3H          equ	841	;# 
 17440   00034A                     CCP3CON         equ	842	;# 
 17441   00034B                     CCP3CAP         equ	843	;# 
 17442   00034C                     CCPTMRS0        equ	844	;# 
 17443   00034F                     CRCDATA         equ	847	;# 
 17444   00034F                     CRCDATAL        equ	847	;# 
 17445   000350                     CRCDATAH        equ	848	;# 
 17446   000351                     CRCDATAU        equ	849	;# 
 17447   000352                     CRCDATAT        equ	850	;# 
 17448   000353                     CRCOUT          equ	851	;# 
 17449   000353                     CRCSHFT         equ	851	;# 
 17450   000353                     CRCXOR          equ	851	;# 
 17451   000353                     CRCOUTL         equ	851	;# 
 17452   000353                     CRCSHFTL        equ	851	;# 
 17453   000353                     CRCSHIFTL       equ	851	;# 
 17454   000353                     CRCXORL         equ	851	;# 
 17455   000354                     CRCOUTH         equ	852	;# 
 17456   000354                     CRCSHFTH        equ	852	;# 
 17457   000354                     CRCSHIFTH       equ	852	;# 
 17458   000354                     CRCXORH         equ	852	;# 
 17459   000355                     CRCOUTU         equ	853	;# 
 17460   000355                     CRCSHFTU        equ	853	;# 
 17461   000355                     CRCSHIFTU       equ	853	;# 
 17462   000355                     CRCXORU         equ	853	;# 
 17463   000356                     CRCOUTT         equ	854	;# 
 17464   000356                     CRCSHFTT        equ	854	;# 
 17465   000356                     CRCSHIFTT       equ	854	;# 
 17466   000356                     CRCXORT         equ	854	;# 
 17467   000357                     CRCCON0         equ	855	;# 
 17468   000358                     CRCCON1         equ	856	;# 
 17469   000359                     CRCCON2         equ	857	;# 
 17470   00035A                     SCANLADR        equ	858	;# 
 17471   00035A                     SCANLADRL       equ	858	;# 
 17472   00035B                     SCANLADRH       equ	859	;# 
 17473   00035C                     SCANLADRU       equ	860	;# 
 17474   00035D                     SCANHADR        equ	861	;# 
 17475   00035D                     SCANHADRL       equ	861	;# 
 17476   00035E                     SCANHADRH       equ	862	;# 
 17477   00035F                     SCANHADRU       equ	863	;# 
 17478   000360                     SCANCON0        equ	864	;# 
 17479   000361                     SCANTRIG        equ	865	;# 
 17480   000362                     IPR0            equ	866	;# 
 17481   000363                     IPR1            equ	867	;# 
 17482   000364                     IPR2            equ	868	;# 
 17483   000365                     IPR3            equ	869	;# 
 17484   000366                     IPR4            equ	870	;# 
 17485   000367                     IPR5            equ	871	;# 
 17486   000368                     IPR6            equ	872	;# 
 17487   000369                     IPR7            equ	873	;# 
 17488   00036A                     IPR8            equ	874	;# 
 17489   00036B                     IPR9            equ	875	;# 
 17490   00036C                     IPR10           equ	876	;# 
 17491   00036D                     IPR11           equ	877	;# 
 17492   00036E                     IPR12           equ	878	;# 
 17493   00036F                     IPR13           equ	879	;# 
 17494   000370                     IPR14           equ	880	;# 
 17495   000371                     IPR15           equ	881	;# 
 17496   000373                     STATUS_CSHAD    equ	883	;# 
 17497   000374                     WREG_CSHAD      equ	884	;# 
 17498   000375                     BSR_CSHAD       equ	885	;# 
 17499   000376                     SHADCON         equ	886	;# 
 17500   000377                     STATUS_SHAD     equ	887	;# 
 17501   000378                     WREG_SHAD       equ	888	;# 
 17502   000379                     BSR_SHAD        equ	889	;# 
 17503   00037A                     PCLATH_SHAD     equ	890	;# 
 17504   00037B                     PCLATU_SHAD     equ	891	;# 
 17505   00037C                     FSR0SH          equ	892	;# 
 17506   00037C                     FSR0L_SHAD      equ	892	;# 
 17507   00037D                     FSR0H_SHAD      equ	893	;# 
 17508   00037E                     FSR1SH          equ	894	;# 
 17509   00037E                     FSR1L_SHAD      equ	894	;# 
 17510   00037F                     FSR1H_SHAD      equ	895	;# 
 17511   000380                     FSR2SH          equ	896	;# 
 17512   000380                     FSR2L_SHAD      equ	896	;# 
 17513   000381                     FSR2H_SHAD      equ	897	;# 
 17514   000382                     PRODSH          equ	898	;# 
 17515   000382                     PRODL_SHAD      equ	898	;# 
 17516   000383                     PRODH_SHAD      equ	899	;# 
 17517   000387                     TU16ACON0       equ	903	;# 
 17518   000388                     TU16ACON1       equ	904	;# 
 17519   000389                     TU16AHLT        equ	905	;# 
 17520   00038A                     TU16APS         equ	906	;# 
 17521   00038B                     TU16ATMR        equ	907	;# 
 17522   00038B                     TU16ACR         equ	907	;# 
 17523   00038B                     TU16ATMRL       equ	907	;# 
 17524   00038B                     TU16ACRL        equ	907	;# 
 17525   00038C                     TU16ATMRH       equ	908	;# 
 17526   00038C                     TU16ACRH        equ	908	;# 
 17527   00038D                     TU16APR         equ	909	;# 
 17528   00038D                     TU16APRL        equ	909	;# 
 17529   00038E                     TU16APRH        equ	910	;# 
 17530   00038F                     TU16ACLK        equ	911	;# 
 17531   000390                     TU16AERS        equ	912	;# 
 17532   000393                     TU16BCON0       equ	915	;# 
 17533   000394                     TU16BCON1       equ	916	;# 
 17534   000395                     TU16BHLT        equ	917	;# 
 17535   000396                     TU16BPS         equ	918	;# 
 17536   000397                     TU16BTMR        equ	919	;# 
 17537   000397                     TU16BCR         equ	919	;# 
 17538   000397                     TU16BTMRL       equ	919	;# 
 17539   000397                     TU16BCRL        equ	919	;# 
 17540   000398                     TU16BTMRH       equ	920	;# 
 17541   000398                     TU16BCRH        equ	920	;# 
 17542   000399                     TU16BPR         equ	921	;# 
 17543   000399                     TU16BPRL        equ	921	;# 
 17544   00039A                     TU16BPRH        equ	922	;# 
 17545   00039B                     TU16BCLK        equ	923	;# 
 17546   00039C                     TU16BERS        equ	924	;# 
 17547   0003BB                     TUCHAIN         equ	955	;# 
 17548   0003BC                     CWG1CLK         equ	956	;# 
 17549   0003BC                     CWG1CLKCON      equ	956	;# 
 17550   0003BD                     CWG1ISM         equ	957	;# 
 17551   0003BE                     CWG1DBR         equ	958	;# 
 17552   0003BF                     CWG1DBF         equ	959	;# 
 17553   0003C0                     CWG1CON0        equ	960	;# 
 17554   0003C1                     CWG1CON1        equ	961	;# 
 17555   0003C2                     CWG1AS0         equ	962	;# 
 17556   0003C3                     CWG1AS1         equ	963	;# 
 17557   0003C4                     CWG1STR         equ	964	;# 
 17558   0003C5                     CWG2CLK         equ	965	;# 
 17559   0003C5                     CWG2CLKCON      equ	965	;# 
 17560   0003C6                     CWG2ISM         equ	966	;# 
 17561   0003C7                     CWG2DBR         equ	967	;# 
 17562   0003C8                     CWG2DBF         equ	968	;# 
 17563   0003C9                     CWG2CON0        equ	969	;# 
 17564   0003CA                     CWG2CON1        equ	970	;# 
 17565   0003CB                     CWG2AS0         equ	971	;# 
 17566   0003CC                     CWG2AS1         equ	972	;# 
 17567   0003CD                     CWG2STR         equ	973	;# 
 17568   0003CE                     CWG3CLK         equ	974	;# 
 17569   0003CE                     CWG3CLKCON      equ	974	;# 
 17570   0003CF                     CWG3ISM         equ	975	;# 
 17571   0003D0                     CWG3DBR         equ	976	;# 
 17572   0003D1                     CWG3DBF         equ	977	;# 
 17573   0003D2                     CWG3CON0        equ	978	;# 
 17574   0003D3                     CWG3CON1        equ	979	;# 
 17575   0003D4                     CWG3AS0         equ	980	;# 
 17576   0003D5                     CWG3AS1         equ	981	;# 
 17577   0003D6                     CWG3STR         equ	982	;# 
 17578   0003D7                     FVRCON          equ	983	;# 
 17579   0003D8                     ADCPCON         equ	984	;# 
 17580   0003D8                     ADCP            equ	984	;# 
 17581   0003D9                     ADLTH           equ	985	;# 
 17582   0003D9                     ADLTHL          equ	985	;# 
 17583   0003DA                     ADLTHH          equ	986	;# 
 17584   0003DB                     ADUTH           equ	987	;# 
 17585   0003DB                     ADUTHL          equ	987	;# 
 17586   0003DC                     ADUTHH          equ	988	;# 
 17587   0003DD                     ADERR           equ	989	;# 
 17588   0003DD                     ADERRL          equ	989	;# 
 17589   0003DE                     ADERRH          equ	990	;# 
 17590   0003DF                     ADSTPT          equ	991	;# 
 17591   0003DF                     ADSTPTL         equ	991	;# 
 17592   0003E0                     ADSTPTH         equ	992	;# 
 17593   0003E1                     ADFLTR          equ	993	;# 
 17594   0003E1                     ADFLTRL         equ	993	;# 
 17595   0003E2                     ADFLTRH         equ	994	;# 
 17596   0003E3                     ADACC           equ	995	;# 
 17597   0003E3                     ADACCL          equ	995	;# 
 17598   0003E4                     ADACCH          equ	996	;# 
 17599   0003E5                     ADACCU          equ	997	;# 
 17600   0003E6                     ADCNT           equ	998	;# 
 17601   0003E7                     ADRPT           equ	999	;# 
 17602   0003E8                     ADPREV          equ	1000	;# 
 17603   0003E8                     ADPREVL         equ	1000	;# 
 17604   0003E9                     ADPREVH         equ	1001	;# 
 17605   0003EA                     ADRES           equ	1002	;# 
 17606   0003EA                     ADRESL          equ	1002	;# 
 17607   0003EB                     ADRESH          equ	1003	;# 
 17608   0003EC                     ADPCH           equ	1004	;# 
 17609   0003EE                     ADACQ           equ	1006	;# 
 17610   0003EE                     ADACQL          equ	1006	;# 
 17611   0003EF                     ADACQH          equ	1007	;# 
 17612   0003F0                     ADCAP           equ	1008	;# 
 17613   0003F1                     ADPRE           equ	1009	;# 
 17614   0003F1                     ADPREL          equ	1009	;# 
 17615   0003F2                     ADPREH          equ	1010	;# 
 17616   0003F3                     ADCON0          equ	1011	;# 
 17617   0003F4                     ADCON1          equ	1012	;# 
 17618   0003F5                     ADCON2          equ	1013	;# 
 17619   0003F6                     ADCON3          equ	1014	;# 
 17620   0003F7                     ADSTAT          equ	1015	;# 
 17621   0003F8                     ADREF           equ	1016	;# 
 17622   0003F9                     ADACT           equ	1017	;# 
 17623   0003FA                     ADCLK           equ	1018	;# 
 17624   0003FB                     ADCTX           equ	1019	;# 
 17625   0003FC                     ADCSEL1         equ	1020	;# 
 17626   0003FD                     ADCSEL2         equ	1021	;# 
 17627   0003FE                     ADCSEL3         equ	1022	;# 
 17628   0003FF                     ADCSEL4         equ	1023	;# 
 17629   000400                     ANSELA          equ	1024	;# 
 17630   000401                     WPUA            equ	1025	;# 
 17631   000402                     ODCONA          equ	1026	;# 
 17632   000403                     SLRCONA         equ	1027	;# 
 17633   000404                     INLVLA          equ	1028	;# 
 17634   000405                     IOCAP           equ	1029	;# 
 17635   000406                     IOCAN           equ	1030	;# 
 17636   000407                     IOCAF           equ	1031	;# 
 17637   000408                     ANSELB          equ	1032	;# 
 17638   000409                     WPUB            equ	1033	;# 
 17639   00040A                     ODCONB          equ	1034	;# 
 17640   00040B                     SLRCONB         equ	1035	;# 
 17641   00040C                     INLVLB          equ	1036	;# 
 17642   00040D                     IOCBP           equ	1037	;# 
 17643   00040E                     IOCBN           equ	1038	;# 
 17644   00040F                     IOCBF           equ	1039	;# 
 17645   000410                     ANSELC          equ	1040	;# 
 17646   000411                     WPUC            equ	1041	;# 
 17647   000412                     ODCONC          equ	1042	;# 
 17648   000413                     SLRCONC         equ	1043	;# 
 17649   000414                     INLVLC          equ	1044	;# 
 17650   000415                     IOCCP           equ	1045	;# 
 17651   000416                     IOCCN           equ	1046	;# 
 17652   000417                     IOCCF           equ	1047	;# 
 17653   000421                     WPUE            equ	1057	;# 
 17654   000424                     INLVLE          equ	1060	;# 
 17655   000425                     IOCEP           equ	1061	;# 
 17656   000426                     IOCEN           equ	1062	;# 
 17657   000427                     IOCEF           equ	1063	;# 
 17658   000440                     NCO1ACC         equ	1088	;# 
 17659   000440                     NCO1ACCL        equ	1088	;# 
 17660   000441                     NCO1ACCH        equ	1089	;# 
 17661   000442                     NCO1ACCU        equ	1090	;# 
 17662   000443                     NCO1INC         equ	1091	;# 
 17663   000443                     NCO1INCL        equ	1091	;# 
 17664   000444                     NCO1INCH        equ	1092	;# 
 17665   000445                     NCO1INCU        equ	1093	;# 
 17666   000446                     NCO1CON         equ	1094	;# 
 17667   000447                     NCO1CLK         equ	1095	;# 
 17668   000448                     NCO2ACC         equ	1096	;# 
 17669   000448                     NCO2ACCL        equ	1096	;# 
 17670   000449                     NCO2ACCH        equ	1097	;# 
 17671   00044A                     NCO2ACCU        equ	1098	;# 
 17672   00044B                     NCO2INC         equ	1099	;# 
 17673   00044B                     NCO2INCL        equ	1099	;# 
 17674   00044C                     NCO2INCH        equ	1100	;# 
 17675   00044D                     NCO2INCU        equ	1101	;# 
 17676   00044E                     NCO2CON         equ	1102	;# 
 17677   00044F                     NCO2CLK         equ	1103	;# 
 17678   000450                     NCO3ACC         equ	1104	;# 
 17679   000450                     NCO3ACCL        equ	1104	;# 
 17680   000451                     NCO3ACCH        equ	1105	;# 
 17681   000452                     NCO3ACCU        equ	1106	;# 
 17682   000453                     NCO3INC         equ	1107	;# 
 17683   000453                     NCO3INCL        equ	1107	;# 
 17684   000454                     NCO3INCH        equ	1108	;# 
 17685   000455                     NCO3INCU        equ	1109	;# 
 17686   000456                     NCO3CON         equ	1110	;# 
 17687   000457                     NCO3CLK         equ	1111	;# 
 17688   000458                     FSCMCON         equ	1112	;# 
 17689   000459                     IVTLOCK         equ	1113	;# 
 17690   00045A                     IVTAD           equ	1114	;# 
 17691   00045A                     IVTADL          equ	1114	;# 
 17692   00045B                     IVTADH          equ	1115	;# 
 17693   00045C                     IVTADU          equ	1116	;# 
 17694   00045D                     IVTBASE         equ	1117	;# 
 17695   00045D                     IVTBASEL        equ	1117	;# 
 17696   00045E                     IVTBASEH        equ	1118	;# 
 17697   00045F                     IVTBASEU        equ	1119	;# 
 17698   000460                     PWM1ERS         equ	1120	;# 
 17699   000461                     PWM1CLK         equ	1121	;# 
 17700   000462                     PWM1LDS         equ	1122	;# 
 17701   000463                     PWM1PR          equ	1123	;# 
 17702   000463                     PWM1PRL         equ	1123	;# 
 17703   000464                     PWM1PRH         equ	1124	;# 
 17704   000465                     PWM1CPRE        equ	1125	;# 
 17705   000466                     PWM1PIPOS       equ	1126	;# 
 17706   000467                     PWM1GIR         equ	1127	;# 
 17707   000468                     PWM1GIE         equ	1128	;# 
 17708   000469                     PWM1CON         equ	1129	;# 
 17709   00046A                     PWM1S1CFG       equ	1130	;# 
 17710   00046B                     PWM1S1P1        equ	1131	;# 
 17711   00046B                     PWM1S1P1L       equ	1131	;# 
 17712   00046C                     PWM1S1P1H       equ	1132	;# 
 17713   00046D                     PWM1S1P2        equ	1133	;# 
 17714   00046D                     PWM1S1P2L       equ	1133	;# 
 17715   00046E                     PWM1S1P2H       equ	1134	;# 
 17716   00046F                     PWM2ERS         equ	1135	;# 
 17717   000470                     PWM2CLK         equ	1136	;# 
 17718   000471                     PWM2LDS         equ	1137	;# 
 17719   000472                     PWM2PR          equ	1138	;# 
 17720   000472                     PWM2PRL         equ	1138	;# 
 17721   000473                     PWM2PRH         equ	1139	;# 
 17722   000474                     PWM2CPRE        equ	1140	;# 
 17723   000475                     PWM2PIPOS       equ	1141	;# 
 17724   000476                     PWM2GIR         equ	1142	;# 
 17725   000477                     PWM2GIE         equ	1143	;# 
 17726   000478                     PWM2CON         equ	1144	;# 
 17727   000479                     PWM2S1CFG       equ	1145	;# 
 17728   00047A                     PWM2S1P1        equ	1146	;# 
 17729   00047A                     PWM2S1P1L       equ	1146	;# 
 17730   00047B                     PWM2S1P1H       equ	1147	;# 
 17731   00047C                     PWM2S1P2        equ	1148	;# 
 17732   00047C                     PWM2S1P2L       equ	1148	;# 
 17733   00047D                     PWM2S1P2H       equ	1149	;# 
 17734   00047E                     PWM3ERS         equ	1150	;# 
 17735   00047F                     PWM3CLK         equ	1151	;# 
 17736   000480                     PWM3LDS         equ	1152	;# 
 17737   000481                     PWM3PR          equ	1153	;# 
 17738   000481                     PWM3PRL         equ	1153	;# 
 17739   000482                     PWM3PRH         equ	1154	;# 
 17740   000483                     PWM3CPRE        equ	1155	;# 
 17741   000484                     PWM3PIPOS       equ	1156	;# 
 17742   000485                     PWM3GIR         equ	1157	;# 
 17743   000486                     PWM3GIE         equ	1158	;# 
 17744   000487                     PWM3CON         equ	1159	;# 
 17745   000488                     PWM3S1CFG       equ	1160	;# 
 17746   000489                     PWM3S1P1        equ	1161	;# 
 17747   000489                     PWM3S1P1L       equ	1161	;# 
 17748   00048A                     PWM3S1P1H       equ	1162	;# 
 17749   00048B                     PWM3S1P2        equ	1163	;# 
 17750   00048B                     PWM3S1P2L       equ	1163	;# 
 17751   00048C                     PWM3S1P2H       equ	1164	;# 
 17752   00048D                     PWM4ERS         equ	1165	;# 
 17753   00048E                     PWM4CLK         equ	1166	;# 
 17754   00048F                     PWM4LDS         equ	1167	;# 
 17755   000490                     PWM4PR          equ	1168	;# 
 17756   000490                     PWM4PRL         equ	1168	;# 
 17757   000491                     PWM4PRH         equ	1169	;# 
 17758   000492                     PWM4CPRE        equ	1170	;# 
 17759   000493                     PWM4PIPOS       equ	1171	;# 
 17760   000494                     PWM4GIR         equ	1172	;# 
 17761   000495                     PWM4GIE         equ	1173	;# 
 17762   000496                     PWM4CON         equ	1174	;# 
 17763   000497                     PWM4S1CFG       equ	1175	;# 
 17764   000498                     PWM4S1P1        equ	1176	;# 
 17765   000498                     PWM4S1P1L       equ	1176	;# 
 17766   000499                     PWM4S1P1H       equ	1177	;# 
 17767   00049A                     PWM4S1P2        equ	1178	;# 
 17768   00049A                     PWM4S1P2L       equ	1178	;# 
 17769   00049B                     PWM4S1P2H       equ	1179	;# 
 17770   00049C                     PWMLOAD         equ	1180	;# 
 17771   00049D                     PWMEN           equ	1181	;# 
 17772   00049E                     PIE0            equ	1182	;# 
 17773   00049F                     PIE1            equ	1183	;# 
 17774   0004A0                     PIE2            equ	1184	;# 
 17775   0004A1                     PIE3            equ	1185	;# 
 17776   0004A2                     PIE4            equ	1186	;# 
 17777   0004A3                     PIE5            equ	1187	;# 
 17778   0004A4                     PIE6            equ	1188	;# 
 17779   0004A5                     PIE7            equ	1189	;# 
 17780   0004A6                     PIE8            equ	1190	;# 
 17781   0004A7                     PIE9            equ	1191	;# 
 17782   0004A8                     PIE10           equ	1192	;# 
 17783   0004A9                     PIE11           equ	1193	;# 
 17784   0004AA                     PIE12           equ	1194	;# 
 17785   0004AB                     PIE13           equ	1195	;# 
 17786   0004AC                     PIE14           equ	1196	;# 
 17787   0004AD                     PIE15           equ	1197	;# 
 17788   0004AE                     PIR0            equ	1198	;# 
 17789   0004AF                     PIR1            equ	1199	;# 
 17790   0004B0                     PIR2            equ	1200	;# 
 17791   0004B1                     PIR3            equ	1201	;# 
 17792   0004B2                     PIR4            equ	1202	;# 
 17793   0004B3                     PIR5            equ	1203	;# 
 17794   0004B4                     PIR6            equ	1204	;# 
 17795   0004B5                     PIR7            equ	1205	;# 
 17796   0004B6                     PIR8            equ	1206	;# 
 17797   0004B7                     PIR9            equ	1207	;# 
 17798   0004B8                     PIR10           equ	1208	;# 
 17799   0004B9                     PIR11           equ	1209	;# 
 17800   0004BA                     PIR12           equ	1210	;# 
 17801   0004BB                     PIR13           equ	1211	;# 
 17802   0004BC                     PIR14           equ	1212	;# 
 17803   0004BD                     PIR15           equ	1213	;# 
 17804   0004BE                     LATA            equ	1214	;# 
 17805   0004BF                     LATB            equ	1215	;# 
 17806   0004C0                     LATC            equ	1216	;# 
 17807   0004C6                     TRISA           equ	1222	;# 
 17808   0004C7                     TRISB           equ	1223	;# 
 17809   0004C8                     TRISC           equ	1224	;# 
 17810   0004CA                     TRISE           equ	1226	;# 
 17811   0004CE                     PORTA           equ	1230	;# 
 17812   0004CF                     PORTB           equ	1231	;# 
 17813   0004D0                     PORTC           equ	1232	;# 
 17814   0004D2                     PORTE           equ	1234	;# 
 17815   0004D6                     INTCON0         equ	1238	;# 
 17816   0004D7                     INTCON1         equ	1239	;# 
 17817   0004D8                     STATUS          equ	1240	;# 
 17818   0004D9                     FSR2            equ	1241	;# 
 17819   0004D9                     FSR2L           equ	1241	;# 
 17820   0004DA                     FSR2H           equ	1242	;# 
 17821   0004DB                     PLUSW2          equ	1243	;# 
 17822   0004DC                     PREINC2         equ	1244	;# 
 17823   0004DD                     POSTDEC2        equ	1245	;# 
 17824   0004DE                     POSTINC2        equ	1246	;# 
 17825   0004DF                     INDF2           equ	1247	;# 
 17826   0004E0                     BSR             equ	1248	;# 
 17827   0004E1                     FSR1            equ	1249	;# 
 17828   0004E1                     FSR1L           equ	1249	;# 
 17829   0004E2                     FSR1H           equ	1250	;# 
 17830   0004E3                     PLUSW1          equ	1251	;# 
 17831   0004E4                     PREINC1         equ	1252	;# 
 17832   0004E5                     POSTDEC1        equ	1253	;# 
 17833   0004E6                     POSTINC1        equ	1254	;# 
 17834   0004E7                     INDF1           equ	1255	;# 
 17835   0004E8                     WREG            equ	1256	;# 
 17836   0004E9                     FSR0            equ	1257	;# 
 17837   0004E9                     FSR0L           equ	1257	;# 
 17838   0004EA                     FSR0H           equ	1258	;# 
 17839   0004EB                     PLUSW0          equ	1259	;# 
 17840   0004EC                     PREINC0         equ	1260	;# 
 17841   0004ED                     POSTDEC0        equ	1261	;# 
 17842   0004EE                     POSTINC0        equ	1262	;# 
 17843   0004EF                     INDF0           equ	1263	;# 
 17844   0004F0                     PCON0           equ	1264	;# 
 17845   0004F1                     PCON1           equ	1265	;# 
 17846   0004F2                     CPUDOZE         equ	1266	;# 
 17847   0004F3                     PROD            equ	1267	;# 
 17848   0004F3                     PRODL           equ	1267	;# 
 17849   0004F4                     PRODH           equ	1268	;# 
 17850   0004F5                     TABLAT          equ	1269	;# 
 17851   0004F6                     TBLPTR          equ	1270	;# 
 17852   0004F6                     TBLPTRL         equ	1270	;# 
 17853   0004F7                     TBLPTRH         equ	1271	;# 
 17854   0004F8                     TBLPTRU         equ	1272	;# 
 17855   0004F9                     PCLAT           equ	1273	;# 
 17856   0004F9                     PCL             equ	1273	;# 
 17857   0004FA                     PCLATH          equ	1274	;# 
 17858   0004FB                     PCLATU          equ	1275	;# 
 17859   0004FC                     STKPTR          equ	1276	;# 
 17860   0004FD                     TOS             equ	1277	;# 
 17861   0004FD                     TOSL            equ	1277	;# 
 17862   0004FE                     TOSH            equ	1278	;# 
 17863   0004FF                     TOSU            equ	1279	;# 
 17864   000038                     BOOTREG         equ	56	;# 
 17865   000039                     CLKRCON         equ	57	;# 
 17866   00003A                     CLKRCLK         equ	58	;# 
 17867   000040                     NVMCON0         equ	64	;# 
 17868   000041                     NVMCON1         equ	65	;# 
 17869   000042                     NVMLOCK         equ	66	;# 
 17870   000043                     NVMADR          equ	67	;# 
 17871   000043                     NVMADRL         equ	67	;# 
 17872   000044                     NVMADRH         equ	68	;# 
 17873   000045                     NVMADRU         equ	69	;# 
 17874   000046                     NVMDAT          equ	70	;# 
 17875   000046                     NVMDATL         equ	70	;# 
 17876   000047                     NVMDATH         equ	71	;# 
 17877   000048                     VREGCON         equ	72	;# 
 17878   000049                     BORCON          equ	73	;# 
 17879   00004A                     HLVDCON0        equ	74	;# 
 17880   00004B                     HLVDCON1        equ	75	;# 
 17881   00004C                     ZCDCON          equ	76	;# 
 17882   000060                     PMD0            equ	96	;# 
 17883   000061                     PMD1            equ	97	;# 
 17884   000062                     PMD2            equ	98	;# 
 17885   000063                     PMD3            equ	99	;# 
 17886   000064                     PMD4            equ	100	;# 
 17887   000065                     PMD5            equ	101	;# 
 17888   000066                     PMD6            equ	102	;# 
 17889   000067                     PMD7            equ	103	;# 
 17890   000068                     PMD8            equ	104	;# 
 17891   00006A                     MD1CON0         equ	106	;# 
 17892   00006B                     MD1CON1         equ	107	;# 
 17893   00006C                     MD1SRC          equ	108	;# 
 17894   00006D                     MD1CARL         equ	109	;# 
 17895   00006E                     MD1CARH         equ	110	;# 
 17896   00006F                     CMOUT           equ	111	;# 
 17897   000070                     CM1CON0         equ	112	;# 
 17898   000071                     CM1CON1         equ	113	;# 
 17899   000072                     CM1NCH          equ	114	;# 
 17900   000073                     CM1PCH          equ	115	;# 
 17901   000074                     CM2CON0         equ	116	;# 
 17902   000075                     CM2CON1         equ	117	;# 
 17903   000076                     CM2NCH          equ	118	;# 
 17904   000077                     CM2PCH          equ	119	;# 
 17905   000078                     WDTCON0         equ	120	;# 
 17906   000079                     WDTCON1         equ	121	;# 
 17907   00007A                     WDTPSL          equ	122	;# 
 17908   00007B                     WDTPSH          equ	123	;# 
 17909   00007C                     WDTTMR          equ	124	;# 
 17910   00007D                     DAC1DAT         equ	125	;# 
 17911   00007D                     DAC1DATL        equ	125	;# 
 17912   00007F                     DAC1CON         equ	127	;# 
 17913   000080                     SPI1RXB         equ	128	;# 
 17914   000081                     SPI1TXB         equ	129	;# 
 17915   000082                     SPI1TCNT        equ	130	;# 
 17916   000082                     SPI1TCNTL       equ	130	;# 
 17917   000083                     SPI1TCNTH       equ	131	;# 
 17918   000084                     SPI1CON0        equ	132	;# 
 17919   000085                     SPI1CON1        equ	133	;# 
 17920   000086                     SPI1CON2        equ	134	;# 
 17921   000087                     SPI1STATUS      equ	135	;# 
 17922   000088                     SPI1TWIDTH      equ	136	;# 
 17923   000089                     SPI1BAUD        equ	137	;# 
 17924   00008A                     SPI1INTF        equ	138	;# 
 17925   00008B                     SPI1INTE        equ	139	;# 
 17926   00008C                     SPI1CLK         equ	140	;# 
 17927   00008D                     SPI2RXB         equ	141	;# 
 17928   00008E                     SPI2TXB         equ	142	;# 
 17929   00008F                     SPI2TCNT        equ	143	;# 
 17930   00008F                     SPI2TCNTL       equ	143	;# 
 17931   000090                     SPI2TCNTH       equ	144	;# 
 17932   000091                     SPI2CON0        equ	145	;# 
 17933   000092                     SPI2CON1        equ	146	;# 
 17934   000093                     SPI2CON2        equ	147	;# 
 17935   000094                     SPI2STATUS      equ	148	;# 
 17936   000095                     SPI2TWIDTH      equ	149	;# 
 17937   000096                     SPI2BAUD        equ	150	;# 
 17938   000097                     SPI2INTF        equ	151	;# 
 17939   000098                     SPI2INTE        equ	152	;# 
 17940   000099                     SPI2CLK         equ	153	;# 
 17941   0000AC                     ACTCON          equ	172	;# 
 17942   0000AD                     OSCCON1         equ	173	;# 
 17943   0000AE                     OSCCON2         equ	174	;# 
 17944   0000AF                     OSCCON3         equ	175	;# 
 17945   0000B0                     OSCTUNE         equ	176	;# 
 17946   0000B1                     OSCFRQ          equ	177	;# 
 17947   0000B1                     OSCFREQ         equ	177	;# 
 17948   0000B2                     OSCSTAT         equ	178	;# 
 17949   0000B2                     OSCSTAT1        equ	178	;# 
 17950   0000B3                     OSCEN           equ	179	;# 
 17951   0000B4                     PRLOCK          equ	180	;# 
 17952   0000B5                     SCANPR          equ	181	;# 
 17953   0000B6                     DMA1PR          equ	182	;# 
 17954   0000B7                     DMA2PR          equ	183	;# 
 17955   0000B8                     DMA3PR          equ	184	;# 
 17956   0000B9                     DMA4PR          equ	185	;# 
 17957   0000BA                     DMA5PR          equ	186	;# 
 17958   0000BB                     DMA6PR          equ	187	;# 
 17959   0000BC                     DMA7PR          equ	188	;# 
 17960   0000BD                     DMA8PR          equ	189	;# 
 17961   0000BE                     MAINPR          equ	190	;# 
 17962   0000BF                     ISRPR           equ	191	;# 
 17963   0000D4                     CLCDATA         equ	212	;# 
 17964   0000D5                     CLCSELECT       equ	213	;# 
 17965   0000D6                     CLCnCON         equ	214	;# 
 17966   0000D7                     CLCnPOL         equ	215	;# 
 17967   0000D8                     CLCnSEL0        equ	216	;# 
 17968   0000D9                     CLCnSEL1        equ	217	;# 
 17969   0000DA                     CLCnSEL2        equ	218	;# 
 17970   0000DB                     CLCnSEL3        equ	219	;# 
 17971   0000DC                     CLCnGLS0        equ	220	;# 
 17972   0000DD                     CLCnGLS1        equ	221	;# 
 17973   0000DE                     CLCnGLS2        equ	222	;# 
 17974   0000DF                     CLCnGLS3        equ	223	;# 
 17975   0000E8                     DMASELECT       equ	232	;# 
 17976   0000E9                     DMAnBUF         equ	233	;# 
 17977   0000EA                     DMAnDCNT        equ	234	;# 
 17978   0000EA                     DMAnDCNTL       equ	234	;# 
 17979   0000EB                     DMAnDCNTH       equ	235	;# 
 17980   0000EC                     DMAnDPTR        equ	236	;# 
 17981   0000EC                     DMAnDPTRL       equ	236	;# 
 17982   0000ED                     DMAnDPTRH       equ	237	;# 
 17983   0000EE                     DMAnDSZ         equ	238	;# 
 17984   0000EE                     DMAnDSZL        equ	238	;# 
 17985   0000EF                     DMAnDSZH        equ	239	;# 
 17986   0000F0                     DMAnDSA         equ	240	;# 
 17987   0000F0                     DMAnDSAL        equ	240	;# 
 17988   0000F1                     DMAnDSAH        equ	241	;# 
 17989   0000F2                     DMAnSCNT        equ	242	;# 
 17990   0000F2                     DMAnSCNTL       equ	242	;# 
 17991   0000F3                     DMAnSCNTH       equ	243	;# 
 17992   0000F4                     DMAnSPTR        equ	244	;# 
 17993   0000F4                     DMAnSPTRL       equ	244	;# 
 17994   0000F5                     DMAnSPTRH       equ	245	;# 
 17995   0000F6                     DMAnSPTRU       equ	246	;# 
 17996   0000F7                     DMAnSSZ         equ	247	;# 
 17997   0000F7                     DMAnSSZL        equ	247	;# 
 17998   0000F8                     DMAnSSZH        equ	248	;# 
 17999   0000F9                     DMAnSSA         equ	249	;# 
 18000   0000F9                     DMAnSSAL        equ	249	;# 
 18001   0000FA                     DMAnSSAH        equ	250	;# 
 18002   0000FB                     DMAnSSAU        equ	251	;# 
 18003   0000FC                     DMAnCON0        equ	252	;# 
 18004   0000FD                     DMAnCON1        equ	253	;# 
 18005   0000FE                     DMAnAIRQ        equ	254	;# 
 18006   0000FF                     DMAnSIRQ        equ	255	;# 
 18007   000100                     C1CONL          equ	256	;# 
 18008   000101                     C1CONH          equ	257	;# 
 18009   000102                     C1CONU          equ	258	;# 
 18010   000103                     C1CONT          equ	259	;# 
 18011   000104                     C1NBTCFGL       equ	260	;# 
 18012   000105                     C1NBTCFGH       equ	261	;# 
 18013   000106                     C1NBTCFGU       equ	262	;# 
 18014   000107                     C1NBTCFGT       equ	263	;# 
 18015   000108                     C1DBTCFGL       equ	264	;# 
 18016   000109                     C1DBTCFGH       equ	265	;# 
 18017   00010A                     C1DBTCFGU       equ	266	;# 
 18018   00010B                     C1DBTCFGT       equ	267	;# 
 18019   00010C                     C1TDCL          equ	268	;# 
 18020   00010D                     C1TDCH          equ	269	;# 
 18021   00010E                     C1TDCU          equ	270	;# 
 18022   000110                     C1TBC           equ	272	;# 
 18023   000110                     C1TBCL          equ	272	;# 
 18024   000111                     C1TBCH          equ	273	;# 
 18025   000112                     C1TBCU          equ	274	;# 
 18026   000113                     C1TBCT          equ	275	;# 
 18027   000114                     C1TSCONL        equ	276	;# 
 18028   000115                     C1TSCONH        equ	277	;# 
 18029   000116                     C1TSCONU        equ	278	;# 
 18030   000117                     C1TSCONT        equ	279	;# 
 18031   000118                     C1VECL          equ	280	;# 
 18032   000119                     C1VECH          equ	281	;# 
 18033   00011A                     C1VECU          equ	282	;# 
 18034   00011B                     C1VECT          equ	283	;# 
 18035   00011C                     C1INTL          equ	284	;# 
 18036   00011D                     C1INTH          equ	285	;# 
 18037   00011E                     C1INTU          equ	286	;# 
 18038   00011F                     C1INTT          equ	287	;# 
 18039   000120                     C1RXIF          equ	288	;# 
 18040   000120                     C1RXIFL         equ	288	;# 
 18041   000121                     C1RXIFH         equ	289	;# 
 18042   000122                     C1RXIFU         equ	290	;# 
 18043   000123                     C1RXIFT         equ	291	;# 
 18044   000124                     C1TXIF          equ	292	;# 
 18045   000124                     C1TXIFL         equ	292	;# 
 18046   000125                     C1TXIFH         equ	293	;# 
 18047   000126                     C1TXIFU         equ	294	;# 
 18048   000127                     C1TXIFT         equ	295	;# 
 18049   000128                     C1RXOVIF        equ	296	;# 
 18050   000128                     C1RXOVIFL       equ	296	;# 
 18051   000129                     C1RXOVIFH       equ	297	;# 
 18052   00012A                     C1RXOVIFU       equ	298	;# 
 18053   00012B                     C1RXOVIFT       equ	299	;# 
 18054   00012C                     C1TXATIF        equ	300	;# 
 18055   00012C                     C1TXATIFL       equ	300	;# 
 18056   00012D                     C1TXATIFH       equ	301	;# 
 18057   00012E                     C1TXATIFU       equ	302	;# 
 18058   00012F                     C1TXATIFT       equ	303	;# 
 18059   000130                     C1TXREQ         equ	304	;# 
 18060   000130                     C1TXREQL        equ	304	;# 
 18061   000131                     C1TXREQH        equ	305	;# 
 18062   000132                     C1TXREQU        equ	306	;# 
 18063   000133                     C1TXREQT        equ	307	;# 
 18064   000134                     C1TRECL         equ	308	;# 
 18065   000135                     C1TRECH         equ	309	;# 
 18066   000136                     C1TRECU         equ	310	;# 
 18067   000137                     C1TRECT         equ	311	;# 
 18068   000138                     C1BDIAG0L       equ	312	;# 
 18069   000139                     C1BDIAG0H       equ	313	;# 
 18070   00013C                     C1BDIAG1L       equ	316	;# 
 18071   00013D                     C1BDIAG1H       equ	317	;# 
 18072   00013E                     C1BDIAG1U       equ	318	;# 
 18073   00013F                     C1BDIAG1T       equ	319	;# 
 18074   000140                     C1TEFCONL       equ	320	;# 
 18075   000141                     C1TEFCONH       equ	321	;# 
 18076   000142                     C1TEFCONU       equ	322	;# 
 18077   000143                     C1TEFCONT       equ	323	;# 
 18078   000144                     C1TEFSTAL       equ	324	;# 
 18079   000145                     C1TEFSTAH       equ	325	;# 
 18080   000146                     C1TEFSTAU       equ	326	;# 
 18081   000147                     C1TEFSTAT       equ	327	;# 
 18082   000148                     C1TEFUA         equ	328	;# 
 18083   000148                     C1TEFUAL        equ	328	;# 
 18084   000149                     C1TEFUAH        equ	329	;# 
 18085   00014A                     C1TEFUAU        equ	330	;# 
 18086   00014B                     C1TEFUAT        equ	331	;# 
 18087   00014C                     C1FIFOBA        equ	332	;# 
 18088   00014C                     C1FIFOBAL       equ	332	;# 
 18089   00014D                     C1FIFOBAH       equ	333	;# 
 18090   00014E                     C1FIFOBAU       equ	334	;# 
 18091   00014F                     C1FIFOBAT       equ	335	;# 
 18092   000150                     C1TXQCONL       equ	336	;# 
 18093   000151                     C1TXQCONH       equ	337	;# 
 18094   000152                     C1TXQCONU       equ	338	;# 
 18095   000153                     C1TXQCONT       equ	339	;# 
 18096   000154                     C1TXQSTAL       equ	340	;# 
 18097   000155                     C1TXQSTAH       equ	341	;# 
 18098   000156                     C1TXQSTAU       equ	342	;# 
 18099   000157                     C1TXQSTAT       equ	343	;# 
 18100   000158                     C1TXQUA         equ	344	;# 
 18101   000158                     C1TXQUAL        equ	344	;# 
 18102   000159                     C1TXQUAH        equ	345	;# 
 18103   00015A                     C1TXQUAU        equ	346	;# 
 18104   00015B                     C1TXQUAT        equ	347	;# 
 18105   00015C                     C1FIFOCON1      equ	348	;# 
 18106   00015C                     C1FIFOCON1L     equ	348	;# 
 18107   00015D                     C1FIFOCON1H     equ	349	;# 
 18108   00015E                     C1FIFOCON1U     equ	350	;# 
 18109   00015F                     C1FIFOCON1T     equ	351	;# 
 18110   000160                     C1FIFOSTA1      equ	352	;# 
 18111   000160                     C1FIFOSTA1L     equ	352	;# 
 18112   000161                     C1FIFOSTA1H     equ	353	;# 
 18113   000162                     C1FIFOSTA1U     equ	354	;# 
 18114   000163                     C1FIFOSTA1T     equ	355	;# 
 18115   000164                     C1FIFOUA1       equ	356	;# 
 18116   000164                     C1FIFOUA1L      equ	356	;# 
 18117   000165                     C1FIFOUA1H      equ	357	;# 
 18118   000166                     C1FIFOUA1U      equ	358	;# 
 18119   000167                     C1FIFOUA1T      equ	359	;# 
 18120   000168                     C1FIFOCON2      equ	360	;# 
 18121   000168                     C1FIFOCON2L     equ	360	;# 
 18122   000169                     C1FIFOCON2H     equ	361	;# 
 18123   00016A                     C1FIFOCON2U     equ	362	;# 
 18124   00016B                     C1FIFOCON2T     equ	363	;# 
 18125   00016C                     C1FIFOSTA2      equ	364	;# 
 18126   00016C                     C1FIFOSTA2L     equ	364	;# 
 18127   00016D                     C1FIFOSTA2H     equ	365	;# 
 18128   00016E                     C1FIFOSTA2U     equ	366	;# 
 18129   00016F                     C1FIFOSTA2T     equ	367	;# 
 18130   000170                     C1FIFOUA2       equ	368	;# 
 18131   000170                     C1FIFOUA2L      equ	368	;# 
 18132   000171                     C1FIFOUA2H      equ	369	;# 
 18133   000172                     C1FIFOUA2U      equ	370	;# 
 18134   000173                     C1FIFOUA2T      equ	371	;# 
 18135   000174                     C1FIFOCON3      equ	372	;# 
 18136   000174                     C1FIFOCON3L     equ	372	;# 
 18137   000175                     C1FIFOCON3H     equ	373	;# 
 18138   000176                     C1FIFOCON3U     equ	374	;# 
 18139   000177                     C1FIFOCON3T     equ	375	;# 
 18140   000178                     C1FIFOSTA3      equ	376	;# 
 18141   000178                     C1FIFOSTA3L     equ	376	;# 
 18142   000179                     C1FIFOSTA3H     equ	377	;# 
 18143   00017A                     C1FIFOSTA3U     equ	378	;# 
 18144   00017B                     C1FIFOSTA3T     equ	379	;# 
 18145   00017C                     C1FIFOUA3       equ	380	;# 
 18146   00017C                     C1FIFOUA3L      equ	380	;# 
 18147   00017D                     C1FIFOUA3H      equ	381	;# 
 18148   00017E                     C1FIFOUA3U      equ	382	;# 
 18149   00017F                     C1FIFOUA3T      equ	383	;# 
 18150   000180                     C1FLTCON0L      equ	384	;# 
 18151   000181                     C1FLTCON0H      equ	385	;# 
 18152   000182                     C1FLTCON0U      equ	386	;# 
 18153   000183                     C1FLTCON0T      equ	387	;# 
 18154   000184                     C1FLTCON1L      equ	388	;# 
 18155   000185                     C1FLTCON1H      equ	389	;# 
 18156   000186                     C1FLTCON1U      equ	390	;# 
 18157   000187                     C1FLTCON1T      equ	391	;# 
 18158   000188                     C1FLTCON2L      equ	392	;# 
 18159   000189                     C1FLTCON2H      equ	393	;# 
 18160   00018A                     C1FLTCON2U      equ	394	;# 
 18161   00018B                     C1FLTCON2T      equ	395	;# 
 18162   00018C                     C1FLTOBJ0       equ	396	;# 
 18163   00018C                     C1FLTOBJ0L      equ	396	;# 
 18164   00018D                     C1FLTOBJ0H      equ	397	;# 
 18165   00018E                     C1FLTOBJ0U      equ	398	;# 
 18166   00018F                     C1FLTOBJ0T      equ	399	;# 
 18167   000190                     C1MASK0         equ	400	;# 
 18168   000190                     C1MASK0L        equ	400	;# 
 18169   000191                     C1MASK0H        equ	401	;# 
 18170   000192                     C1MASK0U        equ	402	;# 
 18171   000193                     C1MASK0T        equ	403	;# 
 18172   000194                     C1FLTOBJ1       equ	404	;# 
 18173   000194                     C1FLTOBJ1L      equ	404	;# 
 18174   000195                     C1FLTOBJ1H      equ	405	;# 
 18175   000196                     C1FLTOBJ1U      equ	406	;# 
 18176   000197                     C1FLTOBJ1T      equ	407	;# 
 18177   000198                     C1MASK1         equ	408	;# 
 18178   000198                     C1MASK1L        equ	408	;# 
 18179   000199                     C1MASK1H        equ	409	;# 
 18180   00019A                     C1MASK1U        equ	410	;# 
 18181   00019B                     C1MASK1T        equ	411	;# 
 18182   00019C                     C1FLTOBJ2       equ	412	;# 
 18183   00019C                     C1FLTOBJ2L      equ	412	;# 
 18184   00019D                     C1FLTOBJ2H      equ	413	;# 
 18185   00019E                     C1FLTOBJ2U      equ	414	;# 
 18186   00019F                     C1FLTOBJ2T      equ	415	;# 
 18187   0001A0                     C1MASK2         equ	416	;# 
 18188   0001A0                     C1MASK2L        equ	416	;# 
 18189   0001A1                     C1MASK2H        equ	417	;# 
 18190   0001A2                     C1MASK2U        equ	418	;# 
 18191   0001A3                     C1MASK2T        equ	419	;# 
 18192   0001A4                     C1FLTOBJ3       equ	420	;# 
 18193   0001A4                     C1FLTOBJ3L      equ	420	;# 
 18194   0001A5                     C1FLTOBJ3H      equ	421	;# 
 18195   0001A6                     C1FLTOBJ3U      equ	422	;# 
 18196   0001A7                     C1FLTOBJ3T      equ	423	;# 
 18197   0001A8                     C1MASK3         equ	424	;# 
 18198   0001A8                     C1MASK3L        equ	424	;# 
 18199   0001A9                     C1MASK3H        equ	425	;# 
 18200   0001AA                     C1MASK3U        equ	426	;# 
 18201   0001AB                     C1MASK3T        equ	427	;# 
 18202   0001AC                     C1FLTOBJ4       equ	428	;# 
 18203   0001AC                     C1FLTOBJ4L      equ	428	;# 
 18204   0001AD                     C1FLTOBJ4H      equ	429	;# 
 18205   0001AE                     C1FLTOBJ4U      equ	430	;# 
 18206   0001AF                     C1FLTOBJ4T      equ	431	;# 
 18207   0001B0                     C1MASK4         equ	432	;# 
 18208   0001B0                     C1MASK4L        equ	432	;# 
 18209   0001B1                     C1MASK4H        equ	433	;# 
 18210   0001B2                     C1MASK4U        equ	434	;# 
 18211   0001B3                     C1MASK4T        equ	435	;# 
 18212   0001B4                     C1FLTOBJ5       equ	436	;# 
 18213   0001B4                     C1FLTOBJ5L      equ	436	;# 
 18214   0001B5                     C1FLTOBJ5H      equ	437	;# 
 18215   0001B6                     C1FLTOBJ5U      equ	438	;# 
 18216   0001B7                     C1FLTOBJ5T      equ	439	;# 
 18217   0001B8                     C1MASK5         equ	440	;# 
 18218   0001B8                     C1MASK5L        equ	440	;# 
 18219   0001B9                     C1MASK5H        equ	441	;# 
 18220   0001BA                     C1MASK5U        equ	442	;# 
 18221   0001BB                     C1MASK5T        equ	443	;# 
 18222   0001BC                     C1FLTOBJ6       equ	444	;# 
 18223   0001BC                     C1FLTOBJ6L      equ	444	;# 
 18224   0001BD                     C1FLTOBJ6H      equ	445	;# 
 18225   0001BE                     C1FLTOBJ6U      equ	446	;# 
 18226   0001BF                     C1FLTOBJ6T      equ	447	;# 
 18227   0001C0                     C1MASK6         equ	448	;# 
 18228   0001C0                     C1MASK6L        equ	448	;# 
 18229   0001C1                     C1MASK6H        equ	449	;# 
 18230   0001C2                     C1MASK6U        equ	450	;# 
 18231   0001C3                     C1MASK6T        equ	451	;# 
 18232   0001C4                     C1FLTOBJ7       equ	452	;# 
 18233   0001C4                     C1FLTOBJ7L      equ	452	;# 
 18234   0001C5                     C1FLTOBJ7H      equ	453	;# 
 18235   0001C6                     C1FLTOBJ7U      equ	454	;# 
 18236   0001C7                     C1FLTOBJ7T      equ	455	;# 
 18237   0001C8                     C1MASK7         equ	456	;# 
 18238   0001C8                     C1MASK7L        equ	456	;# 
 18239   0001C9                     C1MASK7H        equ	457	;# 
 18240   0001CA                     C1MASK7U        equ	458	;# 
 18241   0001CB                     C1MASK7T        equ	459	;# 
 18242   0001CC                     C1FLTOBJ8       equ	460	;# 
 18243   0001CC                     C1FLTOBJ8L      equ	460	;# 
 18244   0001CD                     C1FLTOBJ8H      equ	461	;# 
 18245   0001CE                     C1FLTOBJ8U      equ	462	;# 
 18246   0001CF                     C1FLTOBJ8T      equ	463	;# 
 18247   0001D0                     C1MASK8         equ	464	;# 
 18248   0001D0                     C1MASK8L        equ	464	;# 
 18249   0001D1                     C1MASK8H        equ	465	;# 
 18250   0001D2                     C1MASK8U        equ	466	;# 
 18251   0001D3                     C1MASK8T        equ	467	;# 
 18252   0001D4                     C1FLTOBJ9       equ	468	;# 
 18253   0001D4                     C1FLTOBJ9L      equ	468	;# 
 18254   0001D5                     C1FLTOBJ9H      equ	469	;# 
 18255   0001D6                     C1FLTOBJ9U      equ	470	;# 
 18256   0001D7                     C1FLTOBJ9T      equ	471	;# 
 18257   0001D8                     C1MASK9         equ	472	;# 
 18258   0001D8                     C1MASK9L        equ	472	;# 
 18259   0001D9                     C1MASK9H        equ	473	;# 
 18260   0001DA                     C1MASK9U        equ	474	;# 
 18261   0001DB                     C1MASK9T        equ	475	;# 
 18262   0001DC                     C1FLTOBJ10      equ	476	;# 
 18263   0001DC                     C1FLTOBJ10L     equ	476	;# 
 18264   0001DD                     C1FLTOBJ10H     equ	477	;# 
 18265   0001DE                     C1FLTOBJ10U     equ	478	;# 
 18266   0001DF                     C1FLTOBJ10T     equ	479	;# 
 18267   0001E0                     C1MASK10        equ	480	;# 
 18268   0001E0                     C1MASK10L       equ	480	;# 
 18269   0001E1                     C1MASK10H       equ	481	;# 
 18270   0001E2                     C1MASK10U       equ	482	;# 
 18271   0001E3                     C1MASK10T       equ	483	;# 
 18272   0001E4                     C1FLTOBJ11      equ	484	;# 
 18273   0001E4                     C1FLTOBJ11L     equ	484	;# 
 18274   0001E5                     C1FLTOBJ11H     equ	485	;# 
 18275   0001E6                     C1FLTOBJ11U     equ	486	;# 
 18276   0001E7                     C1FLTOBJ11T     equ	487	;# 
 18277   0001E8                     C1MASK11        equ	488	;# 
 18278   0001E8                     C1MASK11L       equ	488	;# 
 18279   0001E9                     C1MASK11H       equ	489	;# 
 18280   0001EA                     C1MASK11U       equ	490	;# 
 18281   0001EB                     C1MASK11T       equ	491	;# 
 18282   000200                     PPSLOCK         equ	512	;# 
 18283   000201                     RA0PPS          equ	513	;# 
 18284   000202                     RA1PPS          equ	514	;# 
 18285   000203                     RA2PPS          equ	515	;# 
 18286   000204                     RA3PPS          equ	516	;# 
 18287   000205                     RA4PPS          equ	517	;# 
 18288   000206                     RA5PPS          equ	518	;# 
 18289   000207                     RA6PPS          equ	519	;# 
 18290   000208                     RA7PPS          equ	520	;# 
 18291   000209                     RB0PPS          equ	521	;# 
 18292   00020A                     RB1PPS          equ	522	;# 
 18293   00020B                     RB2PPS          equ	523	;# 
 18294   00020C                     RB3PPS          equ	524	;# 
 18295   00020D                     RB4PPS          equ	525	;# 
 18296   00020E                     RB5PPS          equ	526	;# 
 18297   00020F                     RB6PPS          equ	527	;# 
 18298   000210                     RB7PPS          equ	528	;# 
 18299   000211                     RC0PPS          equ	529	;# 
 18300   000212                     RC1PPS          equ	530	;# 
 18301   000213                     RC2PPS          equ	531	;# 
 18302   000214                     RC3PPS          equ	532	;# 
 18303   000215                     RC4PPS          equ	533	;# 
 18304   000216                     RC5PPS          equ	534	;# 
 18305   000217                     RC6PPS          equ	535	;# 
 18306   000218                     RC7PPS          equ	536	;# 
 18307   00023D                     CANRXPPS        equ	573	;# 
 18308   00023E                     INT0PPS         equ	574	;# 
 18309   00023F                     INT1PPS         equ	575	;# 
 18310   000240                     INT2PPS         equ	576	;# 
 18311   000241                     T0CKIPPS        equ	577	;# 
 18312   000242                     T1CKIPPS        equ	578	;# 
 18313   000243                     T1GPPS          equ	579	;# 
 18314   000244                     T3CKIPPS        equ	580	;# 
 18315   000245                     T3GPPS          equ	581	;# 
 18316   000246                     T5CKIPPS        equ	582	;# 
 18317   000247                     T5GPPS          equ	583	;# 
 18318   000248                     T2INPPS         equ	584	;# 
 18319   000249                     T4INPPS         equ	585	;# 
 18320   00024A                     T6INPPS         equ	586	;# 
 18321   00024B                     TUIN0PPS        equ	587	;# 
 18322   00024C                     TUIN1PPS        equ	588	;# 
 18323   00024F                     CCP1PPS         equ	591	;# 
 18324   000250                     CCP2PPS         equ	592	;# 
 18325   000251                     CCP3PPS         equ	593	;# 
 18326   000253                     PWM1ERSPPS      equ	595	;# 
 18327   000254                     PWM2ERSPPS      equ	596	;# 
 18328   000255                     PWM3ERSPPS      equ	597	;# 
 18329   000256                     PWM4ERSPPS      equ	598	;# 
 18330   000257                     PWMIN0PPS       equ	599	;# 
 18331   000258                     PWMIN1PPS       equ	600	;# 
 18332   000259                     SMT1WINPPS      equ	601	;# 
 18333   00025A                     SMT1SIGPPS      equ	602	;# 
 18334   00025B                     CWG1PPS         equ	603	;# 
 18335   00025B                     CWG1INPPS       equ	603	;# 
 18336   00025C                     CWG2PPS         equ	604	;# 
 18337   00025C                     CWG2INPPS       equ	604	;# 
 18338   00025D                     CWG3PPS         equ	605	;# 
 18339   00025D                     CWG3INPPS       equ	605	;# 
 18340   00025E                     MD1CARLPPS      equ	606	;# 
 18341   00025E                     MDCARLPPS       equ	606	;# 
 18342   00025F                     MD1CARHPPS      equ	607	;# 
 18343   00025F                     MDCARHPPS       equ	607	;# 
 18344   000260                     MD1SRCPPS       equ	608	;# 
 18345   000260                     MDSRCPPS        equ	608	;# 
 18346   000261                     CLCIN0PPS       equ	609	;# 
 18347   000262                     CLCIN1PPS       equ	610	;# 
 18348   000263                     CLCIN2PPS       equ	611	;# 
 18349   000264                     CLCIN3PPS       equ	612	;# 
 18350   000265                     CLCIN4PPS       equ	613	;# 
 18351   000266                     CLCIN5PPS       equ	614	;# 
 18352   000267                     CLCIN6PPS       equ	615	;# 
 18353   000268                     CLCIN7PPS       equ	616	;# 
 18354   000269                     ADACTPPS        equ	617	;# 
 18355   00026A                     SPI1SCKPPS      equ	618	;# 
 18356   00026B                     SPI1SDIPPS      equ	619	;# 
 18357   00026C                     SPI1SSPPS       equ	620	;# 
 18358   00026D                     SPI2SCKPPS      equ	621	;# 
 18359   00026E                     SPI2SDIPPS      equ	622	;# 
 18360   00026F                     SPI2SSPPS       equ	623	;# 
 18361   000270                     I2C1SDAPPS      equ	624	;# 
 18362   000271                     I2C1SCLPPS      equ	625	;# 
 18363   000272                     U1RXPPS         equ	626	;# 
 18364   000273                     U1CTSPPS        equ	627	;# 
 18365   000274                     U2RXPPS         equ	628	;# 
 18366   000275                     U2CTSPPS        equ	629	;# 
 18367   000276                     U3RXPPS         equ	630	;# 
 18368   000277                     U3CTSPPS        equ	631	;# 
 18369   000278                     U4RXPPS         equ	632	;# 
 18370   000279                     U4CTSPPS        equ	633	;# 
 18371   00027A                     U5RXPPS         equ	634	;# 
 18372   00027B                     U5CTSPPS        equ	635	;# 
 18373   000286                     RC4I2C          equ	646	;# 
 18374   000287                     RC3I2C          equ	647	;# 
 18375   000288                     RB2I2C          equ	648	;# 
 18376   000289                     RB1I2C          equ	649	;# 
 18377   00028A                     I2C1RXB         equ	650	;# 
 18378   00028B                     I2C1TXB         equ	651	;# 
 18379   00028C                     I2C1CNTL        equ	652	;# 
 18380   00028D                     I2C1CNTH        equ	653	;# 
 18381   00028E                     I2C1ADB0        equ	654	;# 
 18382   00028F                     I2C1ADB1        equ	655	;# 
 18383   000290                     I2C1ADR0        equ	656	;# 
 18384   000291                     I2C1ADR1        equ	657	;# 
 18385   000292                     I2C1ADR2        equ	658	;# 
 18386   000293                     I2C1ADR3        equ	659	;# 
 18387   000294                     I2C1CON0        equ	660	;# 
 18388   000295                     I2C1CON1        equ	661	;# 
 18389   000296                     I2C1CON2        equ	662	;# 
 18390   000297                     I2C1ERR         equ	663	;# 
 18391   000298                     I2C1STAT0       equ	664	;# 
 18392   000299                     I2C1STAT1       equ	665	;# 
 18393   00029A                     I2C1PIR         equ	666	;# 
 18394   00029B                     I2C1PIE         equ	667	;# 
 18395   00029C                     I2C1BTO         equ	668	;# 
 18396   00029D                     I2C1BAUD        equ	669	;# 
 18397   00029E                     I2C1CLK         equ	670	;# 
 18398   00029F                     I2C1BTOC        equ	671	;# 
 18399   0002A1                     U1RXB           equ	673	;# 
 18400   0002A1                     U1RXBL          equ	673	;# 
 18401   0002A2                     U1RXCHK         equ	674	;# 
 18402   0002A3                     U1TXB           equ	675	;# 
 18403   0002A3                     U1TXBL          equ	675	;# 
 18404   0002A4                     U1TXCHK         equ	676	;# 
 18405   0002A5                     U1P1            equ	677	;# 
 18406   0002A5                     U1P1L           equ	677	;# 
 18407   0002A6                     U1P1H           equ	678	;# 
 18408   0002A7                     U1P2            equ	679	;# 
 18409   0002A7                     U1P2L           equ	679	;# 
 18410   0002A8                     U1P2H           equ	680	;# 
 18411   0002A9                     U1P3            equ	681	;# 
 18412   0002A9                     U1P3L           equ	681	;# 
 18413   0002AA                     U1P3H           equ	682	;# 
 18414   0002AB                     U1CON0          equ	683	;# 
 18415   0002AC                     U1CON1          equ	684	;# 
 18416   0002AD                     U1CON2          equ	685	;# 
 18417   0002AE                     U1BRG           equ	686	;# 
 18418   0002AE                     U1BRGL          equ	686	;# 
 18419   0002AF                     U1BRGH          equ	687	;# 
 18420   0002B0                     U1FIFO          equ	688	;# 
 18421   0002B1                     U1UIR           equ	689	;# 
 18422   0002B2                     U1ERRIR         equ	690	;# 
 18423   0002B3                     U1ERRIE         equ	691	;# 
 18424   0002B4                     U2RXB           equ	692	;# 
 18425   0002B4                     U2RXBL          equ	692	;# 
 18426   0002B5                     U2RXCHK         equ	693	;# 
 18427   0002B6                     U2TXB           equ	694	;# 
 18428   0002B6                     U2TXBL          equ	694	;# 
 18429   0002B7                     U2TXCHK         equ	695	;# 
 18430   0002B8                     U2P1            equ	696	;# 
 18431   0002B8                     U2P1L           equ	696	;# 
 18432   0002B9                     U2P1H           equ	697	;# 
 18433   0002BA                     U2P2            equ	698	;# 
 18434   0002BA                     U2P2L           equ	698	;# 
 18435   0002BB                     U2P2H           equ	699	;# 
 18436   0002BC                     U2P3            equ	700	;# 
 18437   0002BC                     U2P3L           equ	700	;# 
 18438   0002BD                     U2P3H           equ	701	;# 
 18439   0002BE                     U2CON0          equ	702	;# 
 18440   0002BF                     U2CON1          equ	703	;# 
 18441   0002C0                     U2CON2          equ	704	;# 
 18442   0002C1                     U2BRG           equ	705	;# 
 18443   0002C1                     U2BRGL          equ	705	;# 
 18444   0002C2                     U2BRGH          equ	706	;# 
 18445   0002C3                     U2FIFO          equ	707	;# 
 18446   0002C4                     U2UIR           equ	708	;# 
 18447   0002C5                     U2ERRIR         equ	709	;# 
 18448   0002C6                     U2ERRIE         equ	710	;# 
 18449   0002C7                     U3RXB           equ	711	;# 
 18450   0002C7                     U3RXBL          equ	711	;# 
 18451   0002C9                     U3TXB           equ	713	;# 
 18452   0002C9                     U3TXBL          equ	713	;# 
 18453   0002CB                     U3P1            equ	715	;# 
 18454   0002CB                     U3P1L           equ	715	;# 
 18455   0002CD                     U3P2            equ	717	;# 
 18456   0002CD                     U3P2L           equ	717	;# 
 18457   0002CF                     U3P3            equ	719	;# 
 18458   0002CF                     U3P3L           equ	719	;# 
 18459   0002D1                     U3CON0          equ	721	;# 
 18460   0002D2                     U3CON1          equ	722	;# 
 18461   0002D3                     U3CON2          equ	723	;# 
 18462   0002D4                     U3BRG           equ	724	;# 
 18463   0002D4                     U3BRGL          equ	724	;# 
 18464   0002D5                     U3BRGH          equ	725	;# 
 18465   0002D6                     U3FIFO          equ	726	;# 
 18466   0002D7                     U3UIR           equ	727	;# 
 18467   0002D8                     U3ERRIR         equ	728	;# 
 18468   0002D9                     U3ERRIE         equ	729	;# 
 18469   0002DA                     U4RXB           equ	730	;# 
 18470   0002DA                     U4RXBL          equ	730	;# 
 18471   0002DC                     U4TXB           equ	732	;# 
 18472   0002DC                     U4TXBL          equ	732	;# 
 18473   0002DE                     U4P1            equ	734	;# 
 18474   0002DE                     U4P1L           equ	734	;# 
 18475   0002E0                     U4P2            equ	736	;# 
 18476   0002E0                     U4P2L           equ	736	;# 
 18477   0002E2                     U4P3            equ	738	;# 
 18478   0002E2                     U4P3L           equ	738	;# 
 18479   0002E4                     U4CON0          equ	740	;# 
 18480   0002E5                     U4CON1          equ	741	;# 
 18481   0002E6                     U4CON2          equ	742	;# 
 18482   0002E7                     U4BRG           equ	743	;# 
 18483   0002E7                     U4BRGL          equ	743	;# 
 18484   0002E8                     U4BRGH          equ	744	;# 
 18485   0002E9                     U4FIFO          equ	745	;# 
 18486   0002EA                     U4UIR           equ	746	;# 
 18487   0002EB                     U4ERRIR         equ	747	;# 
 18488   0002EC                     U4ERRIE         equ	748	;# 
 18489   0002ED                     U5RXB           equ	749	;# 
 18490   0002ED                     U5RXBL          equ	749	;# 
 18491   0002EF                     U5TXB           equ	751	;# 
 18492   0002EF                     U5TXBL          equ	751	;# 
 18493   0002F1                     U5P1            equ	753	;# 
 18494   0002F1                     U5P1L           equ	753	;# 
 18495   0002F3                     U5P2            equ	755	;# 
 18496   0002F3                     U5P2L           equ	755	;# 
 18497   0002F5                     U5P3            equ	757	;# 
 18498   0002F5                     U5P3L           equ	757	;# 
 18499   0002F7                     U5CON0          equ	759	;# 
 18500   0002F8                     U5CON1          equ	760	;# 
 18501   0002F9                     U5CON2          equ	761	;# 
 18502   0002FA                     U5BRG           equ	762	;# 
 18503   0002FA                     U5BRGL          equ	762	;# 
 18504   0002FB                     U5BRGH          equ	763	;# 
 18505   0002FC                     U5FIFO          equ	764	;# 
 18506   0002FD                     U5UIR           equ	765	;# 
 18507   0002FE                     U5ERRIR         equ	766	;# 
 18508   0002FF                     U5ERRIE         equ	767	;# 
 18509   000300                     SMT1TMR         equ	768	;# 
 18510   000300                     SMT1TMRL        equ	768	;# 
 18511   000301                     SMT1TMRH        equ	769	;# 
 18512   000302                     SMT1TMRU        equ	770	;# 
 18513   000303                     SMT1CPR         equ	771	;# 
 18514   000303                     SMT1CPRL        equ	771	;# 
 18515   000304                     SMT1CPRH        equ	772	;# 
 18516   000305                     SMT1CPRU        equ	773	;# 
 18517   000306                     SMT1CPW         equ	774	;# 
 18518   000306                     SMT1CPWL        equ	774	;# 
 18519   000307                     SMT1CPWH        equ	775	;# 
 18520   000308                     SMT1CPWU        equ	776	;# 
 18521   000309                     SMT1PR          equ	777	;# 
 18522   000309                     SMT1PRL         equ	777	;# 
 18523   00030A                     SMT1PRH         equ	778	;# 
 18524   00030B                     SMT1PRU         equ	779	;# 
 18525   00030C                     SMT1CON0        equ	780	;# 
 18526   00030D                     SMT1CON1        equ	781	;# 
 18527   00030E                     SMT1STAT        equ	782	;# 
 18528   00030F                     SMT1CLK         equ	783	;# 
 18529   000310                     SMT1SIG         equ	784	;# 
 18530   000311                     SMT1WIN         equ	785	;# 
 18531   000318                     TMR0L           equ	792	;# 
 18532   000318                     TMR0            equ	792	;# 
 18533   000319                     TMR0H           equ	793	;# 
 18534   000319                     PR0             equ	793	;# 
 18535   00031A                     T0CON0          equ	794	;# 
 18536   00031B                     T0CON1          equ	795	;# 
 18537   00031C                     TMR1            equ	796	;# 
 18538   00031C                     TMR1L           equ	796	;# 
 18539   00031D                     TMR1H           equ	797	;# 
 18540   00031E                     T1CON           equ	798	;# 
 18541   00031E                     TMR1CON         equ	798	;# 
 18542   00031F                     T1GCON          equ	799	;# 
 18543   00031F                     TMR1GCON        equ	799	;# 
 18544   000320                     T1GATE          equ	800	;# 
 18545   000320                     TMR1GATE        equ	800	;# 
 18546   000321                     T1CLK           equ	801	;# 
 18547   000321                     TMR1CLK         equ	801	;# 
 18548   000321                     PR1             equ	801	;# 
 18549   000322                     T2TMR           equ	802	;# 
 18550   000322                     TMR2            equ	802	;# 
 18551   000323                     T2PR            equ	803	;# 
 18552   000323                     PR2             equ	803	;# 
 18553   000324                     T2CON           equ	804	;# 
 18554   000325                     T2HLT           equ	805	;# 
 18555   000326                     T2CLKCON        equ	806	;# 
 18556   000326                     T2CLK           equ	806	;# 
 18557   000327                     T2RST           equ	807	;# 
 18558   000328                     TMR3            equ	808	;# 
 18559   000328                     TMR3L           equ	808	;# 
 18560   000329                     TMR3H           equ	809	;# 
 18561   00032A                     T3CON           equ	810	;# 
 18562   00032A                     TMR3CON         equ	810	;# 
 18563   00032B                     T3GCON          equ	811	;# 
 18564   00032B                     TMR3GCON        equ	811	;# 
 18565   00032C                     T3GATE          equ	812	;# 
 18566   00032C                     TMR3GATE        equ	812	;# 
 18567   00032D                     T3CLK           equ	813	;# 
 18568   00032D                     TMR3CLK         equ	813	;# 
 18569   00032D                     PR3             equ	813	;# 
 18570   00032E                     T4TMR           equ	814	;# 
 18571   00032E                     TMR4            equ	814	;# 
 18572   00032F                     T4PR            equ	815	;# 
 18573   00032F                     PR4             equ	815	;# 
 18574   000330                     T4CON           equ	816	;# 
 18575   000331                     T4HLT           equ	817	;# 
 18576   000332                     T4CLKCON        equ	818	;# 
 18577   000332                     T4CLK           equ	818	;# 
 18578   000333                     T4RST           equ	819	;# 
 18579   000334                     TMR5            equ	820	;# 
 18580   000334                     TMR5L           equ	820	;# 
 18581   000335                     TMR5H           equ	821	;# 
 18582   000336                     T5CON           equ	822	;# 
 18583   000336                     TMR5CON         equ	822	;# 
 18584   000337                     T5GCON          equ	823	;# 
 18585   000337                     TMR5GCON        equ	823	;# 
 18586   000338                     T5GATE          equ	824	;# 
 18587   000338                     TMR5GATE        equ	824	;# 
 18588   000339                     T5CLK           equ	825	;# 
 18589   000339                     TMR5CLK         equ	825	;# 
 18590   000339                     PR5             equ	825	;# 
 18591   00033A                     T6TMR           equ	826	;# 
 18592   00033A                     TMR6            equ	826	;# 
 18593   00033B                     T6PR            equ	827	;# 
 18594   00033B                     PR6             equ	827	;# 
 18595   00033C                     T6CON           equ	828	;# 
 18596   00033D                     T6HLT           equ	829	;# 
 18597   00033E                     T6CLKCON        equ	830	;# 
 18598   00033E                     T6CLK           equ	830	;# 
 18599   00033F                     T6RST           equ	831	;# 
 18600   000340                     CCPR1           equ	832	;# 
 18601   000340                     CCPR1L          equ	832	;# 
 18602   000341                     CCPR1H          equ	833	;# 
 18603   000342                     CCP1CON         equ	834	;# 
 18604   000343                     CCP1CAP         equ	835	;# 
 18605   000344                     CCPR2           equ	836	;# 
 18606   000344                     CCPR2L          equ	836	;# 
 18607   000345                     CCPR2H          equ	837	;# 
 18608   000346                     CCP2CON         equ	838	;# 
 18609   000347                     CCP2CAP         equ	839	;# 
 18610   000348                     CCPR3           equ	840	;# 
 18611   000348                     CCPR3L          equ	840	;# 
 18612   000349                     CCPR3H          equ	841	;# 
 18613   00034A                     CCP3CON         equ	842	;# 
 18614   00034B                     CCP3CAP         equ	843	;# 
 18615   00034C                     CCPTMRS0        equ	844	;# 
 18616   00034F                     CRCDATA         equ	847	;# 
 18617   00034F                     CRCDATAL        equ	847	;# 
 18618   000350                     CRCDATAH        equ	848	;# 
 18619   000351                     CRCDATAU        equ	849	;# 
 18620   000352                     CRCDATAT        equ	850	;# 
 18621   000353                     CRCOUT          equ	851	;# 
 18622   000353                     CRCSHFT         equ	851	;# 
 18623   000353                     CRCXOR          equ	851	;# 
 18624   000353                     CRCOUTL         equ	851	;# 
 18625   000353                     CRCSHFTL        equ	851	;# 
 18626   000353                     CRCSHIFTL       equ	851	;# 
 18627   000353                     CRCXORL         equ	851	;# 
 18628   000354                     CRCOUTH         equ	852	;# 
 18629   000354                     CRCSHFTH        equ	852	;# 
 18630   000354                     CRCSHIFTH       equ	852	;# 
 18631   000354                     CRCXORH         equ	852	;# 
 18632   000355                     CRCOUTU         equ	853	;# 
 18633   000355                     CRCSHFTU        equ	853	;# 
 18634   000355                     CRCSHIFTU       equ	853	;# 
 18635   000355                     CRCXORU         equ	853	;# 
 18636   000356                     CRCOUTT         equ	854	;# 
 18637   000356                     CRCSHFTT        equ	854	;# 
 18638   000356                     CRCSHIFTT       equ	854	;# 
 18639   000356                     CRCXORT         equ	854	;# 
 18640   000357                     CRCCON0         equ	855	;# 
 18641   000358                     CRCCON1         equ	856	;# 
 18642   000359                     CRCCON2         equ	857	;# 
 18643   00035A                     SCANLADR        equ	858	;# 
 18644   00035A                     SCANLADRL       equ	858	;# 
 18645   00035B                     SCANLADRH       equ	859	;# 
 18646   00035C                     SCANLADRU       equ	860	;# 
 18647   00035D                     SCANHADR        equ	861	;# 
 18648   00035D                     SCANHADRL       equ	861	;# 
 18649   00035E                     SCANHADRH       equ	862	;# 
 18650   00035F                     SCANHADRU       equ	863	;# 
 18651   000360                     SCANCON0        equ	864	;# 
 18652   000361                     SCANTRIG        equ	865	;# 
 18653   000362                     IPR0            equ	866	;# 
 18654   000363                     IPR1            equ	867	;# 
 18655   000364                     IPR2            equ	868	;# 
 18656   000365                     IPR3            equ	869	;# 
 18657   000366                     IPR4            equ	870	;# 
 18658   000367                     IPR5            equ	871	;# 
 18659   000368                     IPR6            equ	872	;# 
 18660   000369                     IPR7            equ	873	;# 
 18661   00036A                     IPR8            equ	874	;# 
 18662   00036B                     IPR9            equ	875	;# 
 18663   00036C                     IPR10           equ	876	;# 
 18664   00036D                     IPR11           equ	877	;# 
 18665   00036E                     IPR12           equ	878	;# 
 18666   00036F                     IPR13           equ	879	;# 
 18667   000370                     IPR14           equ	880	;# 
 18668   000371                     IPR15           equ	881	;# 
 18669   000373                     STATUS_CSHAD    equ	883	;# 
 18670   000374                     WREG_CSHAD      equ	884	;# 
 18671   000375                     BSR_CSHAD       equ	885	;# 
 18672   000376                     SHADCON         equ	886	;# 
 18673   000377                     STATUS_SHAD     equ	887	;# 
 18674   000378                     WREG_SHAD       equ	888	;# 
 18675   000379                     BSR_SHAD        equ	889	;# 
 18676   00037A                     PCLATH_SHAD     equ	890	;# 
 18677   00037B                     PCLATU_SHAD     equ	891	;# 
 18678   00037C                     FSR0SH          equ	892	;# 
 18679   00037C                     FSR0L_SHAD      equ	892	;# 
 18680   00037D                     FSR0H_SHAD      equ	893	;# 
 18681   00037E                     FSR1SH          equ	894	;# 
 18682   00037E                     FSR1L_SHAD      equ	894	;# 
 18683   00037F                     FSR1H_SHAD      equ	895	;# 
 18684   000380                     FSR2SH          equ	896	;# 
 18685   000380                     FSR2L_SHAD      equ	896	;# 
 18686   000381                     FSR2H_SHAD      equ	897	;# 
 18687   000382                     PRODSH          equ	898	;# 
 18688   000382                     PRODL_SHAD      equ	898	;# 
 18689   000383                     PRODH_SHAD      equ	899	;# 
 18690   000387                     TU16ACON0       equ	903	;# 
 18691   000388                     TU16ACON1       equ	904	;# 
 18692   000389                     TU16AHLT        equ	905	;# 
 18693   00038A                     TU16APS         equ	906	;# 
 18694   00038B                     TU16ATMR        equ	907	;# 
 18695   00038B                     TU16ACR         equ	907	;# 
 18696   00038B                     TU16ATMRL       equ	907	;# 
 18697   00038B                     TU16ACRL        equ	907	;# 
 18698   00038C                     TU16ATMRH       equ	908	;# 
 18699   00038C                     TU16ACRH        equ	908	;# 
 18700   00038D                     TU16APR         equ	909	;# 
 18701   00038D                     TU16APRL        equ	909	;# 
 18702   00038E                     TU16APRH        equ	910	;# 
 18703   00038F                     TU16ACLK        equ	911	;# 
 18704   000390                     TU16AERS        equ	912	;# 
 18705   000393                     TU16BCON0       equ	915	;# 
 18706   000394                     TU16BCON1       equ	916	;# 
 18707   000395                     TU16BHLT        equ	917	;# 
 18708   000396                     TU16BPS         equ	918	;# 
 18709   000397                     TU16BTMR        equ	919	;# 
 18710   000397                     TU16BCR         equ	919	;# 
 18711   000397                     TU16BTMRL       equ	919	;# 
 18712   000397                     TU16BCRL        equ	919	;# 
 18713   000398                     TU16BTMRH       equ	920	;# 
 18714   000398                     TU16BCRH        equ	920	;# 
 18715   000399                     TU16BPR         equ	921	;# 
 18716   000399                     TU16BPRL        equ	921	;# 
 18717   00039A                     TU16BPRH        equ	922	;# 
 18718   00039B                     TU16BCLK        equ	923	;# 
 18719   00039C                     TU16BERS        equ	924	;# 
 18720   0003BB                     TUCHAIN         equ	955	;# 
 18721   0003BC                     CWG1CLK         equ	956	;# 
 18722   0003BC                     CWG1CLKCON      equ	956	;# 
 18723   0003BD                     CWG1ISM         equ	957	;# 
 18724   0003BE                     CWG1DBR         equ	958	;# 
 18725   0003BF                     CWG1DBF         equ	959	;# 
 18726   0003C0                     CWG1CON0        equ	960	;# 
 18727   0003C1                     CWG1CON1        equ	961	;# 
 18728   0003C2                     CWG1AS0         equ	962	;# 
 18729   0003C3                     CWG1AS1         equ	963	;# 
 18730   0003C4                     CWG1STR         equ	964	;# 
 18731   0003C5                     CWG2CLK         equ	965	;# 
 18732   0003C5                     CWG2CLKCON      equ	965	;# 
 18733   0003C6                     CWG2ISM         equ	966	;# 
 18734   0003C7                     CWG2DBR         equ	967	;# 
 18735   0003C8                     CWG2DBF         equ	968	;# 
 18736   0003C9                     CWG2CON0        equ	969	;# 
 18737   0003CA                     CWG2CON1        equ	970	;# 
 18738   0003CB                     CWG2AS0         equ	971	;# 
 18739   0003CC                     CWG2AS1         equ	972	;# 
 18740   0003CD                     CWG2STR         equ	973	;# 
 18741   0003CE                     CWG3CLK         equ	974	;# 
 18742   0003CE                     CWG3CLKCON      equ	974	;# 
 18743   0003CF                     CWG3ISM         equ	975	;# 
 18744   0003D0                     CWG3DBR         equ	976	;# 
 18745   0003D1                     CWG3DBF         equ	977	;# 
 18746   0003D2                     CWG3CON0        equ	978	;# 
 18747   0003D3                     CWG3CON1        equ	979	;# 
 18748   0003D4                     CWG3AS0         equ	980	;# 
 18749   0003D5                     CWG3AS1         equ	981	;# 
 18750   0003D6                     CWG3STR         equ	982	;# 
 18751   0003D7                     FVRCON          equ	983	;# 
 18752   0003D8                     ADCPCON         equ	984	;# 
 18753   0003D8                     ADCP            equ	984	;# 
 18754   0003D9                     ADLTH           equ	985	;# 
 18755   0003D9                     ADLTHL          equ	985	;# 
 18756   0003DA                     ADLTHH          equ	986	;# 
 18757   0003DB                     ADUTH           equ	987	;# 
 18758   0003DB                     ADUTHL          equ	987	;# 
 18759   0003DC                     ADUTHH          equ	988	;# 
 18760   0003DD                     ADERR           equ	989	;# 
 18761   0003DD                     ADERRL          equ	989	;# 
 18762   0003DE                     ADERRH          equ	990	;# 
 18763   0003DF                     ADSTPT          equ	991	;# 
 18764   0003DF                     ADSTPTL         equ	991	;# 
 18765   0003E0                     ADSTPTH         equ	992	;# 
 18766   0003E1                     ADFLTR          equ	993	;# 
 18767   0003E1                     ADFLTRL         equ	993	;# 
 18768   0003E2                     ADFLTRH         equ	994	;# 
 18769   0003E3                     ADACC           equ	995	;# 
 18770   0003E3                     ADACCL          equ	995	;# 
 18771   0003E4                     ADACCH          equ	996	;# 
 18772   0003E5                     ADACCU          equ	997	;# 
 18773   0003E6                     ADCNT           equ	998	;# 
 18774   0003E7                     ADRPT           equ	999	;# 
 18775   0003E8                     ADPREV          equ	1000	;# 
 18776   0003E8                     ADPREVL         equ	1000	;# 
 18777   0003E9                     ADPREVH         equ	1001	;# 
 18778   0003EA                     ADRES           equ	1002	;# 
 18779   0003EA                     ADRESL          equ	1002	;# 
 18780   0003EB                     ADRESH          equ	1003	;# 
 18781   0003EC                     ADPCH           equ	1004	;# 
 18782   0003EE                     ADACQ           equ	1006	;# 
 18783   0003EE                     ADACQL          equ	1006	;# 
 18784   0003EF                     ADACQH          equ	1007	;# 
 18785   0003F0                     ADCAP           equ	1008	;# 
 18786   0003F1                     ADPRE           equ	1009	;# 
 18787   0003F1                     ADPREL          equ	1009	;# 
 18788   0003F2                     ADPREH          equ	1010	;# 
 18789   0003F3                     ADCON0          equ	1011	;# 
 18790   0003F4                     ADCON1          equ	1012	;# 
 18791   0003F5                     ADCON2          equ	1013	;# 
 18792   0003F6                     ADCON3          equ	1014	;# 
 18793   0003F7                     ADSTAT          equ	1015	;# 
 18794   0003F8                     ADREF           equ	1016	;# 
 18795   0003F9                     ADACT           equ	1017	;# 
 18796   0003FA                     ADCLK           equ	1018	;# 
 18797   0003FB                     ADCTX           equ	1019	;# 
 18798   0003FC                     ADCSEL1         equ	1020	;# 
 18799   0003FD                     ADCSEL2         equ	1021	;# 
 18800   0003FE                     ADCSEL3         equ	1022	;# 
 18801   0003FF                     ADCSEL4         equ	1023	;# 
 18802   000400                     ANSELA          equ	1024	;# 
 18803   000401                     WPUA            equ	1025	;# 
 18804   000402                     ODCONA          equ	1026	;# 
 18805   000403                     SLRCONA         equ	1027	;# 
 18806   000404                     INLVLA          equ	1028	;# 
 18807   000405                     IOCAP           equ	1029	;# 
 18808   000406                     IOCAN           equ	1030	;# 
 18809   000407                     IOCAF           equ	1031	;# 
 18810   000408                     ANSELB          equ	1032	;# 
 18811   000409                     WPUB            equ	1033	;# 
 18812   00040A                     ODCONB          equ	1034	;# 
 18813   00040B                     SLRCONB         equ	1035	;# 
 18814   00040C                     INLVLB          equ	1036	;# 
 18815   00040D                     IOCBP           equ	1037	;# 
 18816   00040E                     IOCBN           equ	1038	;# 
 18817   00040F                     IOCBF           equ	1039	;# 
 18818   000410                     ANSELC          equ	1040	;# 
 18819   000411                     WPUC            equ	1041	;# 
 18820   000412                     ODCONC          equ	1042	;# 
 18821   000413                     SLRCONC         equ	1043	;# 
 18822   000414                     INLVLC          equ	1044	;# 
 18823   000415                     IOCCP           equ	1045	;# 
 18824   000416                     IOCCN           equ	1046	;# 
 18825   000417                     IOCCF           equ	1047	;# 
 18826   000421                     WPUE            equ	1057	;# 
 18827   000424                     INLVLE          equ	1060	;# 
 18828   000425                     IOCEP           equ	1061	;# 
 18829   000426                     IOCEN           equ	1062	;# 
 18830   000427                     IOCEF           equ	1063	;# 
 18831   000440                     NCO1ACC         equ	1088	;# 
 18832   000440                     NCO1ACCL        equ	1088	;# 
 18833   000441                     NCO1ACCH        equ	1089	;# 
 18834   000442                     NCO1ACCU        equ	1090	;# 
 18835   000443                     NCO1INC         equ	1091	;# 
 18836   000443                     NCO1INCL        equ	1091	;# 
 18837   000444                     NCO1INCH        equ	1092	;# 
 18838   000445                     NCO1INCU        equ	1093	;# 
 18839   000446                     NCO1CON         equ	1094	;# 
 18840   000447                     NCO1CLK         equ	1095	;# 
 18841   000448                     NCO2ACC         equ	1096	;# 
 18842   000448                     NCO2ACCL        equ	1096	;# 
 18843   000449                     NCO2ACCH        equ	1097	;# 
 18844   00044A                     NCO2ACCU        equ	1098	;# 
 18845   00044B                     NCO2INC         equ	1099	;# 
 18846   00044B                     NCO2INCL        equ	1099	;# 
 18847   00044C                     NCO2INCH        equ	1100	;# 
 18848   00044D                     NCO2INCU        equ	1101	;# 
 18849   00044E                     NCO2CON         equ	1102	;# 
 18850   00044F                     NCO2CLK         equ	1103	;# 
 18851   000450                     NCO3ACC         equ	1104	;# 
 18852   000450                     NCO3ACCL        equ	1104	;# 
 18853   000451                     NCO3ACCH        equ	1105	;# 
 18854   000452                     NCO3ACCU        equ	1106	;# 
 18855   000453                     NCO3INC         equ	1107	;# 
 18856   000453                     NCO3INCL        equ	1107	;# 
 18857   000454                     NCO3INCH        equ	1108	;# 
 18858   000455                     NCO3INCU        equ	1109	;# 
 18859   000456                     NCO3CON         equ	1110	;# 
 18860   000457                     NCO3CLK         equ	1111	;# 
 18861   000458                     FSCMCON         equ	1112	;# 
 18862   000459                     IVTLOCK         equ	1113	;# 
 18863   00045A                     IVTAD           equ	1114	;# 
 18864   00045A                     IVTADL          equ	1114	;# 
 18865   00045B                     IVTADH          equ	1115	;# 
 18866   00045C                     IVTADU          equ	1116	;# 
 18867   00045D                     IVTBASE         equ	1117	;# 
 18868   00045D                     IVTBASEL        equ	1117	;# 
 18869   00045E                     IVTBASEH        equ	1118	;# 
 18870   00045F                     IVTBASEU        equ	1119	;# 
 18871   000460                     PWM1ERS         equ	1120	;# 
 18872   000461                     PWM1CLK         equ	1121	;# 
 18873   000462                     PWM1LDS         equ	1122	;# 
 18874   000463                     PWM1PR          equ	1123	;# 
 18875   000463                     PWM1PRL         equ	1123	;# 
 18876   000464                     PWM1PRH         equ	1124	;# 
 18877   000465                     PWM1CPRE        equ	1125	;# 
 18878   000466                     PWM1PIPOS       equ	1126	;# 
 18879   000467                     PWM1GIR         equ	1127	;# 
 18880   000468                     PWM1GIE         equ	1128	;# 
 18881   000469                     PWM1CON         equ	1129	;# 
 18882   00046A                     PWM1S1CFG       equ	1130	;# 
 18883   00046B                     PWM1S1P1        equ	1131	;# 
 18884   00046B                     PWM1S1P1L       equ	1131	;# 
 18885   00046C                     PWM1S1P1H       equ	1132	;# 
 18886   00046D                     PWM1S1P2        equ	1133	;# 
 18887   00046D                     PWM1S1P2L       equ	1133	;# 
 18888   00046E                     PWM1S1P2H       equ	1134	;# 
 18889   00046F                     PWM2ERS         equ	1135	;# 
 18890   000470                     PWM2CLK         equ	1136	;# 
 18891   000471                     PWM2LDS         equ	1137	;# 
 18892   000472                     PWM2PR          equ	1138	;# 
 18893   000472                     PWM2PRL         equ	1138	;# 
 18894   000473                     PWM2PRH         equ	1139	;# 
 18895   000474                     PWM2CPRE        equ	1140	;# 
 18896   000475                     PWM2PIPOS       equ	1141	;# 
 18897   000476                     PWM2GIR         equ	1142	;# 
 18898   000477                     PWM2GIE         equ	1143	;# 
 18899   000478                     PWM2CON         equ	1144	;# 
 18900   000479                     PWM2S1CFG       equ	1145	;# 
 18901   00047A                     PWM2S1P1        equ	1146	;# 
 18902   00047A                     PWM2S1P1L       equ	1146	;# 
 18903   00047B                     PWM2S1P1H       equ	1147	;# 
 18904   00047C                     PWM2S1P2        equ	1148	;# 
 18905   00047C                     PWM2S1P2L       equ	1148	;# 
 18906   00047D                     PWM2S1P2H       equ	1149	;# 
 18907   00047E                     PWM3ERS         equ	1150	;# 
 18908   00047F                     PWM3CLK         equ	1151	;# 
 18909   000480                     PWM3LDS         equ	1152	;# 
 18910   000481                     PWM3PR          equ	1153	;# 
 18911   000481                     PWM3PRL         equ	1153	;# 
 18912   000482                     PWM3PRH         equ	1154	;# 
 18913   000483                     PWM3CPRE        equ	1155	;# 
 18914   000484                     PWM3PIPOS       equ	1156	;# 
 18915   000485                     PWM3GIR         equ	1157	;# 
 18916   000486                     PWM3GIE         equ	1158	;# 
 18917   000487                     PWM3CON         equ	1159	;# 
 18918   000488                     PWM3S1CFG       equ	1160	;# 
 18919   000489                     PWM3S1P1        equ	1161	;# 
 18920   000489                     PWM3S1P1L       equ	1161	;# 
 18921   00048A                     PWM3S1P1H       equ	1162	;# 
 18922   00048B                     PWM3S1P2        equ	1163	;# 
 18923   00048B                     PWM3S1P2L       equ	1163	;# 
 18924   00048C                     PWM3S1P2H       equ	1164	;# 
 18925   00048D                     PWM4ERS         equ	1165	;# 
 18926   00048E                     PWM4CLK         equ	1166	;# 
 18927   00048F                     PWM4LDS         equ	1167	;# 
 18928   000490                     PWM4PR          equ	1168	;# 
 18929   000490                     PWM4PRL         equ	1168	;# 
 18930   000491                     PWM4PRH         equ	1169	;# 
 18931   000492                     PWM4CPRE        equ	1170	;# 
 18932   000493                     PWM4PIPOS       equ	1171	;# 
 18933   000494                     PWM4GIR         equ	1172	;# 
 18934   000495                     PWM4GIE         equ	1173	;# 
 18935   000496                     PWM4CON         equ	1174	;# 
 18936   000497                     PWM4S1CFG       equ	1175	;# 
 18937   000498                     PWM4S1P1        equ	1176	;# 
 18938   000498                     PWM4S1P1L       equ	1176	;# 
 18939   000499                     PWM4S1P1H       equ	1177	;# 
 18940   00049A                     PWM4S1P2        equ	1178	;# 
 18941   00049A                     PWM4S1P2L       equ	1178	;# 
 18942   00049B                     PWM4S1P2H       equ	1179	;# 
 18943   00049C                     PWMLOAD         equ	1180	;# 
 18944   00049D                     PWMEN           equ	1181	;# 
 18945   00049E                     PIE0            equ	1182	;# 
 18946   00049F                     PIE1            equ	1183	;# 
 18947   0004A0                     PIE2            equ	1184	;# 
 18948   0004A1                     PIE3            equ	1185	;# 
 18949   0004A2                     PIE4            equ	1186	;# 
 18950   0004A3                     PIE5            equ	1187	;# 
 18951   0004A4                     PIE6            equ	1188	;# 
 18952   0004A5                     PIE7            equ	1189	;# 
 18953   0004A6                     PIE8            equ	1190	;# 
 18954   0004A7                     PIE9            equ	1191	;# 
 18955   0004A8                     PIE10           equ	1192	;# 
 18956   0004A9                     PIE11           equ	1193	;# 
 18957   0004AA                     PIE12           equ	1194	;# 
 18958   0004AB                     PIE13           equ	1195	;# 
 18959   0004AC                     PIE14           equ	1196	;# 
 18960   0004AD                     PIE15           equ	1197	;# 
 18961   0004AE                     PIR0            equ	1198	;# 
 18962   0004AF                     PIR1            equ	1199	;# 
 18963   0004B0                     PIR2            equ	1200	;# 
 18964   0004B1                     PIR3            equ	1201	;# 
 18965   0004B2                     PIR4            equ	1202	;# 
 18966   0004B3                     PIR5            equ	1203	;# 
 18967   0004B4                     PIR6            equ	1204	;# 
 18968   0004B5                     PIR7            equ	1205	;# 
 18969   0004B6                     PIR8            equ	1206	;# 
 18970   0004B7                     PIR9            equ	1207	;# 
 18971   0004B8                     PIR10           equ	1208	;# 
 18972   0004B9                     PIR11           equ	1209	;# 
 18973   0004BA                     PIR12           equ	1210	;# 
 18974   0004BB                     PIR13           equ	1211	;# 
 18975   0004BC                     PIR14           equ	1212	;# 
 18976   0004BD                     PIR15           equ	1213	;# 
 18977   0004BE                     LATA            equ	1214	;# 
 18978   0004BF                     LATB            equ	1215	;# 
 18979   0004C0                     LATC            equ	1216	;# 
 18980   0004C6                     TRISA           equ	1222	;# 
 18981   0004C7                     TRISB           equ	1223	;# 
 18982   0004C8                     TRISC           equ	1224	;# 
 18983   0004CA                     TRISE           equ	1226	;# 
 18984   0004CE                     PORTA           equ	1230	;# 
 18985   0004CF                     PORTB           equ	1231	;# 
 18986   0004D0                     PORTC           equ	1232	;# 
 18987   0004D2                     PORTE           equ	1234	;# 
 18988   0004D6                     INTCON0         equ	1238	;# 
 18989   0004D7                     INTCON1         equ	1239	;# 
 18990   0004D8                     STATUS          equ	1240	;# 
 18991   0004D9                     FSR2            equ	1241	;# 
 18992   0004D9                     FSR2L           equ	1241	;# 
 18993   0004DA                     FSR2H           equ	1242	;# 
 18994   0004DB                     PLUSW2          equ	1243	;# 
 18995   0004DC                     PREINC2         equ	1244	;# 
 18996   0004DD                     POSTDEC2        equ	1245	;# 
 18997   0004DE                     POSTINC2        equ	1246	;# 
 18998   0004DF                     INDF2           equ	1247	;# 
 18999   0004E0                     BSR             equ	1248	;# 
 19000   0004E1                     FSR1            equ	1249	;# 
 19001   0004E1                     FSR1L           equ	1249	;# 
 19002   0004E2                     FSR1H           equ	1250	;# 
 19003   0004E3                     PLUSW1          equ	1251	;# 
 19004   0004E4                     PREINC1         equ	1252	;# 
 19005   0004E5                     POSTDEC1        equ	1253	;# 
 19006   0004E6                     POSTINC1        equ	1254	;# 
 19007   0004E7                     INDF1           equ	1255	;# 
 19008   0004E8                     WREG            equ	1256	;# 
 19009   0004E9                     FSR0            equ	1257	;# 
 19010   0004E9                     FSR0L           equ	1257	;# 
 19011   0004EA                     FSR0H           equ	1258	;# 
 19012   0004EB                     PLUSW0          equ	1259	;# 
 19013   0004EC                     PREINC0         equ	1260	;# 
 19014   0004ED                     POSTDEC0        equ	1261	;# 
 19015   0004EE                     POSTINC0        equ	1262	;# 
 19016   0004EF                     INDF0           equ	1263	;# 
 19017   0004F0                     PCON0           equ	1264	;# 
 19018   0004F1                     PCON1           equ	1265	;# 
 19019   0004F2                     CPUDOZE         equ	1266	;# 
 19020   0004F3                     PROD            equ	1267	;# 
 19021   0004F3                     PRODL           equ	1267	;# 
 19022   0004F4                     PRODH           equ	1268	;# 
 19023   0004F5                     TABLAT          equ	1269	;# 
 19024   0004F6                     TBLPTR          equ	1270	;# 
 19025   0004F6                     TBLPTRL         equ	1270	;# 
 19026   0004F7                     TBLPTRH         equ	1271	;# 
 19027   0004F8                     TBLPTRU         equ	1272	;# 
 19028   0004F9                     PCLAT           equ	1273	;# 
 19029   0004F9                     PCL             equ	1273	;# 
 19030   0004FA                     PCLATH          equ	1274	;# 
 19031   0004FB                     PCLATU          equ	1275	;# 
 19032   0004FC                     STKPTR          equ	1276	;# 
 19033   0004FD                     TOS             equ	1277	;# 
 19034   0004FD                     TOSL            equ	1277	;# 
 19035   0004FE                     TOSH            equ	1278	;# 
 19036   0004FF                     TOSU            equ	1279	;# 
 19037   000038                     BOOTREG         equ	56	;# 
 19038   000039                     CLKRCON         equ	57	;# 
 19039   00003A                     CLKRCLK         equ	58	;# 
 19040   000040                     NVMCON0         equ	64	;# 
 19041   000041                     NVMCON1         equ	65	;# 
 19042   000042                     NVMLOCK         equ	66	;# 
 19043   000043                     NVMADR          equ	67	;# 
 19044   000043                     NVMADRL         equ	67	;# 
 19045   000044                     NVMADRH         equ	68	;# 
 19046   000045                     NVMADRU         equ	69	;# 
 19047   000046                     NVMDAT          equ	70	;# 
 19048   000046                     NVMDATL         equ	70	;# 
 19049   000047                     NVMDATH         equ	71	;# 
 19050   000048                     VREGCON         equ	72	;# 
 19051   000049                     BORCON          equ	73	;# 
 19052   00004A                     HLVDCON0        equ	74	;# 
 19053   00004B                     HLVDCON1        equ	75	;# 
 19054   00004C                     ZCDCON          equ	76	;# 
 19055   000060                     PMD0            equ	96	;# 
 19056   000061                     PMD1            equ	97	;# 
 19057   000062                     PMD2            equ	98	;# 
 19058   000063                     PMD3            equ	99	;# 
 19059   000064                     PMD4            equ	100	;# 
 19060   000065                     PMD5            equ	101	;# 
 19061   000066                     PMD6            equ	102	;# 
 19062   000067                     PMD7            equ	103	;# 
 19063   000068                     PMD8            equ	104	;# 
 19064   00006A                     MD1CON0         equ	106	;# 
 19065   00006B                     MD1CON1         equ	107	;# 
 19066   00006C                     MD1SRC          equ	108	;# 
 19067   00006D                     MD1CARL         equ	109	;# 
 19068   00006E                     MD1CARH         equ	110	;# 
 19069   00006F                     CMOUT           equ	111	;# 
 19070   000070                     CM1CON0         equ	112	;# 
 19071   000071                     CM1CON1         equ	113	;# 
 19072   000072                     CM1NCH          equ	114	;# 
 19073   000073                     CM1PCH          equ	115	;# 
 19074   000074                     CM2CON0         equ	116	;# 
 19075   000075                     CM2CON1         equ	117	;# 
 19076   000076                     CM2NCH          equ	118	;# 
 19077   000077                     CM2PCH          equ	119	;# 
 19078   000078                     WDTCON0         equ	120	;# 
 19079   000079                     WDTCON1         equ	121	;# 
 19080   00007A                     WDTPSL          equ	122	;# 
 19081   00007B                     WDTPSH          equ	123	;# 
 19082   00007C                     WDTTMR          equ	124	;# 
 19083   00007D                     DAC1DAT         equ	125	;# 
 19084   00007D                     DAC1DATL        equ	125	;# 
 19085   00007F                     DAC1CON         equ	127	;# 
 19086   000080                     SPI1RXB         equ	128	;# 
 19087   000081                     SPI1TXB         equ	129	;# 
 19088   000082                     SPI1TCNT        equ	130	;# 
 19089   000082                     SPI1TCNTL       equ	130	;# 
 19090   000083                     SPI1TCNTH       equ	131	;# 
 19091   000084                     SPI1CON0        equ	132	;# 
 19092   000085                     SPI1CON1        equ	133	;# 
 19093   000086                     SPI1CON2        equ	134	;# 
 19094   000087                     SPI1STATUS      equ	135	;# 
 19095   000088                     SPI1TWIDTH      equ	136	;# 
 19096   000089                     SPI1BAUD        equ	137	;# 
 19097   00008A                     SPI1INTF        equ	138	;# 
 19098   00008B                     SPI1INTE        equ	139	;# 
 19099   00008C                     SPI1CLK         equ	140	;# 
 19100   00008D                     SPI2RXB         equ	141	;# 
 19101   00008E                     SPI2TXB         equ	142	;# 
 19102   00008F                     SPI2TCNT        equ	143	;# 
 19103   00008F                     SPI2TCNTL       equ	143	;# 
 19104   000090                     SPI2TCNTH       equ	144	;# 
 19105   000091                     SPI2CON0        equ	145	;# 
 19106   000092                     SPI2CON1        equ	146	;# 
 19107   000093                     SPI2CON2        equ	147	;# 
 19108   000094                     SPI2STATUS      equ	148	;# 
 19109   000095                     SPI2TWIDTH      equ	149	;# 
 19110   000096                     SPI2BAUD        equ	150	;# 
 19111   000097                     SPI2INTF        equ	151	;# 
 19112   000098                     SPI2INTE        equ	152	;# 
 19113   000099                     SPI2CLK         equ	153	;# 
 19114   0000AC                     ACTCON          equ	172	;# 
 19115   0000AD                     OSCCON1         equ	173	;# 
 19116   0000AE                     OSCCON2         equ	174	;# 
 19117   0000AF                     OSCCON3         equ	175	;# 
 19118   0000B0                     OSCTUNE         equ	176	;# 
 19119   0000B1                     OSCFRQ          equ	177	;# 
 19120   0000B1                     OSCFREQ         equ	177	;# 
 19121   0000B2                     OSCSTAT         equ	178	;# 
 19122   0000B2                     OSCSTAT1        equ	178	;# 
 19123   0000B3                     OSCEN           equ	179	;# 
 19124   0000B4                     PRLOCK          equ	180	;# 
 19125   0000B5                     SCANPR          equ	181	;# 
 19126   0000B6                     DMA1PR          equ	182	;# 
 19127   0000B7                     DMA2PR          equ	183	;# 
 19128   0000B8                     DMA3PR          equ	184	;# 
 19129   0000B9                     DMA4PR          equ	185	;# 
 19130   0000BA                     DMA5PR          equ	186	;# 
 19131   0000BB                     DMA6PR          equ	187	;# 
 19132   0000BC                     DMA7PR          equ	188	;# 
 19133   0000BD                     DMA8PR          equ	189	;# 
 19134   0000BE                     MAINPR          equ	190	;# 
 19135   0000BF                     ISRPR           equ	191	;# 
 19136   0000D4                     CLCDATA         equ	212	;# 
 19137   0000D5                     CLCSELECT       equ	213	;# 
 19138   0000D6                     CLCnCON         equ	214	;# 
 19139   0000D7                     CLCnPOL         equ	215	;# 
 19140   0000D8                     CLCnSEL0        equ	216	;# 
 19141   0000D9                     CLCnSEL1        equ	217	;# 
 19142   0000DA                     CLCnSEL2        equ	218	;# 
 19143   0000DB                     CLCnSEL3        equ	219	;# 
 19144   0000DC                     CLCnGLS0        equ	220	;# 
 19145   0000DD                     CLCnGLS1        equ	221	;# 
 19146   0000DE                     CLCnGLS2        equ	222	;# 
 19147   0000DF                     CLCnGLS3        equ	223	;# 
 19148   0000E8                     DMASELECT       equ	232	;# 
 19149   0000E9                     DMAnBUF         equ	233	;# 
 19150   0000EA                     DMAnDCNT        equ	234	;# 
 19151   0000EA                     DMAnDCNTL       equ	234	;# 
 19152   0000EB                     DMAnDCNTH       equ	235	;# 
 19153   0000EC                     DMAnDPTR        equ	236	;# 
 19154   0000EC                     DMAnDPTRL       equ	236	;# 
 19155   0000ED                     DMAnDPTRH       equ	237	;# 
 19156   0000EE                     DMAnDSZ         equ	238	;# 
 19157   0000EE                     DMAnDSZL        equ	238	;# 
 19158   0000EF                     DMAnDSZH        equ	239	;# 
 19159   0000F0                     DMAnDSA         equ	240	;# 
 19160   0000F0                     DMAnDSAL        equ	240	;# 
 19161   0000F1                     DMAnDSAH        equ	241	;# 
 19162   0000F2                     DMAnSCNT        equ	242	;# 
 19163   0000F2                     DMAnSCNTL       equ	242	;# 
 19164   0000F3                     DMAnSCNTH       equ	243	;# 
 19165   0000F4                     DMAnSPTR        equ	244	;# 
 19166   0000F4                     DMAnSPTRL       equ	244	;# 
 19167   0000F5                     DMAnSPTRH       equ	245	;# 
 19168   0000F6                     DMAnSPTRU       equ	246	;# 
 19169   0000F7                     DMAnSSZ         equ	247	;# 
 19170   0000F7                     DMAnSSZL        equ	247	;# 
 19171   0000F8                     DMAnSSZH        equ	248	;# 
 19172   0000F9                     DMAnSSA         equ	249	;# 
 19173   0000F9                     DMAnSSAL        equ	249	;# 
 19174   0000FA                     DMAnSSAH        equ	250	;# 
 19175   0000FB                     DMAnSSAU        equ	251	;# 
 19176   0000FC                     DMAnCON0        equ	252	;# 
 19177   0000FD                     DMAnCON1        equ	253	;# 
 19178   0000FE                     DMAnAIRQ        equ	254	;# 
 19179   0000FF                     DMAnSIRQ        equ	255	;# 
 19180   000100                     C1CONL          equ	256	;# 
 19181   000101                     C1CONH          equ	257	;# 
 19182   000102                     C1CONU          equ	258	;# 
 19183   000103                     C1CONT          equ	259	;# 
 19184   000104                     C1NBTCFGL       equ	260	;# 
 19185   000105                     C1NBTCFGH       equ	261	;# 
 19186   000106                     C1NBTCFGU       equ	262	;# 
 19187   000107                     C1NBTCFGT       equ	263	;# 
 19188   000108                     C1DBTCFGL       equ	264	;# 
 19189   000109                     C1DBTCFGH       equ	265	;# 
 19190   00010A                     C1DBTCFGU       equ	266	;# 
 19191   00010B                     C1DBTCFGT       equ	267	;# 
 19192   00010C                     C1TDCL          equ	268	;# 
 19193   00010D                     C1TDCH          equ	269	;# 
 19194   00010E                     C1TDCU          equ	270	;# 
 19195   000110                     C1TBC           equ	272	;# 
 19196   000110                     C1TBCL          equ	272	;# 
 19197   000111                     C1TBCH          equ	273	;# 
 19198   000112                     C1TBCU          equ	274	;# 
 19199   000113                     C1TBCT          equ	275	;# 
 19200   000114                     C1TSCONL        equ	276	;# 
 19201   000115                     C1TSCONH        equ	277	;# 
 19202   000116                     C1TSCONU        equ	278	;# 
 19203   000117                     C1TSCONT        equ	279	;# 
 19204   000118                     C1VECL          equ	280	;# 
 19205   000119                     C1VECH          equ	281	;# 
 19206   00011A                     C1VECU          equ	282	;# 
 19207   00011B                     C1VECT          equ	283	;# 
 19208   00011C                     C1INTL          equ	284	;# 
 19209   00011D                     C1INTH          equ	285	;# 
 19210   00011E                     C1INTU          equ	286	;# 
 19211   00011F                     C1INTT          equ	287	;# 
 19212   000120                     C1RXIF          equ	288	;# 
 19213   000120                     C1RXIFL         equ	288	;# 
 19214   000121                     C1RXIFH         equ	289	;# 
 19215   000122                     C1RXIFU         equ	290	;# 
 19216   000123                     C1RXIFT         equ	291	;# 
 19217   000124                     C1TXIF          equ	292	;# 
 19218   000124                     C1TXIFL         equ	292	;# 
 19219   000125                     C1TXIFH         equ	293	;# 
 19220   000126                     C1TXIFU         equ	294	;# 
 19221   000127                     C1TXIFT         equ	295	;# 
 19222   000128                     C1RXOVIF        equ	296	;# 
 19223   000128                     C1RXOVIFL       equ	296	;# 
 19224   000129                     C1RXOVIFH       equ	297	;# 
 19225   00012A                     C1RXOVIFU       equ	298	;# 
 19226   00012B                     C1RXOVIFT       equ	299	;# 
 19227   00012C                     C1TXATIF        equ	300	;# 
 19228   00012C                     C1TXATIFL       equ	300	;# 
 19229   00012D                     C1TXATIFH       equ	301	;# 
 19230   00012E                     C1TXATIFU       equ	302	;# 
 19231   00012F                     C1TXATIFT       equ	303	;# 
 19232   000130                     C1TXREQ         equ	304	;# 
 19233   000130                     C1TXREQL        equ	304	;# 
 19234   000131                     C1TXREQH        equ	305	;# 
 19235   000132                     C1TXREQU        equ	306	;# 
 19236   000133                     C1TXREQT        equ	307	;# 
 19237   000134                     C1TRECL         equ	308	;# 
 19238   000135                     C1TRECH         equ	309	;# 
 19239   000136                     C1TRECU         equ	310	;# 
 19240   000137                     C1TRECT         equ	311	;# 
 19241   000138                     C1BDIAG0L       equ	312	;# 
 19242   000139                     C1BDIAG0H       equ	313	;# 
 19243   00013C                     C1BDIAG1L       equ	316	;# 
 19244   00013D                     C1BDIAG1H       equ	317	;# 
 19245   00013E                     C1BDIAG1U       equ	318	;# 
 19246   00013F                     C1BDIAG1T       equ	319	;# 
 19247   000140                     C1TEFCONL       equ	320	;# 
 19248   000141                     C1TEFCONH       equ	321	;# 
 19249   000142                     C1TEFCONU       equ	322	;# 
 19250   000143                     C1TEFCONT       equ	323	;# 
 19251   000144                     C1TEFSTAL       equ	324	;# 
 19252   000145                     C1TEFSTAH       equ	325	;# 
 19253   000146                     C1TEFSTAU       equ	326	;# 
 19254   000147                     C1TEFSTAT       equ	327	;# 
 19255   000148                     C1TEFUA         equ	328	;# 
 19256   000148                     C1TEFUAL        equ	328	;# 
 19257   000149                     C1TEFUAH        equ	329	;# 
 19258   00014A                     C1TEFUAU        equ	330	;# 
 19259   00014B                     C1TEFUAT        equ	331	;# 
 19260   00014C                     C1FIFOBA        equ	332	;# 
 19261   00014C                     C1FIFOBAL       equ	332	;# 
 19262   00014D                     C1FIFOBAH       equ	333	;# 
 19263   00014E                     C1FIFOBAU       equ	334	;# 
 19264   00014F                     C1FIFOBAT       equ	335	;# 
 19265   000150                     C1TXQCONL       equ	336	;# 
 19266   000151                     C1TXQCONH       equ	337	;# 
 19267   000152                     C1TXQCONU       equ	338	;# 
 19268   000153                     C1TXQCONT       equ	339	;# 
 19269   000154                     C1TXQSTAL       equ	340	;# 
 19270   000155                     C1TXQSTAH       equ	341	;# 
 19271   000156                     C1TXQSTAU       equ	342	;# 
 19272   000157                     C1TXQSTAT       equ	343	;# 
 19273   000158                     C1TXQUA         equ	344	;# 
 19274   000158                     C1TXQUAL        equ	344	;# 
 19275   000159                     C1TXQUAH        equ	345	;# 
 19276   00015A                     C1TXQUAU        equ	346	;# 
 19277   00015B                     C1TXQUAT        equ	347	;# 
 19278   00015C                     C1FIFOCON1      equ	348	;# 
 19279   00015C                     C1FIFOCON1L     equ	348	;# 
 19280   00015D                     C1FIFOCON1H     equ	349	;# 
 19281   00015E                     C1FIFOCON1U     equ	350	;# 
 19282   00015F                     C1FIFOCON1T     equ	351	;# 
 19283   000160                     C1FIFOSTA1      equ	352	;# 
 19284   000160                     C1FIFOSTA1L     equ	352	;# 
 19285   000161                     C1FIFOSTA1H     equ	353	;# 
 19286   000162                     C1FIFOSTA1U     equ	354	;# 
 19287   000163                     C1FIFOSTA1T     equ	355	;# 
 19288   000164                     C1FIFOUA1       equ	356	;# 
 19289   000164                     C1FIFOUA1L      equ	356	;# 
 19290   000165                     C1FIFOUA1H      equ	357	;# 
 19291   000166                     C1FIFOUA1U      equ	358	;# 
 19292   000167                     C1FIFOUA1T      equ	359	;# 
 19293   000168                     C1FIFOCON2      equ	360	;# 
 19294   000168                     C1FIFOCON2L     equ	360	;# 
 19295   000169                     C1FIFOCON2H     equ	361	;# 
 19296   00016A                     C1FIFOCON2U     equ	362	;# 
 19297   00016B                     C1FIFOCON2T     equ	363	;# 
 19298   00016C                     C1FIFOSTA2      equ	364	;# 
 19299   00016C                     C1FIFOSTA2L     equ	364	;# 
 19300   00016D                     C1FIFOSTA2H     equ	365	;# 
 19301   00016E                     C1FIFOSTA2U     equ	366	;# 
 19302   00016F                     C1FIFOSTA2T     equ	367	;# 
 19303   000170                     C1FIFOUA2       equ	368	;# 
 19304   000170                     C1FIFOUA2L      equ	368	;# 
 19305   000171                     C1FIFOUA2H      equ	369	;# 
 19306   000172                     C1FIFOUA2U      equ	370	;# 
 19307   000173                     C1FIFOUA2T      equ	371	;# 
 19308   000174                     C1FIFOCON3      equ	372	;# 
 19309   000174                     C1FIFOCON3L     equ	372	;# 
 19310   000175                     C1FIFOCON3H     equ	373	;# 
 19311   000176                     C1FIFOCON3U     equ	374	;# 
 19312   000177                     C1FIFOCON3T     equ	375	;# 
 19313   000178                     C1FIFOSTA3      equ	376	;# 
 19314   000178                     C1FIFOSTA3L     equ	376	;# 
 19315   000179                     C1FIFOSTA3H     equ	377	;# 
 19316   00017A                     C1FIFOSTA3U     equ	378	;# 
 19317   00017B                     C1FIFOSTA3T     equ	379	;# 
 19318   00017C                     C1FIFOUA3       equ	380	;# 
 19319   00017C                     C1FIFOUA3L      equ	380	;# 
 19320   00017D                     C1FIFOUA3H      equ	381	;# 
 19321   00017E                     C1FIFOUA3U      equ	382	;# 
 19322   00017F                     C1FIFOUA3T      equ	383	;# 
 19323   000180                     C1FLTCON0L      equ	384	;# 
 19324   000181                     C1FLTCON0H      equ	385	;# 
 19325   000182                     C1FLTCON0U      equ	386	;# 
 19326   000183                     C1FLTCON0T      equ	387	;# 
 19327   000184                     C1FLTCON1L      equ	388	;# 
 19328   000185                     C1FLTCON1H      equ	389	;# 
 19329   000186                     C1FLTCON1U      equ	390	;# 
 19330   000187                     C1FLTCON1T      equ	391	;# 
 19331   000188                     C1FLTCON2L      equ	392	;# 
 19332   000189                     C1FLTCON2H      equ	393	;# 
 19333   00018A                     C1FLTCON2U      equ	394	;# 
 19334   00018B                     C1FLTCON2T      equ	395	;# 
 19335   00018C                     C1FLTOBJ0       equ	396	;# 
 19336   00018C                     C1FLTOBJ0L      equ	396	;# 
 19337   00018D                     C1FLTOBJ0H      equ	397	;# 
 19338   00018E                     C1FLTOBJ0U      equ	398	;# 
 19339   00018F                     C1FLTOBJ0T      equ	399	;# 
 19340   000190                     C1MASK0         equ	400	;# 
 19341   000190                     C1MASK0L        equ	400	;# 
 19342   000191                     C1MASK0H        equ	401	;# 
 19343   000192                     C1MASK0U        equ	402	;# 
 19344   000193                     C1MASK0T        equ	403	;# 
 19345   000194                     C1FLTOBJ1       equ	404	;# 
 19346   000194                     C1FLTOBJ1L      equ	404	;# 
 19347   000195                     C1FLTOBJ1H      equ	405	;# 
 19348   000196                     C1FLTOBJ1U      equ	406	;# 
 19349   000197                     C1FLTOBJ1T      equ	407	;# 
 19350   000198                     C1MASK1         equ	408	;# 
 19351   000198                     C1MASK1L        equ	408	;# 
 19352   000199                     C1MASK1H        equ	409	;# 
 19353   00019A                     C1MASK1U        equ	410	;# 
 19354   00019B                     C1MASK1T        equ	411	;# 
 19355   00019C                     C1FLTOBJ2       equ	412	;# 
 19356   00019C                     C1FLTOBJ2L      equ	412	;# 
 19357   00019D                     C1FLTOBJ2H      equ	413	;# 
 19358   00019E                     C1FLTOBJ2U      equ	414	;# 
 19359   00019F                     C1FLTOBJ2T      equ	415	;# 
 19360   0001A0                     C1MASK2         equ	416	;# 
 19361   0001A0                     C1MASK2L        equ	416	;# 
 19362   0001A1                     C1MASK2H        equ	417	;# 
 19363   0001A2                     C1MASK2U        equ	418	;# 
 19364   0001A3                     C1MASK2T        equ	419	;# 
 19365   0001A4                     C1FLTOBJ3       equ	420	;# 
 19366   0001A4                     C1FLTOBJ3L      equ	420	;# 
 19367   0001A5                     C1FLTOBJ3H      equ	421	;# 
 19368   0001A6                     C1FLTOBJ3U      equ	422	;# 
 19369   0001A7                     C1FLTOBJ3T      equ	423	;# 
 19370   0001A8                     C1MASK3         equ	424	;# 
 19371   0001A8                     C1MASK3L        equ	424	;# 
 19372   0001A9                     C1MASK3H        equ	425	;# 
 19373   0001AA                     C1MASK3U        equ	426	;# 
 19374   0001AB                     C1MASK3T        equ	427	;# 
 19375   0001AC                     C1FLTOBJ4       equ	428	;# 
 19376   0001AC                     C1FLTOBJ4L      equ	428	;# 
 19377   0001AD                     C1FLTOBJ4H      equ	429	;# 
 19378   0001AE                     C1FLTOBJ4U      equ	430	;# 
 19379   0001AF                     C1FLTOBJ4T      equ	431	;# 
 19380   0001B0                     C1MASK4         equ	432	;# 
 19381   0001B0                     C1MASK4L        equ	432	;# 
 19382   0001B1                     C1MASK4H        equ	433	;# 
 19383   0001B2                     C1MASK4U        equ	434	;# 
 19384   0001B3                     C1MASK4T        equ	435	;# 
 19385   0001B4                     C1FLTOBJ5       equ	436	;# 
 19386   0001B4                     C1FLTOBJ5L      equ	436	;# 
 19387   0001B5                     C1FLTOBJ5H      equ	437	;# 
 19388   0001B6                     C1FLTOBJ5U      equ	438	;# 
 19389   0001B7                     C1FLTOBJ5T      equ	439	;# 
 19390   0001B8                     C1MASK5         equ	440	;# 
 19391   0001B8                     C1MASK5L        equ	440	;# 
 19392   0001B9                     C1MASK5H        equ	441	;# 
 19393   0001BA                     C1MASK5U        equ	442	;# 
 19394   0001BB                     C1MASK5T        equ	443	;# 
 19395   0001BC                     C1FLTOBJ6       equ	444	;# 
 19396   0001BC                     C1FLTOBJ6L      equ	444	;# 
 19397   0001BD                     C1FLTOBJ6H      equ	445	;# 
 19398   0001BE                     C1FLTOBJ6U      equ	446	;# 
 19399   0001BF                     C1FLTOBJ6T      equ	447	;# 
 19400   0001C0                     C1MASK6         equ	448	;# 
 19401   0001C0                     C1MASK6L        equ	448	;# 
 19402   0001C1                     C1MASK6H        equ	449	;# 
 19403   0001C2                     C1MASK6U        equ	450	;# 
 19404   0001C3                     C1MASK6T        equ	451	;# 
 19405   0001C4                     C1FLTOBJ7       equ	452	;# 
 19406   0001C4                     C1FLTOBJ7L      equ	452	;# 
 19407   0001C5                     C1FLTOBJ7H      equ	453	;# 
 19408   0001C6                     C1FLTOBJ7U      equ	454	;# 
 19409   0001C7                     C1FLTOBJ7T      equ	455	;# 
 19410   0001C8                     C1MASK7         equ	456	;# 
 19411   0001C8                     C1MASK7L        equ	456	;# 
 19412   0001C9                     C1MASK7H        equ	457	;# 
 19413   0001CA                     C1MASK7U        equ	458	;# 
 19414   0001CB                     C1MASK7T        equ	459	;# 
 19415   0001CC                     C1FLTOBJ8       equ	460	;# 
 19416   0001CC                     C1FLTOBJ8L      equ	460	;# 
 19417   0001CD                     C1FLTOBJ8H      equ	461	;# 
 19418   0001CE                     C1FLTOBJ8U      equ	462	;# 
 19419   0001CF                     C1FLTOBJ8T      equ	463	;# 
 19420   0001D0                     C1MASK8         equ	464	;# 
 19421   0001D0                     C1MASK8L        equ	464	;# 
 19422   0001D1                     C1MASK8H        equ	465	;# 
 19423   0001D2                     C1MASK8U        equ	466	;# 
 19424   0001D3                     C1MASK8T        equ	467	;# 
 19425   0001D4                     C1FLTOBJ9       equ	468	;# 
 19426   0001D4                     C1FLTOBJ9L      equ	468	;# 
 19427   0001D5                     C1FLTOBJ9H      equ	469	;# 
 19428   0001D6                     C1FLTOBJ9U      equ	470	;# 
 19429   0001D7                     C1FLTOBJ9T      equ	471	;# 
 19430   0001D8                     C1MASK9         equ	472	;# 
 19431   0001D8                     C1MASK9L        equ	472	;# 
 19432   0001D9                     C1MASK9H        equ	473	;# 
 19433   0001DA                     C1MASK9U        equ	474	;# 
 19434   0001DB                     C1MASK9T        equ	475	;# 
 19435   0001DC                     C1FLTOBJ10      equ	476	;# 
 19436   0001DC                     C1FLTOBJ10L     equ	476	;# 
 19437   0001DD                     C1FLTOBJ10H     equ	477	;# 
 19438   0001DE                     C1FLTOBJ10U     equ	478	;# 
 19439   0001DF                     C1FLTOBJ10T     equ	479	;# 
 19440   0001E0                     C1MASK10        equ	480	;# 
 19441   0001E0                     C1MASK10L       equ	480	;# 
 19442   0001E1                     C1MASK10H       equ	481	;# 
 19443   0001E2                     C1MASK10U       equ	482	;# 
 19444   0001E3                     C1MASK10T       equ	483	;# 
 19445   0001E4                     C1FLTOBJ11      equ	484	;# 
 19446   0001E4                     C1FLTOBJ11L     equ	484	;# 
 19447   0001E5                     C1FLTOBJ11H     equ	485	;# 
 19448   0001E6                     C1FLTOBJ11U     equ	486	;# 
 19449   0001E7                     C1FLTOBJ11T     equ	487	;# 
 19450   0001E8                     C1MASK11        equ	488	;# 
 19451   0001E8                     C1MASK11L       equ	488	;# 
 19452   0001E9                     C1MASK11H       equ	489	;# 
 19453   0001EA                     C1MASK11U       equ	490	;# 
 19454   0001EB                     C1MASK11T       equ	491	;# 
 19455   000200                     PPSLOCK         equ	512	;# 
 19456   000201                     RA0PPS          equ	513	;# 
 19457   000202                     RA1PPS          equ	514	;# 
 19458   000203                     RA2PPS          equ	515	;# 
 19459   000204                     RA3PPS          equ	516	;# 
 19460   000205                     RA4PPS          equ	517	;# 
 19461   000206                     RA5PPS          equ	518	;# 
 19462   000207                     RA6PPS          equ	519	;# 
 19463   000208                     RA7PPS          equ	520	;# 
 19464   000209                     RB0PPS          equ	521	;# 
 19465   00020A                     RB1PPS          equ	522	;# 
 19466   00020B                     RB2PPS          equ	523	;# 
 19467   00020C                     RB3PPS          equ	524	;# 
 19468   00020D                     RB4PPS          equ	525	;# 
 19469   00020E                     RB5PPS          equ	526	;# 
 19470   00020F                     RB6PPS          equ	527	;# 
 19471   000210                     RB7PPS          equ	528	;# 
 19472   000211                     RC0PPS          equ	529	;# 
 19473   000212                     RC1PPS          equ	530	;# 
 19474   000213                     RC2PPS          equ	531	;# 
 19475   000214                     RC3PPS          equ	532	;# 
 19476   000215                     RC4PPS          equ	533	;# 
 19477   000216                     RC5PPS          equ	534	;# 
 19478   000217                     RC6PPS          equ	535	;# 
 19479   000218                     RC7PPS          equ	536	;# 
 19480   00023D                     CANRXPPS        equ	573	;# 
 19481   00023E                     INT0PPS         equ	574	;# 
 19482   00023F                     INT1PPS         equ	575	;# 
 19483   000240                     INT2PPS         equ	576	;# 
 19484   000241                     T0CKIPPS        equ	577	;# 
 19485   000242                     T1CKIPPS        equ	578	;# 
 19486   000243                     T1GPPS          equ	579	;# 
 19487   000244                     T3CKIPPS        equ	580	;# 
 19488   000245                     T3GPPS          equ	581	;# 
 19489   000246                     T5CKIPPS        equ	582	;# 
 19490   000247                     T5GPPS          equ	583	;# 
 19491   000248                     T2INPPS         equ	584	;# 
 19492   000249                     T4INPPS         equ	585	;# 
 19493   00024A                     T6INPPS         equ	586	;# 
 19494   00024B                     TUIN0PPS        equ	587	;# 
 19495   00024C                     TUIN1PPS        equ	588	;# 
 19496   00024F                     CCP1PPS         equ	591	;# 
 19497   000250                     CCP2PPS         equ	592	;# 
 19498   000251                     CCP3PPS         equ	593	;# 
 19499   000253                     PWM1ERSPPS      equ	595	;# 
 19500   000254                     PWM2ERSPPS      equ	596	;# 
 19501   000255                     PWM3ERSPPS      equ	597	;# 
 19502   000256                     PWM4ERSPPS      equ	598	;# 
 19503   000257                     PWMIN0PPS       equ	599	;# 
 19504   000258                     PWMIN1PPS       equ	600	;# 
 19505   000259                     SMT1WINPPS      equ	601	;# 
 19506   00025A                     SMT1SIGPPS      equ	602	;# 
 19507   00025B                     CWG1PPS         equ	603	;# 
 19508   00025B                     CWG1INPPS       equ	603	;# 
 19509   00025C                     CWG2PPS         equ	604	;# 
 19510   00025C                     CWG2INPPS       equ	604	;# 
 19511   00025D                     CWG3PPS         equ	605	;# 
 19512   00025D                     CWG3INPPS       equ	605	;# 
 19513   00025E                     MD1CARLPPS      equ	606	;# 
 19514   00025E                     MDCARLPPS       equ	606	;# 
 19515   00025F                     MD1CARHPPS      equ	607	;# 
 19516   00025F                     MDCARHPPS       equ	607	;# 
 19517   000260                     MD1SRCPPS       equ	608	;# 
 19518   000260                     MDSRCPPS        equ	608	;# 
 19519   000261                     CLCIN0PPS       equ	609	;# 
 19520   000262                     CLCIN1PPS       equ	610	;# 
 19521   000263                     CLCIN2PPS       equ	611	;# 
 19522   000264                     CLCIN3PPS       equ	612	;# 
 19523   000265                     CLCIN4PPS       equ	613	;# 
 19524   000266                     CLCIN5PPS       equ	614	;# 
 19525   000267                     CLCIN6PPS       equ	615	;# 
 19526   000268                     CLCIN7PPS       equ	616	;# 
 19527   000269                     ADACTPPS        equ	617	;# 
 19528   00026A                     SPI1SCKPPS      equ	618	;# 
 19529   00026B                     SPI1SDIPPS      equ	619	;# 
 19530   00026C                     SPI1SSPPS       equ	620	;# 
 19531   00026D                     SPI2SCKPPS      equ	621	;# 
 19532   00026E                     SPI2SDIPPS      equ	622	;# 
 19533   00026F                     SPI2SSPPS       equ	623	;# 
 19534   000270                     I2C1SDAPPS      equ	624	;# 
 19535   000271                     I2C1SCLPPS      equ	625	;# 
 19536   000272                     U1RXPPS         equ	626	;# 
 19537   000273                     U1CTSPPS        equ	627	;# 
 19538   000274                     U2RXPPS         equ	628	;# 
 19539   000275                     U2CTSPPS        equ	629	;# 
 19540   000276                     U3RXPPS         equ	630	;# 
 19541   000277                     U3CTSPPS        equ	631	;# 
 19542   000278                     U4RXPPS         equ	632	;# 
 19543   000279                     U4CTSPPS        equ	633	;# 
 19544   00027A                     U5RXPPS         equ	634	;# 
 19545   00027B                     U5CTSPPS        equ	635	;# 
 19546   000286                     RC4I2C          equ	646	;# 
 19547   000287                     RC3I2C          equ	647	;# 
 19548   000288                     RB2I2C          equ	648	;# 
 19549   000289                     RB1I2C          equ	649	;# 
 19550   00028A                     I2C1RXB         equ	650	;# 
 19551   00028B                     I2C1TXB         equ	651	;# 
 19552   00028C                     I2C1CNTL        equ	652	;# 
 19553   00028D                     I2C1CNTH        equ	653	;# 
 19554   00028E                     I2C1ADB0        equ	654	;# 
 19555   00028F                     I2C1ADB1        equ	655	;# 
 19556   000290                     I2C1ADR0        equ	656	;# 
 19557   000291                     I2C1ADR1        equ	657	;# 
 19558   000292                     I2C1ADR2        equ	658	;# 
 19559   000293                     I2C1ADR3        equ	659	;# 
 19560   000294                     I2C1CON0        equ	660	;# 
 19561   000295                     I2C1CON1        equ	661	;# 
 19562   000296                     I2C1CON2        equ	662	;# 
 19563   000297                     I2C1ERR         equ	663	;# 
 19564   000298                     I2C1STAT0       equ	664	;# 
 19565   000299                     I2C1STAT1       equ	665	;# 
 19566   00029A                     I2C1PIR         equ	666	;# 
 19567   00029B                     I2C1PIE         equ	667	;# 
 19568   00029C                     I2C1BTO         equ	668	;# 
 19569   00029D                     I2C1BAUD        equ	669	;# 
 19570   00029E                     I2C1CLK         equ	670	;# 
 19571   00029F                     I2C1BTOC        equ	671	;# 
 19572   0002A1                     U1RXB           equ	673	;# 
 19573   0002A1                     U1RXBL          equ	673	;# 
 19574   0002A2                     U1RXCHK         equ	674	;# 
 19575   0002A3                     U1TXB           equ	675	;# 
 19576   0002A3                     U1TXBL          equ	675	;# 
 19577   0002A4                     U1TXCHK         equ	676	;# 
 19578   0002A5                     U1P1            equ	677	;# 
 19579   0002A5                     U1P1L           equ	677	;# 
 19580   0002A6                     U1P1H           equ	678	;# 
 19581   0002A7                     U1P2            equ	679	;# 
 19582   0002A7                     U1P2L           equ	679	;# 
 19583   0002A8                     U1P2H           equ	680	;# 
 19584   0002A9                     U1P3            equ	681	;# 
 19585   0002A9                     U1P3L           equ	681	;# 
 19586   0002AA                     U1P3H           equ	682	;# 
 19587   0002AB                     U1CON0          equ	683	;# 
 19588   0002AC                     U1CON1          equ	684	;# 
 19589   0002AD                     U1CON2          equ	685	;# 
 19590   0002AE                     U1BRG           equ	686	;# 
 19591   0002AE                     U1BRGL          equ	686	;# 
 19592   0002AF                     U1BRGH          equ	687	;# 
 19593   0002B0                     U1FIFO          equ	688	;# 
 19594   0002B1                     U1UIR           equ	689	;# 
 19595   0002B2                     U1ERRIR         equ	690	;# 
 19596   0002B3                     U1ERRIE         equ	691	;# 
 19597   0002B4                     U2RXB           equ	692	;# 
 19598   0002B4                     U2RXBL          equ	692	;# 
 19599   0002B5                     U2RXCHK         equ	693	;# 
 19600   0002B6                     U2TXB           equ	694	;# 
 19601   0002B6                     U2TXBL          equ	694	;# 
 19602   0002B7                     U2TXCHK         equ	695	;# 
 19603   0002B8                     U2P1            equ	696	;# 
 19604   0002B8                     U2P1L           equ	696	;# 
 19605   0002B9                     U2P1H           equ	697	;# 
 19606   0002BA                     U2P2            equ	698	;# 
 19607   0002BA                     U2P2L           equ	698	;# 
 19608   0002BB                     U2P2H           equ	699	;# 
 19609   0002BC                     U2P3            equ	700	;# 
 19610   0002BC                     U2P3L           equ	700	;# 
 19611   0002BD                     U2P3H           equ	701	;# 
 19612   0002BE                     U2CON0          equ	702	;# 
 19613   0002BF                     U2CON1          equ	703	;# 
 19614   0002C0                     U2CON2          equ	704	;# 
 19615   0002C1                     U2BRG           equ	705	;# 
 19616   0002C1                     U2BRGL          equ	705	;# 
 19617   0002C2                     U2BRGH          equ	706	;# 
 19618   0002C3                     U2FIFO          equ	707	;# 
 19619   0002C4                     U2UIR           equ	708	;# 
 19620   0002C5                     U2ERRIR         equ	709	;# 
 19621   0002C6                     U2ERRIE         equ	710	;# 
 19622   0002C7                     U3RXB           equ	711	;# 
 19623   0002C7                     U3RXBL          equ	711	;# 
 19624   0002C9                     U3TXB           equ	713	;# 
 19625   0002C9                     U3TXBL          equ	713	;# 
 19626   0002CB                     U3P1            equ	715	;# 
 19627   0002CB                     U3P1L           equ	715	;# 
 19628   0002CD                     U3P2            equ	717	;# 
 19629   0002CD                     U3P2L           equ	717	;# 
 19630   0002CF                     U3P3            equ	719	;# 
 19631   0002CF                     U3P3L           equ	719	;# 
 19632   0002D1                     U3CON0          equ	721	;# 
 19633   0002D2                     U3CON1          equ	722	;# 
 19634   0002D3                     U3CON2          equ	723	;# 
 19635   0002D4                     U3BRG           equ	724	;# 
 19636   0002D4                     U3BRGL          equ	724	;# 
 19637   0002D5                     U3BRGH          equ	725	;# 
 19638   0002D6                     U3FIFO          equ	726	;# 
 19639   0002D7                     U3UIR           equ	727	;# 
 19640   0002D8                     U3ERRIR         equ	728	;# 
 19641   0002D9                     U3ERRIE         equ	729	;# 
 19642   0002DA                     U4RXB           equ	730	;# 
 19643   0002DA                     U4RXBL          equ	730	;# 
 19644   0002DC                     U4TXB           equ	732	;# 
 19645   0002DC                     U4TXBL          equ	732	;# 
 19646   0002DE                     U4P1            equ	734	;# 
 19647   0002DE                     U4P1L           equ	734	;# 
 19648   0002E0                     U4P2            equ	736	;# 
 19649   0002E0                     U4P2L           equ	736	;# 
 19650   0002E2                     U4P3            equ	738	;# 
 19651   0002E2                     U4P3L           equ	738	;# 
 19652   0002E4                     U4CON0          equ	740	;# 
 19653   0002E5                     U4CON1          equ	741	;# 
 19654   0002E6                     U4CON2          equ	742	;# 
 19655   0002E7                     U4BRG           equ	743	;# 
 19656   0002E7                     U4BRGL          equ	743	;# 
 19657   0002E8                     U4BRGH          equ	744	;# 
 19658   0002E9                     U4FIFO          equ	745	;# 
 19659   0002EA                     U4UIR           equ	746	;# 
 19660   0002EB                     U4ERRIR         equ	747	;# 
 19661   0002EC                     U4ERRIE         equ	748	;# 
 19662   0002ED                     U5RXB           equ	749	;# 
 19663   0002ED                     U5RXBL          equ	749	;# 
 19664   0002EF                     U5TXB           equ	751	;# 
 19665   0002EF                     U5TXBL          equ	751	;# 
 19666   0002F1                     U5P1            equ	753	;# 
 19667   0002F1                     U5P1L           equ	753	;# 
 19668   0002F3                     U5P2            equ	755	;# 
 19669   0002F3                     U5P2L           equ	755	;# 
 19670   0002F5                     U5P3            equ	757	;# 
 19671   0002F5                     U5P3L           equ	757	;# 
 19672   0002F7                     U5CON0          equ	759	;# 
 19673   0002F8                     U5CON1          equ	760	;# 
 19674   0002F9                     U5CON2          equ	761	;# 
 19675   0002FA                     U5BRG           equ	762	;# 
 19676   0002FA                     U5BRGL          equ	762	;# 
 19677   0002FB                     U5BRGH          equ	763	;# 
 19678   0002FC                     U5FIFO          equ	764	;# 
 19679   0002FD                     U5UIR           equ	765	;# 
 19680   0002FE                     U5ERRIR         equ	766	;# 
 19681   0002FF                     U5ERRIE         equ	767	;# 
 19682   000300                     SMT1TMR         equ	768	;# 
 19683   000300                     SMT1TMRL        equ	768	;# 
 19684   000301                     SMT1TMRH        equ	769	;# 
 19685   000302                     SMT1TMRU        equ	770	;# 
 19686   000303                     SMT1CPR         equ	771	;# 
 19687   000303                     SMT1CPRL        equ	771	;# 
 19688   000304                     SMT1CPRH        equ	772	;# 
 19689   000305                     SMT1CPRU        equ	773	;# 
 19690   000306                     SMT1CPW         equ	774	;# 
 19691   000306                     SMT1CPWL        equ	774	;# 
 19692   000307                     SMT1CPWH        equ	775	;# 
 19693   000308                     SMT1CPWU        equ	776	;# 
 19694   000309                     SMT1PR          equ	777	;# 
 19695   000309                     SMT1PRL         equ	777	;# 
 19696   00030A                     SMT1PRH         equ	778	;# 
 19697   00030B                     SMT1PRU         equ	779	;# 
 19698   00030C                     SMT1CON0        equ	780	;# 
 19699   00030D                     SMT1CON1        equ	781	;# 
 19700   00030E                     SMT1STAT        equ	782	;# 
 19701   00030F                     SMT1CLK         equ	783	;# 
 19702   000310                     SMT1SIG         equ	784	;# 
 19703   000311                     SMT1WIN         equ	785	;# 
 19704   000318                     TMR0L           equ	792	;# 
 19705   000318                     TMR0            equ	792	;# 
 19706   000319                     TMR0H           equ	793	;# 
 19707   000319                     PR0             equ	793	;# 
 19708   00031A                     T0CON0          equ	794	;# 
 19709   00031B                     T0CON1          equ	795	;# 
 19710   00031C                     TMR1            equ	796	;# 
 19711   00031C                     TMR1L           equ	796	;# 
 19712   00031D                     TMR1H           equ	797	;# 
 19713   00031E                     T1CON           equ	798	;# 
 19714   00031E                     TMR1CON         equ	798	;# 
 19715   00031F                     T1GCON          equ	799	;# 
 19716   00031F                     TMR1GCON        equ	799	;# 
 19717   000320                     T1GATE          equ	800	;# 
 19718   000320                     TMR1GATE        equ	800	;# 
 19719   000321                     T1CLK           equ	801	;# 
 19720   000321                     TMR1CLK         equ	801	;# 
 19721   000321                     PR1             equ	801	;# 
 19722   000322                     T2TMR           equ	802	;# 
 19723   000322                     TMR2            equ	802	;# 
 19724   000323                     T2PR            equ	803	;# 
 19725   000323                     PR2             equ	803	;# 
 19726   000324                     T2CON           equ	804	;# 
 19727   000325                     T2HLT           equ	805	;# 
 19728   000326                     T2CLKCON        equ	806	;# 
 19729   000326                     T2CLK           equ	806	;# 
 19730   000327                     T2RST           equ	807	;# 
 19731   000328                     TMR3            equ	808	;# 
 19732   000328                     TMR3L           equ	808	;# 
 19733   000329                     TMR3H           equ	809	;# 
 19734   00032A                     T3CON           equ	810	;# 
 19735   00032A                     TMR3CON         equ	810	;# 
 19736   00032B                     T3GCON          equ	811	;# 
 19737   00032B                     TMR3GCON        equ	811	;# 
 19738   00032C                     T3GATE          equ	812	;# 
 19739   00032C                     TMR3GATE        equ	812	;# 
 19740   00032D                     T3CLK           equ	813	;# 
 19741   00032D                     TMR3CLK         equ	813	;# 
 19742   00032D                     PR3             equ	813	;# 
 19743   00032E                     T4TMR           equ	814	;# 
 19744   00032E                     TMR4            equ	814	;# 
 19745   00032F                     T4PR            equ	815	;# 
 19746   00032F                     PR4             equ	815	;# 
 19747   000330                     T4CON           equ	816	;# 
 19748   000331                     T4HLT           equ	817	;# 
 19749   000332                     T4CLKCON        equ	818	;# 
 19750   000332                     T4CLK           equ	818	;# 
 19751   000333                     T4RST           equ	819	;# 
 19752   000334                     TMR5            equ	820	;# 
 19753   000334                     TMR5L           equ	820	;# 
 19754   000335                     TMR5H           equ	821	;# 
 19755   000336                     T5CON           equ	822	;# 
 19756   000336                     TMR5CON         equ	822	;# 
 19757   000337                     T5GCON          equ	823	;# 
 19758   000337                     TMR5GCON        equ	823	;# 
 19759   000338                     T5GATE          equ	824	;# 
 19760   000338                     TMR5GATE        equ	824	;# 
 19761   000339                     T5CLK           equ	825	;# 
 19762   000339                     TMR5CLK         equ	825	;# 
 19763   000339                     PR5             equ	825	;# 
 19764   00033A                     T6TMR           equ	826	;# 
 19765   00033A                     TMR6            equ	826	;# 
 19766   00033B                     T6PR            equ	827	;# 
 19767   00033B                     PR6             equ	827	;# 
 19768   00033C                     T6CON           equ	828	;# 
 19769   00033D                     T6HLT           equ	829	;# 
 19770   00033E                     T6CLKCON        equ	830	;# 
 19771   00033E                     T6CLK           equ	830	;# 
 19772   00033F                     T6RST           equ	831	;# 
 19773   000340                     CCPR1           equ	832	;# 
 19774   000340                     CCPR1L          equ	832	;# 
 19775   000341                     CCPR1H          equ	833	;# 
 19776   000342                     CCP1CON         equ	834	;# 
 19777   000343                     CCP1CAP         equ	835	;# 
 19778   000344                     CCPR2           equ	836	;# 
 19779   000344                     CCPR2L          equ	836	;# 
 19780   000345                     CCPR2H          equ	837	;# 
 19781   000346                     CCP2CON         equ	838	;# 
 19782   000347                     CCP2CAP         equ	839	;# 
 19783   000348                     CCPR3           equ	840	;# 
 19784   000348                     CCPR3L          equ	840	;# 
 19785   000349                     CCPR3H          equ	841	;# 
 19786   00034A                     CCP3CON         equ	842	;# 
 19787   00034B                     CCP3CAP         equ	843	;# 
 19788   00034C                     CCPTMRS0        equ	844	;# 
 19789   00034F                     CRCDATA         equ	847	;# 
 19790   00034F                     CRCDATAL        equ	847	;# 
 19791   000350                     CRCDATAH        equ	848	;# 
 19792   000351                     CRCDATAU        equ	849	;# 
 19793   000352                     CRCDATAT        equ	850	;# 
 19794   000353                     CRCOUT          equ	851	;# 
 19795   000353                     CRCSHFT         equ	851	;# 
 19796   000353                     CRCXOR          equ	851	;# 
 19797   000353                     CRCOUTL         equ	851	;# 
 19798   000353                     CRCSHFTL        equ	851	;# 
 19799   000353                     CRCSHIFTL       equ	851	;# 
 19800   000353                     CRCXORL         equ	851	;# 
 19801   000354                     CRCOUTH         equ	852	;# 
 19802   000354                     CRCSHFTH        equ	852	;# 
 19803   000354                     CRCSHIFTH       equ	852	;# 
 19804   000354                     CRCXORH         equ	852	;# 
 19805   000355                     CRCOUTU         equ	853	;# 
 19806   000355                     CRCSHFTU        equ	853	;# 
 19807   000355                     CRCSHIFTU       equ	853	;# 
 19808   000355                     CRCXORU         equ	853	;# 
 19809   000356                     CRCOUTT         equ	854	;# 
 19810   000356                     CRCSHFTT        equ	854	;# 
 19811   000356                     CRCSHIFTT       equ	854	;# 
 19812   000356                     CRCXORT         equ	854	;# 
 19813   000357                     CRCCON0         equ	855	;# 
 19814   000358                     CRCCON1         equ	856	;# 
 19815   000359                     CRCCON2         equ	857	;# 
 19816   00035A                     SCANLADR        equ	858	;# 
 19817   00035A                     SCANLADRL       equ	858	;# 
 19818   00035B                     SCANLADRH       equ	859	;# 
 19819   00035C                     SCANLADRU       equ	860	;# 
 19820   00035D                     SCANHADR        equ	861	;# 
 19821   00035D                     SCANHADRL       equ	861	;# 
 19822   00035E                     SCANHADRH       equ	862	;# 
 19823   00035F                     SCANHADRU       equ	863	;# 
 19824   000360                     SCANCON0        equ	864	;# 
 19825   000361                     SCANTRIG        equ	865	;# 
 19826   000362                     IPR0            equ	866	;# 
 19827   000363                     IPR1            equ	867	;# 
 19828   000364                     IPR2            equ	868	;# 
 19829   000365                     IPR3            equ	869	;# 
 19830   000366                     IPR4            equ	870	;# 
 19831   000367                     IPR5            equ	871	;# 
 19832   000368                     IPR6            equ	872	;# 
 19833   000369                     IPR7            equ	873	;# 
 19834   00036A                     IPR8            equ	874	;# 
 19835   00036B                     IPR9            equ	875	;# 
 19836   00036C                     IPR10           equ	876	;# 
 19837   00036D                     IPR11           equ	877	;# 
 19838   00036E                     IPR12           equ	878	;# 
 19839   00036F                     IPR13           equ	879	;# 
 19840   000370                     IPR14           equ	880	;# 
 19841   000371                     IPR15           equ	881	;# 
 19842   000373                     STATUS_CSHAD    equ	883	;# 
 19843   000374                     WREG_CSHAD      equ	884	;# 
 19844   000375                     BSR_CSHAD       equ	885	;# 
 19845   000376                     SHADCON         equ	886	;# 
 19846   000377                     STATUS_SHAD     equ	887	;# 
 19847   000378                     WREG_SHAD       equ	888	;# 
 19848   000379                     BSR_SHAD        equ	889	;# 
 19849   00037A                     PCLATH_SHAD     equ	890	;# 
 19850   00037B                     PCLATU_SHAD     equ	891	;# 
 19851   00037C                     FSR0SH          equ	892	;# 
 19852   00037C                     FSR0L_SHAD      equ	892	;# 
 19853   00037D                     FSR0H_SHAD      equ	893	;# 
 19854   00037E                     FSR1SH          equ	894	;# 
 19855   00037E                     FSR1L_SHAD      equ	894	;# 
 19856   00037F                     FSR1H_SHAD      equ	895	;# 
 19857   000380                     FSR2SH          equ	896	;# 
 19858   000380                     FSR2L_SHAD      equ	896	;# 
 19859   000381                     FSR2H_SHAD      equ	897	;# 
 19860   000382                     PRODSH          equ	898	;# 
 19861   000382                     PRODL_SHAD      equ	898	;# 
 19862   000383                     PRODH_SHAD      equ	899	;# 
 19863   000387                     TU16ACON0       equ	903	;# 
 19864   000388                     TU16ACON1       equ	904	;# 
 19865   000389                     TU16AHLT        equ	905	;# 
 19866   00038A                     TU16APS         equ	906	;# 
 19867   00038B                     TU16ATMR        equ	907	;# 
 19868   00038B                     TU16ACR         equ	907	;# 
 19869   00038B                     TU16ATMRL       equ	907	;# 
 19870   00038B                     TU16ACRL        equ	907	;# 
 19871   00038C                     TU16ATMRH       equ	908	;# 
 19872   00038C                     TU16ACRH        equ	908	;# 
 19873   00038D                     TU16APR         equ	909	;# 
 19874   00038D                     TU16APRL        equ	909	;# 
 19875   00038E                     TU16APRH        equ	910	;# 
 19876   00038F                     TU16ACLK        equ	911	;# 
 19877   000390                     TU16AERS        equ	912	;# 
 19878   000393                     TU16BCON0       equ	915	;# 
 19879   000394                     TU16BCON1       equ	916	;# 
 19880   000395                     TU16BHLT        equ	917	;# 
 19881   000396                     TU16BPS         equ	918	;# 
 19882   000397                     TU16BTMR        equ	919	;# 
 19883   000397                     TU16BCR         equ	919	;# 
 19884   000397                     TU16BTMRL       equ	919	;# 
 19885   000397                     TU16BCRL        equ	919	;# 
 19886   000398                     TU16BTMRH       equ	920	;# 
 19887   000398                     TU16BCRH        equ	920	;# 
 19888   000399                     TU16BPR         equ	921	;# 
 19889   000399                     TU16BPRL        equ	921	;# 
 19890   00039A                     TU16BPRH        equ	922	;# 
 19891   00039B                     TU16BCLK        equ	923	;# 
 19892   00039C                     TU16BERS        equ	924	;# 
 19893   0003BB                     TUCHAIN         equ	955	;# 
 19894   0003BC                     CWG1CLK         equ	956	;# 
 19895   0003BC                     CWG1CLKCON      equ	956	;# 
 19896   0003BD                     CWG1ISM         equ	957	;# 
 19897   0003BE                     CWG1DBR         equ	958	;# 
 19898   0003BF                     CWG1DBF         equ	959	;# 
 19899   0003C0                     CWG1CON0        equ	960	;# 
 19900   0003C1                     CWG1CON1        equ	961	;# 
 19901   0003C2                     CWG1AS0         equ	962	;# 
 19902   0003C3                     CWG1AS1         equ	963	;# 
 19903   0003C4                     CWG1STR         equ	964	;# 
 19904   0003C5                     CWG2CLK         equ	965	;# 
 19905   0003C5                     CWG2CLKCON      equ	965	;# 
 19906   0003C6                     CWG2ISM         equ	966	;# 
 19907   0003C7                     CWG2DBR         equ	967	;# 
 19908   0003C8                     CWG2DBF         equ	968	;# 
 19909   0003C9                     CWG2CON0        equ	969	;# 
 19910   0003CA                     CWG2CON1        equ	970	;# 
 19911   0003CB                     CWG2AS0         equ	971	;# 
 19912   0003CC                     CWG2AS1         equ	972	;# 
 19913   0003CD                     CWG2STR         equ	973	;# 
 19914   0003CE                     CWG3CLK         equ	974	;# 
 19915   0003CE                     CWG3CLKCON      equ	974	;# 
 19916   0003CF                     CWG3ISM         equ	975	;# 
 19917   0003D0                     CWG3DBR         equ	976	;# 
 19918   0003D1                     CWG3DBF         equ	977	;# 
 19919   0003D2                     CWG3CON0        equ	978	;# 
 19920   0003D3                     CWG3CON1        equ	979	;# 
 19921   0003D4                     CWG3AS0         equ	980	;# 
 19922   0003D5                     CWG3AS1         equ	981	;# 
 19923   0003D6                     CWG3STR         equ	982	;# 
 19924   0003D7                     FVRCON          equ	983	;# 
 19925   0003D8                     ADCPCON         equ	984	;# 
 19926   0003D8                     ADCP            equ	984	;# 
 19927   0003D9                     ADLTH           equ	985	;# 
 19928   0003D9                     ADLTHL          equ	985	;# 
 19929   0003DA                     ADLTHH          equ	986	;# 
 19930   0003DB                     ADUTH           equ	987	;# 
 19931   0003DB                     ADUTHL          equ	987	;# 
 19932   0003DC                     ADUTHH          equ	988	;# 
 19933   0003DD                     ADERR           equ	989	;# 
 19934   0003DD                     ADERRL          equ	989	;# 
 19935   0003DE                     ADERRH          equ	990	;# 
 19936   0003DF                     ADSTPT          equ	991	;# 
 19937   0003DF                     ADSTPTL         equ	991	;# 
 19938   0003E0                     ADSTPTH         equ	992	;# 
 19939   0003E1                     ADFLTR          equ	993	;# 
 19940   0003E1                     ADFLTRL         equ	993	;# 
 19941   0003E2                     ADFLTRH         equ	994	;# 
 19942   0003E3                     ADACC           equ	995	;# 
 19943   0003E3                     ADACCL          equ	995	;# 
 19944   0003E4                     ADACCH          equ	996	;# 
 19945   0003E5                     ADACCU          equ	997	;# 
 19946   0003E6                     ADCNT           equ	998	;# 
 19947   0003E7                     ADRPT           equ	999	;# 
 19948   0003E8                     ADPREV          equ	1000	;# 
 19949   0003E8                     ADPREVL         equ	1000	;# 
 19950   0003E9                     ADPREVH         equ	1001	;# 
 19951   0003EA                     ADRES           equ	1002	;# 
 19952   0003EA                     ADRESL          equ	1002	;# 
 19953   0003EB                     ADRESH          equ	1003	;# 
 19954   0003EC                     ADPCH           equ	1004	;# 
 19955   0003EE                     ADACQ           equ	1006	;# 
 19956   0003EE                     ADACQL          equ	1006	;# 
 19957   0003EF                     ADACQH          equ	1007	;# 
 19958   0003F0                     ADCAP           equ	1008	;# 
 19959   0003F1                     ADPRE           equ	1009	;# 
 19960   0003F1                     ADPREL          equ	1009	;# 
 19961   0003F2                     ADPREH          equ	1010	;# 
 19962   0003F3                     ADCON0          equ	1011	;# 
 19963   0003F4                     ADCON1          equ	1012	;# 
 19964   0003F5                     ADCON2          equ	1013	;# 
 19965   0003F6                     ADCON3          equ	1014	;# 
 19966   0003F7                     ADSTAT          equ	1015	;# 
 19967   0003F8                     ADREF           equ	1016	;# 
 19968   0003F9                     ADACT           equ	1017	;# 
 19969   0003FA                     ADCLK           equ	1018	;# 
 19970   0003FB                     ADCTX           equ	1019	;# 
 19971   0003FC                     ADCSEL1         equ	1020	;# 
 19972   0003FD                     ADCSEL2         equ	1021	;# 
 19973   0003FE                     ADCSEL3         equ	1022	;# 
 19974   0003FF                     ADCSEL4         equ	1023	;# 
 19975   000400                     ANSELA          equ	1024	;# 
 19976   000401                     WPUA            equ	1025	;# 
 19977   000402                     ODCONA          equ	1026	;# 
 19978   000403                     SLRCONA         equ	1027	;# 
 19979   000404                     INLVLA          equ	1028	;# 
 19980   000405                     IOCAP           equ	1029	;# 
 19981   000406                     IOCAN           equ	1030	;# 
 19982   000407                     IOCAF           equ	1031	;# 
 19983   000408                     ANSELB          equ	1032	;# 
 19984   000409                     WPUB            equ	1033	;# 
 19985   00040A                     ODCONB          equ	1034	;# 
 19986   00040B                     SLRCONB         equ	1035	;# 
 19987   00040C                     INLVLB          equ	1036	;# 
 19988   00040D                     IOCBP           equ	1037	;# 
 19989   00040E                     IOCBN           equ	1038	;# 
 19990   00040F                     IOCBF           equ	1039	;# 
 19991   000410                     ANSELC          equ	1040	;# 
 19992   000411                     WPUC            equ	1041	;# 
 19993   000412                     ODCONC          equ	1042	;# 
 19994   000413                     SLRCONC         equ	1043	;# 
 19995   000414                     INLVLC          equ	1044	;# 
 19996   000415                     IOCCP           equ	1045	;# 
 19997   000416                     IOCCN           equ	1046	;# 
 19998   000417                     IOCCF           equ	1047	;# 
 19999   000421                     WPUE            equ	1057	;# 
 20000   000424                     INLVLE          equ	1060	;# 
 20001   000425                     IOCEP           equ	1061	;# 
 20002   000426                     IOCEN           equ	1062	;# 
 20003   000427                     IOCEF           equ	1063	;# 
 20004   000440                     NCO1ACC         equ	1088	;# 
 20005   000440                     NCO1ACCL        equ	1088	;# 
 20006   000441                     NCO1ACCH        equ	1089	;# 
 20007   000442                     NCO1ACCU        equ	1090	;# 
 20008   000443                     NCO1INC         equ	1091	;# 
 20009   000443                     NCO1INCL        equ	1091	;# 
 20010   000444                     NCO1INCH        equ	1092	;# 
 20011   000445                     NCO1INCU        equ	1093	;# 
 20012   000446                     NCO1CON         equ	1094	;# 
 20013   000447                     NCO1CLK         equ	1095	;# 
 20014   000448                     NCO2ACC         equ	1096	;# 
 20015   000448                     NCO2ACCL        equ	1096	;# 
 20016   000449                     NCO2ACCH        equ	1097	;# 
 20017   00044A                     NCO2ACCU        equ	1098	;# 
 20018   00044B                     NCO2INC         equ	1099	;# 
 20019   00044B                     NCO2INCL        equ	1099	;# 
 20020   00044C                     NCO2INCH        equ	1100	;# 
 20021   00044D                     NCO2INCU        equ	1101	;# 
 20022   00044E                     NCO2CON         equ	1102	;# 
 20023   00044F                     NCO2CLK         equ	1103	;# 
 20024   000450                     NCO3ACC         equ	1104	;# 
 20025   000450                     NCO3ACCL        equ	1104	;# 
 20026   000451                     NCO3ACCH        equ	1105	;# 
 20027   000452                     NCO3ACCU        equ	1106	;# 
 20028   000453                     NCO3INC         equ	1107	;# 
 20029   000453                     NCO3INCL        equ	1107	;# 
 20030   000454                     NCO3INCH        equ	1108	;# 
 20031   000455                     NCO3INCU        equ	1109	;# 
 20032   000456                     NCO3CON         equ	1110	;# 
 20033   000457                     NCO3CLK         equ	1111	;# 
 20034   000458                     FSCMCON         equ	1112	;# 
 20035   000459                     IVTLOCK         equ	1113	;# 
 20036   00045A                     IVTAD           equ	1114	;# 
 20037   00045A                     IVTADL          equ	1114	;# 
 20038   00045B                     IVTADH          equ	1115	;# 
 20039   00045C                     IVTADU          equ	1116	;# 
 20040   00045D                     IVTBASE         equ	1117	;# 
 20041   00045D                     IVTBASEL        equ	1117	;# 
 20042   00045E                     IVTBASEH        equ	1118	;# 
 20043   00045F                     IVTBASEU        equ	1119	;# 
 20044   000460                     PWM1ERS         equ	1120	;# 
 20045   000461                     PWM1CLK         equ	1121	;# 
 20046   000462                     PWM1LDS         equ	1122	;# 
 20047   000463                     PWM1PR          equ	1123	;# 
 20048   000463                     PWM1PRL         equ	1123	;# 
 20049   000464                     PWM1PRH         equ	1124	;# 
 20050   000465                     PWM1CPRE        equ	1125	;# 
 20051   000466                     PWM1PIPOS       equ	1126	;# 
 20052   000467                     PWM1GIR         equ	1127	;# 
 20053   000468                     PWM1GIE         equ	1128	;# 
 20054   000469                     PWM1CON         equ	1129	;# 
 20055   00046A                     PWM1S1CFG       equ	1130	;# 
 20056   00046B                     PWM1S1P1        equ	1131	;# 
 20057   00046B                     PWM1S1P1L       equ	1131	;# 
 20058   00046C                     PWM1S1P1H       equ	1132	;# 
 20059   00046D                     PWM1S1P2        equ	1133	;# 
 20060   00046D                     PWM1S1P2L       equ	1133	;# 
 20061   00046E                     PWM1S1P2H       equ	1134	;# 
 20062   00046F                     PWM2ERS         equ	1135	;# 
 20063   000470                     PWM2CLK         equ	1136	;# 
 20064   000471                     PWM2LDS         equ	1137	;# 
 20065   000472                     PWM2PR          equ	1138	;# 
 20066   000472                     PWM2PRL         equ	1138	;# 
 20067   000473                     PWM2PRH         equ	1139	;# 
 20068   000474                     PWM2CPRE        equ	1140	;# 
 20069   000475                     PWM2PIPOS       equ	1141	;# 
 20070   000476                     PWM2GIR         equ	1142	;# 
 20071   000477                     PWM2GIE         equ	1143	;# 
 20072   000478                     PWM2CON         equ	1144	;# 
 20073   000479                     PWM2S1CFG       equ	1145	;# 
 20074   00047A                     PWM2S1P1        equ	1146	;# 
 20075   00047A                     PWM2S1P1L       equ	1146	;# 
 20076   00047B                     PWM2S1P1H       equ	1147	;# 
 20077   00047C                     PWM2S1P2        equ	1148	;# 
 20078   00047C                     PWM2S1P2L       equ	1148	;# 
 20079   00047D                     PWM2S1P2H       equ	1149	;# 
 20080   00047E                     PWM3ERS         equ	1150	;# 
 20081   00047F                     PWM3CLK         equ	1151	;# 
 20082   000480                     PWM3LDS         equ	1152	;# 
 20083   000481                     PWM3PR          equ	1153	;# 
 20084   000481                     PWM3PRL         equ	1153	;# 
 20085   000482                     PWM3PRH         equ	1154	;# 
 20086   000483                     PWM3CPRE        equ	1155	;# 
 20087   000484                     PWM3PIPOS       equ	1156	;# 
 20088   000485                     PWM3GIR         equ	1157	;# 
 20089   000486                     PWM3GIE         equ	1158	;# 
 20090   000487                     PWM3CON         equ	1159	;# 
 20091   000488                     PWM3S1CFG       equ	1160	;# 
 20092   000489                     PWM3S1P1        equ	1161	;# 
 20093   000489                     PWM3S1P1L       equ	1161	;# 
 20094   00048A                     PWM3S1P1H       equ	1162	;# 
 20095   00048B                     PWM3S1P2        equ	1163	;# 
 20096   00048B                     PWM3S1P2L       equ	1163	;# 
 20097   00048C                     PWM3S1P2H       equ	1164	;# 
 20098   00048D                     PWM4ERS         equ	1165	;# 
 20099   00048E                     PWM4CLK         equ	1166	;# 
 20100   00048F                     PWM4LDS         equ	1167	;# 
 20101   000490                     PWM4PR          equ	1168	;# 
 20102   000490                     PWM4PRL         equ	1168	;# 
 20103   000491                     PWM4PRH         equ	1169	;# 
 20104   000492                     PWM4CPRE        equ	1170	;# 
 20105   000493                     PWM4PIPOS       equ	1171	;# 
 20106   000494                     PWM4GIR         equ	1172	;# 
 20107   000495                     PWM4GIE         equ	1173	;# 
 20108   000496                     PWM4CON         equ	1174	;# 
 20109   000497                     PWM4S1CFG       equ	1175	;# 
 20110   000498                     PWM4S1P1        equ	1176	;# 
 20111   000498                     PWM4S1P1L       equ	1176	;# 
 20112   000499                     PWM4S1P1H       equ	1177	;# 
 20113   00049A                     PWM4S1P2        equ	1178	;# 
 20114   00049A                     PWM4S1P2L       equ	1178	;# 
 20115   00049B                     PWM4S1P2H       equ	1179	;# 
 20116   00049C                     PWMLOAD         equ	1180	;# 
 20117   00049D                     PWMEN           equ	1181	;# 
 20118   00049E                     PIE0            equ	1182	;# 
 20119   00049F                     PIE1            equ	1183	;# 
 20120   0004A0                     PIE2            equ	1184	;# 
 20121   0004A1                     PIE3            equ	1185	;# 
 20122   0004A2                     PIE4            equ	1186	;# 
 20123   0004A3                     PIE5            equ	1187	;# 
 20124   0004A4                     PIE6            equ	1188	;# 
 20125   0004A5                     PIE7            equ	1189	;# 
 20126   0004A6                     PIE8            equ	1190	;# 
 20127   0004A7                     PIE9            equ	1191	;# 
 20128   0004A8                     PIE10           equ	1192	;# 
 20129   0004A9                     PIE11           equ	1193	;# 
 20130   0004AA                     PIE12           equ	1194	;# 
 20131   0004AB                     PIE13           equ	1195	;# 
 20132   0004AC                     PIE14           equ	1196	;# 
 20133   0004AD                     PIE15           equ	1197	;# 
 20134   0004AE                     PIR0            equ	1198	;# 
 20135   0004AF                     PIR1            equ	1199	;# 
 20136   0004B0                     PIR2            equ	1200	;# 
 20137   0004B1                     PIR3            equ	1201	;# 
 20138   0004B2                     PIR4            equ	1202	;# 
 20139   0004B3                     PIR5            equ	1203	;# 
 20140   0004B4                     PIR6            equ	1204	;# 
 20141   0004B5                     PIR7            equ	1205	;# 
 20142   0004B6                     PIR8            equ	1206	;# 
 20143   0004B7                     PIR9            equ	1207	;# 
 20144   0004B8                     PIR10           equ	1208	;# 
 20145   0004B9                     PIR11           equ	1209	;# 
 20146   0004BA                     PIR12           equ	1210	;# 
 20147   0004BB                     PIR13           equ	1211	;# 
 20148   0004BC                     PIR14           equ	1212	;# 
 20149   0004BD                     PIR15           equ	1213	;# 
 20150   0004BE                     LATA            equ	1214	;# 
 20151   0004BF                     LATB            equ	1215	;# 
 20152   0004C0                     LATC            equ	1216	;# 
 20153   0004C6                     TRISA           equ	1222	;# 
 20154   0004C7                     TRISB           equ	1223	;# 
 20155   0004C8                     TRISC           equ	1224	;# 
 20156   0004CA                     TRISE           equ	1226	;# 
 20157   0004CE                     PORTA           equ	1230	;# 
 20158   0004CF                     PORTB           equ	1231	;# 
 20159   0004D0                     PORTC           equ	1232	;# 
 20160   0004D2                     PORTE           equ	1234	;# 
 20161   0004D6                     INTCON0         equ	1238	;# 
 20162   0004D7                     INTCON1         equ	1239	;# 
 20163   0004D8                     STATUS          equ	1240	;# 
 20164   0004D9                     FSR2            equ	1241	;# 
 20165   0004D9                     FSR2L           equ	1241	;# 
 20166   0004DA                     FSR2H           equ	1242	;# 
 20167   0004DB                     PLUSW2          equ	1243	;# 
 20168   0004DC                     PREINC2         equ	1244	;# 
 20169   0004DD                     POSTDEC2        equ	1245	;# 
 20170   0004DE                     POSTINC2        equ	1246	;# 
 20171   0004DF                     INDF2           equ	1247	;# 
 20172   0004E0                     BSR             equ	1248	;# 
 20173   0004E1                     FSR1            equ	1249	;# 
 20174   0004E1                     FSR1L           equ	1249	;# 
 20175   0004E2                     FSR1H           equ	1250	;# 
 20176   0004E3                     PLUSW1          equ	1251	;# 
 20177   0004E4                     PREINC1         equ	1252	;# 
 20178   0004E5                     POSTDEC1        equ	1253	;# 
 20179   0004E6                     POSTINC1        equ	1254	;# 
 20180   0004E7                     INDF1           equ	1255	;# 
 20181   0004E8                     WREG            equ	1256	;# 
 20182   0004E9                     FSR0            equ	1257	;# 
 20183   0004E9                     FSR0L           equ	1257	;# 
 20184   0004EA                     FSR0H           equ	1258	;# 
 20185   0004EB                     PLUSW0          equ	1259	;# 
 20186   0004EC                     PREINC0         equ	1260	;# 
 20187   0004ED                     POSTDEC0        equ	1261	;# 
 20188   0004EE                     POSTINC0        equ	1262	;# 
 20189   0004EF                     INDF0           equ	1263	;# 
 20190   0004F0                     PCON0           equ	1264	;# 
 20191   0004F1                     PCON1           equ	1265	;# 
 20192   0004F2                     CPUDOZE         equ	1266	;# 
 20193   0004F3                     PROD            equ	1267	;# 
 20194   0004F3                     PRODL           equ	1267	;# 
 20195   0004F4                     PRODH           equ	1268	;# 
 20196   0004F5                     TABLAT          equ	1269	;# 
 20197   0004F6                     TBLPTR          equ	1270	;# 
 20198   0004F6                     TBLPTRL         equ	1270	;# 
 20199   0004F7                     TBLPTRH         equ	1271	;# 
 20200   0004F8                     TBLPTRU         equ	1272	;# 
 20201   0004F9                     PCLAT           equ	1273	;# 
 20202   0004F9                     PCL             equ	1273	;# 
 20203   0004FA                     PCLATH          equ	1274	;# 
 20204   0004FB                     PCLATU          equ	1275	;# 
 20205   0004FC                     STKPTR          equ	1276	;# 
 20206   0004FD                     TOS             equ	1277	;# 
 20207   0004FD                     TOSL            equ	1277	;# 
 20208   0004FE                     TOSH            equ	1278	;# 
 20209   0004FF                     TOSU            equ	1279	;# 
 20210   000038                     BOOTREG         equ	56	;# 
 20211   000039                     CLKRCON         equ	57	;# 
 20212   00003A                     CLKRCLK         equ	58	;# 
 20213   000040                     NVMCON0         equ	64	;# 
 20214   000041                     NVMCON1         equ	65	;# 
 20215   000042                     NVMLOCK         equ	66	;# 
 20216   000043                     NVMADR          equ	67	;# 
 20217   000043                     NVMADRL         equ	67	;# 
 20218   000044                     NVMADRH         equ	68	;# 
 20219   000045                     NVMADRU         equ	69	;# 
 20220   000046                     NVMDAT          equ	70	;# 
 20221   000046                     NVMDATL         equ	70	;# 
 20222   000047                     NVMDATH         equ	71	;# 
 20223   000048                     VREGCON         equ	72	;# 
 20224   000049                     BORCON          equ	73	;# 
 20225   00004A                     HLVDCON0        equ	74	;# 
 20226   00004B                     HLVDCON1        equ	75	;# 
 20227   00004C                     ZCDCON          equ	76	;# 
 20228   000060                     PMD0            equ	96	;# 
 20229   000061                     PMD1            equ	97	;# 
 20230   000062                     PMD2            equ	98	;# 
 20231   000063                     PMD3            equ	99	;# 
 20232   000064                     PMD4            equ	100	;# 
 20233   000065                     PMD5            equ	101	;# 
 20234   000066                     PMD6            equ	102	;# 
 20235   000067                     PMD7            equ	103	;# 
 20236   000068                     PMD8            equ	104	;# 
 20237   00006A                     MD1CON0         equ	106	;# 
 20238   00006B                     MD1CON1         equ	107	;# 
 20239   00006C                     MD1SRC          equ	108	;# 
 20240   00006D                     MD1CARL         equ	109	;# 
 20241   00006E                     MD1CARH         equ	110	;# 
 20242   00006F                     CMOUT           equ	111	;# 
 20243   000070                     CM1CON0         equ	112	;# 
 20244   000071                     CM1CON1         equ	113	;# 
 20245   000072                     CM1NCH          equ	114	;# 
 20246   000073                     CM1PCH          equ	115	;# 
 20247   000074                     CM2CON0         equ	116	;# 
 20248   000075                     CM2CON1         equ	117	;# 
 20249   000076                     CM2NCH          equ	118	;# 
 20250   000077                     CM2PCH          equ	119	;# 
 20251   000078                     WDTCON0         equ	120	;# 
 20252   000079                     WDTCON1         equ	121	;# 
 20253   00007A                     WDTPSL          equ	122	;# 
 20254   00007B                     WDTPSH          equ	123	;# 
 20255   00007C                     WDTTMR          equ	124	;# 
 20256   00007D                     DAC1DAT         equ	125	;# 
 20257   00007D                     DAC1DATL        equ	125	;# 
 20258   00007F                     DAC1CON         equ	127	;# 
 20259   000080                     SPI1RXB         equ	128	;# 
 20260   000081                     SPI1TXB         equ	129	;# 
 20261   000082                     SPI1TCNT        equ	130	;# 
 20262   000082                     SPI1TCNTL       equ	130	;# 
 20263   000083                     SPI1TCNTH       equ	131	;# 
 20264   000084                     SPI1CON0        equ	132	;# 
 20265   000085                     SPI1CON1        equ	133	;# 
 20266   000086                     SPI1CON2        equ	134	;# 
 20267   000087                     SPI1STATUS      equ	135	;# 
 20268   000088                     SPI1TWIDTH      equ	136	;# 
 20269   000089                     SPI1BAUD        equ	137	;# 
 20270   00008A                     SPI1INTF        equ	138	;# 
 20271   00008B                     SPI1INTE        equ	139	;# 
 20272   00008C                     SPI1CLK         equ	140	;# 
 20273   00008D                     SPI2RXB         equ	141	;# 
 20274   00008E                     SPI2TXB         equ	142	;# 
 20275   00008F                     SPI2TCNT        equ	143	;# 
 20276   00008F                     SPI2TCNTL       equ	143	;# 
 20277   000090                     SPI2TCNTH       equ	144	;# 
 20278   000091                     SPI2CON0        equ	145	;# 
 20279   000092                     SPI2CON1        equ	146	;# 
 20280   000093                     SPI2CON2        equ	147	;# 
 20281   000094                     SPI2STATUS      equ	148	;# 
 20282   000095                     SPI2TWIDTH      equ	149	;# 
 20283   000096                     SPI2BAUD        equ	150	;# 
 20284   000097                     SPI2INTF        equ	151	;# 
 20285   000098                     SPI2INTE        equ	152	;# 
 20286   000099                     SPI2CLK         equ	153	;# 
 20287   0000AC                     ACTCON          equ	172	;# 
 20288   0000AD                     OSCCON1         equ	173	;# 
 20289   0000AE                     OSCCON2         equ	174	;# 
 20290   0000AF                     OSCCON3         equ	175	;# 
 20291   0000B0                     OSCTUNE         equ	176	;# 
 20292   0000B1                     OSCFRQ          equ	177	;# 
 20293   0000B1                     OSCFREQ         equ	177	;# 
 20294   0000B2                     OSCSTAT         equ	178	;# 
 20295   0000B2                     OSCSTAT1        equ	178	;# 
 20296   0000B3                     OSCEN           equ	179	;# 
 20297   0000B4                     PRLOCK          equ	180	;# 
 20298   0000B5                     SCANPR          equ	181	;# 
 20299   0000B6                     DMA1PR          equ	182	;# 
 20300   0000B7                     DMA2PR          equ	183	;# 
 20301   0000B8                     DMA3PR          equ	184	;# 
 20302   0000B9                     DMA4PR          equ	185	;# 
 20303   0000BA                     DMA5PR          equ	186	;# 
 20304   0000BB                     DMA6PR          equ	187	;# 
 20305   0000BC                     DMA7PR          equ	188	;# 
 20306   0000BD                     DMA8PR          equ	189	;# 
 20307   0000BE                     MAINPR          equ	190	;# 
 20308   0000BF                     ISRPR           equ	191	;# 
 20309   0000D4                     CLCDATA         equ	212	;# 
 20310   0000D5                     CLCSELECT       equ	213	;# 
 20311   0000D6                     CLCnCON         equ	214	;# 
 20312   0000D7                     CLCnPOL         equ	215	;# 
 20313   0000D8                     CLCnSEL0        equ	216	;# 
 20314   0000D9                     CLCnSEL1        equ	217	;# 
 20315   0000DA                     CLCnSEL2        equ	218	;# 
 20316   0000DB                     CLCnSEL3        equ	219	;# 
 20317   0000DC                     CLCnGLS0        equ	220	;# 
 20318   0000DD                     CLCnGLS1        equ	221	;# 
 20319   0000DE                     CLCnGLS2        equ	222	;# 
 20320   0000DF                     CLCnGLS3        equ	223	;# 
 20321   0000E8                     DMASELECT       equ	232	;# 
 20322   0000E9                     DMAnBUF         equ	233	;# 
 20323   0000EA                     DMAnDCNT        equ	234	;# 
 20324   0000EA                     DMAnDCNTL       equ	234	;# 
 20325   0000EB                     DMAnDCNTH       equ	235	;# 
 20326   0000EC                     DMAnDPTR        equ	236	;# 
 20327   0000EC                     DMAnDPTRL       equ	236	;# 
 20328   0000ED                     DMAnDPTRH       equ	237	;# 
 20329   0000EE                     DMAnDSZ         equ	238	;# 
 20330   0000EE                     DMAnDSZL        equ	238	;# 
 20331   0000EF                     DMAnDSZH        equ	239	;# 
 20332   0000F0                     DMAnDSA         equ	240	;# 
 20333   0000F0                     DMAnDSAL        equ	240	;# 
 20334   0000F1                     DMAnDSAH        equ	241	;# 
 20335   0000F2                     DMAnSCNT        equ	242	;# 
 20336   0000F2                     DMAnSCNTL       equ	242	;# 
 20337   0000F3                     DMAnSCNTH       equ	243	;# 
 20338   0000F4                     DMAnSPTR        equ	244	;# 
 20339   0000F4                     DMAnSPTRL       equ	244	;# 
 20340   0000F5                     DMAnSPTRH       equ	245	;# 
 20341   0000F6                     DMAnSPTRU       equ	246	;# 
 20342   0000F7                     DMAnSSZ         equ	247	;# 
 20343   0000F7                     DMAnSSZL        equ	247	;# 
 20344   0000F8                     DMAnSSZH        equ	248	;# 
 20345   0000F9                     DMAnSSA         equ	249	;# 
 20346   0000F9                     DMAnSSAL        equ	249	;# 
 20347   0000FA                     DMAnSSAH        equ	250	;# 
 20348   0000FB                     DMAnSSAU        equ	251	;# 
 20349   0000FC                     DMAnCON0        equ	252	;# 
 20350   0000FD                     DMAnCON1        equ	253	;# 
 20351   0000FE                     DMAnAIRQ        equ	254	;# 
 20352   0000FF                     DMAnSIRQ        equ	255	;# 
 20353   000100                     C1CONL          equ	256	;# 
 20354   000101                     C1CONH          equ	257	;# 
 20355   000102                     C1CONU          equ	258	;# 
 20356   000103                     C1CONT          equ	259	;# 
 20357   000104                     C1NBTCFGL       equ	260	;# 
 20358   000105                     C1NBTCFGH       equ	261	;# 
 20359   000106                     C1NBTCFGU       equ	262	;# 
 20360   000107                     C1NBTCFGT       equ	263	;# 
 20361   000108                     C1DBTCFGL       equ	264	;# 
 20362   000109                     C1DBTCFGH       equ	265	;# 
 20363   00010A                     C1DBTCFGU       equ	266	;# 
 20364   00010B                     C1DBTCFGT       equ	267	;# 
 20365   00010C                     C1TDCL          equ	268	;# 
 20366   00010D                     C1TDCH          equ	269	;# 
 20367   00010E                     C1TDCU          equ	270	;# 
 20368   000110                     C1TBC           equ	272	;# 
 20369   000110                     C1TBCL          equ	272	;# 
 20370   000111                     C1TBCH          equ	273	;# 
 20371   000112                     C1TBCU          equ	274	;# 
 20372   000113                     C1TBCT          equ	275	;# 
 20373   000114                     C1TSCONL        equ	276	;# 
 20374   000115                     C1TSCONH        equ	277	;# 
 20375   000116                     C1TSCONU        equ	278	;# 
 20376   000117                     C1TSCONT        equ	279	;# 
 20377   000118                     C1VECL          equ	280	;# 
 20378   000119                     C1VECH          equ	281	;# 
 20379   00011A                     C1VECU          equ	282	;# 
 20380   00011B                     C1VECT          equ	283	;# 
 20381   00011C                     C1INTL          equ	284	;# 
 20382   00011D                     C1INTH          equ	285	;# 
 20383   00011E                     C1INTU          equ	286	;# 
 20384   00011F                     C1INTT          equ	287	;# 
 20385   000120                     C1RXIF          equ	288	;# 
 20386   000120                     C1RXIFL         equ	288	;# 
 20387   000121                     C1RXIFH         equ	289	;# 
 20388   000122                     C1RXIFU         equ	290	;# 
 20389   000123                     C1RXIFT         equ	291	;# 
 20390   000124                     C1TXIF          equ	292	;# 
 20391   000124                     C1TXIFL         equ	292	;# 
 20392   000125                     C1TXIFH         equ	293	;# 
 20393   000126                     C1TXIFU         equ	294	;# 
 20394   000127                     C1TXIFT         equ	295	;# 
 20395   000128                     C1RXOVIF        equ	296	;# 
 20396   000128                     C1RXOVIFL       equ	296	;# 
 20397   000129                     C1RXOVIFH       equ	297	;# 
 20398   00012A                     C1RXOVIFU       equ	298	;# 
 20399   00012B                     C1RXOVIFT       equ	299	;# 
 20400   00012C                     C1TXATIF        equ	300	;# 
 20401   00012C                     C1TXATIFL       equ	300	;# 
 20402   00012D                     C1TXATIFH       equ	301	;# 
 20403   00012E                     C1TXATIFU       equ	302	;# 
 20404   00012F                     C1TXATIFT       equ	303	;# 
 20405   000130                     C1TXREQ         equ	304	;# 
 20406   000130                     C1TXREQL        equ	304	;# 
 20407   000131                     C1TXREQH        equ	305	;# 
 20408   000132                     C1TXREQU        equ	306	;# 
 20409   000133                     C1TXREQT        equ	307	;# 
 20410   000134                     C1TRECL         equ	308	;# 
 20411   000135                     C1TRECH         equ	309	;# 
 20412   000136                     C1TRECU         equ	310	;# 
 20413   000137                     C1TRECT         equ	311	;# 
 20414   000138                     C1BDIAG0L       equ	312	;# 
 20415   000139                     C1BDIAG0H       equ	313	;# 
 20416   00013C                     C1BDIAG1L       equ	316	;# 
 20417   00013D                     C1BDIAG1H       equ	317	;# 
 20418   00013E                     C1BDIAG1U       equ	318	;# 
 20419   00013F                     C1BDIAG1T       equ	319	;# 
 20420   000140                     C1TEFCONL       equ	320	;# 
 20421   000141                     C1TEFCONH       equ	321	;# 
 20422   000142                     C1TEFCONU       equ	322	;# 
 20423   000143                     C1TEFCONT       equ	323	;# 
 20424   000144                     C1TEFSTAL       equ	324	;# 
 20425   000145                     C1TEFSTAH       equ	325	;# 
 20426   000146                     C1TEFSTAU       equ	326	;# 
 20427   000147                     C1TEFSTAT       equ	327	;# 
 20428   000148                     C1TEFUA         equ	328	;# 
 20429   000148                     C1TEFUAL        equ	328	;# 
 20430   000149                     C1TEFUAH        equ	329	;# 
 20431   00014A                     C1TEFUAU        equ	330	;# 
 20432   00014B                     C1TEFUAT        equ	331	;# 
 20433   00014C                     C1FIFOBA        equ	332	;# 
 20434   00014C                     C1FIFOBAL       equ	332	;# 
 20435   00014D                     C1FIFOBAH       equ	333	;# 
 20436   00014E                     C1FIFOBAU       equ	334	;# 
 20437   00014F                     C1FIFOBAT       equ	335	;# 
 20438   000150                     C1TXQCONL       equ	336	;# 
 20439   000151                     C1TXQCONH       equ	337	;# 
 20440   000152                     C1TXQCONU       equ	338	;# 
 20441   000153                     C1TXQCONT       equ	339	;# 
 20442   000154                     C1TXQSTAL       equ	340	;# 
 20443   000155                     C1TXQSTAH       equ	341	;# 
 20444   000156                     C1TXQSTAU       equ	342	;# 
 20445   000157                     C1TXQSTAT       equ	343	;# 
 20446   000158                     C1TXQUA         equ	344	;# 
 20447   000158                     C1TXQUAL        equ	344	;# 
 20448   000159                     C1TXQUAH        equ	345	;# 
 20449   00015A                     C1TXQUAU        equ	346	;# 
 20450   00015B                     C1TXQUAT        equ	347	;# 
 20451   00015C                     C1FIFOCON1      equ	348	;# 
 20452   00015C                     C1FIFOCON1L     equ	348	;# 
 20453   00015D                     C1FIFOCON1H     equ	349	;# 
 20454   00015E                     C1FIFOCON1U     equ	350	;# 
 20455   00015F                     C1FIFOCON1T     equ	351	;# 
 20456   000160                     C1FIFOSTA1      equ	352	;# 
 20457   000160                     C1FIFOSTA1L     equ	352	;# 
 20458   000161                     C1FIFOSTA1H     equ	353	;# 
 20459   000162                     C1FIFOSTA1U     equ	354	;# 
 20460   000163                     C1FIFOSTA1T     equ	355	;# 
 20461   000164                     C1FIFOUA1       equ	356	;# 
 20462   000164                     C1FIFOUA1L      equ	356	;# 
 20463   000165                     C1FIFOUA1H      equ	357	;# 
 20464   000166                     C1FIFOUA1U      equ	358	;# 
 20465   000167                     C1FIFOUA1T      equ	359	;# 
 20466   000168                     C1FIFOCON2      equ	360	;# 
 20467   000168                     C1FIFOCON2L     equ	360	;# 
 20468   000169                     C1FIFOCON2H     equ	361	;# 
 20469   00016A                     C1FIFOCON2U     equ	362	;# 
 20470   00016B                     C1FIFOCON2T     equ	363	;# 
 20471   00016C                     C1FIFOSTA2      equ	364	;# 
 20472   00016C                     C1FIFOSTA2L     equ	364	;# 
 20473   00016D                     C1FIFOSTA2H     equ	365	;# 
 20474   00016E                     C1FIFOSTA2U     equ	366	;# 
 20475   00016F                     C1FIFOSTA2T     equ	367	;# 
 20476   000170                     C1FIFOUA2       equ	368	;# 
 20477   000170                     C1FIFOUA2L      equ	368	;# 
 20478   000171                     C1FIFOUA2H      equ	369	;# 
 20479   000172                     C1FIFOUA2U      equ	370	;# 
 20480   000173                     C1FIFOUA2T      equ	371	;# 
 20481   000174                     C1FIFOCON3      equ	372	;# 
 20482   000174                     C1FIFOCON3L     equ	372	;# 
 20483   000175                     C1FIFOCON3H     equ	373	;# 
 20484   000176                     C1FIFOCON3U     equ	374	;# 
 20485   000177                     C1FIFOCON3T     equ	375	;# 
 20486   000178                     C1FIFOSTA3      equ	376	;# 
 20487   000178                     C1FIFOSTA3L     equ	376	;# 
 20488   000179                     C1FIFOSTA3H     equ	377	;# 
 20489   00017A                     C1FIFOSTA3U     equ	378	;# 
 20490   00017B                     C1FIFOSTA3T     equ	379	;# 
 20491   00017C                     C1FIFOUA3       equ	380	;# 
 20492   00017C                     C1FIFOUA3L      equ	380	;# 
 20493   00017D                     C1FIFOUA3H      equ	381	;# 
 20494   00017E                     C1FIFOUA3U      equ	382	;# 
 20495   00017F                     C1FIFOUA3T      equ	383	;# 
 20496   000180                     C1FLTCON0L      equ	384	;# 
 20497   000181                     C1FLTCON0H      equ	385	;# 
 20498   000182                     C1FLTCON0U      equ	386	;# 
 20499   000183                     C1FLTCON0T      equ	387	;# 
 20500   000184                     C1FLTCON1L      equ	388	;# 
 20501   000185                     C1FLTCON1H      equ	389	;# 
 20502   000186                     C1FLTCON1U      equ	390	;# 
 20503   000187                     C1FLTCON1T      equ	391	;# 
 20504   000188                     C1FLTCON2L      equ	392	;# 
 20505   000189                     C1FLTCON2H      equ	393	;# 
 20506   00018A                     C1FLTCON2U      equ	394	;# 
 20507   00018B                     C1FLTCON2T      equ	395	;# 
 20508   00018C                     C1FLTOBJ0       equ	396	;# 
 20509   00018C                     C1FLTOBJ0L      equ	396	;# 
 20510   00018D                     C1FLTOBJ0H      equ	397	;# 
 20511   00018E                     C1FLTOBJ0U      equ	398	;# 
 20512   00018F                     C1FLTOBJ0T      equ	399	;# 
 20513   000190                     C1MASK0         equ	400	;# 
 20514   000190                     C1MASK0L        equ	400	;# 
 20515   000191                     C1MASK0H        equ	401	;# 
 20516   000192                     C1MASK0U        equ	402	;# 
 20517   000193                     C1MASK0T        equ	403	;# 
 20518   000194                     C1FLTOBJ1       equ	404	;# 
 20519   000194                     C1FLTOBJ1L      equ	404	;# 
 20520   000195                     C1FLTOBJ1H      equ	405	;# 
 20521   000196                     C1FLTOBJ1U      equ	406	;# 
 20522   000197                     C1FLTOBJ1T      equ	407	;# 
 20523   000198                     C1MASK1         equ	408	;# 
 20524   000198                     C1MASK1L        equ	408	;# 
 20525   000199                     C1MASK1H        equ	409	;# 
 20526   00019A                     C1MASK1U        equ	410	;# 
 20527   00019B                     C1MASK1T        equ	411	;# 
 20528   00019C                     C1FLTOBJ2       equ	412	;# 
 20529   00019C                     C1FLTOBJ2L      equ	412	;# 
 20530   00019D                     C1FLTOBJ2H      equ	413	;# 
 20531   00019E                     C1FLTOBJ2U      equ	414	;# 
 20532   00019F                     C1FLTOBJ2T      equ	415	;# 
 20533   0001A0                     C1MASK2         equ	416	;# 
 20534   0001A0                     C1MASK2L        equ	416	;# 
 20535   0001A1                     C1MASK2H        equ	417	;# 
 20536   0001A2                     C1MASK2U        equ	418	;# 
 20537   0001A3                     C1MASK2T        equ	419	;# 
 20538   0001A4                     C1FLTOBJ3       equ	420	;# 
 20539   0001A4                     C1FLTOBJ3L      equ	420	;# 
 20540   0001A5                     C1FLTOBJ3H      equ	421	;# 
 20541   0001A6                     C1FLTOBJ3U      equ	422	;# 
 20542   0001A7                     C1FLTOBJ3T      equ	423	;# 
 20543   0001A8                     C1MASK3         equ	424	;# 
 20544   0001A8                     C1MASK3L        equ	424	;# 
 20545   0001A9                     C1MASK3H        equ	425	;# 
 20546   0001AA                     C1MASK3U        equ	426	;# 
 20547   0001AB                     C1MASK3T        equ	427	;# 
 20548   0001AC                     C1FLTOBJ4       equ	428	;# 
 20549   0001AC                     C1FLTOBJ4L      equ	428	;# 
 20550   0001AD                     C1FLTOBJ4H      equ	429	;# 
 20551   0001AE                     C1FLTOBJ4U      equ	430	;# 
 20552   0001AF                     C1FLTOBJ4T      equ	431	;# 
 20553   0001B0                     C1MASK4         equ	432	;# 
 20554   0001B0                     C1MASK4L        equ	432	;# 
 20555   0001B1                     C1MASK4H        equ	433	;# 
 20556   0001B2                     C1MASK4U        equ	434	;# 
 20557   0001B3                     C1MASK4T        equ	435	;# 
 20558   0001B4                     C1FLTOBJ5       equ	436	;# 
 20559   0001B4                     C1FLTOBJ5L      equ	436	;# 
 20560   0001B5                     C1FLTOBJ5H      equ	437	;# 
 20561   0001B6                     C1FLTOBJ5U      equ	438	;# 
 20562   0001B7                     C1FLTOBJ5T      equ	439	;# 
 20563   0001B8                     C1MASK5         equ	440	;# 
 20564   0001B8                     C1MASK5L        equ	440	;# 
 20565   0001B9                     C1MASK5H        equ	441	;# 
 20566   0001BA                     C1MASK5U        equ	442	;# 
 20567   0001BB                     C1MASK5T        equ	443	;# 
 20568   0001BC                     C1FLTOBJ6       equ	444	;# 
 20569   0001BC                     C1FLTOBJ6L      equ	444	;# 
 20570   0001BD                     C1FLTOBJ6H      equ	445	;# 
 20571   0001BE                     C1FLTOBJ6U      equ	446	;# 
 20572   0001BF                     C1FLTOBJ6T      equ	447	;# 
 20573   0001C0                     C1MASK6         equ	448	;# 
 20574   0001C0                     C1MASK6L        equ	448	;# 
 20575   0001C1                     C1MASK6H        equ	449	;# 
 20576   0001C2                     C1MASK6U        equ	450	;# 
 20577   0001C3                     C1MASK6T        equ	451	;# 
 20578   0001C4                     C1FLTOBJ7       equ	452	;# 
 20579   0001C4                     C1FLTOBJ7L      equ	452	;# 
 20580   0001C5                     C1FLTOBJ7H      equ	453	;# 
 20581   0001C6                     C1FLTOBJ7U      equ	454	;# 
 20582   0001C7                     C1FLTOBJ7T      equ	455	;# 
 20583   0001C8                     C1MASK7         equ	456	;# 
 20584   0001C8                     C1MASK7L        equ	456	;# 
 20585   0001C9                     C1MASK7H        equ	457	;# 
 20586   0001CA                     C1MASK7U        equ	458	;# 
 20587   0001CB                     C1MASK7T        equ	459	;# 
 20588   0001CC                     C1FLTOBJ8       equ	460	;# 
 20589   0001CC                     C1FLTOBJ8L      equ	460	;# 
 20590   0001CD                     C1FLTOBJ8H      equ	461	;# 
 20591   0001CE                     C1FLTOBJ8U      equ	462	;# 
 20592   0001CF                     C1FLTOBJ8T      equ	463	;# 
 20593   0001D0                     C1MASK8         equ	464	;# 
 20594   0001D0                     C1MASK8L        equ	464	;# 
 20595   0001D1                     C1MASK8H        equ	465	;# 
 20596   0001D2                     C1MASK8U        equ	466	;# 
 20597   0001D3                     C1MASK8T        equ	467	;# 
 20598   0001D4                     C1FLTOBJ9       equ	468	;# 
 20599   0001D4                     C1FLTOBJ9L      equ	468	;# 
 20600   0001D5                     C1FLTOBJ9H      equ	469	;# 
 20601   0001D6                     C1FLTOBJ9U      equ	470	;# 
 20602   0001D7                     C1FLTOBJ9T      equ	471	;# 
 20603   0001D8                     C1MASK9         equ	472	;# 
 20604   0001D8                     C1MASK9L        equ	472	;# 
 20605   0001D9                     C1MASK9H        equ	473	;# 
 20606   0001DA                     C1MASK9U        equ	474	;# 
 20607   0001DB                     C1MASK9T        equ	475	;# 
 20608   0001DC                     C1FLTOBJ10      equ	476	;# 
 20609   0001DC                     C1FLTOBJ10L     equ	476	;# 
 20610   0001DD                     C1FLTOBJ10H     equ	477	;# 
 20611   0001DE                     C1FLTOBJ10U     equ	478	;# 
 20612   0001DF                     C1FLTOBJ10T     equ	479	;# 
 20613   0001E0                     C1MASK10        equ	480	;# 
 20614   0001E0                     C1MASK10L       equ	480	;# 
 20615   0001E1                     C1MASK10H       equ	481	;# 
 20616   0001E2                     C1MASK10U       equ	482	;# 
 20617   0001E3                     C1MASK10T       equ	483	;# 
 20618   0001E4                     C1FLTOBJ11      equ	484	;# 
 20619   0001E4                     C1FLTOBJ11L     equ	484	;# 
 20620   0001E5                     C1FLTOBJ11H     equ	485	;# 
 20621   0001E6                     C1FLTOBJ11U     equ	486	;# 
 20622   0001E7                     C1FLTOBJ11T     equ	487	;# 
 20623   0001E8                     C1MASK11        equ	488	;# 
 20624   0001E8                     C1MASK11L       equ	488	;# 
 20625   0001E9                     C1MASK11H       equ	489	;# 
 20626   0001EA                     C1MASK11U       equ	490	;# 
 20627   0001EB                     C1MASK11T       equ	491	;# 
 20628   000200                     PPSLOCK         equ	512	;# 
 20629   000201                     RA0PPS          equ	513	;# 
 20630   000202                     RA1PPS          equ	514	;# 
 20631   000203                     RA2PPS          equ	515	;# 
 20632   000204                     RA3PPS          equ	516	;# 
 20633   000205                     RA4PPS          equ	517	;# 
 20634   000206                     RA5PPS          equ	518	;# 
 20635   000207                     RA6PPS          equ	519	;# 
 20636   000208                     RA7PPS          equ	520	;# 
 20637   000209                     RB0PPS          equ	521	;# 
 20638   00020A                     RB1PPS          equ	522	;# 
 20639   00020B                     RB2PPS          equ	523	;# 
 20640   00020C                     RB3PPS          equ	524	;# 
 20641   00020D                     RB4PPS          equ	525	;# 
 20642   00020E                     RB5PPS          equ	526	;# 
 20643   00020F                     RB6PPS          equ	527	;# 
 20644   000210                     RB7PPS          equ	528	;# 
 20645   000211                     RC0PPS          equ	529	;# 
 20646   000212                     RC1PPS          equ	530	;# 
 20647   000213                     RC2PPS          equ	531	;# 
 20648   000214                     RC3PPS          equ	532	;# 
 20649   000215                     RC4PPS          equ	533	;# 
 20650   000216                     RC5PPS          equ	534	;# 
 20651   000217                     RC6PPS          equ	535	;# 
 20652   000218                     RC7PPS          equ	536	;# 
 20653   00023D                     CANRXPPS        equ	573	;# 
 20654   00023E                     INT0PPS         equ	574	;# 
 20655   00023F                     INT1PPS         equ	575	;# 
 20656   000240                     INT2PPS         equ	576	;# 
 20657   000241                     T0CKIPPS        equ	577	;# 
 20658   000242                     T1CKIPPS        equ	578	;# 
 20659   000243                     T1GPPS          equ	579	;# 
 20660   000244                     T3CKIPPS        equ	580	;# 
 20661   000245                     T3GPPS          equ	581	;# 
 20662   000246                     T5CKIPPS        equ	582	;# 
 20663   000247                     T5GPPS          equ	583	;# 
 20664   000248                     T2INPPS         equ	584	;# 
 20665   000249                     T4INPPS         equ	585	;# 
 20666   00024A                     T6INPPS         equ	586	;# 
 20667   00024B                     TUIN0PPS        equ	587	;# 
 20668   00024C                     TUIN1PPS        equ	588	;# 
 20669   00024F                     CCP1PPS         equ	591	;# 
 20670   000250                     CCP2PPS         equ	592	;# 
 20671   000251                     CCP3PPS         equ	593	;# 
 20672   000253                     PWM1ERSPPS      equ	595	;# 
 20673   000254                     PWM2ERSPPS      equ	596	;# 
 20674   000255                     PWM3ERSPPS      equ	597	;# 
 20675   000256                     PWM4ERSPPS      equ	598	;# 
 20676   000257                     PWMIN0PPS       equ	599	;# 
 20677   000258                     PWMIN1PPS       equ	600	;# 
 20678   000259                     SMT1WINPPS      equ	601	;# 
 20679   00025A                     SMT1SIGPPS      equ	602	;# 
 20680   00025B                     CWG1PPS         equ	603	;# 
 20681   00025B                     CWG1INPPS       equ	603	;# 
 20682   00025C                     CWG2PPS         equ	604	;# 
 20683   00025C                     CWG2INPPS       equ	604	;# 
 20684   00025D                     CWG3PPS         equ	605	;# 
 20685   00025D                     CWG3INPPS       equ	605	;# 
 20686   00025E                     MD1CARLPPS      equ	606	;# 
 20687   00025E                     MDCARLPPS       equ	606	;# 
 20688   00025F                     MD1CARHPPS      equ	607	;# 
 20689   00025F                     MDCARHPPS       equ	607	;# 
 20690   000260                     MD1SRCPPS       equ	608	;# 
 20691   000260                     MDSRCPPS        equ	608	;# 
 20692   000261                     CLCIN0PPS       equ	609	;# 
 20693   000262                     CLCIN1PPS       equ	610	;# 
 20694   000263                     CLCIN2PPS       equ	611	;# 
 20695   000264                     CLCIN3PPS       equ	612	;# 
 20696   000265                     CLCIN4PPS       equ	613	;# 
 20697   000266                     CLCIN5PPS       equ	614	;# 
 20698   000267                     CLCIN6PPS       equ	615	;# 
 20699   000268                     CLCIN7PPS       equ	616	;# 
 20700   000269                     ADACTPPS        equ	617	;# 
 20701   00026A                     SPI1SCKPPS      equ	618	;# 
 20702   00026B                     SPI1SDIPPS      equ	619	;# 
 20703   00026C                     SPI1SSPPS       equ	620	;# 
 20704   00026D                     SPI2SCKPPS      equ	621	;# 
 20705   00026E                     SPI2SDIPPS      equ	622	;# 
 20706   00026F                     SPI2SSPPS       equ	623	;# 
 20707   000270                     I2C1SDAPPS      equ	624	;# 
 20708   000271                     I2C1SCLPPS      equ	625	;# 
 20709   000272                     U1RXPPS         equ	626	;# 
 20710   000273                     U1CTSPPS        equ	627	;# 
 20711   000274                     U2RXPPS         equ	628	;# 
 20712   000275                     U2CTSPPS        equ	629	;# 
 20713   000276                     U3RXPPS         equ	630	;# 
 20714   000277                     U3CTSPPS        equ	631	;# 
 20715   000278                     U4RXPPS         equ	632	;# 
 20716   000279                     U4CTSPPS        equ	633	;# 
 20717   00027A                     U5RXPPS         equ	634	;# 
 20718   00027B                     U5CTSPPS        equ	635	;# 
 20719   000286                     RC4I2C          equ	646	;# 
 20720   000287                     RC3I2C          equ	647	;# 
 20721   000288                     RB2I2C          equ	648	;# 
 20722   000289                     RB1I2C          equ	649	;# 
 20723   00028A                     I2C1RXB         equ	650	;# 
 20724   00028B                     I2C1TXB         equ	651	;# 
 20725   00028C                     I2C1CNTL        equ	652	;# 
 20726   00028D                     I2C1CNTH        equ	653	;# 
 20727   00028E                     I2C1ADB0        equ	654	;# 
 20728   00028F                     I2C1ADB1        equ	655	;# 
 20729   000290                     I2C1ADR0        equ	656	;# 
 20730   000291                     I2C1ADR1        equ	657	;# 
 20731   000292                     I2C1ADR2        equ	658	;# 
 20732   000293                     I2C1ADR3        equ	659	;# 
 20733   000294                     I2C1CON0        equ	660	;# 
 20734   000295                     I2C1CON1        equ	661	;# 
 20735   000296                     I2C1CON2        equ	662	;# 
 20736   000297                     I2C1ERR         equ	663	;# 
 20737   000298                     I2C1STAT0       equ	664	;# 
 20738   000299                     I2C1STAT1       equ	665	;# 
 20739   00029A                     I2C1PIR         equ	666	;# 
 20740   00029B                     I2C1PIE         equ	667	;# 
 20741   00029C                     I2C1BTO         equ	668	;# 
 20742   00029D                     I2C1BAUD        equ	669	;# 
 20743   00029E                     I2C1CLK         equ	670	;# 
 20744   00029F                     I2C1BTOC        equ	671	;# 
 20745   0002A1                     U1RXB           equ	673	;# 
 20746   0002A1                     U1RXBL          equ	673	;# 
 20747   0002A2                     U1RXCHK         equ	674	;# 
 20748   0002A3                     U1TXB           equ	675	;# 
 20749   0002A3                     U1TXBL          equ	675	;# 
 20750   0002A4                     U1TXCHK         equ	676	;# 
 20751   0002A5                     U1P1            equ	677	;# 
 20752   0002A5                     U1P1L           equ	677	;# 
 20753   0002A6                     U1P1H           equ	678	;# 
 20754   0002A7                     U1P2            equ	679	;# 
 20755   0002A7                     U1P2L           equ	679	;# 
 20756   0002A8                     U1P2H           equ	680	;# 
 20757   0002A9                     U1P3            equ	681	;# 
 20758   0002A9                     U1P3L           equ	681	;# 
 20759   0002AA                     U1P3H           equ	682	;# 
 20760   0002AB                     U1CON0          equ	683	;# 
 20761   0002AC                     U1CON1          equ	684	;# 
 20762   0002AD                     U1CON2          equ	685	;# 
 20763   0002AE                     U1BRG           equ	686	;# 
 20764   0002AE                     U1BRGL          equ	686	;# 
 20765   0002AF                     U1BRGH          equ	687	;# 
 20766   0002B0                     U1FIFO          equ	688	;# 
 20767   0002B1                     U1UIR           equ	689	;# 
 20768   0002B2                     U1ERRIR         equ	690	;# 
 20769   0002B3                     U1ERRIE         equ	691	;# 
 20770   0002B4                     U2RXB           equ	692	;# 
 20771   0002B4                     U2RXBL          equ	692	;# 
 20772   0002B5                     U2RXCHK         equ	693	;# 
 20773   0002B6                     U2TXB           equ	694	;# 
 20774   0002B6                     U2TXBL          equ	694	;# 
 20775   0002B7                     U2TXCHK         equ	695	;# 
 20776   0002B8                     U2P1            equ	696	;# 
 20777   0002B8                     U2P1L           equ	696	;# 
 20778   0002B9                     U2P1H           equ	697	;# 
 20779   0002BA                     U2P2            equ	698	;# 
 20780   0002BA                     U2P2L           equ	698	;# 
 20781   0002BB                     U2P2H           equ	699	;# 
 20782   0002BC                     U2P3            equ	700	;# 
 20783   0002BC                     U2P3L           equ	700	;# 
 20784   0002BD                     U2P3H           equ	701	;# 
 20785   0002BE                     U2CON0          equ	702	;# 
 20786   0002BF                     U2CON1          equ	703	;# 
 20787   0002C0                     U2CON2          equ	704	;# 
 20788   0002C1                     U2BRG           equ	705	;# 
 20789   0002C1                     U2BRGL          equ	705	;# 
 20790   0002C2                     U2BRGH          equ	706	;# 
 20791   0002C3                     U2FIFO          equ	707	;# 
 20792   0002C4                     U2UIR           equ	708	;# 
 20793   0002C5                     U2ERRIR         equ	709	;# 
 20794   0002C6                     U2ERRIE         equ	710	;# 
 20795   0002C7                     U3RXB           equ	711	;# 
 20796   0002C7                     U3RXBL          equ	711	;# 
 20797   0002C9                     U3TXB           equ	713	;# 
 20798   0002C9                     U3TXBL          equ	713	;# 
 20799   0002CB                     U3P1            equ	715	;# 
 20800   0002CB                     U3P1L           equ	715	;# 
 20801   0002CD                     U3P2            equ	717	;# 
 20802   0002CD                     U3P2L           equ	717	;# 
 20803   0002CF                     U3P3            equ	719	;# 
 20804   0002CF                     U3P3L           equ	719	;# 
 20805   0002D1                     U3CON0          equ	721	;# 
 20806   0002D2                     U3CON1          equ	722	;# 
 20807   0002D3                     U3CON2          equ	723	;# 
 20808   0002D4                     U3BRG           equ	724	;# 
 20809   0002D4                     U3BRGL          equ	724	;# 
 20810   0002D5                     U3BRGH          equ	725	;# 
 20811   0002D6                     U3FIFO          equ	726	;# 
 20812   0002D7                     U3UIR           equ	727	;# 
 20813   0002D8                     U3ERRIR         equ	728	;# 
 20814   0002D9                     U3ERRIE         equ	729	;# 
 20815   0002DA                     U4RXB           equ	730	;# 
 20816   0002DA                     U4RXBL          equ	730	;# 
 20817   0002DC                     U4TXB           equ	732	;# 
 20818   0002DC                     U4TXBL          equ	732	;# 
 20819   0002DE                     U4P1            equ	734	;# 
 20820   0002DE                     U4P1L           equ	734	;# 
 20821   0002E0                     U4P2            equ	736	;# 
 20822   0002E0                     U4P2L           equ	736	;# 
 20823   0002E2                     U4P3            equ	738	;# 
 20824   0002E2                     U4P3L           equ	738	;# 
 20825   0002E4                     U4CON0          equ	740	;# 
 20826   0002E5                     U4CON1          equ	741	;# 
 20827   0002E6                     U4CON2          equ	742	;# 
 20828   0002E7                     U4BRG           equ	743	;# 
 20829   0002E7                     U4BRGL          equ	743	;# 
 20830   0002E8                     U4BRGH          equ	744	;# 
 20831   0002E9                     U4FIFO          equ	745	;# 
 20832   0002EA                     U4UIR           equ	746	;# 
 20833   0002EB                     U4ERRIR         equ	747	;# 
 20834   0002EC                     U4ERRIE         equ	748	;# 
 20835   0002ED                     U5RXB           equ	749	;# 
 20836   0002ED                     U5RXBL          equ	749	;# 
 20837   0002EF                     U5TXB           equ	751	;# 
 20838   0002EF                     U5TXBL          equ	751	;# 
 20839   0002F1                     U5P1            equ	753	;# 
 20840   0002F1                     U5P1L           equ	753	;# 
 20841   0002F3                     U5P2            equ	755	;# 
 20842   0002F3                     U5P2L           equ	755	;# 
 20843   0002F5                     U5P3            equ	757	;# 
 20844   0002F5                     U5P3L           equ	757	;# 
 20845   0002F7                     U5CON0          equ	759	;# 
 20846   0002F8                     U5CON1          equ	760	;# 
 20847   0002F9                     U5CON2          equ	761	;# 
 20848   0002FA                     U5BRG           equ	762	;# 
 20849   0002FA                     U5BRGL          equ	762	;# 
 20850   0002FB                     U5BRGH          equ	763	;# 
 20851   0002FC                     U5FIFO          equ	764	;# 
 20852   0002FD                     U5UIR           equ	765	;# 
 20853   0002FE                     U5ERRIR         equ	766	;# 
 20854   0002FF                     U5ERRIE         equ	767	;# 
 20855   000300                     SMT1TMR         equ	768	;# 
 20856   000300                     SMT1TMRL        equ	768	;# 
 20857   000301                     SMT1TMRH        equ	769	;# 
 20858   000302                     SMT1TMRU        equ	770	;# 
 20859   000303                     SMT1CPR         equ	771	;# 
 20860   000303                     SMT1CPRL        equ	771	;# 
 20861   000304                     SMT1CPRH        equ	772	;# 
 20862   000305                     SMT1CPRU        equ	773	;# 
 20863   000306                     SMT1CPW         equ	774	;# 
 20864   000306                     SMT1CPWL        equ	774	;# 
 20865   000307                     SMT1CPWH        equ	775	;# 
 20866   000308                     SMT1CPWU        equ	776	;# 
 20867   000309                     SMT1PR          equ	777	;# 
 20868   000309                     SMT1PRL         equ	777	;# 
 20869   00030A                     SMT1PRH         equ	778	;# 
 20870   00030B                     SMT1PRU         equ	779	;# 
 20871   00030C                     SMT1CON0        equ	780	;# 
 20872   00030D                     SMT1CON1        equ	781	;# 
 20873   00030E                     SMT1STAT        equ	782	;# 
 20874   00030F                     SMT1CLK         equ	783	;# 
 20875   000310                     SMT1SIG         equ	784	;# 
 20876   000311                     SMT1WIN         equ	785	;# 
 20877   000318                     TMR0L           equ	792	;# 
 20878   000318                     TMR0            equ	792	;# 
 20879   000319                     TMR0H           equ	793	;# 
 20880   000319                     PR0             equ	793	;# 
 20881   00031A                     T0CON0          equ	794	;# 
 20882   00031B                     T0CON1          equ	795	;# 
 20883   00031C                     TMR1            equ	796	;# 
 20884   00031C                     TMR1L           equ	796	;# 
 20885   00031D                     TMR1H           equ	797	;# 
 20886   00031E                     T1CON           equ	798	;# 
 20887   00031E                     TMR1CON         equ	798	;# 
 20888   00031F                     T1GCON          equ	799	;# 
 20889   00031F                     TMR1GCON        equ	799	;# 
 20890   000320                     T1GATE          equ	800	;# 
 20891   000320                     TMR1GATE        equ	800	;# 
 20892   000321                     T1CLK           equ	801	;# 
 20893   000321                     TMR1CLK         equ	801	;# 
 20894   000321                     PR1             equ	801	;# 
 20895   000322                     T2TMR           equ	802	;# 
 20896   000322                     TMR2            equ	802	;# 
 20897   000323                     T2PR            equ	803	;# 
 20898   000323                     PR2             equ	803	;# 
 20899   000324                     T2CON           equ	804	;# 
 20900   000325                     T2HLT           equ	805	;# 
 20901   000326                     T2CLKCON        equ	806	;# 
 20902   000326                     T2CLK           equ	806	;# 
 20903   000327                     T2RST           equ	807	;# 
 20904   000328                     TMR3            equ	808	;# 
 20905   000328                     TMR3L           equ	808	;# 
 20906   000329                     TMR3H           equ	809	;# 
 20907   00032A                     T3CON           equ	810	;# 
 20908   00032A                     TMR3CON         equ	810	;# 
 20909   00032B                     T3GCON          equ	811	;# 
 20910   00032B                     TMR3GCON        equ	811	;# 
 20911   00032C                     T3GATE          equ	812	;# 
 20912   00032C                     TMR3GATE        equ	812	;# 
 20913   00032D                     T3CLK           equ	813	;# 
 20914   00032D                     TMR3CLK         equ	813	;# 
 20915   00032D                     PR3             equ	813	;# 
 20916   00032E                     T4TMR           equ	814	;# 
 20917   00032E                     TMR4            equ	814	;# 
 20918   00032F                     T4PR            equ	815	;# 
 20919   00032F                     PR4             equ	815	;# 
 20920   000330                     T4CON           equ	816	;# 
 20921   000331                     T4HLT           equ	817	;# 
 20922   000332                     T4CLKCON        equ	818	;# 
 20923   000332                     T4CLK           equ	818	;# 
 20924   000333                     T4RST           equ	819	;# 
 20925   000334                     TMR5            equ	820	;# 
 20926   000334                     TMR5L           equ	820	;# 
 20927   000335                     TMR5H           equ	821	;# 
 20928   000336                     T5CON           equ	822	;# 
 20929   000336                     TMR5CON         equ	822	;# 
 20930   000337                     T5GCON          equ	823	;# 
 20931   000337                     TMR5GCON        equ	823	;# 
 20932   000338                     T5GATE          equ	824	;# 
 20933   000338                     TMR5GATE        equ	824	;# 
 20934   000339                     T5CLK           equ	825	;# 
 20935   000339                     TMR5CLK         equ	825	;# 
 20936   000339                     PR5             equ	825	;# 
 20937   00033A                     T6TMR           equ	826	;# 
 20938   00033A                     TMR6            equ	826	;# 
 20939   00033B                     T6PR            equ	827	;# 
 20940   00033B                     PR6             equ	827	;# 
 20941   00033C                     T6CON           equ	828	;# 
 20942   00033D                     T6HLT           equ	829	;# 
 20943   00033E                     T6CLKCON        equ	830	;# 
 20944   00033E                     T6CLK           equ	830	;# 
 20945   00033F                     T6RST           equ	831	;# 
 20946   000340                     CCPR1           equ	832	;# 
 20947   000340                     CCPR1L          equ	832	;# 
 20948   000341                     CCPR1H          equ	833	;# 
 20949   000342                     CCP1CON         equ	834	;# 
 20950   000343                     CCP1CAP         equ	835	;# 
 20951   000344                     CCPR2           equ	836	;# 
 20952   000344                     CCPR2L          equ	836	;# 
 20953   000345                     CCPR2H          equ	837	;# 
 20954   000346                     CCP2CON         equ	838	;# 
 20955   000347                     CCP2CAP         equ	839	;# 
 20956   000348                     CCPR3           equ	840	;# 
 20957   000348                     CCPR3L          equ	840	;# 
 20958   000349                     CCPR3H          equ	841	;# 
 20959   00034A                     CCP3CON         equ	842	;# 
 20960   00034B                     CCP3CAP         equ	843	;# 
 20961   00034C                     CCPTMRS0        equ	844	;# 
 20962   00034F                     CRCDATA         equ	847	;# 
 20963   00034F                     CRCDATAL        equ	847	;# 
 20964   000350                     CRCDATAH        equ	848	;# 
 20965   000351                     CRCDATAU        equ	849	;# 
 20966   000352                     CRCDATAT        equ	850	;# 
 20967   000353                     CRCOUT          equ	851	;# 
 20968   000353                     CRCSHFT         equ	851	;# 
 20969   000353                     CRCXOR          equ	851	;# 
 20970   000353                     CRCOUTL         equ	851	;# 
 20971   000353                     CRCSHFTL        equ	851	;# 
 20972   000353                     CRCSHIFTL       equ	851	;# 
 20973   000353                     CRCXORL         equ	851	;# 
 20974   000354                     CRCOUTH         equ	852	;# 
 20975   000354                     CRCSHFTH        equ	852	;# 
 20976   000354                     CRCSHIFTH       equ	852	;# 
 20977   000354                     CRCXORH         equ	852	;# 
 20978   000355                     CRCOUTU         equ	853	;# 
 20979   000355                     CRCSHFTU        equ	853	;# 
 20980   000355                     CRCSHIFTU       equ	853	;# 
 20981   000355                     CRCXORU         equ	853	;# 
 20982   000356                     CRCOUTT         equ	854	;# 
 20983   000356                     CRCSHFTT        equ	854	;# 
 20984   000356                     CRCSHIFTT       equ	854	;# 
 20985   000356                     CRCXORT         equ	854	;# 
 20986   000357                     CRCCON0         equ	855	;# 
 20987   000358                     CRCCON1         equ	856	;# 
 20988   000359                     CRCCON2         equ	857	;# 
 20989   00035A                     SCANLADR        equ	858	;# 
 20990   00035A                     SCANLADRL       equ	858	;# 
 20991   00035B                     SCANLADRH       equ	859	;# 
 20992   00035C                     SCANLADRU       equ	860	;# 
 20993   00035D                     SCANHADR        equ	861	;# 
 20994   00035D                     SCANHADRL       equ	861	;# 
 20995   00035E                     SCANHADRH       equ	862	;# 
 20996   00035F                     SCANHADRU       equ	863	;# 
 20997   000360                     SCANCON0        equ	864	;# 
 20998   000361                     SCANTRIG        equ	865	;# 
 20999   000362                     IPR0            equ	866	;# 
 21000   000363                     IPR1            equ	867	;# 
 21001   000364                     IPR2            equ	868	;# 
 21002   000365                     IPR3            equ	869	;# 
 21003   000366                     IPR4            equ	870	;# 
 21004   000367                     IPR5            equ	871	;# 
 21005   000368                     IPR6            equ	872	;# 
 21006   000369                     IPR7            equ	873	;# 
 21007   00036A                     IPR8            equ	874	;# 
 21008   00036B                     IPR9            equ	875	;# 
 21009   00036C                     IPR10           equ	876	;# 
 21010   00036D                     IPR11           equ	877	;# 
 21011   00036E                     IPR12           equ	878	;# 
 21012   00036F                     IPR13           equ	879	;# 
 21013   000370                     IPR14           equ	880	;# 
 21014   000371                     IPR15           equ	881	;# 
 21015   000373                     STATUS_CSHAD    equ	883	;# 
 21016   000374                     WREG_CSHAD      equ	884	;# 
 21017   000375                     BSR_CSHAD       equ	885	;# 
 21018   000376                     SHADCON         equ	886	;# 
 21019   000377                     STATUS_SHAD     equ	887	;# 
 21020   000378                     WREG_SHAD       equ	888	;# 
 21021   000379                     BSR_SHAD        equ	889	;# 
 21022   00037A                     PCLATH_SHAD     equ	890	;# 
 21023   00037B                     PCLATU_SHAD     equ	891	;# 
 21024   00037C                     FSR0SH          equ	892	;# 
 21025   00037C                     FSR0L_SHAD      equ	892	;# 
 21026   00037D                     FSR0H_SHAD      equ	893	;# 
 21027   00037E                     FSR1SH          equ	894	;# 
 21028   00037E                     FSR1L_SHAD      equ	894	;# 
 21029   00037F                     FSR1H_SHAD      equ	895	;# 
 21030   000380                     FSR2SH          equ	896	;# 
 21031   000380                     FSR2L_SHAD      equ	896	;# 
 21032   000381                     FSR2H_SHAD      equ	897	;# 
 21033   000382                     PRODSH          equ	898	;# 
 21034   000382                     PRODL_SHAD      equ	898	;# 
 21035   000383                     PRODH_SHAD      equ	899	;# 
 21036   000387                     TU16ACON0       equ	903	;# 
 21037   000388                     TU16ACON1       equ	904	;# 
 21038   000389                     TU16AHLT        equ	905	;# 
 21039   00038A                     TU16APS         equ	906	;# 
 21040   00038B                     TU16ATMR        equ	907	;# 
 21041   00038B                     TU16ACR         equ	907	;# 
 21042   00038B                     TU16ATMRL       equ	907	;# 
 21043   00038B                     TU16ACRL        equ	907	;# 
 21044   00038C                     TU16ATMRH       equ	908	;# 
 21045   00038C                     TU16ACRH        equ	908	;# 
 21046   00038D                     TU16APR         equ	909	;# 
 21047   00038D                     TU16APRL        equ	909	;# 
 21048   00038E                     TU16APRH        equ	910	;# 
 21049   00038F                     TU16ACLK        equ	911	;# 
 21050   000390                     TU16AERS        equ	912	;# 
 21051   000393                     TU16BCON0       equ	915	;# 
 21052   000394                     TU16BCON1       equ	916	;# 
 21053   000395                     TU16BHLT        equ	917	;# 
 21054   000396                     TU16BPS         equ	918	;# 
 21055   000397                     TU16BTMR        equ	919	;# 
 21056   000397                     TU16BCR         equ	919	;# 
 21057   000397                     TU16BTMRL       equ	919	;# 
 21058   000397                     TU16BCRL        equ	919	;# 
 21059   000398                     TU16BTMRH       equ	920	;# 
 21060   000398                     TU16BCRH        equ	920	;# 
 21061   000399                     TU16BPR         equ	921	;# 
 21062   000399                     TU16BPRL        equ	921	;# 
 21063   00039A                     TU16BPRH        equ	922	;# 
 21064   00039B                     TU16BCLK        equ	923	;# 
 21065   00039C                     TU16BERS        equ	924	;# 
 21066   0003BB                     TUCHAIN         equ	955	;# 
 21067   0003BC                     CWG1CLK         equ	956	;# 
 21068   0003BC                     CWG1CLKCON      equ	956	;# 
 21069   0003BD                     CWG1ISM         equ	957	;# 
 21070   0003BE                     CWG1DBR         equ	958	;# 
 21071   0003BF                     CWG1DBF         equ	959	;# 
 21072   0003C0                     CWG1CON0        equ	960	;# 
 21073   0003C1                     CWG1CON1        equ	961	;# 
 21074   0003C2                     CWG1AS0         equ	962	;# 
 21075   0003C3                     CWG1AS1         equ	963	;# 
 21076   0003C4                     CWG1STR         equ	964	;# 
 21077   0003C5                     CWG2CLK         equ	965	;# 
 21078   0003C5                     CWG2CLKCON      equ	965	;# 
 21079   0003C6                     CWG2ISM         equ	966	;# 
 21080   0003C7                     CWG2DBR         equ	967	;# 
 21081   0003C8                     CWG2DBF         equ	968	;# 
 21082   0003C9                     CWG2CON0        equ	969	;# 
 21083   0003CA                     CWG2CON1        equ	970	;# 
 21084   0003CB                     CWG2AS0         equ	971	;# 
 21085   0003CC                     CWG2AS1         equ	972	;# 
 21086   0003CD                     CWG2STR         equ	973	;# 
 21087   0003CE                     CWG3CLK         equ	974	;# 
 21088   0003CE                     CWG3CLKCON      equ	974	;# 
 21089   0003CF                     CWG3ISM         equ	975	;# 
 21090   0003D0                     CWG3DBR         equ	976	;# 
 21091   0003D1                     CWG3DBF         equ	977	;# 
 21092   0003D2                     CWG3CON0        equ	978	;# 
 21093   0003D3                     CWG3CON1        equ	979	;# 
 21094   0003D4                     CWG3AS0         equ	980	;# 
 21095   0003D5                     CWG3AS1         equ	981	;# 
 21096   0003D6                     CWG3STR         equ	982	;# 
 21097   0003D7                     FVRCON          equ	983	;# 
 21098   0003D8                     ADCPCON         equ	984	;# 
 21099   0003D8                     ADCP            equ	984	;# 
 21100   0003D9                     ADLTH           equ	985	;# 
 21101   0003D9                     ADLTHL          equ	985	;# 
 21102   0003DA                     ADLTHH          equ	986	;# 
 21103   0003DB                     ADUTH           equ	987	;# 
 21104   0003DB                     ADUTHL          equ	987	;# 
 21105   0003DC                     ADUTHH          equ	988	;# 
 21106   0003DD                     ADERR           equ	989	;# 
 21107   0003DD                     ADERRL          equ	989	;# 
 21108   0003DE                     ADERRH          equ	990	;# 
 21109   0003DF                     ADSTPT          equ	991	;# 
 21110   0003DF                     ADSTPTL         equ	991	;# 
 21111   0003E0                     ADSTPTH         equ	992	;# 
 21112   0003E1                     ADFLTR          equ	993	;# 
 21113   0003E1                     ADFLTRL         equ	993	;# 
 21114   0003E2                     ADFLTRH         equ	994	;# 
 21115   0003E3                     ADACC           equ	995	;# 
 21116   0003E3                     ADACCL          equ	995	;# 
 21117   0003E4                     ADACCH          equ	996	;# 
 21118   0003E5                     ADACCU          equ	997	;# 
 21119   0003E6                     ADCNT           equ	998	;# 
 21120   0003E7                     ADRPT           equ	999	;# 
 21121   0003E8                     ADPREV          equ	1000	;# 
 21122   0003E8                     ADPREVL         equ	1000	;# 
 21123   0003E9                     ADPREVH         equ	1001	;# 
 21124   0003EA                     ADRES           equ	1002	;# 
 21125   0003EA                     ADRESL          equ	1002	;# 
 21126   0003EB                     ADRESH          equ	1003	;# 
 21127   0003EC                     ADPCH           equ	1004	;# 
 21128   0003EE                     ADACQ           equ	1006	;# 
 21129   0003EE                     ADACQL          equ	1006	;# 
 21130   0003EF                     ADACQH          equ	1007	;# 
 21131   0003F0                     ADCAP           equ	1008	;# 
 21132   0003F1                     ADPRE           equ	1009	;# 
 21133   0003F1                     ADPREL          equ	1009	;# 
 21134   0003F2                     ADPREH          equ	1010	;# 
 21135   0003F3                     ADCON0          equ	1011	;# 
 21136   0003F4                     ADCON1          equ	1012	;# 
 21137   0003F5                     ADCON2          equ	1013	;# 
 21138   0003F6                     ADCON3          equ	1014	;# 
 21139   0003F7                     ADSTAT          equ	1015	;# 
 21140   0003F8                     ADREF           equ	1016	;# 
 21141   0003F9                     ADACT           equ	1017	;# 
 21142   0003FA                     ADCLK           equ	1018	;# 
 21143   0003FB                     ADCTX           equ	1019	;# 
 21144   0003FC                     ADCSEL1         equ	1020	;# 
 21145   0003FD                     ADCSEL2         equ	1021	;# 
 21146   0003FE                     ADCSEL3         equ	1022	;# 
 21147   0003FF                     ADCSEL4         equ	1023	;# 
 21148   000400                     ANSELA          equ	1024	;# 
 21149   000401                     WPUA            equ	1025	;# 
 21150   000402                     ODCONA          equ	1026	;# 
 21151   000403                     SLRCONA         equ	1027	;# 
 21152   000404                     INLVLA          equ	1028	;# 
 21153   000405                     IOCAP           equ	1029	;# 
 21154   000406                     IOCAN           equ	1030	;# 
 21155   000407                     IOCAF           equ	1031	;# 
 21156   000408                     ANSELB          equ	1032	;# 
 21157   000409                     WPUB            equ	1033	;# 
 21158   00040A                     ODCONB          equ	1034	;# 
 21159   00040B                     SLRCONB         equ	1035	;# 
 21160   00040C                     INLVLB          equ	1036	;# 
 21161   00040D                     IOCBP           equ	1037	;# 
 21162   00040E                     IOCBN           equ	1038	;# 
 21163   00040F                     IOCBF           equ	1039	;# 
 21164   000410                     ANSELC          equ	1040	;# 
 21165   000411                     WPUC            equ	1041	;# 
 21166   000412                     ODCONC          equ	1042	;# 
 21167   000413                     SLRCONC         equ	1043	;# 
 21168   000414                     INLVLC          equ	1044	;# 
 21169   000415                     IOCCP           equ	1045	;# 
 21170   000416                     IOCCN           equ	1046	;# 
 21171   000417                     IOCCF           equ	1047	;# 
 21172   000421                     WPUE            equ	1057	;# 
 21173   000424                     INLVLE          equ	1060	;# 
 21174   000425                     IOCEP           equ	1061	;# 
 21175   000426                     IOCEN           equ	1062	;# 
 21176   000427                     IOCEF           equ	1063	;# 
 21177   000440                     NCO1ACC         equ	1088	;# 
 21178   000440                     NCO1ACCL        equ	1088	;# 
 21179   000441                     NCO1ACCH        equ	1089	;# 
 21180   000442                     NCO1ACCU        equ	1090	;# 
 21181   000443                     NCO1INC         equ	1091	;# 
 21182   000443                     NCO1INCL        equ	1091	;# 
 21183   000444                     NCO1INCH        equ	1092	;# 
 21184   000445                     NCO1INCU        equ	1093	;# 
 21185   000446                     NCO1CON         equ	1094	;# 
 21186   000447                     NCO1CLK         equ	1095	;# 
 21187   000448                     NCO2ACC         equ	1096	;# 
 21188   000448                     NCO2ACCL        equ	1096	;# 
 21189   000449                     NCO2ACCH        equ	1097	;# 
 21190   00044A                     NCO2ACCU        equ	1098	;# 
 21191   00044B                     NCO2INC         equ	1099	;# 
 21192   00044B                     NCO2INCL        equ	1099	;# 
 21193   00044C                     NCO2INCH        equ	1100	;# 
 21194   00044D                     NCO2INCU        equ	1101	;# 
 21195   00044E                     NCO2CON         equ	1102	;# 
 21196   00044F                     NCO2CLK         equ	1103	;# 
 21197   000450                     NCO3ACC         equ	1104	;# 
 21198   000450                     NCO3ACCL        equ	1104	;# 
 21199   000451                     NCO3ACCH        equ	1105	;# 
 21200   000452                     NCO3ACCU        equ	1106	;# 
 21201   000453                     NCO3INC         equ	1107	;# 
 21202   000453                     NCO3INCL        equ	1107	;# 
 21203   000454                     NCO3INCH        equ	1108	;# 
 21204   000455                     NCO3INCU        equ	1109	;# 
 21205   000456                     NCO3CON         equ	1110	;# 
 21206   000457                     NCO3CLK         equ	1111	;# 
 21207   000458                     FSCMCON         equ	1112	;# 
 21208   000459                     IVTLOCK         equ	1113	;# 
 21209   00045A                     IVTAD           equ	1114	;# 
 21210   00045A                     IVTADL          equ	1114	;# 
 21211   00045B                     IVTADH          equ	1115	;# 
 21212   00045C                     IVTADU          equ	1116	;# 
 21213   00045D                     IVTBASE         equ	1117	;# 
 21214   00045D                     IVTBASEL        equ	1117	;# 
 21215   00045E                     IVTBASEH        equ	1118	;# 
 21216   00045F                     IVTBASEU        equ	1119	;# 
 21217   000460                     PWM1ERS         equ	1120	;# 
 21218   000461                     PWM1CLK         equ	1121	;# 
 21219   000462                     PWM1LDS         equ	1122	;# 
 21220   000463                     PWM1PR          equ	1123	;# 
 21221   000463                     PWM1PRL         equ	1123	;# 
 21222   000464                     PWM1PRH         equ	1124	;# 
 21223   000465                     PWM1CPRE        equ	1125	;# 
 21224   000466                     PWM1PIPOS       equ	1126	;# 
 21225   000467                     PWM1GIR         equ	1127	;# 
 21226   000468                     PWM1GIE         equ	1128	;# 
 21227   000469                     PWM1CON         equ	1129	;# 
 21228   00046A                     PWM1S1CFG       equ	1130	;# 
 21229   00046B                     PWM1S1P1        equ	1131	;# 
 21230   00046B                     PWM1S1P1L       equ	1131	;# 
 21231   00046C                     PWM1S1P1H       equ	1132	;# 
 21232   00046D                     PWM1S1P2        equ	1133	;# 
 21233   00046D                     PWM1S1P2L       equ	1133	;# 
 21234   00046E                     PWM1S1P2H       equ	1134	;# 
 21235   00046F                     PWM2ERS         equ	1135	;# 
 21236   000470                     PWM2CLK         equ	1136	;# 
 21237   000471                     PWM2LDS         equ	1137	;# 
 21238   000472                     PWM2PR          equ	1138	;# 
 21239   000472                     PWM2PRL         equ	1138	;# 
 21240   000473                     PWM2PRH         equ	1139	;# 
 21241   000474                     PWM2CPRE        equ	1140	;# 
 21242   000475                     PWM2PIPOS       equ	1141	;# 
 21243   000476                     PWM2GIR         equ	1142	;# 
 21244   000477                     PWM2GIE         equ	1143	;# 
 21245   000478                     PWM2CON         equ	1144	;# 
 21246   000479                     PWM2S1CFG       equ	1145	;# 
 21247   00047A                     PWM2S1P1        equ	1146	;# 
 21248   00047A                     PWM2S1P1L       equ	1146	;# 
 21249   00047B                     PWM2S1P1H       equ	1147	;# 
 21250   00047C                     PWM2S1P2        equ	1148	;# 
 21251   00047C                     PWM2S1P2L       equ	1148	;# 
 21252   00047D                     PWM2S1P2H       equ	1149	;# 
 21253   00047E                     PWM3ERS         equ	1150	;# 
 21254   00047F                     PWM3CLK         equ	1151	;# 
 21255   000480                     PWM3LDS         equ	1152	;# 
 21256   000481                     PWM3PR          equ	1153	;# 
 21257   000481                     PWM3PRL         equ	1153	;# 
 21258   000482                     PWM3PRH         equ	1154	;# 
 21259   000483                     PWM3CPRE        equ	1155	;# 
 21260   000484                     PWM3PIPOS       equ	1156	;# 
 21261   000485                     PWM3GIR         equ	1157	;# 
 21262   000486                     PWM3GIE         equ	1158	;# 
 21263   000487                     PWM3CON         equ	1159	;# 
 21264   000488                     PWM3S1CFG       equ	1160	;# 
 21265   000489                     PWM3S1P1        equ	1161	;# 
 21266   000489                     PWM3S1P1L       equ	1161	;# 
 21267   00048A                     PWM3S1P1H       equ	1162	;# 
 21268   00048B                     PWM3S1P2        equ	1163	;# 
 21269   00048B                     PWM3S1P2L       equ	1163	;# 
 21270   00048C                     PWM3S1P2H       equ	1164	;# 
 21271   00048D                     PWM4ERS         equ	1165	;# 
 21272   00048E                     PWM4CLK         equ	1166	;# 
 21273   00048F                     PWM4LDS         equ	1167	;# 
 21274   000490                     PWM4PR          equ	1168	;# 
 21275   000490                     PWM4PRL         equ	1168	;# 
 21276   000491                     PWM4PRH         equ	1169	;# 
 21277   000492                     PWM4CPRE        equ	1170	;# 
 21278   000493                     PWM4PIPOS       equ	1171	;# 
 21279   000494                     PWM4GIR         equ	1172	;# 
 21280   000495                     PWM4GIE         equ	1173	;# 
 21281   000496                     PWM4CON         equ	1174	;# 
 21282   000497                     PWM4S1CFG       equ	1175	;# 
 21283   000498                     PWM4S1P1        equ	1176	;# 
 21284   000498                     PWM4S1P1L       equ	1176	;# 
 21285   000499                     PWM4S1P1H       equ	1177	;# 
 21286   00049A                     PWM4S1P2        equ	1178	;# 
 21287   00049A                     PWM4S1P2L       equ	1178	;# 
 21288   00049B                     PWM4S1P2H       equ	1179	;# 
 21289   00049C                     PWMLOAD         equ	1180	;# 
 21290   00049D                     PWMEN           equ	1181	;# 
 21291   00049E                     PIE0            equ	1182	;# 
 21292   00049F                     PIE1            equ	1183	;# 
 21293   0004A0                     PIE2            equ	1184	;# 
 21294   0004A1                     PIE3            equ	1185	;# 
 21295   0004A2                     PIE4            equ	1186	;# 
 21296   0004A3                     PIE5            equ	1187	;# 
 21297   0004A4                     PIE6            equ	1188	;# 
 21298   0004A5                     PIE7            equ	1189	;# 
 21299   0004A6                     PIE8            equ	1190	;# 
 21300   0004A7                     PIE9            equ	1191	;# 
 21301   0004A8                     PIE10           equ	1192	;# 
 21302   0004A9                     PIE11           equ	1193	;# 
 21303   0004AA                     PIE12           equ	1194	;# 
 21304   0004AB                     PIE13           equ	1195	;# 
 21305   0004AC                     PIE14           equ	1196	;# 
 21306   0004AD                     PIE15           equ	1197	;# 
 21307   0004AE                     PIR0            equ	1198	;# 
 21308   0004AF                     PIR1            equ	1199	;# 
 21309   0004B0                     PIR2            equ	1200	;# 
 21310   0004B1                     PIR3            equ	1201	;# 
 21311   0004B2                     PIR4            equ	1202	;# 
 21312   0004B3                     PIR5            equ	1203	;# 
 21313   0004B4                     PIR6            equ	1204	;# 
 21314   0004B5                     PIR7            equ	1205	;# 
 21315   0004B6                     PIR8            equ	1206	;# 
 21316   0004B7                     PIR9            equ	1207	;# 
 21317   0004B8                     PIR10           equ	1208	;# 
 21318   0004B9                     PIR11           equ	1209	;# 
 21319   0004BA                     PIR12           equ	1210	;# 
 21320   0004BB                     PIR13           equ	1211	;# 
 21321   0004BC                     PIR14           equ	1212	;# 
 21322   0004BD                     PIR15           equ	1213	;# 
 21323   0004BE                     LATA            equ	1214	;# 
 21324   0004BF                     LATB            equ	1215	;# 
 21325   0004C0                     LATC            equ	1216	;# 
 21326   0004C6                     TRISA           equ	1222	;# 
 21327   0004C7                     TRISB           equ	1223	;# 
 21328   0004C8                     TRISC           equ	1224	;# 
 21329   0004CA                     TRISE           equ	1226	;# 
 21330   0004CE                     PORTA           equ	1230	;# 
 21331   0004CF                     PORTB           equ	1231	;# 
 21332   0004D0                     PORTC           equ	1232	;# 
 21333   0004D2                     PORTE           equ	1234	;# 
 21334   0004D6                     INTCON0         equ	1238	;# 
 21335   0004D7                     INTCON1         equ	1239	;# 
 21336   0004D8                     STATUS          equ	1240	;# 
 21337   0004D9                     FSR2            equ	1241	;# 
 21338   0004D9                     FSR2L           equ	1241	;# 
 21339   0004DA                     FSR2H           equ	1242	;# 
 21340   0004DB                     PLUSW2          equ	1243	;# 
 21341   0004DC                     PREINC2         equ	1244	;# 
 21342   0004DD                     POSTDEC2        equ	1245	;# 
 21343   0004DE                     POSTINC2        equ	1246	;# 
 21344   0004DF                     INDF2           equ	1247	;# 
 21345   0004E0                     BSR             equ	1248	;# 
 21346   0004E1                     FSR1            equ	1249	;# 
 21347   0004E1                     FSR1L           equ	1249	;# 
 21348   0004E2                     FSR1H           equ	1250	;# 
 21349   0004E3                     PLUSW1          equ	1251	;# 
 21350   0004E4                     PREINC1         equ	1252	;# 
 21351   0004E5                     POSTDEC1        equ	1253	;# 
 21352   0004E6                     POSTINC1        equ	1254	;# 
 21353   0004E7                     INDF1           equ	1255	;# 
 21354   0004E8                     WREG            equ	1256	;# 
 21355   0004E9                     FSR0            equ	1257	;# 
 21356   0004E9                     FSR0L           equ	1257	;# 
 21357   0004EA                     FSR0H           equ	1258	;# 
 21358   0004EB                     PLUSW0          equ	1259	;# 
 21359   0004EC                     PREINC0         equ	1260	;# 
 21360   0004ED                     POSTDEC0        equ	1261	;# 
 21361   0004EE                     POSTINC0        equ	1262	;# 
 21362   0004EF                     INDF0           equ	1263	;# 
 21363   0004F0                     PCON0           equ	1264	;# 
 21364   0004F1                     PCON1           equ	1265	;# 
 21365   0004F2                     CPUDOZE         equ	1266	;# 
 21366   0004F3                     PROD            equ	1267	;# 
 21367   0004F3                     PRODL           equ	1267	;# 
 21368   0004F4                     PRODH           equ	1268	;# 
 21369   0004F5                     TABLAT          equ	1269	;# 
 21370   0004F6                     TBLPTR          equ	1270	;# 
 21371   0004F6                     TBLPTRL         equ	1270	;# 
 21372   0004F7                     TBLPTRH         equ	1271	;# 
 21373   0004F8                     TBLPTRU         equ	1272	;# 
 21374   0004F9                     PCLAT           equ	1273	;# 
 21375   0004F9                     PCL             equ	1273	;# 
 21376   0004FA                     PCLATH          equ	1274	;# 
 21377   0004FB                     PCLATU          equ	1275	;# 
 21378   0004FC                     STKPTR          equ	1276	;# 
 21379   0004FD                     TOS             equ	1277	;# 
 21380   0004FD                     TOSL            equ	1277	;# 
 21381   0004FE                     TOSH            equ	1278	;# 
 21382   0004FF                     TOSU            equ	1279	;# 
 21383   000038                     BOOTREG         equ	56	;# 
 21384   000039                     CLKRCON         equ	57	;# 
 21385   00003A                     CLKRCLK         equ	58	;# 
 21386   000040                     NVMCON0         equ	64	;# 
 21387   000041                     NVMCON1         equ	65	;# 
 21388   000042                     NVMLOCK         equ	66	;# 
 21389   000043                     NVMADR          equ	67	;# 
 21390   000043                     NVMADRL         equ	67	;# 
 21391   000044                     NVMADRH         equ	68	;# 
 21392   000045                     NVMADRU         equ	69	;# 
 21393   000046                     NVMDAT          equ	70	;# 
 21394   000046                     NVMDATL         equ	70	;# 
 21395   000047                     NVMDATH         equ	71	;# 
 21396   000048                     VREGCON         equ	72	;# 
 21397   000049                     BORCON          equ	73	;# 
 21398   00004A                     HLVDCON0        equ	74	;# 
 21399   00004B                     HLVDCON1        equ	75	;# 
 21400   00004C                     ZCDCON          equ	76	;# 
 21401   000060                     PMD0            equ	96	;# 
 21402   000061                     PMD1            equ	97	;# 
 21403   000062                     PMD2            equ	98	;# 
 21404   000063                     PMD3            equ	99	;# 
 21405   000064                     PMD4            equ	100	;# 
 21406   000065                     PMD5            equ	101	;# 
 21407   000066                     PMD6            equ	102	;# 
 21408   000067                     PMD7            equ	103	;# 
 21409   000068                     PMD8            equ	104	;# 
 21410   00006A                     MD1CON0         equ	106	;# 
 21411   00006B                     MD1CON1         equ	107	;# 
 21412   00006C                     MD1SRC          equ	108	;# 
 21413   00006D                     MD1CARL         equ	109	;# 
 21414   00006E                     MD1CARH         equ	110	;# 
 21415   00006F                     CMOUT           equ	111	;# 
 21416   000070                     CM1CON0         equ	112	;# 
 21417   000071                     CM1CON1         equ	113	;# 
 21418   000072                     CM1NCH          equ	114	;# 
 21419   000073                     CM1PCH          equ	115	;# 
 21420   000074                     CM2CON0         equ	116	;# 
 21421   000075                     CM2CON1         equ	117	;# 
 21422   000076                     CM2NCH          equ	118	;# 
 21423   000077                     CM2PCH          equ	119	;# 
 21424   000078                     WDTCON0         equ	120	;# 
 21425   000079                     WDTCON1         equ	121	;# 
 21426   00007A                     WDTPSL          equ	122	;# 
 21427   00007B                     WDTPSH          equ	123	;# 
 21428   00007C                     WDTTMR          equ	124	;# 
 21429   00007D                     DAC1DAT         equ	125	;# 
 21430   00007D                     DAC1DATL        equ	125	;# 
 21431   00007F                     DAC1CON         equ	127	;# 
 21432   000080                     SPI1RXB         equ	128	;# 
 21433   000081                     SPI1TXB         equ	129	;# 
 21434   000082                     SPI1TCNT        equ	130	;# 
 21435   000082                     SPI1TCNTL       equ	130	;# 
 21436   000083                     SPI1TCNTH       equ	131	;# 
 21437   000084                     SPI1CON0        equ	132	;# 
 21438   000085                     SPI1CON1        equ	133	;# 
 21439   000086                     SPI1CON2        equ	134	;# 
 21440   000087                     SPI1STATUS      equ	135	;# 
 21441   000088                     SPI1TWIDTH      equ	136	;# 
 21442   000089                     SPI1BAUD        equ	137	;# 
 21443   00008A                     SPI1INTF        equ	138	;# 
 21444   00008B                     SPI1INTE        equ	139	;# 
 21445   00008C                     SPI1CLK         equ	140	;# 
 21446   00008D                     SPI2RXB         equ	141	;# 
 21447   00008E                     SPI2TXB         equ	142	;# 
 21448   00008F                     SPI2TCNT        equ	143	;# 
 21449   00008F                     SPI2TCNTL       equ	143	;# 
 21450   000090                     SPI2TCNTH       equ	144	;# 
 21451   000091                     SPI2CON0        equ	145	;# 
 21452   000092                     SPI2CON1        equ	146	;# 
 21453   000093                     SPI2CON2        equ	147	;# 
 21454   000094                     SPI2STATUS      equ	148	;# 
 21455   000095                     SPI2TWIDTH      equ	149	;# 
 21456   000096                     SPI2BAUD        equ	150	;# 
 21457   000097                     SPI2INTF        equ	151	;# 
 21458   000098                     SPI2INTE        equ	152	;# 
 21459   000099                     SPI2CLK         equ	153	;# 
 21460   0000AC                     ACTCON          equ	172	;# 
 21461   0000AD                     OSCCON1         equ	173	;# 
 21462   0000AE                     OSCCON2         equ	174	;# 
 21463   0000AF                     OSCCON3         equ	175	;# 
 21464   0000B0                     OSCTUNE         equ	176	;# 
 21465   0000B1                     OSCFRQ          equ	177	;# 
 21466   0000B1                     OSCFREQ         equ	177	;# 
 21467   0000B2                     OSCSTAT         equ	178	;# 
 21468   0000B2                     OSCSTAT1        equ	178	;# 
 21469   0000B3                     OSCEN           equ	179	;# 
 21470   0000B4                     PRLOCK          equ	180	;# 
 21471   0000B5                     SCANPR          equ	181	;# 
 21472   0000B6                     DMA1PR          equ	182	;# 
 21473   0000B7                     DMA2PR          equ	183	;# 
 21474   0000B8                     DMA3PR          equ	184	;# 
 21475   0000B9                     DMA4PR          equ	185	;# 
 21476   0000BA                     DMA5PR          equ	186	;# 
 21477   0000BB                     DMA6PR          equ	187	;# 
 21478   0000BC                     DMA7PR          equ	188	;# 
 21479   0000BD                     DMA8PR          equ	189	;# 
 21480   0000BE                     MAINPR          equ	190	;# 
 21481   0000BF                     ISRPR           equ	191	;# 
 21482   0000D4                     CLCDATA         equ	212	;# 
 21483   0000D5                     CLCSELECT       equ	213	;# 
 21484   0000D6                     CLCnCON         equ	214	;# 
 21485   0000D7                     CLCnPOL         equ	215	;# 
 21486   0000D8                     CLCnSEL0        equ	216	;# 
 21487   0000D9                     CLCnSEL1        equ	217	;# 
 21488   0000DA                     CLCnSEL2        equ	218	;# 
 21489   0000DB                     CLCnSEL3        equ	219	;# 
 21490   0000DC                     CLCnGLS0        equ	220	;# 
 21491   0000DD                     CLCnGLS1        equ	221	;# 
 21492   0000DE                     CLCnGLS2        equ	222	;# 
 21493   0000DF                     CLCnGLS3        equ	223	;# 
 21494   0000E8                     DMASELECT       equ	232	;# 
 21495   0000E9                     DMAnBUF         equ	233	;# 
 21496   0000EA                     DMAnDCNT        equ	234	;# 
 21497   0000EA                     DMAnDCNTL       equ	234	;# 
 21498   0000EB                     DMAnDCNTH       equ	235	;# 
 21499   0000EC                     DMAnDPTR        equ	236	;# 
 21500   0000EC                     DMAnDPTRL       equ	236	;# 
 21501   0000ED                     DMAnDPTRH       equ	237	;# 
 21502   0000EE                     DMAnDSZ         equ	238	;# 
 21503   0000EE                     DMAnDSZL        equ	238	;# 
 21504   0000EF                     DMAnDSZH        equ	239	;# 
 21505   0000F0                     DMAnDSA         equ	240	;# 
 21506   0000F0                     DMAnDSAL        equ	240	;# 
 21507   0000F1                     DMAnDSAH        equ	241	;# 
 21508   0000F2                     DMAnSCNT        equ	242	;# 
 21509   0000F2                     DMAnSCNTL       equ	242	;# 
 21510   0000F3                     DMAnSCNTH       equ	243	;# 
 21511   0000F4                     DMAnSPTR        equ	244	;# 
 21512   0000F4                     DMAnSPTRL       equ	244	;# 
 21513   0000F5                     DMAnSPTRH       equ	245	;# 
 21514   0000F6                     DMAnSPTRU       equ	246	;# 
 21515   0000F7                     DMAnSSZ         equ	247	;# 
 21516   0000F7                     DMAnSSZL        equ	247	;# 
 21517   0000F8                     DMAnSSZH        equ	248	;# 
 21518   0000F9                     DMAnSSA         equ	249	;# 
 21519   0000F9                     DMAnSSAL        equ	249	;# 
 21520   0000FA                     DMAnSSAH        equ	250	;# 
 21521   0000FB                     DMAnSSAU        equ	251	;# 
 21522   0000FC                     DMAnCON0        equ	252	;# 
 21523   0000FD                     DMAnCON1        equ	253	;# 
 21524   0000FE                     DMAnAIRQ        equ	254	;# 
 21525   0000FF                     DMAnSIRQ        equ	255	;# 
 21526   000100                     C1CONL          equ	256	;# 
 21527   000101                     C1CONH          equ	257	;# 
 21528   000102                     C1CONU          equ	258	;# 
 21529   000103                     C1CONT          equ	259	;# 
 21530   000104                     C1NBTCFGL       equ	260	;# 
 21531   000105                     C1NBTCFGH       equ	261	;# 
 21532   000106                     C1NBTCFGU       equ	262	;# 
 21533   000107                     C1NBTCFGT       equ	263	;# 
 21534   000108                     C1DBTCFGL       equ	264	;# 
 21535   000109                     C1DBTCFGH       equ	265	;# 
 21536   00010A                     C1DBTCFGU       equ	266	;# 
 21537   00010B                     C1DBTCFGT       equ	267	;# 
 21538   00010C                     C1TDCL          equ	268	;# 
 21539   00010D                     C1TDCH          equ	269	;# 
 21540   00010E                     C1TDCU          equ	270	;# 
 21541   000110                     C1TBC           equ	272	;# 
 21542   000110                     C1TBCL          equ	272	;# 
 21543   000111                     C1TBCH          equ	273	;# 
 21544   000112                     C1TBCU          equ	274	;# 
 21545   000113                     C1TBCT          equ	275	;# 
 21546   000114                     C1TSCONL        equ	276	;# 
 21547   000115                     C1TSCONH        equ	277	;# 
 21548   000116                     C1TSCONU        equ	278	;# 
 21549   000117                     C1TSCONT        equ	279	;# 
 21550   000118                     C1VECL          equ	280	;# 
 21551   000119                     C1VECH          equ	281	;# 
 21552   00011A                     C1VECU          equ	282	;# 
 21553   00011B                     C1VECT          equ	283	;# 
 21554   00011C                     C1INTL          equ	284	;# 
 21555   00011D                     C1INTH          equ	285	;# 
 21556   00011E                     C1INTU          equ	286	;# 
 21557   00011F                     C1INTT          equ	287	;# 
 21558   000120                     C1RXIF          equ	288	;# 
 21559   000120                     C1RXIFL         equ	288	;# 
 21560   000121                     C1RXIFH         equ	289	;# 
 21561   000122                     C1RXIFU         equ	290	;# 
 21562   000123                     C1RXIFT         equ	291	;# 
 21563   000124                     C1TXIF          equ	292	;# 
 21564   000124                     C1TXIFL         equ	292	;# 
 21565   000125                     C1TXIFH         equ	293	;# 
 21566   000126                     C1TXIFU         equ	294	;# 
 21567   000127                     C1TXIFT         equ	295	;# 
 21568   000128                     C1RXOVIF        equ	296	;# 
 21569   000128                     C1RXOVIFL       equ	296	;# 
 21570   000129                     C1RXOVIFH       equ	297	;# 
 21571   00012A                     C1RXOVIFU       equ	298	;# 
 21572   00012B                     C1RXOVIFT       equ	299	;# 
 21573   00012C                     C1TXATIF        equ	300	;# 
 21574   00012C                     C1TXATIFL       equ	300	;# 
 21575   00012D                     C1TXATIFH       equ	301	;# 
 21576   00012E                     C1TXATIFU       equ	302	;# 
 21577   00012F                     C1TXATIFT       equ	303	;# 
 21578   000130                     C1TXREQ         equ	304	;# 
 21579   000130                     C1TXREQL        equ	304	;# 
 21580   000131                     C1TXREQH        equ	305	;# 
 21581   000132                     C1TXREQU        equ	306	;# 
 21582   000133                     C1TXREQT        equ	307	;# 
 21583   000134                     C1TRECL         equ	308	;# 
 21584   000135                     C1TRECH         equ	309	;# 
 21585   000136                     C1TRECU         equ	310	;# 
 21586   000137                     C1TRECT         equ	311	;# 
 21587   000138                     C1BDIAG0L       equ	312	;# 
 21588   000139                     C1BDIAG0H       equ	313	;# 
 21589   00013C                     C1BDIAG1L       equ	316	;# 
 21590   00013D                     C1BDIAG1H       equ	317	;# 
 21591   00013E                     C1BDIAG1U       equ	318	;# 
 21592   00013F                     C1BDIAG1T       equ	319	;# 
 21593   000140                     C1TEFCONL       equ	320	;# 
 21594   000141                     C1TEFCONH       equ	321	;# 
 21595   000142                     C1TEFCONU       equ	322	;# 
 21596   000143                     C1TEFCONT       equ	323	;# 
 21597   000144                     C1TEFSTAL       equ	324	;# 
 21598   000145                     C1TEFSTAH       equ	325	;# 
 21599   000146                     C1TEFSTAU       equ	326	;# 
 21600   000147                     C1TEFSTAT       equ	327	;# 
 21601   000148                     C1TEFUA         equ	328	;# 
 21602   000148                     C1TEFUAL        equ	328	;# 
 21603   000149                     C1TEFUAH        equ	329	;# 
 21604   00014A                     C1TEFUAU        equ	330	;# 
 21605   00014B                     C1TEFUAT        equ	331	;# 
 21606   00014C                     C1FIFOBA        equ	332	;# 
 21607   00014C                     C1FIFOBAL       equ	332	;# 
 21608   00014D                     C1FIFOBAH       equ	333	;# 
 21609   00014E                     C1FIFOBAU       equ	334	;# 
 21610   00014F                     C1FIFOBAT       equ	335	;# 
 21611   000150                     C1TXQCONL       equ	336	;# 
 21612   000151                     C1TXQCONH       equ	337	;# 
 21613   000152                     C1TXQCONU       equ	338	;# 
 21614   000153                     C1TXQCONT       equ	339	;# 
 21615   000154                     C1TXQSTAL       equ	340	;# 
 21616   000155                     C1TXQSTAH       equ	341	;# 
 21617   000156                     C1TXQSTAU       equ	342	;# 
 21618   000157                     C1TXQSTAT       equ	343	;# 
 21619   000158                     C1TXQUA         equ	344	;# 
 21620   000158                     C1TXQUAL        equ	344	;# 
 21621   000159                     C1TXQUAH        equ	345	;# 
 21622   00015A                     C1TXQUAU        equ	346	;# 
 21623   00015B                     C1TXQUAT        equ	347	;# 
 21624   00015C                     C1FIFOCON1      equ	348	;# 
 21625   00015C                     C1FIFOCON1L     equ	348	;# 
 21626   00015D                     C1FIFOCON1H     equ	349	;# 
 21627   00015E                     C1FIFOCON1U     equ	350	;# 
 21628   00015F                     C1FIFOCON1T     equ	351	;# 
 21629   000160                     C1FIFOSTA1      equ	352	;# 
 21630   000160                     C1FIFOSTA1L     equ	352	;# 
 21631   000161                     C1FIFOSTA1H     equ	353	;# 
 21632   000162                     C1FIFOSTA1U     equ	354	;# 
 21633   000163                     C1FIFOSTA1T     equ	355	;# 
 21634   000164                     C1FIFOUA1       equ	356	;# 
 21635   000164                     C1FIFOUA1L      equ	356	;# 
 21636   000165                     C1FIFOUA1H      equ	357	;# 
 21637   000166                     C1FIFOUA1U      equ	358	;# 
 21638   000167                     C1FIFOUA1T      equ	359	;# 
 21639   000168                     C1FIFOCON2      equ	360	;# 
 21640   000168                     C1FIFOCON2L     equ	360	;# 
 21641   000169                     C1FIFOCON2H     equ	361	;# 
 21642   00016A                     C1FIFOCON2U     equ	362	;# 
 21643   00016B                     C1FIFOCON2T     equ	363	;# 
 21644   00016C                     C1FIFOSTA2      equ	364	;# 
 21645   00016C                     C1FIFOSTA2L     equ	364	;# 
 21646   00016D                     C1FIFOSTA2H     equ	365	;# 
 21647   00016E                     C1FIFOSTA2U     equ	366	;# 
 21648   00016F                     C1FIFOSTA2T     equ	367	;# 
 21649   000170                     C1FIFOUA2       equ	368	;# 
 21650   000170                     C1FIFOUA2L      equ	368	;# 
 21651   000171                     C1FIFOUA2H      equ	369	;# 
 21652   000172                     C1FIFOUA2U      equ	370	;# 
 21653   000173                     C1FIFOUA2T      equ	371	;# 
 21654   000174                     C1FIFOCON3      equ	372	;# 
 21655   000174                     C1FIFOCON3L     equ	372	;# 
 21656   000175                     C1FIFOCON3H     equ	373	;# 
 21657   000176                     C1FIFOCON3U     equ	374	;# 
 21658   000177                     C1FIFOCON3T     equ	375	;# 
 21659   000178                     C1FIFOSTA3      equ	376	;# 
 21660   000178                     C1FIFOSTA3L     equ	376	;# 
 21661   000179                     C1FIFOSTA3H     equ	377	;# 
 21662   00017A                     C1FIFOSTA3U     equ	378	;# 
 21663   00017B                     C1FIFOSTA3T     equ	379	;# 
 21664   00017C                     C1FIFOUA3       equ	380	;# 
 21665   00017C                     C1FIFOUA3L      equ	380	;# 
 21666   00017D                     C1FIFOUA3H      equ	381	;# 
 21667   00017E                     C1FIFOUA3U      equ	382	;# 
 21668   00017F                     C1FIFOUA3T      equ	383	;# 
 21669   000180                     C1FLTCON0L      equ	384	;# 
 21670   000181                     C1FLTCON0H      equ	385	;# 
 21671   000182                     C1FLTCON0U      equ	386	;# 
 21672   000183                     C1FLTCON0T      equ	387	;# 
 21673   000184                     C1FLTCON1L      equ	388	;# 
 21674   000185                     C1FLTCON1H      equ	389	;# 
 21675   000186                     C1FLTCON1U      equ	390	;# 
 21676   000187                     C1FLTCON1T      equ	391	;# 
 21677   000188                     C1FLTCON2L      equ	392	;# 
 21678   000189                     C1FLTCON2H      equ	393	;# 
 21679   00018A                     C1FLTCON2U      equ	394	;# 
 21680   00018B                     C1FLTCON2T      equ	395	;# 
 21681   00018C                     C1FLTOBJ0       equ	396	;# 
 21682   00018C                     C1FLTOBJ0L      equ	396	;# 
 21683   00018D                     C1FLTOBJ0H      equ	397	;# 
 21684   00018E                     C1FLTOBJ0U      equ	398	;# 
 21685   00018F                     C1FLTOBJ0T      equ	399	;# 
 21686   000190                     C1MASK0         equ	400	;# 
 21687   000190                     C1MASK0L        equ	400	;# 
 21688   000191                     C1MASK0H        equ	401	;# 
 21689   000192                     C1MASK0U        equ	402	;# 
 21690   000193                     C1MASK0T        equ	403	;# 
 21691   000194                     C1FLTOBJ1       equ	404	;# 
 21692   000194                     C1FLTOBJ1L      equ	404	;# 
 21693   000195                     C1FLTOBJ1H      equ	405	;# 
 21694   000196                     C1FLTOBJ1U      equ	406	;# 
 21695   000197                     C1FLTOBJ1T      equ	407	;# 
 21696   000198                     C1MASK1         equ	408	;# 
 21697   000198                     C1MASK1L        equ	408	;# 
 21698   000199                     C1MASK1H        equ	409	;# 
 21699   00019A                     C1MASK1U        equ	410	;# 
 21700   00019B                     C1MASK1T        equ	411	;# 
 21701   00019C                     C1FLTOBJ2       equ	412	;# 
 21702   00019C                     C1FLTOBJ2L      equ	412	;# 
 21703   00019D                     C1FLTOBJ2H      equ	413	;# 
 21704   00019E                     C1FLTOBJ2U      equ	414	;# 
 21705   00019F                     C1FLTOBJ2T      equ	415	;# 
 21706   0001A0                     C1MASK2         equ	416	;# 
 21707   0001A0                     C1MASK2L        equ	416	;# 
 21708   0001A1                     C1MASK2H        equ	417	;# 
 21709   0001A2                     C1MASK2U        equ	418	;# 
 21710   0001A3                     C1MASK2T        equ	419	;# 
 21711   0001A4                     C1FLTOBJ3       equ	420	;# 
 21712   0001A4                     C1FLTOBJ3L      equ	420	;# 
 21713   0001A5                     C1FLTOBJ3H      equ	421	;# 
 21714   0001A6                     C1FLTOBJ3U      equ	422	;# 
 21715   0001A7                     C1FLTOBJ3T      equ	423	;# 
 21716   0001A8                     C1MASK3         equ	424	;# 
 21717   0001A8                     C1MASK3L        equ	424	;# 
 21718   0001A9                     C1MASK3H        equ	425	;# 
 21719   0001AA                     C1MASK3U        equ	426	;# 
 21720   0001AB                     C1MASK3T        equ	427	;# 
 21721   0001AC                     C1FLTOBJ4       equ	428	;# 
 21722   0001AC                     C1FLTOBJ4L      equ	428	;# 
 21723   0001AD                     C1FLTOBJ4H      equ	429	;# 
 21724   0001AE                     C1FLTOBJ4U      equ	430	;# 
 21725   0001AF                     C1FLTOBJ4T      equ	431	;# 
 21726   0001B0                     C1MASK4         equ	432	;# 
 21727   0001B0                     C1MASK4L        equ	432	;# 
 21728   0001B1                     C1MASK4H        equ	433	;# 
 21729   0001B2                     C1MASK4U        equ	434	;# 
 21730   0001B3                     C1MASK4T        equ	435	;# 
 21731   0001B4                     C1FLTOBJ5       equ	436	;# 
 21732   0001B4                     C1FLTOBJ5L      equ	436	;# 
 21733   0001B5                     C1FLTOBJ5H      equ	437	;# 
 21734   0001B6                     C1FLTOBJ5U      equ	438	;# 
 21735   0001B7                     C1FLTOBJ5T      equ	439	;# 
 21736   0001B8                     C1MASK5         equ	440	;# 
 21737   0001B8                     C1MASK5L        equ	440	;# 
 21738   0001B9                     C1MASK5H        equ	441	;# 
 21739   0001BA                     C1MASK5U        equ	442	;# 
 21740   0001BB                     C1MASK5T        equ	443	;# 
 21741   0001BC                     C1FLTOBJ6       equ	444	;# 
 21742   0001BC                     C1FLTOBJ6L      equ	444	;# 
 21743   0001BD                     C1FLTOBJ6H      equ	445	;# 
 21744   0001BE                     C1FLTOBJ6U      equ	446	;# 
 21745   0001BF                     C1FLTOBJ6T      equ	447	;# 
 21746   0001C0                     C1MASK6         equ	448	;# 
 21747   0001C0                     C1MASK6L        equ	448	;# 
 21748   0001C1                     C1MASK6H        equ	449	;# 
 21749   0001C2                     C1MASK6U        equ	450	;# 
 21750   0001C3                     C1MASK6T        equ	451	;# 
 21751   0001C4                     C1FLTOBJ7       equ	452	;# 
 21752   0001C4                     C1FLTOBJ7L      equ	452	;# 
 21753   0001C5                     C1FLTOBJ7H      equ	453	;# 
 21754   0001C6                     C1FLTOBJ7U      equ	454	;# 
 21755   0001C7                     C1FLTOBJ7T      equ	455	;# 
 21756   0001C8                     C1MASK7         equ	456	;# 
 21757   0001C8                     C1MASK7L        equ	456	;# 
 21758   0001C9                     C1MASK7H        equ	457	;# 
 21759   0001CA                     C1MASK7U        equ	458	;# 
 21760   0001CB                     C1MASK7T        equ	459	;# 
 21761   0001CC                     C1FLTOBJ8       equ	460	;# 
 21762   0001CC                     C1FLTOBJ8L      equ	460	;# 
 21763   0001CD                     C1FLTOBJ8H      equ	461	;# 
 21764   0001CE                     C1FLTOBJ8U      equ	462	;# 
 21765   0001CF                     C1FLTOBJ8T      equ	463	;# 
 21766   0001D0                     C1MASK8         equ	464	;# 
 21767   0001D0                     C1MASK8L        equ	464	;# 
 21768   0001D1                     C1MASK8H        equ	465	;# 
 21769   0001D2                     C1MASK8U        equ	466	;# 
 21770   0001D3                     C1MASK8T        equ	467	;# 
 21771   0001D4                     C1FLTOBJ9       equ	468	;# 
 21772   0001D4                     C1FLTOBJ9L      equ	468	;# 
 21773   0001D5                     C1FLTOBJ9H      equ	469	;# 
 21774   0001D6                     C1FLTOBJ9U      equ	470	;# 
 21775   0001D7                     C1FLTOBJ9T      equ	471	;# 
 21776   0001D8                     C1MASK9         equ	472	;# 
 21777   0001D8                     C1MASK9L        equ	472	;# 
 21778   0001D9                     C1MASK9H        equ	473	;# 
 21779   0001DA                     C1MASK9U        equ	474	;# 
 21780   0001DB                     C1MASK9T        equ	475	;# 
 21781   0001DC                     C1FLTOBJ10      equ	476	;# 
 21782   0001DC                     C1FLTOBJ10L     equ	476	;# 
 21783   0001DD                     C1FLTOBJ10H     equ	477	;# 
 21784   0001DE                     C1FLTOBJ10U     equ	478	;# 
 21785   0001DF                     C1FLTOBJ10T     equ	479	;# 
 21786   0001E0                     C1MASK10        equ	480	;# 
 21787   0001E0                     C1MASK10L       equ	480	;# 
 21788   0001E1                     C1MASK10H       equ	481	;# 
 21789   0001E2                     C1MASK10U       equ	482	;# 
 21790   0001E3                     C1MASK10T       equ	483	;# 
 21791   0001E4                     C1FLTOBJ11      equ	484	;# 
 21792   0001E4                     C1FLTOBJ11L     equ	484	;# 
 21793   0001E5                     C1FLTOBJ11H     equ	485	;# 
 21794   0001E6                     C1FLTOBJ11U     equ	486	;# 
 21795   0001E7                     C1FLTOBJ11T     equ	487	;# 
 21796   0001E8                     C1MASK11        equ	488	;# 
 21797   0001E8                     C1MASK11L       equ	488	;# 
 21798   0001E9                     C1MASK11H       equ	489	;# 
 21799   0001EA                     C1MASK11U       equ	490	;# 
 21800   0001EB                     C1MASK11T       equ	491	;# 
 21801   000200                     PPSLOCK         equ	512	;# 
 21802   000201                     RA0PPS          equ	513	;# 
 21803   000202                     RA1PPS          equ	514	;# 
 21804   000203                     RA2PPS          equ	515	;# 
 21805   000204                     RA3PPS          equ	516	;# 
 21806   000205                     RA4PPS          equ	517	;# 
 21807   000206                     RA5PPS          equ	518	;# 
 21808   000207                     RA6PPS          equ	519	;# 
 21809   000208                     RA7PPS          equ	520	;# 
 21810   000209                     RB0PPS          equ	521	;# 
 21811   00020A                     RB1PPS          equ	522	;# 
 21812   00020B                     RB2PPS          equ	523	;# 
 21813   00020C                     RB3PPS          equ	524	;# 
 21814   00020D                     RB4PPS          equ	525	;# 
 21815   00020E                     RB5PPS          equ	526	;# 
 21816   00020F                     RB6PPS          equ	527	;# 
 21817   000210                     RB7PPS          equ	528	;# 
 21818   000211                     RC0PPS          equ	529	;# 
 21819   000212                     RC1PPS          equ	530	;# 
 21820   000213                     RC2PPS          equ	531	;# 
 21821   000214                     RC3PPS          equ	532	;# 
 21822   000215                     RC4PPS          equ	533	;# 
 21823   000216                     RC5PPS          equ	534	;# 
 21824   000217                     RC6PPS          equ	535	;# 
 21825   000218                     RC7PPS          equ	536	;# 
 21826   00023D                     CANRXPPS        equ	573	;# 
 21827   00023E                     INT0PPS         equ	574	;# 
 21828   00023F                     INT1PPS         equ	575	;# 
 21829   000240                     INT2PPS         equ	576	;# 
 21830   000241                     T0CKIPPS        equ	577	;# 
 21831   000242                     T1CKIPPS        equ	578	;# 
 21832   000243                     T1GPPS          equ	579	;# 
 21833   000244                     T3CKIPPS        equ	580	;# 
 21834   000245                     T3GPPS          equ	581	;# 
 21835   000246                     T5CKIPPS        equ	582	;# 
 21836   000247                     T5GPPS          equ	583	;# 
 21837   000248                     T2INPPS         equ	584	;# 
 21838   000249                     T4INPPS         equ	585	;# 
 21839   00024A                     T6INPPS         equ	586	;# 
 21840   00024B                     TUIN0PPS        equ	587	;# 
 21841   00024C                     TUIN1PPS        equ	588	;# 
 21842   00024F                     CCP1PPS         equ	591	;# 
 21843   000250                     CCP2PPS         equ	592	;# 
 21844   000251                     CCP3PPS         equ	593	;# 
 21845   000253                     PWM1ERSPPS      equ	595	;# 
 21846   000254                     PWM2ERSPPS      equ	596	;# 
 21847   000255                     PWM3ERSPPS      equ	597	;# 
 21848   000256                     PWM4ERSPPS      equ	598	;# 
 21849   000257                     PWMIN0PPS       equ	599	;# 
 21850   000258                     PWMIN1PPS       equ	600	;# 
 21851   000259                     SMT1WINPPS      equ	601	;# 
 21852   00025A                     SMT1SIGPPS      equ	602	;# 
 21853   00025B                     CWG1PPS         equ	603	;# 
 21854   00025B                     CWG1INPPS       equ	603	;# 
 21855   00025C                     CWG2PPS         equ	604	;# 
 21856   00025C                     CWG2INPPS       equ	604	;# 
 21857   00025D                     CWG3PPS         equ	605	;# 
 21858   00025D                     CWG3INPPS       equ	605	;# 
 21859   00025E                     MD1CARLPPS      equ	606	;# 
 21860   00025E                     MDCARLPPS       equ	606	;# 
 21861   00025F                     MD1CARHPPS      equ	607	;# 
 21862   00025F                     MDCARHPPS       equ	607	;# 
 21863   000260                     MD1SRCPPS       equ	608	;# 
 21864   000260                     MDSRCPPS        equ	608	;# 
 21865   000261                     CLCIN0PPS       equ	609	;# 
 21866   000262                     CLCIN1PPS       equ	610	;# 
 21867   000263                     CLCIN2PPS       equ	611	;# 
 21868   000264                     CLCIN3PPS       equ	612	;# 
 21869   000265                     CLCIN4PPS       equ	613	;# 
 21870   000266                     CLCIN5PPS       equ	614	;# 
 21871   000267                     CLCIN6PPS       equ	615	;# 
 21872   000268                     CLCIN7PPS       equ	616	;# 
 21873   000269                     ADACTPPS        equ	617	;# 
 21874   00026A                     SPI1SCKPPS      equ	618	;# 
 21875   00026B                     SPI1SDIPPS      equ	619	;# 
 21876   00026C                     SPI1SSPPS       equ	620	;# 
 21877   00026D                     SPI2SCKPPS      equ	621	;# 
 21878   00026E                     SPI2SDIPPS      equ	622	;# 
 21879   00026F                     SPI2SSPPS       equ	623	;# 
 21880   000270                     I2C1SDAPPS      equ	624	;# 
 21881   000271                     I2C1SCLPPS      equ	625	;# 
 21882   000272                     U1RXPPS         equ	626	;# 
 21883   000273                     U1CTSPPS        equ	627	;# 
 21884   000274                     U2RXPPS         equ	628	;# 
 21885   000275                     U2CTSPPS        equ	629	;# 
 21886   000276                     U3RXPPS         equ	630	;# 
 21887   000277                     U3CTSPPS        equ	631	;# 
 21888   000278                     U4RXPPS         equ	632	;# 
 21889   000279                     U4CTSPPS        equ	633	;# 
 21890   00027A                     U5RXPPS         equ	634	;# 
 21891   00027B                     U5CTSPPS        equ	635	;# 
 21892   000286                     RC4I2C          equ	646	;# 
 21893   000287                     RC3I2C          equ	647	;# 
 21894   000288                     RB2I2C          equ	648	;# 
 21895   000289                     RB1I2C          equ	649	;# 
 21896   00028A                     I2C1RXB         equ	650	;# 
 21897   00028B                     I2C1TXB         equ	651	;# 
 21898   00028C                     I2C1CNTL        equ	652	;# 
 21899   00028D                     I2C1CNTH        equ	653	;# 
 21900   00028E                     I2C1ADB0        equ	654	;# 
 21901   00028F                     I2C1ADB1        equ	655	;# 
 21902   000290                     I2C1ADR0        equ	656	;# 
 21903   000291                     I2C1ADR1        equ	657	;# 
 21904   000292                     I2C1ADR2        equ	658	;# 
 21905   000293                     I2C1ADR3        equ	659	;# 
 21906   000294                     I2C1CON0        equ	660	;# 
 21907   000295                     I2C1CON1        equ	661	;# 
 21908   000296                     I2C1CON2        equ	662	;# 
 21909   000297                     I2C1ERR         equ	663	;# 
 21910   000298                     I2C1STAT0       equ	664	;# 
 21911   000299                     I2C1STAT1       equ	665	;# 
 21912   00029A                     I2C1PIR         equ	666	;# 
 21913   00029B                     I2C1PIE         equ	667	;# 
 21914   00029C                     I2C1BTO         equ	668	;# 
 21915   00029D                     I2C1BAUD        equ	669	;# 
 21916   00029E                     I2C1CLK         equ	670	;# 
 21917   00029F                     I2C1BTOC        equ	671	;# 
 21918   0002A1                     U1RXB           equ	673	;# 
 21919   0002A1                     U1RXBL          equ	673	;# 
 21920   0002A2                     U1RXCHK         equ	674	;# 
 21921   0002A3                     U1TXB           equ	675	;# 
 21922   0002A3                     U1TXBL          equ	675	;# 
 21923   0002A4                     U1TXCHK         equ	676	;# 
 21924   0002A5                     U1P1            equ	677	;# 
 21925   0002A5                     U1P1L           equ	677	;# 
 21926   0002A6                     U1P1H           equ	678	;# 
 21927   0002A7                     U1P2            equ	679	;# 
 21928   0002A7                     U1P2L           equ	679	;# 
 21929   0002A8                     U1P2H           equ	680	;# 
 21930   0002A9                     U1P3            equ	681	;# 
 21931   0002A9                     U1P3L           equ	681	;# 
 21932   0002AA                     U1P3H           equ	682	;# 
 21933   0002AB                     U1CON0          equ	683	;# 
 21934   0002AC                     U1CON1          equ	684	;# 
 21935   0002AD                     U1CON2          equ	685	;# 
 21936   0002AE                     U1BRG           equ	686	;# 
 21937   0002AE                     U1BRGL          equ	686	;# 
 21938   0002AF                     U1BRGH          equ	687	;# 
 21939   0002B0                     U1FIFO          equ	688	;# 
 21940   0002B1                     U1UIR           equ	689	;# 
 21941   0002B2                     U1ERRIR         equ	690	;# 
 21942   0002B3                     U1ERRIE         equ	691	;# 
 21943   0002B4                     U2RXB           equ	692	;# 
 21944   0002B4                     U2RXBL          equ	692	;# 
 21945   0002B5                     U2RXCHK         equ	693	;# 
 21946   0002B6                     U2TXB           equ	694	;# 
 21947   0002B6                     U2TXBL          equ	694	;# 
 21948   0002B7                     U2TXCHK         equ	695	;# 
 21949   0002B8                     U2P1            equ	696	;# 
 21950   0002B8                     U2P1L           equ	696	;# 
 21951   0002B9                     U2P1H           equ	697	;# 
 21952   0002BA                     U2P2            equ	698	;# 
 21953   0002BA                     U2P2L           equ	698	;# 
 21954   0002BB                     U2P2H           equ	699	;# 
 21955   0002BC                     U2P3            equ	700	;# 
 21956   0002BC                     U2P3L           equ	700	;# 
 21957   0002BD                     U2P3H           equ	701	;# 
 21958   0002BE                     U2CON0          equ	702	;# 
 21959   0002BF                     U2CON1          equ	703	;# 
 21960   0002C0                     U2CON2          equ	704	;# 
 21961   0002C1                     U2BRG           equ	705	;# 
 21962   0002C1                     U2BRGL          equ	705	;# 
 21963   0002C2                     U2BRGH          equ	706	;# 
 21964   0002C3                     U2FIFO          equ	707	;# 
 21965   0002C4                     U2UIR           equ	708	;# 
 21966   0002C5                     U2ERRIR         equ	709	;# 
 21967   0002C6                     U2ERRIE         equ	710	;# 
 21968   0002C7                     U3RXB           equ	711	;# 
 21969   0002C7                     U3RXBL          equ	711	;# 
 21970   0002C9                     U3TXB           equ	713	;# 
 21971   0002C9                     U3TXBL          equ	713	;# 
 21972   0002CB                     U3P1            equ	715	;# 
 21973   0002CB                     U3P1L           equ	715	;# 
 21974   0002CD                     U3P2            equ	717	;# 
 21975   0002CD                     U3P2L           equ	717	;# 
 21976   0002CF                     U3P3            equ	719	;# 
 21977   0002CF                     U3P3L           equ	719	;# 
 21978   0002D1                     U3CON0          equ	721	;# 
 21979   0002D2                     U3CON1          equ	722	;# 
 21980   0002D3                     U3CON2          equ	723	;# 
 21981   0002D4                     U3BRG           equ	724	;# 
 21982   0002D4                     U3BRGL          equ	724	;# 
 21983   0002D5                     U3BRGH          equ	725	;# 
 21984   0002D6                     U3FIFO          equ	726	;# 
 21985   0002D7                     U3UIR           equ	727	;# 
 21986   0002D8                     U3ERRIR         equ	728	;# 
 21987   0002D9                     U3ERRIE         equ	729	;# 
 21988   0002DA                     U4RXB           equ	730	;# 
 21989   0002DA                     U4RXBL          equ	730	;# 
 21990   0002DC                     U4TXB           equ	732	;# 
 21991   0002DC                     U4TXBL          equ	732	;# 
 21992   0002DE                     U4P1            equ	734	;# 
 21993   0002DE                     U4P1L           equ	734	;# 
 21994   0002E0                     U4P2            equ	736	;# 
 21995   0002E0                     U4P2L           equ	736	;# 
 21996   0002E2                     U4P3            equ	738	;# 
 21997   0002E2                     U4P3L           equ	738	;# 
 21998   0002E4                     U4CON0          equ	740	;# 
 21999   0002E5                     U4CON1          equ	741	;# 
 22000   0002E6                     U4CON2          equ	742	;# 
 22001   0002E7                     U4BRG           equ	743	;# 
 22002   0002E7                     U4BRGL          equ	743	;# 
 22003   0002E8                     U4BRGH          equ	744	;# 
 22004   0002E9                     U4FIFO          equ	745	;# 
 22005   0002EA                     U4UIR           equ	746	;# 
 22006   0002EB                     U4ERRIR         equ	747	;# 
 22007   0002EC                     U4ERRIE         equ	748	;# 
 22008   0002ED                     U5RXB           equ	749	;# 
 22009   0002ED                     U5RXBL          equ	749	;# 
 22010   0002EF                     U5TXB           equ	751	;# 
 22011   0002EF                     U5TXBL          equ	751	;# 
 22012   0002F1                     U5P1            equ	753	;# 
 22013   0002F1                     U5P1L           equ	753	;# 
 22014   0002F3                     U5P2            equ	755	;# 
 22015   0002F3                     U5P2L           equ	755	;# 
 22016   0002F5                     U5P3            equ	757	;# 
 22017   0002F5                     U5P3L           equ	757	;# 
 22018   0002F7                     U5CON0          equ	759	;# 
 22019   0002F8                     U5CON1          equ	760	;# 
 22020   0002F9                     U5CON2          equ	761	;# 
 22021   0002FA                     U5BRG           equ	762	;# 
 22022   0002FA                     U5BRGL          equ	762	;# 
 22023   0002FB                     U5BRGH          equ	763	;# 
 22024   0002FC                     U5FIFO          equ	764	;# 
 22025   0002FD                     U5UIR           equ	765	;# 
 22026   0002FE                     U5ERRIR         equ	766	;# 
 22027   0002FF                     U5ERRIE         equ	767	;# 
 22028   000300                     SMT1TMR         equ	768	;# 
 22029   000300                     SMT1TMRL        equ	768	;# 
 22030   000301                     SMT1TMRH        equ	769	;# 
 22031   000302                     SMT1TMRU        equ	770	;# 
 22032   000303                     SMT1CPR         equ	771	;# 
 22033   000303                     SMT1CPRL        equ	771	;# 
 22034   000304                     SMT1CPRH        equ	772	;# 
 22035   000305                     SMT1CPRU        equ	773	;# 
 22036   000306                     SMT1CPW         equ	774	;# 
 22037   000306                     SMT1CPWL        equ	774	;# 
 22038   000307                     SMT1CPWH        equ	775	;# 
 22039   000308                     SMT1CPWU        equ	776	;# 
 22040   000309                     SMT1PR          equ	777	;# 
 22041   000309                     SMT1PRL         equ	777	;# 
 22042   00030A                     SMT1PRH         equ	778	;# 
 22043   00030B                     SMT1PRU         equ	779	;# 
 22044   00030C                     SMT1CON0        equ	780	;# 
 22045   00030D                     SMT1CON1        equ	781	;# 
 22046   00030E                     SMT1STAT        equ	782	;# 
 22047   00030F                     SMT1CLK         equ	783	;# 
 22048   000310                     SMT1SIG         equ	784	;# 
 22049   000311                     SMT1WIN         equ	785	;# 
 22050   000318                     TMR0L           equ	792	;# 
 22051   000318                     TMR0            equ	792	;# 
 22052   000319                     TMR0H           equ	793	;# 
 22053   000319                     PR0             equ	793	;# 
 22054   00031A                     T0CON0          equ	794	;# 
 22055   00031B                     T0CON1          equ	795	;# 
 22056   00031C                     TMR1            equ	796	;# 
 22057   00031C                     TMR1L           equ	796	;# 
 22058   00031D                     TMR1H           equ	797	;# 
 22059   00031E                     T1CON           equ	798	;# 
 22060   00031E                     TMR1CON         equ	798	;# 
 22061   00031F                     T1GCON          equ	799	;# 
 22062   00031F                     TMR1GCON        equ	799	;# 
 22063   000320                     T1GATE          equ	800	;# 
 22064   000320                     TMR1GATE        equ	800	;# 
 22065   000321                     T1CLK           equ	801	;# 
 22066   000321                     TMR1CLK         equ	801	;# 
 22067   000321                     PR1             equ	801	;# 
 22068   000322                     T2TMR           equ	802	;# 
 22069   000322                     TMR2            equ	802	;# 
 22070   000323                     T2PR            equ	803	;# 
 22071   000323                     PR2             equ	803	;# 
 22072   000324                     T2CON           equ	804	;# 
 22073   000325                     T2HLT           equ	805	;# 
 22074   000326                     T2CLKCON        equ	806	;# 
 22075   000326                     T2CLK           equ	806	;# 
 22076   000327                     T2RST           equ	807	;# 
 22077   000328                     TMR3            equ	808	;# 
 22078   000328                     TMR3L           equ	808	;# 
 22079   000329                     TMR3H           equ	809	;# 
 22080   00032A                     T3CON           equ	810	;# 
 22081   00032A                     TMR3CON         equ	810	;# 
 22082   00032B                     T3GCON          equ	811	;# 
 22083   00032B                     TMR3GCON        equ	811	;# 
 22084   00032C                     T3GATE          equ	812	;# 
 22085   00032C                     TMR3GATE        equ	812	;# 
 22086   00032D                     T3CLK           equ	813	;# 
 22087   00032D                     TMR3CLK         equ	813	;# 
 22088   00032D                     PR3             equ	813	;# 
 22089   00032E                     T4TMR           equ	814	;# 
 22090   00032E                     TMR4            equ	814	;# 
 22091   00032F                     T4PR            equ	815	;# 
 22092   00032F                     PR4             equ	815	;# 
 22093   000330                     T4CON           equ	816	;# 
 22094   000331                     T4HLT           equ	817	;# 
 22095   000332                     T4CLKCON        equ	818	;# 
 22096   000332                     T4CLK           equ	818	;# 
 22097   000333                     T4RST           equ	819	;# 
 22098   000334                     TMR5            equ	820	;# 
 22099   000334                     TMR5L           equ	820	;# 
 22100   000335                     TMR5H           equ	821	;# 
 22101   000336                     T5CON           equ	822	;# 
 22102   000336                     TMR5CON         equ	822	;# 
 22103   000337                     T5GCON          equ	823	;# 
 22104   000337                     TMR5GCON        equ	823	;# 
 22105   000338                     T5GATE          equ	824	;# 
 22106   000338                     TMR5GATE        equ	824	;# 
 22107   000339                     T5CLK           equ	825	;# 
 22108   000339                     TMR5CLK         equ	825	;# 
 22109   000339                     PR5             equ	825	;# 
 22110   00033A                     T6TMR           equ	826	;# 
 22111   00033A                     TMR6            equ	826	;# 
 22112   00033B                     T6PR            equ	827	;# 
 22113   00033B                     PR6             equ	827	;# 
 22114   00033C                     T6CON           equ	828	;# 
 22115   00033D                     T6HLT           equ	829	;# 
 22116   00033E                     T6CLKCON        equ	830	;# 
 22117   00033E                     T6CLK           equ	830	;# 
 22118   00033F                     T6RST           equ	831	;# 
 22119   000340                     CCPR1           equ	832	;# 
 22120   000340                     CCPR1L          equ	832	;# 
 22121   000341                     CCPR1H          equ	833	;# 
 22122   000342                     CCP1CON         equ	834	;# 
 22123   000343                     CCP1CAP         equ	835	;# 
 22124   000344                     CCPR2           equ	836	;# 
 22125   000344                     CCPR2L          equ	836	;# 
 22126   000345                     CCPR2H          equ	837	;# 
 22127   000346                     CCP2CON         equ	838	;# 
 22128   000347                     CCP2CAP         equ	839	;# 
 22129   000348                     CCPR3           equ	840	;# 
 22130   000348                     CCPR3L          equ	840	;# 
 22131   000349                     CCPR3H          equ	841	;# 
 22132   00034A                     CCP3CON         equ	842	;# 
 22133   00034B                     CCP3CAP         equ	843	;# 
 22134   00034C                     CCPTMRS0        equ	844	;# 
 22135   00034F                     CRCDATA         equ	847	;# 
 22136   00034F                     CRCDATAL        equ	847	;# 
 22137   000350                     CRCDATAH        equ	848	;# 
 22138   000351                     CRCDATAU        equ	849	;# 
 22139   000352                     CRCDATAT        equ	850	;# 
 22140   000353                     CRCOUT          equ	851	;# 
 22141   000353                     CRCSHFT         equ	851	;# 
 22142   000353                     CRCXOR          equ	851	;# 
 22143   000353                     CRCOUTL         equ	851	;# 
 22144   000353                     CRCSHFTL        equ	851	;# 
 22145   000353                     CRCSHIFTL       equ	851	;# 
 22146   000353                     CRCXORL         equ	851	;# 
 22147   000354                     CRCOUTH         equ	852	;# 
 22148   000354                     CRCSHFTH        equ	852	;# 
 22149   000354                     CRCSHIFTH       equ	852	;# 
 22150   000354                     CRCXORH         equ	852	;# 
 22151   000355                     CRCOUTU         equ	853	;# 
 22152   000355                     CRCSHFTU        equ	853	;# 
 22153   000355                     CRCSHIFTU       equ	853	;# 
 22154   000355                     CRCXORU         equ	853	;# 
 22155   000356                     CRCOUTT         equ	854	;# 
 22156   000356                     CRCSHFTT        equ	854	;# 
 22157   000356                     CRCSHIFTT       equ	854	;# 
 22158   000356                     CRCXORT         equ	854	;# 
 22159   000357                     CRCCON0         equ	855	;# 
 22160   000358                     CRCCON1         equ	856	;# 
 22161   000359                     CRCCON2         equ	857	;# 
 22162   00035A                     SCANLADR        equ	858	;# 
 22163   00035A                     SCANLADRL       equ	858	;# 
 22164   00035B                     SCANLADRH       equ	859	;# 
 22165   00035C                     SCANLADRU       equ	860	;# 
 22166   00035D                     SCANHADR        equ	861	;# 
 22167   00035D                     SCANHADRL       equ	861	;# 
 22168   00035E                     SCANHADRH       equ	862	;# 
 22169   00035F                     SCANHADRU       equ	863	;# 
 22170   000360                     SCANCON0        equ	864	;# 
 22171   000361                     SCANTRIG        equ	865	;# 
 22172   000362                     IPR0            equ	866	;# 
 22173   000363                     IPR1            equ	867	;# 
 22174   000364                     IPR2            equ	868	;# 
 22175   000365                     IPR3            equ	869	;# 
 22176   000366                     IPR4            equ	870	;# 
 22177   000367                     IPR5            equ	871	;# 
 22178   000368                     IPR6            equ	872	;# 
 22179   000369                     IPR7            equ	873	;# 
 22180   00036A                     IPR8            equ	874	;# 
 22181   00036B                     IPR9            equ	875	;# 
 22182   00036C                     IPR10           equ	876	;# 
 22183   00036D                     IPR11           equ	877	;# 
 22184   00036E                     IPR12           equ	878	;# 
 22185   00036F                     IPR13           equ	879	;# 
 22186   000370                     IPR14           equ	880	;# 
 22187   000371                     IPR15           equ	881	;# 
 22188   000373                     STATUS_CSHAD    equ	883	;# 
 22189   000374                     WREG_CSHAD      equ	884	;# 
 22190   000375                     BSR_CSHAD       equ	885	;# 
 22191   000376                     SHADCON         equ	886	;# 
 22192   000377                     STATUS_SHAD     equ	887	;# 
 22193   000378                     WREG_SHAD       equ	888	;# 
 22194   000379                     BSR_SHAD        equ	889	;# 
 22195   00037A                     PCLATH_SHAD     equ	890	;# 
 22196   00037B                     PCLATU_SHAD     equ	891	;# 
 22197   00037C                     FSR0SH          equ	892	;# 
 22198   00037C                     FSR0L_SHAD      equ	892	;# 
 22199   00037D                     FSR0H_SHAD      equ	893	;# 
 22200   00037E                     FSR1SH          equ	894	;# 
 22201   00037E                     FSR1L_SHAD      equ	894	;# 
 22202   00037F                     FSR1H_SHAD      equ	895	;# 
 22203   000380                     FSR2SH          equ	896	;# 
 22204   000380                     FSR2L_SHAD      equ	896	;# 
 22205   000381                     FSR2H_SHAD      equ	897	;# 
 22206   000382                     PRODSH          equ	898	;# 
 22207   000382                     PRODL_SHAD      equ	898	;# 
 22208   000383                     PRODH_SHAD      equ	899	;# 
 22209   000387                     TU16ACON0       equ	903	;# 
 22210   000388                     TU16ACON1       equ	904	;# 
 22211   000389                     TU16AHLT        equ	905	;# 
 22212   00038A                     TU16APS         equ	906	;# 
 22213   00038B                     TU16ATMR        equ	907	;# 
 22214   00038B                     TU16ACR         equ	907	;# 
 22215   00038B                     TU16ATMRL       equ	907	;# 
 22216   00038B                     TU16ACRL        equ	907	;# 
 22217   00038C                     TU16ATMRH       equ	908	;# 
 22218   00038C                     TU16ACRH        equ	908	;# 
 22219   00038D                     TU16APR         equ	909	;# 
 22220   00038D                     TU16APRL        equ	909	;# 
 22221   00038E                     TU16APRH        equ	910	;# 
 22222   00038F                     TU16ACLK        equ	911	;# 
 22223   000390                     TU16AERS        equ	912	;# 
 22224   000393                     TU16BCON0       equ	915	;# 
 22225   000394                     TU16BCON1       equ	916	;# 
 22226   000395                     TU16BHLT        equ	917	;# 
 22227   000396                     TU16BPS         equ	918	;# 
 22228   000397                     TU16BTMR        equ	919	;# 
 22229   000397                     TU16BCR         equ	919	;# 
 22230   000397                     TU16BTMRL       equ	919	;# 
 22231   000397                     TU16BCRL        equ	919	;# 
 22232   000398                     TU16BTMRH       equ	920	;# 
 22233   000398                     TU16BCRH        equ	920	;# 
 22234   000399                     TU16BPR         equ	921	;# 
 22235   000399                     TU16BPRL        equ	921	;# 
 22236   00039A                     TU16BPRH        equ	922	;# 
 22237   00039B                     TU16BCLK        equ	923	;# 
 22238   00039C                     TU16BERS        equ	924	;# 
 22239   0003BB                     TUCHAIN         equ	955	;# 
 22240   0003BC                     CWG1CLK         equ	956	;# 
 22241   0003BC                     CWG1CLKCON      equ	956	;# 
 22242   0003BD                     CWG1ISM         equ	957	;# 
 22243   0003BE                     CWG1DBR         equ	958	;# 
 22244   0003BF                     CWG1DBF         equ	959	;# 
 22245   0003C0                     CWG1CON0        equ	960	;# 
 22246   0003C1                     CWG1CON1        equ	961	;# 
 22247   0003C2                     CWG1AS0         equ	962	;# 
 22248   0003C3                     CWG1AS1         equ	963	;# 
 22249   0003C4                     CWG1STR         equ	964	;# 
 22250   0003C5                     CWG2CLK         equ	965	;# 
 22251   0003C5                     CWG2CLKCON      equ	965	;# 
 22252   0003C6                     CWG2ISM         equ	966	;# 
 22253   0003C7                     CWG2DBR         equ	967	;# 
 22254   0003C8                     CWG2DBF         equ	968	;# 
 22255   0003C9                     CWG2CON0        equ	969	;# 
 22256   0003CA                     CWG2CON1        equ	970	;# 
 22257   0003CB                     CWG2AS0         equ	971	;# 
 22258   0003CC                     CWG2AS1         equ	972	;# 
 22259   0003CD                     CWG2STR         equ	973	;# 
 22260   0003CE                     CWG3CLK         equ	974	;# 
 22261   0003CE                     CWG3CLKCON      equ	974	;# 
 22262   0003CF                     CWG3ISM         equ	975	;# 
 22263   0003D0                     CWG3DBR         equ	976	;# 
 22264   0003D1                     CWG3DBF         equ	977	;# 
 22265   0003D2                     CWG3CON0        equ	978	;# 
 22266   0003D3                     CWG3CON1        equ	979	;# 
 22267   0003D4                     CWG3AS0         equ	980	;# 
 22268   0003D5                     CWG3AS1         equ	981	;# 
 22269   0003D6                     CWG3STR         equ	982	;# 
 22270   0003D7                     FVRCON          equ	983	;# 
 22271   0003D8                     ADCPCON         equ	984	;# 
 22272   0003D8                     ADCP            equ	984	;# 
 22273   0003D9                     ADLTH           equ	985	;# 
 22274   0003D9                     ADLTHL          equ	985	;# 
 22275   0003DA                     ADLTHH          equ	986	;# 
 22276   0003DB                     ADUTH           equ	987	;# 
 22277   0003DB                     ADUTHL          equ	987	;# 
 22278   0003DC                     ADUTHH          equ	988	;# 
 22279   0003DD                     ADERR           equ	989	;# 
 22280   0003DD                     ADERRL          equ	989	;# 
 22281   0003DE                     ADERRH          equ	990	;# 
 22282   0003DF                     ADSTPT          equ	991	;# 
 22283   0003DF                     ADSTPTL         equ	991	;# 
 22284   0003E0                     ADSTPTH         equ	992	;# 
 22285   0003E1                     ADFLTR          equ	993	;# 
 22286   0003E1                     ADFLTRL         equ	993	;# 
 22287   0003E2                     ADFLTRH         equ	994	;# 
 22288   0003E3                     ADACC           equ	995	;# 
 22289   0003E3                     ADACCL          equ	995	;# 
 22290   0003E4                     ADACCH          equ	996	;# 
 22291   0003E5                     ADACCU          equ	997	;# 
 22292   0003E6                     ADCNT           equ	998	;# 
 22293   0003E7                     ADRPT           equ	999	;# 
 22294   0003E8                     ADPREV          equ	1000	;# 
 22295   0003E8                     ADPREVL         equ	1000	;# 
 22296   0003E9                     ADPREVH         equ	1001	;# 
 22297   0003EA                     ADRES           equ	1002	;# 
 22298   0003EA                     ADRESL          equ	1002	;# 
 22299   0003EB                     ADRESH          equ	1003	;# 
 22300   0003EC                     ADPCH           equ	1004	;# 
 22301   0003EE                     ADACQ           equ	1006	;# 
 22302   0003EE                     ADACQL          equ	1006	;# 
 22303   0003EF                     ADACQH          equ	1007	;# 
 22304   0003F0                     ADCAP           equ	1008	;# 
 22305   0003F1                     ADPRE           equ	1009	;# 
 22306   0003F1                     ADPREL          equ	1009	;# 
 22307   0003F2                     ADPREH          equ	1010	;# 
 22308   0003F3                     ADCON0          equ	1011	;# 
 22309   0003F4                     ADCON1          equ	1012	;# 
 22310   0003F5                     ADCON2          equ	1013	;# 
 22311   0003F6                     ADCON3          equ	1014	;# 
 22312   0003F7                     ADSTAT          equ	1015	;# 
 22313   0003F8                     ADREF           equ	1016	;# 
 22314   0003F9                     ADACT           equ	1017	;# 
 22315   0003FA                     ADCLK           equ	1018	;# 
 22316   0003FB                     ADCTX           equ	1019	;# 
 22317   0003FC                     ADCSEL1         equ	1020	;# 
 22318   0003FD                     ADCSEL2         equ	1021	;# 
 22319   0003FE                     ADCSEL3         equ	1022	;# 
 22320   0003FF                     ADCSEL4         equ	1023	;# 
 22321   000400                     ANSELA          equ	1024	;# 
 22322   000401                     WPUA            equ	1025	;# 
 22323   000402                     ODCONA          equ	1026	;# 
 22324   000403                     SLRCONA         equ	1027	;# 
 22325   000404                     INLVLA          equ	1028	;# 
 22326   000405                     IOCAP           equ	1029	;# 
 22327   000406                     IOCAN           equ	1030	;# 
 22328   000407                     IOCAF           equ	1031	;# 
 22329   000408                     ANSELB          equ	1032	;# 
 22330   000409                     WPUB            equ	1033	;# 
 22331   00040A                     ODCONB          equ	1034	;# 
 22332   00040B                     SLRCONB         equ	1035	;# 
 22333   00040C                     INLVLB          equ	1036	;# 
 22334   00040D                     IOCBP           equ	1037	;# 
 22335   00040E                     IOCBN           equ	1038	;# 
 22336   00040F                     IOCBF           equ	1039	;# 
 22337   000410                     ANSELC          equ	1040	;# 
 22338   000411                     WPUC            equ	1041	;# 
 22339   000412                     ODCONC          equ	1042	;# 
 22340   000413                     SLRCONC         equ	1043	;# 
 22341   000414                     INLVLC          equ	1044	;# 
 22342   000415                     IOCCP           equ	1045	;# 
 22343   000416                     IOCCN           equ	1046	;# 
 22344   000417                     IOCCF           equ	1047	;# 
 22345   000421                     WPUE            equ	1057	;# 
 22346   000424                     INLVLE          equ	1060	;# 
 22347   000425                     IOCEP           equ	1061	;# 
 22348   000426                     IOCEN           equ	1062	;# 
 22349   000427                     IOCEF           equ	1063	;# 
 22350   000440                     NCO1ACC         equ	1088	;# 
 22351   000440                     NCO1ACCL        equ	1088	;# 
 22352   000441                     NCO1ACCH        equ	1089	;# 
 22353   000442                     NCO1ACCU        equ	1090	;# 
 22354   000443                     NCO1INC         equ	1091	;# 
 22355   000443                     NCO1INCL        equ	1091	;# 
 22356   000444                     NCO1INCH        equ	1092	;# 
 22357   000445                     NCO1INCU        equ	1093	;# 
 22358   000446                     NCO1CON         equ	1094	;# 
 22359   000447                     NCO1CLK         equ	1095	;# 
 22360   000448                     NCO2ACC         equ	1096	;# 
 22361   000448                     NCO2ACCL        equ	1096	;# 
 22362   000449                     NCO2ACCH        equ	1097	;# 
 22363   00044A                     NCO2ACCU        equ	1098	;# 
 22364   00044B                     NCO2INC         equ	1099	;# 
 22365   00044B                     NCO2INCL        equ	1099	;# 
 22366   00044C                     NCO2INCH        equ	1100	;# 
 22367   00044D                     NCO2INCU        equ	1101	;# 
 22368   00044E                     NCO2CON         equ	1102	;# 
 22369   00044F                     NCO2CLK         equ	1103	;# 
 22370   000450                     NCO3ACC         equ	1104	;# 
 22371   000450                     NCO3ACCL        equ	1104	;# 
 22372   000451                     NCO3ACCH        equ	1105	;# 
 22373   000452                     NCO3ACCU        equ	1106	;# 
 22374   000453                     NCO3INC         equ	1107	;# 
 22375   000453                     NCO3INCL        equ	1107	;# 
 22376   000454                     NCO3INCH        equ	1108	;# 
 22377   000455                     NCO3INCU        equ	1109	;# 
 22378   000456                     NCO3CON         equ	1110	;# 
 22379   000457                     NCO3CLK         equ	1111	;# 
 22380   000458                     FSCMCON         equ	1112	;# 
 22381   000459                     IVTLOCK         equ	1113	;# 
 22382   00045A                     IVTAD           equ	1114	;# 
 22383   00045A                     IVTADL          equ	1114	;# 
 22384   00045B                     IVTADH          equ	1115	;# 
 22385   00045C                     IVTADU          equ	1116	;# 
 22386   00045D                     IVTBASE         equ	1117	;# 
 22387   00045D                     IVTBASEL        equ	1117	;# 
 22388   00045E                     IVTBASEH        equ	1118	;# 
 22389   00045F                     IVTBASEU        equ	1119	;# 
 22390   000460                     PWM1ERS         equ	1120	;# 
 22391   000461                     PWM1CLK         equ	1121	;# 
 22392   000462                     PWM1LDS         equ	1122	;# 
 22393   000463                     PWM1PR          equ	1123	;# 
 22394   000463                     PWM1PRL         equ	1123	;# 
 22395   000464                     PWM1PRH         equ	1124	;# 
 22396   000465                     PWM1CPRE        equ	1125	;# 
 22397   000466                     PWM1PIPOS       equ	1126	;# 
 22398   000467                     PWM1GIR         equ	1127	;# 
 22399   000468                     PWM1GIE         equ	1128	;# 
 22400   000469                     PWM1CON         equ	1129	;# 
 22401   00046A                     PWM1S1CFG       equ	1130	;# 
 22402   00046B                     PWM1S1P1        equ	1131	;# 
 22403   00046B                     PWM1S1P1L       equ	1131	;# 
 22404   00046C                     PWM1S1P1H       equ	1132	;# 
 22405   00046D                     PWM1S1P2        equ	1133	;# 
 22406   00046D                     PWM1S1P2L       equ	1133	;# 
 22407   00046E                     PWM1S1P2H       equ	1134	;# 
 22408   00046F                     PWM2ERS         equ	1135	;# 
 22409   000470                     PWM2CLK         equ	1136	;# 
 22410   000471                     PWM2LDS         equ	1137	;# 
 22411   000472                     PWM2PR          equ	1138	;# 
 22412   000472                     PWM2PRL         equ	1138	;# 
 22413   000473                     PWM2PRH         equ	1139	;# 
 22414   000474                     PWM2CPRE        equ	1140	;# 
 22415   000475                     PWM2PIPOS       equ	1141	;# 
 22416   000476                     PWM2GIR         equ	1142	;# 
 22417   000477                     PWM2GIE         equ	1143	;# 
 22418   000478                     PWM2CON         equ	1144	;# 
 22419   000479                     PWM2S1CFG       equ	1145	;# 
 22420   00047A                     PWM2S1P1        equ	1146	;# 
 22421   00047A                     PWM2S1P1L       equ	1146	;# 
 22422   00047B                     PWM2S1P1H       equ	1147	;# 
 22423   00047C                     PWM2S1P2        equ	1148	;# 
 22424   00047C                     PWM2S1P2L       equ	1148	;# 
 22425   00047D                     PWM2S1P2H       equ	1149	;# 
 22426   00047E                     PWM3ERS         equ	1150	;# 
 22427   00047F                     PWM3CLK         equ	1151	;# 
 22428   000480                     PWM3LDS         equ	1152	;# 
 22429   000481                     PWM3PR          equ	1153	;# 
 22430   000481                     PWM3PRL         equ	1153	;# 
 22431   000482                     PWM3PRH         equ	1154	;# 
 22432   000483                     PWM3CPRE        equ	1155	;# 
 22433   000484                     PWM3PIPOS       equ	1156	;# 
 22434   000485                     PWM3GIR         equ	1157	;# 
 22435   000486                     PWM3GIE         equ	1158	;# 
 22436   000487                     PWM3CON         equ	1159	;# 
 22437   000488                     PWM3S1CFG       equ	1160	;# 
 22438   000489                     PWM3S1P1        equ	1161	;# 
 22439   000489                     PWM3S1P1L       equ	1161	;# 
 22440   00048A                     PWM3S1P1H       equ	1162	;# 
 22441   00048B                     PWM3S1P2        equ	1163	;# 
 22442   00048B                     PWM3S1P2L       equ	1163	;# 
 22443   00048C                     PWM3S1P2H       equ	1164	;# 
 22444   00048D                     PWM4ERS         equ	1165	;# 
 22445   00048E                     PWM4CLK         equ	1166	;# 
 22446   00048F                     PWM4LDS         equ	1167	;# 
 22447   000490                     PWM4PR          equ	1168	;# 
 22448   000490                     PWM4PRL         equ	1168	;# 
 22449   000491                     PWM4PRH         equ	1169	;# 
 22450   000492                     PWM4CPRE        equ	1170	;# 
 22451   000493                     PWM4PIPOS       equ	1171	;# 
 22452   000494                     PWM4GIR         equ	1172	;# 
 22453   000495                     PWM4GIE         equ	1173	;# 
 22454   000496                     PWM4CON         equ	1174	;# 
 22455   000497                     PWM4S1CFG       equ	1175	;# 
 22456   000498                     PWM4S1P1        equ	1176	;# 
 22457   000498                     PWM4S1P1L       equ	1176	;# 
 22458   000499                     PWM4S1P1H       equ	1177	;# 
 22459   00049A                     PWM4S1P2        equ	1178	;# 
 22460   00049A                     PWM4S1P2L       equ	1178	;# 
 22461   00049B                     PWM4S1P2H       equ	1179	;# 
 22462   00049C                     PWMLOAD         equ	1180	;# 
 22463   00049D                     PWMEN           equ	1181	;# 
 22464   00049E                     PIE0            equ	1182	;# 
 22465   00049F                     PIE1            equ	1183	;# 
 22466   0004A0                     PIE2            equ	1184	;# 
 22467   0004A1                     PIE3            equ	1185	;# 
 22468   0004A2                     PIE4            equ	1186	;# 
 22469   0004A3                     PIE5            equ	1187	;# 
 22470   0004A4                     PIE6            equ	1188	;# 
 22471   0004A5                     PIE7            equ	1189	;# 
 22472   0004A6                     PIE8            equ	1190	;# 
 22473   0004A7                     PIE9            equ	1191	;# 
 22474   0004A8                     PIE10           equ	1192	;# 
 22475   0004A9                     PIE11           equ	1193	;# 
 22476   0004AA                     PIE12           equ	1194	;# 
 22477   0004AB                     PIE13           equ	1195	;# 
 22478   0004AC                     PIE14           equ	1196	;# 
 22479   0004AD                     PIE15           equ	1197	;# 
 22480   0004AE                     PIR0            equ	1198	;# 
 22481   0004AF                     PIR1            equ	1199	;# 
 22482   0004B0                     PIR2            equ	1200	;# 
 22483   0004B1                     PIR3            equ	1201	;# 
 22484   0004B2                     PIR4            equ	1202	;# 
 22485   0004B3                     PIR5            equ	1203	;# 
 22486   0004B4                     PIR6            equ	1204	;# 
 22487   0004B5                     PIR7            equ	1205	;# 
 22488   0004B6                     PIR8            equ	1206	;# 
 22489   0004B7                     PIR9            equ	1207	;# 
 22490   0004B8                     PIR10           equ	1208	;# 
 22491   0004B9                     PIR11           equ	1209	;# 
 22492   0004BA                     PIR12           equ	1210	;# 
 22493   0004BB                     PIR13           equ	1211	;# 
 22494   0004BC                     PIR14           equ	1212	;# 
 22495   0004BD                     PIR15           equ	1213	;# 
 22496   0004BE                     LATA            equ	1214	;# 
 22497   0004BF                     LATB            equ	1215	;# 
 22498   0004C0                     LATC            equ	1216	;# 
 22499   0004C6                     TRISA           equ	1222	;# 
 22500   0004C7                     TRISB           equ	1223	;# 
 22501   0004C8                     TRISC           equ	1224	;# 
 22502   0004CA                     TRISE           equ	1226	;# 
 22503   0004CE                     PORTA           equ	1230	;# 
 22504   0004CF                     PORTB           equ	1231	;# 
 22505   0004D0                     PORTC           equ	1232	;# 
 22506   0004D2                     PORTE           equ	1234	;# 
 22507   0004D6                     INTCON0         equ	1238	;# 
 22508   0004D7                     INTCON1         equ	1239	;# 
 22509   0004D8                     STATUS          equ	1240	;# 
 22510   0004D9                     FSR2            equ	1241	;# 
 22511   0004D9                     FSR2L           equ	1241	;# 
 22512   0004DA                     FSR2H           equ	1242	;# 
 22513   0004DB                     PLUSW2          equ	1243	;# 
 22514   0004DC                     PREINC2         equ	1244	;# 
 22515   0004DD                     POSTDEC2        equ	1245	;# 
 22516   0004DE                     POSTINC2        equ	1246	;# 
 22517   0004DF                     INDF2           equ	1247	;# 
 22518   0004E0                     BSR             equ	1248	;# 
 22519   0004E1                     FSR1            equ	1249	;# 
 22520   0004E1                     FSR1L           equ	1249	;# 
 22521   0004E2                     FSR1H           equ	1250	;# 
 22522   0004E3                     PLUSW1          equ	1251	;# 
 22523   0004E4                     PREINC1         equ	1252	;# 
 22524   0004E5                     POSTDEC1        equ	1253	;# 
 22525   0004E6                     POSTINC1        equ	1254	;# 
 22526   0004E7                     INDF1           equ	1255	;# 
 22527   0004E8                     WREG            equ	1256	;# 
 22528   0004E9                     FSR0            equ	1257	;# 
 22529   0004E9                     FSR0L           equ	1257	;# 
 22530   0004EA                     FSR0H           equ	1258	;# 
 22531   0004EB                     PLUSW0          equ	1259	;# 
 22532   0004EC                     PREINC0         equ	1260	;# 
 22533   0004ED                     POSTDEC0        equ	1261	;# 
 22534   0004EE                     POSTINC0        equ	1262	;# 
 22535   0004EF                     INDF0           equ	1263	;# 
 22536   0004F0                     PCON0           equ	1264	;# 
 22537   0004F1                     PCON1           equ	1265	;# 
 22538   0004F2                     CPUDOZE         equ	1266	;# 
 22539   0004F3                     PROD            equ	1267	;# 
 22540   0004F3                     PRODL           equ	1267	;# 
 22541   0004F4                     PRODH           equ	1268	;# 
 22542   0004F5                     TABLAT          equ	1269	;# 
 22543   0004F6                     TBLPTR          equ	1270	;# 
 22544   0004F6                     TBLPTRL         equ	1270	;# 
 22545   0004F7                     TBLPTRH         equ	1271	;# 
 22546   0004F8                     TBLPTRU         equ	1272	;# 
 22547   0004F9                     PCLAT           equ	1273	;# 
 22548   0004F9                     PCL             equ	1273	;# 
 22549   0004FA                     PCLATH          equ	1274	;# 
 22550   0004FB                     PCLATU          equ	1275	;# 
 22551   0004FC                     STKPTR          equ	1276	;# 
 22552   0004FD                     TOS             equ	1277	;# 
 22553   0004FD                     TOSL            equ	1277	;# 
 22554   0004FE                     TOSH            equ	1278	;# 
 22555   0004FF                     TOSU            equ	1279	;# 
 22556   3803FA                     	org	1018	;# 
 22557   3803FA  FF                 	db	255	;# 
 22558   000038                     BOOTREG         equ	56	;# 
 22559   000039                     CLKRCON         equ	57	;# 
 22560   00003A                     CLKRCLK         equ	58	;# 
 22561   000040                     NVMCON0         equ	64	;# 
 22562   000041                     NVMCON1         equ	65	;# 
 22563   000042                     NVMLOCK         equ	66	;# 
 22564   000043                     NVMADR          equ	67	;# 
 22565   000043                     NVMADRL         equ	67	;# 
 22566   000044                     NVMADRH         equ	68	;# 
 22567   000045                     NVMADRU         equ	69	;# 
 22568   000046                     NVMDAT          equ	70	;# 
 22569   000046                     NVMDATL         equ	70	;# 
 22570   000047                     NVMDATH         equ	71	;# 
 22571   000048                     VREGCON         equ	72	;# 
 22572   000049                     BORCON          equ	73	;# 
 22573   00004A                     HLVDCON0        equ	74	;# 
 22574   00004B                     HLVDCON1        equ	75	;# 
 22575   00004C                     ZCDCON          equ	76	;# 
 22576   000060                     PMD0            equ	96	;# 
 22577   000061                     PMD1            equ	97	;# 
 22578   000062                     PMD2            equ	98	;# 
 22579   000063                     PMD3            equ	99	;# 
 22580   000064                     PMD4            equ	100	;# 
 22581   000065                     PMD5            equ	101	;# 
 22582   000066                     PMD6            equ	102	;# 
 22583   000067                     PMD7            equ	103	;# 
 22584   000068                     PMD8            equ	104	;# 
 22585   00006A                     MD1CON0         equ	106	;# 
 22586   00006B                     MD1CON1         equ	107	;# 
 22587   00006C                     MD1SRC          equ	108	;# 
 22588   00006D                     MD1CARL         equ	109	;# 
 22589   00006E                     MD1CARH         equ	110	;# 
 22590   00006F                     CMOUT           equ	111	;# 
 22591   000070                     CM1CON0         equ	112	;# 
 22592   000071                     CM1CON1         equ	113	;# 
 22593   000072                     CM1NCH          equ	114	;# 
 22594   000073                     CM1PCH          equ	115	;# 
 22595   000074                     CM2CON0         equ	116	;# 
 22596   000075                     CM2CON1         equ	117	;# 
 22597   000076                     CM2NCH          equ	118	;# 
 22598   000077                     CM2PCH          equ	119	;# 
 22599   000078                     WDTCON0         equ	120	;# 
 22600   000079                     WDTCON1         equ	121	;# 
 22601   00007A                     WDTPSL          equ	122	;# 
 22602   00007B                     WDTPSH          equ	123	;# 
 22603   00007C                     WDTTMR          equ	124	;# 
 22604   00007D                     DAC1DAT         equ	125	;# 
 22605   00007D                     DAC1DATL        equ	125	;# 
 22606   00007F                     DAC1CON         equ	127	;# 
 22607   000080                     SPI1RXB         equ	128	;# 
 22608   000081                     SPI1TXB         equ	129	;# 
 22609   000082                     SPI1TCNT        equ	130	;# 
 22610   000082                     SPI1TCNTL       equ	130	;# 
 22611   000083                     SPI1TCNTH       equ	131	;# 
 22612   000084                     SPI1CON0        equ	132	;# 
 22613   000085                     SPI1CON1        equ	133	;# 
 22614   000086                     SPI1CON2        equ	134	;# 
 22615   000087                     SPI1STATUS      equ	135	;# 
 22616   000088                     SPI1TWIDTH      equ	136	;# 
 22617   000089                     SPI1BAUD        equ	137	;# 
 22618   00008A                     SPI1INTF        equ	138	;# 
 22619   00008B                     SPI1INTE        equ	139	;# 
 22620   00008C                     SPI1CLK         equ	140	;# 
 22621   00008D                     SPI2RXB         equ	141	;# 
 22622   00008E                     SPI2TXB         equ	142	;# 
 22623   00008F                     SPI2TCNT        equ	143	;# 
 22624   00008F                     SPI2TCNTL       equ	143	;# 
 22625   000090                     SPI2TCNTH       equ	144	;# 
 22626   000091                     SPI2CON0        equ	145	;# 
 22627   000092                     SPI2CON1        equ	146	;# 
 22628   000093                     SPI2CON2        equ	147	;# 
 22629   000094                     SPI2STATUS      equ	148	;# 
 22630   000095                     SPI2TWIDTH      equ	149	;# 
 22631   000096                     SPI2BAUD        equ	150	;# 
 22632   000097                     SPI2INTF        equ	151	;# 
 22633   000098                     SPI2INTE        equ	152	;# 
 22634   000099                     SPI2CLK         equ	153	;# 
 22635   0000AC                     ACTCON          equ	172	;# 
 22636   0000AD                     OSCCON1         equ	173	;# 
 22637   0000AE                     OSCCON2         equ	174	;# 
 22638   0000AF                     OSCCON3         equ	175	;# 
 22639   0000B0                     OSCTUNE         equ	176	;# 
 22640   0000B1                     OSCFRQ          equ	177	;# 
 22641   0000B1                     OSCFREQ         equ	177	;# 
 22642   0000B2                     OSCSTAT         equ	178	;# 
 22643   0000B2                     OSCSTAT1        equ	178	;# 
 22644   0000B3                     OSCEN           equ	179	;# 
 22645   0000B4                     PRLOCK          equ	180	;# 
 22646   0000B5                     SCANPR          equ	181	;# 
 22647   0000B6                     DMA1PR          equ	182	;# 
 22648   0000B7                     DMA2PR          equ	183	;# 
 22649   0000B8                     DMA3PR          equ	184	;# 
 22650   0000B9                     DMA4PR          equ	185	;# 
 22651   0000BA                     DMA5PR          equ	186	;# 
 22652   0000BB                     DMA6PR          equ	187	;# 
 22653   0000BC                     DMA7PR          equ	188	;# 
 22654   0000BD                     DMA8PR          equ	189	;# 
 22655   0000BE                     MAINPR          equ	190	;# 
 22656   0000BF                     ISRPR           equ	191	;# 
 22657   0000D4                     CLCDATA         equ	212	;# 
 22658   0000D5                     CLCSELECT       equ	213	;# 
 22659   0000D6                     CLCnCON         equ	214	;# 
 22660   0000D7                     CLCnPOL         equ	215	;# 
 22661   0000D8                     CLCnSEL0        equ	216	;# 
 22662   0000D9                     CLCnSEL1        equ	217	;# 
 22663   0000DA                     CLCnSEL2        equ	218	;# 
 22664   0000DB                     CLCnSEL3        equ	219	;# 
 22665   0000DC                     CLCnGLS0        equ	220	;# 
 22666   0000DD                     CLCnGLS1        equ	221	;# 
 22667   0000DE                     CLCnGLS2        equ	222	;# 
 22668   0000DF                     CLCnGLS3        equ	223	;# 
 22669   0000E8                     DMASELECT       equ	232	;# 
 22670   0000E9                     DMAnBUF         equ	233	;# 
 22671   0000EA                     DMAnDCNT        equ	234	;# 
 22672   0000EA                     DMAnDCNTL       equ	234	;# 
 22673   0000EB                     DMAnDCNTH       equ	235	;# 
 22674   0000EC                     DMAnDPTR        equ	236	;# 
 22675   0000EC                     DMAnDPTRL       equ	236	;# 
 22676   0000ED                     DMAnDPTRH       equ	237	;# 
 22677   0000EE                     DMAnDSZ         equ	238	;# 
 22678   0000EE                     DMAnDSZL        equ	238	;# 
 22679   0000EF                     DMAnDSZH        equ	239	;# 
 22680   0000F0                     DMAnDSA         equ	240	;# 
 22681   0000F0                     DMAnDSAL        equ	240	;# 
 22682   0000F1                     DMAnDSAH        equ	241	;# 
 22683   0000F2                     DMAnSCNT        equ	242	;# 
 22684   0000F2                     DMAnSCNTL       equ	242	;# 
 22685   0000F3                     DMAnSCNTH       equ	243	;# 
 22686   0000F4                     DMAnSPTR        equ	244	;# 
 22687   0000F4                     DMAnSPTRL       equ	244	;# 
 22688   0000F5                     DMAnSPTRH       equ	245	;# 
 22689   0000F6                     DMAnSPTRU       equ	246	;# 
 22690   0000F7                     DMAnSSZ         equ	247	;# 
 22691   0000F7                     DMAnSSZL        equ	247	;# 
 22692   0000F8                     DMAnSSZH        equ	248	;# 
 22693   0000F9                     DMAnSSA         equ	249	;# 
 22694   0000F9                     DMAnSSAL        equ	249	;# 
 22695   0000FA                     DMAnSSAH        equ	250	;# 
 22696   0000FB                     DMAnSSAU        equ	251	;# 
 22697   0000FC                     DMAnCON0        equ	252	;# 
 22698   0000FD                     DMAnCON1        equ	253	;# 
 22699   0000FE                     DMAnAIRQ        equ	254	;# 
 22700   0000FF                     DMAnSIRQ        equ	255	;# 
 22701   000100                     C1CONL          equ	256	;# 
 22702   000101                     C1CONH          equ	257	;# 
 22703   000102                     C1CONU          equ	258	;# 
 22704   000103                     C1CONT          equ	259	;# 
 22705   000104                     C1NBTCFGL       equ	260	;# 
 22706   000105                     C1NBTCFGH       equ	261	;# 
 22707   000106                     C1NBTCFGU       equ	262	;# 
 22708   000107                     C1NBTCFGT       equ	263	;# 
 22709   000108                     C1DBTCFGL       equ	264	;# 
 22710   000109                     C1DBTCFGH       equ	265	;# 
 22711   00010A                     C1DBTCFGU       equ	266	;# 
 22712   00010B                     C1DBTCFGT       equ	267	;# 
 22713   00010C                     C1TDCL          equ	268	;# 
 22714   00010D                     C1TDCH          equ	269	;# 
 22715   00010E                     C1TDCU          equ	270	;# 
 22716   000110                     C1TBC           equ	272	;# 
 22717   000110                     C1TBCL          equ	272	;# 
 22718   000111                     C1TBCH          equ	273	;# 
 22719   000112                     C1TBCU          equ	274	;# 
 22720   000113                     C1TBCT          equ	275	;# 
 22721   000114                     C1TSCONL        equ	276	;# 
 22722   000115                     C1TSCONH        equ	277	;# 
 22723   000116                     C1TSCONU        equ	278	;# 
 22724   000117                     C1TSCONT        equ	279	;# 
 22725   000118                     C1VECL          equ	280	;# 
 22726   000119                     C1VECH          equ	281	;# 
 22727   00011A                     C1VECU          equ	282	;# 
 22728   00011B                     C1VECT          equ	283	;# 
 22729   00011C                     C1INTL          equ	284	;# 
 22730   00011D                     C1INTH          equ	285	;# 
 22731   00011E                     C1INTU          equ	286	;# 
 22732   00011F                     C1INTT          equ	287	;# 
 22733   000120                     C1RXIF          equ	288	;# 
 22734   000120                     C1RXIFL         equ	288	;# 
 22735   000121                     C1RXIFH         equ	289	;# 
 22736   000122                     C1RXIFU         equ	290	;# 
 22737   000123                     C1RXIFT         equ	291	;# 
 22738   000124                     C1TXIF          equ	292	;# 
 22739   000124                     C1TXIFL         equ	292	;# 
 22740   000125                     C1TXIFH         equ	293	;# 
 22741   000126                     C1TXIFU         equ	294	;# 
 22742   000127                     C1TXIFT         equ	295	;# 
 22743   000128                     C1RXOVIF        equ	296	;# 
 22744   000128                     C1RXOVIFL       equ	296	;# 
 22745   000129                     C1RXOVIFH       equ	297	;# 
 22746   00012A                     C1RXOVIFU       equ	298	;# 
 22747   00012B                     C1RXOVIFT       equ	299	;# 
 22748   00012C                     C1TXATIF        equ	300	;# 
 22749   00012C                     C1TXATIFL       equ	300	;# 
 22750   00012D                     C1TXATIFH       equ	301	;# 
 22751   00012E                     C1TXATIFU       equ	302	;# 
 22752   00012F                     C1TXATIFT       equ	303	;# 
 22753   000130                     C1TXREQ         equ	304	;# 
 22754   000130                     C1TXREQL        equ	304	;# 
 22755   000131                     C1TXREQH        equ	305	;# 
 22756   000132                     C1TXREQU        equ	306	;# 
 22757   000133                     C1TXREQT        equ	307	;# 
 22758   000134                     C1TRECL         equ	308	;# 
 22759   000135                     C1TRECH         equ	309	;# 
 22760   000136                     C1TRECU         equ	310	;# 
 22761   000137                     C1TRECT         equ	311	;# 
 22762   000138                     C1BDIAG0L       equ	312	;# 
 22763   000139                     C1BDIAG0H       equ	313	;# 
 22764   00013C                     C1BDIAG1L       equ	316	;# 
 22765   00013D                     C1BDIAG1H       equ	317	;# 
 22766   00013E                     C1BDIAG1U       equ	318	;# 
 22767   00013F                     C1BDIAG1T       equ	319	;# 
 22768   000140                     C1TEFCONL       equ	320	;# 
 22769   000141                     C1TEFCONH       equ	321	;# 
 22770   000142                     C1TEFCONU       equ	322	;# 
 22771   000143                     C1TEFCONT       equ	323	;# 
 22772   000144                     C1TEFSTAL       equ	324	;# 
 22773   000145                     C1TEFSTAH       equ	325	;# 
 22774   000146                     C1TEFSTAU       equ	326	;# 
 22775   000147                     C1TEFSTAT       equ	327	;# 
 22776   000148                     C1TEFUA         equ	328	;# 
 22777   000148                     C1TEFUAL        equ	328	;# 
 22778   000149                     C1TEFUAH        equ	329	;# 
 22779   00014A                     C1TEFUAU        equ	330	;# 
 22780   00014B                     C1TEFUAT        equ	331	;# 
 22781   00014C                     C1FIFOBA        equ	332	;# 
 22782   00014C                     C1FIFOBAL       equ	332	;# 
 22783   00014D                     C1FIFOBAH       equ	333	;# 
 22784   00014E                     C1FIFOBAU       equ	334	;# 
 22785   00014F                     C1FIFOBAT       equ	335	;# 
 22786   000150                     C1TXQCONL       equ	336	;# 
 22787   000151                     C1TXQCONH       equ	337	;# 
 22788   000152                     C1TXQCONU       equ	338	;# 
 22789   000153                     C1TXQCONT       equ	339	;# 
 22790   000154                     C1TXQSTAL       equ	340	;# 
 22791   000155                     C1TXQSTAH       equ	341	;# 
 22792   000156                     C1TXQSTAU       equ	342	;# 
 22793   000157                     C1TXQSTAT       equ	343	;# 
 22794   000158                     C1TXQUA         equ	344	;# 
 22795   000158                     C1TXQUAL        equ	344	;# 
 22796   000159                     C1TXQUAH        equ	345	;# 
 22797   00015A                     C1TXQUAU        equ	346	;# 
 22798   00015B                     C1TXQUAT        equ	347	;# 
 22799   00015C                     C1FIFOCON1      equ	348	;# 
 22800   00015C                     C1FIFOCON1L     equ	348	;# 
 22801   00015D                     C1FIFOCON1H     equ	349	;# 
 22802   00015E                     C1FIFOCON1U     equ	350	;# 
 22803   00015F                     C1FIFOCON1T     equ	351	;# 
 22804   000160                     C1FIFOSTA1      equ	352	;# 
 22805   000160                     C1FIFOSTA1L     equ	352	;# 
 22806   000161                     C1FIFOSTA1H     equ	353	;# 
 22807   000162                     C1FIFOSTA1U     equ	354	;# 
 22808   000163                     C1FIFOSTA1T     equ	355	;# 
 22809   000164                     C1FIFOUA1       equ	356	;# 
 22810   000164                     C1FIFOUA1L      equ	356	;# 
 22811   000165                     C1FIFOUA1H      equ	357	;# 
 22812   000166                     C1FIFOUA1U      equ	358	;# 
 22813   000167                     C1FIFOUA1T      equ	359	;# 
 22814   000168                     C1FIFOCON2      equ	360	;# 
 22815   000168                     C1FIFOCON2L     equ	360	;# 
 22816   000169                     C1FIFOCON2H     equ	361	;# 
 22817   00016A                     C1FIFOCON2U     equ	362	;# 
 22818   00016B                     C1FIFOCON2T     equ	363	;# 
 22819   00016C                     C1FIFOSTA2      equ	364	;# 
 22820   00016C                     C1FIFOSTA2L     equ	364	;# 
 22821   00016D                     C1FIFOSTA2H     equ	365	;# 
 22822   00016E                     C1FIFOSTA2U     equ	366	;# 
 22823   00016F                     C1FIFOSTA2T     equ	367	;# 
 22824   000170                     C1FIFOUA2       equ	368	;# 
 22825   000170                     C1FIFOUA2L      equ	368	;# 
 22826   000171                     C1FIFOUA2H      equ	369	;# 
 22827   000172                     C1FIFOUA2U      equ	370	;# 
 22828   000173                     C1FIFOUA2T      equ	371	;# 
 22829   000174                     C1FIFOCON3      equ	372	;# 
 22830   000174                     C1FIFOCON3L     equ	372	;# 
 22831   000175                     C1FIFOCON3H     equ	373	;# 
 22832   000176                     C1FIFOCON3U     equ	374	;# 
 22833   000177                     C1FIFOCON3T     equ	375	;# 
 22834   000178                     C1FIFOSTA3      equ	376	;# 
 22835   000178                     C1FIFOSTA3L     equ	376	;# 
 22836   000179                     C1FIFOSTA3H     equ	377	;# 
 22837   00017A                     C1FIFOSTA3U     equ	378	;# 
 22838   00017B                     C1FIFOSTA3T     equ	379	;# 
 22839   00017C                     C1FIFOUA3       equ	380	;# 
 22840   00017C                     C1FIFOUA3L      equ	380	;# 
 22841   00017D                     C1FIFOUA3H      equ	381	;# 
 22842   00017E                     C1FIFOUA3U      equ	382	;# 
 22843   00017F                     C1FIFOUA3T      equ	383	;# 
 22844   000180                     C1FLTCON0L      equ	384	;# 
 22845   000181                     C1FLTCON0H      equ	385	;# 
 22846   000182                     C1FLTCON0U      equ	386	;# 
 22847   000183                     C1FLTCON0T      equ	387	;# 
 22848   000184                     C1FLTCON1L      equ	388	;# 
 22849   000185                     C1FLTCON1H      equ	389	;# 
 22850   000186                     C1FLTCON1U      equ	390	;# 
 22851   000187                     C1FLTCON1T      equ	391	;# 
 22852   000188                     C1FLTCON2L      equ	392	;# 
 22853   000189                     C1FLTCON2H      equ	393	;# 
 22854   00018A                     C1FLTCON2U      equ	394	;# 
 22855   00018B                     C1FLTCON2T      equ	395	;# 
 22856   00018C                     C1FLTOBJ0       equ	396	;# 
 22857   00018C                     C1FLTOBJ0L      equ	396	;# 
 22858   00018D                     C1FLTOBJ0H      equ	397	;# 
 22859   00018E                     C1FLTOBJ0U      equ	398	;# 
 22860   00018F                     C1FLTOBJ0T      equ	399	;# 
 22861   000190                     C1MASK0         equ	400	;# 
 22862   000190                     C1MASK0L        equ	400	;# 
 22863   000191                     C1MASK0H        equ	401	;# 
 22864   000192                     C1MASK0U        equ	402	;# 
 22865   000193                     C1MASK0T        equ	403	;# 
 22866   000194                     C1FLTOBJ1       equ	404	;# 
 22867   000194                     C1FLTOBJ1L      equ	404	;# 
 22868   000195                     C1FLTOBJ1H      equ	405	;# 
 22869   000196                     C1FLTOBJ1U      equ	406	;# 
 22870   000197                     C1FLTOBJ1T      equ	407	;# 
 22871   000198                     C1MASK1         equ	408	;# 
 22872   000198                     C1MASK1L        equ	408	;# 
 22873   000199                     C1MASK1H        equ	409	;# 
 22874   00019A                     C1MASK1U        equ	410	;# 
 22875   00019B                     C1MASK1T        equ	411	;# 
 22876   00019C                     C1FLTOBJ2       equ	412	;# 
 22877   00019C                     C1FLTOBJ2L      equ	412	;# 
 22878   00019D                     C1FLTOBJ2H      equ	413	;# 
 22879   00019E                     C1FLTOBJ2U      equ	414	;# 
 22880   00019F                     C1FLTOBJ2T      equ	415	;# 
 22881   0001A0                     C1MASK2         equ	416	;# 
 22882   0001A0                     C1MASK2L        equ	416	;# 
 22883   0001A1                     C1MASK2H        equ	417	;# 
 22884   0001A2                     C1MASK2U        equ	418	;# 
 22885   0001A3                     C1MASK2T        equ	419	;# 
 22886   0001A4                     C1FLTOBJ3       equ	420	;# 
 22887   0001A4                     C1FLTOBJ3L      equ	420	;# 
 22888   0001A5                     C1FLTOBJ3H      equ	421	;# 
 22889   0001A6                     C1FLTOBJ3U      equ	422	;# 
 22890   0001A7                     C1FLTOBJ3T      equ	423	;# 
 22891   0001A8                     C1MASK3         equ	424	;# 
 22892   0001A8                     C1MASK3L        equ	424	;# 
 22893   0001A9                     C1MASK3H        equ	425	;# 
 22894   0001AA                     C1MASK3U        equ	426	;# 
 22895   0001AB                     C1MASK3T        equ	427	;# 
 22896   0001AC                     C1FLTOBJ4       equ	428	;# 
 22897   0001AC                     C1FLTOBJ4L      equ	428	;# 
 22898   0001AD                     C1FLTOBJ4H      equ	429	;# 
 22899   0001AE                     C1FLTOBJ4U      equ	430	;# 
 22900   0001AF                     C1FLTOBJ4T      equ	431	;# 
 22901   0001B0                     C1MASK4         equ	432	;# 
 22902   0001B0                     C1MASK4L        equ	432	;# 
 22903   0001B1                     C1MASK4H        equ	433	;# 
 22904   0001B2                     C1MASK4U        equ	434	;# 
 22905   0001B3                     C1MASK4T        equ	435	;# 
 22906   0001B4                     C1FLTOBJ5       equ	436	;# 
 22907   0001B4                     C1FLTOBJ5L      equ	436	;# 
 22908   0001B5                     C1FLTOBJ5H      equ	437	;# 
 22909   0001B6                     C1FLTOBJ5U      equ	438	;# 
 22910   0001B7                     C1FLTOBJ5T      equ	439	;# 
 22911   0001B8                     C1MASK5         equ	440	;# 
 22912   0001B8                     C1MASK5L        equ	440	;# 
 22913   0001B9                     C1MASK5H        equ	441	;# 
 22914   0001BA                     C1MASK5U        equ	442	;# 
 22915   0001BB                     C1MASK5T        equ	443	;# 
 22916   0001BC                     C1FLTOBJ6       equ	444	;# 
 22917   0001BC                     C1FLTOBJ6L      equ	444	;# 
 22918   0001BD                     C1FLTOBJ6H      equ	445	;# 
 22919   0001BE                     C1FLTOBJ6U      equ	446	;# 
 22920   0001BF                     C1FLTOBJ6T      equ	447	;# 
 22921   0001C0                     C1MASK6         equ	448	;# 
 22922   0001C0                     C1MASK6L        equ	448	;# 
 22923   0001C1                     C1MASK6H        equ	449	;# 
 22924   0001C2                     C1MASK6U        equ	450	;# 
 22925   0001C3                     C1MASK6T        equ	451	;# 
 22926   0001C4                     C1FLTOBJ7       equ	452	;# 
 22927   0001C4                     C1FLTOBJ7L      equ	452	;# 
 22928   0001C5                     C1FLTOBJ7H      equ	453	;# 
 22929   0001C6                     C1FLTOBJ7U      equ	454	;# 
 22930   0001C7                     C1FLTOBJ7T      equ	455	;# 
 22931   0001C8                     C1MASK7         equ	456	;# 
 22932   0001C8                     C1MASK7L        equ	456	;# 
 22933   0001C9                     C1MASK7H        equ	457	;# 
 22934   0001CA                     C1MASK7U        equ	458	;# 
 22935   0001CB                     C1MASK7T        equ	459	;# 
 22936   0001CC                     C1FLTOBJ8       equ	460	;# 
 22937   0001CC                     C1FLTOBJ8L      equ	460	;# 
 22938   0001CD                     C1FLTOBJ8H      equ	461	;# 
 22939   0001CE                     C1FLTOBJ8U      equ	462	;# 
 22940   0001CF                     C1FLTOBJ8T      equ	463	;# 
 22941   0001D0                     C1MASK8         equ	464	;# 
 22942   0001D0                     C1MASK8L        equ	464	;# 
 22943   0001D1                     C1MASK8H        equ	465	;# 
 22944   0001D2                     C1MASK8U        equ	466	;# 
 22945   0001D3                     C1MASK8T        equ	467	;# 
 22946   0001D4                     C1FLTOBJ9       equ	468	;# 
 22947   0001D4                     C1FLTOBJ9L      equ	468	;# 
 22948   0001D5                     C1FLTOBJ9H      equ	469	;# 
 22949   0001D6                     C1FLTOBJ9U      equ	470	;# 
 22950   0001D7                     C1FLTOBJ9T      equ	471	;# 
 22951   0001D8                     C1MASK9         equ	472	;# 
 22952   0001D8                     C1MASK9L        equ	472	;# 
 22953   0001D9                     C1MASK9H        equ	473	;# 
 22954   0001DA                     C1MASK9U        equ	474	;# 
 22955   0001DB                     C1MASK9T        equ	475	;# 
 22956   0001DC                     C1FLTOBJ10      equ	476	;# 
 22957   0001DC                     C1FLTOBJ10L     equ	476	;# 
 22958   0001DD                     C1FLTOBJ10H     equ	477	;# 
 22959   0001DE                     C1FLTOBJ10U     equ	478	;# 
 22960   0001DF                     C1FLTOBJ10T     equ	479	;# 
 22961   0001E0                     C1MASK10        equ	480	;# 
 22962   0001E0                     C1MASK10L       equ	480	;# 
 22963   0001E1                     C1MASK10H       equ	481	;# 
 22964   0001E2                     C1MASK10U       equ	482	;# 
 22965   0001E3                     C1MASK10T       equ	483	;# 
 22966   0001E4                     C1FLTOBJ11      equ	484	;# 
 22967   0001E4                     C1FLTOBJ11L     equ	484	;# 
 22968   0001E5                     C1FLTOBJ11H     equ	485	;# 
 22969   0001E6                     C1FLTOBJ11U     equ	486	;# 
 22970   0001E7                     C1FLTOBJ11T     equ	487	;# 
 22971   0001E8                     C1MASK11        equ	488	;# 
 22972   0001E8                     C1MASK11L       equ	488	;# 
 22973   0001E9                     C1MASK11H       equ	489	;# 
 22974   0001EA                     C1MASK11U       equ	490	;# 
 22975   0001EB                     C1MASK11T       equ	491	;# 
 22976   000200                     PPSLOCK         equ	512	;# 
 22977   000201                     RA0PPS          equ	513	;# 
 22978   000202                     RA1PPS          equ	514	;# 
 22979   000203                     RA2PPS          equ	515	;# 
 22980   000204                     RA3PPS          equ	516	;# 
 22981   000205                     RA4PPS          equ	517	;# 
 22982   000206                     RA5PPS          equ	518	;# 
 22983   000207                     RA6PPS          equ	519	;# 
 22984   000208                     RA7PPS          equ	520	;# 
 22985   000209                     RB0PPS          equ	521	;# 
 22986   00020A                     RB1PPS          equ	522	;# 
 22987   00020B                     RB2PPS          equ	523	;# 
 22988   00020C                     RB3PPS          equ	524	;# 
 22989   00020D                     RB4PPS          equ	525	;# 
 22990   00020E                     RB5PPS          equ	526	;# 
 22991   00020F                     RB6PPS          equ	527	;# 
 22992   000210                     RB7PPS          equ	528	;# 
 22993   000211                     RC0PPS          equ	529	;# 
 22994   000212                     RC1PPS          equ	530	;# 
 22995   000213                     RC2PPS          equ	531	;# 
 22996   000214                     RC3PPS          equ	532	;# 
 22997   000215                     RC4PPS          equ	533	;# 
 22998   000216                     RC5PPS          equ	534	;# 
 22999   000217                     RC6PPS          equ	535	;# 
 23000   000218                     RC7PPS          equ	536	;# 
 23001   00023D                     CANRXPPS        equ	573	;# 
 23002   00023E                     INT0PPS         equ	574	;# 
 23003   00023F                     INT1PPS         equ	575	;# 
 23004   000240                     INT2PPS         equ	576	;# 
 23005   000241                     T0CKIPPS        equ	577	;# 
 23006   000242                     T1CKIPPS        equ	578	;# 
 23007   000243                     T1GPPS          equ	579	;# 
 23008   000244                     T3CKIPPS        equ	580	;# 
 23009   000245                     T3GPPS          equ	581	;# 
 23010   000246                     T5CKIPPS        equ	582	;# 
 23011   000247                     T5GPPS          equ	583	;# 
 23012   000248                     T2INPPS         equ	584	;# 
 23013   000249                     T4INPPS         equ	585	;# 
 23014   00024A                     T6INPPS         equ	586	;# 
 23015   00024B                     TUIN0PPS        equ	587	;# 
 23016   00024C                     TUIN1PPS        equ	588	;# 
 23017   00024F                     CCP1PPS         equ	591	;# 
 23018   000250                     CCP2PPS         equ	592	;# 
 23019   000251                     CCP3PPS         equ	593	;# 
 23020   000253                     PWM1ERSPPS      equ	595	;# 
 23021   000254                     PWM2ERSPPS      equ	596	;# 
 23022   000255                     PWM3ERSPPS      equ	597	;# 
 23023   000256                     PWM4ERSPPS      equ	598	;# 
 23024   000257                     PWMIN0PPS       equ	599	;# 
 23025   000258                     PWMIN1PPS       equ	600	;# 
 23026   000259                     SMT1WINPPS      equ	601	;# 
 23027   00025A                     SMT1SIGPPS      equ	602	;# 
 23028   00025B                     CWG1PPS         equ	603	;# 
 23029   00025B                     CWG1INPPS       equ	603	;# 
 23030   00025C                     CWG2PPS         equ	604	;# 
 23031   00025C                     CWG2INPPS       equ	604	;# 
 23032   00025D                     CWG3PPS         equ	605	;# 
 23033   00025D                     CWG3INPPS       equ	605	;# 
 23034   00025E                     MD1CARLPPS      equ	606	;# 
 23035   00025E                     MDCARLPPS       equ	606	;# 
 23036   00025F                     MD1CARHPPS      equ	607	;# 
 23037   00025F                     MDCARHPPS       equ	607	;# 
 23038   000260                     MD1SRCPPS       equ	608	;# 
 23039   000260                     MDSRCPPS        equ	608	;# 
 23040   000261                     CLCIN0PPS       equ	609	;# 
 23041   000262                     CLCIN1PPS       equ	610	;# 
 23042   000263                     CLCIN2PPS       equ	611	;# 
 23043   000264                     CLCIN3PPS       equ	612	;# 
 23044   000265                     CLCIN4PPS       equ	613	;# 
 23045   000266                     CLCIN5PPS       equ	614	;# 
 23046   000267                     CLCIN6PPS       equ	615	;# 
 23047   000268                     CLCIN7PPS       equ	616	;# 
 23048   000269                     ADACTPPS        equ	617	;# 
 23049   00026A                     SPI1SCKPPS      equ	618	;# 
 23050   00026B                     SPI1SDIPPS      equ	619	;# 
 23051   00026C                     SPI1SSPPS       equ	620	;# 
 23052   00026D                     SPI2SCKPPS      equ	621	;# 
 23053   00026E                     SPI2SDIPPS      equ	622	;# 
 23054   00026F                     SPI2SSPPS       equ	623	;# 
 23055   000270                     I2C1SDAPPS      equ	624	;# 
 23056   000271                     I2C1SCLPPS      equ	625	;# 
 23057   000272                     U1RXPPS         equ	626	;# 
 23058   000273                     U1CTSPPS        equ	627	;# 
 23059   000274                     U2RXPPS         equ	628	;# 
 23060   000275                     U2CTSPPS        equ	629	;# 
 23061   000276                     U3RXPPS         equ	630	;# 
 23062   000277                     U3CTSPPS        equ	631	;# 
 23063   000278                     U4RXPPS         equ	632	;# 
 23064   000279                     U4CTSPPS        equ	633	;# 
 23065   00027A                     U5RXPPS         equ	634	;# 
 23066   00027B                     U5CTSPPS        equ	635	;# 
 23067   000286                     RC4I2C          equ	646	;# 
 23068   000287                     RC3I2C          equ	647	;# 
 23069   000288                     RB2I2C          equ	648	;# 
 23070   000289                     RB1I2C          equ	649	;# 
 23071   00028A                     I2C1RXB         equ	650	;# 
 23072   00028B                     I2C1TXB         equ	651	;# 
 23073   00028C                     I2C1CNTL        equ	652	;# 
 23074   00028D                     I2C1CNTH        equ	653	;# 
 23075   00028E                     I2C1ADB0        equ	654	;# 
 23076   00028F                     I2C1ADB1        equ	655	;# 
 23077   000290                     I2C1ADR0        equ	656	;# 
 23078   000291                     I2C1ADR1        equ	657	;# 
 23079   000292                     I2C1ADR2        equ	658	;# 
 23080   000293                     I2C1ADR3        equ	659	;# 
 23081   000294                     I2C1CON0        equ	660	;# 
 23082   000295                     I2C1CON1        equ	661	;# 
 23083   000296                     I2C1CON2        equ	662	;# 
 23084   000297                     I2C1ERR         equ	663	;# 
 23085   000298                     I2C1STAT0       equ	664	;# 
 23086   000299                     I2C1STAT1       equ	665	;# 
 23087   00029A                     I2C1PIR         equ	666	;# 
 23088   00029B                     I2C1PIE         equ	667	;# 
 23089   00029C                     I2C1BTO         equ	668	;# 
 23090   00029D                     I2C1BAUD        equ	669	;# 
 23091   00029E                     I2C1CLK         equ	670	;# 
 23092   00029F                     I2C1BTOC        equ	671	;# 
 23093   0002A1                     U1RXB           equ	673	;# 
 23094   0002A1                     U1RXBL          equ	673	;# 
 23095   0002A2                     U1RXCHK         equ	674	;# 
 23096   0002A3                     U1TXB           equ	675	;# 
 23097   0002A3                     U1TXBL          equ	675	;# 
 23098   0002A4                     U1TXCHK         equ	676	;# 
 23099   0002A5                     U1P1            equ	677	;# 
 23100   0002A5                     U1P1L           equ	677	;# 
 23101   0002A6                     U1P1H           equ	678	;# 
 23102   0002A7                     U1P2            equ	679	;# 
 23103   0002A7                     U1P2L           equ	679	;# 
 23104   0002A8                     U1P2H           equ	680	;# 
 23105   0002A9                     U1P3            equ	681	;# 
 23106   0002A9                     U1P3L           equ	681	;# 
 23107   0002AA                     U1P3H           equ	682	;# 
 23108   0002AB                     U1CON0          equ	683	;# 
 23109   0002AC                     U1CON1          equ	684	;# 
 23110   0002AD                     U1CON2          equ	685	;# 
 23111   0002AE                     U1BRG           equ	686	;# 
 23112   0002AE                     U1BRGL          equ	686	;# 
 23113   0002AF                     U1BRGH          equ	687	;# 
 23114   0002B0                     U1FIFO          equ	688	;# 
 23115   0002B1                     U1UIR           equ	689	;# 
 23116   0002B2                     U1ERRIR         equ	690	;# 
 23117   0002B3                     U1ERRIE         equ	691	;# 
 23118   0002B4                     U2RXB           equ	692	;# 
 23119   0002B4                     U2RXBL          equ	692	;# 
 23120   0002B5                     U2RXCHK         equ	693	;# 
 23121   0002B6                     U2TXB           equ	694	;# 
 23122   0002B6                     U2TXBL          equ	694	;# 
 23123   0002B7                     U2TXCHK         equ	695	;# 
 23124   0002B8                     U2P1            equ	696	;# 
 23125   0002B8                     U2P1L           equ	696	;# 
 23126   0002B9                     U2P1H           equ	697	;# 
 23127   0002BA                     U2P2            equ	698	;# 
 23128   0002BA                     U2P2L           equ	698	;# 
 23129   0002BB                     U2P2H           equ	699	;# 
 23130   0002BC                     U2P3            equ	700	;# 
 23131   0002BC                     U2P3L           equ	700	;# 
 23132   0002BD                     U2P3H           equ	701	;# 
 23133   0002BE                     U2CON0          equ	702	;# 
 23134   0002BF                     U2CON1          equ	703	;# 
 23135   0002C0                     U2CON2          equ	704	;# 
 23136   0002C1                     U2BRG           equ	705	;# 
 23137   0002C1                     U2BRGL          equ	705	;# 
 23138   0002C2                     U2BRGH          equ	706	;# 
 23139   0002C3                     U2FIFO          equ	707	;# 
 23140   0002C4                     U2UIR           equ	708	;# 
 23141   0002C5                     U2ERRIR         equ	709	;# 
 23142   0002C6                     U2ERRIE         equ	710	;# 
 23143   0002C7                     U3RXB           equ	711	;# 
 23144   0002C7                     U3RXBL          equ	711	;# 
 23145   0002C9                     U3TXB           equ	713	;# 
 23146   0002C9                     U3TXBL          equ	713	;# 
 23147   0002CB                     U3P1            equ	715	;# 
 23148   0002CB                     U3P1L           equ	715	;# 
 23149   0002CD                     U3P2            equ	717	;# 
 23150   0002CD                     U3P2L           equ	717	;# 
 23151   0002CF                     U3P3            equ	719	;# 
 23152   0002CF                     U3P3L           equ	719	;# 
 23153   0002D1                     U3CON0          equ	721	;# 
 23154   0002D2                     U3CON1          equ	722	;# 
 23155   0002D3                     U3CON2          equ	723	;# 
 23156   0002D4                     U3BRG           equ	724	;# 
 23157   0002D4                     U3BRGL          equ	724	;# 
 23158   0002D5                     U3BRGH          equ	725	;# 
 23159   0002D6                     U3FIFO          equ	726	;# 
 23160   0002D7                     U3UIR           equ	727	;# 
 23161   0002D8                     U3ERRIR         equ	728	;# 
 23162   0002D9                     U3ERRIE         equ	729	;# 
 23163   0002DA                     U4RXB           equ	730	;# 
 23164   0002DA                     U4RXBL          equ	730	;# 
 23165   0002DC                     U4TXB           equ	732	;# 
 23166   0002DC                     U4TXBL          equ	732	;# 
 23167   0002DE                     U4P1            equ	734	;# 
 23168   0002DE                     U4P1L           equ	734	;# 
 23169   0002E0                     U4P2            equ	736	;# 
 23170   0002E0                     U4P2L           equ	736	;# 
 23171   0002E2                     U4P3            equ	738	;# 
 23172   0002E2                     U4P3L           equ	738	;# 
 23173   0002E4                     U4CON0          equ	740	;# 
 23174   0002E5                     U4CON1          equ	741	;# 
 23175   0002E6                     U4CON2          equ	742	;# 
 23176   0002E7                     U4BRG           equ	743	;# 
 23177   0002E7                     U4BRGL          equ	743	;# 
 23178   0002E8                     U4BRGH          equ	744	;# 
 23179   0002E9                     U4FIFO          equ	745	;# 
 23180   0002EA                     U4UIR           equ	746	;# 
 23181   0002EB                     U4ERRIR         equ	747	;# 
 23182   0002EC                     U4ERRIE         equ	748	;# 
 23183   0002ED                     U5RXB           equ	749	;# 
 23184   0002ED                     U5RXBL          equ	749	;# 
 23185   0002EF                     U5TXB           equ	751	;# 
 23186   0002EF                     U5TXBL          equ	751	;# 
 23187   0002F1                     U5P1            equ	753	;# 
 23188   0002F1                     U5P1L           equ	753	;# 
 23189   0002F3                     U5P2            equ	755	;# 
 23190   0002F3                     U5P2L           equ	755	;# 
 23191   0002F5                     U5P3            equ	757	;# 
 23192   0002F5                     U5P3L           equ	757	;# 
 23193   0002F7                     U5CON0          equ	759	;# 
 23194   0002F8                     U5CON1          equ	760	;# 
 23195   0002F9                     U5CON2          equ	761	;# 
 23196   0002FA                     U5BRG           equ	762	;# 
 23197   0002FA                     U5BRGL          equ	762	;# 
 23198   0002FB                     U5BRGH          equ	763	;# 
 23199   0002FC                     U5FIFO          equ	764	;# 
 23200   0002FD                     U5UIR           equ	765	;# 
 23201   0002FE                     U5ERRIR         equ	766	;# 
 23202   0002FF                     U5ERRIE         equ	767	;# 
 23203   000300                     SMT1TMR         equ	768	;# 
 23204   000300                     SMT1TMRL        equ	768	;# 
 23205   000301                     SMT1TMRH        equ	769	;# 
 23206   000302                     SMT1TMRU        equ	770	;# 
 23207   000303                     SMT1CPR         equ	771	;# 
 23208   000303                     SMT1CPRL        equ	771	;# 
 23209   000304                     SMT1CPRH        equ	772	;# 
 23210   000305                     SMT1CPRU        equ	773	;# 
 23211   000306                     SMT1CPW         equ	774	;# 
 23212   000306                     SMT1CPWL        equ	774	;# 
 23213   000307                     SMT1CPWH        equ	775	;# 
 23214   000308                     SMT1CPWU        equ	776	;# 
 23215   000309                     SMT1PR          equ	777	;# 
 23216   000309                     SMT1PRL         equ	777	;# 
 23217   00030A                     SMT1PRH         equ	778	;# 
 23218   00030B                     SMT1PRU         equ	779	;# 
 23219   00030C                     SMT1CON0        equ	780	;# 
 23220   00030D                     SMT1CON1        equ	781	;# 
 23221   00030E                     SMT1STAT        equ	782	;# 
 23222   00030F                     SMT1CLK         equ	783	;# 
 23223   000310                     SMT1SIG         equ	784	;# 
 23224   000311                     SMT1WIN         equ	785	;# 
 23225   000318                     TMR0L           equ	792	;# 
 23226   000318                     TMR0            equ	792	;# 
 23227   000319                     TMR0H           equ	793	;# 
 23228   000319                     PR0             equ	793	;# 
 23229   00031A                     T0CON0          equ	794	;# 
 23230   00031B                     T0CON1          equ	795	;# 
 23231   00031C                     TMR1            equ	796	;# 
 23232   00031C                     TMR1L           equ	796	;# 
 23233   00031D                     TMR1H           equ	797	;# 
 23234   00031E                     T1CON           equ	798	;# 
 23235   00031E                     TMR1CON         equ	798	;# 
 23236   00031F                     T1GCON          equ	799	;# 
 23237   00031F                     TMR1GCON        equ	799	;# 
 23238   000320                     T1GATE          equ	800	;# 
 23239   000320                     TMR1GATE        equ	800	;# 
 23240   000321                     T1CLK           equ	801	;# 
 23241   000321                     TMR1CLK         equ	801	;# 
 23242   000321                     PR1             equ	801	;# 
 23243   000322                     T2TMR           equ	802	;# 
 23244   000322                     TMR2            equ	802	;# 
 23245   000323                     T2PR            equ	803	;# 
 23246   000323                     PR2             equ	803	;# 
 23247   000324                     T2CON           equ	804	;# 
 23248   000325                     T2HLT           equ	805	;# 
 23249   000326                     T2CLKCON        equ	806	;# 
 23250   000326                     T2CLK           equ	806	;# 
 23251   000327                     T2RST           equ	807	;# 
 23252   000328                     TMR3            equ	808	;# 
 23253   000328                     TMR3L           equ	808	;# 
 23254   000329                     TMR3H           equ	809	;# 
 23255   00032A                     T3CON           equ	810	;# 
 23256   00032A                     TMR3CON         equ	810	;# 
 23257   00032B                     T3GCON          equ	811	;# 
 23258   00032B                     TMR3GCON        equ	811	;# 
 23259   00032C                     T3GATE          equ	812	;# 
 23260   00032C                     TMR3GATE        equ	812	;# 
 23261   00032D                     T3CLK           equ	813	;# 
 23262   00032D                     TMR3CLK         equ	813	;# 
 23263   00032D                     PR3             equ	813	;# 
 23264   00032E                     T4TMR           equ	814	;# 
 23265   00032E                     TMR4            equ	814	;# 
 23266   00032F                     T4PR            equ	815	;# 
 23267   00032F                     PR4             equ	815	;# 
 23268   000330                     T4CON           equ	816	;# 
 23269   000331                     T4HLT           equ	817	;# 
 23270   000332                     T4CLKCON        equ	818	;# 
 23271   000332                     T4CLK           equ	818	;# 
 23272   000333                     T4RST           equ	819	;# 
 23273   000334                     TMR5            equ	820	;# 
 23274   000334                     TMR5L           equ	820	;# 
 23275   000335                     TMR5H           equ	821	;# 
 23276   000336                     T5CON           equ	822	;# 
 23277   000336                     TMR5CON         equ	822	;# 
 23278   000337                     T5GCON          equ	823	;# 
 23279   000337                     TMR5GCON        equ	823	;# 
 23280   000338                     T5GATE          equ	824	;# 
 23281   000338                     TMR5GATE        equ	824	;# 
 23282   000339                     T5CLK           equ	825	;# 
 23283   000339                     TMR5CLK         equ	825	;# 
 23284   000339                     PR5             equ	825	;# 
 23285   00033A                     T6TMR           equ	826	;# 
 23286   00033A                     TMR6            equ	826	;# 
 23287   00033B                     T6PR            equ	827	;# 
 23288   00033B                     PR6             equ	827	;# 
 23289   00033C                     T6CON           equ	828	;# 
 23290   00033D                     T6HLT           equ	829	;# 
 23291   00033E                     T6CLKCON        equ	830	;# 
 23292   00033E                     T6CLK           equ	830	;# 
 23293   00033F                     T6RST           equ	831	;# 
 23294   000340                     CCPR1           equ	832	;# 
 23295   000340                     CCPR1L          equ	832	;# 
 23296   000341                     CCPR1H          equ	833	;# 
 23297   000342                     CCP1CON         equ	834	;# 
 23298   000343                     CCP1CAP         equ	835	;# 
 23299   000344                     CCPR2           equ	836	;# 
 23300   000344                     CCPR2L          equ	836	;# 
 23301   000345                     CCPR2H          equ	837	;# 
 23302   000346                     CCP2CON         equ	838	;# 
 23303   000347                     CCP2CAP         equ	839	;# 
 23304   000348                     CCPR3           equ	840	;# 
 23305   000348                     CCPR3L          equ	840	;# 
 23306   000349                     CCPR3H          equ	841	;# 
 23307   00034A                     CCP3CON         equ	842	;# 
 23308   00034B                     CCP3CAP         equ	843	;# 
 23309   00034C                     CCPTMRS0        equ	844	;# 
 23310   00034F                     CRCDATA         equ	847	;# 
 23311   00034F                     CRCDATAL        equ	847	;# 
 23312   000350                     CRCDATAH        equ	848	;# 
 23313   000351                     CRCDATAU        equ	849	;# 
 23314   000352                     CRCDATAT        equ	850	;# 
 23315   000353                     CRCOUT          equ	851	;# 
 23316   000353                     CRCSHFT         equ	851	;# 
 23317   000353                     CRCXOR          equ	851	;# 
 23318   000353                     CRCOUTL         equ	851	;# 
 23319   000353                     CRCSHFTL        equ	851	;# 
 23320   000353                     CRCSHIFTL       equ	851	;# 
 23321   000353                     CRCXORL         equ	851	;# 
 23322   000354                     CRCOUTH         equ	852	;# 
 23323   000354                     CRCSHFTH        equ	852	;# 
 23324   000354                     CRCSHIFTH       equ	852	;# 
 23325   000354                     CRCXORH         equ	852	;# 
 23326   000355                     CRCOUTU         equ	853	;# 
 23327   000355                     CRCSHFTU        equ	853	;# 
 23328   000355                     CRCSHIFTU       equ	853	;# 
 23329   000355                     CRCXORU         equ	853	;# 
 23330   000356                     CRCOUTT         equ	854	;# 
 23331   000356                     CRCSHFTT        equ	854	;# 
 23332   000356                     CRCSHIFTT       equ	854	;# 
 23333   000356                     CRCXORT         equ	854	;# 
 23334   000357                     CRCCON0         equ	855	;# 
 23335   000358                     CRCCON1         equ	856	;# 
 23336   000359                     CRCCON2         equ	857	;# 
 23337   00035A                     SCANLADR        equ	858	;# 
 23338   00035A                     SCANLADRL       equ	858	;# 
 23339   00035B                     SCANLADRH       equ	859	;# 
 23340   00035C                     SCANLADRU       equ	860	;# 
 23341   00035D                     SCANHADR        equ	861	;# 
 23342   00035D                     SCANHADRL       equ	861	;# 
 23343   00035E                     SCANHADRH       equ	862	;# 
 23344   00035F                     SCANHADRU       equ	863	;# 
 23345   000360                     SCANCON0        equ	864	;# 
 23346   000361                     SCANTRIG        equ	865	;# 
 23347   000362                     IPR0            equ	866	;# 
 23348   000363                     IPR1            equ	867	;# 
 23349   000364                     IPR2            equ	868	;# 
 23350   000365                     IPR3            equ	869	;# 
 23351   000366                     IPR4            equ	870	;# 
 23352   000367                     IPR5            equ	871	;# 
 23353   000368                     IPR6            equ	872	;# 
 23354   000369                     IPR7            equ	873	;# 
 23355   00036A                     IPR8            equ	874	;# 
 23356   00036B                     IPR9            equ	875	;# 
 23357   00036C                     IPR10           equ	876	;# 
 23358   00036D                     IPR11           equ	877	;# 
 23359   00036E                     IPR12           equ	878	;# 
 23360   00036F                     IPR13           equ	879	;# 
 23361   000370                     IPR14           equ	880	;# 
 23362   000371                     IPR15           equ	881	;# 
 23363   000373                     STATUS_CSHAD    equ	883	;# 
 23364   000374                     WREG_CSHAD      equ	884	;# 
 23365   000375                     BSR_CSHAD       equ	885	;# 
 23366   000376                     SHADCON         equ	886	;# 
 23367   000377                     STATUS_SHAD     equ	887	;# 
 23368   000378                     WREG_SHAD       equ	888	;# 
 23369   000379                     BSR_SHAD        equ	889	;# 
 23370   00037A                     PCLATH_SHAD     equ	890	;# 
 23371   00037B                     PCLATU_SHAD     equ	891	;# 
 23372   00037C                     FSR0SH          equ	892	;# 
 23373   00037C                     FSR0L_SHAD      equ	892	;# 
 23374   00037D                     FSR0H_SHAD      equ	893	;# 
 23375   00037E                     FSR1SH          equ	894	;# 
 23376   00037E                     FSR1L_SHAD      equ	894	;# 
 23377   00037F                     FSR1H_SHAD      equ	895	;# 
 23378   000380                     FSR2SH          equ	896	;# 
 23379   000380                     FSR2L_SHAD      equ	896	;# 
 23380   000381                     FSR2H_SHAD      equ	897	;# 
 23381   000382                     PRODSH          equ	898	;# 
 23382   000382                     PRODL_SHAD      equ	898	;# 
 23383   000383                     PRODH_SHAD      equ	899	;# 
 23384   000387                     TU16ACON0       equ	903	;# 
 23385   000388                     TU16ACON1       equ	904	;# 
 23386   000389                     TU16AHLT        equ	905	;# 
 23387   00038A                     TU16APS         equ	906	;# 
 23388   00038B                     TU16ATMR        equ	907	;# 
 23389   00038B                     TU16ACR         equ	907	;# 
 23390   00038B                     TU16ATMRL       equ	907	;# 
 23391   00038B                     TU16ACRL        equ	907	;# 
 23392   00038C                     TU16ATMRH       equ	908	;# 
 23393   00038C                     TU16ACRH        equ	908	;# 
 23394   00038D                     TU16APR         equ	909	;# 
 23395   00038D                     TU16APRL        equ	909	;# 
 23396   00038E                     TU16APRH        equ	910	;# 
 23397   00038F                     TU16ACLK        equ	911	;# 
 23398   000390                     TU16AERS        equ	912	;# 
 23399   000393                     TU16BCON0       equ	915	;# 
 23400   000394                     TU16BCON1       equ	916	;# 
 23401   000395                     TU16BHLT        equ	917	;# 
 23402   000396                     TU16BPS         equ	918	;# 
 23403   000397                     TU16BTMR        equ	919	;# 
 23404   000397                     TU16BCR         equ	919	;# 
 23405   000397                     TU16BTMRL       equ	919	;# 
 23406   000397                     TU16BCRL        equ	919	;# 
 23407   000398                     TU16BTMRH       equ	920	;# 
 23408   000398                     TU16BCRH        equ	920	;# 
 23409   000399                     TU16BPR         equ	921	;# 
 23410   000399                     TU16BPRL        equ	921	;# 
 23411   00039A                     TU16BPRH        equ	922	;# 
 23412   00039B                     TU16BCLK        equ	923	;# 
 23413   00039C                     TU16BERS        equ	924	;# 
 23414   0003BB                     TUCHAIN         equ	955	;# 
 23415   0003BC                     CWG1CLK         equ	956	;# 
 23416   0003BC                     CWG1CLKCON      equ	956	;# 
 23417   0003BD                     CWG1ISM         equ	957	;# 
 23418   0003BE                     CWG1DBR         equ	958	;# 
 23419   0003BF                     CWG1DBF         equ	959	;# 
 23420   0003C0                     CWG1CON0        equ	960	;# 
 23421   0003C1                     CWG1CON1        equ	961	;# 
 23422   0003C2                     CWG1AS0         equ	962	;# 
 23423   0003C3                     CWG1AS1         equ	963	;# 
 23424   0003C4                     CWG1STR         equ	964	;# 
 23425   0003C5                     CWG2CLK         equ	965	;# 
 23426   0003C5                     CWG2CLKCON      equ	965	;# 
 23427   0003C6                     CWG2ISM         equ	966	;# 
 23428   0003C7                     CWG2DBR         equ	967	;# 
 23429   0003C8                     CWG2DBF         equ	968	;# 
 23430   0003C9                     CWG2CON0        equ	969	;# 
 23431   0003CA                     CWG2CON1        equ	970	;# 
 23432   0003CB                     CWG2AS0         equ	971	;# 
 23433   0003CC                     CWG2AS1         equ	972	;# 
 23434   0003CD                     CWG2STR         equ	973	;# 
 23435   0003CE                     CWG3CLK         equ	974	;# 
 23436   0003CE                     CWG3CLKCON      equ	974	;# 
 23437   0003CF                     CWG3ISM         equ	975	;# 
 23438   0003D0                     CWG3DBR         equ	976	;# 
 23439   0003D1                     CWG3DBF         equ	977	;# 
 23440   0003D2                     CWG3CON0        equ	978	;# 
 23441   0003D3                     CWG3CON1        equ	979	;# 
 23442   0003D4                     CWG3AS0         equ	980	;# 
 23443   0003D5                     CWG3AS1         equ	981	;# 
 23444   0003D6                     CWG3STR         equ	982	;# 
 23445   0003D7                     FVRCON          equ	983	;# 
 23446   0003D8                     ADCPCON         equ	984	;# 
 23447   0003D8                     ADCP            equ	984	;# 
 23448   0003D9                     ADLTH           equ	985	;# 
 23449   0003D9                     ADLTHL          equ	985	;# 
 23450   0003DA                     ADLTHH          equ	986	;# 
 23451   0003DB                     ADUTH           equ	987	;# 
 23452   0003DB                     ADUTHL          equ	987	;# 
 23453   0003DC                     ADUTHH          equ	988	;# 
 23454   0003DD                     ADERR           equ	989	;# 
 23455   0003DD                     ADERRL          equ	989	;# 
 23456   0003DE                     ADERRH          equ	990	;# 
 23457   0003DF                     ADSTPT          equ	991	;# 
 23458   0003DF                     ADSTPTL         equ	991	;# 
 23459   0003E0                     ADSTPTH         equ	992	;# 
 23460   0003E1                     ADFLTR          equ	993	;# 
 23461   0003E1                     ADFLTRL         equ	993	;# 
 23462   0003E2                     ADFLTRH         equ	994	;# 
 23463   0003E3                     ADACC           equ	995	;# 
 23464   0003E3                     ADACCL          equ	995	;# 
 23465   0003E4                     ADACCH          equ	996	;# 
 23466   0003E5                     ADACCU          equ	997	;# 
 23467   0003E6                     ADCNT           equ	998	;# 
 23468   0003E7                     ADRPT           equ	999	;# 
 23469   0003E8                     ADPREV          equ	1000	;# 
 23470   0003E8                     ADPREVL         equ	1000	;# 
 23471   0003E9                     ADPREVH         equ	1001	;# 
 23472   0003EA                     ADRES           equ	1002	;# 
 23473   0003EA                     ADRESL          equ	1002	;# 
 23474   0003EB                     ADRESH          equ	1003	;# 
 23475   0003EC                     ADPCH           equ	1004	;# 
 23476   0003EE                     ADACQ           equ	1006	;# 
 23477   0003EE                     ADACQL          equ	1006	;# 
 23478   0003EF                     ADACQH          equ	1007	;# 
 23479   0003F0                     ADCAP           equ	1008	;# 
 23480   0003F1                     ADPRE           equ	1009	;# 
 23481   0003F1                     ADPREL          equ	1009	;# 
 23482   0003F2                     ADPREH          equ	1010	;# 
 23483   0003F3                     ADCON0          equ	1011	;# 
 23484   0003F4                     ADCON1          equ	1012	;# 
 23485   0003F5                     ADCON2          equ	1013	;# 
 23486   0003F6                     ADCON3          equ	1014	;# 
 23487   0003F7                     ADSTAT          equ	1015	;# 
 23488   0003F8                     ADREF           equ	1016	;# 
 23489   0003F9                     ADACT           equ	1017	;# 
 23490   0003FA                     ADCLK           equ	1018	;# 
 23491   0003FB                     ADCTX           equ	1019	;# 
 23492   0003FC                     ADCSEL1         equ	1020	;# 
 23493   0003FD                     ADCSEL2         equ	1021	;# 
 23494   0003FE                     ADCSEL3         equ	1022	;# 
 23495   0003FF                     ADCSEL4         equ	1023	;# 
 23496   000400                     ANSELA          equ	1024	;# 
 23497   000401                     WPUA            equ	1025	;# 
 23498   000402                     ODCONA          equ	1026	;# 
 23499   000403                     SLRCONA         equ	1027	;# 
 23500   000404                     INLVLA          equ	1028	;# 
 23501   000405                     IOCAP           equ	1029	;# 
 23502   000406                     IOCAN           equ	1030	;# 
 23503   000407                     IOCAF           equ	1031	;# 
 23504   000408                     ANSELB          equ	1032	;# 
 23505   000409                     WPUB            equ	1033	;# 
 23506   00040A                     ODCONB          equ	1034	;# 
 23507   00040B                     SLRCONB         equ	1035	;# 
 23508   00040C                     INLVLB          equ	1036	;# 
 23509   00040D                     IOCBP           equ	1037	;# 
 23510   00040E                     IOCBN           equ	1038	;# 
 23511   00040F                     IOCBF           equ	1039	;# 
 23512   000410                     ANSELC          equ	1040	;# 
 23513   000411                     WPUC            equ	1041	;# 
 23514   000412                     ODCONC          equ	1042	;# 
 23515   000413                     SLRCONC         equ	1043	;# 
 23516   000414                     INLVLC          equ	1044	;# 
 23517   000415                     IOCCP           equ	1045	;# 
 23518   000416                     IOCCN           equ	1046	;# 
 23519   000417                     IOCCF           equ	1047	;# 
 23520   000421                     WPUE            equ	1057	;# 
 23521   000424                     INLVLE          equ	1060	;# 
 23522   000425                     IOCEP           equ	1061	;# 
 23523   000426                     IOCEN           equ	1062	;# 
 23524   000427                     IOCEF           equ	1063	;# 
 23525   000440                     NCO1ACC         equ	1088	;# 
 23526   000440                     NCO1ACCL        equ	1088	;# 
 23527   000441                     NCO1ACCH        equ	1089	;# 
 23528   000442                     NCO1ACCU        equ	1090	;# 
 23529   000443                     NCO1INC         equ	1091	;# 
 23530   000443                     NCO1INCL        equ	1091	;# 
 23531   000444                     NCO1INCH        equ	1092	;# 
 23532   000445                     NCO1INCU        equ	1093	;# 
 23533   000446                     NCO1CON         equ	1094	;# 
 23534   000447                     NCO1CLK         equ	1095	;# 
 23535   000448                     NCO2ACC         equ	1096	;# 
 23536   000448                     NCO2ACCL        equ	1096	;# 
 23537   000449                     NCO2ACCH        equ	1097	;# 
 23538   00044A                     NCO2ACCU        equ	1098	;# 
 23539   00044B                     NCO2INC         equ	1099	;# 
 23540   00044B                     NCO2INCL        equ	1099	;# 
 23541   00044C                     NCO2INCH        equ	1100	;# 
 23542   00044D                     NCO2INCU        equ	1101	;# 
 23543   00044E                     NCO2CON         equ	1102	;# 
 23544   00044F                     NCO2CLK         equ	1103	;# 
 23545   000450                     NCO3ACC         equ	1104	;# 
 23546   000450                     NCO3ACCL        equ	1104	;# 
 23547   000451                     NCO3ACCH        equ	1105	;# 
 23548   000452                     NCO3ACCU        equ	1106	;# 
 23549   000453                     NCO3INC         equ	1107	;# 
 23550   000453                     NCO3INCL        equ	1107	;# 
 23551   000454                     NCO3INCH        equ	1108	;# 
 23552   000455                     NCO3INCU        equ	1109	;# 
 23553   000456                     NCO3CON         equ	1110	;# 
 23554   000457                     NCO3CLK         equ	1111	;# 
 23555   000458                     FSCMCON         equ	1112	;# 
 23556   000459                     IVTLOCK         equ	1113	;# 
 23557   00045A                     IVTAD           equ	1114	;# 
 23558   00045A                     IVTADL          equ	1114	;# 
 23559   00045B                     IVTADH          equ	1115	;# 
 23560   00045C                     IVTADU          equ	1116	;# 
 23561   00045D                     IVTBASE         equ	1117	;# 
 23562   00045D                     IVTBASEL        equ	1117	;# 
 23563   00045E                     IVTBASEH        equ	1118	;# 
 23564   00045F                     IVTBASEU        equ	1119	;# 
 23565   000460                     PWM1ERS         equ	1120	;# 
 23566   000461                     PWM1CLK         equ	1121	;# 
 23567   000462                     PWM1LDS         equ	1122	;# 
 23568   000463                     PWM1PR          equ	1123	;# 
 23569   000463                     PWM1PRL         equ	1123	;# 
 23570   000464                     PWM1PRH         equ	1124	;# 
 23571   000465                     PWM1CPRE        equ	1125	;# 
 23572   000466                     PWM1PIPOS       equ	1126	;# 
 23573   000467                     PWM1GIR         equ	1127	;# 
 23574   000468                     PWM1GIE         equ	1128	;# 
 23575   000469                     PWM1CON         equ	1129	;# 
 23576   00046A                     PWM1S1CFG       equ	1130	;# 
 23577   00046B                     PWM1S1P1        equ	1131	;# 
 23578   00046B                     PWM1S1P1L       equ	1131	;# 
 23579   00046C                     PWM1S1P1H       equ	1132	;# 
 23580   00046D                     PWM1S1P2        equ	1133	;# 
 23581   00046D                     PWM1S1P2L       equ	1133	;# 
 23582   00046E                     PWM1S1P2H       equ	1134	;# 
 23583   00046F                     PWM2ERS         equ	1135	;# 
 23584   000470                     PWM2CLK         equ	1136	;# 
 23585   000471                     PWM2LDS         equ	1137	;# 
 23586   000472                     PWM2PR          equ	1138	;# 
 23587   000472                     PWM2PRL         equ	1138	;# 
 23588   000473                     PWM2PRH         equ	1139	;# 
 23589   000474                     PWM2CPRE        equ	1140	;# 
 23590   000475                     PWM2PIPOS       equ	1141	;# 
 23591   000476                     PWM2GIR         equ	1142	;# 
 23592   000477                     PWM2GIE         equ	1143	;# 
 23593   000478                     PWM2CON         equ	1144	;# 
 23594   000479                     PWM2S1CFG       equ	1145	;# 
 23595   00047A                     PWM2S1P1        equ	1146	;# 
 23596   00047A                     PWM2S1P1L       equ	1146	;# 
 23597   00047B                     PWM2S1P1H       equ	1147	;# 
 23598   00047C                     PWM2S1P2        equ	1148	;# 
 23599   00047C                     PWM2S1P2L       equ	1148	;# 
 23600   00047D                     PWM2S1P2H       equ	1149	;# 
 23601   00047E                     PWM3ERS         equ	1150	;# 
 23602   00047F                     PWM3CLK         equ	1151	;# 
 23603   000480                     PWM3LDS         equ	1152	;# 
 23604   000481                     PWM3PR          equ	1153	;# 
 23605   000481                     PWM3PRL         equ	1153	;# 
 23606   000482                     PWM3PRH         equ	1154	;# 
 23607   000483                     PWM3CPRE        equ	1155	;# 
 23608   000484                     PWM3PIPOS       equ	1156	;# 
 23609   000485                     PWM3GIR         equ	1157	;# 
 23610   000486                     PWM3GIE         equ	1158	;# 
 23611   000487                     PWM3CON         equ	1159	;# 
 23612   000488                     PWM3S1CFG       equ	1160	;# 
 23613   000489                     PWM3S1P1        equ	1161	;# 
 23614   000489                     PWM3S1P1L       equ	1161	;# 
 23615   00048A                     PWM3S1P1H       equ	1162	;# 
 23616   00048B                     PWM3S1P2        equ	1163	;# 
 23617   00048B                     PWM3S1P2L       equ	1163	;# 
 23618   00048C                     PWM3S1P2H       equ	1164	;# 
 23619   00048D                     PWM4ERS         equ	1165	;# 
 23620   00048E                     PWM4CLK         equ	1166	;# 
 23621   00048F                     PWM4LDS         equ	1167	;# 
 23622   000490                     PWM4PR          equ	1168	;# 
 23623   000490                     PWM4PRL         equ	1168	;# 
 23624   000491                     PWM4PRH         equ	1169	;# 
 23625   000492                     PWM4CPRE        equ	1170	;# 
 23626   000493                     PWM4PIPOS       equ	1171	;# 
 23627   000494                     PWM4GIR         equ	1172	;# 
 23628   000495                     PWM4GIE         equ	1173	;# 
 23629   000496                     PWM4CON         equ	1174	;# 
 23630   000497                     PWM4S1CFG       equ	1175	;# 
 23631   000498                     PWM4S1P1        equ	1176	;# 
 23632   000498                     PWM4S1P1L       equ	1176	;# 
 23633   000499                     PWM4S1P1H       equ	1177	;# 
 23634   00049A                     PWM4S1P2        equ	1178	;# 
 23635   00049A                     PWM4S1P2L       equ	1178	;# 
 23636   00049B                     PWM4S1P2H       equ	1179	;# 
 23637   00049C                     PWMLOAD         equ	1180	;# 
 23638   00049D                     PWMEN           equ	1181	;# 
 23639   00049E                     PIE0            equ	1182	;# 
 23640   00049F                     PIE1            equ	1183	;# 
 23641   0004A0                     PIE2            equ	1184	;# 
 23642   0004A1                     PIE3            equ	1185	;# 
 23643   0004A2                     PIE4            equ	1186	;# 
 23644   0004A3                     PIE5            equ	1187	;# 
 23645   0004A4                     PIE6            equ	1188	;# 
 23646   0004A5                     PIE7            equ	1189	;# 
 23647   0004A6                     PIE8            equ	1190	;# 
 23648   0004A7                     PIE9            equ	1191	;# 
 23649   0004A8                     PIE10           equ	1192	;# 
 23650   0004A9                     PIE11           equ	1193	;# 
 23651   0004AA                     PIE12           equ	1194	;# 
 23652   0004AB                     PIE13           equ	1195	;# 
 23653   0004AC                     PIE14           equ	1196	;# 
 23654   0004AD                     PIE15           equ	1197	;# 
 23655   0004AE                     PIR0            equ	1198	;# 
 23656   0004AF                     PIR1            equ	1199	;# 
 23657   0004B0                     PIR2            equ	1200	;# 
 23658   0004B1                     PIR3            equ	1201	;# 
 23659   0004B2                     PIR4            equ	1202	;# 
 23660   0004B3                     PIR5            equ	1203	;# 
 23661   0004B4                     PIR6            equ	1204	;# 
 23662   0004B5                     PIR7            equ	1205	;# 
 23663   0004B6                     PIR8            equ	1206	;# 
 23664   0004B7                     PIR9            equ	1207	;# 
 23665   0004B8                     PIR10           equ	1208	;# 
 23666   0004B9                     PIR11           equ	1209	;# 
 23667   0004BA                     PIR12           equ	1210	;# 
 23668   0004BB                     PIR13           equ	1211	;# 
 23669   0004BC                     PIR14           equ	1212	;# 
 23670   0004BD                     PIR15           equ	1213	;# 
 23671   0004BE                     LATA            equ	1214	;# 
 23672   0004BF                     LATB            equ	1215	;# 
 23673   0004C0                     LATC            equ	1216	;# 
 23674   0004C6                     TRISA           equ	1222	;# 
 23675   0004C7                     TRISB           equ	1223	;# 
 23676   0004C8                     TRISC           equ	1224	;# 
 23677   0004CA                     TRISE           equ	1226	;# 
 23678   0004CE                     PORTA           equ	1230	;# 
 23679   0004CF                     PORTB           equ	1231	;# 
 23680   0004D0                     PORTC           equ	1232	;# 
 23681   0004D2                     PORTE           equ	1234	;# 
 23682   0004D6                     INTCON0         equ	1238	;# 
 23683   0004D7                     INTCON1         equ	1239	;# 
 23684   0004D8                     STATUS          equ	1240	;# 
 23685   0004D9                     FSR2            equ	1241	;# 
 23686   0004D9                     FSR2L           equ	1241	;# 
 23687   0004DA                     FSR2H           equ	1242	;# 
 23688   0004DB                     PLUSW2          equ	1243	;# 
 23689   0004DC                     PREINC2         equ	1244	;# 
 23690   0004DD                     POSTDEC2        equ	1245	;# 
 23691   0004DE                     POSTINC2        equ	1246	;# 
 23692   0004DF                     INDF2           equ	1247	;# 
 23693   0004E0                     BSR             equ	1248	;# 
 23694   0004E1                     FSR1            equ	1249	;# 
 23695   0004E1                     FSR1L           equ	1249	;# 
 23696   0004E2                     FSR1H           equ	1250	;# 
 23697   0004E3                     PLUSW1          equ	1251	;# 
 23698   0004E4                     PREINC1         equ	1252	;# 
 23699   0004E5                     POSTDEC1        equ	1253	;# 
 23700   0004E6                     POSTINC1        equ	1254	;# 
 23701   0004E7                     INDF1           equ	1255	;# 
 23702   0004E8                     WREG            equ	1256	;# 
 23703   0004E9                     FSR0            equ	1257	;# 
 23704   0004E9                     FSR0L           equ	1257	;# 
 23705   0004EA                     FSR0H           equ	1258	;# 
 23706   0004EB                     PLUSW0          equ	1259	;# 
 23707   0004EC                     PREINC0         equ	1260	;# 
 23708   0004ED                     POSTDEC0        equ	1261	;# 
 23709   0004EE                     POSTINC0        equ	1262	;# 
 23710   0004EF                     INDF0           equ	1263	;# 
 23711   0004F0                     PCON0           equ	1264	;# 
 23712   0004F1                     PCON1           equ	1265	;# 
 23713   0004F2                     CPUDOZE         equ	1266	;# 
 23714   0004F3                     PROD            equ	1267	;# 
 23715   0004F3                     PRODL           equ	1267	;# 
 23716   0004F4                     PRODH           equ	1268	;# 
 23717   0004F5                     TABLAT          equ	1269	;# 
 23718   0004F6                     TBLPTR          equ	1270	;# 
 23719   0004F6                     TBLPTRL         equ	1270	;# 
 23720   0004F7                     TBLPTRH         equ	1271	;# 
 23721   0004F8                     TBLPTRU         equ	1272	;# 
 23722   0004F9                     PCLAT           equ	1273	;# 
 23723   0004F9                     PCL             equ	1273	;# 
 23724   0004FA                     PCLATH          equ	1274	;# 
 23725   0004FB                     PCLATU          equ	1275	;# 
 23726   0004FC                     STKPTR          equ	1276	;# 
 23727   0004FD                     TOS             equ	1277	;# 
 23728   0004FD                     TOSL            equ	1277	;# 
 23729   0004FE                     TOSH            equ	1278	;# 
 23730   0004FF                     TOSU            equ	1279	;# 
 23731                           
 23732                           	psect	idataBANK5
 23733   016654                     __pidataBANK5:
 23734                           	callstack 0
 23735                           
 23736                           ;initializer for _flashBuffer
 23737   016654  00                 	db	0
 23738   016655  37                 	db	55
 23739                           
 23740                           	psect	mediumconst
 23741   00FE38                     __pmediumconst:
 23742                           	callstack 0
 23743   00FE38  00                 	db	0
 23744   00FE39                     _priorities:
 23745                           	callstack 0
 23746   00FE39  01                 	db	1
 23747   00FE3A  01                 	db	1
 23748   00FE3B  03                 	db	3
 23749   00FE3C  02                 	db	2
 23750   00FE3D  02                 	db	2
 23751   00FE3E  02                 	db	2
 23752   00FE3F  02                 	db	2
 23753   00FE40  03                 	db	3
 23754   00FE41  02                 	db	2
 23755   00FE42  02                 	db	2
 23756   00FE43  03                 	db	3
 23757   00FE44  01                 	db	1
 23758   00FE45  00                 	db	0
 23759   00FE46  00                 	db	0
 23760   00FE47  01                 	db	1
 23761   00FE48  01                 	db	1
 23762   00FE49  01                 	db	1
 23763   00FE4A  01                 	db	1
 23764   00FE4B  01                 	db	1
 23765   00FE4C  01                 	db	1
 23766   00FE4D  01                 	db	1
 23767   00FE4E  01                 	db	1
 23768   00FE4F  01                 	db	1
 23769   00FE50  01                 	db	1
 23770   00FE51  01                 	db	1
 23771   00FE52  01                 	db	1
 23772   00FE53  01                 	db	1
 23773   00FE54  01                 	db	1
 23774   00FE55  01                 	db	1
 23775   00FE56  01                 	db	1
 23776   00FE57  01                 	db	1
 23777   00FE58  01                 	db	1
 23778   00FE59  01                 	db	1
 23779   00FE5A  01                 	db	1
 23780   00FE5B  01                 	db	1
 23781   00FE5C  01                 	db	1
 23782   00FE5D  01                 	db	1
 23783   00FE5E  01                 	db	1
 23784   00FE5F  01                 	db	1
 23785   00FE60  01                 	db	1
 23786   00FE61  01                 	db	1
 23787   00FE62  01                 	db	1
 23788   00FE63  01                 	db	1
 23789   00FE64  01                 	db	1
 23790   00FE65  01                 	db	1
 23791   00FE66  01                 	db	1
 23792   00FE67  01                 	db	1
 23793   00FE68  01                 	db	1
 23794   00FE69  01                 	db	1
 23795   00FE6A  01                 	db	1
 23796   00FE6B  01                 	db	1
 23797   00FE6C  01                 	db	1
 23798   00FE6D  01                 	db	1
 23799   00FE6E  01                 	db	1
 23800   00FE6F  01                 	db	1
 23801   00FE70  01                 	db	1
 23802   00FE71  01                 	db	1
 23803   00FE72  01                 	db	1
 23804   00FE73  01                 	db	1
 23805   00FE74  01                 	db	1
 23806   00FE75  01                 	db	1
 23807   00FE76  01                 	db	1
 23808   00FE77  01                 	db	1
 23809   00FE78  00                 	db	0
 23810   00FE79  01                 	db	1
 23811   00FE7A  01                 	db	1
 23812   00FE7B  01                 	db	1
 23813   00FE7C  01                 	db	1
 23814   00FE7D  01                 	db	1
 23815   00FE7E  01                 	db	1
 23816   00FE7F  01                 	db	1
 23817   00FE80  01                 	db	1
 23818   00FE81  01                 	db	1
 23819   00FE82  00                 	db	0
 23820   00FE83  01                 	db	1
 23821   00FE84  01                 	db	1
 23822   00FE85  00                 	db	0
 23823   00FE86  00                 	db	0
 23824   00FE87  00                 	db	0
 23825   00FE88  00                 	db	0
 23826   00FE89  00                 	db	0
 23827   00FE8A  00                 	db	0
 23828   00FE8B  00                 	db	0
 23829   00FE8C  00                 	db	0
 23830   00FE8D  00                 	db	0
 23831   00FE8E  00                 	db	0
 23832   00FE8F  00                 	db	0
 23833   00FE90  00                 	db	0
 23834   00FE91  00                 	db	0
 23835   00FE92  00                 	db	0
 23836   00FE93  00                 	db	0
 23837   00FE94  00                 	db	0
 23838   00FE95  00                 	db	0
 23839   00FE96  01                 	db	1
 23840   00FE97  01                 	db	1
 23841   00FE98  01                 	db	1
 23842   00FE99  01                 	db	1
 23843   00FE9A  01                 	db	1
 23844   00FE9B  03                 	db	3
 23845   00FE9C  01                 	db	1
 23846   00FE9D  01                 	db	1
 23847   00FE9E  01                 	db	1
 23848   00FE9F  01                 	db	1
 23849   00FEA0  01                 	db	1
 23850   00FEA1  01                 	db	1
 23851   00FEA2  01                 	db	1
 23852   00FEA3  01                 	db	1
 23853   00FEA4  00                 	db	0
 23854   00FEA5  00                 	db	0
 23855   00FEA6  00                 	db	0
 23856   00FEA7  00                 	db	0
 23857   00FEA8  00                 	db	0
 23858   00FEA9  00                 	db	0
 23859   00FEAA  00                 	db	0
 23860   00FEAB  00                 	db	0
 23861   00FEAC  01                 	db	1
 23862   00FEAD  00                 	db	0
 23863   00FEAE  01                 	db	1
 23864   00FEAF  01                 	db	1
 23865   00FEB0  01                 	db	1
 23866   00FEB1  01                 	db	1
 23867   00FEB2  01                 	db	1
 23868   00FEB3  01                 	db	1
 23869   00FEB4  00                 	db	0
 23870   00FEB5  01                 	db	1
 23871   00FEB6  01                 	db	1
 23872   00FEB7  01                 	db	1
 23873   00FEB8  01                 	db	1
 23874   00FEB9  01                 	db	1
 23875   00FEBA  01                 	db	1
 23876   00FEBB  01                 	db	1
 23877   00FEBC  00                 	db	0
 23878   00FEBD  01                 	db	1
 23879   00FEBE  01                 	db	1
 23880   00FEBF  01                 	db	1
 23881   00FEC0  01                 	db	1
 23882   00FEC1  01                 	db	1
 23883   00FEC2  01                 	db	1
 23884   00FEC3  00                 	db	0
 23885   00FEC4  01                 	db	1
 23886   00FEC5  00                 	db	0
 23887   00FEC6  00                 	db	0
 23888   00FEC7  00                 	db	0
 23889   00FEC8  00                 	db	0
 23890   00FEC9  00                 	db	0
 23891   00FECA  00                 	db	0
 23892   00FECB  00                 	db	0
 23893   00FECC  00                 	db	0
 23894   00FECD  00                 	db	0
 23895   00FECE  00                 	db	0
 23896   00FECF  00                 	db	0
 23897   00FED0  00                 	db	0
 23898   00FED1  00                 	db	0
 23899   00FED2  00                 	db	0
 23900   00FED3  00                 	db	0
 23901   00FED4  00                 	db	0
 23902   00FED5  01                 	db	1
 23903   00FED6  01                 	db	1
 23904   00FED7  01                 	db	1
 23905   00FED8  01                 	db	1
 23906   00FED9  01                 	db	1
 23907   00FEDA  01                 	db	1
 23908   00FEDB  01                 	db	1
 23909   00FEDC  01                 	db	1
 23910   00FEDD  01                 	db	1
 23911   00FEDE  01                 	db	1
 23912   00FEDF  01                 	db	1
 23913   00FEE0  00                 	db	0
 23914   00FEE1  00                 	db	0
 23915   00FEE2  01                 	db	1
 23916   00FEE3  01                 	db	1
 23917   00FEE4  00                 	db	0
 23918   00FEE5  00                 	db	0
 23919   00FEE6  00                 	db	0
 23920   00FEE7  00                 	db	0
 23921   00FEE8  00                 	db	0
 23922   00FEE9  00                 	db	0
 23923   00FEEA  00                 	db	0
 23924   00FEEB  00                 	db	0
 23925   00FEEC  01                 	db	1
 23926   00FEED  00                 	db	0
 23927   00FEEE  00                 	db	0
 23928   00FEEF  01                 	db	1
 23929   00FEF0  01                 	db	1
 23930   00FEF1  01                 	db	1
 23931   00FEF2  00                 	db	0
 23932   00FEF3  00                 	db	0
 23933   00FEF4  00                 	db	0
 23934   00FEF5  01                 	db	1
 23935   00FEF6  01                 	db	1
 23936   00FEF7  01                 	db	1
 23937   00FEF8  01                 	db	1
 23938   00FEF9  01                 	db	1
 23939   00FEFA  01                 	db	1
 23940   00FEFB  01                 	db	1
 23941   00FEFC  00                 	db	0
 23942   00FEFD  01                 	db	1
 23943   00FEFE  01                 	db	1
 23944   00FEFF  01                 	db	1
 23945   00FF00  01                 	db	1
 23946   00FF01  01                 	db	1
 23947   00FF02  01                 	db	1
 23948   00FF03  01                 	db	1
 23949   00FF04  01                 	db	1
 23950   00FF05  00                 	db	0
 23951   00FF06  00                 	db	0
 23952   00FF07  00                 	db	0
 23953   00FF08  00                 	db	0
 23954   00FF09  00                 	db	0
 23955   00FF0A  00                 	db	0
 23956   00FF0B  01                 	db	1
 23957   00FF0C  01                 	db	1
 23958   00FF0D  00                 	db	0
 23959   00FF0E  00                 	db	0
 23960   00FF0F  01                 	db	1
 23961   00FF10  01                 	db	1
 23962   00FF11  01                 	db	1
 23963   00FF12  00                 	db	0
 23964   00FF13  00                 	db	0
 23965   00FF14  00                 	db	0
 23966   00FF15  01                 	db	1
 23967   00FF16  01                 	db	1
 23968   00FF17  00                 	db	0
 23969   00FF18  01                 	db	1
 23970   00FF19  01                 	db	1
 23971   00FF1A  01                 	db	1
 23972   00FF1B  00                 	db	0
 23973   00FF1C  00                 	db	0
 23974   00FF1D  01                 	db	1
 23975   00FF1E  00                 	db	0
 23976   00FF1F  01                 	db	1
 23977   00FF20  01                 	db	1
 23978   00FF21  01                 	db	1
 23979   00FF22  01                 	db	1
 23980   00FF23  01                 	db	1
 23981   00FF24  00                 	db	0
 23982   00FF25  00                 	db	0
 23983   00FF26  00                 	db	0
 23984   00FF27  00                 	db	0
 23985   00FF28  00                 	db	0
 23986   00FF29  00                 	db	0
 23987   00FF2A  00                 	db	0
 23988   00FF2B  00                 	db	0
 23989   00FF2C  00                 	db	0
 23990   00FF2D  00                 	db	0
 23991   00FF2E  00                 	db	0
 23992   00FF2F  00                 	db	0
 23993   00FF30  00                 	db	0
 23994   00FF31  00                 	db	0
 23995   00FF32  00                 	db	0
 23996   00FF33  01                 	db	1
 23997   00FF34  00                 	db	0
 23998   00FF35  00                 	db	0
 23999   00FF36  00                 	db	0
 24000   00FF37  00                 	db	0
 24001   00FF38  00                 	db	0
 24002   00FF39                     __end_of_priorities:
 24003                           	callstack 0
 24004   000820                     _paramBlock_absaddr set	2080
 24005   00FF39                     _services:
 24006                           	callstack 0
 24007   00FF39  E5                 	db	low _canService
 24008   00FF3A  FF                 	db	high _canService
 24009   00FF3B  D1                 	db	low _mnsService
 24010   00FF3C  FF                 	db	high _mnsService
 24011   00FF3D  BD                 	db	low _nvService
 24012   00FF3E  FF                 	db	high _nvService
 24013   00FF3F  A9                 	db	low _bootService
 24014   00FF40  FF                 	db	high _bootService
 24015   00FF41  95                 	db	low _eventTeachService
 24016   00FF42  FF                 	db	high _eventTeachService
 24017   00FF43  81                 	db	low _eventConsumerService
 24018   00FF44  FF                 	db	high _eventConsumerService
 24019   00FF45  6D                 	db	low _eventProducerService
 24020   00FF46  FF                 	db	high _eventProducerService
 24021   00FF47  59                 	db	low _eventCoeService
 24022   00FF48  FF                 	db	high _eventCoeService
 24023   00FF49                     __end_of_services:
 24024                           	callstack 0
 24025   00FF49                     _bl_version:
 24026                           	callstack 0
 24027   00FF49  42                 	db	66
 24028   00FF4A  4C                 	db	76
 24029   00FF4B  5F                 	db	95
 24030   00FF4C  56                 	db	86
 24031   00FF4D  45                 	db	69
 24032   00FF4E  52                 	db	82
 24033   00FF4F  53                 	db	83
 24034   00FF50  49                 	db	73
 24035   00FF51  4F                 	db	79
 24036   00FF52  4E                 	db	78
 24037   00FF53  3D                 	db	61
 24038   00FF54                     __end_of_bl_version:
 24039                           	callstack 0
 24040   000848                     _name_absaddr   set	2120
 24041   00FF54                     _canPri:
 24042                           	callstack 0
 24043   00FF54  0B                 	db	11
 24044   00FF55  0A                 	db	10
 24045   00FF56  09                 	db	9
 24046   00FF57  08                 	db	8
 24047   00FF58  00                 	db	0
 24048   00FF59                     __end_of_canPri:
 24049                           	callstack 0
 24050   00FF59                     _eventCoeService:
 24051                           	callstack 0
 24052   00FF59  08                 	db	8
 24053   00FF5A  01                 	db	1
 24054   00FF5B  00                 	db	0
 24055   00FF5C  00                 	db	0
 24056   00FF5D  00                 	db	0
 24057   00FF5E  00                 	db	0
 24058   00FF5F  00                 	db	0
 24059   00FF60  00                 	db	0
 24060   00FF61  00                 	db	0
 24061   00FF62  00                 	db	0
 24062   00FF63  00                 	db	0
 24063   00FF64  00                 	db	0
 24064   00FF65  00                 	db	0
 24065   00FF66  00                 	db	0
 24066   00FF67  00                 	db	0
 24067   00FF68  00                 	db	0
 24068   00FF69  00                 	db	0
 24069   00FF6A  00                 	db	0
 24070   00FF6B  00                 	db	0
 24071   00FF6C  00                 	db	0
 24072   00FF6D                     __end_of_eventCoeService:
 24073                           	callstack 0
 24074   00FF6D                     _eventProducerService:
 24075                           	callstack 0
 24076   00FF6D  05                 	db	5
 24077   00FF6E  01                 	db	1
 24078   00FF6F  00                 	db	0
 24079   00FF70  00                 	db	0
 24080   00FF71  00                 	db	0
 24081   00FF72  40                 	db	low _producerPowerUp
 24082   00FF73  61                 	db	high _producerPowerUp
 24083   00FF74  01                 	db	low (_producerPowerUp shr (0+16))
 24084   00FF75  56                 	db	low _producerProcessMessage
 24085   00FF76  25                 	db	high _producerProcessMessage
 24086   00FF77  01                 	db	low (_producerProcessMessage shr (0+16))
 24087   00FF78  00                 	db	0
 24088   00FF79  00                 	db	0
 24089   00FF7A  00                 	db	0
 24090   00FF7B  D2                 	db	low _producerEsdData
 24091   00FF7C  64                 	db	high _producerEsdData
 24092   00FF7D  01                 	db	low (_producerEsdData shr (0+16))
 24093   00FF7E  80                 	db	low _producerGetDiagnostic
 24094   00FF7F  63                 	db	high _producerGetDiagnostic
 24095   00FF80  01                 	db	low (_producerGetDiagnostic shr (0+16))
 24096   00FF81                     __end_of_eventProducerService:
 24097                           	callstack 0
 24098   00FF81                     _eventConsumerService:
 24099                           	callstack 0
 24100   00FF81  06                 	db	6
 24101   00FF82  02                 	db	2
 24102   00FF83  00                 	db	0
 24103   00FF84  00                 	db	0
 24104   00FF85  00                 	db	0
 24105   00FF86  6C                 	db	low _consumerPowerUp
 24106   00FF87  61                 	db	high _consumerPowerUp
 24107   00FF88  01                 	db	low (_consumerPowerUp shr (0+16))
 24108   00FF89  28                 	db	low _consumerProcessMessage
 24109   00FF8A  23                 	db	high _consumerProcessMessage
 24110   00FF8B  01                 	db	low (_consumerProcessMessage shr (0+16))
 24111   00FF8C  00                 	db	0
 24112   00FF8D  00                 	db	0
 24113   00FF8E  00                 	db	0
 24114   00FF8F  E8                 	db	low _consumerEsdData
 24115   00FF90  65                 	db	high _consumerEsdData
 24116   00FF91  01                 	db	low (_consumerEsdData shr (0+16))
 24117   00FF92  EC                 	db	low _consumerGetDiagnostic
 24118   00FF93  63                 	db	high _consumerGetDiagnostic
 24119   00FF94  01                 	db	low (_consumerGetDiagnostic shr (0+16))
 24120   00FF95                     __end_of_eventConsumerService:
 24121                           	callstack 0
 24122   00FF95                     _eventTeachService:
 24123                           	callstack 0
 24124   00FF95  04                 	db	4
 24125   00FF96  01                 	db	1
 24126   00FF97  3C                 	db	low _teachFactoryReset
 24127   00FF98  66                 	db	high _teachFactoryReset
 24128   00FF99  01                 	db	low (_teachFactoryReset shr (0+16))
 24129   00FF9A  18                 	db	low _teachPowerUp
 24130   00FF9B  60                 	db	high _teachPowerUp
 24131   00FF9C  01                 	db	low (_teachPowerUp shr (0+16))
 24132   00FF9D  16                 	db	low _teachProcessMessage
 24133   00FF9E  0B                 	db	high _teachProcessMessage
 24134   00FF9F  01                 	db	low (_teachProcessMessage shr (0+16))
 24135   00FFA0  00                 	db	0
 24136   00FFA1  00                 	db	0
 24137   00FFA2  00                 	db	0
 24138   00FFA3  56                 	db	low _teachGetESDdata
 24139   00FFA4  64                 	db	high _teachGetESDdata
 24140   00FFA5  01                 	db	low (_teachGetESDdata shr (0+16))
 24141   00FFA6  10                 	db	low _teachGetDiagnostic
 24142   00FFA7  64                 	db	high _teachGetDiagnostic
 24143   00FFA8  01                 	db	low (_teachGetDiagnostic shr (0+16))
 24144   00FFA9                     __end_of_eventTeachService:
 24145                           	callstack 0
 24146   00FFA9                     _bootService:
 24147                           	callstack 0
 24148   00FFA9  0A                 	db	10
 24149   00FFAA  02                 	db	2
 24150   00FFAB  00                 	db	0
 24151   00FFAC  00                 	db	0
 24152   00FFAD  00                 	db	0
 24153   00FFAE  C2                 	db	low _bootPowerUp
 24154   00FFAF  40                 	db	high _bootPowerUp
 24155   00FFB0  01                 	db	low (_bootPowerUp shr (0+16))
 24156   00FFB1  16                 	db	low _bootProcessMessage
 24157   00FFB2  48                 	db	high _bootProcessMessage
 24158   00FFB3  01                 	db	low (_bootProcessMessage shr (0+16))
 24159   00FFB4  00                 	db	0
 24160   00FFB5  00                 	db	0
 24161   00FFB6  00                 	db	0
 24162   00FFB7  5C                 	db	low _bootEsdData
 24163   00FFB8  63                 	db	high _bootEsdData
 24164   00FFB9  01                 	db	low (_bootEsdData shr (0+16))
 24165   00FFBA  00                 	db	0
 24166   00FFBB  00                 	db	0
 24167   00FFBC  00                 	db	0
 24168   00FFBD                     __end_of_bootService:
 24169                           	callstack 0
 24170   00FFBD                     _nvService:
 24171                           	callstack 0
 24172   00FFBD  02                 	db	2
 24173   00FFBE  02                 	db	2
 24174   00FFBF  E2                 	db	low _nvFactoryReset
 24175   00FFC0  5F                 	db	high _nvFactoryReset
 24176   00FFC1  01                 	db	low (_nvFactoryReset shr (0+16))
 24177   00FFC2  B2                 	db	low _nvPowerUp
 24178   00FFC3  60                 	db	high _nvPowerUp
 24179   00FFC4  01                 	db	low (_nvPowerUp shr (0+16))
 24180   00FFC5  6C                 	db	low _nvProcessMessage
 24181   00FFC6  1B                 	db	high _nvProcessMessage
 24182   00FFC7  01                 	db	low (_nvProcessMessage shr (0+16))
 24183   00FFC8  00                 	db	0
 24184   00FFC9  00                 	db	0
 24185   00FFCA  00                 	db	0
 24186   00FFCB  54                 	db	low _nvGetESDdata
 24187   00FFCC  65                 	db	high _nvGetESDdata
 24188   00FFCD  01                 	db	low (_nvGetESDdata shr (0+16))
 24189   00FFCE  A4                 	db	low _nvGetDiagnostic
 24190   00FFCF  63                 	db	high _nvGetDiagnostic
 24191   00FFD0  01                 	db	low (_nvGetDiagnostic shr (0+16))
 24192   00FFD1                     __end_of_nvService:
 24193                           	callstack 0
 24194   00FFD1                     _mnsService:
 24195                           	callstack 0
 24196   00FFD1  01                 	db	1
 24197   00FFD2  02                 	db	2
 24198   00FFD3  FA                 	db	low _mnsFactoryReset
 24199   00FFD4  52                 	db	high _mnsFactoryReset
 24200   00FFD5  01                 	db	low (_mnsFactoryReset shr (0+16))
 24201   00FFD6  A0                 	db	low _mnsPowerUp
 24202   00FFD7  36                 	db	high _mnsPowerUp
 24203   00FFD8  01                 	db	low (_mnsPowerUp shr (0+16))
 24204   00FFD9  00                 	db	low _mnsProcessMessage
 24205   00FFDA  00                 	db	high _mnsProcessMessage
 24206   00FFDB  01                 	db	low (_mnsProcessMessage shr (0+16))
 24207   00FFDC  92                 	db	low _mnsPoll
 24208   00FFDD  14                 	db	high _mnsPoll
 24209   00FFDE  01                 	db	low (_mnsPoll shr (0+16))
 24210   00FFDF  00                 	db	0
 24211   00FFE0  00                 	db	0
 24212   00FFE1  00                 	db	0
 24213   00FFE2  C8                 	db	low _mnsGetDiagnostic
 24214   00FFE3  63                 	db	high _mnsGetDiagnostic
 24215   00FFE4  01                 	db	low (_mnsGetDiagnostic shr (0+16))
 24216   00FFE5                     __end_of_mnsService:
 24217                           	callstack 0
 24218   00FFE5                     _canService:
 24219                           	callstack 0
 24220   00FFE5  03                 	db	3
 24221   00FFE6  02                 	db	2
 24222   00FFE7  0A                 	db	low _canFactoryReset
 24223   00FFE8  65                 	db	high _canFactoryReset
 24224   00FFE9  01                 	db	low (_canFactoryReset shr (0+16))
 24225   00FFEA  96                 	db	low _canPowerUp
 24226   00FFEB  31                 	db	high _canPowerUp
 24227   00FFEC  01                 	db	low (_canPowerUp shr (0+16))
 24228   00FFED  5E                 	db	low _canProcessMessage
 24229   00FFEE  46                 	db	high _canProcessMessage
 24230   00FFEF  01                 	db	low (_canProcessMessage shr (0+16))
 24231   00FFF0  30                 	db	low _canPoll
 24232   00FFF1  66                 	db	high _canPoll
 24233   00FFF2  01                 	db	low (_canPoll shr (0+16))
 24234   00FFF3  6A                 	db	low _canEsdData
 24235   00FFF4  65                 	db	high _canEsdData
 24236   00FFF5  01                 	db	low (_canEsdData shr (0+16))
 24237   00FFF6  30                 	db	low _canGetDiagnostic
 24238   00FFF7  4A                 	db	high _canGetDiagnostic
 24239   00FFF8  01                 	db	low (_canGetDiagnostic shr (0+16))
 24240   00FFF9                     __end_of_canService:
 24241                           	callstack 0
 24242   00FFF9                     _canTransport:
 24243                           	callstack 0
 24244   00FFF9  D4                 	db	low _canSendMessage
 24245   00FFFA  10                 	db	high _canSendMessage
 24246   00FFFB  01                 	db	low (_canSendMessage shr (0+16))
 24247   00FFFC  E0                 	db	low _canReceiveMessage
 24248   00FFFD  2C                 	db	high _canReceiveMessage
 24249   00FFFE  01                 	db	low (_canReceiveMessage shr (0+16))
 24250   00FFFF                     __end_of_canTransport:
 24251                           	callstack 0
 24252   000820                     _paramBlock_absaddr set	2080
 24253   00FFFF  00                 	db	0	; dummy byte at the end
 24254   00FE38                     __smallconst    set	__pmediumconst
 24255   00FE38                     __mediumconst   set	__pmediumconst
 24256   000003                     __activetblptr  equ	3
 24257                           
 24258                           	psect	_paramBlock_text
 24259   000820                     __p_paramBlock_text:
 24260                           	callstack 0
 24261   000820                     _paramBlock:
 24262                           	callstack 0
 24263   000820  A5                 	db	165
 24264   000821  61                 	db	97
 24265   000822  1D                 	db	29
 24266   000823  FE                 	db	254
 24267   000824  0D                 	db	13
 24268   000825  43                 	db	67
 24269   000826  05                 	db	5
 24270   000827  0B                 	db	11
 24271   000828  17                 	db	23
 24272   000829  01                 	db	1
 24273   00082A  00                 	db	0
 24274   00082B  08                 	db	8
 24275   00082C  00                 	db	0
 24276   00082D  00                 	db	0
 24277   00082E  00                 	db	0
 24278   00082F  00                 	db	0
 24279   000830  00                 	db	0
 24280   000831  00                 	db	0
 24281   000832  01                 	db	1
 24282   000833  06                 	db	6
 24283   000834  00                 	db	0
 24284   000835  00                 	db	0
 24285   000836  00                 	db	0
 24286   000837  00                 	db	0
 24287   000838  14                 	db	20
 24288   000839  00                 	db	0
 24289   00083A  48                 	db	72
 24290   00083B  08                 	db	8
 24291   00083C  00                 	db	0
 24292   00083D  00                 	db	0
 24293   00083E  0C                 	db	12
 24294   00083F  03                 	db	3
 24295   000840                     __end_of_paramBlock:
 24296                           	callstack 0
 24297   000848                     _name_absaddr   set	2120
 24298                           
 24299                           	psect	_name_text
 24300   000848                     __p_name_text:
 24301                           	callstack 0
 24302   000848                     _name:
 24303                           	callstack 0
 24304   000848  50                 	db	80
 24305   000849  41                 	db	65
 24306   00084A  4E                 	db	78
 24307   00084B  20                 	db	32
 24308   00084C  20                 	db	32
 24309   00084D  20                 	db	32
 24310   00084E  20                 	db	32
 24311   00084F  00                 	db	0
 24312   000850                     __end_of_name:
 24313                           	callstack 0
 24314   000043                     _NVMADR         set	67
 24315   0000AD                     _OSCCON1bits    set	173
 24316   000042                     _NVMLOCK        set	66
 24317   000046                     _NVMDATL        set	70
 24318   000043                     _NVMADRL        set	67
 24319   000044                     _NVMADRH        set	68
 24320   000045                     _NVMADRU        set	69
 24321   000040                     _NVMCON0bits    set	64
 24322   000041                     _NVMCON1bits    set	65
 24323   000087                     _SPI1STATUSbits set	135
 24324   000081                     _SPI1TXB        set	129
 24325   000084                     _SPI1CON0bits   set	132
 24326   000089                     _SPI1BAUD       set	137
 24327   00008C                     _SPI1CLK        set	140
 24328   000088                     _SPI1TWIDTH     set	136
 24329   000082                     _SPI1TCNTL      set	130
 24330   000083                     _SPI1TCNTH      set	131
 24331   000086                     _SPI1CON2       set	134
 24332   000085                     _SPI1CON1       set	133
 24333   000084                     _SPI1CON0       set	132
 24334   000158                     _C1TXQUA        set	344
 24335   00017C                     _C1FIFOUA3      set	380
 24336   000170                     _C1FIFOUA2      set	368
 24337   000164                     _C1FIFOUA1      set	356
 24338   00014C                     _C1FIFOBA       set	332
 24339   000102                     _C1CONUbits     set	258
 24340   000103                     _C1CONTbits     set	259
 24341   000175                     _C1FIFOCON3Hbits set	373
 24342   000179                     _C1FIFOSTA3Hbits set	377
 24343   00016D                     _C1FIFOSTA2Hbits set	365
 24344   00016C                     _C1FIFOSTA2Lbits set	364
 24345   000138                     _C1BDIAG0Lbits  set	312
 24346   000139                     _C1BDIAG0Hbits  set	313
 24347   000136                     _C1TRECU        set	310
 24348   000160                     _C1FIFOSTA1Lbits set	352
 24349   00015D                     _C1FIFOCON1Hbits set	349
 24350   00011D                     _C1INTHbits     set	285
 24351   000178                     _C1FIFOSTA3Lbits set	376
 24352   00011F                     _C1INTTbits     set	287
 24353   00011E                     _C1INTUbits     set	286
 24354   000180                     _C1FLTCON0L     set	384
 24355   000193                     _C1MASK0T       set	403
 24356   000192                     _C1MASK0U       set	402
 24357   000191                     _C1MASK0H       set	401
 24358   000190                     _C1MASK0L       set	400
 24359   00018F                     _C1FLTOBJ0T     set	399
 24360   00018E                     _C1FLTOBJ0U     set	398
 24361   00018D                     _C1FLTOBJ0H     set	397
 24362   00018C                     _C1FLTOBJ0L     set	396
 24363   000177                     _C1FIFOCON3T    set	375
 24364   000176                     _C1FIFOCON3U    set	374
 24365   000175                     _C1FIFOCON3H    set	373
 24366   000174                     _C1FIFOCON3L    set	372
 24367   00016B                     _C1FIFOCON2T    set	363
 24368   00016A                     _C1FIFOCON2U    set	362
 24369   000169                     _C1FIFOCON2H    set	361
 24370   000168                     _C1FIFOCON2L    set	360
 24371   00015F                     _C1FIFOCON1T    set	351
 24372   00015E                     _C1FIFOCON1U    set	350
 24373   00015D                     _C1FIFOCON1H    set	349
 24374   00015C                     _C1FIFOCON1L    set	348
 24375   000153                     _C1TXQCONT      set	339
 24376   000152                     _C1TXQCONU      set	338
 24377   000151                     _C1TXQCONH      set	337
 24378   000150                     _C1TXQCONL      set	336
 24379   000107                     _C1NBTCFGT      set	263
 24380   000106                     _C1NBTCFGU      set	262
 24381   000105                     _C1NBTCFGH      set	261
 24382   000104                     _C1NBTCFGL      set	260
 24383   000103                     _C1CONT         set	259
 24384   000102                     _C1CONU         set	258
 24385   000101                     _C1CONH         set	257
 24386   000100                     _C1CONL         set	256
 24387   000101                     _C1CONHbits     set	257
 24388   00023D                     _CANRXPPS       set	573
 24389   00020B                     _RB2PPS         set	523
 24390   000215                     _RC4PPS         set	533
 24391   000214                     _RC3PPS         set	532
 24392   000216                     _RC5PPS         set	534
 24393   000318                     _TMR0L          set	792
 24394   000319                     _TMR0H          set	793
 24395   00031A                     _T0CON0bits     set	794
 24396   00031B                     _T0CON1bits     set	795
 24397   000362                     _IPR0bits       set	866
 24398   000367                     _IPR5           set	871
 24399   001B2F                     _TMR0IP         set	6959
 24400   00250F                     _TMR0IE         set	9487
 24401   00258F                     _TMR0IF         set	9615
 24402   000459                     _IVTLOCKbits    set	1113
 24403   000459                     _IVTLOCK        set	1113
 24404   00045D                     _IVTBASEL       set	1117
 24405   00045E                     _IVTBASEH       set	1118
 24406   00045F                     _IVTBASEU       set	1119
 24407   0004F5                     _TABLAT         set	1269
 24408   0004F6                     _TBLPTRL        set	1270
 24409   0004F7                     _TBLPTRH        set	1271
 24410   0004F8                     _TBLPTRU        set	1272
 24411   0004CE                     _PORTAbits      set	1230
 24412   00049E                     _PIE0bits       set	1182
 24413   0004AE                     _PIR0bits       set	1198
 24414   0004C0                     _LATCbits       set	1216
 24415   0004BF                     _LATBbits       set	1215
 24416   0004BE                     _LATAbits       set	1214
 24417   0004CF                     _PORTB          set	1231
 24418   0004D0                     _PORTC          set	1232
 24419   0004C8                     _TRISCbits      set	1224
 24420   0004C7                     _TRISBbits      set	1223
 24421   0004C6                     _TRISAbits      set	1222
 24422   0004D6                     _INTCON0bits    set	1238
 24423   000410                     _ANSELC         set	1040
 24424   000408                     _ANSELB         set	1032
 24425   000400                     _ANSELA         set	1024
 24426   000411                     _WPUC           set	1041
 24427   000409                     _WPUB           set	1033
 24428   000401                     _WPUA           set	1025
 24429                           
 24430                           ; #config settings
 24431                           
 24432                           	psect	cinit
 24433   015364                     __pcinit:
 24434                           	callstack 0
 24435   015364                     start_initialization:
 24436                           	callstack 0
 24437   015364                     __initialization:
 24438                           	callstack 0
 24439                           
 24440                           ; Initialize objects allocated to BANK5 (2 bytes)
 24441                           ; load TBLPTR registers with __pidataBANK5
 24442   015364  0E54               	movlw	low __pidataBANK5
 24443   015366  6EF6               	movwf	tblptrl,c
 24444   015368  0E66               	movlw	high __pidataBANK5
 24445   01536A  6EF7               	movwf	tblptrh,c
 24446   01536C  0E01               	movlw	low (__pidataBANK5 shr (0+16))
 24447   01536E  6EF8               	movwf	tblptru,c
 24448   015370  0009               	tblrd		*+	;fetch initializer
 24449   015372  C4F5 F5FB          	movff	tablat,__pdataBANK5
 24450   015376  0009               	tblrd		*+	;fetch initializer
 24451   015378  C4F5 F5FC          	movff	tablat,__pdataBANK5+1
 24452                           
 24453                           ; Clear objects allocated to BIGRAM (640 bytes)
 24454   01537C  EE01  F38C         	lfsr	0,__pbssBIGRAM
 24455   015380  EE10 F280          	lfsr	1,640
 24456   015384                     clear_0:
 24457   015384  6AEE               	clrf	postinc0,c
 24458   015386  50E5               	movf	postdec1,w,c
 24459   015388  50E1               	movf	fsr1l,w,c
 24460   01538A  E1FC               	bnz	clear_0
 24461   01538C  50E2               	movf	fsr1h,w,c
 24462   01538E  E1FA               	bnz	clear_0
 24463                           
 24464                           ; Clear objects allocated to BANK7 (140 bytes)
 24465   015390  EE01  F300         	lfsr	0,__pbssBANK7
 24466   015394  0E8C               	movlw	140
 24467   015396                     clear_1:
 24468   015396  6AEE               	clrf	postinc0,c
 24469   015398  06E8               	decf	wreg,f,c
 24470   01539A  E1FD               	bnz	clear_1
 24471                           
 24472                           ; Clear objects allocated to BANK6 (209 bytes)
 24473   01539C  EE01  F200         	lfsr	0,__pbssBANK6
 24474   0153A0  0ED1               	movlw	209
 24475   0153A2                     clear_2:
 24476   0153A2  6AEE               	clrf	postinc0,c
 24477   0153A4  06E8               	decf	wreg,f,c
 24478   0153A6  E1FD               	bnz	clear_2
 24479                           
 24480                           ; Clear objects allocated to BANK5 (105 bytes)
 24481   0153A8  EE01  F160         	lfsr	0,__pbssBANK5
 24482   0153AC  0E69               	movlw	105
 24483   0153AE                     clear_3:
 24484   0153AE  6AEE               	clrf	postinc0,c
 24485   0153B0  06E8               	decf	wreg,f,c
 24486   0153B2  E1FD               	bnz	clear_3
 24487                           
 24488                           ; Clear objects allocated to COMRAM (2 bytes)
 24489   0153B4  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
 24490   0153B6  6A5E               	clrf	__pbssCOMRAM& (0+255),c
 24491                           
 24492                           ;
 24493                           ; Setup IVTBASE
 24494                           ;
 24495   00045D                     IVTBASEL        equ	1117
 24496   00045E                     IVTBASEH        equ	1118
 24497   00045F                     IVTBASEU        equ	1119
 24498   0153B8  0104               	movlb	4
 24499   0153BA  0E00               	movlw	(ivt0x900_base shr 0)& (0+255)
 24500   0153BC  6F5D               	movwf	93,b
 24501   0153BE  0E09               	movlw	(ivt0x900_base shr (0+8))& (0+255)
 24502   0153C0  6F5E               	movwf	94,b
 24503   0153C2  0E00               	movlw	(ivt0x900_base shr (0+16))& (0+255)
 24504   0153C4  6F5F               	movwf	95,b
 24505   0153C6                     end_of_initialization:
 24506                           	callstack 0
 24507   0153C6                     __end_of__initialization:
 24508                           	callstack 0
 24509   0153C6  0100               	movlb	0
 24510   0153C8  EF1C  F0A6         	goto	_main	;jump to C main() function
 24511                           
 24512                           	psect	bssCOMRAM
 24513   00055E                     __pbssCOMRAM:
 24514                           	callstack 0
 24515   00055E                     _nn:
 24516                           	callstack 0
 24517   00055E                     	ds	2
 24518                           
 24519                           	psect	bssBANK5
 24520   000560                     __pbssBANK5:
 24521                           	callstack 0
 24522   000560                     _pbTimer:
 24523                           	callstack 0
 24524   000560                     	ds	4
 24525   000564                     _enumerationStartTime:
 24526                           	callstack 0
 24527   000564                     	ds	4
 24528   000568                     _ledMatrix:
 24529                           	callstack 0
 24530   000568                     	ds	4
 24531   00056C                     _lastInputScanTime:
 24532                           	callstack 0
 24533   00056C                     	ds	4
 24534   000570                     _startTime:
 24535                           	callstack 0
 24536   000570                     	ds	4
 24537   000574                     _timedResponseCallback:
 24538                           	callstack 0
 24539   000574                     	ds	3
 24540   000577                     _flashBlock:
 24541                           	callstack 0
 24542   000577                     	ds	3
 24543   00057A                     _flashCounter:
 24544                           	callstack 0
 24545   00057A                     	ds	2
 24546   00057C                     _ledState:
 24547                           	callstack 0
 24548   00057C                     	ds	2
 24549   00057E                     _previousNN:
 24550                           	callstack 0
 24551   00057E                     	ds	2
 24552   000580                     _transport:
 24553                           	callstack 0
 24554   000580                     	ds	2
 24555   000582                     _timedResponseDelay:
 24556                           	callstack 0
 24557   000582                     	ds	1
 24558   000583                     _eeBootFlag:
 24559                           	callstack 0
 24560   000583                     	ds	1
 24561   000584                     _timedResponseStep:
 24562                           	callstack 0
 24563   000584                     	ds	1
 24564   000585                     _timedResponseType:
 24565                           	callstack 0
 24566   000585                     	ds	1
 24567   000586                     _timedResponseAllServicesFlag:
 24568                           	callstack 0
 24569   000586                     	ds	1
 24570   000587                     _timedResponseServiceIndex:
 24571                           	callstack 0
 24572   000587                     	ds	1
 24573   000588                     _timerExtension2:
 24574                           	callstack 0
 24575   000588                     	ds	1
 24576   000589                     _timerExtension1:
 24577                           	callstack 0
 24578   000589                     	ds	1
 24579   00058A                     _flashFlags:
 24580                           	callstack 0
 24581   00058A                     	ds	1
 24582   00058B                     _heartbeatSequence:
 24583                           	callstack 0
 24584   00058B                     	ds	1
 24585   00058C                     _pbWasPushed:
 24586                           	callstack 0
 24587   00058C                     	ds	1
 24588   00058D                     _setupModePreviousMode:
 24589                           	callstack 0
 24590   00058D                     	ds	1
 24591   00058E                     _last_mode_flags:
 24592                           	callstack 0
 24593   00058E                     	ds	1
 24594   00058F                     _last_mode_state:
 24595                           	callstack 0
 24596   00058F                     	ds	1
 24597   000590                     _mode_state:
 24598                           	callstack 0
 24599   000590                     	ds	1
 24600   000591                     _timedResponseOpcode:
 24601                           	callstack 0
 24602   000591                     	ds	1
 24603   000592                     _enumerationState:
 24604                           	callstack 0
 24605   000592                     	ds	1
 24606   000593                     _EnumerationState:
 24607                           	callstack 0
 24608   000593                     	ds	1
 24609   000594                     _canTransmitFailed:
 24610                           	callstack 0
 24611   000594                     	ds	1
 24612   000595                     _canId:
 24613                           	callstack 0
 24614   000595                     	ds	1
 24615   000596                     _bootloaderVersion:
 24616                           	callstack 0
 24617   000596                     	ds	1
 24618   000597                     _bootloaderType:
 24619                           	callstack 0
 24620   000597                     	ds	1
 24621   000598                     _startupNv:
 24622                           	callstack 0
 24623   000598                     	ds	1
 24624   000599                     _flashToggle:
 24625                           	callstack 0
 24626   000599                     	ds	1
 24627   00059A                     _brightness:
 24628                           	callstack 0
 24629   00059A                     	ds	1
 24630   00059B                     _cathodes:
 24631                           	callstack 0
 24632   00059B                     	ds	1
 24633   00059C                     _current_row:
 24634                           	callstack 0
 24635   00059C                     	ds	1
 24636   00059D                     _column:
 24637                           	callstack 0
 24638   00059D                     	ds	1
 24639   00059E                     _errno:
 24640                           	callstack 0
 24641   00059E                     	ds	1
 24642   00059F                     _mode_flags:
 24643                           	callstack 0
 24644   00059F                     	ds	1
 24645   0005A0                     _started:
 24646                           	callstack 0
 24647   0005A0                     	ds	1
 24648   0005A1                     _canpanScanReady:
 24649                           	callstack 0
 24650   0005A1                     	ds	1
 24651   0005A2                     _mnsDiagnostics:
 24652                           	callstack 0
 24653   0005A2                     	ds	14
 24654   0005B0                     _nvDiagnostics:
 24655                           	callstack 0
 24656   0005B0                     	ds	6
 24657   0005B6                     _consumerDiagnostics:
 24658                           	callstack 0
 24659   0005B6                     	ds	6
 24660   0005BC                     _rxQueue:
 24661                           	callstack 0
 24662   0005BC                     	ds	5
 24663   0005C1                     _producerDiagnostics:
 24664                           	callstack 0
 24665   0005C1                     	ds	4
 24666   0005C5                     _teachDiagnostics:
 24667                           	callstack 0
 24668   0005C5                     	ds	4
 24669                           
 24670                           	psect	dataBANK5
 24671   0005FB                     __pdataBANK5:
 24672                           	callstack 0
 24673   0005FB                     _flashBuffer:
 24674                           	callstack 0
 24675   0005FB                     	ds	2
 24676                           
 24677                           	psect	bssBANK6
 24678   000600                     __pbssBANK6:
 24679                           	callstack 0
 24680   000600                     _switch2Event:
 24681                           	callstack 0
 24682   000600                     	ds	33
 24683   000621                     _ledStates:
 24684                           	callstack 0
 24685   000621                     	ds	32
 24686   000641                     _outputState:
 24687                           	callstack 0
 24688   000641                     	ds	32
 24689   000661                     _enumerationResults:
 24690                           	callstack 0
 24691   000661                     	ds	16
 24692   000671                     _evs:
 24693                           	callstack 0
 24694   000671                     	ds	13
 24695   00067E                     _buttonState:
 24696                           	callstack 0
 24697   00067E                     	ds	8
 24698   000686                     _flashFlushTime:
 24699                           	callstack 0
 24700   000686                     	ds	4
 24701   00068A                     _timedResponseTime:
 24702                           	callstack 0
 24703   00068A                     	ds	4
 24704   00068E                     _ledTimer:
 24705                           	callstack 0
 24706   00068E                     	ds	4
 24707   000692                     _uptimeTimer:
 24708                           	callstack 0
 24709   000692                     	ds	4
 24710   000696                     _heartbeatTimer:
 24711                           	callstack 0
 24712   000696                     	ds	4
 24713   00069A                     _outputPollTime:
 24714                           	callstack 0
 24715   00069A                     	ds	4
 24716   00069E                     _flashTime:
 24717                           	callstack 0
 24718   00069E                     	ds	4
 24719   0006A2                     _canDiagnostics:
 24720                           	callstack 0
 24721   0006A2                     	ds	38
 24722   0006C8                     _tmpMessage:
 24723                           	callstack 0
 24724   0006C8                     	ds	9
 24725                           
 24726                           	psect	bssBANK7
 24727   000700                     __pbssBANK7:
 24728                           	callstack 0
 24729   000700                     _nvCache:
 24730                           	callstack 0
 24731   000700                     	ds	68
 24732   000744                     _rxBuffers:
 24733                           	callstack 0
 24734   000744                     	ds	72
 24735                           
 24736                           	psect	bssBIGRAM
 24737   00078C                     __pbssBIGRAM:
 24738                           	callstack 0
 24739   00078C                     _eventChains:
 24740                           	callstack 0
 24741   00078C                     	ds	640
 24742                           
 24743                           	psect	cstackBANK5
 24744   0005C9                     __pcstackBANK5:
 24745                           	callstack 0
 24746   0005C9                     ??_mnsProcessMessage:
 24747                           
 24748                           ; 1 bytes @ 0x0
 24749   0005C9                     	ds	24
 24750   0005E1                     ??_APP_preProcessMessage:
 24751                           
 24752                           ; 1 bytes @ 0x18
 24753   0005E1                     	ds	3
 24754   0005E4                     APP_preProcessMessage@ev:
 24755                           	callstack 0
 24756                           
 24757                           ; 1 bytes @ 0x1B
 24758   0005E4                     	ds	1
 24759   0005E5                     APP_preProcessMessage@enn:
 24760                           	callstack 0
 24761                           
 24762                           ; 2 bytes @ 0x1C
 24763   0005E5                     	ds	2
 24764   0005E7                     APP_preProcessMessage@switchNo:
 24765                           	callstack 0
 24766                           
 24767                           ; 1 bytes @ 0x1E
 24768   0005E7                     	ds	1
 24769   0005E8                     APP_preProcessMessage@tableIndex:
 24770                           	callstack 0
 24771                           
 24772                           ; 1 bytes @ 0x1F
 24773   0005E8                     	ds	1
 24774   0005E9                     ??_poll:
 24775                           
 24776                           ; 1 bytes @ 0x20
 24777   0005E9                     	ds	4
 24778   0005ED                     poll@handled:
 24779                           	callstack 0
 24780                           
 24781                           ; 1 bytes @ 0x24
 24782   0005ED                     	ds	1
 24783   0005EE                     poll@i:
 24784                           	callstack 0
 24785                           
 24786                           ; 1 bytes @ 0x25
 24787   0005EE                     	ds	1
 24788   0005EF                     poll@m:
 24789                           	callstack 0
 24790                           
 24791                           ; 9 bytes @ 0x26
 24792   0005EF                     	ds	9
 24793   0005F8                     main@i:
 24794                           	callstack 0
 24795                           
 24796                           ; 1 bytes @ 0x2F
 24797   0005F8                     	ds	1
 24798   0005F9                     main@t1:
 24799                           	callstack 0
 24800                           
 24801                           ; 1 bytes @ 0x30
 24802   0005F9                     	ds	1
 24803   0005FA                     main@t2:
 24804                           	callstack 0
 24805                           
 24806                           ; 1 bytes @ 0x31
 24807   0005FA                     	ds	1
 24808                           
 24809                           	psect	cstackCOMRAM
 24810   000501                     __pcstackCOMRAM:
 24811                           	callstack 0
 24812   000501                     ?_getNV:
 24813                           	callstack 0
 24814   000501                     ?_getNextWriteMessage:
 24815                           	callstack 0
 24816   000501                     ?_pop:
 24817                           	callstack 0
 24818   000501                     ?___awdiv:
 24819                           	callstack 0
 24820   000501                     ?_tickGet:
 24821                           	callstack 0
 24822   000501                     findEventForSwitch@switchNo:
 24823                           	callstack 0
 24824   000501                     APP_nvDefault@index:
 24825                           	callstack 0
 24826   000501                     APP_nvValidate@value:
 24827                           	callstack 0
 24828   000501                     APP_nvValueChanged@value:
 24829                           	callstack 0
 24830   000501                     initOutputs@i:
 24831                           	callstack 0
 24832   000501                     bootEsdData@id:
 24833                           	callstack 0
 24834   000501                     canEsdData@id:
 24835                           	callstack 0
 24836   000501                     CAN1_OperationModeSet@status:
 24837                           	callstack 0
 24838   000501                     consumerPowerUp@temp:
 24839                           	callstack 0
 24840   000501                     consumerEsdData@index:
 24841                           	callstack 0
 24842   000501                     teachGetESDdata@id:
 24843                           	callstack 0
 24844   000501                     evtIdxToTableIndex@evtIdx:
 24845                           	callstack 0
 24846   000501                     tableIndexToEvtIdx@tableIndex:
 24847                           	callstack 0
 24848   000501                     nvGetESDdata@id:
 24849                           	callstack 0
 24850   000501                     _isEvent$6167:
 24851                           	callstack 0
 24852   000501                     producerPowerUp@i:
 24853                           	callstack 0
 24854   000501                     producerEsdData@index:
 24855                           	callstack 0
 24856   000501                     APP_postProcessMessage@m:
 24857                           	callstack 0
 24858   000501                     prepareSelfEnumResponse@txFifoObj:
 24859                           	callstack 0
 24860   000501                     sendRTR@txFifoObj:
 24861                           	callstack 0
 24862   000501                     getNextWriteMessage@q:
 24863                           	callstack 0
 24864   000501                     pop@q:
 24865                           	callstack 0
 24866   000501                     ___awdiv@dividend:
 24867                           	callstack 0
 24868   000501                     memcpy@d1:
 24869                           	callstack 0
 24870   000501                     EEPROM_Read@index:
 24871                           	callstack 0
 24872   000501                     EEPROM_WriteNoVerify@index:
 24873                           	callstack 0
 24874   000501                     FLASH_Read@address:
 24875                           	callstack 0
 24876   000501                     ??_driveColumn:
 24877   000501                     ??_findServiceIndex:
 24878   000501                     ??_getNumTxBuffersInUse:
 24879   000501                     ??_getNumRxBuffersInUse:
 24880   000501                     ??_have:
 24881   000501                     ??_showStatus:
 24882   000501                     ??_eraseFlashBlock:
 24883   000501                     ??_loadFlashBlock:
 24884   000501                     ??_initTicker:
 24885   000501                     
 24886                           ; 1 bytes @ 0x0
 24887   000501                     	ds	1
 24888   000502                     APP_nvValidate@index:
 24889                           	callstack 0
 24890   000502                     APP_nvValueChanged@oldValue:
 24891                           	callstack 0
 24892   000502                     CAN1_OperationModeSet@requestMode:
 24893                           	callstack 0
 24894   000502                     initTicker@priority:
 24895                           	callstack 0
 24896   000502                     isEvent@opc:
 24897                           	callstack 0
 24898   000502                     
 24899                           ; 1 bytes @ 0x1
 24900   000502                     	ds	1
 24901   000503                     showStatus@s:
 24902                           	callstack 0
 24903   000503                     initTicker@divider:
 24904                           	callstack 0
 24905   000503                     findServiceIndex@serviceType:
 24906                           	callstack 0
 24907   000503                     have@id:
 24908                           	callstack 0
 24909   000503                     ___awdiv@divisor:
 24910                           	callstack 0
 24911   000503                     memcpy@s1:
 24912                           	callstack 0
 24913   000503                     ??_getNV:
 24914   000503                     
 24915                           ; 1 bytes @ 0x2
 24916   000503                     	ds	1
 24917   000504                     getNV@index:
 24918                           	callstack 0
 24919   000504                     EEPROM_WriteNoVerify@value:
 24920                           	callstack 0
 24921   000504                     eraseFlashBlock@interruptEnabled:
 24922                           	callstack 0
 24923   000504                     initTicker@i:
 24924                           	callstack 0
 24925   000504                     findServiceIndex@i:
 24926                           	callstack 0
 24927   000504                     have@i:
 24928                           	callstack 0
 24929   000504                     ??_getNextWriteMessage:
 24930   000504                     ??_pop:
 24931   000504                     ??_EEPROM_Read:
 24932   000504                     ??_FLASH_Read:
 24933                           
 24934                           ; 1 bytes @ 0x3
 24935   000504                     	ds	1
 24936   000505                     ?___lmul:
 24937                           	callstack 0
 24938   000505                     getParameterFlags@flags:
 24939                           	callstack 0
 24940   000505                     flushFlashBlock@interruptEnabled:
 24941                           	callstack 0
 24942   000505                     tickGet@IntFlag2:
 24943                           	callstack 0
 24944   000505                     startTimedResponse@serviceIndex:
 24945                           	callstack 0
 24946   000505                     ___awdiv@counter:
 24947                           	callstack 0
 24948   000505                     getNumTxBuffersInUse@i16:
 24949                           	callstack 0
 24950   000505                     getNumRxBuffersInUse@i16:
 24951                           	callstack 0
 24952   000505                     memcpy@n:
 24953                           	callstack 0
 24954   000505                     ___lmul@multiplier:
 24955                           	callstack 0
 24956   000505                     ??_pollOutputs:
 24957   000505                     ??_EEPROM_WriteNoVerify:
 24958   000505                     
 24959                           ; 1 bytes @ 0x4
 24960   000505                     	ds	1
 24961   000506                     getParameter@idx:
 24962                           	callstack 0
 24963   000506                     tickGet@IntFlag1:
 24964                           	callstack 0
 24965   000506                     ___awdiv@sign:
 24966                           	callstack 0
 24967   000506                     FLASH_Write@index:
 24968                           	callstack 0
 24969   000506                     startTimedResponse@callback:
 24970                           	callstack 0
 24971   000506                     
 24972                           ; 1 bytes @ 0x5
 24973   000506                     	ds	1
 24974   000507                     ?_readNVM:
 24975                           	callstack 0
 24976   000507                     ?_canGetDiagnostic:
 24977                           	callstack 0
 24978   000507                     ?_consumerGetDiagnostic:
 24979                           	callstack 0
 24980   000507                     ?_teachGetDiagnostic:
 24981                           	callstack 0
 24982   000507                     ?_mnsGetDiagnostic:
 24983                           	callstack 0
 24984   000507                     ?_nvGetDiagnostic:
 24985                           	callstack 0
 24986   000507                     ?_producerGetDiagnostic:
 24987                           	callstack 0
 24988   000507                     ___awdiv@quotient:
 24989                           	callstack 0
 24990   000507                     memcpy@d:
 24991                           	callstack 0
 24992   000507                     readNVM@index:
 24993                           	callstack 0
 24994   000507                     tickGet@currentTime:
 24995                           	callstack 0
 24996   000507                     
 24997                           ; 1 bytes @ 0x6
 24998   000507                     	ds	1
 24999   000508                     pollOutputs@offset:
 25000                           	callstack 0
 25001   000508                     EEPROM_WriteNoVerify@interruptEnabled:
 25002                           	callstack 0
 25003                           
 25004                           ; 1 bytes @ 0x7
 25005   000508                     	ds	1
 25006   000509                     pollOutputs@i:
 25007                           	callstack 0
 25008   000509                     FLASH_Write@value:
 25009                           	callstack 0
 25010   000509                     startTimedResponse@type:
 25011                           	callstack 0
 25012   000509                     pop@ret:
 25013                           	callstack 0
 25014   000509                     memcpy@s:
 25015                           	callstack 0
 25016   000509                     EEPROM_Write@index:
 25017                           	callstack 0
 25018   000509                     ___lmul@multiplicand:
 25019                           	callstack 0
 25020   000509                     ??_setLed:
 25021   000509                     ??_clearLed:
 25022                           
 25023                           ; 1 bytes @ 0x8
 25024   000509                     	ds	1
 25025   00050A                     consumerGetDiagnostic@index:
 25026                           	callstack 0
 25027   00050A                     teachGetDiagnostic@index:
 25028                           	callstack 0
 25029   00050A                     mnsGetDiagnostic@index:
 25030                           	callstack 0
 25031   00050A                     nvGetDiagnostic@index:
 25032                           	callstack 0
 25033   00050A                     producerGetDiagnostic@index:
 25034                           	callstack 0
 25035   00050A                     ??_readNVM:
 25036   00050A                     ??_canGetDiagnostic:
 25037   00050A                     ??_FLASH_Write:
 25038                           
 25039                           ; 1 bytes @ 0x9
 25040   00050A                     	ds	1
 25041   00050B                     ?___lldiv:
 25042                           	callstack 0
 25043   00050B                     setLed@no:
 25044                           	callstack 0
 25045   00050B                     canGetDiagnostic@index:
 25046                           	callstack 0
 25047   00050B                     startEnumeration@txWaiting:
 25048                           	callstack 0
 25049   00050B                     memcpy@tmp:
 25050                           	callstack 0
 25051   00050B                     ___lldiv@dividend:
 25052                           	callstack 0
 25053   00050B                     ??_handleSelfEnumeration:
 25054   00050B                     ??_leds_poll:
 25055                           
 25056                           ; 1 bytes @ 0xA
 25057   00050B                     	ds	1
 25058   00050C                     clearLed@no:
 25059                           	callstack 0
 25060   00050C                     startEnumeration@i:
 25061                           	callstack 0
 25062   00050C                     EEPROM_Write@value:
 25063                           	callstack 0
 25064   00050C                     readNVM@type:
 25065                           	callstack 0
 25066                           
 25067                           ; 1 bytes @ 0xB
 25068   00050C                     	ds	1
 25069   00050D                     ?_getEv:
 25070                           	callstack 0
 25071   00050D                     ?_getNN:
 25072                           	callstack 0
 25073   00050D                     ?_getEN:
 25074                           	callstack 0
 25075   00050D                     initInputs@startNv:
 25076                           	callstack 0
 25077   00050D                     setLedStateNoSave@state:
 25078                           	callstack 0
 25079   00050D                     bootPowerUp@b:
 25080                           	callstack 0
 25081   00050D                     getEv@evNum:
 25082                           	callstack 0
 25083   00050D                     getNextWriteMessage@wr:
 25084                           	callstack 0
 25085   00050D                     mnsPowerUp@i:
 25086                           	callstack 0
 25087   00050D                     canPowerUp@temp:
 25088                           	callstack 0
 25089   00050D                     ___lmul@product:
 25090                           	callstack 0
 25091   00050D                     ??_doFlash:
 25092   00050D                     ??_getEVs:
 25093   00050D                     ??_loadNvCache:
 25094   00050D                     
 25095                           ; 1 bytes @ 0xC
 25096   00050D                     	ds	1
 25097   00050E                     initInputs@i:
 25098                           	callstack 0
 25099   00050E                     bootPowerUp@found:
 25100                           	callstack 0
 25101   00050E                     canSendMessage@mp:
 25102                           	callstack 0
 25103   00050E                     mnsPowerUp@temp:
 25104                           	callstack 0
 25105   00050E                     writeNVM@index:
 25106                           	callstack 0
 25107   00050E                     ??_setLedStateNoSave:
 25108                           
 25109                           ; 1 bytes @ 0xD
 25110   00050E                     	ds	1
 25111   00050F                     doFlash@ledNo:
 25112                           	callstack 0
 25113   00050F                     bootPowerUp@i:
 25114                           	callstack 0
 25115   00050F                     handleSelfEnumeration@receivedCanId:
 25116                           	callstack 0
 25117   00050F                     loadNvCache@temp:
 25118                           	callstack 0
 25119   00050F                     ___lldiv@divisor:
 25120                           	callstack 0
 25121   00050F                     ??_getEv:
 25122   00050F                     ??_getNN:
 25123   00050F                     ??_getEN:
 25124                           
 25125                           ; 1 bytes @ 0xE
 25126   00050F                     	ds	1
 25127   000510                     setLedStateNoSave@ledNo:
 25128                           	callstack 0
 25129   000510                     canReceiveMessage@m:
 25130                           	callstack 0
 25131   000510                     bootPowerUp@a:
 25132                           	callstack 0
 25133   000510                     ??_canSendMessage:
 25134                           
 25135                           ; 1 bytes @ 0xF
 25136   000510                     	ds	1
 25137   000511                     setLedState@state:
 25138                           	callstack 0
 25139   000511                     loadNvCache@i:
 25140                           	callstack 0
 25141   000511                     writeNVM@value:
 25142                           	callstack 0
 25143   000511                     ??_initLeds:
 25144                           
 25145                           ; 1 bytes @ 0x10
 25146   000511                     	ds	1
 25147   000512                     nvPowerUp@i:
 25148                           	callstack 0
 25149   000512                     getNN@hi:
 25150                           	callstack 0
 25151   000512                     getEN@hi:
 25152                           	callstack 0
 25153   000512                     ??_writeNVM:
 25154   000512                     ??_setLedState:
 25155   000512                     ??_canReceiveMessage:
 25156   000512                     
 25157                           ; 1 bytes @ 0x11
 25158   000512                     	ds	1
 25159   000513                     initLeds@state:
 25160                           	callstack 0
 25161   000513                     canReceiveMessage@incomingCanId:
 25162                           	callstack 0
 25163   000513                     ___lldiv@quotient:
 25164                           	callstack 0
 25165   000513                     
 25166                           ; 1 bytes @ 0x12
 25167   000513                     	ds	1
 25168   000514                     initLeds@ledNo:
 25169                           	callstack 0
 25170   000514                     setLedState@ledNo:
 25171                           	callstack 0
 25172   000514                     writeNVM@type:
 25173                           	callstack 0
 25174   000514                     canReceiveMessage@mp:
 25175                           	callstack 0
 25176   000514                     getNN@lo:
 25177                           	callstack 0
 25178   000514                     getEN@lo:
 25179                           	callstack 0
 25180                           
 25181                           ; 2 bytes @ 0x13
 25182   000514                     	ds	1
 25183   000515                     setNewCanId@newCanId:
 25184                           	callstack 0
 25185   000515                     writeEv@evNum:
 25186                           	callstack 0
 25187   000515                     setNV@value:
 25188                           	callstack 0
 25189   000515                     ??_nvFactoryReset:
 25190                           
 25191                           ; 1 bytes @ 0x14
 25192   000515                     	ds	1
 25193   000516                     writeEv@evVal:
 25194                           	callstack 0
 25195   000516                     getEVs@tableIndex:
 25196                           	callstack 0
 25197   000516                     getNN@flags:
 25198                           	callstack 0
 25199   000516                     getEN@tableIndex:
 25200                           	callstack 0
 25201   000516                     canSendMessage@temp:
 25202                           	callstack 0
 25203   000516                     canReceiveMessage@temp:
 25204                           	callstack 0
 25205   000516                     ??_processEnumeration:
 25206   000516                     ??_setNV:
 25207                           
 25208                           ; 1 bytes @ 0x15
 25209   000516                     	ds	1
 25210   000517                     getEVs@evIdx:
 25211                           	callstack 0
 25212   000517                     getNN@tableIndex:
 25213                           	callstack 0
 25214   000517                     nvFactoryReset@i:
 25215                           	callstack 0
 25216   000517                     ___lldiv@counter:
 25217                           	callstack 0
 25218   000517                     ??_writeEv:
 25219                           
 25220                           ; 1 bytes @ 0x16
 25221   000517                     	ds	1
 25222   000518                     getEv@tableIndex:
 25223                           	callstack 0
 25224   000518                     setNV@oldValue:
 25225                           	callstack 0
 25226   000518                     APP_processConsumedEvent@m:
 25227                           	callstack 0
 25228   000518                     canSendMessage@m:
 25229                           	callstack 0
 25230   000518                     canReceiveMessage@rxFifoObj:
 25231                           	callstack 0
 25232   000518                     getHash@nn:
 25233                           	callstack 0
 25234   000518                     ??_pbDownTimer:
 25235   000518                     ??_pbUpTimer:
 25236                           
 25237                           ; 1 bytes @ 0x17
 25238   000518                     	ds	1
 25239   000519                     APP_isConsumedEvent@tableIndex:
 25240                           	callstack 0
 25241   000519                     APP_isProducedEvent@tableIndex:
 25242                           	callstack 0
 25243   000519                     setNV@index:
 25244                           	callstack 0
 25245   000519                     rebuildLookupTable@swNo:
 25246                           	callstack 0
 25247   000519                     
 25248                           ; 1 bytes @ 0x18
 25249   000519                     	ds	1
 25250   00051A                     processEnumeration@enumResult:
 25251                           	callstack 0
 25252   00051A                     APP_isConsumedEvent@ev:
 25253                           	callstack 0
 25254   00051A                     APP_isProducedEvent@ev:
 25255                           	callstack 0
 25256   00051A                     canSendMessage@txFifoObj:
 25257                           	callstack 0
 25258   00051A                     getHash@en:
 25259                           	callstack 0
 25260   00051A                     ??_APP_processConsumedEvent:
 25261                           
 25262                           ; 1 bytes @ 0x19
 25263   00051A                     	ds	1
 25264   00051B                     rebuildLookupTable@sw:
 25265                           	callstack 0
 25266   00051B                     processEnumeration@newCanId:
 25267                           	callstack 0
 25268                           
 25269                           ; 1 bytes @ 0x1A
 25270   00051B                     	ds	1
 25271   00051C                     rebuildLookupTable@i:
 25272                           	callstack 0
 25273   00051C                     APP_GetEventIndexState@tableIndex:
 25274                           	callstack 0
 25275   00051C                     processEnumeration@i:
 25276                           	callstack 0
 25277   00051C                     isConsumedEvent@eventIndex:
 25278                           	callstack 0
 25279   00051C                     pbDownTimer@timeout:
 25280                           	callstack 0
 25281   00051C                     pbUpTimer@timeout:
 25282                           	callstack 0
 25283   00051C                     sendMessage@len:
 25284                           	callstack 0
 25285   00051C                     ??_getHash:
 25286   00051C                     
 25287                           ; 1 bytes @ 0x1B
 25288   00051C                     	ds	1
 25289   00051D                     APP_processConsumedEvent@tableIndex:
 25290                           	callstack 0
 25291   00051D                     APP_GetEventIndexState@switchNo:
 25292                           	callstack 0
 25293   00051D                     getHash@hash:
 25294                           	callstack 0
 25295   00051D                     sendMessage@data1:
 25296                           	callstack 0
 25297   00051D                     
 25298                           ; 1 bytes @ 0x1C
 25299   00051D                     	ds	1
 25300   00051E                     APP_processConsumedEvent@ledMode:
 25301                           	callstack 0
 25302   00051E                     sendMessage@data2:
 25303                           	callstack 0
 25304   00051E                     findEvent@nodeNumber:
 25305                           	callstack 0
 25306   00051E                     ??_rebuildHashtable:
 25307                           
 25308                           ; 1 bytes @ 0x1D
 25309   00051E                     	ds	1
 25310   00051F                     APP_processConsumedEvent@flags:
 25311                           	callstack 0
 25312   00051F                     sendMessage@data3:
 25313                           	callstack 0
 25314                           
 25315                           ; 1 bytes @ 0x1E
 25316   00051F                     	ds	1
 25317   000520                     APP_processConsumedEvent@polarity:
 25318                           	callstack 0
 25319   000520                     writeEv@tableIndex:
 25320                           	callstack 0
 25321   000520                     sendMessage@data4:
 25322                           	callstack 0
 25323   000520                     findEvent@eventNumber:
 25324                           	callstack 0
 25325                           
 25326                           ; 2 bytes @ 0x1F
 25327   000520                     	ds	1
 25328   000521                     APP_processConsumedEvent@onOff:
 25329                           	callstack 0
 25330   000521                     rebuildHashtable@hash:
 25331                           	callstack 0
 25332   000521                     sendMessage@data5:
 25333                           	callstack 0
 25334                           
 25335                           ; 1 bytes @ 0x20
 25336   000521                     	ds	1
 25337   000522                     APP_processConsumedEvent@ledNo:
 25338                           	callstack 0
 25339   000522                     rebuildHashtable@tableIndex:
 25340                           	callstack 0
 25341   000522                     sendMessage@data6:
 25342                           	callstack 0
 25343   000522                     ??_findEvent:
 25344                           
 25345                           ; 1 bytes @ 0x21
 25346   000522                     	ds	1
 25347   000523                     rebuildHashtable@chainIdx:
 25348                           	callstack 0
 25349   000523                     sendMessage@data7:
 25350                           	callstack 0
 25351                           
 25352                           ; 1 bytes @ 0x22
 25353   000523                     	ds	1
 25354   000524                     teachPowerUp@i:
 25355                           	callstack 0
 25356   000524                     sendMessage@opc:
 25357                           	callstack 0
 25358   000524                     findEvent@nn:
 25359                           	callstack 0
 25360   000524                     ??_removeTableEntry:
 25361   000524                     
 25362                           ; 1 bytes @ 0x23
 25363   000524                     	ds	1
 25364   000525                     sendMessage2@data1:
 25365                           	callstack 0
 25366   000525                     sendMessage3@data1:
 25367                           	callstack 0
 25368   000525                     sendMessage4@data1:
 25369                           	callstack 0
 25370   000525                     sendMessage5@data1:
 25371                           	callstack 0
 25372   000525                     sendMessage6@data1:
 25373                           	callstack 0
 25374   000525                     sendMessage7@data1:
 25375                           	callstack 0
 25376   000525                     ??_powerUp:
 25377                           
 25378                           ; 1 bytes @ 0x24
 25379   000525                     	ds	1
 25380   000526                     sendMessage2@data2:
 25381                           	callstack 0
 25382   000526                     sendMessage3@data2:
 25383                           	callstack 0
 25384   000526                     sendMessage4@data2:
 25385                           	callstack 0
 25386   000526                     sendMessage5@data2:
 25387                           	callstack 0
 25388   000526                     sendMessage6@data2:
 25389                           	callstack 0
 25390   000526                     sendMessage7@data2:
 25391                           	callstack 0
 25392   000526                     findEvent@en:
 25393                           	callstack 0
 25394                           
 25395                           ; 2 bytes @ 0x25
 25396   000526                     	ds	1
 25397   000527                     powerUp@i:
 25398                           	callstack 0
 25399   000527                     sendMessage2@opc:
 25400                           	callstack 0
 25401   000527                     sendMessage3@data3:
 25402                           	callstack 0
 25403   000527                     sendMessage4@data3:
 25404                           	callstack 0
 25405   000527                     sendMessage5@data3:
 25406                           	callstack 0
 25407   000527                     sendMessage6@data3:
 25408                           	callstack 0
 25409   000527                     sendMessage7@data3:
 25410                           	callstack 0
 25411   000527                     
 25412                           ; 1 bytes @ 0x26
 25413   000527                     	ds	1
 25414   000528                     findEvent@hash:
 25415                           	callstack 0
 25416   000528                     sendMessage3@opc:
 25417                           	callstack 0
 25418   000528                     sendMessage4@data4:
 25419                           	callstack 0
 25420   000528                     sendMessage5@data4:
 25421                           	callstack 0
 25422   000528                     sendMessage6@data4:
 25423                           	callstack 0
 25424   000528                     sendMessage7@data4:
 25425                           	callstack 0
 25426   000528                     
 25427                           ; 1 bytes @ 0x27
 25428   000528                     	ds	1
 25429   000529                     findEvent@chainIdx:
 25430                           	callstack 0
 25431   000529                     sendMessage4@opc:
 25432                           	callstack 0
 25433   000529                     sendMessage5@data5:
 25434                           	callstack 0
 25435   000529                     sendMessage6@data5:
 25436                           	callstack 0
 25437   000529                     sendMessage7@data5:
 25438                           	callstack 0
 25439   000529                     doNnevn@eventNumber:
 25440                           	callstack 0
 25441   000529                     doRqevn@eventNumber:
 25442                           	callstack 0
 25443   000529                     
 25444                           ; 1 bytes @ 0x28
 25445   000529                     	ds	1
 25446   00052A                     canpanSendProducedEvent@onOff:
 25447                           	callstack 0
 25448   00052A                     findEvent@tableIndex:
 25449                           	callstack 0
 25450   00052A                     sendMessage5@opc:
 25451                           	callstack 0
 25452   00052A                     sendMessage6@data6:
 25453                           	callstack 0
 25454   00052A                     sendMessage7@data6:
 25455                           	callstack 0
 25456   00052A                     
 25457                           ; 1 bytes @ 0x29
 25458   00052A                     	ds	1
 25459   00052B                     canpanSendProducedEvent@tableIndex:
 25460                           	callstack 0
 25461   00052B                     doNnevn@count:
 25462                           	callstack 0
 25463   00052B                     doRqevn@count:
 25464                           	callstack 0
 25465   00052B                     doReval@evNum:
 25466                           	callstack 0
 25467   00052B                     sendMessage6@opc:
 25468                           	callstack 0
 25469   00052B                     sendMessage7@data7:
 25470                           	callstack 0
 25471   00052B                     doNenrd@nodeNumber:
 25472                           	callstack 0
 25473   00052B                     addEvent@nodeNumber:
 25474                           	callstack 0
 25475   00052B                     checkLen@m:
 25476                           	callstack 0
 25477   00052B                     ??_mnsPoll:
 25478                           
 25479                           ; 1 bytes @ 0x2A
 25480   00052B                     	ds	1
 25481   00052C                     canpanSendProducedEvent@opc:
 25482                           	callstack 0
 25483   00052C                     doNnevn@i:
 25484                           	callstack 0
 25485   00052C                     doRqevn@i:
 25486                           	callstack 0
 25487   00052C                     doReval@evIndex:
 25488                           	callstack 0
 25489   00052C                     removeTableEntry@i:
 25490                           	callstack 0
 25491   00052C                     sendMessage7@opc:
 25492                           	callstack 0
 25493   00052C                     doReqev@nodeNumber:
 25494                           	callstack 0
 25495   00052C                     
 25496                           ; 1 bytes @ 0x2B
 25497   00052C                     	ds	1
 25498   00052D                     doReval@enNum:
 25499                           	callstack 0
 25500   00052D                     removeTableEntry@tableIndex:
 25501                           	callstack 0
 25502   00052D                     checkLen@needed:
 25503                           	callstack 0
 25504   00052D                     canpanSendProducedEvent@producedEventEN:
 25505                           	callstack 0
 25506   00052D                     doNenrd@eventNumber:
 25507                           	callstack 0
 25508   00052D                     addEvent@eventNumber:
 25509                           	callstack 0
 25510                           
 25511                           ; 2 bytes @ 0x2C
 25512   00052D                     	ds	1
 25513   00052E                     clearAllEvents@tableIndex:
 25514                           	callstack 0
 25515   00052E                     doReval@tableIndex:
 25516                           	callstack 0
 25517   00052E                     checkLen@service:
 25518                           	callstack 0
 25519   00052E                     doReqev@eventNumber:
 25520                           	callstack 0
 25521   00052E                     removeEvent@nodeNumber:
 25522                           	callstack 0
 25523   00052E                     
 25524                           ; 1 bytes @ 0x2D
 25525   00052E                     	ds	1
 25526   00052F                     APP_factoryReset@sw:
 25527                           	callstack 0
 25528   00052F                     doNenrd@index:
 25529                           	callstack 0
 25530   00052F                     addEvent@evNum:
 25531                           	callstack 0
 25532   00052F                     canpanSendProducedEvent@producedEventNN:
 25533                           	callstack 0
 25534   00052F                     doReval@evVal:
 25535                           	callstack 0
 25536   00052F                     
 25537                           ; 1 bytes @ 0x2E
 25538   00052F                     	ds	1
 25539   000530                     doNenrd@tableIndex:
 25540                           	callstack 0
 25541   000530                     doReqev@evNum:
 25542                           	callstack 0
 25543   000530                     addEvent@evVal:
 25544                           	callstack 0
 25545   000530                     consumerEventCheckLen@m:
 25546                           	callstack 0
 25547   000530                     teachCheckLen@m:
 25548                           	callstack 0
 25549   000530                     removeEvent@eventNumber:
 25550                           	callstack 0
 25551   000530                     ??_factoryReset:
 25552                           
 25553                           ; 1 bytes @ 0x2F
 25554   000530                     	ds	1
 25555   000531                     addEvent@forceOwnNN:
 25556                           	callstack 0
 25557   000531                     mnsTRallDiagnosticsCallback@serviceIndex:
 25558                           	callstack 0
 25559   000531                     nvTRnvrdCallback@serviceIndex:
 25560                           	callstack 0
 25561   000531                     doReqev@evVal:
 25562                           	callstack 0
 25563   000531                     ??_inputScan:
 25564   000531                     
 25565                           ; 1 bytes @ 0x30
 25566   000531                     	ds	1
 25567   000532                     sodTRCallback@tableIndex:
 25568                           	callstack 0
 25569   000532                     consumerEventCheckLen@needed:
 25570                           	callstack 0
 25571   000532                     teachCheckLen@needed:
 25572                           	callstack 0
 25573   000532                     nerdCallback@step:
 25574                           	callstack 0
 25575   000532                     reqevCallback@step:
 25576                           	callstack 0
 25577   000532                     removeEvent@tableIndex:
 25578                           	callstack 0
 25579   000532                     mnsTRserviceDiscoveryCallback@step:
 25580                           	callstack 0
 25581   000532                     mnsTRallDiagnosticsCallback@step:
 25582                           	callstack 0
 25583   000532                     mnsTRrqnpnCallback@step:
 25584                           	callstack 0
 25585   000532                     nvTRnvrdCallback@step:
 25586                           	callstack 0
 25587   000532                     factoryReset@i:
 25588                           	callstack 0
 25589   000532                     ??_addEvent:
 25590   000532                     
 25591                           ; 1 bytes @ 0x31
 25592   000532                     	ds	1
 25593   000533                     sodTRCallback@sv:
 25594                           	callstack 0
 25595   000533                     teachCheckLen@learn:
 25596                           	callstack 0
 25597   000533                     doReqev@tableIndex:
 25598                           	callstack 0
 25599   000533                     _inputScan$1239:
 25600                           	callstack 0
 25601   000533                     nerdCallback@nodeNumber:
 25602                           	callstack 0
 25603   000533                     doEvuln@nodeNumber:
 25604                           	callstack 0
 25605   000533                     nvTRnvrdCallback@valueOrError:
 25606                           	callstack 0
 25607   000533                     ??_reqevCallback:
 25608   000533                     ??_mnsTRallDiagnosticsCallback:
 25609   000533                     ??_mnsTRserviceDiscoveryCallback:
 25610   000533                     
 25611                           ; 1 bytes @ 0x32
 25612   000533                     	ds	1
 25613   000534                     sodTRCallback@value:
 25614                           	callstack 0
 25615   000534                     
 25616                           ; 1 bytes @ 0x33
 25617   000534                     	ds	1
 25618   000535                     inputScan@diff:
 25619                           	callstack 0
 25620   000535                     nerdCallback@eventNumber:
 25621                           	callstack 0
 25622   000535                     doEvuln@eventNumber:
 25623                           	callstack 0
 25624   000535                     mnsTRallDiagnosticsCallback@d:
 25625                           	callstack 0
 25626                           
 25627                           ; 2 bytes @ 0x34
 25628   000535                     	ds	1
 25629   000536                     inputScan@row:
 25630                           	callstack 0
 25631                           
 25632                           ; 1 bytes @ 0x35
 25633   000536                     	ds	1
 25634   000537                     inputScan@tableIndex:
 25635                           	callstack 0
 25636   000537                     doEvuln@result:
 25637                           	callstack 0
 25638   000537                     
 25639                           ; 1 bytes @ 0x36
 25640   000537                     	ds	1
 25641   000538                     inputScan@switchMode:
 25642                           	callstack 0
 25643   000538                     reqevCallback@nEv:
 25644                           	callstack 0
 25645                           
 25646                           ; 1 bytes @ 0x37
 25647   000538                     	ds	1
 25648   000539                     inputScan@i:
 25649                           	callstack 0
 25650   000539                     reqevCallback@eventNumber:
 25651                           	callstack 0
 25652                           
 25653                           ; 2 bytes @ 0x38
 25654   000539                     	ds	1
 25655   00053A                     inputScan@sv:
 25656                           	callstack 0
 25657                           
 25658                           ; 1 bytes @ 0x39
 25659   00053A                     	ds	1
 25660   00053B                     inputScan@onOff:
 25661                           	callstack 0
 25662   00053B                     reqevCallback@ev:
 25663                           	callstack 0
 25664   00053B                     addEvent@en:
 25665                           	callstack 0
 25666                           
 25667                           ; 2 bytes @ 0x3A
 25668   00053B                     	ds	1
 25669   00053C                     inputScan@buttonNo:
 25670                           	callstack 0
 25671                           
 25672                           ; 1 bytes @ 0x3B
 25673   00053C                     	ds	1
 25674   00053D                     addEvent@e:
 25675                           	callstack 0
 25676   00053D                     reqevCallback@nodeNumber:
 25677                           	callstack 0
 25678   00053D                     ??_loop:
 25679                           
 25680                           ; 1 bytes @ 0x3C
 25681   00053D                     	ds	1
 25682   00053E                     addEvent@tableIndex:
 25683                           	callstack 0
 25684                           
 25685                           ; 1 bytes @ 0x3D
 25686   00053E                     	ds	1
 25687   00053F                     reqevCallback@tableIndex:
 25688                           	callstack 0
 25689   00053F                     APP_addEvent@nodeNumber:
 25690                           	callstack 0
 25691   00053F                     ??_addTestEvent:
 25692                           
 25693                           ; 1 bytes @ 0x3E
 25694   00053F                     	ds	1
 25695   000540                     ??_pollTimedResponse:
 25696                           
 25697                           ; 1 bytes @ 0x3F
 25698   000540                     	ds	1
 25699   000541                     addTestEvent@sw:
 25700                           	callstack 0
 25701   000541                     APP_addEvent@eventNumber:
 25702                           	callstack 0
 25703                           
 25704                           ; 2 bytes @ 0x40
 25705   000541                     	ds	1
 25706   000542                     APP_testMode@sw:
 25707                           	callstack 0
 25708   000542                     pollTimedResponse@result:
 25709                           	callstack 0
 25710   000542                     
 25711                           ; 1 bytes @ 0x41
 25712   000542                     	ds	1
 25713   000543                     APP_addEvent@evNum:
 25714                           	callstack 0
 25715   000543                     checkPowerOnPb@i:
 25716                           	callstack 0
 25717   000543                     
 25718                           ; 1 bytes @ 0x42
 25719   000543                     	ds	1
 25720   000544                     APP_addEvent@evVal:
 25721                           	callstack 0
 25722                           
 25723                           ; 1 bytes @ 0x43
 25724   000544                     	ds	1
 25725   000545                     loop@tableIndex:
 25726                           	callstack 0
 25727   000545                     APP_addEvent@forceOwnNN:
 25728                           	callstack 0
 25729                           
 25730                           ; 1 bytes @ 0x44
 25731   000545                     	ds	1
 25732   000546                     ??_APP_addEvent:
 25733                           
 25734                           ; 1 bytes @ 0x45
 25735   000546                     	ds	3
 25736   000549                     APP_addEvent@leds:
 25737                           	callstack 0
 25738                           
 25739                           ; 1 bytes @ 0x48
 25740   000549                     	ds	1
 25741   00054A                     APP_addEvent@tableIndex:
 25742                           	callstack 0
 25743                           
 25744                           ; 1 bytes @ 0x49
 25745   00054A                     	ds	1
 25746   00054B                     APP_addEvent@switchNo:
 25747                           	callstack 0
 25748                           
 25749                           ; 1 bytes @ 0x4A
 25750   00054B                     	ds	1
 25751   00054C                     APP_addEvent@oti:
 25752                           	callstack 0
 25753                           
 25754                           ; 1 bytes @ 0x4B
 25755   00054C                     	ds	1
 25756   00054D                     doEvlrn@nodeNumber:
 25757                           	callstack 0
 25758                           
 25759                           ; 2 bytes @ 0x4C
 25760   00054D                     	ds	2
 25761   00054F                     doEvlrn@eventNumber:
 25762                           	callstack 0
 25763                           
 25764                           ; 2 bytes @ 0x4E
 25765   00054F                     	ds	2
 25766   000551                     doEvlrn@evNum:
 25767                           	callstack 0
 25768                           
 25769                           ; 1 bytes @ 0x50
 25770   000551                     	ds	1
 25771   000552                     doEvlrn@evVal:
 25772                           	callstack 0
 25773                           
 25774                           ; 1 bytes @ 0x51
 25775   000552                     	ds	1
 25776   000553                     bootProcessMessage@m:
 25777                           	callstack 0
 25778   000553                     canProcessMessage@m:
 25779                           	callstack 0
 25780   000553                     consumerProcessMessage@m:
 25781                           	callstack 0
 25782   000553                     teachProcessMessage@m:
 25783                           	callstack 0
 25784   000553                     mnsProcessMessage@m:
 25785                           	callstack 0
 25786   000553                     nvProcessMessage@m:
 25787                           	callstack 0
 25788   000553                     producerProcessMessage@m:
 25789                           	callstack 0
 25790   000553                     
 25791                           ; 1 bytes @ 0x52
 25792   000553                     	ds	2
 25793   000555                     mnsProcessMessage@i:
 25794                           	callstack 0
 25795   000555                     ??_bootProcessMessage:
 25796   000555                     ??_canProcessMessage:
 25797   000555                     ??_consumerProcessMessage:
 25798   000555                     ??_teachProcessMessage:
 25799   000555                     ??_nvProcessMessage:
 25800   000555                     ??_producerProcessMessage:
 25801                           
 25802                           ; 1 bytes @ 0x54
 25803   000555                     	ds	1
 25804   000556                     _mnsProcessMessage$4895:
 25805                           	callstack 0
 25806                           
 25807                           ; 1 bytes @ 0x55
 25808   000556                     	ds	1
 25809   000557                     mnsProcessMessage@d:
 25810                           	callstack 0
 25811   000557                     nvProcessMessage@valueOrError:
 25812                           	callstack 0
 25813                           
 25814                           ; 2 bytes @ 0x56
 25815   000557                     	ds	1
 25816   000558                     consumerProcessMessage@enn:
 25817                           	callstack 0
 25818                           
 25819                           ; 2 bytes @ 0x57
 25820   000558                     	ds	1
 25821   000559                     mnsProcessMessage@newMode:
 25822                           	callstack 0
 25823                           
 25824                           ; 1 bytes @ 0x58
 25825   000559                     	ds	1
 25826   00055A                     consumerProcessMessage@ret:
 25827                           	callstack 0
 25828                           
 25829                           ; 1 bytes @ 0x59
 25830   00055A                     	ds	1
 25831   00055B                     consumerProcessMessage@tableIndex:
 25832                           	callstack 0
 25833   00055B                     producerProcessMessage@index:
 25834                           	callstack 0
 25835                           
 25836                           ; 1 bytes @ 0x5A
 25837   00055B                     	ds	1
 25838   00055C                     APP_preProcessMessage@m:
 25839                           	callstack 0
 25840                           
 25841                           ; 2 bytes @ 0x5B
 25842   00055C                     	ds	2
 25843   00055E                     
 25844                           ; 1 bytes @ 0x5D
 25845 ;;
 25846 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 25847 ;;
 25848 ;; *************** function _main *****************
 25849 ;; Defined at:
 25850 ;;		line 1261 in file "../../VLCBlib_PIC/vlcb.c"
 25851 ;; Parameters:    Size  Location     Type
 25852 ;;		None
 25853 ;; Auto vars:     Size  Location     Type
 25854 ;;  t2              1   49[BANK5 ] unsigned char 
 25855 ;;  t1              1   48[BANK5 ] unsigned char 
 25856 ;;  i               1   47[BANK5 ] unsigned char 
 25857 ;; Return value:  Size  Location     Type
 25858 ;;                  1    wreg      void 
 25859 ;; Registers used:
 25860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 25861 ;; Tracked objects:
 25862 ;;		On entry : 0/0
 25863 ;;		On exit  : 0/0
 25864 ;;		Unchanged: 0/0
 25865 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 25866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 25867 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 25868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 25869 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 25870 ;;Total ram usage:        3 bytes
 25871 ;; Hardware stack levels required when called: 14
 25872 ;; This function calls:
 25873 ;;		_checkPowerOnPb
 25874 ;;		_factoryReset
 25875 ;;		_initRomOps
 25876 ;;		_loop
 25877 ;;		_poll
 25878 ;;		_powerUp
 25879 ;;		_readNVM
 25880 ;;		_setup
 25881 ;; This function is called by:
 25882 ;;		Startup code after reset
 25883 ;; This function uses a non-reentrant model
 25884 ;;
 25885                           
 25886                           	psect	text0
 25887   014C38                     __ptext0:
 25888                           	callstack 0
 25889   014C38                     _main:
 25890                           	callstack 113
 25891                           
 25892                           ;../../VLCBlib_PIC/vlcb.c: 1262:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1263:     uint
      +                          8_t t1,t2;;../../VLCBlib_PIC/vlcb.c: 1272:     OSCCON1bits.NOSC = 2;
 25893                           
 25894                           ;incstack = 0
 25895   014C38  0100               	movlb	0	; () banked
 25896   014C3A  51AD               	movf	173,w,b	;volatile
 25897   014C3C  0B8F               	andlw	-113
 25898   014C3E  0920               	iorlw	32
 25899   014C40  6FAD               	movwf	173,b	;volatile
 25900                           
 25901                           ;../../VLCBlib_PIC/vlcb.c: 1273:     OSCCON1bits.NDIV = 0;
 25902   014C42  0EF0               	movlw	-16
 25903   014C44  17AD               	andwf	173,f,b	;volatile
 25904                           
 25905                           ; BSR set to: 0
 25906                           ;../../VLCBlib_PIC/vlcb.c: 1284:     for (t1=0; t1<64; t1++) {
 25907   014C46  0105               	movlb	5	; () banked
 25908   014C48  6BF9               	clrf	main@t1& (0+255),b
 25909   014C4A                     l2332:
 25910                           
 25911                           ; BSR set to: 5
 25912                           ;../../VLCBlib_PIC/vlcb.c: 1285:         for (t2=0; t2<255; t2++) {
 25913   014C4A  6BFA               	clrf	main@t2& (0+255),b
 25914   014C4C                     l2334:
 25915                           
 25916                           ; BSR set to: 5
 25917                           ;../../VLCBlib_PIC/vlcb.c: 1286:             for (i=0; i<255; i++) {
 25918   014C4C  6BF8               	clrf	main@i& (0+255),b
 25919   014C4E                     l2336:
 25920                           
 25921                           ; BSR set to: 5
 25922                           ;../../VLCBlib_PIC/vlcb.c: 1288:                 (LATBbits.LATB7=0);
 25923   014C4E  9EBF               	bcf	191,7,c	;volatile
 25924                           
 25925                           ; BSR set to: 5
 25926                           ;../../VLCBlib_PIC/vlcb.c: 1289:             }
 25927   014C50  2BF8               	incf	main@i& (0+255),f,b
 25928                           
 25929                           ; BSR set to: 5
 25930   014C52  29F8               	incf	main@i& (0+255),w,b
 25931   014C54  A4D8               	btfss	status,2,c
 25932   014C56  D7FB               	goto	l2336
 25933                           
 25934                           ; BSR set to: 5
 25935                           ;../../VLCBlib_PIC/vlcb.c: 1290:         }
 25936   014C58  2BFA               	incf	main@t2& (0+255),f,b
 25937                           
 25938                           ; BSR set to: 5
 25939   014C5A  29FA               	incf	main@t2& (0+255),w,b
 25940   014C5C  A4D8               	btfss	status,2,c
 25941   014C5E  D7F6               	goto	l2334
 25942                           
 25943                           ; BSR set to: 5
 25944                           ;../../VLCBlib_PIC/vlcb.c: 1291:     }
 25945   014C60  2BF9               	incf	main@t1& (0+255),f,b
 25946                           
 25947                           ; BSR set to: 5
 25948   014C62  0E3F               	movlw	63
 25949   014C64  65F9               	cpfsgt	main@t1& (0+255),b
 25950   014C66  D7F1               	goto	l2332
 25951                           
 25952                           ; BSR set to: 5
 25953                           ;../../VLCBlib_PIC/vlcb.c: 1301:     IVTBASEU = 0x00;
 25954   014C68  0104               	movlb	4	; () banked
 25955   014C6A  6B5F               	clrf	95,b	;volatile
 25956                           
 25957                           ; BSR set to: 4
 25958                           ;../../VLCBlib_PIC/vlcb.c: 1302:     IVTBASEH = 0x09;
 25959   014C6C  0E09               	movlw	9
 25960   014C6E  6F5E               	movwf	94,b	;volatile
 25961                           
 25962                           ; BSR set to: 4
 25963                           ;../../VLCBlib_PIC/vlcb.c: 1303:     IVTBASEL = 0x00;
 25964   014C70  6B5D               	clrf	93,b	;volatile
 25965                           
 25966                           ;../../VLCBlib_PIC/vlcb.c: 1305:     IVTLOCK = 0x55;
 25967   014C72  0E55               	movlw	85
 25968   014C74  6F59               	movwf	89,b	;volatile
 25969                           
 25970                           ;../../VLCBlib_PIC/vlcb.c: 1306:     IVTLOCK = 0xAA;
 25971   014C76  0EAA               	movlw	170
 25972   014C78  6F59               	movwf	89,b	;volatile
 25973                           
 25974                           ; BSR set to: 4
 25975                           ;../../VLCBlib_PIC/vlcb.c: 1307:     IVTLOCKbits.IVTLOCKED = 0x01;
 25976   014C7A  8159               	bsf	89,0,b	;volatile
 25977                           
 25978                           ; BSR set to: 4
 25979                           ;../../VLCBlib_PIC/vlcb.c: 1319:     initRomOps();
 25980   014C7C  EC93  F0B2         	call	_initRomOps	;wreg free
 25981                           
 25982                           ;../../VLCBlib_PIC/vlcb.c: 1321:     if (readNVM(EEPROM_NVM_TYPE, 0x3FA) != 1) {
 25983   014C80  0EFA               	movlw	250
 25984   014C82  6E07               	movwf	readNVM@index^(0+1280),c
 25985   014C84  0E03               	movlw	3
 25986   014C86  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 25987   014C88  0E00               	movlw	0
 25988   014C8A  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 25989   014C8C  0E00               	movlw	0
 25990   014C8E  EC42  F0AB         	call	_readNVM
 25991   014C92  0407               	decf	?_readNVM^(0+1280),w,c
 25992   014C94  1008               	iorwf	(?_readNVM+1)^(0+1280),w,c
 25993   014C96  A4D8               	btfss	status,2,c
 25994                           
 25995                           ;../../VLCBlib_PIC/vlcb.c: 1322:         factoryReset();
 25996   014C98  ECD4  F09D         	call	_factoryReset	;wreg free
 25997                           
 25998                           ;../../VLCBlib_PIC/vlcb.c: 1326:     powerUp();
 25999                           
 26000                           ;../../VLCBlib_PIC/vlcb.c: 1323:     }
 26001   014C9C  EC25  F09F         	call	_powerUp	;wreg free
 26002                           
 26003                           ;../../VLCBlib_PIC/vlcb.c: 1329:     {INTCON0bits.GIE = 1;};
 26004   014CA0  8ED6               	bsf	214,7,c	;volatile
 26005                           
 26006                           ;../../VLCBlib_PIC/vlcb.c: 1330:     checkPowerOnPb();
 26007   014CA2  ECCF  F0AC         	call	_checkPowerOnPb	;wreg free
 26008                           
 26009                           ;../../VLCBlib_PIC/vlcb.c: 1333:     {INTCON0bits.GIE = 0;};
 26010   014CA6  9ED6               	bcf	214,7,c	;volatile
 26011                           
 26012                           ;../../VLCBlib_PIC/vlcb.c: 1334:     setup();
 26013   014CA8  EC5C  F0A6         	call	_setup	;wreg free
 26014                           
 26015                           ;../../VLCBlib_PIC/vlcb.c: 1337:     {INTCON0bits.GIE = 1;};
 26016   014CAC  8ED6               	bsf	214,7,c	;volatile
 26017   014CAE                     l12527:
 26018                           
 26019                           ;../../VLCBlib_PIC/vlcb.c: 1341:         poll();
 26020   014CAE  EC16  F08C         	call	_poll	;wreg free
 26021                           
 26022                           ;../../VLCBlib_PIC/vlcb.c: 1342:         loop();
 26023   014CB2  EC1D  F098         	call	_loop	;wreg free
 26024   014CB6  D7FB               	goto	l12527
 26025   014CB8                     __end_of_main:
 26026                           	callstack 0
 26027                           
 26028 ;; *************** function _setup *****************
 26029 ;; Defined at:
 26030 ;;		line 181 in file "../main.c"
 26031 ;; Parameters:    Size  Location     Type
 26032 ;;		None
 26033 ;; Auto vars:     Size  Location     Type
 26034 ;;  nv              1    0        unsigned char 
 26035 ;;  pu              1    0        unsigned char 
 26036 ;; Return value:  Size  Location     Type
 26037 ;;                  1    wreg      void 
 26038 ;; Registers used:
 26039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26040 ;; Tracked objects:
 26041 ;;		On entry : 0/0
 26042 ;;		On exit  : 0/0
 26043 ;;		Unchanged: 0/0
 26044 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26049 ;;Total ram usage:        0 bytes
 26050 ;; Hardware stack levels used: 1
 26051 ;; Hardware stack levels required when called: 6
 26052 ;; This function calls:
 26053 ;;		_getNV
 26054 ;;		_initEvents
 26055 ;;		_initInputs
 26056 ;;		_initLeds
 26057 ;;		_initOutputs
 26058 ;;		_tickGet
 26059 ;; This function is called by:
 26060 ;;		_main
 26061 ;; This function uses a non-reentrant model
 26062 ;;
 26063                           
 26064                           	psect	text1
 26065   014CB8                     __ptext1:
 26066                           	callstack 0
 26067   014CB8                     _setup:
 26068                           	callstack 120
 26069                           
 26070                           ;../main.c: 183:     uint8_t pu;;../main.c: 185:     uint8_t nv;;../main.c: 188:     tra
      +                          nsport = &canTransport;
 26071                           
 26072                           ;incstack = 0
 26073   014CB8  0EF9               	movlw	low _canTransport
 26074   014CBA  0105               	movlb	5	; () banked
 26075   014CBC  6F80               	movwf	_transport& (0+255),b
 26076   014CBE  0EFF               	movlw	high _canTransport
 26077   014CC0  6F81               	movwf	(_transport+1)& (0+255),b
 26078                           
 26079                           ; BSR set to: 5
 26080                           ;../main.c: 200:     WPUA = 0b00001000;
 26081   014CC2  0E08               	movlw	8
 26082   014CC4  0104               	movlb	4	; () banked
 26083   014CC6  6F01               	movwf	1,b	;volatile
 26084                           
 26085                           ; BSR set to: 4
 26086                           ;../main.c: 201:     WPUB = 0;
 26087   014CC8  6B09               	clrf	9,b	;volatile
 26088                           
 26089                           ; BSR set to: 4
 26090                           ;../main.c: 202:     WPUC = 0;
 26091   014CCA  6B11               	clrf	17,b	;volatile
 26092                           
 26093                           ; BSR set to: 4
 26094                           ;../main.c: 203:     ANSELA = 0x00;
 26095   014CCC  6B00               	clrf	0,b	;volatile
 26096                           
 26097                           ; BSR set to: 4
 26098                           ;../main.c: 204:     ANSELB = 0x00;
 26099   014CCE  6B08               	clrf	8,b	;volatile
 26100                           
 26101                           ; BSR set to: 4
 26102                           ;../main.c: 205:     ANSELC = 0x00;
 26103   014CD0  6B10               	clrf	16,b	;volatile
 26104                           
 26105                           ; BSR set to: 4
 26106                           ;../main.c: 208:     initOutputs();
 26107   014CD2  ECE6  F0A9         	call	_initOutputs	;wreg free
 26108                           
 26109                           ;../main.c: 209:     initLeds();
 26110   014CD6  EC81  F0AA         	call	_initLeds	;wreg free
 26111                           
 26112                           ;../main.c: 210:     initInputs();
 26113   014CDA  ECD6  F0A4         	call	_initInputs	;wreg free
 26114                           
 26115                           ;../main.c: 211:     initEvents();
 26116   014CDE  EC0F  F0B3         	call	_initEvents	;wreg free
 26117                           
 26118                           ;../main.c: 219:     (INTCON0bits.GIE = 1);
 26119   014CE2  8ED6               	bsf	214,7,c	;volatile
 26120                           
 26121                           ;../main.c: 221:     startTime.val = tickGet();
 26122   014CE4  EC50  F0AC         	call	_tickGet	;wreg free
 26123   014CE8  C501  F570         	movff	?_tickGet,_startTime
 26124   014CEC  C502  F571         	movff	?_tickGet+1,_startTime+1
 26125   014CF0  C503  F572         	movff	?_tickGet+2,_startTime+2
 26126   014CF4  C504  F573         	movff	?_tickGet+3,_startTime+3
 26127                           
 26128                           ;../main.c: 222:     lastInputScanTime.val = startTime.val;
 26129   014CF8  C570  F56C         	movff	_startTime,_lastInputScanTime
 26130   014CFC  C571  F56D         	movff	_startTime+1,_lastInputScanTime+1
 26131   014D00  C572  F56E         	movff	_startTime+2,_lastInputScanTime+2
 26132   014D04  C573  F56F         	movff	_startTime+3,_lastInputScanTime+3
 26133                           
 26134                           ;../main.c: 223:     flashTime.val = startTime.val;
 26135   014D08  C570  F69E         	movff	_startTime,_flashTime
 26136   014D0C  C571  F69F         	movff	_startTime+1,_flashTime+1
 26137   014D10  C572  F6A0         	movff	_startTime+2,_flashTime+2
 26138   014D14  C573  F6A1         	movff	_startTime+3,_flashTime+3
 26139                           
 26140                           ;../main.c: 224:     outputPollTime.val = startTime.val;
 26141   014D18  C570  F69A         	movff	_startTime,_outputPollTime
 26142   014D1C  C571  F69B         	movff	_startTime+1,_outputPollTime+1
 26143   014D20  C572  F69C         	movff	_startTime+2,_outputPollTime+2
 26144   014D24  C573  F69D         	movff	_startTime+3,_outputPollTime+3
 26145                           
 26146                           ;../main.c: 226:     started = FALSE;
 26147   014D28  0105               	movlb	5	; () banked
 26148   014D2A  6BA0               	clrf	_started& (0+255),b
 26149                           
 26150                           ; BSR set to: 5
 26151                           ;../main.c: 227:     canpanScanReady = 0;
 26152   014D2C  6BA1               	clrf	_canpanScanReady& (0+255),b
 26153                           
 26154                           ; BSR set to: 5
 26155   014D2E  0E01               	movlw	1
 26156   014D30  EC49  F0AF         	call	_getNV
 26157   014D34  0012               	return		;funcret
 26158   014D36                     __end_of_setup:
 26159                           	callstack 0
 26160                           
 26161 ;; *************** function _initOutputs *****************
 26162 ;; Defined at:
 26163 ;;		line 58 in file "../canpan3Outputs.c"
 26164 ;; Parameters:    Size  Location     Type
 26165 ;;		None
 26166 ;; Auto vars:     Size  Location     Type
 26167 ;;  i               1    0[COMRAM] unsigned char 
 26168 ;; Return value:  Size  Location     Type
 26169 ;;                  1    wreg      void 
 26170 ;; Registers used:
 26171 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26172 ;; Tracked objects:
 26173 ;;		On entry : 0/0
 26174 ;;		On exit  : 0/0
 26175 ;;		Unchanged: 0/0
 26176 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26178 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26180 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26181 ;;Total ram usage:        1 bytes
 26182 ;; Hardware stack levels used: 1
 26183 ;; Hardware stack levels required when called: 1
 26184 ;; This function calls:
 26185 ;;		Nothing
 26186 ;; This function is called by:
 26187 ;;		_setup
 26188 ;; This function uses a non-reentrant model
 26189 ;;
 26190                           
 26191                           	psect	text2
 26192   0153CC                     __ptext2:
 26193                           	callstack 0
 26194   0153CC                     _initOutputs:
 26195                           	callstack 124
 26196                           
 26197                           ;../canpan3Outputs.c: 59:     uint8_t i;;../canpan3Outputs.c: 61:     for (i=0; i< 4; i+
      +                          +) {
 26198                           
 26199                           ;incstack = 0
 26200   0153CC  6A01               	clrf	initOutputs@i^(0+1280),c
 26201   0153CE                     l11293:
 26202                           
 26203                           ;../canpan3Outputs.c: 62:         ledMatrix[i] = 0;
 26204   0153CE  0E68               	movlw	low _ledMatrix
 26205   0153D0  2401               	addwf	initOutputs@i^(0+1280),w,c
 26206   0153D2  6ED9               	movwf	fsr2l,c
 26207   0153D4  6ADA               	clrf	fsr2h,c
 26208   0153D6  0E05               	movlw	high _ledMatrix
 26209   0153D8  22DA               	addwfc	fsr2h,f,c
 26210   0153DA  6ADF               	clrf	indf2,c
 26211                           
 26212                           ;../canpan3Outputs.c: 63:     }
 26213   0153DC  2A01               	incf	initOutputs@i^(0+1280),f,c
 26214   0153DE  0E03               	movlw	3
 26215   0153E0  6401               	cpfsgt	initOutputs@i^(0+1280),c
 26216   0153E2  D7F5               	goto	l11293
 26217                           
 26218                           ;../canpan3Outputs.c: 64:     TRISCbits.TRISC6 = 0;
 26219   0153E4  9CC8               	bcf	200,6,c	;volatile
 26220                           
 26221                           ;../canpan3Outputs.c: 65:     TRISCbits.TRISC7 = 0;
 26222   0153E6  9EC8               	bcf	200,7,c	;volatile
 26223                           
 26224                           ;../canpan3Outputs.c: 66:     TRISBbits.TRISB4 = 0;
 26225   0153E8  98C7               	bcf	199,4,c	;volatile
 26226                           
 26227                           ;../canpan3Outputs.c: 67:     TRISBbits.TRISB5 = 0;
 26228   0153EA  9AC7               	bcf	199,5,c	;volatile
 26229                           
 26230                           ;../canpan3Outputs.c: 69:     LATBbits.LATB4 = 0;
 26231   0153EC  98BF               	bcf	191,4,c	;volatile
 26232                           
 26233                           ;../canpan3Outputs.c: 70:     LATBbits.LATB5 = 0;
 26234   0153EE  9ABF               	bcf	191,5,c	;volatile
 26235                           
 26236                           ;../canpan3Outputs.c: 71:     LATCbits.LATC6 = 0;
 26237   0153F0  9CC0               	bcf	192,6,c	;volatile
 26238                           
 26239                           ;../canpan3Outputs.c: 72:     LATCbits.LATC7 = 0;
 26240   0153F2  9EC0               	bcf	192,7,c	;volatile
 26241                           
 26242                           ;../canpan3Outputs.c: 75:     TRISCbits.TRISC2 = 0;
 26243   0153F4  94C8               	bcf	200,2,c	;volatile
 26244                           
 26245                           ;../canpan3Outputs.c: 76:     LATCbits.LATC2 = 0;
 26246   0153F6  94C0               	bcf	192,2,c	;volatile
 26247                           
 26248                           ;../canpan3Outputs.c: 79:     TRISCbits.TRISC4 = 0;
 26249   0153F8  98C8               	bcf	200,4,c	;volatile
 26250                           
 26251                           ;../canpan3Outputs.c: 80:     LATCbits.LATC4 = 0;
 26252   0153FA  98C0               	bcf	192,4,c	;volatile
 26253                           
 26254                           ;../canpan3Outputs.c: 83:     TRISCbits.TRISC3 = 0;
 26255   0153FC  96C8               	bcf	200,3,c	;volatile
 26256                           
 26257                           ;../canpan3Outputs.c: 84:     LATCbits.LATC3 = 0;
 26258   0153FE  96C0               	bcf	192,3,c	;volatile
 26259                           
 26260                           ;../canpan3Outputs.c: 85:     TRISCbits.TRISC5 = 0;
 26261   015400  9AC8               	bcf	200,5,c	;volatile
 26262                           
 26263                           ;../canpan3Outputs.c: 86:     LATCbits.LATC5 = 0;
 26264   015402  9AC0               	bcf	192,5,c	;volatile
 26265                           
 26266                           ;../canpan3Outputs.c: 88:     SPI1CON0 = 0x03;
 26267   015404  0E03               	movlw	3
 26268   015406  0100               	movlb	0	; () banked
 26269   015408  6F84               	movwf	132,b	;volatile
 26270                           
 26271                           ;../canpan3Outputs.c: 89:     SPI1CON1 = 0x44;
 26272   01540A  0E44               	movlw	68
 26273   01540C  6F85               	movwf	133,b	;volatile
 26274                           
 26275                           ;../canpan3Outputs.c: 90:     SPI1CON2 = 0x02;
 26276   01540E  0E02               	movlw	2
 26277   015410  6F86               	movwf	134,b	;volatile
 26278                           
 26279                           ; BSR set to: 0
 26280                           ;../canpan3Outputs.c: 92:     SPI1TCNTH=0;
 26281   015412  6B83               	clrf	131,b	;volatile
 26282                           
 26283                           ;../canpan3Outputs.c: 93:     SPI1TCNTL=1;
 26284   015414  0E01               	movlw	1
 26285   015416  6F82               	movwf	130,b	;volatile
 26286                           
 26287                           ; BSR set to: 0
 26288                           ;../canpan3Outputs.c: 94:     SPI1TWIDTH=0;
 26289   015418  6B88               	clrf	136,b	;volatile
 26290                           
 26291                           ; BSR set to: 0
 26292                           ;../canpan3Outputs.c: 96:     SPI1CLK = 0x00;
 26293   01541A  6B8C               	clrf	140,b	;volatile
 26294                           
 26295                           ;../canpan3Outputs.c: 97:     SPI1BAUD = 15;
 26296   01541C  0E0F               	movlw	15
 26297   01541E  6F89               	movwf	137,b	;volatile
 26298                           
 26299                           ;../canpan3Outputs.c: 100:     RC5PPS = 0x32;
 26300   015420  0E32               	movlw	50
 26301   015422  0102               	movlb	2	; () banked
 26302   015424  6F16               	movwf	22,b	;volatile
 26303                           
 26304                           ;../canpan3Outputs.c: 101:     RC3PPS = 0x31;
 26305   015426  0E31               	movlw	49
 26306   015428  6F14               	movwf	20,b	;volatile
 26307                           
 26308                           ;../canpan3Outputs.c: 102:     RC4PPS = 0x33;
 26309   01542A  0E33               	movlw	51
 26310   01542C  6F15               	movwf	21,b	;volatile
 26311                           
 26312                           ; BSR set to: 2
 26313                           ;../canpan3Outputs.c: 105:     SPI1CON0bits.EN = 1;
 26314   01542E  0100               	movlb	0	; () banked
 26315   015430  8F84               	bsf	132,7,b	;volatile
 26316                           
 26317                           ; BSR set to: 0
 26318   015432  0012               	return		;funcret
 26319   015434                     __end_of_initOutputs:
 26320                           	callstack 0
 26321                           
 26322 ;; *************** function _initLeds *****************
 26323 ;; Defined at:
 26324 ;;		line 57 in file "../canpan3Leds.c"
 26325 ;; Parameters:    Size  Location     Type
 26326 ;;		None
 26327 ;; Auto vars:     Size  Location     Type
 26328 ;;  state           1   18[COMRAM] enum E23465
 26329 ;;  ledNo           1   19[COMRAM] unsigned char 
 26330 ;; Return value:  Size  Location     Type
 26331 ;;                  1    wreg      void 
 26332 ;; Registers used:
 26333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26334 ;; Tracked objects:
 26335 ;;		On entry : 0/0
 26336 ;;		On exit  : 0/0
 26337 ;;		Unchanged: 0/0
 26338 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26340 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26341 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26342 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26343 ;;Total ram usage:        4 bytes
 26344 ;; Hardware stack levels used: 1
 26345 ;; Hardware stack levels required when called: 4
 26346 ;; This function calls:
 26347 ;;		_getNV
 26348 ;;		_readNVM
 26349 ;;		_setLedStateNoSave
 26350 ;; This function is called by:
 26351 ;;		_setup
 26352 ;; This function uses a non-reentrant model
 26353 ;;
 26354                           
 26355                           	psect	text3
 26356   015502                     __ptext3:
 26357                           	callstack 0
 26358   015502                     _initLeds:
 26359                           	callstack 121
 26360                           
 26361                           ;../canpan3Leds.c: 58:     uint8_t ledNo;;../canpan3Leds.c: 60:     startupNv = (uint8_t
      +                          )getNV(1);
 26362                           
 26363                           ; BSR set to: 0
 26364                           ;incstack = 0
 26365   015502  0E01               	movlw	1
 26366   015504  EC49  F0AF         	call	_getNV
 26367   015508  5001               	movf	?_getNV^(0+1280),w,c
 26368   01550A  0105               	movlb	5	; () banked
 26369   01550C  6F98               	movwf	_startupNv& (0+255),b
 26370                           
 26371                           ; BSR set to: 5
 26372                           ;../canpan3Leds.c: 62:     for (ledNo=0; ledNo<(4*8); ledNo++) {
 26373   01550E  6A14               	clrf	initLeds@ledNo^(0+1280),c
 26374   015510                     l520:
 26375                           
 26376                           ;../canpan3Leds.c: 63:         if (startupNv & 0x02) {
 26377   015510  0105               	movlb	5	; () banked
 26378   015512  A398               	btfss	_startupNv& (0+255),1,b
 26379   015514  D019               	goto	l11319
 26380                           
 26381                           ; BSR set to: 5
 26382                           ;../canpan3Leds.c: 64:             enum canpan3LedState state = (uint8_t)readNVM(EEPROM_
      +                          NVM_TYPE, 0x0040 +ledNo);
 26383   015516  5014               	movf	initLeds@ledNo^(0+1280),w,c
 26384   015518  6E11               	movwf	??_initLeds^(0+1280),c
 26385   01551A  6A12               	clrf	(??_initLeds+1)^(0+1280),c
 26386   01551C  0E40               	movlw	64
 26387   01551E  2611               	addwf	??_initLeds^(0+1280),f,c
 26388   015520  0E00               	movlw	0
 26389   015522  2212               	addwfc	(??_initLeds+1)^(0+1280),f,c
 26390   015524  C511  F507         	movff	??_initLeds,readNVM@index
 26391   015528  C512  F508         	movff	??_initLeds+1,readNVM@index+1
 26392   01552C  6A09               	clrf	(readNVM@index+2)^(0+1280),c
 26393   01552E  BE08               	btfsc	(readNVM@index+1)^(0+1280),7,c
 26394   015530  0609               	decf	(readNVM@index+2)^(0+1280),f,c
 26395   015532  0E00               	movlw	0
 26396   015534  EC42  F0AB         	call	_readNVM
 26397   015538  5007               	movf	?_readNVM^(0+1280),w,c
 26398   01553A  6E13               	movwf	initLeds@state^(0+1280),c
 26399                           
 26400                           ;../canpan3Leds.c: 65:             setLedStateNoSave(ledNo, state);
 26401   01553C  C513  F50D         	movff	initLeds@state,setLedStateNoSave@state
 26402   015540  5014               	movf	initLeds@ledNo^(0+1280),w,c
 26403   015542  EC25  F0AC         	call	_setLedStateNoSave
 26404                           
 26405                           ;../canpan3Leds.c: 66:         } else {
 26406   015546  D008               	goto	l11321
 26407   015548                     l11319:
 26408                           
 26409                           ; BSR set to: 5
 26410                           ;../canpan3Leds.c: 67:             ledStates[ledNo] = CANPANLED_OFF;
 26411   015548  0E21               	movlw	low _ledStates
 26412   01554A  2414               	addwf	initLeds@ledNo^(0+1280),w,c
 26413   01554C  6ED9               	movwf	fsr2l,c
 26414   01554E  6ADA               	clrf	fsr2h,c
 26415   015550  0E06               	movlw	high _ledStates
 26416   015552  22DA               	addwfc	fsr2h,f,c
 26417   015554  0E01               	movlw	1
 26418   015556  6EDF               	movwf	indf2,c
 26419   015558                     l11321:
 26420                           
 26421                           ;../canpan3Leds.c: 69:     }
 26422   015558  2A14               	incf	initLeds@ledNo^(0+1280),f,c
 26423   01555A  0E1F               	movlw	31
 26424   01555C  6414               	cpfsgt	initLeds@ledNo^(0+1280),c
 26425   01555E  D7D8               	goto	l520
 26426                           
 26427                           ;../canpan3Leds.c: 70:     flashToggle = 0;
 26428   015560  0105               	movlb	5	; () banked
 26429   015562  6B99               	clrf	_flashToggle& (0+255),b
 26430                           
 26431                           ; BSR set to: 5
 26432   015564  0012               	return		;funcret
 26433   015566                     __end_of_initLeds:
 26434                           	callstack 0
 26435                           
 26436 ;; *************** function _initInputs *****************
 26437 ;; Defined at:
 26438 ;;		line 74 in file "../canpan3Inputs.c"
 26439 ;; Parameters:    Size  Location     Type
 26440 ;;		None
 26441 ;; Auto vars:     Size  Location     Type
 26442 ;;  i               1   13[COMRAM] unsigned char 
 26443 ;;  startNv         1   12[COMRAM] unsigned char 
 26444 ;; Return value:  Size  Location     Type
 26445 ;;                  1    wreg      void 
 26446 ;; Registers used:
 26447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26448 ;; Tracked objects:
 26449 ;;		On entry : 0/0
 26450 ;;		On exit  : 0/0
 26451 ;;		Unchanged: 0/0
 26452 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26456 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26457 ;;Total ram usage:        2 bytes
 26458 ;; Hardware stack levels used: 1
 26459 ;; Hardware stack levels required when called: 3
 26460 ;; This function calls:
 26461 ;;		_driveColumn
 26462 ;;		_getNV
 26463 ;;		_readNVM
 26464 ;; This function is called by:
 26465 ;;		_setup
 26466 ;; This function uses a non-reentrant model
 26467 ;;
 26468                           
 26469                           	psect	text4
 26470   0149AC                     __ptext4:
 26471                           	callstack 0
 26472   0149AC                     _initInputs:
 26473                           	callstack 122
 26474                           
 26475                           ;../canpan3Inputs.c: 75:     uint8_t i;;../canpan3Inputs.c: 76:     uint8_t startNv;;../
      +                          canpan3Inputs.c: 78:     canpanScanReady = 0;
 26476                           
 26477                           ; BSR set to: 5
 26478                           ;incstack = 0
 26479   0149AC  0105               	movlb	5	; () banked
 26480   0149AE  6BA1               	clrf	_canpanScanReady& (0+255),b
 26481                           
 26482                           ;../canpan3Inputs.c: 80:     TRISAbits.TRISA0=0;
 26483   0149B0  90C6               	bcf	198,0,c	;volatile
 26484                           
 26485                           ;../canpan3Inputs.c: 81:     TRISAbits.TRISA1=0;
 26486   0149B2  92C6               	bcf	198,1,c	;volatile
 26487                           
 26488                           ;../canpan3Inputs.c: 82:     TRISAbits.TRISA2=0;
 26489   0149B4  94C6               	bcf	198,2,c	;volatile
 26490                           
 26491                           ;../canpan3Inputs.c: 84:     TRISBbits.TRISB0=1;
 26492   0149B6  80C7               	bsf	199,0,c	;volatile
 26493                           
 26494                           ;../canpan3Inputs.c: 85:     TRISBbits.TRISB1=1;
 26495   0149B8  82C7               	bsf	199,1,c	;volatile
 26496                           
 26497                           ;../canpan3Inputs.c: 86:     TRISCbits.TRISC0=1;
 26498   0149BA  80C8               	bsf	200,0,c	;volatile
 26499                           
 26500                           ;../canpan3Inputs.c: 87:     TRISCbits.TRISC1=1;
 26501   0149BC  82C8               	bsf	200,1,c	;volatile
 26502                           
 26503                           ; BSR set to: 5
 26504                           ;../canpan3Inputs.c: 94:     WPUB = 0b00000011;
 26505   0149BE  0E03               	movlw	3
 26506   0149C0  0104               	movlb	4	; () banked
 26507   0149C2  6F09               	movwf	9,b	;volatile
 26508                           
 26509                           ;../canpan3Inputs.c: 95:     WPUC = 0b00000011;
 26510   0149C4  0E03               	movlw	3
 26511   0149C6  6F11               	movwf	17,b	;volatile
 26512                           
 26513                           ; BSR set to: 4
 26514                           ;../canpan3Inputs.c: 98:     column = 0;
 26515   0149C8  0105               	movlb	5	; () banked
 26516   0149CA  6B9D               	clrf	_column& (0+255),b
 26517                           
 26518                           ; BSR set to: 5
 26519                           ;../canpan3Inputs.c: 99:     driveColumn();
 26520   0149CC  EC49  F0AD         	call	_driveColumn	;wreg free
 26521                           
 26522                           ;../canpan3Inputs.c: 100:     startNv = (uint8_t)getNV(1);
 26523   0149D0  0E01               	movlw	1
 26524   0149D2  EC49  F0AF         	call	_getNV
 26525   0149D6  5001               	movf	?_getNV^(0+1280),w,c
 26526   0149D8  6E0D               	movwf	initInputs@startNv^(0+1280),c
 26527                           
 26528                           ;../canpan3Inputs.c: 101:     for (i=0; i<(8*4); i++) {
 26529   0149DA  6A0E               	clrf	initInputs@i^(0+1280),c
 26530   0149DC                     l320:
 26531                           
 26532                           ;../canpan3Inputs.c: 102:         if (!(startNv & 0x01)) {
 26533   0149DC  B00D               	btfsc	initInputs@startNv^(0+1280),0,c
 26534   0149DE  D010               	goto	l11343
 26535                           
 26536                           ;../canpan3Inputs.c: 103:             outputState[i] = (uint8_t)readNVM(EEPROM_NVM_TYPE,
      +                           0x0000 +i);
 26537   0149E0  500E               	movf	initInputs@i^(0+1280),w,c
 26538   0149E2  6E07               	movwf	readNVM@index^(0+1280),c
 26539   0149E4  6A08               	clrf	(readNVM@index+1)^(0+1280),c
 26540   0149E6  6A09               	clrf	(readNVM@index+2)^(0+1280),c
 26541   0149E8  0E00               	movlw	0
 26542   0149EA  EC42  F0AB         	call	_readNVM
 26543   0149EE  0E41               	movlw	low _outputState
 26544   0149F0  240E               	addwf	initInputs@i^(0+1280),w,c
 26545   0149F2  6ED9               	movwf	fsr2l,c
 26546   0149F4  6ADA               	clrf	fsr2h,c
 26547   0149F6  0E06               	movlw	high _outputState
 26548   0149F8  22DA               	addwfc	fsr2h,f,c
 26549   0149FA  C507  F4DF         	movff	?_readNVM,indf2
 26550                           
 26551                           ;../canpan3Inputs.c: 104:         } else {
 26552   0149FE  D007               	goto	l11345
 26553   014A00                     l11343:
 26554                           
 26555                           ;../canpan3Inputs.c: 105:             outputState[i] = 0;
 26556   014A00  0E41               	movlw	low _outputState
 26557   014A02  240E               	addwf	initInputs@i^(0+1280),w,c
 26558   014A04  6ED9               	movwf	fsr2l,c
 26559   014A06  6ADA               	clrf	fsr2h,c
 26560   014A08  0E06               	movlw	high _outputState
 26561   014A0A  22DA               	addwfc	fsr2h,f,c
 26562   014A0C  6ADF               	clrf	indf2,c
 26563   014A0E                     l11345:
 26564                           
 26565                           ;../canpan3Inputs.c: 107:     }
 26566   014A0E  2A0E               	incf	initInputs@i^(0+1280),f,c
 26567   014A10  0E1F               	movlw	31
 26568   014A12  640E               	cpfsgt	initInputs@i^(0+1280),c
 26569   014A14  D7E3               	goto	l320
 26570                           
 26571                           ;../canpan3Inputs.c: 108:     for (i=0; i<8; i++) {
 26572   014A16  6A0E               	clrf	initInputs@i^(0+1280),c
 26573   014A18                     l11353:
 26574                           
 26575                           ;../canpan3Inputs.c: 109:         buttonState[i] = 0;
 26576   014A18  0E7E               	movlw	low _buttonState
 26577   014A1A  240E               	addwf	initInputs@i^(0+1280),w,c
 26578   014A1C  6ED9               	movwf	fsr2l,c
 26579   014A1E  6ADA               	clrf	fsr2h,c
 26580   014A20  0E06               	movlw	high _buttonState
 26581   014A22  22DA               	addwfc	fsr2h,f,c
 26582   014A24  6ADF               	clrf	indf2,c
 26583                           
 26584                           ;../canpan3Inputs.c: 110:     }
 26585   014A26  2A0E               	incf	initInputs@i^(0+1280),f,c
 26586   014A28  0E07               	movlw	7
 26587   014A2A  640E               	cpfsgt	initInputs@i^(0+1280),c
 26588   014A2C  D7F5               	goto	l11353
 26589   014A2E  0012               	return	
 26590   014A30                     __end_of_initInputs:
 26591                           	callstack 0
 26592                           
 26593 ;; *************** function _initEvents *****************
 26594 ;; Defined at:
 26595 ;;		line 79 in file "../canpan3Events.c"
 26596 ;; Parameters:    Size  Location     Type
 26597 ;;		None
 26598 ;; Auto vars:     Size  Location     Type
 26599 ;;		None
 26600 ;; Return value:  Size  Location     Type
 26601 ;;                  1    wreg      void 
 26602 ;; Registers used:
 26603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26604 ;; Tracked objects:
 26605 ;;		On entry : 0/0
 26606 ;;		On exit  : 0/0
 26607 ;;		Unchanged: 0/0
 26608 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26613 ;;Total ram usage:        0 bytes
 26614 ;; Hardware stack levels used: 1
 26615 ;; Hardware stack levels required when called: 5
 26616 ;; This function calls:
 26617 ;;		_rebuildLookupTable
 26618 ;; This function is called by:
 26619 ;;		_setup
 26620 ;; This function uses a non-reentrant model
 26621 ;;
 26622                           
 26623                           	psect	text5
 26624   01661E                     __ptext5:
 26625                           	callstack 0
 26626   01661E                     _initEvents:
 26627                           	callstack 120
 26628                           
 26629                           ;../canpan3Events.c: 80:     rebuildLookupTable();
 26630                           
 26631                           ;incstack = 0
 26632   01661E  EC4E  F0AA         	call	_rebuildLookupTable	;wreg free
 26633   016622  0012               	return		;funcret
 26634   016624                     __end_of_initEvents:
 26635                           	callstack 0
 26636                           
 26637 ;; *************** function _powerUp *****************
 26638 ;; Defined at:
 26639 ;;		line 886 in file "../../VLCBlib_PIC/vlcb.c"
 26640 ;; Parameters:    Size  Location     Type
 26641 ;;		None
 26642 ;; Auto vars:     Size  Location     Type
 26643 ;;  i               1   38[COMRAM] unsigned char 
 26644 ;;  divider         1    0        unsigned char 
 26645 ;; Return value:  Size  Location     Type
 26646 ;;                  1    wreg      void 
 26647 ;; Registers used:
 26648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26649 ;; Tracked objects:
 26650 ;;		On entry : 0/0
 26651 ;;		On exit  : 0/0
 26652 ;;		Unchanged: 0/0
 26653 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26656 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26657 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26658 ;;Total ram usage:        3 bytes
 26659 ;; Hardware stack levels used: 1
 26660 ;; Hardware stack levels required when called: 6
 26661 ;; This function calls:
 26662 ;;		NULL
 26663 ;;		_bootPowerUp
 26664 ;;		_canPowerUp
 26665 ;;		_consumerPowerUp
 26666 ;;		_initTicker
 26667 ;;		_initTimedResponse
 26668 ;;		_leds_powerUp
 26669 ;;		_mnsPowerUp
 26670 ;;		_nvPowerUp
 26671 ;;		_producerPowerUp
 26672 ;;		_teachPowerUp
 26673 ;; This function is called by:
 26674 ;;		_main
 26675 ;; This function uses a non-reentrant model
 26676 ;;
 26677                           
 26678                           	psect	text6
 26679   013E4A                     __ptext6:
 26680                           	callstack 0
 26681   013E4A                     _powerUp:
 26682                           	callstack 120
 26683                           
 26684                           ;../../VLCBlib_PIC/vlcb.c: 887:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 888:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 891:     initTicker(0);
 26685                           
 26686                           ;incstack = 0
 26687   013E4A  0E00               	movlw	0
 26688   013E4C  EC21  F0AD         	call	_initTicker
 26689                           
 26690                           ;../../VLCBlib_PIC/vlcb.c: 892:     initTimedResponse();
 26691   013E50  EC12  F0B3         	call	_initTimedResponse	;wreg free
 26692                           
 26693                           ;../../VLCBlib_PIC/vlcb.c: 893:     leds_powerUp();
 26694   013E54  ECCC  F0B0         	call	_leds_powerUp	;wreg free
 26695                           
 26696                           ;../../VLCBlib_PIC/vlcb.c: 894:     timedResponseDelay = 5;
 26697   013E58  0E05               	movlw	5
 26698   013E5A  0105               	movlb	5	; () banked
 26699   013E5C  6F82               	movwf	_timedResponseDelay& (0+255),b
 26700                           
 26701                           ; BSR set to: 5
 26702                           ;../../VLCBlib_PIC/vlcb.c: 896:     for (i=0; i<8; i++) {
 26703   013E5E  6A27               	clrf	powerUp@i^(0+1280),c
 26704   013E60                     l12311:
 26705                           
 26706                           ;../../VLCBlib_PIC/vlcb.c: 897:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
 26707   013E60  5027               	movf	powerUp@i^(0+1280),w,c
 26708   013E62  0D02               	mullw	2
 26709   013E64  0E39               	movlw	low _services
 26710   013E66  24F3               	addwf	243,w,c
 26711   013E68  6EF6               	movwf	tblptrl,c
 26712   013E6A  0EFF               	movlw	high _services
 26713   013E6C  20F4               	addwfc	244,w,c
 26714   013E6E  6EF7               	movwf	tblptrh,c
 26715   013E70                     	if	1	;There are 3 active tblptr bytes
 26716   013E70  6AF8               	clrf	tblptru,c
 26717   013E72  0E00               	movlw	low (__pmediumconst shr (0+16))
 26718   013E74  22F8               	addwfc	tblptru,f,c
 26719   013E76                     	endif
 26720   013E76  0009               	tblrd		*+
 26721   013E78  50F5               	movf	tablat,w,c
 26722   013E7A  0009               	tblrd		*+
 26723   013E7C  10F5               	iorwf	tablat,w,c
 26724   013E7E  B4D8               	btfsc	status,2,c
 26725   013E80  D04D               	goto	u10639
 26726   013E82  5027               	movf	powerUp@i^(0+1280),w,c
 26727   013E84  0D02               	mullw	2
 26728   013E86  0E39               	movlw	low _services
 26729   013E88  24F3               	addwf	243,w,c
 26730   013E8A  6EF6               	movwf	tblptrl,c
 26731   013E8C  0EFF               	movlw	high _services
 26732   013E8E  20F4               	addwfc	244,w,c
 26733   013E90  6EF7               	movwf	tblptrh,c
 26734   013E92                     	if	1	;There are 3 active tblptr bytes
 26735   013E92  6AF8               	clrf	tblptru,c
 26736   013E94  0E00               	movlw	low (__pmediumconst shr (0+16))
 26737   013E96  22F8               	addwfc	tblptru,f,c
 26738   013E98                     	endif
 26739   013E98  0009               	tblrd		*+
 26740   013E9A  C4F5 F525          	movff	tablat,??_powerUp
 26741   013E9E  0009               	tblrd		*+
 26742   013EA0  C4F5 F526          	movff	tablat,??_powerUp+1
 26743   013EA4  0E05               	movlw	5
 26744   013EA6  2625               	addwf	??_powerUp^(0+1280),f,c
 26745   013EA8  0E00               	movlw	0
 26746   013EAA  2226               	addwfc	(??_powerUp+1)^(0+1280),f,c
 26747   013EAC  C525  F4F6         	movff	??_powerUp,tblptrl
 26748   013EB0  C526  F4F7         	movff	??_powerUp+1,tblptrh
 26749   013EB4                     	if	0	;tblptru may be non-zero
 26750   013EB4                     	endif
 26751   013EB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26752   013EB4  0E00               	movlw	low (__pmediumconst shr (0+16))
 26753   013EB6  6EF8               	movwf	tblptru,c
 26754   013EB8                     	endif
 26755   013EB8  0009               	tblrd		*+
 26756   013EBA  50F5               	movf	tablat,w,c
 26757   013EBC  0009               	tblrd		*+
 26758   013EBE  10F5               	iorwf	tablat,w,c
 26759   013EC0  0009               	tblrd		*+
 26760   013EC2  10F5               	iorwf	tablat,w,c
 26761   013EC4  B4D8               	btfsc	status,2,c
 26762   013EC6  D02A               	goto	u10639
 26763                           
 26764                           ;../../VLCBlib_PIC/vlcb.c: 898:             services[i]->powerUp();
 26765   013EC8  5027               	movf	powerUp@i^(0+1280),w,c
 26766   013ECA  0D02               	mullw	2
 26767   013ECC  0E39               	movlw	low _services
 26768   013ECE  24F3               	addwf	243,w,c
 26769   013ED0  6EF6               	movwf	tblptrl,c
 26770   013ED2  0EFF               	movlw	high _services
 26771   013ED4  20F4               	addwfc	244,w,c
 26772   013ED6  6EF7               	movwf	tblptrh,c
 26773   013ED8                     	if	1	;There are 3 active tblptr bytes
 26774   013ED8  6AF8               	clrf	tblptru,c
 26775   013EDA  0E00               	movlw	low (__pmediumconst shr (0+16))
 26776   013EDC  22F8               	addwfc	tblptru,f,c
 26777   013EDE                     	endif
 26778   013EDE  0009               	tblrd		*+
 26779   013EE0  C4F5 F525          	movff	tablat,??_powerUp
 26780   013EE4  0009               	tblrd		*+
 26781   013EE6  C4F5 F526          	movff	tablat,??_powerUp+1
 26782   013EEA  0E05               	movlw	5
 26783   013EEC  2625               	addwf	??_powerUp^(0+1280),f,c
 26784   013EEE  0E00               	movlw	0
 26785   013EF0  2226               	addwfc	(??_powerUp+1)^(0+1280),f,c
 26786   013EF2  C525  F4F6         	movff	??_powerUp,tblptrl
 26787   013EF6  C526  F4F7         	movff	??_powerUp+1,tblptrh
 26788   013EFA                     	if	0	;tblptru may be non-zero
 26789   013EFA                     	endif
 26790   013EFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26791   013EFA  0E00               	movlw	low (__pmediumconst shr (0+16))
 26792   013EFC  6EF8               	movwf	tblptru,c
 26793   013EFE                     	endif
 26794   013EFE  D801               	call	u10638
 26795   013F00  D00D               	goto	u10639
 26796   013F02                     u10638:
 26797   013F02  0005               	push	
 26798   013F04  6EFA               	movwf	pclath,c
 26799   013F06  0009               	tblrd		*+
 26800   013F08  50F5               	movf	tablat,w,c
 26801   013F0A  6EFD               	movwf	tosl,c
 26802   013F0C  0009               	tblrd		*+
 26803   013F0E  50F5               	movf	tablat,w,c
 26804   013F10  6EFE               	movwf	tosh,c
 26805   013F12  0009               	tblrd		*+
 26806   013F14  50F5               	movf	tablat,w,c
 26807   013F16  6EFF               	movwf	tosu,c
 26808   013F18  50FA               	movf	pclath,w,c
 26809   013F1A  0012               	return		;indir
 26810   013F1C                     u10639:
 26811                           
 26812                           ;../../VLCBlib_PIC/vlcb.c: 900:     }
 26813   013F1C  2A27               	incf	powerUp@i^(0+1280),f,c
 26814   013F1E  0E07               	movlw	7
 26815   013F20  6427               	cpfsgt	powerUp@i^(0+1280),c
 26816   013F22  D79E               	goto	l12311
 26817   013F24  0012               	return	
 26818   013F26                     __end_of_powerUp:
 26819                           	callstack 0
 26820                           
 26821 ;; *************** function _producerPowerUp *****************
 26822 ;; Defined at:
 26823 ;;		line 98 in file "../../VLCBlib_PIC/event_producer_simple.c"
 26824 ;; Parameters:    Size  Location     Type
 26825 ;;		None
 26826 ;; Auto vars:     Size  Location     Type
 26827 ;;  i               1    0[COMRAM] unsigned char 
 26828 ;; Return value:  Size  Location     Type
 26829 ;;                  1    wreg      void 
 26830 ;; Registers used:
 26831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26832 ;; Tracked objects:
 26833 ;;		On entry : 0/0
 26834 ;;		On exit  : 0/0
 26835 ;;		Unchanged: 0/0
 26836 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26838 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26840 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26841 ;;Total ram usage:        1 bytes
 26842 ;; Hardware stack levels used: 1
 26843 ;; Hardware stack levels required when called: 1
 26844 ;; This function calls:
 26845 ;;		Nothing
 26846 ;; This function is called by:
 26847 ;;		_powerUp
 26848 ;; This function uses a non-reentrant model
 26849 ;;
 26850                           
 26851                           	psect	text7
 26852   016140                     __ptext7:
 26853                           	callstack 0
 26854   016140                     _producerPowerUp:
 26855                           	callstack 124
 26856                           
 26857                           ;../../VLCBlib_PIC/event_producer_simple.c: 99:     uint8_t i;;../../VLCBlib_PIC/event_p
      +                          roducer_simple.c: 100:     for (i=1; i <= 1; i++) {
 26858                           
 26859                           ;incstack = 0
 26860   016140  0E01               	movlw	1
 26861   016142  6E01               	movwf	producerPowerUp@i^(0+1280),c
 26862   016144                     l12217:
 26863                           
 26864                           ;../../VLCBlib_PIC/event_producer_simple.c: 101:         producerDiagnostics[i].asUint =
      +                           0;
 26865   016144  5001               	movf	producerPowerUp@i^(0+1280),w,c
 26866   016146  0D02               	mullw	2
 26867   016148  0EC1               	movlw	low _producerDiagnostics
 26868   01614A  24F3               	addwf	243,w,c
 26869   01614C  6ED9               	movwf	fsr2l,c
 26870   01614E  0E05               	movlw	high _producerDiagnostics
 26871   016150  20F4               	addwfc	prodh,w,c
 26872   016152  6EDA               	movwf	fsr2h,c
 26873   016154  6ADE               	clrf	postinc2,c
 26874   016156  6ADD               	clrf	postdec2,c
 26875                           
 26876                           ;../../VLCBlib_PIC/event_producer_simple.c: 102:     }
 26877   016158  2A01               	incf	producerPowerUp@i^(0+1280),f,c
 26878   01615A  0E01               	movlw	1
 26879   01615C  6401               	cpfsgt	producerPowerUp@i^(0+1280),c
 26880   01615E  D7F2               	goto	l12217
 26881                           
 26882                           ;../../VLCBlib_PIC/event_producer_simple.c: 103:     producerDiagnostics[0].asUint = 1;
 26883   016160  0E00               	movlw	0
 26884   016162  0105               	movlb	5	; () banked
 26885   016164  6FC2               	movwf	(_producerDiagnostics+1)& (0+255),b
 26886   016166  0E01               	movlw	1
 26887   016168  6FC1               	movwf	_producerDiagnostics& (0+255),b
 26888                           
 26889                           ; BSR set to: 5
 26890   01616A  0012               	return		;funcret
 26891   01616C                     __end_of_producerPowerUp:
 26892                           	callstack 0
 26893                           
 26894 ;; *************** function _nvPowerUp *****************
 26895 ;; Defined at:
 26896 ;;		line 136 in file "../../VLCBlib_PIC/nv.c"
 26897 ;; Parameters:    Size  Location     Type
 26898 ;;		None
 26899 ;; Auto vars:     Size  Location     Type
 26900 ;;  i               1   17[COMRAM] unsigned char 
 26901 ;; Return value:  Size  Location     Type
 26902 ;;                  1    wreg      void 
 26903 ;; Registers used:
 26904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26905 ;; Tracked objects:
 26906 ;;		On entry : 0/0
 26907 ;;		On exit  : 0/0
 26908 ;;		Unchanged: 0/0
 26909 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26913 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26914 ;;Total ram usage:        1 bytes
 26915 ;; Hardware stack levels used: 1
 26916 ;; Hardware stack levels required when called: 4
 26917 ;; This function calls:
 26918 ;;		_loadNvCache
 26919 ;; This function is called by:
 26920 ;;		_powerUp
 26921 ;; This function uses a non-reentrant model
 26922 ;;
 26923                           
 26924                           	psect	text8
 26925   0160B2                     __ptext8:
 26926                           	callstack 0
 26927   0160B2                     _nvPowerUp:
 26928                           	callstack 121
 26929                           
 26930                           ;../../VLCBlib_PIC/nv.c: 138:     uint8_t i;;../../VLCBlib_PIC/nv.c: 139:     for (i=1; 
      +                          i <= 2; i++) {
 26931                           
 26932                           ; BSR set to: 5
 26933                           ;incstack = 0
 26934   0160B2  0E01               	movlw	1
 26935   0160B4  6E12               	movwf	nvPowerUp@i^(0+1280),c
 26936   0160B6                     l12097:
 26937                           
 26938                           ;../../VLCBlib_PIC/nv.c: 140:         nvDiagnostics[i].asUint = 0;
 26939   0160B6  5012               	movf	nvPowerUp@i^(0+1280),w,c
 26940   0160B8  0D02               	mullw	2
 26941   0160BA  0EB0               	movlw	low _nvDiagnostics
 26942   0160BC  24F3               	addwf	243,w,c
 26943   0160BE  6ED9               	movwf	fsr2l,c
 26944   0160C0  0E05               	movlw	high _nvDiagnostics
 26945   0160C2  20F4               	addwfc	prodh,w,c
 26946   0160C4  6EDA               	movwf	fsr2h,c
 26947   0160C6  6ADE               	clrf	postinc2,c
 26948   0160C8  6ADD               	clrf	postdec2,c
 26949                           
 26950                           ;../../VLCBlib_PIC/nv.c: 141:     }
 26951   0160CA  2A12               	incf	nvPowerUp@i^(0+1280),f,c
 26952   0160CC  0E02               	movlw	2
 26953   0160CE  6412               	cpfsgt	nvPowerUp@i^(0+1280),c
 26954   0160D0  D7F2               	goto	l12097
 26955                           
 26956                           ;../../VLCBlib_PIC/nv.c: 142:     nvDiagnostics[0x00].asUint = 2;
 26957   0160D2  0E00               	movlw	0
 26958   0160D4  0105               	movlb	5	; () banked
 26959   0160D6  6FB1               	movwf	(_nvDiagnostics+1)& (0+255),b
 26960   0160D8  0E02               	movlw	2
 26961   0160DA  6FB0               	movwf	_nvDiagnostics& (0+255),b
 26962                           
 26963                           ; BSR set to: 5
 26964                           ;../../VLCBlib_PIC/nv.c: 145:     loadNvCache();
 26965   0160DC  ECBF  F0AD         	call	_loadNvCache	;wreg free
 26966   0160E0  0012               	return		;funcret
 26967   0160E2                     __end_of_nvPowerUp:
 26968                           	callstack 0
 26969                           
 26970 ;; *************** function _mnsPowerUp *****************
 26971 ;; Defined at:
 26972 ;;		line 297 in file "../../VLCBlib_PIC/mns.c"
 26973 ;; Parameters:    Size  Location     Type
 26974 ;;		None
 26975 ;; Auto vars:     Size  Location     Type
 26976 ;;  temp            2   13[COMRAM] int 
 26977 ;;  i               1   12[COMRAM] unsigned char 
 26978 ;; Return value:  Size  Location     Type
 26979 ;;                  1    wreg      void 
 26980 ;; Registers used:
 26981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26982 ;; Tracked objects:
 26983 ;;		On entry : 0/0
 26984 ;;		On exit  : 0/0
 26985 ;;		Unchanged: 0/0
 26986 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 26987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26988 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26990 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 26991 ;;Total ram usage:        3 bytes
 26992 ;; Hardware stack levels used: 1
 26993 ;; Hardware stack levels required when called: 3
 26994 ;; This function calls:
 26995 ;;		_readNVM
 26996 ;;		_setLEDsByMode
 26997 ;;		_tickGet
 26998 ;; This function is called by:
 26999 ;;		_powerUp
 27000 ;; This function uses a non-reentrant model
 27001 ;;
 27002                           
 27003                           	psect	text9
 27004   0136A0                     __ptext9:
 27005                           	callstack 0
 27006   0136A0                     _mnsPowerUp:
 27007                           	callstack 122
 27008                           
 27009                           ;../../VLCBlib_PIC/mns.c: 298:     int temp;;../../VLCBlib_PIC/mns.c: 299:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 301:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
 27010                           
 27011                           ;incstack = 0
 27012   0136A0  0EFD               	movlw	253
 27013   0136A2  6E07               	movwf	readNVM@index^(0+1280),c
 27014   0136A4  0E03               	movlw	3
 27015   0136A6  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 27016   0136A8  0E00               	movlw	0
 27017   0136AA  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 27018   0136AC  0E00               	movlw	0
 27019   0136AE  EC42  F0AB         	call	_readNVM
 27020   0136B2  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 27021   0136B6  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 27022                           
 27023                           ;../../VLCBlib_PIC/mns.c: 302:     if (temp < 0) {
 27024   0136BA  AE0F               	btfss	(mnsPowerUp@temp+1)^(0+1280),7,c
 27025   0136BC  D003               	goto	l1534
 27026   0136BE                     u10130:
 27027                           
 27028                           ;../../VLCBlib_PIC/mns.c: 303:         nn.bytes.hi = 0;
 27029   0136BE  6A5F               	clrf	(_nn+1)^(0+1280),c
 27030                           
 27031                           ;../../VLCBlib_PIC/mns.c: 304:         nn.bytes.lo = 0;
 27032   0136C0  6A5E               	clrf	_nn^(0+1280),c
 27033                           
 27034                           ;../../VLCBlib_PIC/mns.c: 305:     } else {
 27035   0136C2  D013               	goto	l11931
 27036   0136C4                     l1534:
 27037                           
 27038                           ;../../VLCBlib_PIC/mns.c: 306:         nn.bytes.hi = (uint8_t)temp;
 27039   0136C4  C50E  F55F         	movff	mnsPowerUp@temp,_nn+1
 27040                           
 27041                           ;../../VLCBlib_PIC/mns.c: 307:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
 27042   0136C8  0EFC               	movlw	252
 27043   0136CA  6E07               	movwf	readNVM@index^(0+1280),c
 27044   0136CC  0E03               	movlw	3
 27045   0136CE  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 27046   0136D0  0E00               	movlw	0
 27047   0136D2  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 27048   0136D4  0E00               	movlw	0
 27049   0136D6  EC42  F0AB         	call	_readNVM
 27050   0136DA  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 27051   0136DE  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 27052                           
 27053                           ;../../VLCBlib_PIC/mns.c: 308:         if (temp < 0) {
 27054   0136E2  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 27055   0136E4  D7EC               	goto	u10130
 27056                           
 27057                           ;../../VLCBlib_PIC/mns.c: 312:             nn.bytes.lo = (uint8_t)temp;
 27058   0136E6  C50E  F55E         	movff	mnsPowerUp@temp,_nn
 27059   0136EA                     l11931:
 27060                           
 27061                           ;../../VLCBlib_PIC/mns.c: 315:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
 27062   0136EA  0EFB               	movlw	251
 27063   0136EC  6E07               	movwf	readNVM@index^(0+1280),c
 27064   0136EE  0E03               	movlw	3
 27065   0136F0  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 27066   0136F2  0E00               	movlw	0
 27067   0136F4  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 27068   0136F6  0E00               	movlw	0
 27069   0136F8  EC42  F0AB         	call	_readNVM
 27070   0136FC  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 27071   013700  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 27072                           
 27073                           ;../../VLCBlib_PIC/mns.c: 316:     if (temp < 0) {
 27074   013704  AE0F               	btfss	(mnsPowerUp@temp+1)^(0+1280),7,c
 27075   013706  D003               	goto	l1538
 27076                           
 27077                           ;../../VLCBlib_PIC/mns.c: 317:         mode_state = MODE_UNINITIALISED;
 27078   013708  0105               	movlb	5	; () banked
 27079   01370A  6990               	setf	_mode_state& (0+255),b
 27080                           
 27081                           ;../../VLCBlib_PIC/mns.c: 318:     } else {
 27082   01370C  D002               	goto	l1539
 27083   01370E                     l1538:
 27084                           
 27085                           ;../../VLCBlib_PIC/mns.c: 319:         mode_state = (uint8_t)temp;
 27086   01370E  C50E  F590         	movff	mnsPowerUp@temp,_mode_state
 27087   013712                     l1539:
 27088                           
 27089                           ;../../VLCBlib_PIC/mns.c: 321:     setupModePreviousMode = mode_state;
 27090   013712  C590  F58D         	movff	_mode_state,_setupModePreviousMode
 27091                           
 27092                           ;../../VLCBlib_PIC/mns.c: 322:     temp = readNVM(EEPROM_NVM_TYPE, 0x3F9);
 27093   013716  0EF9               	movlw	249
 27094   013718  6E07               	movwf	readNVM@index^(0+1280),c
 27095   01371A  0E03               	movlw	3
 27096   01371C  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 27097   01371E  0E00               	movlw	0
 27098   013720  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 27099   013722  0E00               	movlw	0
 27100   013724  EC42  F0AB         	call	_readNVM
 27101   013728  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 27102   01372C  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 27103                           
 27104                           ;../../VLCBlib_PIC/mns.c: 323:     if (temp < 0) {
 27105   013730  AE0F               	btfss	(mnsPowerUp@temp+1)^(0+1280),7,c
 27106   013732  D003               	goto	l1540
 27107                           
 27108                           ;../../VLCBlib_PIC/mns.c: 324:         mode_flags = 0;
 27109   013734  0105               	movlb	5	; () banked
 27110   013736  6B9F               	clrf	_mode_flags& (0+255),b
 27111                           
 27112                           ;../../VLCBlib_PIC/mns.c: 325:     } else {
 27113   013738  D002               	goto	l11943
 27114   01373A                     l1540:
 27115                           
 27116                           ;../../VLCBlib_PIC/mns.c: 326:         mode_flags = (uint8_t)temp;
 27117   01373A  C50E  F59F         	movff	mnsPowerUp@temp,_mode_flags
 27118   01373E                     l11943:
 27119                           
 27120                           ;../../VLCBlib_PIC/mns.c: 328:     mode_flags &= ~8;
 27121   01373E  0105               	movlb	5	; () banked
 27122   013740  979F               	bcf	_mode_flags& (0+255),3,b
 27123                           
 27124                           ;../../VLCBlib_PIC/mns.c: 330:     mode_flags |= 8;
 27125   013742  879F               	bsf	_mode_flags& (0+255),3,b
 27126                           
 27127                           ; BSR set to: 5
 27128                           ;../../VLCBlib_PIC/mns.c: 332:     last_mode_flags = mode_flags;
 27129   013744  C59F  F58E         	movff	_mode_flags,_last_mode_flags
 27130                           
 27131                           ; BSR set to: 5
 27132                           ;../../VLCBlib_PIC/mns.c: 333:     setLEDsByMode();
 27133   013748  EC40  F0B0         	call	_setLEDsByMode	;wreg free
 27134                           
 27135                           ;../../VLCBlib_PIC/mns.c: 335:     pbTimer.val = tickGet();
 27136   01374C  EC50  F0AC         	call	_tickGet	;wreg free
 27137   013750  C501  F560         	movff	?_tickGet,_pbTimer
 27138   013754  C502  F561         	movff	?_tickGet+1,_pbTimer+1
 27139   013758  C503  F562         	movff	?_tickGet+2,_pbTimer+2
 27140   01375C  C504  F563         	movff	?_tickGet+3,_pbTimer+3
 27141                           
 27142                           ;../../VLCBlib_PIC/mns.c: 336:     pbWasPushed = FALSE;
 27143   013760  0105               	movlb	5	; () banked
 27144   013762  6B8C               	clrf	_pbWasPushed& (0+255),b
 27145                           
 27146                           ; BSR set to: 5
 27147                           ;../../VLCBlib_PIC/mns.c: 340:     for (i=1; i<= 6; i++) {
 27148   013764  0E01               	movlw	1
 27149   013766  6E0D               	movwf	mnsPowerUp@i^(0+1280),c
 27150   013768                     l11959:
 27151                           
 27152                           ;../../VLCBlib_PIC/mns.c: 341:         mnsDiagnostics[i].asInt = 0;
 27153   013768  500D               	movf	mnsPowerUp@i^(0+1280),w,c
 27154   01376A  0D02               	mullw	2
 27155   01376C  0EA2               	movlw	low _mnsDiagnostics
 27156   01376E  24F3               	addwf	243,w,c
 27157   013770  6ED9               	movwf	fsr2l,c
 27158   013772  0E05               	movlw	high _mnsDiagnostics
 27159   013774  20F4               	addwfc	prodh,w,c
 27160   013776  6EDA               	movwf	fsr2h,c
 27161   013778  6ADE               	clrf	postinc2,c
 27162   01377A  6ADD               	clrf	postdec2,c
 27163                           
 27164                           ;../../VLCBlib_PIC/mns.c: 342:     }
 27165   01377C  2A0D               	incf	mnsPowerUp@i^(0+1280),f,c
 27166   01377E  0E06               	movlw	6
 27167   013780  640D               	cpfsgt	mnsPowerUp@i^(0+1280),c
 27168   013782  D7F2               	goto	l11959
 27169                           
 27170                           ;../../VLCBlib_PIC/mns.c: 343:     mnsDiagnostics[0x00].asInt = 6;
 27171   013784  0E00               	movlw	0
 27172   013786  0105               	movlb	5	; () banked
 27173   013788  6FA3               	movwf	(_mnsDiagnostics+1)& (0+255),b
 27174   01378A  0E06               	movlw	6
 27175   01378C  6FA2               	movwf	_mnsDiagnostics& (0+255),b
 27176                           
 27177                           ; BSR set to: 5
 27178                           ;../../VLCBlib_PIC/mns.c: 345:     heartbeatSequence = 0;
 27179   01378E  6B8B               	clrf	_heartbeatSequence& (0+255),b
 27180                           
 27181                           ;../../VLCBlib_PIC/mns.c: 346:     heartbeatTimer.val = 0;
 27182   013790  0E00               	movlw	0
 27183   013792  0106               	movlb	6	; () banked
 27184   013794  6F96               	movwf	_heartbeatTimer& (0+255),b
 27185   013796  0E00               	movlw	0
 27186   013798  6F97               	movwf	(_heartbeatTimer+1)& (0+255),b
 27187   01379A  0E00               	movlw	0
 27188   01379C  6F98               	movwf	(_heartbeatTimer+2)& (0+255),b
 27189   01379E  0E00               	movlw	0
 27190   0137A0  6F99               	movwf	(_heartbeatTimer+3)& (0+255),b
 27191                           
 27192                           ;../../VLCBlib_PIC/mns.c: 347:     uptimeTimer.val = 0;
 27193   0137A2  0E00               	movlw	0
 27194   0137A4  6F92               	movwf	_uptimeTimer& (0+255),b
 27195   0137A6  0E00               	movlw	0
 27196   0137A8  6F93               	movwf	(_uptimeTimer+1)& (0+255),b
 27197   0137AA  0E00               	movlw	0
 27198   0137AC  6F94               	movwf	(_uptimeTimer+2)& (0+255),b
 27199   0137AE  0E00               	movlw	0
 27200   0137B0  6F95               	movwf	(_uptimeTimer+3)& (0+255),b
 27201                           
 27202                           ; BSR set to: 6
 27203   0137B2  0012               	return		;funcret
 27204   0137B4                     __end_of_mnsPowerUp:
 27205                           	callstack 0
 27206                           
 27207 ;; *************** function _consumerPowerUp *****************
 27208 ;; Defined at:
 27209 ;;		line 92 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 27210 ;; Parameters:    Size  Location     Type
 27211 ;;		None
 27212 ;; Auto vars:     Size  Location     Type
 27213 ;;  temp            1    0[COMRAM] unsigned char 
 27214 ;; Return value:  Size  Location     Type
 27215 ;;                  1    wreg      void 
 27216 ;; Registers used:
 27217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27218 ;; Tracked objects:
 27219 ;;		On entry : 0/0
 27220 ;;		On exit  : 0/0
 27221 ;;		Unchanged: 0/0
 27222 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27224 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27226 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27227 ;;Total ram usage:        1 bytes
 27228 ;; Hardware stack levels used: 1
 27229 ;; Hardware stack levels required when called: 1
 27230 ;; This function calls:
 27231 ;;		Nothing
 27232 ;; This function is called by:
 27233 ;;		_powerUp
 27234 ;; This function uses a non-reentrant model
 27235 ;;
 27236                           
 27237                           	psect	text10
 27238   01616C                     __ptext10:
 27239                           	callstack 0
 27240   01616C                     _consumerPowerUp:
 27241                           	callstack 124
 27242                           
 27243                           ;../../VLCBlib_PIC/event_consumer_simple.c: 94:     uint8_t temp;;../../VLCBlib_PIC/even
      +                          t_consumer_simple.c: 96:     for (temp=1; temp<=2; temp++) {
 27244                           
 27245                           ; BSR set to: 6
 27246                           ;incstack = 0
 27247   01616C  0E01               	movlw	1
 27248   01616E  6E01               	movwf	consumerPowerUp@temp^(0+1280),c
 27249   016170                     l11891:
 27250                           
 27251                           ;../../VLCBlib_PIC/event_consumer_simple.c: 97:         consumerDiagnostics[temp].asUint
      +                           = 0;
 27252   016170  5001               	movf	consumerPowerUp@temp^(0+1280),w,c
 27253   016172  0D02               	mullw	2
 27254   016174  0EB6               	movlw	low _consumerDiagnostics
 27255   016176  24F3               	addwf	243,w,c
 27256   016178  6ED9               	movwf	fsr2l,c
 27257   01617A  0E05               	movlw	high _consumerDiagnostics
 27258   01617C  20F4               	addwfc	prodh,w,c
 27259   01617E  6EDA               	movwf	fsr2h,c
 27260   016180  6ADE               	clrf	postinc2,c
 27261   016182  6ADD               	clrf	postdec2,c
 27262                           
 27263                           ;../../VLCBlib_PIC/event_consumer_simple.c: 98:     }
 27264   016184  2A01               	incf	consumerPowerUp@temp^(0+1280),f,c
 27265   016186  0E02               	movlw	2
 27266   016188  6401               	cpfsgt	consumerPowerUp@temp^(0+1280),c
 27267   01618A  D7F2               	goto	l11891
 27268                           
 27269                           ;../../VLCBlib_PIC/event_consumer_simple.c: 99:     consumerDiagnostics[0].asUint = 2;
 27270   01618C  0E00               	movlw	0
 27271   01618E  0105               	movlb	5	; () banked
 27272   016190  6FB7               	movwf	(_consumerDiagnostics+1)& (0+255),b
 27273   016192  0E02               	movlw	2
 27274   016194  6FB6               	movwf	_consumerDiagnostics& (0+255),b
 27275                           
 27276                           ; BSR set to: 5
 27277   016196  0012               	return		;funcret
 27278   016198                     __end_of_consumerPowerUp:
 27279                           	callstack 0
 27280                           
 27281 ;; *************** function _canPowerUp *****************
 27282 ;; Defined at:
 27283 ;;		line 252 in file "../../VLCBlib_PIC/can18_can_2.c"
 27284 ;; Parameters:    Size  Location     Type
 27285 ;;		None
 27286 ;; Auto vars:     Size  Location     Type
 27287 ;;  txFifoObj       3    0        PTR unsigned char 
 27288 ;;  temp            2   12[COMRAM] int 
 27289 ;; Return value:  Size  Location     Type
 27290 ;;                  1    wreg      void 
 27291 ;; Registers used:
 27292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27293 ;; Tracked objects:
 27294 ;;		On entry : 0/0
 27295 ;;		On exit  : 0/0
 27296 ;;		Unchanged: 0/0
 27297 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27301 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27302 ;;Total ram usage:        2 bytes
 27303 ;; Hardware stack levels used: 1
 27304 ;; Hardware stack levels required when called: 3
 27305 ;; This function calls:
 27306 ;;		_CAN1_OperationModeSet
 27307 ;;		_prepareSelfEnumResponse
 27308 ;;		_readNVM
 27309 ;;		_tickGet
 27310 ;; This function is called by:
 27311 ;;		_powerUp
 27312 ;; This function uses a non-reentrant model
 27313 ;;
 27314                           
 27315                           	psect	text11
 27316   013196                     __ptext11:
 27317                           	callstack 0
 27318   013196                     _canPowerUp:
 27319                           	callstack 122
 27320                           
 27321                           ;../../VLCBlib_PIC/can18_can_2.c: 253:     int temp;;../../VLCBlib_PIC/can18_can_2.c: 25
      +                          4:     uint8_t* txFifoObj;;../../VLCBlib_PIC/can18_can_2.c: 257:     rxQueue.readIndex =
      +                           0;
 27322                           
 27323                           ; BSR set to: 5
 27324                           ;incstack = 0
 27325   013196  0105               	movlb	5	; () banked
 27326   013198  6BBE               	clrf	(_rxQueue+2)& (0+255),b
 27327                           
 27328                           ;../../VLCBlib_PIC/can18_can_2.c: 258:     rxQueue.writeIndex = 0;
 27329   01319A  6BBF               	clrf	(_rxQueue+3)& (0+255),b
 27330                           
 27331                           ; BSR set to: 5
 27332                           ;../../VLCBlib_PIC/can18_can_2.c: 259:     rxQueue.messages = rxBuffers;
 27333   01319C  0E44               	movlw	low _rxBuffers
 27334   01319E  6FBC               	movwf	_rxQueue& (0+255),b
 27335   0131A0  0E07               	movlw	high _rxBuffers
 27336   0131A2  6FBD               	movwf	(_rxQueue+1)& (0+255),b
 27337                           
 27338                           ; BSR set to: 5
 27339                           ;../../VLCBlib_PIC/can18_can_2.c: 260:     rxQueue.size = 8;
 27340   0131A4  0E08               	movlw	8
 27341   0131A6  6FC0               	movwf	(_rxQueue+4)& (0+255),b
 27342                           
 27343                           ; BSR set to: 5
 27344                           ;../../VLCBlib_PIC/can18_can_2.c: 262:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
 27345   0131A8  0EFE               	movlw	254
 27346   0131AA  6E07               	movwf	readNVM@index^(0+1280),c
 27347   0131AC  0E03               	movlw	3
 27348   0131AE  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 27349   0131B0  0E00               	movlw	0
 27350   0131B2  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 27351   0131B4  0E00               	movlw	0
 27352   0131B6  EC42  F0AB         	call	_readNVM
 27353   0131BA  C507  F50D         	movff	?_readNVM,canPowerUp@temp
 27354   0131BE  C508  F50E         	movff	?_readNVM+1,canPowerUp@temp+1
 27355                           
 27356                           ;../../VLCBlib_PIC/can18_can_2.c: 263:     if (temp < 0) {
 27357   0131C2  AE0E               	btfss	(canPowerUp@temp+1)^(0+1280),7,c
 27358   0131C4  D003               	goto	l813
 27359                           
 27360                           ;../../VLCBlib_PIC/can18_can_2.c: 265:         canId = 0;
 27361   0131C6  0105               	movlb	5	; () banked
 27362   0131C8  6B95               	clrf	_canId& (0+255),b
 27363                           
 27364                           ;../../VLCBlib_PIC/can18_can_2.c: 266:     } else {
 27365   0131CA  D002               	goto	l11697
 27366   0131CC                     l813:
 27367                           
 27368                           ;../../VLCBlib_PIC/can18_can_2.c: 267:         canId = (uint8_t)temp;
 27369   0131CC  C50D  F595         	movff	canPowerUp@temp,_canId
 27370   0131D0                     l11697:
 27371                           
 27372                           ;../../VLCBlib_PIC/can18_can_2.c: 271:     for (temp=1; temp<18; temp++) {
 27373   0131D0  0E00               	movlw	0
 27374   0131D2  6E0E               	movwf	(canPowerUp@temp+1)^(0+1280),c
 27375   0131D4  0E01               	movlw	1
 27376   0131D6  6E0D               	movwf	canPowerUp@temp^(0+1280),c
 27377   0131D8                     l11703:
 27378                           
 27379                           ;../../VLCBlib_PIC/can18_can_2.c: 272:         canDiagnostics[temp].asUint = 0;
 27380   0131D8  90D8               	bcf	status,0,c
 27381   0131DA  340D               	rlcf	canPowerUp@temp^(0+1280),w,c
 27382   0131DC  6ED9               	movwf	fsr2l,c
 27383   0131DE  340E               	rlcf	(canPowerUp@temp+1)^(0+1280),w,c
 27384   0131E0  6EDA               	movwf	fsr2h,c
 27385   0131E2  0EA2               	movlw	low _canDiagnostics
 27386   0131E4  26D9               	addwf	fsr2l,f,c
 27387   0131E6  0E06               	movlw	high _canDiagnostics
 27388   0131E8  22DA               	addwfc	fsr2h,f,c
 27389   0131EA  6ADE               	clrf	postinc2,c
 27390   0131EC  6ADD               	clrf	postdec2,c
 27391                           
 27392                           ;../../VLCBlib_PIC/can18_can_2.c: 273:     }
 27393   0131EE  4A0D               	infsnz	canPowerUp@temp^(0+1280),f,c
 27394   0131F0  2A0E               	incf	(canPowerUp@temp+1)^(0+1280),f,c
 27395   0131F2  BE0E               	btfsc	(canPowerUp@temp+1)^(0+1280),7,c
 27396   0131F4  D7F1               	goto	l11703
 27397   0131F6  500E               	movf	(canPowerUp@temp+1)^(0+1280),w,c
 27398   0131F8  E104               	bnz	u10040
 27399   0131FA  0E12               	movlw	18
 27400   0131FC  5C0D               	subwf	canPowerUp@temp^(0+1280),w,c
 27401   0131FE  A0D8               	btfss	status,0,c
 27402   013200  D7EB               	goto	l11703
 27403   013202                     u10040:
 27404                           
 27405                           ;../../VLCBlib_PIC/can18_can_2.c: 274:     canDiagnostics[0x00].asUint = 18;
 27406   013202  0E00               	movlw	0
 27407   013204  0106               	movlb	6	; () banked
 27408   013206  6FA3               	movwf	(_canDiagnostics+1)& (0+255),b
 27409   013208  0E12               	movlw	18
 27410   01320A  6FA2               	movwf	_canDiagnostics& (0+255),b
 27411                           
 27412                           ; BSR set to: 6
 27413                           ;../../VLCBlib_PIC/can18_can_2.c: 277:     canTransmitFailed=0;
 27414   01320C  0105               	movlb	5	; () banked
 27415   01320E  6B94               	clrf	_canTransmitFailed& (0+255),b
 27416                           
 27417                           ;../../VLCBlib_PIC/can18_can_2.c: 280:     RB2PPS = 0x46;
 27418   013210  0E46               	movlw	70
 27419   013212  0102               	movlb	2	; () banked
 27420   013214  6F0B               	movwf	11,b	;volatile
 27421                           
 27422                           ;../../VLCBlib_PIC/can18_can_2.c: 281:     CANRXPPS = 013 ;
 27423   013216  0E0B               	movlw	11
 27424   013218  6F3D               	movwf	61,b	;volatile
 27425                           
 27426                           ; BSR set to: 2
 27427                           ;../../VLCBlib_PIC/can18_can_2.c: 282:     TRISBbits.TRISB2 = 0;
 27428   01321A  94C7               	bcf	199,2,c	;volatile
 27429                           
 27430                           ; BSR set to: 2
 27431                           ;../../VLCBlib_PIC/can18_can_2.c: 283:     TRISBbits.TRISB3 = 1;
 27432   01321C  86C7               	bsf	199,3,c	;volatile
 27433                           
 27434                           ; BSR set to: 2
 27435                           ;../../VLCBlib_PIC/can18_can_2.c: 284:     IPR5 = 0;
 27436   01321E  0103               	movlb	3	; () banked
 27437   013220  6B67               	clrf	103,b	;volatile
 27438                           
 27439                           ; BSR set to: 3
 27440                           ;../../VLCBlib_PIC/can18_can_2.c: 286:     C1CONHbits.ON = 1;
 27441   013222  0101               	movlb	1	; () banked
 27442   013224  8F01               	bsf	1,7,b	;volatile
 27443                           
 27444                           ; BSR set to: 1
 27445                           ;../../VLCBlib_PIC/can18_can_2.c: 289:     if (CAN_OP_MODE_REQUEST_SUCCESS == CAN1_Opera
      +                          tionModeSet(CAN_CONFIGURATION_MODE)) {
 27446   013226  0E04               	movlw	4
 27447   013228  ECE4  F0AD         	call	_CAN1_OperationModeSet
 27448   01322C  0900               	iorlw	0
 27449   01322E  A4D8               	btfss	status,2,c
 27450   013230  D043               	goto	l11807
 27451                           
 27452                           ;../../VLCBlib_PIC/can18_can_2.c: 293:         C1FIFOBA = 0x3BB0;
 27453   013232  0EB0               	movlw	176
 27454   013234  0101               	movlb	1	; () banked
 27455   013236  6F4C               	movwf	76,b	;volatile
 27456   013238  0E3B               	movlw	59
 27457   01323A  6F4D               	movwf	77,b	;volatile
 27458   01323C  0E00               	movlw	0
 27459   01323E  6F4E               	movwf	78,b	;volatile
 27460   013240  0E00               	movlw	0
 27461   013242  6F4F               	movwf	79,b	;volatile
 27462                           
 27463                           ; BSR set to: 1
 27464                           ;../../VLCBlib_PIC/can18_can_2.c: 295:         C1CONL = 0x00;
 27465   013244  6B00               	clrf	0,b	;volatile
 27466                           
 27467                           ;../../VLCBlib_PIC/can18_can_2.c: 296:         C1CONH = 0x87;
 27468   013246  0E87               	movlw	135
 27469   013248  6F01               	movwf	1,b	;volatile
 27470                           
 27471                           ;../../VLCBlib_PIC/can18_can_2.c: 297:         C1CONU = 0x10;
 27472   01324A  0E10               	movlw	16
 27473   01324C  6F02               	movwf	2,b	;volatile
 27474                           
 27475                           ;../../VLCBlib_PIC/can18_can_2.c: 298:         C1CONT = 0x50;
 27476   01324E  0E50               	movlw	80
 27477   013250  6F03               	movwf	3,b	;volatile
 27478                           
 27479                           ; BSR set to: 1
 27480                           ;../../VLCBlib_PIC/can18_can_2.c: 299:         C1NBTCFGL = 0x00;
 27481   013252  6B04               	clrf	4,b	;volatile
 27482                           
 27483                           ;../../VLCBlib_PIC/can18_can_2.c: 300:         C1NBTCFGH = 0x03;
 27484   013254  0E03               	movlw	3
 27485   013256  6F05               	movwf	5,b	;volatile
 27486                           
 27487                           ;../../VLCBlib_PIC/can18_can_2.c: 301:         C1NBTCFGU = 0x02;
 27488   013258  0E02               	movlw	2
 27489   01325A  6F06               	movwf	6,b	;volatile
 27490                           
 27491                           ;../../VLCBlib_PIC/can18_can_2.c: 302:         C1NBTCFGT = 0x3F;
 27492   01325C  0E3F               	movlw	63
 27493   01325E  6F07               	movwf	7,b	;volatile
 27494                           
 27495                           ;../../VLCBlib_PIC/can18_can_2.c: 304:         C1TXQCONL = 0x10;
 27496   013260  0E10               	movlw	16
 27497   013262  6F50               	movwf	80,b	;volatile
 27498                           
 27499                           ;../../VLCBlib_PIC/can18_can_2.c: 305:         C1TXQCONH = 0x04;
 27500   013264  0E04               	movlw	4
 27501   013266  6F51               	movwf	81,b	;volatile
 27502                           
 27503                           ;../../VLCBlib_PIC/can18_can_2.c: 306:         C1TXQCONU = 0x6F;
 27504   013268  0E6F               	movlw	111
 27505   01326A  6F52               	movwf	82,b	;volatile
 27506                           
 27507                           ; BSR set to: 1
 27508                           
 27509                           ; BSR set to: 1
 27510                           
 27511                           ;../../VLCBlib_PIC/can18_can_2.c: 307:         C1TXQCONT = (((8<32) ? (8/4)-2 :
 27512   01326C  0E03               	movlw	3
 27513   01326E  6F53               	movwf	83,b	;volatile
 27514                           
 27515                           ; BSR set to: 1
 27516                           ;../../VLCBlib_PIC/can18_can_2.c: 312:         C1FIFOCON1L = 0x80;
 27517   013270  0E80               	movlw	128
 27518   013272  6F5C               	movwf	92,b	;volatile
 27519                           
 27520                           ; BSR set to: 1
 27521                           ;../../VLCBlib_PIC/can18_can_2.c: 313:         C1FIFOCON1H = 0x04;
 27522   013274  0E04               	movlw	4
 27523   013276  6F5D               	movwf	93,b	;volatile
 27524                           
 27525                           ; BSR set to: 1
 27526                           ;../../VLCBlib_PIC/can18_can_2.c: 314:         C1FIFOCON1U = 0x6F;
 27527   013278  0E6F               	movlw	111
 27528   01327A  6F5E               	movwf	94,b	;volatile
 27529                           
 27530                           ; BSR set to: 1
 27531                           
 27532                           ; BSR set to: 1
 27533                           
 27534                           ;../../VLCBlib_PIC/can18_can_2.c: 315:         C1FIFOCON1T = (((8<32) ? (8/4)-2 :
 27535   01327C  6B5F               	clrf	95,b	;volatile
 27536                           
 27537                           ; BSR set to: 1
 27538                           ;../../VLCBlib_PIC/can18_can_2.c: 320:         C1FIFOCON2L = 0x80;
 27539   01327E  0E80               	movlw	128
 27540   013280  6F68               	movwf	104,b	;volatile
 27541                           
 27542                           ; BSR set to: 1
 27543                           ;../../VLCBlib_PIC/can18_can_2.c: 321:         C1FIFOCON2H = 0x04;
 27544   013282  0E04               	movlw	4
 27545   013284  6F69               	movwf	105,b	;volatile
 27546                           
 27547                           ; BSR set to: 1
 27548                           ;../../VLCBlib_PIC/can18_can_2.c: 322:         C1FIFOCON2U = 0x60;
 27549   013286  0E60               	movlw	96
 27550   013288  6F6A               	movwf	106,b	;volatile
 27551                           
 27552                           ; BSR set to: 1
 27553                           
 27554                           ; BSR set to: 1
 27555                           
 27556                           ;../../VLCBlib_PIC/can18_can_2.c: 323:         C1FIFOCON2T = (((8<32) ? (8/4)-2 :
 27557   01328A  0E1F               	movlw	31
 27558   01328C  6F6B               	movwf	107,b	;volatile
 27559                           
 27560                           ; BSR set to: 1
 27561                           ;../../VLCBlib_PIC/can18_can_2.c: 328:         C1FIFOCON3L = 0x08;
 27562   01328E  0E08               	movlw	8
 27563   013290  6F74               	movwf	116,b	;volatile
 27564                           
 27565                           ; BSR set to: 1
 27566                           ;../../VLCBlib_PIC/can18_can_2.c: 329:         C1FIFOCON3H = 0x04;
 27567   013292  0E04               	movlw	4
 27568   013294  6F75               	movwf	117,b	;volatile
 27569                           
 27570                           ; BSR set to: 1
 27571                           ;../../VLCBlib_PIC/can18_can_2.c: 330:         C1FIFOCON3U = 0x00;
 27572   013296  6B76               	clrf	118,b	;volatile
 27573                           
 27574                           ; BSR set to: 1
 27575                           
 27576                           ; BSR set to: 1
 27577                           
 27578                           ;../../VLCBlib_PIC/can18_can_2.c: 331:         C1FIFOCON3T = (((8<32) ? (8/4)-2 :
 27579   013298  0E1F               	movlw	31
 27580   01329A  6F77               	movwf	119,b	;volatile
 27581                           
 27582                           ; BSR set to: 1
 27583                           ;../../VLCBlib_PIC/can18_can_2.c: 336:         C1FLTOBJ0L = 0x00;
 27584   01329C  6B8C               	clrf	140,b	;volatile
 27585                           
 27586                           ; BSR set to: 1
 27587                           ;../../VLCBlib_PIC/can18_can_2.c: 337:         C1FLTOBJ0H = 0x00;
 27588   01329E  6B8D               	clrf	141,b	;volatile
 27589                           
 27590                           ; BSR set to: 1
 27591                           ;../../VLCBlib_PIC/can18_can_2.c: 338:         C1FLTOBJ0U = 0x00;
 27592   0132A0  6B8E               	clrf	142,b	;volatile
 27593                           
 27594                           ; BSR set to: 1
 27595                           ;../../VLCBlib_PIC/can18_can_2.c: 339:         C1FLTOBJ0T = 0x00;
 27596   0132A2  6B8F               	clrf	143,b	;volatile
 27597                           
 27598                           ; BSR set to: 1
 27599                           ;../../VLCBlib_PIC/can18_can_2.c: 340:         C1MASK0L = 0x00;
 27600   0132A4  6B90               	clrf	144,b	;volatile
 27601                           
 27602                           ; BSR set to: 1
 27603                           ;../../VLCBlib_PIC/can18_can_2.c: 341:         C1MASK0H = 0x00;
 27604   0132A6  6B91               	clrf	145,b	;volatile
 27605                           
 27606                           ; BSR set to: 1
 27607                           ;../../VLCBlib_PIC/can18_can_2.c: 342:         C1MASK0U = 0x00;
 27608   0132A8  6B92               	clrf	146,b	;volatile
 27609                           
 27610                           ; BSR set to: 1
 27611                           ;../../VLCBlib_PIC/can18_can_2.c: 343:         C1MASK0T = 0x40;
 27612   0132AA  0E40               	movlw	64
 27613   0132AC  6F93               	movwf	147,b	;volatile
 27614                           
 27615                           ; BSR set to: 1
 27616                           ;../../VLCBlib_PIC/can18_can_2.c: 344:         C1FLTCON0L = 0x83;
 27617   0132AE  0E83               	movlw	131
 27618   0132B0  6F80               	movwf	128,b	;volatile
 27619                           
 27620                           ; BSR set to: 1
 27621                           ;../../VLCBlib_PIC/can18_can_2.c: 347:         (void)CAN1_OperationModeSet(CAN_NORMAL_2_
      +                          0_MODE);
 27622   0132B2  0E06               	movlw	6
 27623   0132B4  ECE4  F0AD         	call	_CAN1_OperationModeSet
 27624   0132B8                     l11807:
 27625                           
 27626                           ;../../VLCBlib_PIC/can18_can_2.c: 351:     prepareSelfEnumResponse();
 27627   0132B8  ECA7  F0A8         	call	_prepareSelfEnumResponse	;wreg free
 27628                           
 27629                           ;../../VLCBlib_PIC/can18_can_2.c: 353:     enumerationState = NO_ENUMERATION;
 27630   0132BC  0105               	movlb	5	; () banked
 27631   0132BE  6B92               	clrf	_enumerationState& (0+255),b
 27632                           
 27633                           ; BSR set to: 5
 27634                           ;../../VLCBlib_PIC/can18_can_2.c: 354:     enumerationStartTime.val = tickGet();
 27635   0132C0  EC50  F0AC         	call	_tickGet	;wreg free
 27636   0132C4  C501  F564         	movff	?_tickGet,_enumerationStartTime
 27637   0132C8  C502  F565         	movff	?_tickGet+1,_enumerationStartTime+1
 27638   0132CC  C503  F566         	movff	?_tickGet+2,_enumerationStartTime+2
 27639   0132D0  C504  F567         	movff	?_tickGet+3,_enumerationStartTime+3
 27640                           
 27641                           ;../../VLCBlib_PIC/can18_can_2.c: 356:     IPR0bits.CANIP = 0;
 27642   0132D4  0103               	movlb	3	; () banked
 27643   0132D6  9D62               	bcf	98,6,b	;volatile
 27644                           
 27645                           ; BSR set to: 3
 27646                           ;../../VLCBlib_PIC/can18_can_2.c: 357:     PIR0bits.CANIF = 0;
 27647   0132D8  9CAE               	bcf	174,6,c	;volatile
 27648                           
 27649                           ; BSR set to: 3
 27650                           ;../../VLCBlib_PIC/can18_can_2.c: 358:     C1INTUbits.TXIE = 1;
 27651   0132DA  0101               	movlb	1	; () banked
 27652   0132DC  811E               	bsf	30,0,b	;volatile
 27653                           
 27654                           ; BSR set to: 1
 27655                           ;../../VLCBlib_PIC/can18_can_2.c: 359:     C1INTTbits.RXOVIE = 1;
 27656   0132DE  871F               	bsf	31,3,b	;volatile
 27657                           
 27658                           ; BSR set to: 1
 27659                           ;../../VLCBlib_PIC/can18_can_2.c: 360:     C1INTTbits.IVMIE = 1;
 27660   0132E0  8F1F               	bsf	31,7,b	;volatile
 27661                           
 27662                           ; BSR set to: 1
 27663                           ;../../VLCBlib_PIC/can18_can_2.c: 362:     PIE0bits.CANIE = 1;
 27664   0132E2  8C9E               	bsf	158,6,c	;volatile
 27665                           
 27666                           ; BSR set to: 1
 27667   0132E4  0012               	return		;funcret
 27668   0132E6                     __end_of_canPowerUp:
 27669                           	callstack 0
 27670                           
 27671 ;; *************** function _bootPowerUp *****************
 27672 ;; Defined at:
 27673 ;;		line 197 in file "../../VLCBlib_PIC/boot.c"
 27674 ;; Parameters:    Size  Location     Type
 27675 ;;		None
 27676 ;; Auto vars:     Size  Location     Type
 27677 ;;  a               3   15[COMRAM] unsigned um
 27678 ;;  i               1   14[COMRAM] unsigned char 
 27679 ;;  found           1   13[COMRAM] unsigned char 
 27680 ;;  b               1   12[COMRAM] unsigned char 
 27681 ;; Return value:  Size  Location     Type
 27682 ;;                  1    wreg      void 
 27683 ;; Registers used:
 27684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27685 ;; Tracked objects:
 27686 ;;		On entry : 0/0
 27687 ;;		On exit  : 0/0
 27688 ;;		Unchanged: 0/0
 27689 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27691 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27693 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27694 ;;Total ram usage:        6 bytes
 27695 ;; Hardware stack levels used: 1
 27696 ;; Hardware stack levels required when called: 3
 27697 ;; This function calls:
 27698 ;;		_readNVM
 27699 ;; This function is called by:
 27700 ;;		_powerUp
 27701 ;; This function uses a non-reentrant model
 27702 ;;
 27703                           
 27704                           	psect	text12
 27705   0140C2                     __ptext12:
 27706                           	callstack 0
 27707   0140C2                     _bootPowerUp:
 27708                           	callstack 122
 27709                           
 27710                           ;../../VLCBlib_PIC/boot.c: 198:     uint24_t a;;../../VLCBlib_PIC/boot.c: 199:     uint8
      +                          _t i;;../../VLCBlib_PIC/boot.c: 200:     uint8_t b;;../../VLCBlib_PIC/boot.c: 201:     u
      +                          int8_t found;;../../VLCBlib_PIC/boot.c: 203:     bootloaderType = BL_TYPE_Unknown;
 27711                           
 27712                           ; BSR set to: 1
 27713                           ;incstack = 0
 27714   0140C2  0105               	movlb	5	; () banked
 27715   0140C4  6B97               	clrf	_bootloaderType& (0+255),b
 27716                           
 27717                           ;../../VLCBlib_PIC/boot.c: 204:     bootloaderVersion = 0;
 27718   0140C6  6B96               	clrf	_bootloaderVersion& (0+255),b
 27719                           
 27720                           ; BSR set to: 5
 27721                           ;../../VLCBlib_PIC/boot.c: 207:     for (a=0; a<0x7FF; a++) {
 27722   0140C8  0E00               	movlw	0
 27723   0140CA  6E10               	movwf	bootPowerUp@a^(0+1280),c
 27724   0140CC  0E00               	movlw	0
 27725   0140CE  6E11               	movwf	(bootPowerUp@a+1)^(0+1280),c
 27726   0140D0  0E00               	movlw	0
 27727   0140D2  6E12               	movwf	(bootPowerUp@a+2)^(0+1280),c
 27728   0140D4                     l11655:
 27729                           
 27730                           ;../../VLCBlib_PIC/boot.c: 209:         for (i=0; i<11; i++) {
 27731   0140D4  6A0F               	clrf	bootPowerUp@i^(0+1280),c
 27732   0140D6                     l11663:
 27733                           
 27734                           ;../../VLCBlib_PIC/boot.c: 210:             b = (uint8_t)readNVM(FLASH_NVM_TYPE, a+i);
 27735   0140D6  500F               	movf	bootPowerUp@i^(0+1280),w,c
 27736   0140D8  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 27737   0140DA  6E07               	movwf	readNVM@index^(0+1280),c
 27738   0140DC  0E00               	movlw	0
 27739   0140DE  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 27740   0140E0  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 27741   0140E2  0E00               	movlw	0
 27742   0140E4  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 27743   0140E6  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 27744   0140E8  0E01               	movlw	1
 27745   0140EA  EC42  F0AB         	call	_readNVM
 27746   0140EE  5007               	movf	?_readNVM^(0+1280),w,c
 27747   0140F0  6E0D               	movwf	bootPowerUp@b^(0+1280),c
 27748                           
 27749                           ;../../VLCBlib_PIC/boot.c: 211:             if (b != bl_version[i]) {
 27750   0140F2  0E49               	movlw	low _bl_version
 27751   0140F4  240F               	addwf	bootPowerUp@i^(0+1280),w,c
 27752   0140F6  6EF6               	movwf	tblptrl,c
 27753   0140F8  6AF7               	clrf	tblptrh,c
 27754   0140FA  0EFF               	movlw	high _bl_version
 27755   0140FC  22F7               	addwfc	tblptrh,f,c
 27756   0140FE                     	if	1	;There are 3 active tblptr bytes
 27757   0140FE  6AF8               	clrf	tblptru,c
 27758   014100  0E00               	movlw	low (__pmediumconst shr (0+16))
 27759   014102  22F8               	addwfc	tblptru,f,c
 27760   014104                     	endif
 27761   014104  0008               	tblrd		*
 27762   014106  50F5               	movf	tablat,w,c
 27763   014108  180D               	xorwf	bootPowerUp@b^(0+1280),w,c
 27764   01410A  B4D8               	btfsc	status,2,c
 27765   01410C  D002               	goto	l11671
 27766                           
 27767                           ;../../VLCBlib_PIC/boot.c: 212:                 found = 0;
 27768   01410E  6A0E               	clrf	bootPowerUp@found^(0+1280),c
 27769                           
 27770                           ;../../VLCBlib_PIC/boot.c: 213:                 break;
 27771   014110  D006               	goto	u10000
 27772   014112                     l11671:
 27773                           
 27774                           ;../../VLCBlib_PIC/boot.c: 215:                 found = 1;
 27775   014112  0E01               	movlw	1
 27776   014114  6E0E               	movwf	bootPowerUp@found^(0+1280),c
 27777                           
 27778                           ;../../VLCBlib_PIC/boot.c: 217:         }
 27779   014116  2A0F               	incf	bootPowerUp@i^(0+1280),f,c
 27780   014118  0E0A               	movlw	10
 27781   01411A  640F               	cpfsgt	bootPowerUp@i^(0+1280),c
 27782   01411C  D7DC               	goto	l11663
 27783   01411E                     u10000:
 27784                           
 27785                           ;../../VLCBlib_PIC/boot.c: 218:         if (found) {
 27786   01411E  500E               	movf	bootPowerUp@found^(0+1280),w,c
 27787   014120  B4D8               	btfsc	status,2,c
 27788   014122  D01F               	goto	l583
 27789                           
 27790                           ;../../VLCBlib_PIC/boot.c: 219:             bootloaderType = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, a+11);
 27791   014124  0E0B               	movlw	11
 27792   014126  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 27793   014128  6E07               	movwf	readNVM@index^(0+1280),c
 27794   01412A  0E00               	movlw	0
 27795   01412C  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 27796   01412E  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 27797   014130  0E00               	movlw	0
 27798   014132  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 27799   014134  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 27800   014136  0E01               	movlw	1
 27801   014138  EC42  F0AB         	call	_readNVM
 27802   01413C  5007               	movf	?_readNVM^(0+1280),w,c
 27803   01413E  0105               	movlb	5	; () banked
 27804   014140  6F97               	movwf	_bootloaderType& (0+255),b
 27805                           
 27806                           ;../../VLCBlib_PIC/boot.c: 220:             bootloaderVersion = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, a+12);
 27807   014142  0E0C               	movlw	12
 27808   014144  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 27809   014146  6E07               	movwf	readNVM@index^(0+1280),c
 27810   014148  0E00               	movlw	0
 27811   01414A  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 27812   01414C  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 27813   01414E  0E00               	movlw	0
 27814   014150  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 27815   014152  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 27816   014154  0E01               	movlw	1
 27817   014156  EC42  F0AB         	call	_readNVM
 27818   01415A  5007               	movf	?_readNVM^(0+1280),w,c
 27819   01415C  0105               	movlb	5	; () banked
 27820   01415E  6F96               	movwf	_bootloaderVersion& (0+255),b
 27821   014160  0012               	return	
 27822   014162                     l583:
 27823                           
 27824                           ;../../VLCBlib_PIC/boot.c: 223:     }
 27825   014162  0E01               	movlw	1
 27826   014164  2610               	addwf	bootPowerUp@a^(0+1280),f,c
 27827   014166  0E00               	movlw	0
 27828   014168  2211               	addwfc	(bootPowerUp@a+1)^(0+1280),f,c
 27829   01416A  0E00               	movlw	0
 27830   01416C  2212               	addwfc	(bootPowerUp@a+2)^(0+1280),f,c
 27831   01416E  5012               	movf	(bootPowerUp@a+2)^(0+1280),w,c
 27832   014170  E106               	bnz	u10020
 27833   014172  2810               	incf	bootPowerUp@a^(0+1280),w,c
 27834   014174  0E07               	movlw	7
 27835   014176  5811               	subwfb	(bootPowerUp@a+1)^(0+1280),w,c
 27836   014178  B0D8               	btfsc	status,0,c
 27837   01417A  0012               	return	
 27838   01417C  D7AB               	goto	l11655
 27839   01417E                     u10020:
 27840   01417E  0012               	return		;funcret
 27841   014180                     __end_of_bootPowerUp:
 27842                           	callstack 0
 27843                           
 27844 ;; *************** function _teachPowerUp *****************
 27845 ;; Defined at:
 27846 ;;		line 197 in file "../../VLCBlib_PIC/event_teach_simple.c"
 27847 ;; Parameters:    Size  Location     Type
 27848 ;;		None
 27849 ;; Auto vars:     Size  Location     Type
 27850 ;;  i               1   35[COMRAM] unsigned char 
 27851 ;; Return value:  Size  Location     Type
 27852 ;;                  1    wreg      void 
 27853 ;; Registers used:
 27854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27855 ;; Tracked objects:
 27856 ;;		On entry : 0/0
 27857 ;;		On exit  : 0/0
 27858 ;;		Unchanged: 0/0
 27859 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27863 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27864 ;;Total ram usage:        1 bytes
 27865 ;; Hardware stack levels used: 1
 27866 ;; Hardware stack levels required when called: 5
 27867 ;; This function calls:
 27868 ;;		_rebuildHashtable
 27869 ;; This function is called by:
 27870 ;;		_powerUp
 27871 ;; This function uses a non-reentrant model
 27872 ;;
 27873                           
 27874                           	psect	text13
 27875   016018                     __ptext13:
 27876                           	callstack 0
 27877   016018                     _teachPowerUp:
 27878                           	callstack 120
 27879                           
 27880                           ;../../VLCBlib_PIC/event_teach_simple.c: 198:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 201:     rebuildHashtable();
 27881                           
 27882                           ;incstack = 0
 27883   016018  ECC0  F0A0         	call	_rebuildHashtable	;wreg free
 27884                           
 27885                           ;../../VLCBlib_PIC/event_teach_simple.c: 205:     for (i=1; i<= 1; i++) {
 27886   01601C  0E01               	movlw	1
 27887   01601E  6E24               	movwf	teachPowerUp@i^(0+1280),c
 27888   016020                     l11907:
 27889                           
 27890                           ;../../VLCBlib_PIC/event_teach_simple.c: 206:         teachDiagnostics[i].asUint = 0;
 27891   016020  5024               	movf	teachPowerUp@i^(0+1280),w,c
 27892   016022  0D02               	mullw	2
 27893   016024  0EC5               	movlw	low _teachDiagnostics
 27894   016026  24F3               	addwf	243,w,c
 27895   016028  6ED9               	movwf	fsr2l,c
 27896   01602A  0E05               	movlw	high _teachDiagnostics
 27897   01602C  20F4               	addwfc	prodh,w,c
 27898   01602E  6EDA               	movwf	fsr2h,c
 27899   016030  6ADE               	clrf	postinc2,c
 27900   016032  6ADD               	clrf	postdec2,c
 27901                           
 27902                           ;../../VLCBlib_PIC/event_teach_simple.c: 207:     }
 27903   016034  2A24               	incf	teachPowerUp@i^(0+1280),f,c
 27904   016036  0E01               	movlw	1
 27905   016038  6424               	cpfsgt	teachPowerUp@i^(0+1280),c
 27906   01603A  D7F2               	goto	l11907
 27907                           
 27908                           ;../../VLCBlib_PIC/event_teach_simple.c: 208:     teachDiagnostics[0x00].asUint = 1;
 27909   01603C  0E00               	movlw	0
 27910   01603E  0105               	movlb	5	; () banked
 27911   016040  6FC6               	movwf	(_teachDiagnostics+1)& (0+255),b
 27912   016042  0E01               	movlw	1
 27913   016044  6FC5               	movwf	_teachDiagnostics& (0+255),b
 27914                           
 27915                           ; BSR set to: 5
 27916                           ;../../VLCBlib_PIC/event_teach_simple.c: 210:     errno = 0;
 27917   016046  6B9E               	clrf	_errno& (0+255),b
 27918                           
 27919                           ; BSR set to: 5
 27920                           ;../../VLCBlib_PIC/event_teach_simple.c: 211:     mode_flags &= ~1;
 27921   016048  919F               	bcf	_mode_flags& (0+255),0,b
 27922                           
 27923                           ; BSR set to: 5
 27924   01604A  0012               	return		;funcret
 27925   01604C                     __end_of_teachPowerUp:
 27926                           	callstack 0
 27927                           
 27928 ;; *************** function _loadNvCache *****************
 27929 ;; Defined at:
 27930 ;;		line 162 in file "../../VLCBlib_PIC/nv.c"
 27931 ;; Parameters:    Size  Location     Type
 27932 ;;		None
 27933 ;; Auto vars:     Size  Location     Type
 27934 ;;  temp            2   14[COMRAM] short 
 27935 ;;  i               1   16[COMRAM] unsigned char 
 27936 ;; Return value:  Size  Location     Type
 27937 ;;                  1    wreg      void 
 27938 ;; Registers used:
 27939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27940 ;; Tracked objects:
 27941 ;;		On entry : 0/0
 27942 ;;		On exit  : 0/0
 27943 ;;		Unchanged: 0/0
 27944 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27946 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27947 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27948 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27949 ;;Total ram usage:        5 bytes
 27950 ;; Hardware stack levels used: 1
 27951 ;; Hardware stack levels required when called: 3
 27952 ;; This function calls:
 27953 ;;		_readNVM
 27954 ;; This function is called by:
 27955 ;;		_nvPowerUp
 27956 ;; This function uses a non-reentrant model
 27957 ;;
 27958                           
 27959                           	psect	text14
 27960   015B7E                     __ptext14:
 27961                           	callstack 0
 27962   015B7E                     _loadNvCache:
 27963                           	callstack 121
 27964                           
 27965                           ;../../VLCBlib_PIC/nv.c: 163:     uint8_t i;;../../VLCBlib_PIC/nv.c: 164:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 166:     for (i=1; i<= 67; i++) {
 27966                           
 27967                           ; BSR set to: 5
 27968                           ;incstack = 0
 27969   015B7E  0E01               	movlw	1
 27970   015B80  6E11               	movwf	loadNvCache@i^(0+1280),c
 27971   015B82                     l10905:
 27972                           
 27973                           ;../../VLCBlib_PIC/nv.c: 167:         temp = readNVM(EEPROM_NVM_TYPE, 0x200 +i);
 27974   015B82  0E00               	movlw	0
 27975   015B84  2411               	addwf	loadNvCache@i^(0+1280),w,c
 27976   015B86  6E0D               	movwf	??_loadNvCache^(0+1280),c
 27977   015B88  6A0E               	clrf	(??_loadNvCache+1)^(0+1280),c
 27978   015B8A  0E02               	movlw	2
 27979   015B8C  220E               	addwfc	(??_loadNvCache+1)^(0+1280),f,c
 27980   015B8E  C50D  F507         	movff	??_loadNvCache,readNVM@index
 27981   015B92  C50E  F508         	movff	??_loadNvCache+1,readNVM@index+1
 27982   015B96  6A09               	clrf	(readNVM@index+2)^(0+1280),c
 27983   015B98  BE08               	btfsc	(readNVM@index+1)^(0+1280),7,c
 27984   015B9A  0609               	decf	(readNVM@index+2)^(0+1280),f,c
 27985   015B9C  0E00               	movlw	0
 27986   015B9E  EC42  F0AB         	call	_readNVM
 27987   015BA2  C507  F50F         	movff	?_readNVM,loadNvCache@temp
 27988   015BA6  C508  F510         	movff	?_readNVM+1,loadNvCache@temp+1
 27989                           
 27990                           ;../../VLCBlib_PIC/nv.c: 168:         if (temp < 0) {
 27991   015BAA  BE10               	btfsc	(loadNvCache@temp+1)^(0+1280),7,c
 27992   015BAC  D008               	goto	l10913
 27993                           
 27994                           ;../../VLCBlib_PIC/nv.c: 171:             nvCache[i] = (uint8_t)temp;
 27995   015BAE  0E00               	movlw	low _nvCache
 27996   015BB0  2411               	addwf	loadNvCache@i^(0+1280),w,c
 27997   015BB2  6ED9               	movwf	fsr2l,c
 27998   015BB4  6ADA               	clrf	fsr2h,c
 27999   015BB6  0E07               	movlw	high _nvCache
 28000   015BB8  22DA               	addwfc	fsr2h,f,c
 28001   015BBA  C50F  F4DF         	movff	loadNvCache@temp,indf2
 28002   015BBE                     l10913:
 28003                           
 28004                           ;../../VLCBlib_PIC/nv.c: 173:     }
 28005   015BBE  2A11               	incf	loadNvCache@i^(0+1280),f,c
 28006   015BC0  0E43               	movlw	67
 28007   015BC2  6411               	cpfsgt	loadNvCache@i^(0+1280),c
 28008   015BC4  D7DE               	goto	l10905
 28009   015BC6  0012               	return	
 28010   015BC8                     __end_of_loadNvCache:
 28011                           	callstack 0
 28012                           
 28013 ;; *************** function _leds_powerUp *****************
 28014 ;; Defined at:
 28015 ;;		line 77 in file "../../VLCBlib_PIC/statusLeds2.c"
 28016 ;; Parameters:    Size  Location     Type
 28017 ;;		None
 28018 ;; Auto vars:     Size  Location     Type
 28019 ;;		None
 28020 ;; Return value:  Size  Location     Type
 28021 ;;                  1    wreg      void 
 28022 ;; Registers used:
 28023 ;;		wreg, status,2, status,0, cstack
 28024 ;; Tracked objects:
 28025 ;;		On entry : 0/0
 28026 ;;		On exit  : 0/0
 28027 ;;		Unchanged: 0/0
 28028 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28033 ;;Total ram usage:        0 bytes
 28034 ;; Hardware stack levels used: 1
 28035 ;; Hardware stack levels required when called: 2
 28036 ;; This function calls:
 28037 ;;		_tickGet
 28038 ;; This function is called by:
 28039 ;;		_powerUp
 28040 ;; This function uses a non-reentrant model
 28041 ;;
 28042                           
 28043                           	psect	text15
 28044   016198                     __ptext15:
 28045                           	callstack 0
 28046   016198                     _leds_powerUp:
 28047                           	callstack 123
 28048                           
 28049                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     {ANSELA=ANSELB=0; WPUA=0b00101000;TRISBbits.TR
      +                          ISB6=TRISBbits.TRISB7=0,TRISAbits.TRISA3=1;};
 28050                           
 28051                           ;incstack = 0
 28052   016198  0104               	movlb	4	; () banked
 28053   01619A  6B08               	clrf	8,b	;volatile
 28054   01619C  6B00               	clrf	0,b	;volatile
 28055                           
 28056                           ; BSR set to: 4
 28057   01619E  0E28               	movlw	40
 28058   0161A0  6F01               	movwf	1,b	;volatile
 28059                           
 28060                           ; BSR set to: 4
 28061   0161A2  9EC7               	bcf	199,7,c	;volatile
 28062   0161A4  9CC7               	bcf	199,6,c	;volatile
 28063                           
 28064                           ; BSR set to: 4
 28065   0161A6  86C6               	bsf	198,3,c	;volatile
 28066                           
 28067                           ; BSR set to: 4
 28068                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[0] = 0;
 28069   0161A8  0105               	movlb	5	; () banked
 28070   0161AA  6B7A               	clrf	_flashCounter& (0+255),b
 28071                           
 28072                           ; BSR set to: 5
 28073                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     flashCounter[1] = 0;
 28074   0161AC  6B7B               	clrf	(_flashCounter+1)& (0+255),b
 28075                           
 28076                           ; BSR set to: 5
 28077                           ;../../VLCBlib_PIC/statusLeds2.c: 82:     ledTimer.val = tickGet();
 28078   0161AE  EC50  F0AC         	call	_tickGet	;wreg free
 28079   0161B2  C501  F68E         	movff	?_tickGet,_ledTimer
 28080   0161B6  C502  F68F         	movff	?_tickGet+1,_ledTimer+1
 28081   0161BA  C503  F690         	movff	?_tickGet+2,_ledTimer+2
 28082   0161BE  C504  F691         	movff	?_tickGet+3,_ledTimer+3
 28083   0161C2  0012               	return		;funcret
 28084   0161C4                     __end_of_leds_powerUp:
 28085                           	callstack 0
 28086                           
 28087 ;; *************** function _initTimedResponse *****************
 28088 ;; Defined at:
 28089 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
 28090 ;; Parameters:    Size  Location     Type
 28091 ;;		None
 28092 ;; Auto vars:     Size  Location     Type
 28093 ;;		None
 28094 ;; Return value:  Size  Location     Type
 28095 ;;                  1    wreg      void 
 28096 ;; Registers used:
 28097 ;;		None
 28098 ;; Tracked objects:
 28099 ;;		On entry : 0/0
 28100 ;;		On exit  : 0/0
 28101 ;;		Unchanged: 0/0
 28102 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28107 ;;Total ram usage:        0 bytes
 28108 ;; Hardware stack levels used: 1
 28109 ;; Hardware stack levels required when called: 1
 28110 ;; This function calls:
 28111 ;;		Nothing
 28112 ;; This function is called by:
 28113 ;;		_powerUp
 28114 ;; This function uses a non-reentrant model
 28115 ;;
 28116                           
 28117                           	psect	text16
 28118   016624                     __ptext16:
 28119                           	callstack 0
 28120   016624                     _initTimedResponse:
 28121                           	callstack 124
 28122                           
 28123                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
 28124                           
 28125                           ;incstack = 0
 28126   016624  0105               	movlb	5	; () banked
 28127   016626  6985               	setf	_timedResponseType& (0+255),b
 28128                           
 28129                           ; BSR set to: 5
 28130   016628  0012               	return		;funcret
 28131   01662A                     __end_of_initTimedResponse:
 28132                           	callstack 0
 28133                           
 28134 ;; *************** function _initTicker *****************
 28135 ;; Defined at:
 28136 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
 28137 ;; Parameters:    Size  Location     Type
 28138 ;;  priority        1    wreg     unsigned char 
 28139 ;; Auto vars:     Size  Location     Type
 28140 ;;  priority        1    1[COMRAM] unsigned char 
 28141 ;;  i               1    3[COMRAM] unsigned char 
 28142 ;;  divider         1    2[COMRAM] unsigned char 
 28143 ;; Return value:  Size  Location     Type
 28144 ;;                  1    wreg      void 
 28145 ;; Registers used:
 28146 ;;		wreg, status,2, status,0
 28147 ;; Tracked objects:
 28148 ;;		On entry : 0/0
 28149 ;;		On exit  : 0/0
 28150 ;;		Unchanged: 0/0
 28151 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28153 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28154 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28155 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28156 ;;Total ram usage:        4 bytes
 28157 ;; Hardware stack levels used: 1
 28158 ;; Hardware stack levels required when called: 1
 28159 ;; This function calls:
 28160 ;;		Nothing
 28161 ;; This function is called by:
 28162 ;;		_powerUp
 28163 ;; This function uses a non-reentrant model
 28164 ;;
 28165                           
 28166                           	psect	text17
 28167   015A42                     __ptext17:
 28168                           	callstack 0
 28169   015A42                     _initTicker:
 28170                           	callstack 124
 28171                           
 28172                           ; BSR set to: 5
 28173                           ;incstack = 0
 28174                           ;initTicker@priority stored from wreg
 28175   015A42  6E02               	movwf	initTicker@priority^(0+1280),c
 28176                           
 28177                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
 28178   015A44  6A03               	clrf	initTicker@divider^(0+1280),c
 28179                           
 28180                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
 28181   015A46  0E40               	movlw	64
 28182   015A48  6E04               	movwf	initTicker@i^(0+1280),c
 28183   015A4A                     l12129:
 28184                           
 28185                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
 28186   015A4A  2A03               	incf	initTicker@divider^(0+1280),f,c
 28187   015A4C  90D8               	bcf	status,0,c
 28188   015A4E  3204               	rrcf	initTicker@i^(0+1280),f,c
 28189   015A50  5004               	movf	initTicker@i^(0+1280),w,c
 28190   015A52  A4D8               	btfss	status,2,c
 28191   015A54  D7FA               	goto	l12129
 28192                           
 28193                           ;../../VLCBlib_PIC/ticktime.c: 122:     T0CON1bits.CKPS = (uint8_t)(0b00000000 | (divide
      +                          r+1));
 28194   015A56  C503  F501         	movff	initTicker@divider,??_initTicker
 28195   015A5A  0E01               	movlw	1
 28196   015A5C  2601               	addwf	??_initTicker^(0+1280),f,c
 28197   015A5E  0103               	movlb	3	; () banked
 28198   015A60  511B               	movf	27,w,b	;volatile
 28199   015A62  1801               	xorwf	??_initTicker^(0+1280),w,c
 28200   015A64  0BF0               	andlw	-16
 28201   015A66  1801               	xorwf	??_initTicker^(0+1280),w,c
 28202   015A68  6F1B               	movwf	27,b	;volatile
 28203                           
 28204                           ; BSR set to: 3
 28205                           ;../../VLCBlib_PIC/ticktime.c: 123:     T0CON0bits.MD16 = 1;
 28206   015A6A  891A               	bsf	26,4,b	;volatile
 28207                           
 28208                           ; BSR set to: 3
 28209                           ;../../VLCBlib_PIC/ticktime.c: 124:     T0CON1bits.CS = 2;
 28210   015A6C  511B               	movf	27,w,b	;volatile
 28211   015A6E  0B1F               	andlw	-225
 28212   015A70  0940               	iorlw	64
 28213   015A72  6F1B               	movwf	27,b	;volatile
 28214                           
 28215                           ; BSR set to: 3
 28216                           ;../../VLCBlib_PIC/ticktime.c: 125:     TMR0H = 0;
 28217   015A74  6B19               	clrf	25,b	;volatile
 28218                           
 28219                           ; BSR set to: 3
 28220                           ;../../VLCBlib_PIC/ticktime.c: 126:     TMR0L = 0;
 28221   015A76  6B18               	clrf	24,b	;volatile
 28222                           
 28223                           ; BSR set to: 3
 28224                           ;../../VLCBlib_PIC/ticktime.c: 127:     TMR0IP = (__bit)priority;
 28225   015A78  A002               	btfss	initTicker@priority^(0+1280),0,c
 28226   015A7A  D002               	goto	u10440
 28227   015A7C  8F65               	bsf	101,7,b	;volatile
 28228   015A7E  D002               	goto	u10455
 28229   015A80                     u10440:
 28230   015A80  0103               	movlb	3	; () banked
 28231   015A82  9F65               	bcf	101,7,b	;volatile
 28232   015A84                     u10455:
 28233                           
 28234                           ; BSR set to: 3
 28235                           ;../../VLCBlib_PIC/ticktime.c: 128:     TMR0IF = 0;
 28236   015A84  9EB1               	bcf	1201,7,c	;volatile
 28237                           
 28238                           ; BSR set to: 3
 28239                           ;../../VLCBlib_PIC/ticktime.c: 129:     TMR0IE = 1;
 28240   015A86  8EA1               	bsf	1185,7,c	;volatile
 28241                           
 28242                           ; BSR set to: 3
 28243                           ;../../VLCBlib_PIC/ticktime.c: 130:     T0CON0bits.EN = 1;
 28244   015A88  8F1A               	bsf	26,7,b	;volatile
 28245                           
 28246                           ; BSR set to: 3
 28247                           ;../../VLCBlib_PIC/ticktime.c: 132:     timerExtension1 = 0;
 28248   015A8A  0105               	movlb	5	; () banked
 28249   015A8C  6B89               	clrf	_timerExtension1& (0+255),b	;volatile
 28250                           
 28251                           ; BSR set to: 5
 28252                           ;../../VLCBlib_PIC/ticktime.c: 133:     timerExtension2 = 0;
 28253   015A8E  6B88               	clrf	_timerExtension2& (0+255),b	;volatile
 28254                           
 28255                           ; BSR set to: 5
 28256   015A90  0012               	return		;funcret
 28257   015A92                     __end_of_initTicker:
 28258                           	callstack 0
 28259                           
 28260 ;; *************** function _CAN1_OperationModeSet *****************
 28261 ;; Defined at:
 28262 ;;		line 911 in file "../../VLCBlib_PIC/can18_can_2.c"
 28263 ;; Parameters:    Size  Location     Type
 28264 ;;  requestMode     1    wreg     const enum E23638
 28265 ;; Auto vars:     Size  Location     Type
 28266 ;;  requestMode     1    1[COMRAM] const enum E23638
 28267 ;;  status          1    0[COMRAM] enum E23647
 28268 ;; Return value:  Size  Location     Type
 28269 ;;                  1    wreg      enum E23647
 28270 ;; Registers used:
 28271 ;;		wreg, status,2, status,0, cstack
 28272 ;; Tracked objects:
 28273 ;;		On entry : 0/0
 28274 ;;		On exit  : 0/0
 28275 ;;		Unchanged: 0/0
 28276 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28278 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28280 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28281 ;;Total ram usage:        2 bytes
 28282 ;; Hardware stack levels used: 1
 28283 ;; Hardware stack levels required when called: 2
 28284 ;; This function calls:
 28285 ;;		_CAN1_OperationModeGet
 28286 ;; This function is called by:
 28287 ;;		_canPowerUp
 28288 ;; This function uses a non-reentrant model
 28289 ;;
 28290                           
 28291                           	psect	text18
 28292   015BC8                     __ptext18:
 28293                           	callstack 0
 28294   015BC8                     _CAN1_OperationModeSet:
 28295                           	callstack 122
 28296                           
 28297                           ; BSR set to: 5
 28298                           ;incstack = 0
 28299                           ;CAN1_OperationModeSet@requestMode stored from wreg
 28300   015BC8  6E02               	movwf	CAN1_OperationModeSet@requestMode^(0+1280),c
 28301                           
 28302                           ;../../VLCBlib_PIC/can18_can_2.c: 911: enum CAN_OP_MODE_STATUS CAN1_OperationModeSet(con
      +                          st enum CAN_OP_MODES requestMode);../../VLCBlib_PIC/can18_can_2.c: 912: {;../../VLCBlib_
      +                          PIC/can18_can_2.c: 913:     enum CAN_OP_MODE_STATUS status = CAN_OP_MODE_REQUEST_SUCCESS
      +                          ;
 28303   015BCA  6A01               	clrf	CAN1_OperationModeSet@status^(0+1280),c
 28304                           
 28305                           ;../../VLCBlib_PIC/can18_can_2.c: 915:     if ((CAN1_OperationModeGet() == CAN_CONFIGURA
      +                          TION_MODE)
 28306   015BCC  EC01  F0B3         	call	_CAN1_OperationModeGet	;wreg free
 28307   015BD0  0A04               	xorlw	4
 28308   015BD2  B4D8               	btfsc	status,2,c
 28309   015BD4  D007               	goto	u7840
 28310   015BD6  0402               	decf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 28311   015BD8  B4D8               	btfsc	status,2,c
 28312   015BDA  D004               	goto	u7840
 28313   015BDC  0E04               	movlw	4
 28314   015BDE  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 28315   015BE0  A4D8               	btfss	status,2,c
 28316   015BE2  D012               	goto	l9927
 28317   015BE4                     u7840:
 28318                           
 28319                           ;../../VLCBlib_PIC/can18_can_2.c: 918:     {;../../VLCBlib_PIC/can18_can_2.c: 919:      
      +                             C1CONTbits.REQOP = (unsigned char)requestMode;
 28320   015BE4  0101               	movlb	1	; () banked
 28321   015BE6  5103               	movf	3,w,b	;volatile
 28322   015BE8  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 28323   015BEA  0BF8               	andlw	-8
 28324   015BEC  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 28325   015BEE  6F03               	movwf	3,b	;volatile
 28326                           
 28327                           ;../../VLCBlib_PIC/can18_can_2.c: 921:         while (C1CONUbits.OPMOD != requestMode)
 28328   015BF0  D004               	goto	l9925
 28329   015BF2                     l991:
 28330                           
 28331                           ; BSR set to: 1
 28332                           ;../../VLCBlib_PIC/can18_can_2.c: 922:         {;../../VLCBlib_PIC/can18_can_2.c: 924:  
      +                                     if (C1INTHbits.SERRIF == 1)
 28333   015BF2  A91D               	btfss	29,4,b	;volatile
 28334   015BF4  D002               	goto	l9925
 28335                           
 28336                           ; BSR set to: 1
 28337                           ;../../VLCBlib_PIC/can18_can_2.c: 925:             {;../../VLCBlib_PIC/can18_can_2.c: 92
      +                          6:                 status = CAN_OP_MODE_SYS_ERROR_OCCURED;
 28338   015BF6  0E02               	movlw	2
 28339   015BF8  D008               	goto	L1
 28340   015BFA                     l9925:
 28341                           
 28342                           ; BSR set to: 1
 28343                           ;../../VLCBlib_PIC/can18_can_2.c: 921:         while (C1CONUbits.OPMOD != requestMode)
 28344   015BFA  3902               	swapf	2,w,b	;volatile
 28345   015BFC  32E8               	rrcf	wreg,f,c
 28346   015BFE  0B07               	andlw	7
 28347   015C00  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 28348   015C02  B4D8               	btfsc	status,2,c
 28349   015C04  D003               	goto	l994
 28350   015C06  D7F5               	goto	l991
 28351   015C08                     l9927:
 28352                           
 28353                           ;../../VLCBlib_PIC/can18_can_2.c: 932:     {;../../VLCBlib_PIC/can18_can_2.c: 933:      
      +                             status = CAN_OP_MODE_REQUEST_FAIL;
 28354   015C08  0E01               	movlw	1
 28355   015C0A                     L1:
 28356   015C0A  6E01               	movwf	CAN1_OperationModeSet@status^(0+1280),c
 28357   015C0C                     l994:
 28358                           
 28359                           ;../../VLCBlib_PIC/can18_can_2.c: 936:     return status;
 28360   015C0C  5001               	movf	CAN1_OperationModeSet@status^(0+1280),w,c
 28361   015C0E  0012               	return		;funcret
 28362   015C10                     __end_of_CAN1_OperationModeSet:
 28363                           	callstack 0
 28364                           
 28365 ;; *************** function _CAN1_OperationModeGet *****************
 28366 ;; Defined at:
 28367 ;;		line 944 in file "../../VLCBlib_PIC/can18_can_2.c"
 28368 ;; Parameters:    Size  Location     Type
 28369 ;;		None
 28370 ;; Auto vars:     Size  Location     Type
 28371 ;;		None
 28372 ;; Return value:  Size  Location     Type
 28373 ;;                  1    wreg      enum E23638
 28374 ;; Registers used:
 28375 ;;		wreg, status,2, status,0
 28376 ;; Tracked objects:
 28377 ;;		On entry : 0/0
 28378 ;;		On exit  : 0/0
 28379 ;;		Unchanged: 0/0
 28380 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28385 ;;Total ram usage:        0 bytes
 28386 ;; Hardware stack levels used: 1
 28387 ;; Hardware stack levels required when called: 1
 28388 ;; This function calls:
 28389 ;;		Nothing
 28390 ;; This function is called by:
 28391 ;;		_CAN1_OperationModeSet
 28392 ;; This function uses a non-reentrant model
 28393 ;;
 28394                           
 28395                           	psect	text19
 28396   016602                     __ptext19:
 28397                           	callstack 0
 28398   016602                     _CAN1_OperationModeGet:
 28399                           	callstack 122
 28400                           
 28401                           ;../../VLCBlib_PIC/can18_can_2.c: 946:     return C1CONUbits.OPMOD;
 28402                           
 28403                           ;incstack = 0
 28404   016602  0101               	movlb	1	; () banked
 28405   016604  3902               	swapf	2,w,b	;volatile
 28406   016606  32E8               	rrcf	wreg,f,c
 28407   016608  0B07               	andlw	7
 28408                           
 28409                           ; BSR set to: 1
 28410   01660A  0012               	return		;funcret
 28411   01660C                     __end_of_CAN1_OperationModeGet:
 28412                           	callstack 0
 28413                           
 28414 ;; *************** function _poll *****************
 28415 ;; Defined at:
 28416 ;;		line 1005 in file "../../VLCBlib_PIC/vlcb.c"
 28417 ;; Parameters:    Size  Location     Type
 28418 ;;		None
 28419 ;; Auto vars:     Size  Location     Type
 28420 ;;  m               9   38[BANK5 ] struct Message
 28421 ;;  i               1   37[BANK5 ] unsigned char 
 28422 ;;  handled         1   36[BANK5 ] enum E23340
 28423 ;; Return value:  Size  Location     Type
 28424 ;;                  1    wreg      void 
 28425 ;; Registers used:
 28426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28427 ;; Tracked objects:
 28428 ;;		On entry : 0/0
 28429 ;;		On exit  : 0/0
 28430 ;;		Unchanged: 0/0
 28431 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28433 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28434 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28435 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28436 ;;Total ram usage:       15 bytes
 28437 ;; Hardware stack levels used: 1
 28438 ;; Hardware stack levels required when called: 13
 28439 ;; This function calls:
 28440 ;;		NULL
 28441 ;;		_APP_postProcessMessage
 28442 ;;		_APP_preProcessMessage
 28443 ;;		___lmul
 28444 ;;		_bootProcessMessage
 28445 ;;		_canPoll
 28446 ;;		_canProcessMessage
 28447 ;;		_canReceiveMessage
 28448 ;;		_consumerProcessMessage
 28449 ;;		_flushFlashBlock
 28450 ;;		_leds_poll
 28451 ;;		_mnsPoll
 28452 ;;		_mnsProcessMessage
 28453 ;;		_nvProcessMessage
 28454 ;;		_pollTimedResponse
 28455 ;;		_producerProcessMessage
 28456 ;;		_showStatus
 28457 ;;		_teachProcessMessage
 28458 ;;		_tickGet
 28459 ;; This function is called by:
 28460 ;;		_main
 28461 ;; This function uses a non-reentrant model
 28462 ;;
 28463                           
 28464                           	psect	text20
 28465   01182C                     __ptext20:
 28466                           	callstack 0
 28467   01182C                     _poll:
 28468                           	callstack 113
 28469                           
 28470                           ;../../VLCBlib_PIC/vlcb.c: 1006:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1007:     Mess
      +                          age m;;../../VLCBlib_PIC/vlcb.c: 1008:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 
      +                          1011:     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000
      +                          )) {
 28471                           
 28472                           ; BSR set to: 1
 28473                           ;incstack = 0
 28474   01182C  EC50  F0AC         	call	_tickGet	;wreg free
 28475   011830  0106               	movlb	6	; () banked
 28476   011832  518A               	movf	_timedResponseTime& (0+255),w,b
 28477   011834  5C01               	subwf	?_tickGet^(0+1280),w,c
 28478   011836  0105               	movlb	5	; () banked
 28479   011838  6FE9               	movwf	??_poll& (0+255),b
 28480   01183A  0106               	movlb	6	; () banked
 28481   01183C  518B               	movf	(_timedResponseTime+1)& (0+255),w,b
 28482   01183E  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 28483   011840  0105               	movlb	5	; () banked
 28484   011842  6FEA               	movwf	(??_poll+1)& (0+255),b
 28485   011844  0106               	movlb	6	; () banked
 28486   011846  518C               	movf	(_timedResponseTime+2)& (0+255),w,b
 28487   011848  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 28488   01184A  0105               	movlb	5	; () banked
 28489   01184C  6FEB               	movwf	(??_poll+2)& (0+255),b
 28490   01184E  0106               	movlb	6	; () banked
 28491   011850  518D               	movf	(_timedResponseTime+3)& (0+255),w,b
 28492   011852  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 28493   011854  0105               	movlb	5	; () banked
 28494   011856  6FEC               	movwf	(??_poll+3)& (0+255),b
 28495   011858  5182               	movf	_timedResponseDelay& (0+255),w,b
 28496   01185A  6E05               	movwf	___lmul@multiplier^(0+1280),c
 28497   01185C  6A06               	clrf	(___lmul@multiplier+1)^(0+1280),c
 28498   01185E  6A07               	clrf	(___lmul@multiplier+2)^(0+1280),c
 28499   011860  6A08               	clrf	(___lmul@multiplier+3)^(0+1280),c
 28500   011862  0E3E               	movlw	62
 28501   011864  6E09               	movwf	___lmul@multiplicand^(0+1280),c
 28502   011866  0E00               	movlw	0
 28503   011868  6E0A               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 28504   01186A  0E00               	movlw	0
 28505   01186C  6E0B               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 28506   01186E  0E00               	movlw	0
 28507   011870  6E0C               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 28508   011872  EC7B  F0AC         	call	___lmul	;wreg free
 28509   011876  0105               	movlb	5	; () banked
 28510   011878  51E9               	movf	??_poll& (0+255),w,b
 28511   01187A  5C05               	subwf	?___lmul^(0+1280),w,c
 28512   01187C  51EA               	movf	(??_poll+1)& (0+255),w,b
 28513   01187E  5806               	subwfb	(?___lmul+1)^(0+1280),w,c
 28514   011880  51EB               	movf	(??_poll+2)& (0+255),w,b
 28515   011882  5807               	subwfb	(?___lmul+2)^(0+1280),w,c
 28516   011884  51EC               	movf	(??_poll+3)& (0+255),w,b
 28517   011886  5808               	subwfb	(?___lmul+3)^(0+1280),w,c
 28518   011888  B0D8               	btfsc	status,0,c
 28519   01188A  D00C               	goto	l12357
 28520                           
 28521                           ; BSR set to: 5
 28522                           ;../../VLCBlib_PIC/vlcb.c: 1012:         pollTimedResponse();
 28523   01188C  ECDA  F0A6         	call	_pollTimedResponse	;wreg free
 28524                           
 28525                           ;../../VLCBlib_PIC/vlcb.c: 1013:         timedResponseTime.val = tickGet();
 28526   011890  EC50  F0AC         	call	_tickGet	;wreg free
 28527   011894  C501  F68A         	movff	?_tickGet,_timedResponseTime
 28528   011898  C502  F68B         	movff	?_tickGet+1,_timedResponseTime+1
 28529   01189C  C503  F68C         	movff	?_tickGet+2,_timedResponseTime+2
 28530   0118A0  C504  F68D         	movff	?_tickGet+3,_timedResponseTime+3
 28531   0118A4                     l12357:
 28532                           
 28533                           ;../../VLCBlib_PIC/vlcb.c: 1015:     if ((tickGet() - flashFlushTime.val) > 62500) {
 28534   0118A4  EC50  F0AC         	call	_tickGet	;wreg free
 28535   0118A8  0106               	movlb	6	; () banked
 28536   0118AA  5186               	movf	_flashFlushTime& (0+255),w,b
 28537   0118AC  5C01               	subwf	?_tickGet^(0+1280),w,c
 28538   0118AE  0105               	movlb	5	; () banked
 28539   0118B0  6FE9               	movwf	??_poll& (0+255),b
 28540   0118B2  0106               	movlb	6	; () banked
 28541   0118B4  5187               	movf	(_flashFlushTime+1)& (0+255),w,b
 28542   0118B6  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 28543   0118B8  0105               	movlb	5	; () banked
 28544   0118BA  6FEA               	movwf	(??_poll+1)& (0+255),b
 28545   0118BC  0106               	movlb	6	; () banked
 28546   0118BE  5188               	movf	(_flashFlushTime+2)& (0+255),w,b
 28547   0118C0  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 28548   0118C2  0105               	movlb	5	; () banked
 28549   0118C4  6FEB               	movwf	(??_poll+2)& (0+255),b
 28550   0118C6  0106               	movlb	6	; () banked
 28551   0118C8  5189               	movf	(_flashFlushTime+3)& (0+255),w,b
 28552   0118CA  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 28553   0118CC  0105               	movlb	5	; () banked
 28554   0118CE  6FEC               	movwf	(??_poll+3)& (0+255),b
 28555   0118D0  51EC               	movf	(??_poll+3)& (0+255),w,b
 28556   0118D2  11EB               	iorwf	(??_poll+2)& (0+255),w,b
 28557   0118D4  E106               	bnz	u10730
 28558   0118D6  0E25               	movlw	37
 28559   0118D8  5DE9               	subwf	??_poll& (0+255),w,b
 28560   0118DA  0EF4               	movlw	244
 28561   0118DC  59EA               	subwfb	(??_poll+1)& (0+255),w,b
 28562   0118DE  A0D8               	btfss	status,0,c
 28563   0118E0  D00C               	goto	l12363
 28564   0118E2                     u10730:
 28565                           
 28566                           ; BSR set to: 5
 28567                           ;../../VLCBlib_PIC/vlcb.c: 1016:         flushFlashBlock();
 28568   0118E2  ECCC  F0AB         	call	_flushFlashBlock	;wreg free
 28569                           
 28570                           ;../../VLCBlib_PIC/vlcb.c: 1017:         flashFlushTime.val = tickGet();
 28571   0118E6  EC50  F0AC         	call	_tickGet	;wreg free
 28572   0118EA  C501  F686         	movff	?_tickGet,_flashFlushTime
 28573   0118EE  C502  F687         	movff	?_tickGet+1,_flashFlushTime+1
 28574   0118F2  C503  F688         	movff	?_tickGet+2,_flashFlushTime+2
 28575   0118F6  C504  F689         	movff	?_tickGet+3,_flashFlushTime+3
 28576   0118FA                     l12363:
 28577                           
 28578                           ;../../VLCBlib_PIC/vlcb.c: 1020:     for (i=0; i<8; i++) {
 28579   0118FA  0105               	movlb	5	; () banked
 28580   0118FC  6BEE               	clrf	poll@i& (0+255),b
 28581   0118FE                     l12369:
 28582                           
 28583                           ; BSR set to: 5
 28584                           ;../../VLCBlib_PIC/vlcb.c: 1021:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
 28585   0118FE  51EE               	movf	poll@i& (0+255),w,b
 28586   011900  0D02               	mullw	2
 28587   011902  0E39               	movlw	low _services
 28588   011904  24F3               	addwf	243,w,c
 28589   011906  6EF6               	movwf	tblptrl,c
 28590   011908  0EFF               	movlw	high _services
 28591   01190A  20F4               	addwfc	244,w,c
 28592   01190C  6EF7               	movwf	tblptrh,c
 28593   01190E                     	if	1	;There are 3 active tblptr bytes
 28594   01190E  6AF8               	clrf	tblptru,c
 28595   011910  0E00               	movlw	low (__pmediumconst shr (0+16))
 28596   011912  22F8               	addwfc	tblptru,f,c
 28597   011914                     	endif
 28598   011914  0009               	tblrd		*+
 28599   011916  50F5               	movf	tablat,w,c
 28600   011918  0009               	tblrd		*+
 28601   01191A  10F5               	iorwf	tablat,w,c
 28602   01191C  B4D8               	btfsc	status,2,c
 28603   01191E  D04D               	goto	u10769
 28604                           
 28605                           ; BSR set to: 5
 28606   011920  51EE               	movf	poll@i& (0+255),w,b
 28607   011922  0D02               	mullw	2
 28608   011924  0E39               	movlw	low _services
 28609   011926  24F3               	addwf	243,w,c
 28610   011928  6EF6               	movwf	tblptrl,c
 28611   01192A  0EFF               	movlw	high _services
 28612   01192C  20F4               	addwfc	244,w,c
 28613   01192E  6EF7               	movwf	tblptrh,c
 28614   011930                     	if	1	;There are 3 active tblptr bytes
 28615   011930  6AF8               	clrf	tblptru,c
 28616   011932  0E00               	movlw	low (__pmediumconst shr (0+16))
 28617   011934  22F8               	addwfc	tblptru,f,c
 28618   011936                     	endif
 28619   011936  0009               	tblrd		*+
 28620   011938  C4F5 F5E9          	movff	tablat,??_poll
 28621   01193C  0009               	tblrd		*+
 28622   01193E  C4F5 F5EA          	movff	tablat,??_poll+1
 28623   011942  0E0B               	movlw	11
 28624   011944  27E9               	addwf	??_poll& (0+255),f,b
 28625   011946  0E00               	movlw	0
 28626   011948  23EA               	addwfc	(??_poll+1)& (0+255),f,b
 28627   01194A  C5E9  F4F6         	movff	??_poll,tblptrl
 28628   01194E  C5EA  F4F7         	movff	??_poll+1,tblptrh
 28629   011952                     	if	0	;tblptru may be non-zero
 28630   011952                     	endif
 28631   011952                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28632   011952  0E00               	movlw	low (__pmediumconst shr (0+16))
 28633   011954  6EF8               	movwf	tblptru,c
 28634   011956                     	endif
 28635   011956  0009               	tblrd		*+
 28636   011958  50F5               	movf	tablat,w,c
 28637   01195A  0009               	tblrd		*+
 28638   01195C  10F5               	iorwf	tablat,w,c
 28639   01195E  0009               	tblrd		*+
 28640   011960  10F5               	iorwf	tablat,w,c
 28641   011962  B4D8               	btfsc	status,2,c
 28642   011964  D02A               	goto	u10769
 28643                           
 28644                           ; BSR set to: 5
 28645                           ;../../VLCBlib_PIC/vlcb.c: 1022:             services[i]->poll();
 28646   011966  51EE               	movf	poll@i& (0+255),w,b
 28647   011968  0D02               	mullw	2
 28648   01196A  0E39               	movlw	low _services
 28649   01196C  24F3               	addwf	243,w,c
 28650   01196E  6EF6               	movwf	tblptrl,c
 28651   011970  0EFF               	movlw	high _services
 28652   011972  20F4               	addwfc	244,w,c
 28653   011974  6EF7               	movwf	tblptrh,c
 28654   011976                     	if	1	;There are 3 active tblptr bytes
 28655   011976  6AF8               	clrf	tblptru,c
 28656   011978  0E00               	movlw	low (__pmediumconst shr (0+16))
 28657   01197A  22F8               	addwfc	tblptru,f,c
 28658   01197C                     	endif
 28659   01197C  0009               	tblrd		*+
 28660   01197E  C4F5 F5E9          	movff	tablat,??_poll
 28661   011982  0009               	tblrd		*+
 28662   011984  C4F5 F5EA          	movff	tablat,??_poll+1
 28663   011988  0E0B               	movlw	11
 28664   01198A  27E9               	addwf	??_poll& (0+255),f,b
 28665   01198C  0E00               	movlw	0
 28666   01198E  23EA               	addwfc	(??_poll+1)& (0+255),f,b
 28667   011990  C5E9  F4F6         	movff	??_poll,tblptrl
 28668   011994  C5EA  F4F7         	movff	??_poll+1,tblptrh
 28669   011998                     	if	0	;tblptru may be non-zero
 28670   011998                     	endif
 28671   011998                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28672   011998  0E00               	movlw	low (__pmediumconst shr (0+16))
 28673   01199A  6EF8               	movwf	tblptru,c
 28674   01199C                     	endif
 28675   01199C  D801               	call	u10768
 28676   01199E  D00D               	goto	u10769
 28677   0119A0                     u10768:
 28678   0119A0  0005               	push	
 28679   0119A2  6EFA               	movwf	pclath,c
 28680   0119A4  0009               	tblrd		*+
 28681   0119A6  50F5               	movf	tablat,w,c
 28682   0119A8  6EFD               	movwf	tosl,c
 28683   0119AA  0009               	tblrd		*+
 28684   0119AC  50F5               	movf	tablat,w,c
 28685   0119AE  6EFE               	movwf	tosh,c
 28686   0119B0  0009               	tblrd		*+
 28687   0119B2  50F5               	movf	tablat,w,c
 28688   0119B4  6EFF               	movwf	tosu,c
 28689   0119B6  50FA               	movf	pclath,w,c
 28690   0119B8  0012               	return		;indir
 28691   0119BA                     u10769:
 28692                           
 28693                           ;../../VLCBlib_PIC/vlcb.c: 1024:     }
 28694   0119BA  0105               	movlb	5	; () banked
 28695   0119BC  2BEE               	incf	poll@i& (0+255),f,b
 28696                           
 28697                           ; BSR set to: 5
 28698   0119BE  0E07               	movlw	7
 28699   0119C0  65EE               	cpfsgt	poll@i& (0+255),b
 28700   0119C2  D79D               	goto	l12369
 28701                           
 28702                           ; BSR set to: 5
 28703                           ;../../VLCBlib_PIC/vlcb.c: 1026:     leds_poll();
 28704   0119C4  EC6B  F090         	call	_leds_poll	;wreg free
 28705                           
 28706                           ;../../VLCBlib_PIC/vlcb.c: 1029:     handled = NOT_PROCESSED;
 28707   0119C8  0105               	movlb	5	; () banked
 28708   0119CA  6BED               	clrf	poll@handled& (0+255),b
 28709                           
 28710                           ; BSR set to: 5
 28711                           ;../../VLCBlib_PIC/vlcb.c: 1030:     if (transport != ((void*)0)) {
 28712   0119CC  5180               	movf	_transport& (0+255),w,b
 28713   0119CE  1181               	iorwf	(_transport+1)& (0+255),w,b
 28714   0119D0  B4D8               	btfsc	status,2,c
 28715   0119D2  D0C2               	goto	l2278
 28716                           
 28717                           ; BSR set to: 5
 28718                           ;../../VLCBlib_PIC/vlcb.c: 1031:         if (transport->receiveMessage != ((void*)0)) {
 28719   0119D4  0E03               	movlw	3
 28720   0119D6  2580               	addwf	_transport& (0+255),w,b
 28721   0119D8  6FE9               	movwf	??_poll& (0+255),b
 28722   0119DA  0E00               	movlw	0
 28723   0119DC  2181               	addwfc	(_transport+1)& (0+255),w,b
 28724   0119DE  6FEA               	movwf	(??_poll+1)& (0+255),b
 28725   0119E0  C5E9  F4F6         	movff	??_poll,tblptrl
 28726   0119E4  C5EA  F4F7         	movff	??_poll+1,tblptrh
 28727   0119E8                     	if	0	;tblptru may be non-zero
 28728   0119E8                     	endif
 28729   0119E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28730   0119E8  0E00               	movlw	low (__pmediumconst shr (0+16))
 28731   0119EA  6EF8               	movwf	tblptru,c
 28732   0119EC                     	endif
 28733   0119EC  0009               	tblrd		*+
 28734   0119EE  50F5               	movf	tablat,w,c
 28735   0119F0  0009               	tblrd		*+
 28736   0119F2  10F5               	iorwf	tablat,w,c
 28737   0119F4  0009               	tblrd		*+
 28738   0119F6  10F5               	iorwf	tablat,w,c
 28739   0119F8  B4D8               	btfsc	status,2,c
 28740   0119FA  D0AE               	goto	l2278
 28741                           
 28742                           ; BSR set to: 5
 28743                           ;../../VLCBlib_PIC/vlcb.c: 1032:             if (transport->receiveMessage(&m)) {
 28744   0119FC  0EEF               	movlw	low poll@m
 28745   0119FE  6E10               	movwf	canReceiveMessage@m^(0+1280),c
 28746   011A00  0E05               	movlw	high poll@m
 28747   011A02  6E11               	movwf	(canReceiveMessage@m+1)^(0+1280),c
 28748   011A04  0E03               	movlw	3
 28749   011A06  2580               	addwf	_transport& (0+255),w,b
 28750   011A08  6FE9               	movwf	??_poll& (0+255),b
 28751   011A0A  0E00               	movlw	0
 28752   011A0C  2181               	addwfc	(_transport+1)& (0+255),w,b
 28753   011A0E  6FEA               	movwf	(??_poll+1)& (0+255),b
 28754   011A10  C5E9  F4F6         	movff	??_poll,tblptrl
 28755   011A14  C5EA  F4F7         	movff	??_poll+1,tblptrh
 28756   011A18                     	if	0	;tblptru may be non-zero
 28757   011A18                     	endif
 28758   011A18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28759   011A18  0E00               	movlw	low (__pmediumconst shr (0+16))
 28760   011A1A  6EF8               	movwf	tblptru,c
 28761   011A1C                     	endif
 28762   011A1C  D801               	call	u10808
 28763   011A1E  D00D               	goto	u10809
 28764   011A20                     u10808:
 28765   011A20  0005               	push	
 28766   011A22  6EFA               	movwf	pclath,c
 28767   011A24  0009               	tblrd		*+
 28768   011A26  50F5               	movf	tablat,w,c
 28769   011A28  6EFD               	movwf	tosl,c
 28770   011A2A  0009               	tblrd		*+
 28771   011A2C  50F5               	movf	tablat,w,c
 28772   011A2E  6EFE               	movwf	tosh,c
 28773   011A30  0009               	tblrd		*+
 28774   011A32  50F5               	movf	tablat,w,c
 28775   011A34  6EFF               	movwf	tosu,c
 28776   011A36  50FA               	movf	pclath,w,c
 28777   011A38  0012               	return		;indir
 28778   011A3A                     u10809:
 28779   011A3A  0900               	iorlw	0
 28780   011A3C  B4D8               	btfsc	status,2,c
 28781   011A3E  D08C               	goto	l2278
 28782                           
 28783                           ;../../VLCBlib_PIC/vlcb.c: 1033:                 if (m.len > 0) {
 28784   011A40  0105               	movlb	5	; () banked
 28785   011A42  51EF               	movf	poll@m& (0+255),w,b
 28786   011A44  B4D8               	btfsc	status,2,c
 28787   011A46  D088               	goto	l2278
 28788                           
 28789                           ; BSR set to: 5
 28790                           ;../../VLCBlib_PIC/vlcb.c: 1034:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
 28791   011A48  0E07               	movlw	7
 28792   011A4A  EC45  F09E         	call	_showStatus
 28793                           
 28794                           ;../../VLCBlib_PIC/vlcb.c: 1035:                     handled = APP_preProcessMessage(&m)
      +                          ;
 28795   011A4E  0EEF               	movlw	low poll@m
 28796   011A50  6E5C               	movwf	APP_preProcessMessage@m^(0+1280),c
 28797   011A52  0E05               	movlw	high poll@m
 28798   011A54  6E5D               	movwf	(APP_preProcessMessage@m+1)^(0+1280),c
 28799   011A56  ECB5  F093         	call	_APP_preProcessMessage	;wreg free
 28800   011A5A  0105               	movlb	5	; () banked
 28801   011A5C  6FED               	movwf	poll@handled& (0+255),b
 28802                           
 28803                           ; BSR set to: 5
 28804                           ;../../VLCBlib_PIC/vlcb.c: 1036:                     if (handled == NOT_PROCESSED) {
 28805   011A5E  51ED               	movf	poll@handled& (0+255),w,b
 28806   011A60  A4D8               	btfss	status,2,c
 28807   011A62  D07A               	goto	l2278
 28808                           
 28809                           ; BSR set to: 5
 28810                           ;../../VLCBlib_PIC/vlcb.c: 1037:                         for (i=0; i<8; i++) {
 28811   011A64  6BEE               	clrf	poll@i& (0+255),b
 28812   011A66                     l12403:
 28813                           
 28814                           ; BSR set to: 5
 28815                           ;../../VLCBlib_PIC/vlcb.c: 1038:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
 28816   011A66  51EE               	movf	poll@i& (0+255),w,b
 28817   011A68  0D02               	mullw	2
 28818   011A6A  0E39               	movlw	low _services
 28819   011A6C  24F3               	addwf	243,w,c
 28820   011A6E  6EF6               	movwf	tblptrl,c
 28821   011A70  0EFF               	movlw	high _services
 28822   011A72  20F4               	addwfc	244,w,c
 28823   011A74  6EF7               	movwf	tblptrh,c
 28824   011A76                     	if	1	;There are 3 active tblptr bytes
 28825   011A76  6AF8               	clrf	tblptru,c
 28826   011A78  0E00               	movlw	low (__pmediumconst shr (0+16))
 28827   011A7A  22F8               	addwfc	tblptru,f,c
 28828   011A7C                     	endif
 28829   011A7C  0009               	tblrd		*+
 28830   011A7E  50F5               	movf	tablat,w,c
 28831   011A80  0009               	tblrd		*+
 28832   011A82  10F5               	iorwf	tablat,w,c
 28833   011A84  B4D8               	btfsc	status,2,c
 28834   011A86  D058               	goto	l12411
 28835                           
 28836                           ; BSR set to: 5
 28837   011A88  51EE               	movf	poll@i& (0+255),w,b
 28838   011A8A  0D02               	mullw	2
 28839   011A8C  0E39               	movlw	low _services
 28840   011A8E  24F3               	addwf	243,w,c
 28841   011A90  6EF6               	movwf	tblptrl,c
 28842   011A92  0EFF               	movlw	high _services
 28843   011A94  20F4               	addwfc	244,w,c
 28844   011A96  6EF7               	movwf	tblptrh,c
 28845   011A98                     	if	1	;There are 3 active tblptr bytes
 28846   011A98  6AF8               	clrf	tblptru,c
 28847   011A9A  0E00               	movlw	low (__pmediumconst shr (0+16))
 28848   011A9C  22F8               	addwfc	tblptru,f,c
 28849   011A9E                     	endif
 28850   011A9E  0009               	tblrd		*+
 28851   011AA0  C4F5 F5E9          	movff	tablat,??_poll
 28852   011AA4  0009               	tblrd		*+
 28853   011AA6  C4F5 F5EA          	movff	tablat,??_poll+1
 28854   011AAA  0E08               	movlw	8
 28855   011AAC  27E9               	addwf	??_poll& (0+255),f,b
 28856   011AAE  0E00               	movlw	0
 28857   011AB0  23EA               	addwfc	(??_poll+1)& (0+255),f,b
 28858   011AB2  C5E9  F4F6         	movff	??_poll,tblptrl
 28859   011AB6  C5EA  F4F7         	movff	??_poll+1,tblptrh
 28860   011ABA                     	if	0	;tblptru may be non-zero
 28861   011ABA                     	endif
 28862   011ABA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28863   011ABA  0E00               	movlw	low (__pmediumconst shr (0+16))
 28864   011ABC  6EF8               	movwf	tblptru,c
 28865   011ABE                     	endif
 28866   011ABE  0009               	tblrd		*+
 28867   011AC0  50F5               	movf	tablat,w,c
 28868   011AC2  0009               	tblrd		*+
 28869   011AC4  10F5               	iorwf	tablat,w,c
 28870   011AC6  0009               	tblrd		*+
 28871   011AC8  10F5               	iorwf	tablat,w,c
 28872   011ACA  B4D8               	btfsc	status,2,c
 28873   011ACC  D035               	goto	l12411
 28874                           
 28875                           ; BSR set to: 5
 28876                           ;../../VLCBlib_PIC/vlcb.c: 1039:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
 28877   011ACE  0EEF               	movlw	low poll@m
 28878   011AD0  6E53               	movwf	producerProcessMessage@m^(0+1280),c
 28879   011AD2  0E05               	movlw	high poll@m
 28880   011AD4  6E54               	movwf	(producerProcessMessage@m+1)^(0+1280),c
 28881   011AD6  51EE               	movf	poll@i& (0+255),w,b
 28882   011AD8  0D02               	mullw	2
 28883   011ADA  0E39               	movlw	low _services
 28884   011ADC  24F3               	addwf	243,w,c
 28885   011ADE  6EF6               	movwf	tblptrl,c
 28886   011AE0  0EFF               	movlw	high _services
 28887   011AE2  20F4               	addwfc	244,w,c
 28888   011AE4  6EF7               	movwf	tblptrh,c
 28889   011AE6                     	if	1	;There are 3 active tblptr bytes
 28890   011AE6  6AF8               	clrf	tblptru,c
 28891   011AE8  0E00               	movlw	low (__pmediumconst shr (0+16))
 28892   011AEA  22F8               	addwfc	tblptru,f,c
 28893   011AEC                     	endif
 28894   011AEC  0009               	tblrd		*+
 28895   011AEE  C4F5 F5E9          	movff	tablat,??_poll
 28896   011AF2  0009               	tblrd		*+
 28897   011AF4  C4F5 F5EA          	movff	tablat,??_poll+1
 28898   011AF8  0E08               	movlw	8
 28899   011AFA  27E9               	addwf	??_poll& (0+255),f,b
 28900   011AFC  0E00               	movlw	0
 28901   011AFE  23EA               	addwfc	(??_poll+1)& (0+255),f,b
 28902   011B00  C5E9  F4F6         	movff	??_poll,tblptrl
 28903   011B04  C5EA  F4F7         	movff	??_poll+1,tblptrh
 28904   011B08                     	if	0	;tblptru may be non-zero
 28905   011B08                     	endif
 28906   011B08                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28907   011B08  0E00               	movlw	low (__pmediumconst shr (0+16))
 28908   011B0A  6EF8               	movwf	tblptru,c
 28909   011B0C                     	endif
 28910   011B0C  D801               	call	u10868
 28911   011B0E  D00D               	goto	u10869
 28912   011B10                     u10868:
 28913   011B10  0005               	push	
 28914   011B12  6EFA               	movwf	pclath,c
 28915   011B14  0009               	tblrd		*+
 28916   011B16  50F5               	movf	tablat,w,c
 28917   011B18  6EFD               	movwf	tosl,c
 28918   011B1A  0009               	tblrd		*+
 28919   011B1C  50F5               	movf	tablat,w,c
 28920   011B1E  6EFE               	movwf	tosh,c
 28921   011B20  0009               	tblrd		*+
 28922   011B22  50F5               	movf	tablat,w,c
 28923   011B24  6EFF               	movwf	tosu,c
 28924   011B26  50FA               	movf	pclath,w,c
 28925   011B28  0012               	return		;indir
 28926   011B2A                     u10869:
 28927   011B2A  06E8               	decf	wreg,f,c
 28928   011B2C  A4D8               	btfss	status,2,c
 28929   011B2E  D004               	goto	l12411
 28930                           
 28931                           ;../../VLCBlib_PIC/vlcb.c: 1040:                                     handled = PROCESSED
      +                          ;
 28932   011B30  0E01               	movlw	1
 28933   011B32  0105               	movlb	5	; () banked
 28934   011B34  6FED               	movwf	poll@handled& (0+255),b
 28935                           
 28936                           ;../../VLCBlib_PIC/vlcb.c: 1041:                                     break;
 28937   011B36  D005               	goto	u10880
 28938   011B38                     l12411:
 28939                           
 28940                           ;../../VLCBlib_PIC/vlcb.c: 1044:                         }
 28941   011B38  0105               	movlb	5	; () banked
 28942   011B3A  2BEE               	incf	poll@i& (0+255),f,b
 28943                           
 28944                           ; BSR set to: 5
 28945   011B3C  0E07               	movlw	7
 28946   011B3E  65EE               	cpfsgt	poll@i& (0+255),b
 28947   011B40  D792               	goto	l12403
 28948   011B42                     u10880:
 28949                           
 28950                           ; BSR set to: 5
 28951                           ;../../VLCBlib_PIC/vlcb.c: 1045:                         if (handled == NOT_PROCESSED) {
 28952   011B42  51ED               	movf	poll@handled& (0+255),w,b
 28953   011B44  A4D8               	btfss	status,2,c
 28954   011B46  D008               	goto	l2278
 28955                           
 28956                           ; BSR set to: 5
 28957                           ;../../VLCBlib_PIC/vlcb.c: 1046:                             handled = APP_postProcessMe
      +                          ssage(&m);
 28958   011B48  0EEF               	movlw	low poll@m
 28959   011B4A  6E01               	movwf	APP_postProcessMessage@m^(0+1280),c
 28960   011B4C  0E05               	movlw	high poll@m
 28961   011B4E  6E02               	movwf	(APP_postProcessMessage@m+1)^(0+1280),c
 28962   011B50  EC26  F0B3         	call	_APP_postProcessMessage	;wreg free
 28963   011B54  0105               	movlb	5	; () banked
 28964   011B56  6FED               	movwf	poll@handled& (0+255),b
 28965   011B58                     l2278:
 28966                           
 28967                           ;../../VLCBlib_PIC/vlcb.c: 1053:     if (handled) {
 28968                           
 28969                           ; BSR set to: 5
 28970   011B58  0105               	movlb	5	; () banked
 28971   011B5A  51ED               	movf	poll@handled& (0+255),w,b
 28972   011B5C  B4D8               	btfsc	status,2,c
 28973   011B5E  0012               	return	
 28974                           
 28975                           ; BSR set to: 5
 28976                           ;../../VLCBlib_PIC/vlcb.c: 1054:         mnsDiagnostics[0x06].asUint++;
 28977   011B60  4BAE               	infsnz	(_mnsDiagnostics+12)& (0+255),f,b
 28978   011B62  2BAF               	incf	(_mnsDiagnostics+13)& (0+255),f,b
 28979                           
 28980                           ; BSR set to: 5
 28981                           ;../../VLCBlib_PIC/vlcb.c: 1055:         showStatus(STATUS_MESSAGE_ACTED);
 28982   011B64  0E08               	movlw	8
 28983   011B66  EC45  F09E         	call	_showStatus
 28984   011B6A  0012               	return		;funcret
 28985   011B6C                     __end_of_poll:
 28986                           	callstack 0
 28987                           
 28988 ;; *************** function _pollTimedResponse *****************
 28989 ;; Defined at:
 28990 ;;		line 116 in file "../../VLCBlib_PIC/timedResponse.c"
 28991 ;; Parameters:    Size  Location     Type
 28992 ;;		None
 28993 ;; Auto vars:     Size  Location     Type
 28994 ;;  result          1   65[COMRAM] enum E23465
 28995 ;; Return value:  Size  Location     Type
 28996 ;;                  1    wreg      void 
 28997 ;; Registers used:
 28998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28999 ;; Tracked objects:
 29000 ;;		On entry : 0/0
 29001 ;;		On exit  : 0/0
 29002 ;;		Unchanged: 0/0
 29003 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29006 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29007 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29008 ;;Total ram usage:        3 bytes
 29009 ;; Hardware stack levels used: 1
 29010 ;; Hardware stack levels required when called: 8
 29011 ;; This function calls:
 29012 ;;		NULL
 29013 ;;		_mnsTRallDiagnosticsCallback
 29014 ;;		_mnsTRrqnpnCallback
 29015 ;;		_mnsTRserviceDiscoveryCallback
 29016 ;;		_nerdCallback
 29017 ;;		_nvTRnvrdCallback
 29018 ;;		_reqevCallback
 29019 ;;		_sodTRCallback
 29020 ;; This function is called by:
 29021 ;;		_poll
 29022 ;; This function uses a non-reentrant model
 29023 ;;
 29024                           
 29025                           	psect	text21
 29026   014DB4                     __ptext21:
 29027                           	callstack 0
 29028   014DB4                     _pollTimedResponse:
 29029                           	callstack 117
 29030                           
 29031                           ;../../VLCBlib_PIC/timedResponse.c: 117:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 119:     if (timedResponseType == 0xFF) {
 29032                           
 29033                           ;incstack = 0
 29034   014DB4  0105               	movlb	5	; () banked
 29035   014DB6  2985               	incf	_timedResponseType& (0+255),w,b
 29036   014DB8  B4D8               	btfsc	status,2,c
 29037   014DBA  0012               	return	
 29038                           
 29039                           ; BSR set to: 5
 29040                           ;../../VLCBlib_PIC/timedResponse.c: 123:     if (timedResponseCallback == ((void*)0)) {
 29041   014DBC  5174               	movf	_timedResponseCallback& (0+255),w,b
 29042   014DBE  1175               	iorwf	(_timedResponseCallback+1)& (0+255),w,b
 29043   014DC0  1176               	iorwf	(_timedResponseCallback+2)& (0+255),w,b
 29044   014DC2  A4D8               	btfss	status,2,c
 29045   014DC4  D002               	goto	l12167
 29046   014DC6                     u10470:
 29047                           
 29048                           ; BSR set to: 5
 29049                           ;../../VLCBlib_PIC/timedResponse.c: 125:         timedResponseType = 0xFF;
 29050   014DC6  6985               	setf	_timedResponseType& (0+255),b
 29051                           
 29052                           ;../../VLCBlib_PIC/timedResponse.c: 126:         return;
 29053   014DC8  0012               	return	
 29054   014DCA                     l12167:
 29055                           
 29056                           ; BSR set to: 5
 29057                           ;../../VLCBlib_PIC/timedResponse.c: 130:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 29058   014DCA  D801               	call	u10488
 29059   014DCC  D00F               	goto	u10489
 29060   014DCE                     u10488:
 29061   014DCE  0005               	push	
 29062   014DD0  6EFA               	movwf	pclath,c
 29063   014DD2  5174               	movf	_timedResponseCallback& (0+255),w,b
 29064   014DD4  6EFD               	movwf	tosl,c
 29065   014DD6  5175               	movf	(_timedResponseCallback+1)& (0+255),w,b
 29066   014DD8  6EFE               	movwf	tosh,c
 29067   014DDA  5176               	movf	(_timedResponseCallback+2)& (0+255),w,b
 29068   014DDC  6EFF               	movwf	tosu,c
 29069   014DDE  50FA               	movf	pclath,w,c
 29070   014DE0  C587  F531         	movff	_timedResponseServiceIndex,nvTRnvrdCallback@serviceIndex
 29071   014DE4  C584  F532         	movff	_timedResponseStep,nvTRnvrdCallback@step
 29072   014DE8  5185               	movf	_timedResponseType& (0+255),w,b
 29073   014DEA  0012               	return		;indir
 29074   014DEC                     u10489:
 29075   014DEC  6E42               	movwf	pollTimedResponse@result^(0+1280),c
 29076                           
 29077                           ;../../VLCBlib_PIC/timedResponse.c: 131:     switch (result) {
 29078   014DEE  D00E               	goto	l12181
 29079   014DF0                     l12169:
 29080                           
 29081                           ;../../VLCBlib_PIC/timedResponse.c: 135:             if (timedResponseAllServicesFlag) {
 29082   014DF0  0105               	movlb	5	; () banked
 29083   014DF2  5186               	movf	_timedResponseAllServicesFlag& (0+255),w,b
 29084   014DF4  B4D8               	btfsc	status,2,c
 29085   014DF6  D7E7               	goto	u10470
 29086                           
 29087                           ; BSR set to: 5
 29088                           ;../../VLCBlib_PIC/timedResponse.c: 137:                 timedResponseServiceIndex++;
 29089   014DF8  2B87               	incf	_timedResponseServiceIndex& (0+255),f,b
 29090                           
 29091                           ; BSR set to: 5
 29092                           ;../../VLCBlib_PIC/timedResponse.c: 138:                 if (timedResponseServiceIndex >
      +                          = 8) {
 29093   014DFA  0E07               	movlw	7
 29094   014DFC  6587               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 29095   014DFE  D001               	goto	l2127
 29096   014E00  D7E2               	goto	u10470
 29097   014E02                     l2127:
 29098                           
 29099                           ; BSR set to: 5
 29100                           ;../../VLCBlib_PIC/timedResponse.c: 142:                     timedResponseStep = 0;
 29101   014E02  6B84               	clrf	_timedResponseStep& (0+255),b
 29102   014E04  0012               	return	
 29103   014E06                     l12177:
 29104                           
 29105                           ;../../VLCBlib_PIC/timedResponse.c: 151:             timedResponseStep++;
 29106   014E06  0105               	movlb	5	; () banked
 29107   014E08  2B84               	incf	_timedResponseStep& (0+255),f,b
 29108                           
 29109                           ;../../VLCBlib_PIC/timedResponse.c: 152:             break;
 29110   014E0A  0012               	return	
 29111   014E0C                     l12181:
 29112   014E0C  5042               	movf	pollTimedResponse@result^(0+1280),w,c
 29113   014E0E  6E40               	movwf	??_pollTimedResponse^(0+1280),c
 29114   014E10  6A41               	clrf	(??_pollTimedResponse+1)^(0+1280),c
 29115                           
 29116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29117                           ; Switch size 1, requested type "simple"
 29118                           ; Number of cases is 1, Range of values is 0 to 0
 29119                           ; switch strategies available:
 29120                           ; Name         Instructions Cycles
 29121                           ; simple_byte            4     3 (average)
 29122                           ;	Chosen strategy is simple_byte
 29123   014E12  5041               	movf	(??_pollTimedResponse+1)^(0+1280),w,c
 29124   014E14  0A00               	xorlw	0	; case 0
 29125   014E16  A4D8               	btfss	status,2,c
 29126   014E18  0012               	return	
 29127                           
 29128                           ; Switch size 1, requested type "simple"
 29129                           ; Number of cases is 3, Range of values is 0 to 2
 29130                           ; switch strategies available:
 29131                           ; Name         Instructions Cycles
 29132                           ; simple_byte           10     6 (average)
 29133                           ;	Chosen strategy is simple_byte
 29134   014E1A  5040               	movf	??_pollTimedResponse^(0+1280),w,c
 29135   014E1C  0A00               	xorlw	0	; case 0
 29136   014E1E  B4D8               	btfsc	status,2,c
 29137   014E20  D7E7               	goto	l12169
 29138   014E22  0A01               	xorlw	1	; case 1
 29139   014E24  B4D8               	btfsc	status,2,c
 29140   014E26  0012               	return	
 29141   014E28  0A03               	xorlw	3	; case 2
 29142   014E2A  A4D8               	btfss	status,2,c
 29143   014E2C  0012               	return	
 29144   014E2E  D7EB               	goto	l12177
 29145   014E30                     __end_of_pollTimedResponse:
 29146                           	callstack 0
 29147                           
 29148 ;; *************** function _nvTRnvrdCallback *****************
 29149 ;; Defined at:
 29150 ;;		line 369 in file "../../VLCBlib_PIC/nv.c"
 29151 ;; Parameters:    Size  Location     Type
 29152 ;;  type            1    wreg     unsigned char 
 29153 ;;  serviceIndex    1   48[COMRAM] unsigned char 
 29154 ;;  step            1   49[COMRAM] unsigned char 
 29155 ;; Auto vars:     Size  Location     Type
 29156 ;;  type            1    0[COMRAM] unsigned char 
 29157 ;;  valueOrError    2   50[COMRAM] short 
 29158 ;; Return value:  Size  Location     Type
 29159 ;;                  1    wreg      enum E23489
 29160 ;; Registers used:
 29161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29162 ;; Tracked objects:
 29163 ;;		On entry : 0/0
 29164 ;;		On exit  : 0/0
 29165 ;;		Unchanged: 0/0
 29166 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29168 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29170 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29171 ;;Total ram usage:        4 bytes
 29172 ;; Hardware stack levels used: 1
 29173 ;; Hardware stack levels required when called: 6
 29174 ;; This function calls:
 29175 ;;		_getNV
 29176 ;;		_sendMessage4
 29177 ;; This function is called by:
 29178 ;;		_nvProcessMessage
 29179 ;;		_pollTimedResponse
 29180 ;; This function uses a non-reentrant model
 29181 ;;
 29182                           
 29183                           	psect	text22
 29184   015E1C                     __ptext22:
 29185                           	callstack 0
 29186   015E1C                     _nvTRnvrdCallback:
 29187                           	callstack 118
 29188                           
 29189                           ;../../VLCBlib_PIC/nv.c: 370:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 371:    
      +                           if (step > 67) {
 29190                           
 29191                           ;incstack = 0
 29192   015E1C  0E43               	movlw	67
 29193   015E1E  6432               	cpfsgt	nvTRnvrdCallback@step^(0+1280),c
 29194   015E20  D002               	goto	l11059
 29195   015E22                     u9100:
 29196                           
 29197                           ;../../VLCBlib_PIC/nv.c: 372:         return TIMED_RESPONSE_RESULT_FINISHED;
 29198   015E22  0E00               	movlw	0
 29199   015E24  0012               	return	
 29200   015E26                     l11059:
 29201                           
 29202                           ;../../VLCBlib_PIC/nv.c: 374:     valueOrError = getNV(step+1);
 29203   015E26  2832               	incf	nvTRnvrdCallback@step^(0+1280),w,c
 29204   015E28  EC49  F0AF         	call	_getNV
 29205   015E2C  C501  F533         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 29206   015E30  C502  F534         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 29207                           
 29208                           ;../../VLCBlib_PIC/nv.c: 375:     if (valueOrError < 0) {
 29209   015E34  BE34               	btfsc	(nvTRnvrdCallback@valueOrError+1)^(0+1280),7,c
 29210   015E36  D7F5               	goto	u9100
 29211                           
 29212                           ;../../VLCBlib_PIC/nv.c: 378:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 29213   015E38  C55F  F525         	movff	_nn+1,sendMessage4@data1
 29214   015E3C  C55E  F526         	movff	_nn,sendMessage4@data2
 29215   015E40  2832               	incf	nvTRnvrdCallback@step^(0+1280),w,c
 29216   015E42  6E27               	movwf	sendMessage4@data3^(0+1280),c
 29217   015E44  C533  F528         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 29218   015E48  0E97               	movlw	151
 29219   015E4A  EC4B  F0B1         	call	_sendMessage4
 29220                           
 29221                           ;../../VLCBlib_PIC/nv.c: 380:     nvDiagnostics[0x01].asUint++;
 29222   015E4E  0105               	movlb	5	; () banked
 29223   015E50  4BB2               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 29224   015E52  2BB3               	incf	(_nvDiagnostics+3)& (0+255),f,b
 29225                           
 29226                           ; BSR set to: 5
 29227                           ;../../VLCBlib_PIC/nv.c: 382:     return TIMED_RESPONSE_RESULT_NEXT;
 29228   015E54  0E02               	movlw	2
 29229   015E56  0012               	return		;funcret
 29230   015E58                     __end_of_nvTRnvrdCallback:
 29231                           	callstack 0
 29232                           
 29233 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 29234 ;; Defined at:
 29235 ;;		line 899 in file "../../VLCBlib_PIC/mns.c"
 29236 ;; Parameters:    Size  Location     Type
 29237 ;;  type            1    wreg     unsigned char 
 29238 ;;  serviceIndex    1   48[COMRAM] unsigned char 
 29239 ;;  step            1   49[COMRAM] unsigned char 
 29240 ;; Auto vars:     Size  Location     Type
 29241 ;;  type            1    0[COMRAM] unsigned char 
 29242 ;; Return value:  Size  Location     Type
 29243 ;;                  1    wreg      enum E23472
 29244 ;; Registers used:
 29245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29246 ;; Tracked objects:
 29247 ;;		On entry : 0/0
 29248 ;;		On exit  : 0/0
 29249 ;;		Unchanged: 0/0
 29250 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29253 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29254 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29255 ;;Total ram usage:        6 bytes
 29256 ;; Hardware stack levels used: 1
 29257 ;; Hardware stack levels required when called: 6
 29258 ;; This function calls:
 29259 ;;		_sendMessage5
 29260 ;; This function is called by:
 29261 ;;		_mnsProcessMessage
 29262 ;;		_pollTimedResponse
 29263 ;; This function uses a non-reentrant model
 29264 ;;
 29265                           
 29266                           	psect	text23
 29267   014786                     __ptext23:
 29268                           	callstack 0
 29269   014786                     _mnsTRserviceDiscoveryCallback:
 29270                           	callstack 118
 29271                           
 29272                           ;../../VLCBlib_PIC/mns.c: 900:     if (step >= 8) {
 29273                           
 29274                           ;incstack = 0
 29275   014786  0E07               	movlw	7
 29276   014788  6432               	cpfsgt	mnsTRserviceDiscoveryCallback@step^(0+1280),c
 29277   01478A  D002               	goto	l10859
 29278                           
 29279                           ;../../VLCBlib_PIC/mns.c: 901:         return TIMED_RESPONSE_RESULT_FINISHED;
 29280   01478C  0E00               	movlw	0
 29281   01478E  0012               	return	
 29282   014790                     l10859:
 29283                           
 29284                           ;../../VLCBlib_PIC/mns.c: 904:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 29285   014790  C55F  F525         	movff	_nn+1,sendMessage5@data1
 29286   014794  C55E  F526         	movff	_nn,sendMessage5@data2
 29287   014798  2832               	incf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 29288   01479A  6E27               	movwf	sendMessage5@data3^(0+1280),c
 29289   01479C  5032               	movf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 29290   01479E  0D02               	mullw	2
 29291   0147A0  0E39               	movlw	low _services
 29292   0147A2  24F3               	addwf	243,w,c
 29293   0147A4  6EF6               	movwf	tblptrl,c
 29294   0147A6  0EFF               	movlw	high _services
 29295   0147A8  20F4               	addwfc	244,w,c
 29296   0147AA  6EF7               	movwf	tblptrh,c
 29297   0147AC                     	if	1	;There are 3 active tblptr bytes
 29298   0147AC  6AF8               	clrf	tblptru,c
 29299   0147AE  0E00               	movlw	low (__pmediumconst shr (0+16))
 29300   0147B0  22F8               	addwfc	tblptru,f,c
 29301   0147B2                     	endif
 29302   0147B2  0009               	tblrd		*+
 29303   0147B4  C4F5 F533          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 29304   0147B8  0009               	tblrd		*+
 29305   0147BA  C4F5 F534          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 29306   0147BE  C533  F4F6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 29307   0147C2  C534  F4F7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 29308   0147C6                     	if	0	;tblptru may be non-zero
 29309   0147C6                     	endif
 29310   0147C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29311   0147C6  0E00               	movlw	low (__pmediumconst shr (0+16))
 29312   0147C8  6EF8               	movwf	tblptru,c
 29313   0147CA                     	endif
 29314   0147CA  0008               	tblrd		*
 29315   0147CC  C4F5 F528          	movff	tablat,sendMessage5@data4
 29316   0147D0  5032               	movf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 29317   0147D2  0D02               	mullw	2
 29318   0147D4  0E39               	movlw	low _services
 29319   0147D6  24F3               	addwf	243,w,c
 29320   0147D8  6EF6               	movwf	tblptrl,c
 29321   0147DA  0EFF               	movlw	high _services
 29322   0147DC  20F4               	addwfc	244,w,c
 29323   0147DE  6EF7               	movwf	tblptrh,c
 29324   0147E0                     	if	1	;There are 3 active tblptr bytes
 29325   0147E0  6AF8               	clrf	tblptru,c
 29326   0147E2  0E00               	movlw	low (__pmediumconst shr (0+16))
 29327   0147E4  22F8               	addwfc	tblptru,f,c
 29328   0147E6                     	endif
 29329   0147E6  0009               	tblrd		*+
 29330   0147E8  C4F5 F535          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 29331   0147EC  0009               	tblrd		*+
 29332   0147EE  C4F5 F536          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 29333   0147F2  0E01               	movlw	1
 29334   0147F4  2635               	addwf	(??_mnsTRserviceDiscoveryCallback+2)^(0+1280),f,c
 29335   0147F6  0E00               	movlw	0
 29336   0147F8  2236               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)^(0+1280),f,c
 29337   0147FA  C535  F4F6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 29338   0147FE  C536  F4F7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 29339   014802                     	if	0	;tblptru may be non-zero
 29340   014802                     	endif
 29341   014802                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29342   014802  0E00               	movlw	low (__pmediumconst shr (0+16))
 29343   014804  6EF8               	movwf	tblptru,c
 29344   014806                     	endif
 29345   014806  0008               	tblrd		*
 29346   014808  C4F5 F529          	movff	tablat,sendMessage5@data5
 29347   01480C  0EAC               	movlw	172
 29348   01480E  EC36  F0B1         	call	_sendMessage5
 29349                           
 29350                           ;../../VLCBlib_PIC/mns.c: 906:     return TIMED_RESPONSE_RESULT_NEXT;
 29351   014812  0E02               	movlw	2
 29352   014814  0012               	return		;funcret
 29353   014816                     __end_of_mnsTRserviceDiscoveryCallback:
 29354                           	callstack 0
 29355                           
 29356 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 29357 ;; Defined at:
 29358 ;;		line 918 in file "../../VLCBlib_PIC/mns.c"
 29359 ;; Parameters:    Size  Location     Type
 29360 ;;  type            1    wreg     unsigned char 
 29361 ;;  serviceIndex    1   48[COMRAM] unsigned char 
 29362 ;;  step            1   49[COMRAM] unsigned char 
 29363 ;; Auto vars:     Size  Location     Type
 29364 ;;  type            1    0[COMRAM] unsigned char 
 29365 ;;  d               2   52[COMRAM] PTR struct DiagnosticVal
 29366 ;;		 -> producerDiagnostics(4), nvDiagnostics(6), mnsDiagnostics(14), teachDiagnostics(4), 
 29367 ;;		 -> consumerDiagnostics(6), canDiagnostics(38), NULL(0), 
 29368 ;; Return value:  Size  Location     Type
 29369 ;;                  1    wreg      enum E23472
 29370 ;; Registers used:
 29371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29372 ;; Tracked objects:
 29373 ;;		On entry : 0/0
 29374 ;;		On exit  : 0/0
 29375 ;;		Unchanged: 0/0
 29376 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29378 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29379 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29380 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29381 ;;Total ram usage:        6 bytes
 29382 ;; Hardware stack levels used: 1
 29383 ;; Hardware stack levels required when called: 6
 29384 ;; This function calls:
 29385 ;;		NULL
 29386 ;;		_canGetDiagnostic
 29387 ;;		_consumerGetDiagnostic
 29388 ;;		_mnsGetDiagnostic
 29389 ;;		_nvGetDiagnostic
 29390 ;;		_producerGetDiagnostic
 29391 ;;		_sendMessage6
 29392 ;;		_teachGetDiagnostic
 29393 ;; This function is called by:
 29394 ;;		_mnsProcessMessage
 29395 ;;		_pollTimedResponse
 29396 ;; This function uses a non-reentrant model
 29397 ;;
 29398                           
 29399                           	psect	text24
 29400   0138C8                     __ptext24:
 29401                           	callstack 0
 29402   0138C8                     _mnsTRallDiagnosticsCallback:
 29403                           	callstack 118
 29404                           
 29405                           ;../../VLCBlib_PIC/mns.c: 919:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 29406                           
 29407                           ;incstack = 0
 29408   0138C8  5031               	movf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 29409   0138CA  0D02               	mullw	2
 29410   0138CC  0E39               	movlw	low _services
 29411   0138CE  24F3               	addwf	243,w,c
 29412   0138D0  6EF6               	movwf	tblptrl,c
 29413   0138D2  0EFF               	movlw	high _services
 29414   0138D4  20F4               	addwfc	244,w,c
 29415   0138D6  6EF7               	movwf	tblptrh,c
 29416   0138D8                     	if	1	;There are 3 active tblptr bytes
 29417   0138D8  6AF8               	clrf	tblptru,c
 29418   0138DA  0E00               	movlw	low (__pmediumconst shr (0+16))
 29419   0138DC  22F8               	addwfc	tblptru,f,c
 29420   0138DE                     	endif
 29421   0138DE  0009               	tblrd		*+
 29422   0138E0  C4F5 F533          	movff	tablat,??_mnsTRallDiagnosticsCallback
 29423   0138E4  0009               	tblrd		*+
 29424   0138E6  C4F5 F534          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 29425   0138EA  0E11               	movlw	17
 29426   0138EC  2633               	addwf	??_mnsTRallDiagnosticsCallback^(0+1280),f,c
 29427   0138EE  0E00               	movlw	0
 29428   0138F0  2234               	addwfc	(??_mnsTRallDiagnosticsCallback+1)^(0+1280),f,c
 29429   0138F2  C533  F4F6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 29430   0138F6  C534  F4F7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 29431   0138FA                     	if	0	;tblptru may be non-zero
 29432   0138FA                     	endif
 29433   0138FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29434   0138FA  0E00               	movlw	low (__pmediumconst shr (0+16))
 29435   0138FC  6EF8               	movwf	tblptru,c
 29436   0138FE                     	endif
 29437   0138FE  0009               	tblrd		*+
 29438   013900  50F5               	movf	tablat,w,c
 29439   013902  0009               	tblrd		*+
 29440   013904  10F5               	iorwf	tablat,w,c
 29441   013906  0009               	tblrd		*+
 29442   013908  10F5               	iorwf	tablat,w,c
 29443   01390A  A4D8               	btfss	status,2,c
 29444   01390C  D011               	goto	l10873
 29445                           
 29446                           ;../../VLCBlib_PIC/mns.c: 920:         sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, s
      +                          erviceIndex+1, 0, 0, 0);
 29447   01390E  C55F  F525         	movff	_nn+1,sendMessage6@data1
 29448   013912  C55E  F526         	movff	_nn,sendMessage6@data2
 29449   013916  2831               	incf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 29450   013918  6E27               	movwf	sendMessage6@data3^(0+1280),c
 29451   01391A  0E00               	movlw	0
 29452   01391C  6E28               	movwf	sendMessage6@data4^(0+1280),c
 29453   01391E  0E00               	movlw	0
 29454   013920  6E29               	movwf	sendMessage6@data5^(0+1280),c
 29455   013922  0E00               	movlw	0
 29456   013924  6E2A               	movwf	sendMessage6@data6^(0+1280),c
 29457   013926  0EC7               	movlw	199
 29458   013928  ECE2  F0B0         	call	_sendMessage6
 29459   01392C                     l10869:
 29460                           
 29461                           ;../../VLCBlib_PIC/mns.c: 921:         return TIMED_RESPONSE_RESULT_FINISHED;
 29462   01392C  0E00               	movlw	0
 29463   01392E  0012               	return	
 29464   013930                     l10873:
 29465                           
 29466                           ;../../VLCBlib_PIC/mns.c: 923:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step);
 29467   013930  5031               	movf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 29468   013932  0D02               	mullw	2
 29469   013934  0E39               	movlw	low _services
 29470   013936  24F3               	addwf	243,w,c
 29471   013938  6EF6               	movwf	tblptrl,c
 29472   01393A  0EFF               	movlw	high _services
 29473   01393C  20F4               	addwfc	244,w,c
 29474   01393E  6EF7               	movwf	tblptrh,c
 29475   013940                     	if	1	;There are 3 active tblptr bytes
 29476   013940  6AF8               	clrf	tblptru,c
 29477   013942  0E00               	movlw	low (__pmediumconst shr (0+16))
 29478   013944  22F8               	addwfc	tblptru,f,c
 29479   013946                     	endif
 29480   013946  0009               	tblrd		*+
 29481   013948  C4F5 F533          	movff	tablat,??_mnsTRallDiagnosticsCallback
 29482   01394C  0009               	tblrd		*+
 29483   01394E  C4F5 F534          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 29484   013952  0E11               	movlw	17
 29485   013954  2633               	addwf	??_mnsTRallDiagnosticsCallback^(0+1280),f,c
 29486   013956  0E00               	movlw	0
 29487   013958  2234               	addwfc	(??_mnsTRallDiagnosticsCallback+1)^(0+1280),f,c
 29488   01395A  C533  F4F6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 29489   01395E  C534  F4F7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 29490   013962                     	if	0	;tblptru may be non-zero
 29491   013962                     	endif
 29492   013962                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29493   013962  0E00               	movlw	low (__pmediumconst shr (0+16))
 29494   013964  6EF8               	movwf	tblptru,c
 29495   013966                     	endif
 29496   013966  D801               	call	u8938
 29497   013968  D00E               	goto	u8939
 29498   01396A                     u8938:
 29499   01396A  0005               	push	
 29500   01396C  6EFA               	movwf	pclath,c
 29501   01396E  0009               	tblrd		*+
 29502   013970  50F5               	movf	tablat,w,c
 29503   013972  6EFD               	movwf	tosl,c
 29504   013974  0009               	tblrd		*+
 29505   013976  50F5               	movf	tablat,w,c
 29506   013978  6EFE               	movwf	tosh,c
 29507   01397A  0009               	tblrd		*+
 29508   01397C  50F5               	movf	tablat,w,c
 29509   01397E  6EFF               	movwf	tosu,c
 29510   013980  50FA               	movf	pclath,w,c
 29511   013982  5032               	movf	mnsTRallDiagnosticsCallback@step^(0+1280),w,c
 29512   013984  0012               	return		;indir
 29513   013986                     u8939:
 29514   013986  C507  F535         	movff	?_producerGetDiagnostic,mnsTRallDiagnosticsCallback@d
 29515   01398A  C508  F536         	movff	?_producerGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 29516                           
 29517                           ;../../VLCBlib_PIC/mns.c: 924:     if (d == ((void*)0)) {
 29518   01398E  5035               	movf	mnsTRallDiagnosticsCallback@d^(0+1280),w,c
 29519   013990  1036               	iorwf	(mnsTRallDiagnosticsCallback@d+1)^(0+1280),w,c
 29520   013992  B4D8               	btfsc	status,2,c
 29521   013994  D7CB               	goto	l10869
 29522                           
 29523                           ;../../VLCBlib_PIC/mns.c: 929:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step, d->asBytes.hi, d->asBytes.lo);
 29524   013996  C55F  F525         	movff	_nn+1,sendMessage6@data1
 29525   01399A  C55E  F526         	movff	_nn,sendMessage6@data2
 29526   01399E  2831               	incf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 29527   0139A0  6E27               	movwf	sendMessage6@data3^(0+1280),c
 29528   0139A2  C532  F528         	movff	mnsTRallDiagnosticsCallback@step,sendMessage6@data4
 29529   0139A6  EE20 F001          	lfsr	2,1
 29530   0139AA  5035               	movf	mnsTRallDiagnosticsCallback@d^(0+1280),w,c
 29531   0139AC  26D9               	addwf	fsr2l,f,c
 29532   0139AE  5036               	movf	(mnsTRallDiagnosticsCallback@d+1)^(0+1280),w,c
 29533   0139B0  22DA               	addwfc	fsr2h,f,c
 29534   0139B2  50DF               	movf	indf2,w,c
 29535   0139B4  6E29               	movwf	sendMessage6@data5^(0+1280),c
 29536   0139B6  C535  F4D9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 29537   0139BA  C536  F4DA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 29538   0139BE  50DF               	movf	indf2,w,c
 29539   0139C0  6E2A               	movwf	sendMessage6@data6^(0+1280),c
 29540   0139C2  0EC7               	movlw	199
 29541   0139C4  ECE2  F0B0         	call	_sendMessage6
 29542                           
 29543                           ;../../VLCBlib_PIC/mns.c: 930:     return TIMED_RESPONSE_RESULT_NEXT;
 29544   0139C8  0E02               	movlw	2
 29545   0139CA  0012               	return		;funcret
 29546   0139CC                     __end_of_mnsTRallDiagnosticsCallback:
 29547                           	callstack 0
 29548                           
 29549 ;; *************** function _mnsTRrqnpnCallback *****************
 29550 ;; Defined at:
 29551 ;;		line 941 in file "../../VLCBlib_PIC/mns.c"
 29552 ;; Parameters:    Size  Location     Type
 29553 ;;  type            1    wreg     unsigned char 
 29554 ;;  serviceIndex    1   48[COMRAM] unsigned char 
 29555 ;;  step            1   49[COMRAM] unsigned char 
 29556 ;; Auto vars:     Size  Location     Type
 29557 ;;  type            1    0[COMRAM] unsigned char 
 29558 ;; Return value:  Size  Location     Type
 29559 ;;                  1    wreg      enum E23472
 29560 ;; Registers used:
 29561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29562 ;; Tracked objects:
 29563 ;;		On entry : 0/0
 29564 ;;		On exit  : 0/0
 29565 ;;		Unchanged: 0/0
 29566 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29567 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29570 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29571 ;;Total ram usage:        2 bytes
 29572 ;; Hardware stack levels used: 1
 29573 ;; Hardware stack levels required when called: 6
 29574 ;; This function calls:
 29575 ;;		_getParameter
 29576 ;;		_sendMessage4
 29577 ;; This function is called by:
 29578 ;;		_mnsProcessMessage
 29579 ;;		_pollTimedResponse
 29580 ;; This function uses a non-reentrant model
 29581 ;;
 29582                           
 29583                           	psect	text25
 29584   0162C0                     __ptext25:
 29585                           	callstack 0
 29586   0162C0                     _mnsTRrqnpnCallback:
 29587                           	callstack 118
 29588                           
 29589                           ;../../VLCBlib_PIC/mns.c: 942:     if (step >= 20) {
 29590                           
 29591                           ;incstack = 0
 29592   0162C0  0E13               	movlw	19
 29593   0162C2  6432               	cpfsgt	mnsTRrqnpnCallback@step^(0+1280),c
 29594   0162C4  D002               	goto	l10893
 29595                           
 29596                           ;../../VLCBlib_PIC/mns.c: 943:         return TIMED_RESPONSE_RESULT_FINISHED;
 29597   0162C6  0E00               	movlw	0
 29598   0162C8  0012               	return	
 29599   0162CA                     l10893:
 29600                           
 29601                           ;../../VLCBlib_PIC/mns.c: 945:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 29602   0162CA  C55F  F525         	movff	_nn+1,sendMessage4@data1
 29603   0162CE  C55E  F526         	movff	_nn,sendMessage4@data2
 29604   0162D2  2832               	incf	mnsTRrqnpnCallback@step^(0+1280),w,c
 29605   0162D4  6E27               	movwf	sendMessage4@data3^(0+1280),c
 29606   0162D6  2832               	incf	mnsTRrqnpnCallback@step^(0+1280),w,c
 29607   0162D8  ECDA  F09B         	call	_getParameter
 29608   0162DC  6E28               	movwf	sendMessage4@data4^(0+1280),c
 29609   0162DE  0E9B               	movlw	155
 29610   0162E0  EC4B  F0B1         	call	_sendMessage4
 29611                           
 29612                           ;../../VLCBlib_PIC/mns.c: 946:     return TIMED_RESPONSE_RESULT_NEXT;
 29613   0162E4  0E02               	movlw	2
 29614   0162E6  0012               	return		;funcret
 29615   0162E8                     __end_of_mnsTRrqnpnCallback:
 29616                           	callstack 0
 29617                           
 29618 ;; *************** function _reqevCallback *****************
 29619 ;; Defined at:
 29620 ;;		line 674 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29621 ;; Parameters:    Size  Location     Type
 29622 ;;  tableIndex      1    wreg     unsigned char 
 29623 ;;  serviceIndex    1   48[COMRAM] unsigned char 
 29624 ;;  step            1   49[COMRAM] unsigned char 
 29625 ;; Auto vars:     Size  Location     Type
 29626 ;;  tableIndex      1   62[COMRAM] unsigned char 
 29627 ;;  nodeNumber      2   60[COMRAM] struct Word
 29628 ;;  ev              2   58[COMRAM] short 
 29629 ;;  eventNumber     2   56[COMRAM] struct Word
 29630 ;;  nEv             1   55[COMRAM] unsigned char 
 29631 ;; Return value:  Size  Location     Type
 29632 ;;                  1    wreg      enum E23472
 29633 ;; Registers used:
 29634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29635 ;; Tracked objects:
 29636 ;;		On entry : 0/0
 29637 ;;		On exit  : 0/0
 29638 ;;		Unchanged: 0/0
 29639 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29640 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29641 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29642 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29643 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29644 ;;Total ram usage:       15 bytes
 29645 ;; Hardware stack levels used: 1
 29646 ;; Hardware stack levels required when called: 6
 29647 ;; This function calls:
 29648 ;;		_getEN
 29649 ;;		_getEv
 29650 ;;		_getNN
 29651 ;;		_numEv
 29652 ;;		_sendMessage5
 29653 ;;		_sendMessage6
 29654 ;;		_tableIndexToEvtIdx
 29655 ;; This function is called by:
 29656 ;;		_doReval
 29657 ;;		_doReqev
 29658 ;;		_pollTimedResponse
 29659 ;; This function uses a non-reentrant model
 29660 ;;
 29661                           
 29662                           	psect	text26
 29663   0143AE                     __ptext26:
 29664                           	callstack 0
 29665   0143AE                     _reqevCallback:
 29666                           	callstack 118
 29667                           
 29668                           ;incstack = 0
 29669                           ;reqevCallback@tableIndex stored from wreg
 29670   0143AE  6E3F               	movwf	reqevCallback@tableIndex^(0+1280),c
 29671                           
 29672                           ;../../VLCBlib_PIC/event_teach_simple.c: 675:     Word nodeNumber, eventNumber;;../../VL
      +                          CBlib_PIC/event_teach_simple.c: 677:     uint8_t nEv = numEv(tableIndex);
 29673   0143B0  503F               	movf	reqevCallback@tableIndex^(0+1280),w,c
 29674   0143B2  EC24  F0B3         	call	_numEv
 29675   0143B6  6E38               	movwf	reqevCallback@nEv^(0+1280),c
 29676                           
 29677                           ;../../VLCBlib_PIC/event_teach_simple.c: 678:     int16_t ev;;../../VLCBlib_PIC/event_te
      +                          ach_simple.c: 680:     if (step+1 > nEv) {
 29678   0143B8  5032               	movf	reqevCallback@step^(0+1280),w,c
 29679   0143BA  6E33               	movwf	??_reqevCallback^(0+1280),c
 29680   0143BC  6A34               	clrf	(??_reqevCallback+1)^(0+1280),c
 29681   0143BE  0E01               	movlw	1
 29682   0143C0  2633               	addwf	??_reqevCallback^(0+1280),f,c
 29683   0143C2  0E00               	movlw	0
 29684   0143C4  2234               	addwfc	(??_reqevCallback+1)^(0+1280),f,c
 29685   0143C6  5038               	movf	reqevCallback@nEv^(0+1280),w,c
 29686   0143C8  6E35               	movwf	(??_reqevCallback+2)^(0+1280),c
 29687   0143CA  6A36               	clrf	(??_reqevCallback+3)^(0+1280),c
 29688   0143CC  5033               	movf	??_reqevCallback^(0+1280),w,c
 29689   0143CE  5C35               	subwf	(??_reqevCallback+2)^(0+1280),w,c
 29690   0143D0  5036               	movf	(??_reqevCallback+3)^(0+1280),w,c
 29691   0143D2  0A80               	xorlw	128
 29692   0143D4  6E37               	movwf	(??_reqevCallback+4)^(0+1280),c
 29693   0143D6  5034               	movf	(??_reqevCallback+1)^(0+1280),w,c
 29694   0143D8  0A80               	xorlw	128
 29695   0143DA  5837               	subwfb	(??_reqevCallback+4)^(0+1280),w,c
 29696   0143DC  B0D8               	btfsc	status,0,c
 29697   0143DE  D002               	goto	l10483
 29698                           
 29699                           ;../../VLCBlib_PIC/event_teach_simple.c: 681:         return TIMED_RESPONSE_RESULT_FINIS
      +                          HED;
 29700   0143E0  0E00               	movlw	0
 29701   0143E2  0012               	return	
 29702   0143E4                     l10483:
 29703                           
 29704                           ;../../VLCBlib_PIC/event_teach_simple.c: 684:     nodeNumber.word = getNN(tableIndex);
 29705   0143E4  503F               	movf	reqevCallback@tableIndex^(0+1280),w,c
 29706   0143E6  EC7C  F0A1         	call	_getNN
 29707   0143EA  C50D  F53D         	movff	?_getNN,reqevCallback@nodeNumber
 29708   0143EE  C50E  F53E         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 29709                           
 29710                           ;../../VLCBlib_PIC/event_teach_simple.c: 685:     eventNumber.word = getEN(tableIndex);
 29711   0143F2  503F               	movf	reqevCallback@tableIndex^(0+1280),w,c
 29712   0143F4  EC70  F0A8         	call	_getEN
 29713   0143F8  C50D  F539         	movff	?_getEN,reqevCallback@eventNumber
 29714   0143FC  C50E  F53A         	movff	?_getEN+1,reqevCallback@eventNumber+1
 29715                           
 29716                           ;../../VLCBlib_PIC/event_teach_simple.c: 686:     ev = getEv(tableIndex, step);
 29717   014400  C532  F50D         	movff	reqevCallback@step,getEv@evNum
 29718   014404  503F               	movf	reqevCallback@tableIndex^(0+1280),w,c
 29719   014406  EC13  F0A9         	call	_getEv
 29720   01440A  C50D  F53B         	movff	?_getEv,reqevCallback@ev
 29721   01440E  C50E  F53C         	movff	?_getEv+1,reqevCallback@ev+1
 29722                           
 29723                           ;../../VLCBlib_PIC/event_teach_simple.c: 687:     if (ev >= 0) {
 29724   014412  BE3C               	btfsc	(reqevCallback@ev+1)^(0+1280),7,c
 29725   014414  D024               	goto	l10493
 29726                           
 29727                           ;../../VLCBlib_PIC/event_teach_simple.c: 688:         if (timedResponseOpcode == OPC_EVA
      +                          NS) {
 29728   014416  0ED3               	movlw	211
 29729   014418  0105               	movlb	5	; () banked
 29730   01441A  1991               	xorwf	_timedResponseOpcode& (0+255),w,b
 29731   01441C  A4D8               	btfss	status,2,c
 29732   01441E  D010               	goto	l10491
 29733                           
 29734                           ; BSR set to: 5
 29735                           ;../../VLCBlib_PIC/event_teach_simple.c: 689:             sendMessage6(OPC_EVANS, nodeNu
      +                          mber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, 
      +                          (uint8_t)ev);
 29736   014420  C53E  F525         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 29737   014424  C53D  F526         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 29738   014428  C53A  F527         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 29739   01442C  C539  F528         	movff	reqevCallback@eventNumber,sendMessage6@data4
 29740   014430  2832               	incf	reqevCallback@step^(0+1280),w,c
 29741   014432  6E29               	movwf	sendMessage6@data5^(0+1280),c
 29742   014434  C53B  F52A         	movff	reqevCallback@ev,sendMessage6@data6
 29743   014438  0ED3               	movlw	211
 29744   01443A  ECE2  F0B0         	call	_sendMessage6
 29745                           
 29746                           ;../../VLCBlib_PIC/event_teach_simple.c: 690:         } else {
 29747   01443E  D00F               	goto	l10493
 29748   014440                     l10491:
 29749                           
 29750                           ; BSR set to: 5
 29751                           ;../../VLCBlib_PIC/event_teach_simple.c: 691:             sendMessage5(OPC_NEVAL, nodeNu
      +                          mber.bytes.hi, nodeNumber.bytes.lo, tableIndexToEvtIdx(tableIndex), step+1, (uint8_t)ev)
      +                          ;
 29752   014440  C53E  F525         	movff	reqevCallback@nodeNumber+1,sendMessage5@data1
 29753   014444  C53D  F526         	movff	reqevCallback@nodeNumber,sendMessage5@data2
 29754   014448  503F               	movf	reqevCallback@tableIndex^(0+1280),w,c
 29755   01444A  EC15  F0B3         	call	_tableIndexToEvtIdx
 29756   01444E  6E27               	movwf	sendMessage5@data3^(0+1280),c
 29757   014450  2832               	incf	reqevCallback@step^(0+1280),w,c
 29758   014452  6E28               	movwf	sendMessage5@data4^(0+1280),c
 29759   014454  C53B  F529         	movff	reqevCallback@ev,sendMessage5@data5
 29760   014458  0EB5               	movlw	181
 29761   01445A  EC36  F0B1         	call	_sendMessage5
 29762   01445E                     l10493:
 29763                           
 29764                           ;../../VLCBlib_PIC/event_teach_simple.c: 694:     return TIMED_RESPONSE_RESULT_NEXT;
 29765   01445E  0E02               	movlw	2
 29766   014460  0012               	return		;funcret
 29767   014462                     __end_of_reqevCallback:
 29768                           	callstack 0
 29769                           
 29770 ;; *************** function _nerdCallback *****************
 29771 ;; Defined at:
 29772 ;;		line 442 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29773 ;; Parameters:    Size  Location     Type
 29774 ;;  type            1    wreg     unsigned char 
 29775 ;;  serviceIndex    1   48[COMRAM] unsigned char 
 29776 ;;  step            1   49[COMRAM] unsigned char 
 29777 ;; Auto vars:     Size  Location     Type
 29778 ;;  type            1    0[COMRAM] unsigned char 
 29779 ;;  eventNumber     2   52[COMRAM] struct Word
 29780 ;;  nodeNumber      2   50[COMRAM] struct Word
 29781 ;; Return value:  Size  Location     Type
 29782 ;;                  1    wreg      enum E23472
 29783 ;; Registers used:
 29784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29785 ;; Tracked objects:
 29786 ;;		On entry : 0/0
 29787 ;;		On exit  : 0/0
 29788 ;;		Unchanged: 0/0
 29789 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29790 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29791 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29793 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29794 ;;Total ram usage:        6 bytes
 29795 ;; Hardware stack levels used: 1
 29796 ;; Hardware stack levels required when called: 6
 29797 ;; This function calls:
 29798 ;;		_getEN
 29799 ;;		_getNN
 29800 ;;		_sendMessage7
 29801 ;;		_tableIndexToEvtIdx
 29802 ;; This function is called by:
 29803 ;;		_doNerd
 29804 ;;		_pollTimedResponse
 29805 ;; This function uses a non-reentrant model
 29806 ;;
 29807                           
 29808                           	psect	text27
 29809   0157F2                     __ptext27:
 29810                           	callstack 0
 29811   0157F2                     _nerdCallback:
 29812                           	callstack 118
 29813                           
 29814                           ;../../VLCBlib_PIC/event_teach_simple.c: 443:     Word nodeNumber, eventNumber;;../../VL
      +                          CBlib_PIC/event_teach_simple.c: 445:     if (step >= 254) {
 29815                           
 29816                           ;incstack = 0
 29817   0157F2  0EFD               	movlw	253
 29818   0157F4  6432               	cpfsgt	nerdCallback@step^(0+1280),c
 29819   0157F6  D002               	goto	l10463
 29820                           
 29821                           ;../../VLCBlib_PIC/event_teach_simple.c: 446:         return TIMED_RESPONSE_RESULT_FINIS
      +                          HED;
 29822   0157F8  0E00               	movlw	0
 29823   0157FA  0012               	return	
 29824   0157FC                     l10463:
 29825                           
 29826                           ;../../VLCBlib_PIC/event_teach_simple.c: 449:     eventNumber.word = getEN(step);
 29827   0157FC  5032               	movf	nerdCallback@step^(0+1280),w,c
 29828   0157FE  EC70  F0A8         	call	_getEN
 29829   015802  C50D  F535         	movff	?_getEN,nerdCallback@eventNumber
 29830   015806  C50E  F536         	movff	?_getEN+1,nerdCallback@eventNumber+1
 29831                           
 29832                           ;../../VLCBlib_PIC/event_teach_simple.c: 450:     if (eventNumber.word != 0) {
 29833   01580A  5035               	movf	nerdCallback@eventNumber^(0+1280),w,c
 29834   01580C  1036               	iorwf	(nerdCallback@eventNumber+1)^(0+1280),w,c
 29835   01580E  B4D8               	btfsc	status,2,c
 29836   015810  D01A               	goto	l10471
 29837                           
 29838                           ;../../VLCBlib_PIC/event_teach_simple.c: 451:         nodeNumber.word = getNN(step);
 29839   015812  5032               	movf	nerdCallback@step^(0+1280),w,c
 29840   015814  EC7C  F0A1         	call	_getNN
 29841   015818  C50D  F533         	movff	?_getNN,nerdCallback@nodeNumber
 29842   01581C  C50E  F534         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 29843                           
 29844                           ;../../VLCBlib_PIC/event_teach_simple.c: 452:         sendMessage7(OPC_ENRSP, nn.bytes.h
      +                          i, nn.bytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNum
      +                          ber.bytes.lo, tableIndexToEvtIdx(step));
 29845   015820  C55F  F525         	movff	_nn+1,sendMessage7@data1
 29846   015824  C55E  F526         	movff	_nn,sendMessage7@data2
 29847   015828  C534  F527         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 29848   01582C  C533  F528         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 29849   015830  C536  F529         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 29850   015834  C535  F52A         	movff	nerdCallback@eventNumber,sendMessage7@data6
 29851   015838  5032               	movf	nerdCallback@step^(0+1280),w,c
 29852   01583A  EC15  F0B3         	call	_tableIndexToEvtIdx
 29853   01583E  6E2B               	movwf	sendMessage7@data7^(0+1280),c
 29854   015840  0EF2               	movlw	242
 29855   015842  EC21  F0B1         	call	_sendMessage7
 29856   015846                     l10471:
 29857                           
 29858                           ;../../VLCBlib_PIC/event_teach_simple.c: 455:     return TIMED_RESPONSE_RESULT_NEXT;
 29859   015846  0E02               	movlw	2
 29860   015848  0012               	return		;funcret
 29861   01584A                     __end_of_nerdCallback:
 29862                           	callstack 0
 29863                           
 29864 ;; *************** function _sodTRCallback *****************
 29865 ;; Defined at:
 29866 ;;		line 337 in file "../canpan3Inputs.c"
 29867 ;; Parameters:    Size  Location     Type
 29868 ;;  type            1    wreg     unsigned char 
 29869 ;;  serviceIndex    1   48[COMRAM] unsigned char 
 29870 ;;  tableIndex      1   49[COMRAM] unsigned char 
 29871 ;; Auto vars:     Size  Location     Type
 29872 ;;  type            1    0[COMRAM] unsigned char 
 29873 ;;  value           1   51[COMRAM] enum E23277
 29874 ;;  sv              1   50[COMRAM] unsigned char 
 29875 ;; Return value:  Size  Location     Type
 29876 ;;                  1    wreg      enum E23510
 29877 ;; Registers used:
 29878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29879 ;; Tracked objects:
 29880 ;;		On entry : 0/0
 29881 ;;		On exit  : 0/0
 29882 ;;		Unchanged: 0/0
 29883 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29885 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29887 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29888 ;;Total ram usage:        4 bytes
 29889 ;; Hardware stack levels used: 1
 29890 ;; Hardware stack levels required when called: 7
 29891 ;; This function calls:
 29892 ;;		_APP_GetEventIndexState
 29893 ;;		_canpanSendProducedEvent
 29894 ;; This function is called by:
 29895 ;;		_doSoD
 29896 ;;		_pollTimedResponse
 29897 ;; This function uses a non-reentrant model
 29898 ;;
 29899                           
 29900                           	psect	text28
 29901   015F06                     __ptext28:
 29902                           	callstack 0
 29903   015F06                     _sodTRCallback:
 29904                           	callstack 117
 29905                           
 29906                           ;../canpan3Inputs.c: 338:     EventState value;;../canpan3Inputs.c: 339:     uint8_t sv;
      +                          ;../canpan3Inputs.c: 341:     if (tableIndex >= 254) {
 29907                           
 29908                           ;incstack = 0
 29909   015F06  0EFD               	movlw	253
 29910   015F08  6432               	cpfsgt	sodTRCallback@tableIndex^(0+1280),c
 29911   015F0A  D002               	goto	l9865
 29912                           
 29913                           ;../canpan3Inputs.c: 342:         return TIMED_RESPONSE_RESULT_FINISHED;
 29914   015F0C  0E00               	movlw	0
 29915   015F0E  0012               	return	
 29916   015F10                     l9865:
 29917                           
 29918                           ;../canpan3Inputs.c: 345:     value = APP_GetEventIndexState(tableIndex);
 29919   015F10  5032               	movf	sodTRCallback@tableIndex^(0+1280),w,c
 29920   015F12  EC2A  F0AE         	call	_APP_GetEventIndexState
 29921   015F16  6E34               	movwf	sodTRCallback@value^(0+1280),c
 29922                           
 29923                           ;../canpan3Inputs.c: 347:     if (value != EVENT_UNKNOWN) {
 29924   015F18  2834               	incf	sodTRCallback@value^(0+1280),w,c
 29925   015F1A  B4D8               	btfsc	status,2,c
 29926   015F1C  D00E               	goto	l9873
 29927                           
 29928                           ;../canpan3Inputs.c: 348:         sv = evs[2];
 29929   015F1E  C673  F533         	movff	_evs+2,sodTRCallback@sv
 29930                           
 29931                           ;../canpan3Inputs.c: 349:         if (!(sv & 0b00000100)) {
 29932   015F22  B433               	btfsc	sodTRCallback@sv^(0+1280),2,c
 29933   015F24  D00A               	goto	l9873
 29934                           
 29935                           ;../canpan3Inputs.c: 350:             canpanSendProducedEvent(tableIndex, value==EVENT_O
      +                          N);
 29936   015F26  0434               	decf	sodTRCallback@value^(0+1280),w,c
 29937   015F28  A4D8               	btfss	status,2,c
 29938   015F2A  D002               	goto	u7770
 29939   015F2C  0E01               	movlw	1
 29940   015F2E  D001               	goto	u7780
 29941   015F30                     u7770:
 29942   015F30  0E00               	movlw	0
 29943   015F32                     u7780:
 29944   015F32  6E2A               	movwf	canpanSendProducedEvent@onOff^(0+1280),c
 29945   015F34  5032               	movf	sodTRCallback@tableIndex^(0+1280),w,c
 29946   015F36  EC1A  F0AA         	call	_canpanSendProducedEvent
 29947   015F3A                     l9873:
 29948                           
 29949                           ;../canpan3Inputs.c: 353:     return TIMED_RESPONSE_RESULT_NEXT;
 29950   015F3A  0E02               	movlw	2
 29951   015F3C  0012               	return		;funcret
 29952   015F3E                     __end_of_sodTRCallback:
 29953                           	callstack 0
 29954                           
 29955 ;; *************** function _tableIndexToEvtIdx *****************
 29956 ;; Defined at:
 29957 ;;		line 971 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29958 ;; Parameters:    Size  Location     Type
 29959 ;;  tableIndex      1    wreg     unsigned char 
 29960 ;; Auto vars:     Size  Location     Type
 29961 ;;  tableIndex      1    0[COMRAM] unsigned char 
 29962 ;; Return value:  Size  Location     Type
 29963 ;;                  1    wreg      unsigned char 
 29964 ;; Registers used:
 29965 ;;		wreg, status,2, status,0
 29966 ;; Tracked objects:
 29967 ;;		On entry : 0/0
 29968 ;;		On exit  : 0/0
 29969 ;;		Unchanged: 0/0
 29970 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29972 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29974 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29975 ;;Total ram usage:        1 bytes
 29976 ;; Hardware stack levels used: 1
 29977 ;; Hardware stack levels required when called: 1
 29978 ;; This function calls:
 29979 ;;		Nothing
 29980 ;; This function is called by:
 29981 ;;		_nerdCallback
 29982 ;;		_reqevCallback
 29983 ;; This function uses a non-reentrant model
 29984 ;;
 29985                           
 29986                           	psect	text29
 29987   01662A                     __ptext29:
 29988                           	callstack 0
 29989   01662A                     _tableIndexToEvtIdx:
 29990                           	callstack 122
 29991                           
 29992                           ;incstack = 0
 29993                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 29994   01662A  6E01               	movwf	tableIndexToEvtIdx@tableIndex^(0+1280),c
 29995                           
 29996                           ;../../VLCBlib_PIC/event_teach_simple.c: 972:     return tableIndex + 1;
 29997   01662C  2801               	incf	tableIndexToEvtIdx@tableIndex^(0+1280),w,c
 29998   01662E  0012               	return		;funcret
 29999   016630                     __end_of_tableIndexToEvtIdx:
 30000                           	callstack 0
 30001                           
 30002 ;; *************** function _canPoll *****************
 30003 ;; Defined at:
 30004 ;;		line 441 in file "../../VLCBlib_PIC/can18_can_2.c"
 30005 ;; Parameters:    Size  Location     Type
 30006 ;;		None
 30007 ;; Auto vars:     Size  Location     Type
 30008 ;;  t8              1    0        unsigned char 
 30009 ;; Return value:  Size  Location     Type
 30010 ;;                  1    wreg      void 
 30011 ;; Registers used:
 30012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30013 ;; Tracked objects:
 30014 ;;		On entry : 0/0
 30015 ;;		On exit  : 0/0
 30016 ;;		Unchanged: 0/0
 30017 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30022 ;;Total ram usage:        0 bytes
 30023 ;; Hardware stack levels used: 1
 30024 ;; Hardware stack levels required when called: 8
 30025 ;; This function calls:
 30026 ;;		_processEnumeration
 30027 ;; This function is called by:
 30028 ;;		_poll
 30029 ;; This function uses a non-reentrant model
 30030 ;;
 30031                           
 30032                           	psect	text30
 30033   016630                     __ptext30:
 30034                           	callstack 0
 30035   016630                     _canPoll:
 30036                           	callstack 117
 30037                           
 30038                           ;../../VLCBlib_PIC/can18_can_2.c: 442:     uint8_t t8;;../../VLCBlib_PIC/can18_can_2.c: 
      +                          444:     processEnumeration();
 30039                           
 30040                           ;incstack = 0
 30041   016630  EC73  F099         	call	_processEnumeration	;wreg free
 30042   016634  0012               	return		;funcret
 30043   016636                     __end_of_canPoll:
 30044                           	callstack 0
 30045                           
 30046 ;; *************** function _mnsPoll *****************
 30047 ;; Defined at:
 30048 ;;		line 648 in file "../../VLCBlib_PIC/mns.c"
 30049 ;; Parameters:    Size  Location     Type
 30050 ;;		None
 30051 ;; Auto vars:     Size  Location     Type
 30052 ;;		None
 30053 ;; Return value:  Size  Location     Type
 30054 ;;                  1    wreg      void 
 30055 ;; Registers used:
 30056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30057 ;; Tracked objects:
 30058 ;;		On entry : 0/0
 30059 ;;		On exit  : 0/0
 30060 ;;		Unchanged: 0/0
 30061 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30064 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30065 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30066 ;;Total ram usage:        4 bytes
 30067 ;; Hardware stack levels used: 1
 30068 ;; Hardware stack levels required when called: 6
 30069 ;; This function calls:
 30070 ;;		_sendMessage2
 30071 ;;		_sendMessage5
 30072 ;;		_setLEDsByMode
 30073 ;;		_tickGet
 30074 ;;		_writeNVM
 30075 ;; This function is called by:
 30076 ;;		_poll
 30077 ;; This function uses a non-reentrant model
 30078 ;;
 30079                           
 30080                           	psect	text31
 30081   011492                     __ptext31:
 30082                           	callstack 0
 30083   011492                     _mnsPoll:
 30084                           	callstack 119
 30085                           
 30086                           ;../../VLCBlib_PIC/mns.c: 651:     if (mode_state == MODE_NORMAL) {
 30087                           
 30088                           ;incstack = 0
 30089   011492  0105               	movlb	5	; () banked
 30090   011494  0590               	decf	_mode_state& (0+255),w,b
 30091   011496  A4D8               	btfss	status,2,c
 30092   011498  D039               	goto	l11985
 30093                           
 30094                           ; BSR set to: 5
 30095                           ;../../VLCBlib_PIC/mns.c: 652:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 30096   01149A  EC50  F0AC         	call	_tickGet	;wreg free
 30097   01149E  0106               	movlb	6	; () banked
 30098   0114A0  5196               	movf	_heartbeatTimer& (0+255),w,b
 30099   0114A2  5C01               	subwf	?_tickGet^(0+1280),w,c
 30100   0114A4  6E2B               	movwf	??_mnsPoll^(0+1280),c
 30101   0114A6  5197               	movf	(_heartbeatTimer+1)& (0+255),w,b
 30102   0114A8  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 30103   0114AA  6E2C               	movwf	(??_mnsPoll+1)^(0+1280),c
 30104   0114AC  5198               	movf	(_heartbeatTimer+2)& (0+255),w,b
 30105   0114AE  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 30106   0114B0  6E2D               	movwf	(??_mnsPoll+2)^(0+1280),c
 30107   0114B2  5199               	movf	(_heartbeatTimer+3)& (0+255),w,b
 30108   0114B4  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 30109   0114B6  6E2E               	movwf	(??_mnsPoll+3)^(0+1280),c
 30110   0114B8  502E               	movf	(??_mnsPoll+3)^(0+1280),w,c
 30111   0114BA  E108               	bnz	u10190
 30112   0114BC  0EB5               	movlw	181
 30113   0114BE  5C2B               	subwf	??_mnsPoll^(0+1280),w,c
 30114   0114C0  0EC4               	movlw	196
 30115   0114C2  582C               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 30116   0114C4  0E04               	movlw	4
 30117   0114C6  582D               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 30118   0114C8  A0D8               	btfss	status,0,c
 30119   0114CA  D020               	goto	l11985
 30120   0114CC                     u10190:
 30121                           
 30122                           ; BSR set to: 6
 30123                           ;../../VLCBlib_PIC/mns.c: 653:             if (mode_flags & 4) {
 30124   0114CC  0105               	movlb	5	; () banked
 30125   0114CE  A59F               	btfss	_mode_flags& (0+255),2,b
 30126   0114D0  D00F               	goto	l11979
 30127                           
 30128                           ; BSR set to: 5
 30129                           ;../../VLCBlib_PIC/mns.c: 654:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x01].asBytes.lo,0);
 30130   0114D2  C55F  F525         	movff	_nn+1,sendMessage5@data1
 30131   0114D6  C55E  F526         	movff	_nn,sendMessage5@data2
 30132   0114DA  C58B  F527         	movff	_heartbeatSequence,sendMessage5@data3
 30133   0114DE  C5A4  F528         	movff	_mnsDiagnostics+2,sendMessage5@data4
 30134   0114E2  0E00               	movlw	0
 30135   0114E4  6E29               	movwf	sendMessage5@data5^(0+1280),c
 30136   0114E6  0EAB               	movlw	171
 30137   0114E8  EC36  F0B1         	call	_sendMessage5
 30138   0114EC  0105               	movlb	5	; () banked
 30139   0114EE  2B8B               	incf	_heartbeatSequence& (0+255),f,b
 30140   0114F0                     l11979:
 30141                           
 30142                           ; BSR set to: 5
 30143                           ;../../VLCBlib_PIC/mns.c: 656:             heartbeatTimer.val = tickGet();
 30144   0114F0  EC50  F0AC         	call	_tickGet	;wreg free
 30145   0114F4  C501  F696         	movff	?_tickGet,_heartbeatTimer
 30146   0114F8  C502  F697         	movff	?_tickGet+1,_heartbeatTimer+1
 30147   0114FC  C503  F698         	movff	?_tickGet+2,_heartbeatTimer+2
 30148   011500  C504  F699         	movff	?_tickGet+3,_heartbeatTimer+3
 30149                           
 30150                           ;../../VLCBlib_PIC/mns.c: 657:             if (mnsDiagnostics[0x01].asBytes.lo > 0) {
 30151   011504  0105               	movlb	5	; () banked
 30152   011506  51A4               	movf	(_mnsDiagnostics+2)& (0+255),w,b
 30153   011508  A4D8               	btfss	status,2,c
 30154                           
 30155                           ; BSR set to: 5
 30156                           ;../../VLCBlib_PIC/mns.c: 658:                 mnsDiagnostics[0x01].asBytes.lo--;
 30157   01150A  07A4               	decf	(_mnsDiagnostics+2)& (0+255),f,b
 30158   01150C                     l11985:
 30159                           
 30160                           ;../../VLCBlib_PIC/mns.c: 665:     if (mode_flags != last_mode_flags) {
 30161   01150C  0105               	movlb	5	; () banked
 30162   01150E  518E               	movf	_last_mode_flags& (0+255),w,b
 30163   011510  199F               	xorwf	_mode_flags& (0+255),w,b
 30164   011512  B4D8               	btfsc	status,2,c
 30165   011514  D00D               	goto	l11991
 30166                           
 30167                           ; BSR set to: 5
 30168                           ;../../VLCBlib_PIC/mns.c: 666:         writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 30169   011516  0EF9               	movlw	249
 30170   011518  6E0E               	movwf	writeNVM@index^(0+1280),c
 30171   01151A  0E03               	movlw	3
 30172   01151C  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 30173   01151E  0E00               	movlw	0
 30174   011520  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 30175   011522  C59F  F511         	movff	_mode_flags,writeNVM@value
 30176   011526  0E00               	movlw	0
 30177   011528  EC71  F0AD         	call	_writeNVM
 30178                           
 30179                           ;../../VLCBlib_PIC/mns.c: 667:         last_mode_flags = mode_flags;
 30180   01152C  C59F  F58E         	movff	_mode_flags,_last_mode_flags
 30181   011530                     l11991:
 30182                           
 30183                           ;../../VLCBlib_PIC/mns.c: 669:     if (mode_state != last_mode_state) {
 30184   011530  0105               	movlb	5	; () banked
 30185   011532  518F               	movf	_last_mode_state& (0+255),w,b
 30186   011534  1990               	xorwf	_mode_state& (0+255),w,b
 30187   011536  B4D8               	btfsc	status,2,c
 30188   011538  D013               	goto	l12001
 30189                           
 30190                           ; BSR set to: 5
 30191                           ;../../VLCBlib_PIC/mns.c: 671:         if ((mode_state == MODE_UNINITIALISED) || (mode_s
      +                          tate == MODE_NORMAL)) {
 30192   01153A  2990               	incf	_mode_state& (0+255),w,b
 30193   01153C  B4D8               	btfsc	status,2,c
 30194   01153E  D003               	goto	u10250
 30195                           
 30196                           ; BSR set to: 5
 30197   011540  0590               	decf	_mode_state& (0+255),w,b
 30198   011542  A4D8               	btfss	status,2,c
 30199   011544  D00B               	goto	l11999
 30200   011546                     u10250:
 30201                           
 30202                           ; BSR set to: 5
 30203                           ;../../VLCBlib_PIC/mns.c: 672:             writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 30204   011546  0EFB               	movlw	251
 30205   011548  6E0E               	movwf	writeNVM@index^(0+1280),c
 30206   01154A  0E03               	movlw	3
 30207   01154C  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 30208   01154E  0E00               	movlw	0
 30209   011550  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 30210   011552  C590  F511         	movff	_mode_state,writeNVM@value
 30211   011556  0E00               	movlw	0
 30212   011558  EC71  F0AD         	call	_writeNVM
 30213   01155C                     l11999:
 30214                           
 30215                           ;../../VLCBlib_PIC/mns.c: 674:         last_mode_state = mode_state;
 30216   01155C  C590  F58F         	movff	_mode_state,_last_mode_state
 30217   011560                     l12001:
 30218                           
 30219                           ;../../VLCBlib_PIC/mns.c: 678:     if ((tickGet() - uptimeTimer.val) > 62500) {
 30220   011560  EC50  F0AC         	call	_tickGet	;wreg free
 30221   011564  0106               	movlb	6	; () banked
 30222   011566  5192               	movf	_uptimeTimer& (0+255),w,b
 30223   011568  5C01               	subwf	?_tickGet^(0+1280),w,c
 30224   01156A  6E2B               	movwf	??_mnsPoll^(0+1280),c
 30225   01156C  5193               	movf	(_uptimeTimer+1)& (0+255),w,b
 30226   01156E  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 30227   011570  6E2C               	movwf	(??_mnsPoll+1)^(0+1280),c
 30228   011572  5194               	movf	(_uptimeTimer+2)& (0+255),w,b
 30229   011574  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 30230   011576  6E2D               	movwf	(??_mnsPoll+2)^(0+1280),c
 30231   011578  5195               	movf	(_uptimeTimer+3)& (0+255),w,b
 30232   01157A  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 30233   01157C  6E2E               	movwf	(??_mnsPoll+3)^(0+1280),c
 30234   01157E  502E               	movf	(??_mnsPoll+3)^(0+1280),w,c
 30235   011580  102D               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 30236   011582  E106               	bnz	u10260
 30237   011584  0E25               	movlw	37
 30238   011586  5C2B               	subwf	??_mnsPoll^(0+1280),w,c
 30239   011588  0EF4               	movlw	244
 30240   01158A  582C               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 30241   01158C  A0D8               	btfss	status,0,c
 30242   01158E  D142               	goto	l12089
 30243   011590                     u10260:
 30244                           
 30245                           ; BSR set to: 6
 30246                           ;../../VLCBlib_PIC/mns.c: 679:         uptimeTimer.val = tickGet();
 30247   011590  EC50  F0AC         	call	_tickGet	;wreg free
 30248   011594  C501  F692         	movff	?_tickGet,_uptimeTimer
 30249   011598  C502  F693         	movff	?_tickGet+1,_uptimeTimer+1
 30250   01159C  C503  F694         	movff	?_tickGet+2,_uptimeTimer+2
 30251   0115A0  C504  F695         	movff	?_tickGet+3,_uptimeTimer+3
 30252                           
 30253                           ;../../VLCBlib_PIC/mns.c: 680:         mnsDiagnostics[0x03].asUint++;
 30254   0115A4  0105               	movlb	5	; () banked
 30255   0115A6  4BA8               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 30256   0115A8  2BA9               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 30257                           
 30258                           ; BSR set to: 5
 30259                           ;../../VLCBlib_PIC/mns.c: 681:         if (mnsDiagnostics[0x03].asUint == 0) {
 30260   0115AA  51A8               	movf	(_mnsDiagnostics+6)& (0+255),w,b
 30261   0115AC  11A9               	iorwf	(_mnsDiagnostics+7)& (0+255),w,b
 30262   0115AE  A4D8               	btfss	status,2,c
 30263   0115B0  D131               	goto	l12089
 30264                           
 30265                           ; BSR set to: 5
 30266                           ;../../VLCBlib_PIC/mns.c: 682:             mnsDiagnostics[0x02].asUint++;
 30267   0115B2  4BA6               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 30268   0115B4  2BA7               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 30269   0115B6  D12E               	goto	l12089
 30270   0115B8                     l1650:
 30271                           
 30272                           ; BSR set to: 5
 30273                           ;../../VLCBlib_PIC/mns.c: 691:             if ((!(PORTAbits.RA3)) == 0) {
 30274   0115B8  A6CE               	btfss	206,3,c	;volatile
 30275   0115BA  D00B               	goto	l12013
 30276   0115BC                     u10280:
 30277                           
 30278                           ;../../VLCBlib_PIC/mns.c: 693:                 pbTimer.val = tickGet();
 30279   0115BC  EC50  F0AC         	call	_tickGet	;wreg free
 30280   0115C0  C501  F560         	movff	?_tickGet,_pbTimer
 30281   0115C4  C502  F561         	movff	?_tickGet+1,_pbTimer+1
 30282   0115C8  C503  F562         	movff	?_tickGet+2,_pbTimer+2
 30283   0115CC  C504  F563         	movff	?_tickGet+3,_pbTimer+3
 30284                           
 30285                           ;../../VLCBlib_PIC/mns.c: 694:             } else {
 30286   0115D0  0012               	return	
 30287   0115D2                     l12013:
 30288                           
 30289                           ; BSR set to: 5
 30290                           ;../../VLCBlib_PIC/mns.c: 696:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 30291   0115D2  EC50  F0AC         	call	_tickGet	;wreg free
 30292   0115D6  0105               	movlb	5	; () banked
 30293   0115D8  5160               	movf	_pbTimer& (0+255),w,b
 30294   0115DA  5C01               	subwf	?_tickGet^(0+1280),w,c
 30295   0115DC  6E2B               	movwf	??_mnsPoll^(0+1280),c
 30296   0115DE  5161               	movf	(_pbTimer+1)& (0+255),w,b
 30297   0115E0  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 30298   0115E2  6E2C               	movwf	(??_mnsPoll+1)^(0+1280),c
 30299   0115E4  5162               	movf	(_pbTimer+2)& (0+255),w,b
 30300   0115E6  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 30301   0115E8  6E2D               	movwf	(??_mnsPoll+2)^(0+1280),c
 30302   0115EA  5163               	movf	(_pbTimer+3)& (0+255),w,b
 30303   0115EC  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 30304   0115EE  6E2E               	movwf	(??_mnsPoll+3)^(0+1280),c
 30305   0115F0  502E               	movf	(??_mnsPoll+3)^(0+1280),w,c
 30306   0115F2  E108               	bnz	u10290
 30307   0115F4  0E91               	movlw	145
 30308   0115F6  5C2B               	subwf	??_mnsPoll^(0+1280),w,c
 30309   0115F8  0ED0               	movlw	208
 30310   0115FA  582C               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 30311   0115FC  0E03               	movlw	3
 30312   0115FE  582D               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 30313   011600  A0D8               	btfss	status,0,c
 30314   011602  0012               	return	
 30315   011604                     u10290:
 30316                           
 30317                           ; BSR set to: 5
 30318                           ;../../VLCBlib_PIC/mns.c: 698:                     mode_state = 0xFD;
 30319   011604  0EFD               	movlw	253
 30320   011606  6F90               	movwf	_mode_state& (0+255),b
 30321                           
 30322                           ; BSR set to: 5
 30323                           ;../../VLCBlib_PIC/mns.c: 699:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 30324   011608  698D               	setf	_setupModePreviousMode& (0+255),b
 30325                           
 30326                           ; BSR set to: 5
 30327                           ;../../VLCBlib_PIC/mns.c: 700:                     setLEDsByMode();
 30328   01160A  EC40  F0B0         	call	_setLEDsByMode	;wreg free
 30329   01160E  0012               	return	
 30330   011610                     l1655:
 30331                           
 30332                           ; BSR set to: 5
 30333                           ;../../VLCBlib_PIC/mns.c: 705:             if ((!(PORTAbits.RA3)) == 0) {
 30334   011610  A6CE               	btfss	206,3,c	;volatile
 30335   011612  D7D4               	goto	u10280
 30336                           
 30337                           ; BSR set to: 5
 30338                           ;../../VLCBlib_PIC/mns.c: 709:                 mode_state = MODE_SETUP;
 30339   011614  6B90               	clrf	_mode_state& (0+255),b
 30340                           
 30341                           ;../../VLCBlib_PIC/mns.c: 710:                 setupModePreviousMode = MODE_UNINITIALISE
      +                          D;
 30342   011616  698D               	setf	_setupModePreviousMode& (0+255),b
 30343                           
 30344                           ; BSR set to: 5
 30345                           ;../../VLCBlib_PIC/mns.c: 711:                 pbTimer.val = tickGet();
 30346   011618  EC50  F0AC         	call	_tickGet	;wreg free
 30347   01161C  C501  F560         	movff	?_tickGet,_pbTimer
 30348   011620  C502  F561         	movff	?_tickGet+1,_pbTimer+1
 30349   011624  C503  F562         	movff	?_tickGet+2,_pbTimer+2
 30350   011628  C504  F563         	movff	?_tickGet+3,_pbTimer+3
 30351                           
 30352                           ;../../VLCBlib_PIC/mns.c: 713:                 sendMessage2(OPC_RQNN, nn.bytes.hi, nn.by
      +                          tes.lo);
 30353   01162C  C55F  F525         	movff	_nn+1,sendMessage2@data1
 30354   011630  C55E  F526         	movff	_nn,sendMessage2@data2
 30355   011634  0E50               	movlw	80
 30356   011636  EC0C  F0B1         	call	_sendMessage2
 30357                           
 30358                           ;../../VLCBlib_PIC/mns.c: 714:                 setLEDsByMode();
 30359   01163A  EC40  F0B0         	call	_setLEDsByMode	;wreg free
 30360   01163E  D7BE               	goto	u10280
 30361   011640                     l1657:
 30362                           
 30363                           ; BSR set to: 5
 30364                           ;../../VLCBlib_PIC/mns.c: 719:             if ((!(PORTAbits.RA3)) == 0) {
 30365   011640  A6CE               	btfss	206,3,c	;volatile
 30366   011642  D06F               	goto	l12055
 30367                           
 30368                           ; BSR set to: 5
 30369                           ;../../VLCBlib_PIC/mns.c: 722:                 if (((tickGet() - pbTimer.val) > (62500/1
      +                          0)) && ((tickGet() - pbTimer.val) < 2*62500)) {
 30370   011644  EC50  F0AC         	call	_tickGet	;wreg free
 30371   011648  0105               	movlb	5	; () banked
 30372   01164A  5160               	movf	_pbTimer& (0+255),w,b
 30373   01164C  5C01               	subwf	?_tickGet^(0+1280),w,c
 30374   01164E  6E2B               	movwf	??_mnsPoll^(0+1280),c
 30375   011650  5161               	movf	(_pbTimer+1)& (0+255),w,b
 30376   011652  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 30377   011654  6E2C               	movwf	(??_mnsPoll+1)^(0+1280),c
 30378   011656  5162               	movf	(_pbTimer+2)& (0+255),w,b
 30379   011658  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 30380   01165A  6E2D               	movwf	(??_mnsPoll+2)^(0+1280),c
 30381   01165C  5163               	movf	(_pbTimer+3)& (0+255),w,b
 30382   01165E  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 30383   011660  6E2E               	movwf	(??_mnsPoll+3)^(0+1280),c
 30384   011662  502E               	movf	(??_mnsPoll+3)^(0+1280),w,c
 30385   011664  102D               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 30386   011666  E106               	bnz	u10320
 30387   011668  0E6B               	movlw	107
 30388   01166A  5C2B               	subwf	??_mnsPoll^(0+1280),w,c
 30389   01166C  0E18               	movlw	24
 30390   01166E  582C               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 30391   011670  A0D8               	btfss	status,0,c
 30392   011672  D02E               	goto	l12047
 30393   011674                     u10320:
 30394                           
 30395                           ; BSR set to: 5
 30396   011674  EC50  F0AC         	call	_tickGet	;wreg free
 30397   011678  0105               	movlb	5	; () banked
 30398   01167A  5160               	movf	_pbTimer& (0+255),w,b
 30399   01167C  5C01               	subwf	?_tickGet^(0+1280),w,c
 30400   01167E  6E2B               	movwf	??_mnsPoll^(0+1280),c
 30401   011680  5161               	movf	(_pbTimer+1)& (0+255),w,b
 30402   011682  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 30403   011684  6E2C               	movwf	(??_mnsPoll+1)^(0+1280),c
 30404   011686  5162               	movf	(_pbTimer+2)& (0+255),w,b
 30405   011688  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 30406   01168A  6E2D               	movwf	(??_mnsPoll+2)^(0+1280),c
 30407   01168C  5163               	movf	(_pbTimer+3)& (0+255),w,b
 30408   01168E  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 30409   011690  6E2E               	movwf	(??_mnsPoll+3)^(0+1280),c
 30410   011692  502E               	movf	(??_mnsPoll+3)^(0+1280),w,c
 30411   011694  E11D               	bnz	l12047
 30412   011696  0E48               	movlw	72
 30413   011698  5C2B               	subwf	??_mnsPoll^(0+1280),w,c
 30414   01169A  0EE8               	movlw	232
 30415   01169C  582C               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 30416   01169E  0E01               	movlw	1
 30417   0116A0  582D               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 30418   0116A2  B0D8               	btfsc	status,0,c
 30419   0116A4  D015               	goto	l12047
 30420                           
 30421                           ; BSR set to: 5
 30422                           ;../../VLCBlib_PIC/mns.c: 724:                     mode_state = setupModePreviousMode;
 30423   0116A6  C58D  F590         	movff	_setupModePreviousMode,_mode_state
 30424                           
 30425                           ; BSR set to: 5
 30426                           ;../../VLCBlib_PIC/mns.c: 725:                     if (mode_state == MODE_NORMAL) {
 30427   0116AA  0590               	decf	_mode_state& (0+255),w,b
 30428   0116AC  A4D8               	btfss	status,2,c
 30429   0116AE  D00E               	goto	l12045
 30430                           
 30431                           ; BSR set to: 5
 30432                           ;../../VLCBlib_PIC/mns.c: 727:                         nn.word = previousNN.word;
 30433   0116B0  C57E  F55E         	movff	_previousNN,_nn
 30434   0116B4  C57F  F55F         	movff	_previousNN+1,_nn+1
 30435                           
 30436                           ; BSR set to: 5
 30437                           ;../../VLCBlib_PIC/mns.c: 728:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 30438   0116B8  C55F  F525         	movff	_nn+1,sendMessage2@data1
 30439   0116BC  C55E  F526         	movff	_nn,sendMessage2@data2
 30440   0116C0  0E52               	movlw	82
 30441   0116C2  EC0C  F0B1         	call	_sendMessage2
 30442                           
 30443                           ;../../VLCBlib_PIC/mns.c: 730:                         mnsDiagnostics[0x05].asUint++;
 30444   0116C6  0105               	movlb	5	; () banked
 30445   0116C8  4BAC               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 30446   0116CA  2BAD               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 30447   0116CC                     l12045:
 30448                           
 30449                           ; BSR set to: 5
 30450                           ;../../VLCBlib_PIC/mns.c: 733:                     setLEDsByMode();
 30451   0116CC  EC40  F0B0         	call	_setLEDsByMode	;wreg free
 30452   0116D0                     l12047:
 30453                           
 30454                           ;../../VLCBlib_PIC/mns.c: 735:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 30455   0116D0  EC50  F0AC         	call	_tickGet	;wreg free
 30456   0116D4  0105               	movlb	5	; () banked
 30457   0116D6  5160               	movf	_pbTimer& (0+255),w,b
 30458   0116D8  5C01               	subwf	?_tickGet^(0+1280),w,c
 30459   0116DA  6E2B               	movwf	??_mnsPoll^(0+1280),c
 30460   0116DC  5161               	movf	(_pbTimer+1)& (0+255),w,b
 30461   0116DE  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 30462   0116E0  6E2C               	movwf	(??_mnsPoll+1)^(0+1280),c
 30463   0116E2  5162               	movf	(_pbTimer+2)& (0+255),w,b
 30464   0116E4  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 30465   0116E6  6E2D               	movwf	(??_mnsPoll+2)^(0+1280),c
 30466   0116E8  5163               	movf	(_pbTimer+3)& (0+255),w,b
 30467   0116EA  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 30468   0116EC  6E2E               	movwf	(??_mnsPoll+3)^(0+1280),c
 30469   0116EE  502E               	movf	(??_mnsPoll+3)^(0+1280),w,c
 30470   0116F0  E108               	bnz	u10350
 30471   0116F2  0E91               	movlw	145
 30472   0116F4  5C2B               	subwf	??_mnsPoll^(0+1280),w,c
 30473   0116F6  0ED0               	movlw	208
 30474   0116F8  582C               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 30475   0116FA  0E03               	movlw	3
 30476   0116FC  582D               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 30477   0116FE  A0D8               	btfss	status,0,c
 30478   011700  D003               	goto	l1661
 30479   011702                     u10350:
 30480                           
 30481                           ; BSR set to: 5
 30482                           ;../../VLCBlib_PIC/mns.c: 736:                     mode_state = MODE_UNINITIALISED;
 30483   011702  6990               	setf	_mode_state& (0+255),b
 30484   011704                     l12051:
 30485                           
 30486                           ;../../VLCBlib_PIC/mns.c: 737:                     setLEDsByMode();
 30487   011704  EC40  F0B0         	call	_setLEDsByMode	;wreg free
 30488   011708                     l1661:
 30489                           
 30490                           ;../../VLCBlib_PIC/mns.c: 739:                 pbTimer.val = tickGet();
 30491   011708  EC50  F0AC         	call	_tickGet	;wreg free
 30492   01170C  C501  F560         	movff	?_tickGet,_pbTimer
 30493   011710  C502  F561         	movff	?_tickGet+1,_pbTimer+1
 30494   011714  C503  F562         	movff	?_tickGet+2,_pbTimer+2
 30495   011718  C504  F563         	movff	?_tickGet+3,_pbTimer+3
 30496                           
 30497                           ;../../VLCBlib_PIC/mns.c: 740:                 pbWasPushed = FALSE;
 30498   01171C  0105               	movlb	5	; () banked
 30499   01171E  6B8C               	clrf	_pbWasPushed& (0+255),b
 30500                           
 30501                           ;../../VLCBlib_PIC/mns.c: 741:             } else {
 30502   011720  0012               	return	
 30503   011722                     l12055:
 30504                           
 30505                           ; BSR set to: 5
 30506                           ;../../VLCBlib_PIC/mns.c: 742:                 pbWasPushed = TRUE;
 30507   011722  0E01               	movlw	1
 30508   011724  6F8C               	movwf	_pbWasPushed& (0+255),b
 30509   011726  0012               	return	
 30510   011728                     l1663:
 30511                           
 30512                           ; BSR set to: 5
 30513                           ;../../VLCBlib_PIC/mns.c: 747:             if ((!(PORTAbits.RA3)) == 0) {
 30514   011728  A6CE               	btfss	206,3,c	;volatile
 30515   01172A  D7FB               	goto	l12055
 30516                           
 30517                           ; BSR set to: 5
 30518                           ;../../VLCBlib_PIC/mns.c: 749:                 if (pbWasPushed && ((tickGet() - pbTimer.
      +                          val) > (62500/10)) && ((tickGet() - pbTimer.val) < 2*62500)) {
 30519   01172C  518C               	movf	_pbWasPushed& (0+255),w,b
 30520   01172E  B4D8               	btfsc	status,2,c
 30521   011730  D043               	goto	l12071
 30522                           
 30523                           ; BSR set to: 5
 30524   011732  EC50  F0AC         	call	_tickGet	;wreg free
 30525   011736  0105               	movlb	5	; () banked
 30526   011738  5160               	movf	_pbTimer& (0+255),w,b
 30527   01173A  5C01               	subwf	?_tickGet^(0+1280),w,c
 30528   01173C  6E2B               	movwf	??_mnsPoll^(0+1280),c
 30529   01173E  5161               	movf	(_pbTimer+1)& (0+255),w,b
 30530   011740  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 30531   011742  6E2C               	movwf	(??_mnsPoll+1)^(0+1280),c
 30532   011744  5162               	movf	(_pbTimer+2)& (0+255),w,b
 30533   011746  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 30534   011748  6E2D               	movwf	(??_mnsPoll+2)^(0+1280),c
 30535   01174A  5163               	movf	(_pbTimer+3)& (0+255),w,b
 30536   01174C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 30537   01174E  6E2E               	movwf	(??_mnsPoll+3)^(0+1280),c
 30538   011750  502E               	movf	(??_mnsPoll+3)^(0+1280),w,c
 30539   011752  102D               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 30540   011754  E106               	bnz	u10380
 30541   011756  0E6B               	movlw	107
 30542   011758  5C2B               	subwf	??_mnsPoll^(0+1280),w,c
 30543   01175A  0E18               	movlw	24
 30544   01175C  582C               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 30545   01175E  A0D8               	btfss	status,0,c
 30546   011760  D02B               	goto	l12071
 30547   011762                     u10380:
 30548                           
 30549                           ; BSR set to: 5
 30550   011762  EC50  F0AC         	call	_tickGet	;wreg free
 30551   011766  0105               	movlb	5	; () banked
 30552   011768  5160               	movf	_pbTimer& (0+255),w,b
 30553   01176A  5C01               	subwf	?_tickGet^(0+1280),w,c
 30554   01176C  6E2B               	movwf	??_mnsPoll^(0+1280),c
 30555   01176E  5161               	movf	(_pbTimer+1)& (0+255),w,b
 30556   011770  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 30557   011772  6E2C               	movwf	(??_mnsPoll+1)^(0+1280),c
 30558   011774  5162               	movf	(_pbTimer+2)& (0+255),w,b
 30559   011776  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 30560   011778  6E2D               	movwf	(??_mnsPoll+2)^(0+1280),c
 30561   01177A  5163               	movf	(_pbTimer+3)& (0+255),w,b
 30562   01177C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 30563   01177E  6E2E               	movwf	(??_mnsPoll+3)^(0+1280),c
 30564   011780  502E               	movf	(??_mnsPoll+3)^(0+1280),w,c
 30565   011782  E11A               	bnz	l12071
 30566   011784  0E48               	movlw	72
 30567   011786  5C2B               	subwf	??_mnsPoll^(0+1280),w,c
 30568   011788  0EE8               	movlw	232
 30569   01178A  582C               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 30570   01178C  0E01               	movlw	1
 30571   01178E  582D               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 30572   011790  B0D8               	btfsc	status,0,c
 30573   011792  D012               	goto	l12071
 30574                           
 30575                           ; BSR set to: 5
 30576                           ;../../VLCBlib_PIC/mns.c: 751:                     previousNN.word = nn.word;
 30577   011794  C55E  F57E         	movff	_nn,_previousNN
 30578   011798  C55F  F57F         	movff	_nn+1,_previousNN+1
 30579                           
 30580                           ;../../VLCBlib_PIC/mns.c: 752:                     nn.bytes.lo = nn.bytes.hi = 0;
 30581   01179C  6A5F               	clrf	(_nn+1)^(0+1280),c
 30582   01179E  6A5E               	clrf	_nn^(0+1280),c
 30583                           
 30584                           ;../../VLCBlib_PIC/mns.c: 754:                     mode_state = MODE_SETUP;
 30585   0117A0  6B90               	clrf	_mode_state& (0+255),b
 30586                           
 30587                           ; BSR set to: 5
 30588                           ;../../VLCBlib_PIC/mns.c: 755:                     setupModePreviousMode = MODE_NORMAL;
 30589   0117A2  0E01               	movlw	1
 30590   0117A4  6F8D               	movwf	_setupModePreviousMode& (0+255),b
 30591                           
 30592                           ; BSR set to: 5
 30593                           ;../../VLCBlib_PIC/mns.c: 757:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 30594   0117A6  C57F  F525         	movff	_previousNN+1,sendMessage2@data1
 30595   0117AA  C57E  F526         	movff	_previousNN,sendMessage2@data2
 30596   0117AE  0E50               	movlw	80
 30597   0117B0  EC0C  F0B1         	call	_sendMessage2
 30598                           
 30599                           ;../../VLCBlib_PIC/mns.c: 758:                     setLEDsByMode();
 30600   0117B4  EC40  F0B0         	call	_setLEDsByMode	;wreg free
 30601   0117B8                     l12071:
 30602                           
 30603                           ;../../VLCBlib_PIC/mns.c: 760:                 if (pbWasPushed &&((tickGet() - pbTimer.v
      +                          al) >= 4*62500)) {
 30604   0117B8  0105               	movlb	5	; () banked
 30605   0117BA  518C               	movf	_pbWasPushed& (0+255),w,b
 30606   0117BC  B4D8               	btfsc	status,2,c
 30607   0117BE  D7A4               	goto	l1661
 30608                           
 30609                           ; BSR set to: 5
 30610   0117C0  EC50  F0AC         	call	_tickGet	;wreg free
 30611   0117C4  0105               	movlb	5	; () banked
 30612   0117C6  5160               	movf	_pbTimer& (0+255),w,b
 30613   0117C8  5C01               	subwf	?_tickGet^(0+1280),w,c
 30614   0117CA  6E2B               	movwf	??_mnsPoll^(0+1280),c
 30615   0117CC  5161               	movf	(_pbTimer+1)& (0+255),w,b
 30616   0117CE  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 30617   0117D0  6E2C               	movwf	(??_mnsPoll+1)^(0+1280),c
 30618   0117D2  5162               	movf	(_pbTimer+2)& (0+255),w,b
 30619   0117D4  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 30620   0117D6  6E2D               	movwf	(??_mnsPoll+2)^(0+1280),c
 30621   0117D8  5163               	movf	(_pbTimer+3)& (0+255),w,b
 30622   0117DA  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 30623   0117DC  6E2E               	movwf	(??_mnsPoll+3)^(0+1280),c
 30624   0117DE  502E               	movf	(??_mnsPoll+3)^(0+1280),w,c
 30625   0117E0  E108               	bnz	u10410
 30626   0117E2  0E90               	movlw	144
 30627   0117E4  5C2B               	subwf	??_mnsPoll^(0+1280),w,c
 30628   0117E6  0ED0               	movlw	208
 30629   0117E8  582C               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 30630   0117EA  0E03               	movlw	3
 30631   0117EC  582D               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 30632   0117EE  A0D8               	btfss	status,0,c
 30633   0117F0  D78B               	goto	l1661
 30634   0117F2                     u10410:
 30635                           
 30636                           ; BSR set to: 5
 30637                           ;../../VLCBlib_PIC/mns.c: 762:                     previousNN.word = nn.word;
 30638   0117F2  C55E  F57E         	movff	_nn,_previousNN
 30639   0117F6  C55F  F57F         	movff	_nn+1,_previousNN+1
 30640                           
 30641                           ;../../VLCBlib_PIC/mns.c: 763:                     nn.bytes.lo = nn.bytes.hi = 0;
 30642   0117FA  6A5F               	clrf	(_nn+1)^(0+1280),c
 30643   0117FC  6A5E               	clrf	_nn^(0+1280),c
 30644                           
 30645                           ;../../VLCBlib_PIC/mns.c: 765:                     mode_state = MODE_UNINITIALISED;
 30646   0117FE  6990               	setf	_mode_state& (0+255),b
 30647                           
 30648                           ; BSR set to: 5
 30649                           ;../../VLCBlib_PIC/mns.c: 766:                     setupModePreviousMode = MODE_NORMAL;
 30650   011800  0E01               	movlw	1
 30651   011802  6F8D               	movwf	_setupModePreviousMode& (0+255),b
 30652                           
 30653                           ; BSR set to: 5
 30654                           ;../../VLCBlib_PIC/mns.c: 768:                     sendMessage2(OPC_NNREL, previousNN.by
      +                          tes.hi, previousNN.bytes.lo);
 30655   011804  C57F  F525         	movff	_previousNN+1,sendMessage2@data1
 30656   011808  C57E  F526         	movff	_previousNN,sendMessage2@data2
 30657   01180C  0E51               	movlw	81
 30658   01180E  EC0C  F0B1         	call	_sendMessage2
 30659   011812  D778               	goto	l12051
 30660   011814                     l12089:
 30661   011814  0105               	movlb	5	; () banked
 30662   011816  5190               	movf	_mode_state& (0+255),w,b
 30663                           
 30664                           ; Switch size 1, requested type "simple"
 30665                           ; Number of cases is 3, Range of values is 0 to 255
 30666                           ; switch strategies available:
 30667                           ; Name         Instructions Cycles
 30668                           ; simple_byte           10     6 (average)
 30669                           ;	Chosen strategy is simple_byte
 30670   011818  0A00               	xorlw	0	; case 0
 30671   01181A  B4D8               	btfsc	status,2,c
 30672   01181C  D711               	goto	l1657
 30673   01181E  0AFD               	xorlw	253	; case 253
 30674   011820  B4D8               	btfsc	status,2,c
 30675   011822  D6F6               	goto	l1655
 30676   011824  0A02               	xorlw	2	; case 255
 30677   011826  B4D8               	btfsc	status,2,c
 30678   011828  D6C7               	goto	l1650
 30679   01182A  D77E               	goto	l1663
 30680   01182C                     __end_of_mnsPoll:
 30681                           	callstack 0
 30682                           
 30683 ;; *************** function _canReceiveMessage *****************
 30684 ;; Defined at:
 30685 ;;		line 692 in file "../../VLCBlib_PIC/can18_can_2.c"
 30686 ;; Parameters:    Size  Location     Type
 30687 ;;  m               2   15[COMRAM] PTR struct Message
 30688 ;;		 -> poll@m(9), 
 30689 ;; Auto vars:     Size  Location     Type
 30690 ;;  rxFifoObj       2   23[COMRAM] PTR unsigned char 
 30691 ;;		 -> RAM(16383), 
 30692 ;;  temp            2   21[COMRAM] unsigned short 
 30693 ;;  mp              2   19[COMRAM] PTR struct Message
 30694 ;;		 -> rxBuffers(72), NULL(0), 
 30695 ;;  incomingCanI    1   18[COMRAM] unsigned char 
 30696 ;; Return value:  Size  Location     Type
 30697 ;;                  1    wreg      enum E23614
 30698 ;; Registers used:
 30699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30700 ;; Tracked objects:
 30701 ;;		On entry : 0/0
 30702 ;;		On exit  : 0/0
 30703 ;;		Unchanged: 0/0
 30704 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30706 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30707 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30708 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30709 ;;Total ram usage:       10 bytes
 30710 ;; Hardware stack levels used: 1
 30711 ;; Hardware stack levels required when called: 3
 30712 ;; This function calls:
 30713 ;;		_getNumRxBuffersInUse
 30714 ;;		_handleSelfEnumeration
 30715 ;;		_memcpy
 30716 ;;		_pop
 30717 ;; This function is called by:
 30718 ;;		_poll
 30719 ;; This function uses a non-reentrant model
 30720 ;;
 30721                           
 30722                           	psect	text32
 30723   012CE0                     __ptext32:
 30724                           	callstack 0
 30725   012CE0                     _canReceiveMessage:
 30726                           	callstack 122
 30727                           
 30728                           ;../../VLCBlib_PIC/can18_can_2.c: 693:     Message * mp;;../../VLCBlib_PIC/can18_can_2.c
      +                          : 694:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18_can_2.c: 695:     uint8_t* rxF
      +                          ifoObj;;../../VLCBlib_PIC/can18_can_2.c: 697:     uint16_t temp;;../../VLCBlib_PIC/can18
      +                          _can_2.c: 701:     mp = pop(&rxQueue);
 30729                           
 30730                           ;incstack = 0
 30731   012CE0  0EBC               	movlw	low _rxQueue
 30732   012CE2  6E01               	movwf	pop@q^(0+1280),c
 30733   012CE4  0E05               	movlw	high _rxQueue
 30734   012CE6  6E02               	movwf	(pop@q+1)^(0+1280),c
 30735   012CE8  ECDB  F0A2         	call	_pop	;wreg free
 30736   012CEC  C501  F514         	movff	?_pop,canReceiveMessage@mp
 30737   012CF0  C502  F515         	movff	?_pop+1,canReceiveMessage@mp+1
 30738                           
 30739                           ;../../VLCBlib_PIC/can18_can_2.c: 702:     if (mp != ((void*)0)) {
 30740   012CF4  5014               	movf	canReceiveMessage@mp^(0+1280),w,c
 30741   012CF6  1015               	iorwf	(canReceiveMessage@mp+1)^(0+1280),w,c
 30742   012CF8  B4D8               	btfsc	status,2,c
 30743   012CFA  D010               	goto	l928
 30744                           
 30745                           ;../../VLCBlib_PIC/can18_can_2.c: 703:         memcpy(m, mp, sizeof(Message));
 30746   012CFC  C510  F501         	movff	canReceiveMessage@m,memcpy@d1
 30747   012D00  C511  F502         	movff	canReceiveMessage@m+1,memcpy@d1+1
 30748   012D04  C514  F503         	movff	canReceiveMessage@mp,memcpy@s1
 30749   012D08  C515  F504         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 30750   012D0C  0E00               	movlw	0
 30751   012D0E  6E06               	movwf	(memcpy@n+1)^(0+1280),c
 30752   012D10  0E09               	movlw	9
 30753   012D12  6E05               	movwf	memcpy@n^(0+1280),c
 30754   012D14  EC08  F0AE         	call	_memcpy	;wreg free
 30755   012D18                     l11833:
 30756                           
 30757                           ;../../VLCBlib_PIC/can18_can_2.c: 704:         return RECEIVED;
 30758   012D18  0E01               	movlw	1
 30759   012D1A  0012               	return	
 30760   012D1C                     l928:
 30761                           
 30762                           ;../../VLCBlib_PIC/can18_can_2.c: 706:         if (! C1FIFOSTA3Lbits.TFNRFNIF) {
 30763   012D1C  0101               	movlb	1	; () banked
 30764   012D1E  B178               	btfsc	120,0,b	;volatile
 30765   012D20  D002               	goto	l11843
 30766   012D22                     u10070:
 30767                           
 30768                           ; BSR set to: 1
 30769                           ;../../VLCBlib_PIC/can18_can_2.c: 708:             return NOT_RECEIVED;
 30770   012D22  0E00               	movlw	0
 30771   012D24  0012               	return	
 30772   012D26                     l11843:
 30773                           
 30774                           ; BSR set to: 1
 30775                           ;../../VLCBlib_PIC/can18_can_2.c: 712:         temp = getNumRxBuffersInUse();
 30776   012D26  EC9F  F0AB         	call	_getNumRxBuffersInUse	;wreg free
 30777   012D2A  6E12               	movwf	??_canReceiveMessage^(0+1280),c
 30778   012D2C  5012               	movf	??_canReceiveMessage^(0+1280),w,c
 30779   012D2E  6E16               	movwf	canReceiveMessage@temp^(0+1280),c
 30780   012D30  6A17               	clrf	(canReceiveMessage@temp+1)^(0+1280),c
 30781                           
 30782                           ;../../VLCBlib_PIC/can18_can_2.c: 713:         if (temp > canDiagnostics[0x12].asUint) {
 30783   012D32  5016               	movf	canReceiveMessage@temp^(0+1280),w,c
 30784   012D34  0106               	movlb	6	; () banked
 30785   012D36  5DC6               	subwf	(_canDiagnostics+36)& (0+255),w,b
 30786   012D38  5017               	movf	(canReceiveMessage@temp+1)^(0+1280),w,c
 30787   012D3A  59C7               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 30788   012D3C  B0D8               	btfsc	status,0,c
 30789   012D3E  D004               	goto	l11849
 30790                           
 30791                           ; BSR set to: 6
 30792                           ;../../VLCBlib_PIC/can18_can_2.c: 714:             canDiagnostics[0x12].asUint = temp;
 30793   012D40  C516  F6C6         	movff	canReceiveMessage@temp,_canDiagnostics+36
 30794   012D44  C517  F6C7         	movff	canReceiveMessage@temp+1,_canDiagnostics+37
 30795   012D48                     l11849:
 30796                           
 30797                           ; BSR set to: 6
 30798                           ;../../VLCBlib_PIC/can18_can_2.c: 718:         rxFifoObj = (uint8_t*) C1FIFOUA3;
 30799   012D48  C17C F518          	movff	380,canReceiveMessage@rxFifoObj	;volatile
 30800   012D4C  C17D F519          	movff	381,canReceiveMessage@rxFifoObj+1	;volatile
 30801                           
 30802                           ; BSR set to: 6
 30803                           ;../../VLCBlib_PIC/can18_can_2.c: 719:         incomingCanId = rxFifoObj[0] & 0x7F;
 30804   012D50  C518  F4D9         	movff	canReceiveMessage@rxFifoObj,fsr2l
 30805   012D54  C519  F4DA         	movff	canReceiveMessage@rxFifoObj+1,fsr2h
 30806   012D58  50DF               	movf	indf2,w,c
 30807   012D5A  0B7F               	andlw	127
 30808   012D5C  6E13               	movwf	canReceiveMessage@incomingCanId^(0+1280),c
 30809                           
 30810                           ; BSR set to: 6
 30811                           ;../../VLCBlib_PIC/can18_can_2.c: 720:         handleSelfEnumeration(incomingCanId);
 30812   012D5E  5013               	movf	canReceiveMessage@incomingCanId^(0+1280),w,c
 30813   012D60  EC93  F0A4         	call	_handleSelfEnumeration
 30814                           
 30815                           ;../../VLCBlib_PIC/can18_can_2.c: 723:         canDiagnostics[0x09].asUint++;
 30816   012D64  0106               	movlb	6	; () banked
 30817   012D66  4BB4               	infsnz	(_canDiagnostics+18)& (0+255),f,b
 30818   012D68  2BB5               	incf	(_canDiagnostics+19)& (0+255),f,b
 30819                           
 30820                           ; BSR set to: 6
 30821                           ;../../VLCBlib_PIC/can18_can_2.c: 726:         if (rxFifoObj[4] & 0x20) {
 30822   012D6A  EE20 F004          	lfsr	2,4
 30823   012D6E  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 30824   012D70  26D9               	addwf	fsr2l,f,c
 30825   012D72  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 30826   012D74  22DA               	addwfc	fsr2h,f,c
 30827   012D76  AADF               	btfss	indf2,5,c
 30828   012D78  D004               	goto	l11867
 30829                           
 30830                           ; BSR set to: 6
 30831                           ;../../VLCBlib_PIC/can18_can_2.c: 728:             C1FIFOCON1H |= (0x2 | 0x1);
 30832   012D7A  0E03               	movlw	3
 30833   012D7C  0101               	movlb	1	; () banked
 30834   012D7E  135D               	iorwf	93,f,b	;volatile
 30835   012D80  D015               	goto	L2
 30836   012D82                     l11867:
 30837                           
 30838                           ; BSR set to: 6
 30839                           ;../../VLCBlib_PIC/can18_can_2.c: 732:         m->len = (rxFifoObj[4] & 0x0F);
 30840   012D82  EE20 F004          	lfsr	2,4
 30841   012D86  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 30842   012D88  26D9               	addwf	fsr2l,f,c
 30843   012D8A  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 30844   012D8C  22DA               	addwfc	fsr2h,f,c
 30845   012D8E  50DF               	movf	indf2,w,c
 30846   012D90  0B0F               	andlw	15
 30847   012D92  C510  F4D9         	movff	canReceiveMessage@m,fsr2l
 30848   012D96  C511  F4DA         	movff	canReceiveMessage@m+1,fsr2h
 30849   012D9A  6EDF               	movwf	indf2,c
 30850                           
 30851                           ; BSR set to: 6
 30852                           ;../../VLCBlib_PIC/can18_can_2.c: 733:         if (m->len == 0) {
 30853   012D9C  C510  F4D9         	movff	canReceiveMessage@m,fsr2l
 30854   012DA0  C511  F4DA         	movff	canReceiveMessage@m+1,fsr2h
 30855   012DA4  50DF               	movf	indf2,w,c
 30856   012DA6  A4D8               	btfss	status,2,c
 30857   012DA8  D003               	goto	l11877
 30858                           
 30859                           ; BSR set to: 6
 30860                           ;../../VLCBlib_PIC/can18_can_2.c: 735:             C1FIFOCON3Hbits.UINC = 1;
 30861   012DAA  0101               	movlb	1	; () banked
 30862   012DAC                     L2:
 30863   012DAC  8175               	bsf	117,0,b	;volatile
 30864   012DAE  D7B9               	goto	u10070
 30865   012DB0                     l11877:
 30866                           
 30867                           ; BSR set to: 6
 30868                           ;../../VLCBlib_PIC/can18_can_2.c: 738:         m->opc = rxFifoObj[8];
 30869   012DB0  EE20 F008          	lfsr	2,8
 30870   012DB4  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 30871   012DB6  26D9               	addwf	fsr2l,f,c
 30872   012DB8  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 30873   012DBA  22DA               	addwfc	fsr2h,f,c
 30874   012DBC  EE10 F001          	lfsr	1,1
 30875   012DC0  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 30876   012DC2  26E1               	addwf	fsr1l,f,c
 30877   012DC4  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 30878   012DC6  22E2               	addwfc	fsr1h,f,c
 30879   012DC8  C4DF F4E7          	movff	indf2,indf1
 30880                           
 30881                           ;../../VLCBlib_PIC/can18_can_2.c: 739:         m->bytes[0] = rxFifoObj[9];
 30882   012DCC  EE20 F009          	lfsr	2,9
 30883   012DD0  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 30884   012DD2  26D9               	addwf	fsr2l,f,c
 30885   012DD4  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 30886   012DD6  22DA               	addwfc	fsr2h,f,c
 30887   012DD8  EE10 F002          	lfsr	1,2
 30888   012DDC  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 30889   012DDE  26E1               	addwf	fsr1l,f,c
 30890   012DE0  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 30891   012DE2  22E2               	addwfc	fsr1h,f,c
 30892   012DE4  C4DF F4E7          	movff	indf2,indf1
 30893                           
 30894                           ;../../VLCBlib_PIC/can18_can_2.c: 740:         m->bytes[1] = rxFifoObj[10];
 30895   012DE8  EE20 F00A          	lfsr	2,10
 30896   012DEC  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 30897   012DEE  26D9               	addwf	fsr2l,f,c
 30898   012DF0  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 30899   012DF2  22DA               	addwfc	fsr2h,f,c
 30900   012DF4  EE10 F003          	lfsr	1,3
 30901   012DF8  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 30902   012DFA  26E1               	addwf	fsr1l,f,c
 30903   012DFC  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 30904   012DFE  22E2               	addwfc	fsr1h,f,c
 30905   012E00  C4DF F4E7          	movff	indf2,indf1
 30906                           
 30907                           ;../../VLCBlib_PIC/can18_can_2.c: 741:         m->bytes[2] = rxFifoObj[11];
 30908   012E04  EE20 F00B          	lfsr	2,11
 30909   012E08  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 30910   012E0A  26D9               	addwf	fsr2l,f,c
 30911   012E0C  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 30912   012E0E  22DA               	addwfc	fsr2h,f,c
 30913   012E10  EE10 F004          	lfsr	1,4
 30914   012E14  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 30915   012E16  26E1               	addwf	fsr1l,f,c
 30916   012E18  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 30917   012E1A  22E2               	addwfc	fsr1h,f,c
 30918   012E1C  C4DF F4E7          	movff	indf2,indf1
 30919                           
 30920                           ;../../VLCBlib_PIC/can18_can_2.c: 742:         m->bytes[3] = rxFifoObj[12];
 30921   012E20  EE20 F00C          	lfsr	2,12
 30922   012E24  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 30923   012E26  26D9               	addwf	fsr2l,f,c
 30924   012E28  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 30925   012E2A  22DA               	addwfc	fsr2h,f,c
 30926   012E2C  EE10 F005          	lfsr	1,5
 30927   012E30  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 30928   012E32  26E1               	addwf	fsr1l,f,c
 30929   012E34  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 30930   012E36  22E2               	addwfc	fsr1h,f,c
 30931   012E38  C4DF F4E7          	movff	indf2,indf1
 30932                           
 30933                           ;../../VLCBlib_PIC/can18_can_2.c: 743:         m->bytes[4] = rxFifoObj[13];
 30934   012E3C  EE20 F00D          	lfsr	2,13
 30935   012E40  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 30936   012E42  26D9               	addwf	fsr2l,f,c
 30937   012E44  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 30938   012E46  22DA               	addwfc	fsr2h,f,c
 30939   012E48  EE10 F006          	lfsr	1,6
 30940   012E4C  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 30941   012E4E  26E1               	addwf	fsr1l,f,c
 30942   012E50  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 30943   012E52  22E2               	addwfc	fsr1h,f,c
 30944   012E54  C4DF F4E7          	movff	indf2,indf1
 30945                           
 30946                           ;../../VLCBlib_PIC/can18_can_2.c: 744:         m->bytes[5] = rxFifoObj[14];
 30947   012E58  EE20 F00E          	lfsr	2,14
 30948   012E5C  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 30949   012E5E  26D9               	addwf	fsr2l,f,c
 30950   012E60  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 30951   012E62  22DA               	addwfc	fsr2h,f,c
 30952   012E64  EE10 F007          	lfsr	1,7
 30953   012E68  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 30954   012E6A  26E1               	addwf	fsr1l,f,c
 30955   012E6C  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 30956   012E6E  22E2               	addwfc	fsr1h,f,c
 30957   012E70  C4DF F4E7          	movff	indf2,indf1
 30958                           
 30959                           ;../../VLCBlib_PIC/can18_can_2.c: 745:         m->bytes[6] = rxFifoObj[15];
 30960   012E74  EE20 F00F          	lfsr	2,15
 30961   012E78  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 30962   012E7A  26D9               	addwf	fsr2l,f,c
 30963   012E7C  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 30964   012E7E  22DA               	addwfc	fsr2h,f,c
 30965   012E80  EE10 F008          	lfsr	1,8
 30966   012E84  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 30967   012E86  26E1               	addwf	fsr1l,f,c
 30968   012E88  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 30969   012E8A  22E2               	addwfc	fsr1h,f,c
 30970   012E8C  C4DF F4E7          	movff	indf2,indf1
 30971                           
 30972                           ; BSR set to: 6
 30973                           ;../../VLCBlib_PIC/can18_can_2.c: 747:         C1FIFOCON3Hbits.UINC = 1;
 30974   012E90  0101               	movlb	1	; () banked
 30975   012E92  8175               	bsf	117,0,b	;volatile
 30976   012E94  D741               	goto	l11833
 30977   012E96                     __end_of_canReceiveMessage:
 30978                           	callstack 0
 30979                           
 30980 ;; *************** function _pop *****************
 30981 ;; Defined at:
 30982 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 30983 ;; Parameters:    Size  Location     Type
 30984 ;;  q               2    0[COMRAM] PTR struct MessageQueue
 30985 ;;		 -> rxQueue(5), 
 30986 ;; Auto vars:     Size  Location     Type
 30987 ;;  ret             2    8[COMRAM] PTR struct Message
 30988 ;;		 -> rxBuffers(72), 
 30989 ;; Return value:  Size  Location     Type
 30990 ;;                  2    0[COMRAM] PTR struct Message
 30991 ;; Registers used:
 30992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30993 ;; Tracked objects:
 30994 ;;		On entry : 0/0
 30995 ;;		On exit  : 0/0
 30996 ;;		Unchanged: 0/0
 30997 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30998 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30999 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31000 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31001 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31002 ;;Total ram usage:       10 bytes
 31003 ;; Hardware stack levels used: 1
 31004 ;; Hardware stack levels required when called: 1
 31005 ;; This function calls:
 31006 ;;		Nothing
 31007 ;; This function is called by:
 31008 ;;		_canReceiveMessage
 31009 ;; This function uses a non-reentrant model
 31010 ;;
 31011                           
 31012                           	psect	text33
 31013   0145B6                     __ptext33:
 31014                           	callstack 0
 31015   0145B6                     _pop:
 31016                           	callstack 123
 31017                           
 31018                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 31019                           
 31020                           ;incstack = 0
 31021   0145B6  EE20 F002          	lfsr	2,2
 31022   0145BA  5001               	movf	pop@q^(0+1280),w,c
 31023   0145BC  26D9               	addwf	fsr2l,f,c
 31024   0145BE  5002               	movf	(pop@q+1)^(0+1280),w,c
 31025   0145C0  22DA               	addwfc	fsr2h,f,c
 31026   0145C2  EE10 F003          	lfsr	1,3
 31027   0145C6  5001               	movf	pop@q^(0+1280),w,c
 31028   0145C8  26E1               	addwf	fsr1l,f,c
 31029   0145CA  5002               	movf	(pop@q+1)^(0+1280),w,c
 31030   0145CC  22E2               	addwfc	fsr1h,f,c
 31031   0145CE  50DE               	movf	postinc2,w,c
 31032   0145D0  18E6               	xorwf	postinc1,w,c
 31033   0145D2  A4D8               	btfss	status,2,c
 31034   0145D4  D005               	goto	l10053
 31035                           
 31036                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 31037   0145D6  0E00               	movlw	0
 31038   0145D8  6E01               	movwf	?_pop^(0+1280),c
 31039   0145DA  0E00               	movlw	0
 31040   0145DC  6E02               	movwf	(?_pop+1)^(0+1280),c
 31041   0145DE  0012               	return	
 31042   0145E0                     l10053:
 31043                           
 31044                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 31045   0145E0  EE20 F002          	lfsr	2,2
 31046   0145E4  5001               	movf	pop@q^(0+1280),w,c
 31047   0145E6  26D9               	addwf	fsr2l,f,c
 31048   0145E8  5002               	movf	(pop@q+1)^(0+1280),w,c
 31049   0145EA  22DA               	addwfc	fsr2h,f,c
 31050   0145EC  50DF               	movf	indf2,w,c
 31051   0145EE  6E04               	movwf	??_pop^(0+1280),c
 31052   0145F0  5004               	movf	??_pop^(0+1280),w,c
 31053   0145F2  0D09               	mullw	9
 31054   0145F4  C4F3 F505          	movff	prodl,??_pop+1
 31055   0145F8  C4F4 F506          	movff	prodh,??_pop+2
 31056   0145FC  C501  F4D9         	movff	pop@q,fsr2l
 31057   014600  C502  F4DA         	movff	pop@q+1,fsr2h
 31058   014604  C4DE F507          	movff	postinc2,??_pop+3
 31059   014608  C4DD F508          	movff	postdec2,??_pop+4
 31060   01460C  5005               	movf	(??_pop+1)^(0+1280),w,c
 31061   01460E  2407               	addwf	(??_pop+3)^(0+1280),w,c
 31062   014610  6E09               	movwf	pop@ret^(0+1280),c
 31063   014612  5006               	movf	(??_pop+2)^(0+1280),w,c
 31064   014614  2008               	addwfc	(??_pop+4)^(0+1280),w,c
 31065   014616  6E0A               	movwf	(pop@ret+1)^(0+1280),c
 31066   014618  EE20 F002          	lfsr	2,2
 31067   01461C  5001               	movf	pop@q^(0+1280),w,c
 31068   01461E  26D9               	addwf	fsr2l,f,c
 31069   014620  5002               	movf	(pop@q+1)^(0+1280),w,c
 31070   014622  22DA               	addwfc	fsr2h,f,c
 31071   014624  2ADF               	incf	indf2,f,c
 31072                           
 31073                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 31074   014626  EE20 F004          	lfsr	2,4
 31075   01462A  5001               	movf	pop@q^(0+1280),w,c
 31076   01462C  26D9               	addwf	fsr2l,f,c
 31077   01462E  5002               	movf	(pop@q+1)^(0+1280),w,c
 31078   014630  22DA               	addwfc	fsr2h,f,c
 31079   014632  EE10 F002          	lfsr	1,2
 31080   014636  5001               	movf	pop@q^(0+1280),w,c
 31081   014638  26E1               	addwf	fsr1l,f,c
 31082   01463A  5002               	movf	(pop@q+1)^(0+1280),w,c
 31083   01463C  22E2               	addwfc	fsr1h,f,c
 31084   01463E  50DE               	movf	postinc2,w,c
 31085   014640  5CE6               	subwf	postinc1,w,c
 31086   014642  A0D8               	btfss	status,0,c
 31087   014644  D007               	goto	l10061
 31088   014646  EE20 F002          	lfsr	2,2
 31089   01464A  5001               	movf	pop@q^(0+1280),w,c
 31090   01464C  26D9               	addwf	fsr2l,f,c
 31091   01464E  5002               	movf	(pop@q+1)^(0+1280),w,c
 31092   014650  22DA               	addwfc	fsr2h,f,c
 31093   014652  6ADF               	clrf	indf2,c
 31094   014654                     l10061:
 31095                           
 31096                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 31097   014654  C509  F501         	movff	pop@ret,?_pop
 31098   014658  C50A  F502         	movff	pop@ret+1,?_pop+1
 31099   01465C  0012               	return		;funcret
 31100   01465E                     __end_of_pop:
 31101                           	callstack 0
 31102                           
 31103 ;; *************** function _memcpy *****************
 31104 ;; Defined at:
 31105 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
 31106 ;; Parameters:    Size  Location     Type
 31107 ;;  d1              2    0[COMRAM] PTR void 
 31108 ;;		 -> poll@m(9), 
 31109 ;;  s1              2    2[COMRAM] PTR const void 
 31110 ;;		 -> rxBuffers(72), NULL(0), 
 31111 ;;  n               2    4[COMRAM] unsigned int 
 31112 ;; Auto vars:     Size  Location     Type
 31113 ;;  s               2    8[COMRAM] PTR const unsigned char 
 31114 ;;		 -> rxBuffers(72), NULL(0), 
 31115 ;;  d               2    6[COMRAM] PTR unsigned char 
 31116 ;;		 -> poll@m(9), 
 31117 ;;  tmp             1   10[COMRAM] unsigned char 
 31118 ;; Return value:  Size  Location     Type
 31119 ;;                  2    0[COMRAM] PTR void 
 31120 ;; Registers used:
 31121 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31122 ;; Tracked objects:
 31123 ;;		On entry : 0/0
 31124 ;;		On exit  : 0/0
 31125 ;;		Unchanged: 0/0
 31126 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31127 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31128 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31130 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31131 ;;Total ram usage:       11 bytes
 31132 ;; Hardware stack levels used: 1
 31133 ;; Hardware stack levels required when called: 1
 31134 ;; This function calls:
 31135 ;;		Nothing
 31136 ;; This function is called by:
 31137 ;;		_canReceiveMessage
 31138 ;; This function uses a non-reentrant model
 31139 ;;
 31140                           
 31141                           	psect	text34
 31142   015C10                     __ptext34:
 31143                           	callstack 0
 31144   015C10                     _memcpy:
 31145                           	callstack 123
 31146                           
 31147                           ;incstack = 0
 31148   015C10  C503  F509         	movff	memcpy@s1,memcpy@s
 31149   015C14  C504  F50A         	movff	memcpy@s1+1,memcpy@s+1
 31150   015C18  C501  F507         	movff	memcpy@d1,memcpy@d
 31151   015C1C  C502  F508         	movff	memcpy@d1+1,memcpy@d+1
 31152   015C20  D010               	goto	l10075
 31153   015C22                     l10067:
 31154   015C22  C509  F4D9         	movff	memcpy@s,fsr2l
 31155   015C26  C50A  F4DA         	movff	memcpy@s+1,fsr2h
 31156   015C2A  50DF               	movf	indf2,w,c
 31157   015C2C  6E0B               	movwf	memcpy@tmp^(0+1280),c
 31158   015C2E  4A09               	infsnz	memcpy@s^(0+1280),f,c
 31159   015C30  2A0A               	incf	(memcpy@s+1)^(0+1280),f,c
 31160   015C32  C507  F4D9         	movff	memcpy@d,fsr2l
 31161   015C36  C508  F4DA         	movff	memcpy@d+1,fsr2h
 31162   015C3A  C50B  F4DF         	movff	memcpy@tmp,indf2
 31163   015C3E  4A07               	infsnz	memcpy@d^(0+1280),f,c
 31164   015C40  2A08               	incf	(memcpy@d+1)^(0+1280),f,c
 31165   015C42                     l10075:
 31166   015C42  0605               	decf	memcpy@n^(0+1280),f,c
 31167   015C44  A0D8               	btfss	status,0,c
 31168   015C46  0606               	decf	(memcpy@n+1)^(0+1280),f,c
 31169   015C48  2805               	incf	memcpy@n^(0+1280),w,c
 31170   015C4A  E1EB               	bnz	l10067
 31171   015C4C  2806               	incf	(memcpy@n+1)^(0+1280),w,c
 31172   015C4E  B4D8               	btfsc	status,2,c
 31173   015C50  0012               	return	
 31174   015C52  D7E7               	goto	l10067
 31175   015C54                     __end_of_memcpy:
 31176                           	callstack 0
 31177                           
 31178 ;; *************** function _handleSelfEnumeration *****************
 31179 ;; Defined at:
 31180 ;;		line 792 in file "../../VLCBlib_PIC/can18_can_2.c"
 31181 ;; Parameters:    Size  Location     Type
 31182 ;;  receivedCanI    1    wreg     unsigned char 
 31183 ;; Auto vars:     Size  Location     Type
 31184 ;;  receivedCanI    1   14[COMRAM] unsigned char 
 31185 ;; Return value:  Size  Location     Type
 31186 ;;                  1    wreg      void 
 31187 ;; Registers used:
 31188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31189 ;; Tracked objects:
 31190 ;;		On entry : 0/0
 31191 ;;		On exit  : 0/0
 31192 ;;		Unchanged: 0/0
 31193 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31195 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31196 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31197 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31198 ;;Total ram usage:        5 bytes
 31199 ;; Hardware stack levels used: 1
 31200 ;; Hardware stack levels required when called: 2
 31201 ;; This function calls:
 31202 ;;		_tickGet
 31203 ;; This function is called by:
 31204 ;;		_canReceiveMessage
 31205 ;; This function uses a non-reentrant model
 31206 ;;
 31207                           
 31208                           	psect	text35
 31209   014926                     __ptext35:
 31210                           	callstack 0
 31211   014926                     _handleSelfEnumeration:
 31212                           	callstack 122
 31213                           
 31214                           ;incstack = 0
 31215                           ;handleSelfEnumeration@receivedCanId stored from wreg
 31216   014926  6E0F               	movwf	handleSelfEnumeration@receivedCanId^(0+1280),c
 31217                           
 31218                           ;../../VLCBlib_PIC/can18_can_2.c: 794:     switch (enumerationState) {
 31219   014928  D02E               	goto	l10091
 31220   01492A                     l10079:
 31221                           
 31222                           ; BSR set to: 5
 31223                           ;../../VLCBlib_PIC/can18_can_2.c: 797:             ( enumerationResults[receivedCanId>>3
      +                          ] |= ( 1<<(receivedCanId & 0x07) ) );
 31224   01492A  C50F  F50B         	movff	handleSelfEnumeration@receivedCanId,??_handleSelfEnumeration
 31225   01492E  0E07               	movlw	7
 31226   014930  160B               	andwf	??_handleSelfEnumeration^(0+1280),f,c
 31227   014932  0E01               	movlw	1
 31228   014934  6E0C               	movwf	(??_handleSelfEnumeration+1)^(0+1280),c
 31229   014936  2A0B               	incf	??_handleSelfEnumeration^(0+1280),f,c
 31230   014938  D002               	goto	u8044
 31231   01493A                     u8045:
 31232   01493A  90D8               	bcf	status,0,c
 31233   01493C  360C               	rlcf	(??_handleSelfEnumeration+1)^(0+1280),f,c
 31234   01493E                     u8044:
 31235   01493E  2E0B               	decfsz	??_handleSelfEnumeration^(0+1280),f,c
 31236   014940  D7FC               	goto	u8045
 31237   014942  380F               	swapf	handleSelfEnumeration@receivedCanId^(0+1280),w,c
 31238   014944  46E8               	rlncf	wreg,f,c
 31239   014946  0B1F               	andlw	31
 31240   014948  6E0D               	movwf	(??_handleSelfEnumeration+2)^(0+1280),c
 31241   01494A  6A0E               	clrf	(??_handleSelfEnumeration+3)^(0+1280),c
 31242   01494C  0E61               	movlw	low _enumerationResults
 31243   01494E  240D               	addwf	(??_handleSelfEnumeration+2)^(0+1280),w,c
 31244   014950  6ED9               	movwf	fsr2l,c
 31245   014952  0E06               	movlw	high _enumerationResults
 31246   014954  200E               	addwfc	(??_handleSelfEnumeration+3)^(0+1280),w,c
 31247   014956  6EDA               	movwf	fsr2h,c
 31248   014958  500C               	movf	(??_handleSelfEnumeration+1)^(0+1280),w,c
 31249   01495A  12DF               	iorwf	indf2,f,c
 31250                           
 31251                           ;../../VLCBlib_PIC/can18_can_2.c: 798:             break;
 31252   01495C  0012               	return	
 31253   01495E                     l10081:
 31254                           
 31255                           ; BSR set to: 5
 31256                           ;../../VLCBlib_PIC/can18_can_2.c: 800:             if (receivedCanId == canId) {
 31257   01495E  5195               	movf	_canId& (0+255),w,b
 31258   014960  180F               	xorwf	handleSelfEnumeration@receivedCanId^(0+1280),w,c
 31259   014962  A4D8               	btfss	status,2,c
 31260   014964  0012               	return	
 31261                           
 31262                           ; BSR set to: 5
 31263                           ;../../VLCBlib_PIC/can18_can_2.c: 803:                 enumerationState = ENUMERATION_RE
      +                          QUIRED;
 31264   014966  0E01               	movlw	1
 31265   014968  6F92               	movwf	_enumerationState& (0+255),b
 31266                           
 31267                           ; BSR set to: 5
 31268                           ;../../VLCBlib_PIC/can18_can_2.c: 805:                 canDiagnostics[0x0E].asUint++;
 31269   01496A  0106               	movlb	6	; () banked
 31270   01496C  4BBE               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 31271   01496E  2BBF               	incf	(_canDiagnostics+29)& (0+255),f,b
 31272                           
 31273                           ; BSR set to: 6
 31274                           ;../../VLCBlib_PIC/can18_can_2.c: 807:                 enumerationStartTime.val = tickGe
      +                          t();
 31275   014970  EC50  F0AC         	call	_tickGet	;wreg free
 31276   014974  C501  F564         	movff	?_tickGet,_enumerationStartTime
 31277   014978  C502  F565         	movff	?_tickGet+1,_enumerationStartTime+1
 31278   01497C  C503  F566         	movff	?_tickGet+2,_enumerationStartTime+2
 31279   014980  C504  F567         	movff	?_tickGet+3,_enumerationStartTime+3
 31280   014984  0012               	return	
 31281   014986                     l10091:
 31282   014986  0105               	movlb	5	; () banked
 31283   014988  5192               	movf	_enumerationState& (0+255),w,b
 31284   01498A  6E0B               	movwf	??_handleSelfEnumeration^(0+1280),c
 31285   01498C  6A0C               	clrf	(??_handleSelfEnumeration+1)^(0+1280),c
 31286                           
 31287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31288                           ; Switch size 1, requested type "simple"
 31289                           ; Number of cases is 1, Range of values is 0 to 0
 31290                           ; switch strategies available:
 31291                           ; Name         Instructions Cycles
 31292                           ; simple_byte            4     3 (average)
 31293                           ;	Chosen strategy is simple_byte
 31294   01498E  500C               	movf	(??_handleSelfEnumeration+1)^(0+1280),w,c
 31295   014990  0A00               	xorlw	0	; case 0
 31296   014992  A4D8               	btfss	status,2,c
 31297   014994  0012               	return	
 31298                           
 31299                           ; BSR set to: 5
 31300                           ; Switch size 1, requested type "simple"
 31301                           ; Number of cases is 3, Range of values is 0 to 3
 31302                           ; switch strategies available:
 31303                           ; Name         Instructions Cycles
 31304                           ; simple_byte           10     6 (average)
 31305                           ;	Chosen strategy is simple_byte
 31306   014996  500B               	movf	??_handleSelfEnumeration^(0+1280),w,c
 31307   014998  0A00               	xorlw	0	; case 0
 31308   01499A  B4D8               	btfsc	status,2,c
 31309   01499C  D7E0               	goto	l10081
 31310   01499E  0A02               	xorlw	2	; case 2
 31311   0149A0  B4D8               	btfsc	status,2,c
 31312   0149A2  D7C3               	goto	l10079
 31313   0149A4  0A01               	xorlw	1	; case 3
 31314   0149A6  A4D8               	btfss	status,2,c
 31315   0149A8  0012               	return	
 31316   0149AA  D7BF               	goto	l10079
 31317   0149AC                     __end_of_handleSelfEnumeration:
 31318                           	callstack 0
 31319                           
 31320 ;; *************** function _processEnumeration *****************
 31321 ;; Defined at:
 31322 ;;		line 820 in file "../../VLCBlib_PIC/can18_can_2.c"
 31323 ;; Parameters:    Size  Location     Type
 31324 ;;		None
 31325 ;; Auto vars:     Size  Location     Type
 31326 ;;  i               1   27[COMRAM] unsigned char 
 31327 ;;  newCanId        1   26[COMRAM] unsigned char 
 31328 ;;  enumResult      1   25[COMRAM] unsigned char 
 31329 ;; Return value:  Size  Location     Type
 31330 ;;                  1    wreg      void 
 31331 ;; Registers used:
 31332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31333 ;; Tracked objects:
 31334 ;;		On entry : 0/0
 31335 ;;		On exit  : 0/0
 31336 ;;		Unchanged: 0/0
 31337 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31339 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31340 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31341 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31342 ;;Total ram usage:        7 bytes
 31343 ;; Hardware stack levels used: 1
 31344 ;; Hardware stack levels required when called: 7
 31345 ;; This function calls:
 31346 ;;		_setNewCanId
 31347 ;;		_startEnumeration
 31348 ;;		_tickGet
 31349 ;;		_updateModuleErrorStatus
 31350 ;; This function is called by:
 31351 ;;		_canPoll
 31352 ;; This function uses a non-reentrant model
 31353 ;;
 31354                           
 31355                           	psect	text36
 31356   0132E6                     __ptext36:
 31357                           	callstack 0
 31358   0132E6                     _processEnumeration:
 31359                           	callstack 117
 31360                           
 31361                           ;../../VLCBlib_PIC/can18_can_2.c: 821:     uint8_t i, newCanId, enumResult;;../../VLCBli
      +                          b_PIC/can18_can_2.c: 823:     switch (enumerationState) {
 31362                           
 31363                           ;incstack = 0
 31364   0132E6  D08E               	goto	l10039
 31365   0132E8                     l9979:
 31366                           
 31367                           ; BSR set to: 5
 31368                           ;../../VLCBlib_PIC/can18_can_2.c: 826:             if ((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) ) {
 31369   0132E8  EC50  F0AC         	call	_tickGet	;wreg free
 31370   0132EC  0105               	movlb	5	; () banked
 31371   0132EE  5164               	movf	_enumerationStartTime& (0+255),w,b
 31372   0132F0  5C01               	subwf	?_tickGet^(0+1280),w,c
 31373   0132F2  6E16               	movwf	??_processEnumeration^(0+1280),c
 31374   0132F4  5165               	movf	(_enumerationStartTime+1)& (0+255),w,b
 31375   0132F6  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 31376   0132F8  6E17               	movwf	(??_processEnumeration+1)^(0+1280),c
 31377   0132FA  5166               	movf	(_enumerationStartTime+2)& (0+255),w,b
 31378   0132FC  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 31379   0132FE  6E18               	movwf	(??_processEnumeration+2)^(0+1280),c
 31380   013300  5167               	movf	(_enumerationStartTime+3)& (0+255),w,b
 31381   013302  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 31382   013304  6E19               	movwf	(??_processEnumeration+3)^(0+1280),c
 31383   013306  5019               	movf	(??_processEnumeration+3)^(0+1280),w,c
 31384   013308  1018               	iorwf	(??_processEnumeration+2)^(0+1280),w,c
 31385   01330A  E106               	bnz	u7910
 31386   01330C  0ED5               	movlw	213
 31387   01330E  5C16               	subwf	??_processEnumeration^(0+1280),w,c
 31388   013310  0E30               	movlw	48
 31389   013312  5817               	subwfb	(??_processEnumeration+1)^(0+1280),w,c
 31390   013314  A0D8               	btfss	status,0,c
 31391   013316  0012               	return	
 31392   013318                     u7910:
 31393                           
 31394                           ; BSR set to: 5
 31395                           ;../../VLCBlib_PIC/can18_can_2.c: 830:                 startEnumeration(0);
 31396   013318  0E00               	movlw	0
 31397   01331A  ECA6  F0AC         	call	_startEnumeration
 31398   01331E  0012               	return	
 31399   013320                     l9983:
 31400                           
 31401                           ; BSR set to: 5
 31402                           ;../../VLCBlib_PIC/can18_can_2.c: 838:             if ((tickGet() - enumerationStartTime
      +                          .val) > (62500/10) ) {
 31403   013320  EC50  F0AC         	call	_tickGet	;wreg free
 31404   013324  0105               	movlb	5	; () banked
 31405   013326  5164               	movf	_enumerationStartTime& (0+255),w,b
 31406   013328  5C01               	subwf	?_tickGet^(0+1280),w,c
 31407   01332A  6E16               	movwf	??_processEnumeration^(0+1280),c
 31408   01332C  5165               	movf	(_enumerationStartTime+1)& (0+255),w,b
 31409   01332E  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 31410   013330  6E17               	movwf	(??_processEnumeration+1)^(0+1280),c
 31411   013332  5166               	movf	(_enumerationStartTime+2)& (0+255),w,b
 31412   013334  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 31413   013336  6E18               	movwf	(??_processEnumeration+2)^(0+1280),c
 31414   013338  5167               	movf	(_enumerationStartTime+3)& (0+255),w,b
 31415   01333A  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 31416   01333C  6E19               	movwf	(??_processEnumeration+3)^(0+1280),c
 31417   01333E  5019               	movf	(??_processEnumeration+3)^(0+1280),w,c
 31418   013340  1018               	iorwf	(??_processEnumeration+2)^(0+1280),w,c
 31419   013342  E106               	bnz	u7920
 31420   013344  0E6B               	movlw	107
 31421   013346  5C16               	subwf	??_processEnumeration^(0+1280),w,c
 31422   013348  0E18               	movlw	24
 31423   01334A  5817               	subwfb	(??_processEnumeration+1)^(0+1280),w,c
 31424   01334C  A0D8               	btfss	status,0,c
 31425   01334E  0012               	return	
 31426   013350                     u7920:
 31427                           
 31428                           ; BSR set to: 5
 31429                           ;../../VLCBlib_PIC/can18_can_2.c: 843:                 for (i=0; (enumerationResults[i] 
      +                          == 0xFF) && (i < (0x7F/8)+1); i++) {
 31430   013350  6A1C               	clrf	processEnumeration@i^(0+1280),c
 31431   013352  D001               	goto	l9989
 31432   013354                     l9987:
 31433                           
 31434                           ;../../VLCBlib_PIC/can18_can_2.c: 845:                 }
 31435   013354  2A1C               	incf	processEnumeration@i^(0+1280),f,c
 31436   013356                     l9989:
 31437   013356  0E61               	movlw	low _enumerationResults
 31438   013358  241C               	addwf	processEnumeration@i^(0+1280),w,c
 31439   01335A  6ED9               	movwf	fsr2l,c
 31440   01335C  6ADA               	clrf	fsr2h,c
 31441   01335E  0E06               	movlw	high _enumerationResults
 31442   013360  22DA               	addwfc	fsr2h,f,c
 31443   013362  28DE               	incf	postinc2,w,c
 31444   013364  A4D8               	btfss	status,2,c
 31445   013366  D003               	goto	u7940
 31446   013368  0E0F               	movlw	15
 31447   01336A  641C               	cpfsgt	processEnumeration@i^(0+1280),c
 31448   01336C  D7F3               	goto	l9987
 31449   01336E                     u7940:
 31450                           
 31451                           ;../../VLCBlib_PIC/can18_can_2.c: 846:                 if ((enumResult = enumerationResu
      +                          lts[i]) != 0xFF) {
 31452   01336E  0E61               	movlw	low _enumerationResults
 31453   013370  241C               	addwf	processEnumeration@i^(0+1280),w,c
 31454   013372  6ED9               	movwf	fsr2l,c
 31455   013374  6ADA               	clrf	fsr2h,c
 31456   013376  0E06               	movlw	high _enumerationResults
 31457   013378  22DA               	addwfc	fsr2h,f,c
 31458   01337A  50DF               	movf	indf2,w,c
 31459   01337C  6E1A               	movwf	processEnumeration@enumResult^(0+1280),c
 31460   01337E  281A               	incf	processEnumeration@enumResult^(0+1280),w,c
 31461   013380  B4D8               	btfsc	status,2,c
 31462   013382  D017               	goto	l10011
 31463                           
 31464                           ;../../VLCBlib_PIC/can18_can_2.c: 847:                     for (newCanId = i*8; (enumRes
      +                          ult & 0x01); newCanId++) {
 31465   013384  501C               	movf	processEnumeration@i^(0+1280),w,c
 31466   013386  0D08               	mullw	8
 31467   013388  C4F3 F51B          	movff	prodl,processEnumeration@newCanId
 31468   01338C  D003               	goto	l10001
 31469   01338E                     l9997:
 31470                           
 31471                           ;../../VLCBlib_PIC/can18_can_2.c: 848:                         enumResult >>= 1;
 31472   01338E  90D8               	bcf	status,0,c
 31473   013390  321A               	rrcf	processEnumeration@enumResult^(0+1280),f,c
 31474                           
 31475                           ;../../VLCBlib_PIC/can18_can_2.c: 849:                     }
 31476   013392  2A1B               	incf	processEnumeration@newCanId^(0+1280),f,c
 31477   013394                     l10001:
 31478   013394  B01A               	btfsc	processEnumeration@enumResult^(0+1280),0,c
 31479   013396  D7FB               	goto	l9997
 31480                           
 31481                           ;../../VLCBlib_PIC/can18_can_2.c: 850:                     if ((newCanId >= 1) && (newCa
      +                          nId <= 99)) {
 31482   013398  501B               	movf	processEnumeration@newCanId^(0+1280),w,c
 31483   01339A  B4D8               	btfsc	status,2,c
 31484   01339C  D00A               	goto	l10011
 31485   01339E  0E64               	movlw	100
 31486   0133A0  601B               	cpfslt	processEnumeration@newCanId^(0+1280),c
 31487   0133A2  D007               	goto	l10011
 31488                           
 31489                           ;../../VLCBlib_PIC/can18_can_2.c: 852:                         canId = newCanId;
 31490   0133A4  C51B  F595         	movff	processEnumeration@newCanId,_canId
 31491                           
 31492                           ;../../VLCBlib_PIC/can18_can_2.c: 853:                         setNewCanId(canId);
 31493   0133A8  0105               	movlb	5	; () banked
 31494   0133AA  5195               	movf	_canId& (0+255),w,b
 31495   0133AC  EC26  F0B0         	call	_setNewCanId
 31496                           
 31497                           ;../../VLCBlib_PIC/can18_can_2.c: 854:                     } else {
 31498   0133B0  D005               	goto	l10019
 31499   0133B2                     l10011:
 31500                           
 31501                           ;../../VLCBlib_PIC/can18_can_2.c: 856:                         canDiagnostics[0x10].asUi
      +                          nt++;
 31502   0133B2  0106               	movlb	6	; () banked
 31503   0133B4  4BC2               	infsnz	(_canDiagnostics+32)& (0+255),f,b
 31504   0133B6  2BC3               	incf	(_canDiagnostics+33)& (0+255),f,b
 31505                           
 31506                           ; BSR set to: 6
 31507                           ;../../VLCBlib_PIC/can18_can_2.c: 857:                         updateModuleErrorStatus()
      +                          ;
 31508   0133B8  ECFB  F0B2         	call	_updateModuleErrorStatus	;wreg free
 31509   0133BC                     l10019:
 31510                           
 31511                           ;../../VLCBlib_PIC/can18_can_2.c: 867:                 if (enumerationState == ENUMERATI
      +                          ON_IN_PROGRESS_TX_WAITING) {
 31512   0133BC  0E03               	movlw	3
 31513   0133BE  0105               	movlb	5	; () banked
 31514   0133C0  1992               	xorwf	_enumerationState& (0+255),w,b
 31515   0133C2  A4D8               	btfss	status,2,c
 31516   0133C4  D01C               	goto	l10035
 31517                           
 31518                           ; BSR set to: 5
 31519                           ;../../VLCBlib_PIC/can18_can_2.c: 869:                     for (i=0; i< 32; i++) {
 31520   0133C6  6A1C               	clrf	processEnumeration@i^(0+1280),c
 31521   0133C8                     l10027:
 31522                           
 31523                           ; BSR set to: 5
 31524                           ;../../VLCBlib_PIC/can18_can_2.c: 870:                         *((uint8_t*)(((0x3BB0 +((
      +                          8 +8)*4))+((8 +8)*1)) + (i* (8 + 8)))) = canId & 0x7f;
 31525   0133C8  501C               	movf	processEnumeration@i^(0+1280),w,c
 31526   0133CA  6E16               	movwf	??_processEnumeration^(0+1280),c
 31527   0133CC  6A17               	clrf	(??_processEnumeration+1)^(0+1280),c
 31528   0133CE  3A16               	swapf	??_processEnumeration^(0+1280),f,c
 31529   0133D0  3A17               	swapf	(??_processEnumeration+1)^(0+1280),f,c
 31530   0133D2  0EF0               	movlw	240
 31531   0133D4  1617               	andwf	(??_processEnumeration+1)^(0+1280),f,c
 31532   0133D6  5016               	movf	??_processEnumeration^(0+1280),w,c
 31533   0133D8  0B0F               	andlw	15
 31534   0133DA  1217               	iorwf	(??_processEnumeration+1)^(0+1280),f,c
 31535   0133DC  0EF0               	movlw	240
 31536   0133DE  1616               	andwf	??_processEnumeration^(0+1280),f,c
 31537   0133E0  0E00               	movlw	0
 31538   0133E2  2416               	addwf	??_processEnumeration^(0+1280),w,c
 31539   0133E4  6ED9               	movwf	fsr2l,c
 31540   0133E6  0E3C               	movlw	60
 31541   0133E8  2017               	addwfc	(??_processEnumeration+1)^(0+1280),w,c
 31542   0133EA  6EDA               	movwf	fsr2h,c
 31543   0133EC  5195               	movf	_canId& (0+255),w,b
 31544   0133EE  0B7F               	andlw	127
 31545   0133F0  6EDF               	movwf	indf2,c
 31546                           
 31547                           ; BSR set to: 5
 31548                           ;../../VLCBlib_PIC/can18_can_2.c: 871:                     }
 31549   0133F2  2A1C               	incf	processEnumeration@i^(0+1280),f,c
 31550                           
 31551                           ; BSR set to: 5
 31552   0133F4  0E1F               	movlw	31
 31553   0133F6  641C               	cpfsgt	processEnumeration@i^(0+1280),c
 31554   0133F8  D7E7               	goto	l10027
 31555                           
 31556                           ; BSR set to: 5
 31557                           ;../../VLCBlib_PIC/can18_can_2.c: 873:                     C1FIFOCON2H |= 0x2;
 31558   0133FA  0101               	movlb	1	; () banked
 31559   0133FC  8369               	bsf	105,1,b	;volatile
 31560   0133FE                     l10035:
 31561                           
 31562                           ;../../VLCBlib_PIC/can18_can_2.c: 875:                 enumerationState = NO_ENUMERATION
      +                          ;
 31563   0133FE  0105               	movlb	5	; () banked
 31564   013400  6B92               	clrf	_enumerationState& (0+255),b
 31565   013402  0012               	return	
 31566   013404                     l10039:
 31567   013404  0105               	movlb	5	; () banked
 31568   013406  5192               	movf	_enumerationState& (0+255),w,b
 31569   013408  6E16               	movwf	??_processEnumeration^(0+1280),c
 31570   01340A  6A17               	clrf	(??_processEnumeration+1)^(0+1280),c
 31571                           
 31572                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31573                           ; Switch size 1, requested type "simple"
 31574                           ; Number of cases is 1, Range of values is 0 to 0
 31575                           ; switch strategies available:
 31576                           ; Name         Instructions Cycles
 31577                           ; simple_byte            4     3 (average)
 31578                           ;	Chosen strategy is simple_byte
 31579   01340C  5017               	movf	(??_processEnumeration+1)^(0+1280),w,c
 31580   01340E  0A00               	xorlw	0	; case 0
 31581   013410  A4D8               	btfss	status,2,c
 31582   013412  0012               	return	
 31583                           
 31584                           ; BSR set to: 5
 31585                           ; Switch size 1, requested type "simple"
 31586                           ; Number of cases is 3, Range of values is 1 to 3
 31587                           ; switch strategies available:
 31588                           ; Name         Instructions Cycles
 31589                           ; simple_byte           10     6 (average)
 31590                           ;	Chosen strategy is simple_byte
 31591   013414  5016               	movf	??_processEnumeration^(0+1280),w,c
 31592   013416  0A01               	xorlw	1	; case 1
 31593   013418  B4D8               	btfsc	status,2,c
 31594   01341A  D766               	goto	l9979
 31595   01341C  0A03               	xorlw	3	; case 2
 31596   01341E  B4D8               	btfsc	status,2,c
 31597   013420  D77F               	goto	l9983
 31598   013422  0A01               	xorlw	1	; case 3
 31599   013424  A4D8               	btfss	status,2,c
 31600   013426  0012               	return	
 31601   013428  D77B               	goto	l9983
 31602   01342A                     __end_of_processEnumeration:
 31603                           	callstack 0
 31604                           
 31605 ;; *************** function _setNewCanId *****************
 31606 ;; Defined at:
 31607 ;;		line 888 in file "../../VLCBlib_PIC/can18_can_2.c"
 31608 ;; Parameters:    Size  Location     Type
 31609 ;;  newCanId        1    wreg     unsigned char 
 31610 ;; Auto vars:     Size  Location     Type
 31611 ;;  newCanId        1   20[COMRAM] unsigned char 
 31612 ;; Return value:  Size  Location     Type
 31613 ;;                  1    wreg      enum E23634
 31614 ;; Registers used:
 31615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31616 ;; Tracked objects:
 31617 ;;		On entry : 0/0
 31618 ;;		On exit  : 0/0
 31619 ;;		Unchanged: 0/0
 31620 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31624 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31625 ;;Total ram usage:        1 bytes
 31626 ;; Hardware stack levels used: 1
 31627 ;; Hardware stack levels required when called: 6
 31628 ;; This function calls:
 31629 ;;		_prepareSelfEnumResponse
 31630 ;;		_writeNVM
 31631 ;; This function is called by:
 31632 ;;		_processEnumeration
 31633 ;; This function uses a non-reentrant model
 31634 ;;
 31635                           
 31636                           	psect	text37
 31637   01604C                     __ptext37:
 31638                           	callstack 0
 31639   01604C                     _setNewCanId:
 31640                           	callstack 117
 31641                           
 31642                           ;incstack = 0
 31643                           ;setNewCanId@newCanId stored from wreg
 31644   01604C  6E15               	movwf	setNewCanId@newCanId^(0+1280),c
 31645                           
 31646                           ;../../VLCBlib_PIC/can18_can_2.c: 889:     if ((newCanId >= 1) && (newCanId <= 99)) {
 31647   01604E  5015               	movf	setNewCanId@newCanId^(0+1280),w,c
 31648   016050  B4D8               	btfsc	status,2,c
 31649   016052  0012               	return	
 31650   016054  0E64               	movlw	100
 31651   016056  6015               	cpfslt	setNewCanId@newCanId^(0+1280),c
 31652   016058  0012               	return	
 31653                           
 31654                           ;../../VLCBlib_PIC/can18_can_2.c: 890:         canId = newCanId;
 31655   01605A  C515  F595         	movff	setNewCanId@newCanId,_canId
 31656                           
 31657                           ;../../VLCBlib_PIC/can18_can_2.c: 892:         prepareSelfEnumResponse();
 31658   01605E  ECA7  F0A8         	call	_prepareSelfEnumResponse	;wreg free
 31659                           
 31660                           ;../../VLCBlib_PIC/can18_can_2.c: 893:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId
      +                           );
 31661   016062  0EFE               	movlw	254
 31662   016064  6E0E               	movwf	writeNVM@index^(0+1280),c
 31663   016066  0E03               	movlw	3
 31664   016068  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 31665   01606A  0E00               	movlw	0
 31666   01606C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 31667   01606E  C515  F511         	movff	setNewCanId@newCanId,writeNVM@value
 31668   016072  0E00               	movlw	0
 31669   016074  EC71  F0AD         	call	_writeNVM
 31670                           
 31671                           ;../../VLCBlib_PIC/can18_can_2.c: 895:         canDiagnostics[0x0F].asUint++;
 31672   016078  0106               	movlb	6	; () banked
 31673   01607A  4BC0               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 31674   01607C  2BC1               	incf	(_canDiagnostics+31)& (0+255),f,b
 31675   01607E  0012               	return		;funcret
 31676   016080                     __end_of_setNewCanId:
 31677                           	callstack 0
 31678                           
 31679 ;; *************** function _prepareSelfEnumResponse *****************
 31680 ;; Defined at:
 31681 ;;		line 387 in file "../../VLCBlib_PIC/can18_can_2.c"
 31682 ;; Parameters:    Size  Location     Type
 31683 ;;		None
 31684 ;; Auto vars:     Size  Location     Type
 31685 ;;  txFifoObj       2    0[COMRAM] PTR unsigned char 
 31686 ;;		 -> RAM(16383), 
 31687 ;; Return value:  Size  Location     Type
 31688 ;;                  1    wreg      void 
 31689 ;; Registers used:
 31690 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31691 ;; Tracked objects:
 31692 ;;		On entry : 0/0
 31693 ;;		On exit  : 0/0
 31694 ;;		Unchanged: 0/0
 31695 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31697 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31699 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31700 ;;Total ram usage:        2 bytes
 31701 ;; Hardware stack levels used: 1
 31702 ;; Hardware stack levels required when called: 1
 31703 ;; This function calls:
 31704 ;;		Nothing
 31705 ;; This function is called by:
 31706 ;;		_canPowerUp
 31707 ;;		_setNewCanId
 31708 ;; This function uses a non-reentrant model
 31709 ;;
 31710                           
 31711                           	psect	text38
 31712   01514E                     __ptext38:
 31713                           	callstack 0
 31714   01514E                     _prepareSelfEnumResponse:
 31715                           	callstack 123
 31716                           
 31717                           ;../../VLCBlib_PIC/can18_can_2.c: 388:     uint8_t* txFifoObj = (uint8_t*) C1FIFOUA1;
 31718                           
 31719                           ;incstack = 0
 31720   01514E  C164 F501          	movff	356,prepareSelfEnumResponse@txFifoObj	;volatile
 31721   015152  C165 F502          	movff	357,prepareSelfEnumResponse@txFifoObj+1	;volatile
 31722                           
 31723                           ;../../VLCBlib_PIC/can18_can_2.c: 390:     while (C1FIFOSTA1Lbits.TFNRFNIF == 1) {
 31724   015156  D02D               	goto	l9021
 31725   015158                     l9017:
 31726                           
 31727                           ; BSR set to: 1
 31728                           ;../../VLCBlib_PIC/can18_can_2.c: 392:         txFifoObj[0] = (canId & 0x7F);
 31729   015158  0105               	movlb	5	; () banked
 31730   01515A  5195               	movf	_canId& (0+255),w,b
 31731   01515C  0B7F               	andlw	127
 31732   01515E  C501  F4D9         	movff	prepareSelfEnumResponse@txFifoObj,fsr2l
 31733   015162  C502  F4DA         	movff	prepareSelfEnumResponse@txFifoObj+1,fsr2h
 31734   015166  6EDF               	movwf	indf2,c
 31735                           
 31736                           ;../../VLCBlib_PIC/can18_can_2.c: 393:         txFifoObj[1] = 0;
 31737   015168  EE20 F001          	lfsr	2,1
 31738   01516C  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 31739   01516E  26D9               	addwf	fsr2l,f,c
 31740   015170  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 31741   015172  22DA               	addwfc	fsr2h,f,c
 31742   015174  6ADF               	clrf	indf2,c
 31743                           
 31744                           ;../../VLCBlib_PIC/can18_can_2.c: 394:         txFifoObj[4] = 0;
 31745   015176  EE20 F004          	lfsr	2,4
 31746   01517A  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 31747   01517C  26D9               	addwf	fsr2l,f,c
 31748   01517E  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 31749   015180  22DA               	addwfc	fsr2h,f,c
 31750   015182  6ADF               	clrf	indf2,c
 31751                           
 31752                           ;../../VLCBlib_PIC/can18_can_2.c: 395:         txFifoObj[5] = 0;
 31753   015184  EE20 F005          	lfsr	2,5
 31754   015188  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 31755   01518A  26D9               	addwf	fsr2l,f,c
 31756   01518C  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 31757   01518E  22DA               	addwfc	fsr2h,f,c
 31758   015190  6ADF               	clrf	indf2,c
 31759                           
 31760                           ;../../VLCBlib_PIC/can18_can_2.c: 396:         txFifoObj[6] = 0;
 31761   015192  EE20 F006          	lfsr	2,6
 31762   015196  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 31763   015198  26D9               	addwf	fsr2l,f,c
 31764   01519A  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 31765   01519C  22DA               	addwfc	fsr2h,f,c
 31766   01519E  6ADF               	clrf	indf2,c
 31767                           
 31768                           ;../../VLCBlib_PIC/can18_can_2.c: 397:         txFifoObj[7] = 0;
 31769   0151A0  EE20 F007          	lfsr	2,7
 31770   0151A4  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 31771   0151A6  26D9               	addwf	fsr2l,f,c
 31772   0151A8  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 31773   0151AA  22DA               	addwfc	fsr2h,f,c
 31774   0151AC  6ADF               	clrf	indf2,c
 31775                           
 31776                           ; BSR set to: 5
 31777                           ;../../VLCBlib_PIC/can18_can_2.c: 398:         C1FIFOCON1Hbits.UINC = 1;
 31778   0151AE  0101               	movlb	1	; () banked
 31779   0151B0  815D               	bsf	93,0,b	;volatile
 31780   0151B2                     l9021:
 31781                           
 31782                           ;../../VLCBlib_PIC/can18_can_2.c: 390:     while (C1FIFOSTA1Lbits.TFNRFNIF == 1) {
 31783   0151B2  0101               	movlb	1	; () banked
 31784   0151B4  A160               	btfss	96,0,b	;volatile
 31785   0151B6  0012               	return	
 31786   0151B8  D7CF               	goto	l9017
 31787   0151BA                     __end_of_prepareSelfEnumResponse:
 31788                           	callstack 0
 31789                           
 31790 ;; *************** function _APP_preProcessMessage *****************
 31791 ;; Defined at:
 31792 ;;		line 179 in file "../canpan3Events.c"
 31793 ;; Parameters:    Size  Location     Type
 31794 ;;  m               2   91[COMRAM] PTR struct Message
 31795 ;;		 -> poll@m(9), 
 31796 ;; Auto vars:     Size  Location     Type
 31797 ;;  enn             2   28[BANK5 ] unsigned short 
 31798 ;;  tableIndex      1   31[BANK5 ] unsigned char 
 31799 ;;  switchNo        1   30[BANK5 ] unsigned char 
 31800 ;;  ev              1   27[BANK5 ] unsigned char 
 31801 ;; Return value:  Size  Location     Type
 31802 ;;                  1    wreg      enum E23290
 31803 ;; Registers used:
 31804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31805 ;; Tracked objects:
 31806 ;;		On entry : 0/0
 31807 ;;		On exit  : 0/0
 31808 ;;		Unchanged: 0/0
 31809 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31811 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31812 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31813 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31814 ;;Total ram usage:       10 bytes
 31815 ;; Hardware stack levels used: 1
 31816 ;; Hardware stack levels required when called: 12
 31817 ;; This function calls:
 31818 ;;		NULL
 31819 ;;		_APP_isProducedEvent
 31820 ;;		_bootProcessMessage
 31821 ;;		_canProcessMessage
 31822 ;;		_consumerProcessMessage
 31823 ;;		_findEvent
 31824 ;;		_getEv
 31825 ;;		_mnsProcessMessage
 31826 ;;		_nvProcessMessage
 31827 ;;		_producerProcessMessage
 31828 ;;		_rebuildLookupTable
 31829 ;;		_teachProcessMessage
 31830 ;; This function is called by:
 31831 ;;		_poll
 31832 ;; This function uses a non-reentrant model
 31833 ;;
 31834                           
 31835                           	psect	text39
 31836   01276A                     __ptext39:
 31837                           	callstack 0
 31838   01276A                     _APP_preProcessMessage:
 31839                           	callstack 113
 31840                           
 31841                           ;../canpan3Events.c: 180:     uint8_t tableIndex;;../canpan3Events.c: 181:     uint16_t 
      +                          enn;;../canpan3Events.c: 182:     uint8_t switchNo;;../canpan3Events.c: 183:     uint8_t
      +                           ev;;../canpan3Events.c: 185:     if (mode_flags & 1) {
 31842                           
 31843                           ; BSR set to: 1
 31844                           ;incstack = 0
 31845   01276A  0105               	movlb	5	; () banked
 31846   01276C  B19F               	btfsc	_mode_flags& (0+255),0,b
 31847   01276E  D01F               	goto	l11585
 31848   012770  D038               	goto	l11587
 31849   012772                     l179:
 31850                           
 31851                           ; BSR set to: 5
 31852                           ;../canpan3Events.c: 193:                 errno = GRSP_OK;
 31853   012772  6B9E               	clrf	_errno& (0+255),b
 31854                           
 31855                           ; BSR set to: 5
 31856                           ;../canpan3Events.c: 194:                 eventTeachService.processMessage(m);
 31857   012774  C55C  F553         	movff	APP_preProcessMessage@m,producerProcessMessage@m
 31858   012778  C55D  F554         	movff	APP_preProcessMessage@m+1,producerProcessMessage@m+1
 31859   01277C  0E9D               	movlw	low (_eventTeachService+8)
 31860   01277E  6EF6               	movwf	tblptrl,c
 31861   012780  0EFF               	movlw	high (_eventTeachService+8)
 31862   012782  6EF7               	movwf	tblptrh,c
 31863   012784                     	if	0	;tblptru may be non-zero
 31864   012784                     	endif
 31865   012784                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31866   012784  0E00               	movlw	low (__pmediumconst shr (0+16))
 31867   012786  6EF8               	movwf	tblptru,c
 31868   012788                     	endif
 31869   012788  D801               	call	u9918
 31870   01278A  D00D               	goto	u9919
 31871   01278C                     u9918:
 31872   01278C  0005               	push	
 31873   01278E  6EFA               	movwf	pclath,c
 31874   012790  0009               	tblrd		*+
 31875   012792  50F5               	movf	tablat,w,c
 31876   012794  6EFD               	movwf	tosl,c
 31877   012796  0009               	tblrd		*+
 31878   012798  50F5               	movf	tablat,w,c
 31879   01279A  6EFE               	movwf	tosh,c
 31880   01279C  0009               	tblrd		*+
 31881   01279E  50F5               	movf	tablat,w,c
 31882   0127A0  6EFF               	movwf	tosu,c
 31883   0127A2  50FA               	movf	pclath,w,c
 31884   0127A4  0012               	return		;indir
 31885   0127A6                     u9919:
 31886                           
 31887                           ;../canpan3Events.c: 195:                 rebuildLookupTable();
 31888   0127A6  EC4E  F0AA         	call	_rebuildLookupTable	;wreg free
 31889                           
 31890                           ;../canpan3Events.c: 196:                 return PROCESSED;
 31891   0127AA  0E01               	movlw	1
 31892   0127AC  0012               	return	
 31893   0127AE                     l11585:
 31894                           
 31895                           ; BSR set to: 5
 31896   0127AE  EE20 F001          	lfsr	2,1
 31897   0127B2  505C               	movf	APP_preProcessMessage@m^(0+1280),w,c
 31898   0127B4  26D9               	addwf	fsr2l,f,c
 31899   0127B6  505D               	movf	(APP_preProcessMessage@m+1)^(0+1280),w,c
 31900   0127B8  22DA               	addwfc	fsr2h,f,c
 31901   0127BA  50DF               	movf	indf2,w,c
 31902   0127BC  6FE1               	movwf	??_APP_preProcessMessage& (0+255),b
 31903   0127BE  6BE2               	clrf	(??_APP_preProcessMessage+1)& (0+255),b
 31904                           
 31905                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31906                           ; Switch size 1, requested type "simple"
 31907                           ; Number of cases is 1, Range of values is 0 to 0
 31908                           ; switch strategies available:
 31909                           ; Name         Instructions Cycles
 31910                           ; simple_byte            4     3 (average)
 31911                           ;	Chosen strategy is simple_byte
 31912   0127C0  51E2               	movf	(??_APP_preProcessMessage+1)& (0+255),w,b
 31913   0127C2  0A00               	xorlw	0	; case 0
 31914   0127C4  A4D8               	btfss	status,2,c
 31915   0127C6  D00D               	goto	l11587
 31916                           
 31917                           ; BSR set to: 5
 31918                           ; Switch size 1, requested type "simple"
 31919                           ; Number of cases is 4, Range of values is 85 to 245
 31920                           ; switch strategies available:
 31921                           ; Name         Instructions Cycles
 31922                           ; simple_byte           13     7 (average)
 31923                           ;	Chosen strategy is simple_byte
 31924   0127C8  51E1               	movf	??_APP_preProcessMessage& (0+255),w,b
 31925   0127CA  0A55               	xorlw	85	; case 85
 31926   0127CC  B4D8               	btfsc	status,2,c
 31927   0127CE  D7D1               	goto	l179
 31928   0127D0  0AC0               	xorlw	192	; case 149
 31929   0127D2  B4D8               	btfsc	status,2,c
 31930   0127D4  D7CE               	goto	l179
 31931   0127D6  0A47               	xorlw	71	; case 210
 31932   0127D8  B4D8               	btfsc	status,2,c
 31933   0127DA  D7CB               	goto	l179
 31934   0127DC  0A27               	xorlw	39	; case 245
 31935   0127DE  B4D8               	btfsc	status,2,c
 31936   0127E0  D7C8               	goto	l179
 31937   0127E2                     l11587:
 31938                           
 31939                           ; BSR set to: 5
 31940                           ;../canpan3Events.c: 203:     if (m->len < 5) return NOT_PROCESSED;
 31941   0127E2  C55C  F4D9         	movff	APP_preProcessMessage@m,fsr2l
 31942   0127E6  C55D  F4DA         	movff	APP_preProcessMessage@m+1,fsr2h
 31943   0127EA  0E05               	movlw	5
 31944   0127EC  60DF               	cpfslt	indf2,c
 31945   0127EE  D002               	goto	l11593
 31946   0127F0                     u9920:
 31947   0127F0  0E00               	movlw	0
 31948   0127F2  0012               	return	
 31949   0127F4                     l11593:
 31950                           
 31951                           ; BSR set to: 5
 31952                           ;../canpan3Events.c: 204:     enn = ((uint16_t)m->bytes[0])*256+m->bytes[1];
 31953   0127F4  EE20 F003          	lfsr	2,3
 31954   0127F8  505C               	movf	APP_preProcessMessage@m^(0+1280),w,c
 31955   0127FA  26D9               	addwf	fsr2l,f,c
 31956   0127FC  505D               	movf	(APP_preProcessMessage@m+1)^(0+1280),w,c
 31957   0127FE  22DA               	addwfc	fsr2h,f,c
 31958   012800  50DF               	movf	indf2,w,c
 31959   012802  6FE1               	movwf	??_APP_preProcessMessage& (0+255),b
 31960   012804  EE20 F002          	lfsr	2,2
 31961   012808  505C               	movf	APP_preProcessMessage@m^(0+1280),w,c
 31962   01280A  26D9               	addwf	fsr2l,f,c
 31963   01280C  505D               	movf	(APP_preProcessMessage@m+1)^(0+1280),w,c
 31964   01280E  22DA               	addwfc	fsr2h,f,c
 31965   012810  50DF               	movf	indf2,w,c
 31966   012812  6FE2               	movwf	(??_APP_preProcessMessage+1)& (0+255),b
 31967   012814  51E1               	movf	??_APP_preProcessMessage& (0+255),w,b
 31968   012816  6FE5               	movwf	APP_preProcessMessage@enn& (0+255),b
 31969   012818  C5E2  F5E6         	movff	??_APP_preProcessMessage+1,APP_preProcessMessage@enn+1
 31970                           
 31971                           ;../canpan3Events.c: 205:     switch (m->opc) {
 31972   01281C  D005               	goto	l11605
 31973   01281E                     l187:
 31974                           
 31975                           ; BSR set to: 5
 31976                           ;../canpan3Events.c: 212:   enn = 0;
 31977                           
 31978                           ; BSR set to: 5
 31979   01281E  0E00               	movlw	0
 31980   012820  6FE6               	movwf	(APP_preProcessMessage@enn+1)& (0+255),b
 31981   012822  0E00               	movlw	0
 31982   012824  6FE5               	movwf	APP_preProcessMessage@enn& (0+255),b
 31983                           
 31984                           ; BSR set to: 5
 31985                           ;../canpan3Events.c: 220:             break;
 31986                           
 31987                           ;../canpan3Events.c: 218:         case OPC_ACON3:
 31988   012826  D03F               	goto	l11607
 31989   012828                     l11605:
 31990                           
 31991                           ; BSR set to: 5
 31992   012828  EE20 F001          	lfsr	2,1
 31993   01282C  505C               	movf	APP_preProcessMessage@m^(0+1280),w,c
 31994   01282E  26D9               	addwf	fsr2l,f,c
 31995   012830  505D               	movf	(APP_preProcessMessage@m+1)^(0+1280),w,c
 31996   012832  22DA               	addwfc	fsr2h,f,c
 31997   012834  50DF               	movf	indf2,w,c
 31998   012836  6FE1               	movwf	??_APP_preProcessMessage& (0+255),b
 31999   012838  6BE2               	clrf	(??_APP_preProcessMessage+1)& (0+255),b
 32000                           
 32001                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32002                           ; Switch size 1, requested type "simple"
 32003                           ; Number of cases is 1, Range of values is 0 to 0
 32004                           ; switch strategies available:
 32005                           ; Name         Instructions Cycles
 32006                           ; simple_byte            4     3 (average)
 32007                           ;	Chosen strategy is simple_byte
 32008   01283A  51E2               	movf	(??_APP_preProcessMessage+1)& (0+255),w,b
 32009   01283C  0A00               	xorlw	0	; case 0
 32010   01283E  A4D8               	btfss	status,2,c
 32011   012840  D7D7               	goto	u9920
 32012                           
 32013                           ; BSR set to: 5
 32014                           ; Switch size 1, requested type "simple"
 32015                           ; Number of cases is 16, Range of values is 144 to 249
 32016                           ; switch strategies available:
 32017                           ; Name         Instructions Cycles
 32018                           ; simple_byte           49    25 (average)
 32019                           ;	Chosen strategy is simple_byte
 32020   012842  51E1               	movf	??_APP_preProcessMessage& (0+255),w,b
 32021   012844  0A90               	xorlw	144	; case 144
 32022   012846  B4D8               	btfsc	status,2,c
 32023   012848  D02E               	goto	l11607
 32024   01284A  0A01               	xorlw	1	; case 145
 32025   01284C  B4D8               	btfsc	status,2,c
 32026   01284E  D02B               	goto	l11607
 32027   012850  0A09               	xorlw	9	; case 152
 32028   012852  B4D8               	btfsc	status,2,c
 32029   012854  D7E4               	goto	l187
 32030   012856  0A01               	xorlw	1	; case 153
 32031   012858  B4D8               	btfsc	status,2,c
 32032   01285A  D7E1               	goto	l187
 32033   01285C  0A29               	xorlw	41	; case 176
 32034   01285E  B4D8               	btfsc	status,2,c
 32035   012860  D022               	goto	l11607
 32036   012862  0A01               	xorlw	1	; case 177
 32037   012864  B4D8               	btfsc	status,2,c
 32038   012866  D01F               	goto	l11607
 32039   012868  0A09               	xorlw	9	; case 184
 32040   01286A  B4D8               	btfsc	status,2,c
 32041   01286C  D7D8               	goto	l187
 32042   01286E  0A01               	xorlw	1	; case 185
 32043   012870  B4D8               	btfsc	status,2,c
 32044   012872  D7D5               	goto	l187
 32045   012874  0A69               	xorlw	105	; case 208
 32046   012876  B4D8               	btfsc	status,2,c
 32047   012878  D016               	goto	l11607
 32048   01287A  0A01               	xorlw	1	; case 209
 32049   01287C  B4D8               	btfsc	status,2,c
 32050   01287E  D013               	goto	l11607
 32051   012880  0A09               	xorlw	9	; case 216
 32052   012882  B4D8               	btfsc	status,2,c
 32053   012884  D7CC               	goto	l187
 32054   012886  0A01               	xorlw	1	; case 217
 32055   012888  B4D8               	btfsc	status,2,c
 32056   01288A  D7C9               	goto	l187
 32057   01288C  0A29               	xorlw	41	; case 240
 32058   01288E  B4D8               	btfsc	status,2,c
 32059   012890  D00A               	goto	l11607
 32060   012892  0A01               	xorlw	1	; case 241
 32061   012894  B4D8               	btfsc	status,2,c
 32062   012896  D007               	goto	l11607
 32063   012898  0A09               	xorlw	9	; case 248
 32064   01289A  B4D8               	btfsc	status,2,c
 32065   01289C  D7C0               	goto	l187
 32066   01289E  0A01               	xorlw	1	; case 249
 32067   0128A0  B4D8               	btfsc	status,2,c
 32068   0128A2  D7BD               	goto	l187
 32069   0128A4  D7A5               	goto	u9920
 32070   0128A6                     l11607:
 32071                           
 32072                           ; BSR set to: 5
 32073                           ;../canpan3Events.c: 241:     tableIndex = findEvent(enn, ((uint16_t)m->bytes[2])*256+m-
      +                          >bytes[3]);
 32074   0128A6  C5E5  F51E         	movff	APP_preProcessMessage@enn,findEvent@nodeNumber
 32075   0128AA  C5E6  F51F         	movff	APP_preProcessMessage@enn+1,findEvent@nodeNumber+1
 32076   0128AE  EE20 F005          	lfsr	2,5
 32077   0128B2  505C               	movf	APP_preProcessMessage@m^(0+1280),w,c
 32078   0128B4  26D9               	addwf	fsr2l,f,c
 32079   0128B6  505D               	movf	(APP_preProcessMessage@m+1)^(0+1280),w,c
 32080   0128B8  22DA               	addwfc	fsr2h,f,c
 32081   0128BA  50DF               	movf	indf2,w,c
 32082   0128BC  6FE1               	movwf	??_APP_preProcessMessage& (0+255),b
 32083   0128BE  EE20 F004          	lfsr	2,4
 32084   0128C2  505C               	movf	APP_preProcessMessage@m^(0+1280),w,c
 32085   0128C4  26D9               	addwf	fsr2l,f,c
 32086   0128C6  505D               	movf	(APP_preProcessMessage@m+1)^(0+1280),w,c
 32087   0128C8  22DA               	addwfc	fsr2h,f,c
 32088   0128CA  50DF               	movf	indf2,w,c
 32089   0128CC  6FE2               	movwf	(??_APP_preProcessMessage+1)& (0+255),b
 32090   0128CE  51E1               	movf	??_APP_preProcessMessage& (0+255),w,b
 32091   0128D0  6E20               	movwf	findEvent@eventNumber^(0+1280),c
 32092   0128D2  C5E2  F521         	movff	??_APP_preProcessMessage+1,findEvent@eventNumber+1
 32093   0128D6  EC4F  F0A4         	call	_findEvent	;wreg free
 32094   0128DA  0105               	movlb	5	; () banked
 32095   0128DC  6FE8               	movwf	APP_preProcessMessage@tableIndex& (0+255),b
 32096                           
 32097                           ; BSR set to: 5
 32098                           ;../canpan3Events.c: 242:     if (tableIndex == 0xff) return NOT_PROCESSED;
 32099   0128DE  29E8               	incf	APP_preProcessMessage@tableIndex& (0+255),w,b
 32100   0128E0  B4D8               	btfsc	status,2,c
 32101   0128E2  D786               	goto	u9920
 32102                           
 32103                           ; BSR set to: 5
 32104                           ;../canpan3Events.c: 243:     if (APP_isProducedEvent(tableIndex)) {
 32105   0128E4  51E8               	movf	APP_preProcessMessage@tableIndex& (0+255),w,b
 32106   0128E6  EC2C  F0AF         	call	_APP_isProducedEvent
 32107   0128EA  0900               	iorlw	0
 32108   0128EC  B4D8               	btfsc	status,2,c
 32109   0128EE  D780               	goto	u9920
 32110                           
 32111                           ;../canpan3Events.c: 245:         ev = (uint8_t)getEv(tableIndex, 2);
 32112   0128F0  0E02               	movlw	2
 32113   0128F2  6E0D               	movwf	getEv@evNum^(0+1280),c
 32114   0128F4  0105               	movlb	5	; () banked
 32115   0128F6  51E8               	movf	APP_preProcessMessage@tableIndex& (0+255),w,b
 32116   0128F8  EC13  F0A9         	call	_getEv
 32117   0128FC  500D               	movf	?_getEv^(0+1280),w,c
 32118   0128FE  0105               	movlb	5	; () banked
 32119   012900  6FE4               	movwf	APP_preProcessMessage@ev& (0+255),b
 32120                           
 32121                           ; BSR set to: 5
 32122                           ;../canpan3Events.c: 246:         if (ev & 8) {
 32123   012902  A7E4               	btfss	APP_preProcessMessage@ev& (0+255),3,b
 32124   012904  D775               	goto	u9920
 32125                           
 32126                           ; BSR set to: 5
 32127                           ;../canpan3Events.c: 247:             switchNo = (uint8_t)getEv(tableIndex, 1) - 1;
 32128   012906  0E01               	movlw	1
 32129   012908  6E0D               	movwf	getEv@evNum^(0+1280),c
 32130   01290A  51E8               	movf	APP_preProcessMessage@tableIndex& (0+255),w,b
 32131   01290C  EC13  F0A9         	call	_getEv
 32132   012910  040D               	decf	?_getEv^(0+1280),w,c
 32133   012912  0105               	movlb	5	; () banked
 32134   012914  6FE7               	movwf	APP_preProcessMessage@switchNo& (0+255),b
 32135                           
 32136                           ; BSR set to: 5
 32137                           ;../canpan3Events.c: 248:             if (switchNo < (8*4)) {
 32138   012916  0E20               	movlw	32
 32139   012918  61E7               	cpfslt	APP_preProcessMessage@switchNo& (0+255),b
 32140   01291A  D76A               	goto	u9920
 32141                           
 32142                           ; BSR set to: 5
 32143                           ;../canpan3Events.c: 249:                 outputState[switchNo] = !(m->opc & 1);
 32144   01291C  0E41               	movlw	low _outputState
 32145   01291E  25E7               	addwf	APP_preProcessMessage@switchNo& (0+255),w,b
 32146   012920  6ED9               	movwf	fsr2l,c
 32147   012922  6ADA               	clrf	fsr2h,c
 32148   012924  0E06               	movlw	high _outputState
 32149   012926  22DA               	addwfc	fsr2h,f,c
 32150   012928  EE10 F001          	lfsr	1,1
 32151   01292C  505C               	movf	APP_preProcessMessage@m^(0+1280),w,c
 32152   01292E  26E1               	addwf	fsr1l,f,c
 32153   012930  505D               	movf	(APP_preProcessMessage@m+1)^(0+1280),w,c
 32154   012932  22E2               	addwfc	fsr1h,f,c
 32155   012934  B0E7               	btfsc	indf1,0,c
 32156   012936  D002               	goto	u9970
 32157   012938  0E01               	movlw	1
 32158   01293A  D001               	goto	u9980
 32159   01293C                     u9970:
 32160   01293C  0E00               	movlw	0
 32161   01293E                     u9980:
 32162   01293E  6EDF               	movwf	indf2,c
 32163   012940  D757               	goto	u9920
 32164   012942                     __end_of_APP_preProcessMessage:
 32165                           	callstack 0
 32166                           
 32167 ;; *************** function _producerProcessMessage *****************
 32168 ;; Defined at:
 32169 ;;		line 114 in file "../../VLCBlib_PIC/event_producer_simple.c"
 32170 ;; Parameters:    Size  Location     Type
 32171 ;;  m               2   82[COMRAM] PTR struct Message
 32172 ;;		 -> poll@m(9), 
 32173 ;; Auto vars:     Size  Location     Type
 32174 ;;  index           1   90[COMRAM] unsigned char 
 32175 ;; Return value:  Size  Location     Type
 32176 ;;                  1    wreg      enum E23290
 32177 ;; Registers used:
 32178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32179 ;; Tracked objects:
 32180 ;;		On entry : 0/0
 32181 ;;		On exit  : 0/0
 32182 ;;		Unchanged: 0/0
 32183 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32185 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32186 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32187 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32188 ;;Total ram usage:        9 bytes
 32189 ;; Hardware stack levels used: 1
 32190 ;; Hardware stack levels required when called: 6
 32191 ;; This function calls:
 32192 ;;		_APP_GetEventIndexState
 32193 ;;		_findEvent
 32194 ;;		_sendMessage3
 32195 ;;		_sendMessage4
 32196 ;; This function is called by:
 32197 ;;		_APP_preProcessMessage
 32198 ;;		_poll
 32199 ;; This function uses a non-reentrant model
 32200 ;;
 32201                           
 32202                           	psect	text40
 32203   012556                     __ptext40:
 32204                           	callstack 0
 32205   012556                     _producerProcessMessage:
 32206                           	callstack 119
 32207                           
 32208                           ;../../VLCBlib_PIC/event_producer_simple.c: 115:     uint8_t index;;../../VLCBlib_PIC/ev
      +                          ent_producer_simple.c: 117:     switch (m->opc) {
 32209                           
 32210                           ;incstack = 0
 32211   012556  D0F3               	goto	l11231
 32212   012558                     l11191:
 32213                           
 32214                           ;../../VLCBlib_PIC/event_producer_simple.c: 120:             if (m->len < 5) {
 32215   012558  C553  F4D9         	movff	producerProcessMessage@m,fsr2l
 32216   01255C  C554  F4DA         	movff	producerProcessMessage@m+1,fsr2h
 32217   012560  0E05               	movlw	5
 32218   012562  60DF               	cpfslt	indf2,c
 32219   012564  D00B               	goto	l11199
 32220                           
 32221                           ;../../VLCBlib_PIC/event_producer_simple.c: 121:                 sendMessage3(OPC_CMDERR
      +                          , nn.bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 32222   012566  C55F  F525         	movff	_nn+1,sendMessage3@data1
 32223   01256A  C55E  F526         	movff	_nn,sendMessage3@data2
 32224   01256E  0E01               	movlw	1
 32225   012570  6E27               	movwf	sendMessage3@data3^(0+1280),c
 32226   012572  0E6F               	movlw	111
 32227   012574  ECF7  F0B0         	call	_sendMessage3
 32228   012578                     l11195:
 32229                           
 32230                           ;../../VLCBlib_PIC/event_producer_simple.c: 122:                 return PROCESSED;
 32231   012578  0E01               	movlw	1
 32232   01257A  0012               	return	
 32233   01257C                     l11199:
 32234                           
 32235                           ;../../VLCBlib_PIC/event_producer_simple.c: 124:             if (m->opc == OPC_AREQ) {
 32236   01257C  EE20 F001          	lfsr	2,1
 32237   012580  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32238   012582  26D9               	addwf	fsr2l,f,c
 32239   012584  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32240   012586  22DA               	addwfc	fsr2h,f,c
 32241   012588  0E92               	movlw	146
 32242   01258A  18DE               	xorwf	postinc2,w,c
 32243   01258C  A4D8               	btfss	status,2,c
 32244   01258E  D02B               	goto	l11203
 32245                           
 32246                           ;../../VLCBlib_PIC/event_producer_simple.c: 125:                 index = findEvent((uint
      +                          16_t)((m->bytes[0]<<8)|(m->bytes[1])), (uint16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 32247   012590  EE20 F003          	lfsr	2,3
 32248   012594  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32249   012596  26D9               	addwf	fsr2l,f,c
 32250   012598  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32251   01259A  22DA               	addwfc	fsr2h,f,c
 32252   01259C  50DF               	movf	indf2,w,c
 32253   01259E  6E55               	movwf	??_producerProcessMessage^(0+1280),c
 32254   0125A0  EE20 F002          	lfsr	2,2
 32255   0125A4  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32256   0125A6  26D9               	addwf	fsr2l,f,c
 32257   0125A8  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32258   0125AA  22DA               	addwfc	fsr2h,f,c
 32259   0125AC  50DF               	movf	indf2,w,c
 32260   0125AE  6E56               	movwf	(??_producerProcessMessage+1)^(0+1280),c
 32261   0125B0  5055               	movf	??_producerProcessMessage^(0+1280),w,c
 32262   0125B2  6E1E               	movwf	findEvent@nodeNumber^(0+1280),c
 32263   0125B4  C556  F51F         	movff	??_producerProcessMessage+1,findEvent@nodeNumber+1
 32264   0125B8  EE20 F005          	lfsr	2,5
 32265   0125BC  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32266   0125BE  26D9               	addwf	fsr2l,f,c
 32267   0125C0  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32268   0125C2  22DA               	addwfc	fsr2h,f,c
 32269   0125C4  50DF               	movf	indf2,w,c
 32270   0125C6  6E58               	movwf	(??_producerProcessMessage+3)^(0+1280),c
 32271   0125C8  EE20 F004          	lfsr	2,4
 32272   0125CC  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32273   0125CE  26D9               	addwf	fsr2l,f,c
 32274   0125D0  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32275   0125D2  22DA               	addwfc	fsr2h,f,c
 32276   0125D4  50DF               	movf	indf2,w,c
 32277   0125D6  6E59               	movwf	(??_producerProcessMessage+4)^(0+1280),c
 32278   0125D8  5058               	movf	(??_producerProcessMessage+3)^(0+1280),w,c
 32279   0125DA  6E20               	movwf	findEvent@eventNumber^(0+1280),c
 32280   0125DC  C559  F521         	movff	??_producerProcessMessage+4,findEvent@eventNumber+1
 32281   0125E0  EC4F  F0A4         	call	_findEvent	;wreg free
 32282   0125E4  D01A               	goto	L3
 32283   0125E6                     l11203:
 32284                           
 32285                           ;../../VLCBlib_PIC/event_producer_simple.c: 127:                 index = findEvent(0, (u
      +                          int16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 32286   0125E6  0E00               	movlw	0
 32287   0125E8  6E1F               	movwf	(findEvent@nodeNumber+1)^(0+1280),c
 32288   0125EA  0E00               	movlw	0
 32289   0125EC  6E1E               	movwf	findEvent@nodeNumber^(0+1280),c
 32290   0125EE  EE20 F005          	lfsr	2,5
 32291   0125F2  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32292   0125F4  26D9               	addwf	fsr2l,f,c
 32293   0125F6  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32294   0125F8  22DA               	addwfc	fsr2h,f,c
 32295   0125FA  50DF               	movf	indf2,w,c
 32296   0125FC  6E55               	movwf	??_producerProcessMessage^(0+1280),c
 32297   0125FE  EE20 F004          	lfsr	2,4
 32298   012602  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32299   012604  26D9               	addwf	fsr2l,f,c
 32300   012606  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32301   012608  22DA               	addwfc	fsr2h,f,c
 32302   01260A  50DF               	movf	indf2,w,c
 32303   01260C  6E56               	movwf	(??_producerProcessMessage+1)^(0+1280),c
 32304   01260E  5055               	movf	??_producerProcessMessage^(0+1280),w,c
 32305   012610  6E20               	movwf	findEvent@eventNumber^(0+1280),c
 32306   012612  C556  F521         	movff	??_producerProcessMessage+1,findEvent@eventNumber+1
 32307   012616  EC4F  F0A4         	call	_findEvent	;wreg free
 32308   01261A                     L3:
 32309   01261A  6E5B               	movwf	producerProcessMessage@index^(0+1280),c
 32310                           
 32311                           ;../../VLCBlib_PIC/event_producer_simple.c: 129:             if (index == 0xff) return P
      +                          ROCESSED;
 32312   01261C  285B               	incf	producerProcessMessage@index^(0+1280),w,c
 32313   01261E  B4D8               	btfsc	status,2,c
 32314   012620  D7AB               	goto	l11195
 32315                           
 32316                           ;../../VLCBlib_PIC/event_producer_simple.c: 131:             if (m->opc == OPC_AREQ) {
 32317   012622  EE20 F001          	lfsr	2,1
 32318   012626  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32319   012628  26D9               	addwf	fsr2l,f,c
 32320   01262A  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32321   01262C  22DA               	addwfc	fsr2h,f,c
 32322   01262E  0E92               	movlw	146
 32323   012630  18DE               	xorwf	postinc2,w,c
 32324   012632  A4D8               	btfss	status,2,c
 32325   012634  D04E               	goto	l11219
 32326                           
 32327                           ;../../VLCBlib_PIC/event_producer_simple.c: 132:                 if (APP_GetEventIndexSt
      +                          ate(index) == EVENT_ON) {
 32328   012636  505B               	movf	producerProcessMessage@index^(0+1280),w,c
 32329   012638  EC2A  F0AE         	call	_APP_GetEventIndexState
 32330   01263C  06E8               	decf	wreg,f,c
 32331   01263E  A4D8               	btfss	status,2,c
 32332   012640  D024               	goto	l11217
 32333                           
 32334                           ;../../VLCBlib_PIC/event_producer_simple.c: 133:                     sendMessage4(OPC_AR
      +                          ON, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 32335   012642  EE20 F002          	lfsr	2,2
 32336   012646  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32337   012648  26D9               	addwf	fsr2l,f,c
 32338   01264A  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32339   01264C  22DA               	addwfc	fsr2h,f,c
 32340   01264E  50DF               	movf	indf2,w,c
 32341   012650  6E25               	movwf	sendMessage4@data1^(0+1280),c
 32342   012652  EE20 F003          	lfsr	2,3
 32343   012656  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32344   012658  26D9               	addwf	fsr2l,f,c
 32345   01265A  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32346   01265C  22DA               	addwfc	fsr2h,f,c
 32347   01265E  50DF               	movf	indf2,w,c
 32348   012660  6E26               	movwf	sendMessage4@data2^(0+1280),c
 32349   012662  EE20 F004          	lfsr	2,4
 32350   012666  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32351   012668  26D9               	addwf	fsr2l,f,c
 32352   01266A  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32353   01266C  22DA               	addwfc	fsr2h,f,c
 32354   01266E  50DF               	movf	indf2,w,c
 32355   012670  6E27               	movwf	sendMessage4@data3^(0+1280),c
 32356   012672  EE20 F005          	lfsr	2,5
 32357   012676  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32358   012678  26D9               	addwf	fsr2l,f,c
 32359   01267A  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32360   01267C  22DA               	addwfc	fsr2h,f,c
 32361   01267E  50DF               	movf	indf2,w,c
 32362   012680  6E28               	movwf	sendMessage4@data4^(0+1280),c
 32363   012682  0E93               	movlw	147
 32364   012684  EC4B  F0B1         	call	_sendMessage4
 32365                           
 32366                           ;../../VLCBlib_PIC/event_producer_simple.c: 134:                 } else {
 32367   012688  D777               	goto	l11195
 32368   01268A                     l11217:
 32369                           
 32370                           ;../../VLCBlib_PIC/event_producer_simple.c: 135:                     sendMessage4(OPC_AR
      +                          OF, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 32371   01268A  EE20 F002          	lfsr	2,2
 32372   01268E  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32373   012690  26D9               	addwf	fsr2l,f,c
 32374   012692  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32375   012694  22DA               	addwfc	fsr2h,f,c
 32376   012696  50DF               	movf	indf2,w,c
 32377   012698  6E25               	movwf	sendMessage4@data1^(0+1280),c
 32378   01269A  EE20 F003          	lfsr	2,3
 32379   01269E  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32380   0126A0  26D9               	addwf	fsr2l,f,c
 32381   0126A2  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32382   0126A4  22DA               	addwfc	fsr2h,f,c
 32383   0126A6  50DF               	movf	indf2,w,c
 32384   0126A8  6E26               	movwf	sendMessage4@data2^(0+1280),c
 32385   0126AA  EE20 F004          	lfsr	2,4
 32386   0126AE  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32387   0126B0  26D9               	addwf	fsr2l,f,c
 32388   0126B2  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32389   0126B4  22DA               	addwfc	fsr2h,f,c
 32390   0126B6  50DF               	movf	indf2,w,c
 32391   0126B8  6E27               	movwf	sendMessage4@data3^(0+1280),c
 32392   0126BA  EE20 F005          	lfsr	2,5
 32393   0126BE  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32394   0126C0  26D9               	addwf	fsr2l,f,c
 32395   0126C2  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32396   0126C4  22DA               	addwfc	fsr2h,f,c
 32397   0126C6  50DF               	movf	indf2,w,c
 32398   0126C8  6E28               	movwf	sendMessage4@data4^(0+1280),c
 32399   0126CA  0E94               	movlw	148
 32400   0126CC  EC4B  F0B1         	call	_sendMessage4
 32401   0126D0  D753               	goto	l11195
 32402   0126D2                     l11219:
 32403                           
 32404                           ;../../VLCBlib_PIC/event_producer_simple.c: 138:                 if (APP_GetEventIndexSt
      +                          ate(index) == EVENT_ON) {
 32405   0126D2  505B               	movf	producerProcessMessage@index^(0+1280),w,c
 32406   0126D4  EC2A  F0AE         	call	_APP_GetEventIndexState
 32407   0126D8  06E8               	decf	wreg,f,c
 32408   0126DA  A4D8               	btfss	status,2,c
 32409   0126DC  D018               	goto	l11223
 32410                           
 32411                           ;../../VLCBlib_PIC/event_producer_simple.c: 139:                     sendMessage4(OPC_AR
      +                          SON, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 32412   0126DE  C55F  F525         	movff	_nn+1,sendMessage4@data1
 32413   0126E2  C55E  F526         	movff	_nn,sendMessage4@data2
 32414   0126E6  EE20 F004          	lfsr	2,4
 32415   0126EA  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32416   0126EC  26D9               	addwf	fsr2l,f,c
 32417   0126EE  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32418   0126F0  22DA               	addwfc	fsr2h,f,c
 32419   0126F2  50DF               	movf	indf2,w,c
 32420   0126F4  6E27               	movwf	sendMessage4@data3^(0+1280),c
 32421   0126F6  EE20 F005          	lfsr	2,5
 32422   0126FA  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32423   0126FC  26D9               	addwf	fsr2l,f,c
 32424   0126FE  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32425   012700  22DA               	addwfc	fsr2h,f,c
 32426   012702  50DF               	movf	indf2,w,c
 32427   012704  6E28               	movwf	sendMessage4@data4^(0+1280),c
 32428   012706  0E9D               	movlw	157
 32429   012708  EC4B  F0B1         	call	_sendMessage4
 32430                           
 32431                           ;../../VLCBlib_PIC/event_producer_simple.c: 140:                 } else {
 32432   01270C  D735               	goto	l11195
 32433   01270E                     l11223:
 32434                           
 32435                           ;../../VLCBlib_PIC/event_producer_simple.c: 141:                     sendMessage4(OPC_AR
      +                          SOF, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 32436   01270E  C55F  F525         	movff	_nn+1,sendMessage4@data1
 32437   012712  C55E  F526         	movff	_nn,sendMessage4@data2
 32438   012716  EE20 F004          	lfsr	2,4
 32439   01271A  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32440   01271C  26D9               	addwf	fsr2l,f,c
 32441   01271E  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32442   012720  22DA               	addwfc	fsr2h,f,c
 32443   012722  50DF               	movf	indf2,w,c
 32444   012724  6E27               	movwf	sendMessage4@data3^(0+1280),c
 32445   012726  EE20 F005          	lfsr	2,5
 32446   01272A  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32447   01272C  26D9               	addwf	fsr2l,f,c
 32448   01272E  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32449   012730  22DA               	addwfc	fsr2h,f,c
 32450   012732  50DF               	movf	indf2,w,c
 32451   012734  6E28               	movwf	sendMessage4@data4^(0+1280),c
 32452   012736  0E9E               	movlw	158
 32453   012738  EC4B  F0B1         	call	_sendMessage4
 32454   01273C  D71D               	goto	l11195
 32455   01273E                     l11231:
 32456   01273E  EE20 F001          	lfsr	2,1
 32457   012742  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 32458   012744  26D9               	addwf	fsr2l,f,c
 32459   012746  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 32460   012748  22DA               	addwfc	fsr2h,f,c
 32461   01274A  50DF               	movf	indf2,w,c
 32462   01274C  6E55               	movwf	??_producerProcessMessage^(0+1280),c
 32463   01274E  6A56               	clrf	(??_producerProcessMessage+1)^(0+1280),c
 32464                           
 32465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32466                           ; Switch size 1, requested type "simple"
 32467                           ; Number of cases is 1, Range of values is 0 to 0
 32468                           ; switch strategies available:
 32469                           ; Name         Instructions Cycles
 32470                           ; simple_byte            4     3 (average)
 32471                           ;	Chosen strategy is simple_byte
 32472   012750  5056               	movf	(??_producerProcessMessage+1)^(0+1280),w,c
 32473   012752  0A00               	xorlw	0	; case 0
 32474   012754  A4D8               	btfss	status,2,c
 32475   012756  D007               	goto	l11233
 32476                           
 32477                           ; Switch size 1, requested type "simple"
 32478                           ; Number of cases is 2, Range of values is 146 to 154
 32479                           ; switch strategies available:
 32480                           ; Name         Instructions Cycles
 32481                           ; simple_byte            7     4 (average)
 32482                           ;	Chosen strategy is simple_byte
 32483   012758  5055               	movf	??_producerProcessMessage^(0+1280),w,c
 32484   01275A  0A92               	xorlw	146	; case 146
 32485   01275C  B4D8               	btfsc	status,2,c
 32486   01275E  D6FC               	goto	l11191
 32487   012760  0A08               	xorlw	8	; case 154
 32488   012762  B4D8               	btfsc	status,2,c
 32489   012764  D6F9               	goto	l11191
 32490   012766                     l11233:
 32491                           
 32492                           ;../../VLCBlib_PIC/event_producer_simple.c: 148:     return NOT_PROCESSED;
 32493   012766  0E00               	movlw	0
 32494   012768  0012               	return		;funcret
 32495   01276A                     __end_of_producerProcessMessage:
 32496                           	callstack 0
 32497                           
 32498 ;; *************** function _nvProcessMessage *****************
 32499 ;; Defined at:
 32500 ;;		line 240 in file "../../VLCBlib_PIC/nv.c"
 32501 ;; Parameters:    Size  Location     Type
 32502 ;;  m               2   82[COMRAM] PTR struct Message
 32503 ;;		 -> poll@m(9), 
 32504 ;; Auto vars:     Size  Location     Type
 32505 ;;  valueOrError    2   86[COMRAM] short 
 32506 ;; Return value:  Size  Location     Type
 32507 ;;                  1    wreg      enum E23340
 32508 ;; Registers used:
 32509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32510 ;; Tracked objects:
 32511 ;;		On entry : 0/0
 32512 ;;		On exit  : 0/0
 32513 ;;		Unchanged: 0/0
 32514 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32516 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32517 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32518 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32519 ;;Total ram usage:        6 bytes
 32520 ;; Hardware stack levels used: 1
 32521 ;; Hardware stack levels required when called: 7
 32522 ;; This function calls:
 32523 ;;		_findServiceIndex
 32524 ;;		_getNV
 32525 ;;		_sendMessage2
 32526 ;;		_sendMessage3
 32527 ;;		_sendMessage4
 32528 ;;		_sendMessage5
 32529 ;;		_setNV
 32530 ;;		_startTimedResponse
 32531 ;; This function is called by:
 32532 ;;		_APP_preProcessMessage
 32533 ;;		_poll
 32534 ;; This function uses a non-reentrant model
 32535 ;;
 32536                           
 32537                           	psect	text41
 32538   011B6C                     __ptext41:
 32539                           	callstack 0
 32540   011B6C                     _nvProcessMessage:
 32541                           	callstack 118
 32542                           
 32543                           ;../../VLCBlib_PIC/nv.c: 241:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 243:    
      +                           if (m->len < 3) {
 32544                           
 32545                           ;incstack = 0
 32546   011B6C  C553  F4D9         	movff	nvProcessMessage@m,fsr2l
 32547   011B70  C554  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 32548   011B74  0E03               	movlw	3
 32549   011B76  60DF               	cpfslt	indf2,c
 32550   011B78  D002               	goto	l10923
 32551   011B7A                     u8980:
 32552                           
 32553                           ;../../VLCBlib_PIC/nv.c: 244:         return NOT_PROCESSED;
 32554   011B7A  0E00               	movlw	0
 32555   011B7C  0012               	return	
 32556   011B7E                     l10923:
 32557                           
 32558                           ;../../VLCBlib_PIC/nv.c: 247:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 32559   011B7E  EE20 F002          	lfsr	2,2
 32560   011B82  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 32561   011B84  26D9               	addwf	fsr2l,f,c
 32562   011B86  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 32563   011B88  22DA               	addwfc	fsr2h,f,c
 32564   011B8A  50DE               	movf	postinc2,w,c
 32565   011B8C  185F               	xorwf	(_nn+1)^(0+1280),w,c
 32566   011B8E  A4D8               	btfss	status,2,c
 32567   011B90  D7F4               	goto	u8980
 32568                           
 32569                           ;../../VLCBlib_PIC/nv.c: 248:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 32570   011B92  EE20 F003          	lfsr	2,3
 32571   011B96  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 32572   011B98  26D9               	addwf	fsr2l,f,c
 32573   011B9A  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 32574   011B9C  22DA               	addwfc	fsr2h,f,c
 32575   011B9E  505E               	movf	_nn^(0+1280),w,c
 32576   011BA0  18DE               	xorwf	postinc2,w,c
 32577   011BA2  A4D8               	btfss	status,2,c
 32578   011BA4  D7EA               	goto	u8980
 32579   011BA6  D14D               	goto	l11047
 32580   011BA8                     l10935:
 32581                           
 32582                           ;../../VLCBlib_PIC/nv.c: 252:             if (m->len < 4) {
 32583   011BA8  C553  F4D9         	movff	nvProcessMessage@m,fsr2l
 32584   011BAC  C554  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 32585   011BB0  0E04               	movlw	4
 32586   011BB2  60DF               	cpfslt	indf2,c
 32587   011BB4  D01B               	goto	l10945
 32588                           
 32589                           ;../../VLCBlib_PIC/nv.c: 253:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 32590   011BB6  C55F  F525         	movff	_nn+1,sendMessage3@data1
 32591   011BBA  C55E  F526         	movff	_nn,sendMessage3@data2
 32592   011BBE  0E01               	movlw	1
 32593   011BC0  6E27               	movwf	sendMessage3@data3^(0+1280),c
 32594   011BC2  0E6F               	movlw	111
 32595   011BC4  ECF7  F0B0         	call	_sendMessage3
 32596                           
 32597                           ;../../VLCBlib_PIC/nv.c: 255:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 32598   011BC8  C55F  F525         	movff	_nn+1,sendMessage5@data1
 32599   011BCC  C55E  F526         	movff	_nn,sendMessage5@data2
 32600   011BD0  0E71               	movlw	113
 32601   011BD2  6E27               	movwf	sendMessage5@data3^(0+1280),c
 32602   011BD4  0E01               	movlw	1
 32603   011BD6  6E28               	movwf	sendMessage5@data4^(0+1280),c
 32604   011BD8  0E01               	movlw	1
 32605   011BDA  6E29               	movwf	sendMessage5@data5^(0+1280),c
 32606   011BDC  0EAF               	movlw	175
 32607   011BDE  EC36  F0B1         	call	_sendMessage5
 32608   011BE2                     l10939:
 32609                           
 32610                           ;../../VLCBlib_PIC/nv.c: 258:                 nvDiagnostics[0x02].asUint++;
 32611   011BE2  0105               	movlb	5	; () banked
 32612   011BE4  4BB4               	infsnz	(_nvDiagnostics+4)& (0+255),f,b
 32613   011BE6  2BB5               	incf	(_nvDiagnostics+5)& (0+255),f,b
 32614   011BE8                     l10941:
 32615                           
 32616                           ;../../VLCBlib_PIC/nv.c: 260:                 return PROCESSED;
 32617   011BE8  0E01               	movlw	1
 32618   011BEA  0012               	return	
 32619   011BEC                     l10945:
 32620                           
 32621                           ;../../VLCBlib_PIC/nv.c: 262:             valueOrError = getNV(m->bytes[2]);
 32622   011BEC  EE20 F004          	lfsr	2,4
 32623   011BF0  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 32624   011BF2  26D9               	addwf	fsr2l,f,c
 32625   011BF4  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 32626   011BF6  22DA               	addwfc	fsr2h,f,c
 32627   011BF8  50DF               	movf	indf2,w,c
 32628   011BFA  EC49  F0AF         	call	_getNV
 32629   011BFE  C501  F557         	movff	?_getNV,nvProcessMessage@valueOrError
 32630   011C02  C502  F558         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 32631                           
 32632                           ;../../VLCBlib_PIC/nv.c: 263:             if (valueOrError < 0) {
 32633   011C06  AE58               	btfss	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 32634   011C08  D019               	goto	l10957
 32635                           
 32636                           ;../../VLCBlib_PIC/nv.c: 264:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 32637   011C0A  C55F  F525         	movff	_nn+1,sendMessage3@data1
 32638   011C0E  C55E  F526         	movff	_nn,sendMessage3@data2
 32639   011C12  5057               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 32640   011C14  0800               	sublw	0
 32641   011C16  6E27               	movwf	sendMessage3@data3^(0+1280),c
 32642   011C18  0E6F               	movlw	111
 32643   011C1A  ECF7  F0B0         	call	_sendMessage3
 32644                           
 32645                           ;../../VLCBlib_PIC/nv.c: 266:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 32646   011C1E  C55F  F525         	movff	_nn+1,sendMessage5@data1
 32647   011C22  C55E  F526         	movff	_nn,sendMessage5@data2
 32648   011C26  0E71               	movlw	113
 32649   011C28  6E27               	movwf	sendMessage5@data3^(0+1280),c
 32650   011C2A  0E01               	movlw	1
 32651   011C2C  6E28               	movwf	sendMessage5@data4^(0+1280),c
 32652   011C2E  5057               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 32653   011C30  0800               	sublw	0
 32654   011C32  6E29               	movwf	sendMessage5@data5^(0+1280),c
 32655   011C34  0EAF               	movlw	175
 32656   011C36  EC36  F0B1         	call	_sendMessage5
 32657   011C3A  D7D3               	goto	l10939
 32658   011C3C                     l10957:
 32659                           
 32660                           ;../../VLCBlib_PIC/nv.c: 274:             nvDiagnostics[0x01].asUint++;
 32661   011C3C  0105               	movlb	5	; () banked
 32662   011C3E  4BB2               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 32663   011C40  2BB3               	incf	(_nvDiagnostics+3)& (0+255),f,b
 32664                           
 32665                           ; BSR set to: 5
 32666                           ;../../VLCBlib_PIC/nv.c: 276:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 32667   011C42  C55F  F525         	movff	_nn+1,sendMessage4@data1
 32668   011C46  C55E  F526         	movff	_nn,sendMessage4@data2
 32669   011C4A  EE20 F004          	lfsr	2,4
 32670   011C4E  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 32671   011C50  26D9               	addwf	fsr2l,f,c
 32672   011C52  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 32673   011C54  22DA               	addwfc	fsr2h,f,c
 32674   011C56  50DF               	movf	indf2,w,c
 32675   011C58  6E27               	movwf	sendMessage4@data3^(0+1280),c
 32676   011C5A  C557  F528         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 32677   011C5E  0E97               	movlw	151
 32678   011C60  EC4B  F0B1         	call	_sendMessage4
 32679                           
 32680                           ;../../VLCBlib_PIC/nv.c: 278:             if (((mode_flags & 8) == 0) && (m->bytes[2] ==
      +                           0)) {
 32681   011C64  0105               	movlb	5	; () banked
 32682   011C66  B79F               	btfsc	_mode_flags& (0+255),3,b
 32683   011C68  D7BF               	goto	l10941
 32684                           
 32685                           ; BSR set to: 5
 32686   011C6A  EE20 F004          	lfsr	2,4
 32687   011C6E  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 32688   011C70  26D9               	addwf	fsr2l,f,c
 32689   011C72  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 32690   011C74  22DA               	addwfc	fsr2h,f,c
 32691   011C76  50DF               	movf	indf2,w,c
 32692   011C78  A4D8               	btfss	status,2,c
 32693   011C7A  D7B6               	goto	l10941
 32694                           
 32695                           ; BSR set to: 5
 32696                           ;../../VLCBlib_PIC/nv.c: 280:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 32697   011C7C  0E02               	movlw	2
 32698   011C7E  EC02  F0A8         	call	_findServiceIndex
 32699   011C82  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 32700   011C84  0E1C               	movlw	low _nvTRnvrdCallback
 32701   011C86  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 32702   011C88  0E5E               	movlw	high _nvTRnvrdCallback
 32703   011C8A  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 32704   011C8C  0E01               	movlw	low (_nvTRnvrdCallback shr (0+16))
 32705   011C8E  6E08               	movwf	(startTimedResponse@callback+2)^(0+1280),c
 32706   011C90  0E06               	movlw	6
 32707   011C92  ECD0  F0AE         	call	_startTimedResponse
 32708   011C96  D7A8               	goto	l10941
 32709   011C98                     l10971:
 32710                           
 32711                           ;../../VLCBlib_PIC/nv.c: 284:             if (m->len < 5) {
 32712   011C98  C553  F4D9         	movff	nvProcessMessage@m,fsr2l
 32713   011C9C  C554  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 32714   011CA0  0E05               	movlw	5
 32715   011CA2  60DF               	cpfslt	indf2,c
 32716   011CA4  D00E               	goto	l10981
 32717                           
 32718                           ;../../VLCBlib_PIC/nv.c: 287:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 32719   011CA6  C55F  F525         	movff	_nn+1,sendMessage5@data1
 32720   011CAA  C55E  F526         	movff	_nn,sendMessage5@data2
 32721   011CAE  0E96               	movlw	150
 32722   011CB0  6E27               	movwf	sendMessage5@data3^(0+1280),c
 32723   011CB2  0E01               	movlw	1
 32724   011CB4  6E28               	movwf	sendMessage5@data4^(0+1280),c
 32725   011CB6  0E01               	movlw	1
 32726   011CB8  6E29               	movwf	sendMessage5@data5^(0+1280),c
 32727   011CBA  0EAF               	movlw	175
 32728   011CBC  EC36  F0B1         	call	_sendMessage5
 32729   011CC0  D790               	goto	l10939
 32730   011CC2                     l10981:
 32731                           
 32732                           ;../../VLCBlib_PIC/nv.c: 294:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 32733   011CC2  EE20 F005          	lfsr	2,5
 32734   011CC6  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 32735   011CC8  26D9               	addwf	fsr2l,f,c
 32736   011CCA  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 32737   011CCC  22DA               	addwfc	fsr2h,f,c
 32738   011CCE  50DF               	movf	indf2,w,c
 32739   011CD0  6E15               	movwf	setNV@value^(0+1280),c
 32740   011CD2  EE20 F004          	lfsr	2,4
 32741   011CD6  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 32742   011CD8  26D9               	addwf	fsr2l,f,c
 32743   011CDA  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 32744   011CDC  22DA               	addwfc	fsr2h,f,c
 32745   011CDE  50DF               	movf	indf2,w,c
 32746   011CE0  EC53  F0A7         	call	_setNV
 32747   011CE4  6E55               	movwf	??_nvProcessMessage^(0+1280),c
 32748   011CE6  5055               	movf	??_nvProcessMessage^(0+1280),w,c
 32749   011CE8  6E57               	movwf	nvProcessMessage@valueOrError^(0+1280),c
 32750   011CEA  6A58               	clrf	(nvProcessMessage@valueOrError+1)^(0+1280),c
 32751                           
 32752                           ;../../VLCBlib_PIC/nv.c: 295:             if (valueOrError >0) {
 32753   011CEC  BE58               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 32754   011CEE  D00F               	goto	l10993
 32755   011CF0  5058               	movf	(nvProcessMessage@valueOrError+1)^(0+1280),w,c
 32756   011CF2  E103               	bnz	u9060
 32757   011CF4  0457               	decf	nvProcessMessage@valueOrError^(0+1280),w,c
 32758   011CF6  A0D8               	btfss	status,0,c
 32759   011CF8  D00A               	goto	l10993
 32760   011CFA                     u9060:
 32761                           
 32762                           ;../../VLCBlib_PIC/nv.c: 296:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 32763   011CFA  C55F  F525         	movff	_nn+1,sendMessage3@data1
 32764   011CFE  C55E  F526         	movff	_nn,sendMessage3@data2
 32765   011D02  C557  F527         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 32766   011D06  0E6F               	movlw	111
 32767   011D08  ECF7  F0B0         	call	_sendMessage3
 32768   011D0C  D76A               	goto	l10939
 32769   011D0E                     l10993:
 32770                           
 32771                           ;../../VLCBlib_PIC/nv.c: 303:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 32772   011D0E  C55F  F525         	movff	_nn+1,sendMessage2@data1
 32773   011D12  C55E  F526         	movff	_nn,sendMessage2@data2
 32774   011D16  0E59               	movlw	89
 32775   011D18  EC0C  F0B1         	call	_sendMessage2
 32776                           
 32777                           ;../../VLCBlib_PIC/nv.c: 305:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 32778   011D1C  C55F  F525         	movff	_nn+1,sendMessage5@data1
 32779   011D20  C55E  F526         	movff	_nn,sendMessage5@data2
 32780   011D24  0E96               	movlw	150
 32781   011D26  6E27               	movwf	sendMessage5@data3^(0+1280),c
 32782   011D28  0E01               	movlw	1
 32783   011D2A  6E28               	movwf	sendMessage5@data4^(0+1280),c
 32784   011D2C  0E00               	movlw	0
 32785   011D2E  6E29               	movwf	sendMessage5@data5^(0+1280),c
 32786   011D30  0EAF               	movlw	175
 32787   011D32  EC36  F0B1         	call	_sendMessage5
 32788   011D36  D758               	goto	l10941
 32789   011D38                     l10999:
 32790                           
 32791                           ;../../VLCBlib_PIC/nv.c: 310:             if (m->len < 5) {
 32792   011D38  C553  F4D9         	movff	nvProcessMessage@m,fsr2l
 32793   011D3C  C554  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 32794   011D40  0E05               	movlw	5
 32795   011D42  60DF               	cpfslt	indf2,c
 32796   011D44  D00E               	goto	l11009
 32797                           
 32798                           ;../../VLCBlib_PIC/nv.c: 312:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 32799   011D46  C55F  F525         	movff	_nn+1,sendMessage5@data1
 32800   011D4A  C55E  F526         	movff	_nn,sendMessage5@data2
 32801   011D4E  0E8E               	movlw	142
 32802   011D50  6E27               	movwf	sendMessage5@data3^(0+1280),c
 32803   011D52  0E01               	movlw	1
 32804   011D54  6E28               	movwf	sendMessage5@data4^(0+1280),c
 32805   011D56  0E01               	movlw	1
 32806   011D58  6E29               	movwf	sendMessage5@data5^(0+1280),c
 32807   011D5A  0EAF               	movlw	175
 32808   011D5C  EC36  F0B1         	call	_sendMessage5
 32809   011D60  D740               	goto	l10939
 32810   011D62                     l11009:
 32811                           
 32812                           ;../../VLCBlib_PIC/nv.c: 318:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 32813   011D62  EE20 F005          	lfsr	2,5
 32814   011D66  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 32815   011D68  26D9               	addwf	fsr2l,f,c
 32816   011D6A  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 32817   011D6C  22DA               	addwfc	fsr2h,f,c
 32818   011D6E  50DF               	movf	indf2,w,c
 32819   011D70  6E15               	movwf	setNV@value^(0+1280),c
 32820   011D72  EE20 F004          	lfsr	2,4
 32821   011D76  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 32822   011D78  26D9               	addwf	fsr2l,f,c
 32823   011D7A  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 32824   011D7C  22DA               	addwfc	fsr2h,f,c
 32825   011D7E  50DF               	movf	indf2,w,c
 32826   011D80  EC53  F0A7         	call	_setNV
 32827   011D84  6E55               	movwf	??_nvProcessMessage^(0+1280),c
 32828   011D86  5055               	movf	??_nvProcessMessage^(0+1280),w,c
 32829   011D88  6E57               	movwf	nvProcessMessage@valueOrError^(0+1280),c
 32830   011D8A  6A58               	clrf	(nvProcessMessage@valueOrError+1)^(0+1280),c
 32831                           
 32832                           ;../../VLCBlib_PIC/nv.c: 319:             if (valueOrError >0) {
 32833   011D8C  BE58               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 32834   011D8E  D01C               	goto	l11021
 32835   011D90  5058               	movf	(nvProcessMessage@valueOrError+1)^(0+1280),w,c
 32836   011D92  E103               	bnz	u9080
 32837   011D94  0457               	decf	nvProcessMessage@valueOrError^(0+1280),w,c
 32838   011D96  A0D8               	btfss	status,0,c
 32839   011D98  D017               	goto	l11021
 32840   011D9A                     u9080:
 32841                           
 32842                           ;../../VLCBlib_PIC/nv.c: 320:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 32843   011D9A  C55F  F525         	movff	_nn+1,sendMessage3@data1
 32844   011D9E  C55E  F526         	movff	_nn,sendMessage3@data2
 32845   011DA2  C557  F527         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 32846   011DA6  0E6F               	movlw	111
 32847   011DA8  ECF7  F0B0         	call	_sendMessage3
 32848                           
 32849                           ;../../VLCBlib_PIC/nv.c: 321:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 32850   011DAC  C55F  F525         	movff	_nn+1,sendMessage5@data1
 32851   011DB0  C55E  F526         	movff	_nn,sendMessage5@data2
 32852   011DB4  0E8E               	movlw	142
 32853   011DB6  6E27               	movwf	sendMessage5@data3^(0+1280),c
 32854   011DB8  0E01               	movlw	1
 32855   011DBA  6E28               	movwf	sendMessage5@data4^(0+1280),c
 32856   011DBC  C557  F529         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 32857   011DC0  0EAF               	movlw	175
 32858   011DC2  EC36  F0B1         	call	_sendMessage5
 32859   011DC6  D70D               	goto	l10939
 32860   011DC8                     l11021:
 32861                           
 32862                           ;../../VLCBlib_PIC/nv.c: 327:             valueOrError = getNV(m->bytes[2]);
 32863   011DC8  EE20 F004          	lfsr	2,4
 32864   011DCC  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 32865   011DCE  26D9               	addwf	fsr2l,f,c
 32866   011DD0  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 32867   011DD2  22DA               	addwfc	fsr2h,f,c
 32868   011DD4  50DF               	movf	indf2,w,c
 32869   011DD6  EC49  F0AF         	call	_getNV
 32870   011DDA  C501  F557         	movff	?_getNV,nvProcessMessage@valueOrError
 32871   011DDE  C502  F558         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 32872                           
 32873                           ;../../VLCBlib_PIC/nv.c: 328:             if (valueOrError < 0) {
 32874   011DE2  AE58               	btfss	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 32875   011DE4  D019               	goto	l11033
 32876                           
 32877                           ;../../VLCBlib_PIC/nv.c: 329:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 32878   011DE6  C55F  F525         	movff	_nn+1,sendMessage3@data1
 32879   011DEA  C55E  F526         	movff	_nn,sendMessage3@data2
 32880   011DEE  5057               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 32881   011DF0  0800               	sublw	0
 32882   011DF2  6E27               	movwf	sendMessage3@data3^(0+1280),c
 32883   011DF4  0E6F               	movlw	111
 32884   011DF6  ECF7  F0B0         	call	_sendMessage3
 32885                           
 32886                           ;../../VLCBlib_PIC/nv.c: 330:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 32887   011DFA  C55F  F525         	movff	_nn+1,sendMessage5@data1
 32888   011DFE  C55E  F526         	movff	_nn,sendMessage5@data2
 32889   011E02  0E8E               	movlw	142
 32890   011E04  6E27               	movwf	sendMessage5@data3^(0+1280),c
 32891   011E06  0E01               	movlw	1
 32892   011E08  6E28               	movwf	sendMessage5@data4^(0+1280),c
 32893   011E0A  5057               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 32894   011E0C  0800               	sublw	0
 32895   011E0E  6E29               	movwf	sendMessage5@data5^(0+1280),c
 32896   011E10  0EAF               	movlw	175
 32897   011E12  EC36  F0B1         	call	_sendMessage5
 32898   011E16  D6E5               	goto	l10939
 32899   011E18                     l11033:
 32900                           
 32901                           ;../../VLCBlib_PIC/nv.c: 336:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 32902   011E18  C55F  F525         	movff	_nn+1,sendMessage4@data1
 32903   011E1C  C55E  F526         	movff	_nn,sendMessage4@data2
 32904   011E20  EE20 F004          	lfsr	2,4
 32905   011E24  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 32906   011E26  26D9               	addwf	fsr2l,f,c
 32907   011E28  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 32908   011E2A  22DA               	addwfc	fsr2h,f,c
 32909   011E2C  50DF               	movf	indf2,w,c
 32910   011E2E  6E27               	movwf	sendMessage4@data3^(0+1280),c
 32911   011E30  C557  F528         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 32912   011E34  0E97               	movlw	151
 32913   011E36  EC4B  F0B1         	call	_sendMessage4
 32914                           
 32915                           ;../../VLCBlib_PIC/nv.c: 338:             nvDiagnostics[0x01].asUint++;
 32916   011E3A  0105               	movlb	5	; () banked
 32917   011E3C  4BB2               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 32918   011E3E  2BB3               	incf	(_nvDiagnostics+3)& (0+255),f,b
 32919   011E40  D6D3               	goto	l10941
 32920   011E42                     l11047:
 32921   011E42  EE20 F001          	lfsr	2,1
 32922   011E46  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 32923   011E48  26D9               	addwf	fsr2l,f,c
 32924   011E4A  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 32925   011E4C  22DA               	addwfc	fsr2h,f,c
 32926   011E4E  50DF               	movf	indf2,w,c
 32927   011E50  6E55               	movwf	??_nvProcessMessage^(0+1280),c
 32928   011E52  6A56               	clrf	(??_nvProcessMessage+1)^(0+1280),c
 32929                           
 32930                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32931                           ; Switch size 1, requested type "simple"
 32932                           ; Number of cases is 1, Range of values is 0 to 0
 32933                           ; switch strategies available:
 32934                           ; Name         Instructions Cycles
 32935                           ; simple_byte            4     3 (average)
 32936                           ;	Chosen strategy is simple_byte
 32937   011E54  5056               	movf	(??_nvProcessMessage+1)^(0+1280),w,c
 32938   011E56  0A00               	xorlw	0	; case 0
 32939   011E58  A4D8               	btfss	status,2,c
 32940   011E5A  D68F               	goto	u8980
 32941                           
 32942                           ; Switch size 1, requested type "simple"
 32943                           ; Number of cases is 3, Range of values is 113 to 150
 32944                           ; switch strategies available:
 32945                           ; Name         Instructions Cycles
 32946                           ; simple_byte           10     6 (average)
 32947                           ;	Chosen strategy is simple_byte
 32948   011E5C  5055               	movf	??_nvProcessMessage^(0+1280),w,c
 32949   011E5E  0A71               	xorlw	113	; case 113
 32950   011E60  B4D8               	btfsc	status,2,c
 32951   011E62  D6A2               	goto	l10935
 32952   011E64  0AFF               	xorlw	255	; case 142
 32953   011E66  B4D8               	btfsc	status,2,c
 32954   011E68  D767               	goto	l10999
 32955   011E6A  0A18               	xorlw	24	; case 150
 32956   011E6C  B4D8               	btfsc	status,2,c
 32957   011E6E  D714               	goto	l10971
 32958   011E70  D684               	goto	u8980
 32959   011E72                     __end_of_nvProcessMessage:
 32960                           	callstack 0
 32961                           
 32962 ;; *************** function _mnsProcessMessage *****************
 32963 ;; Defined at:
 32964 ;;		line 358 in file "../../VLCBlib_PIC/mns.c"
 32965 ;; Parameters:    Size  Location     Type
 32966 ;;  m               2   82[COMRAM] PTR struct Message
 32967 ;;		 -> poll@m(9), 
 32968 ;; Auto vars:     Size  Location     Type
 32969 ;;  d               2   86[COMRAM] PTR struct DiagnosticVal
 32970 ;;		 -> producerDiagnostics(4), nvDiagnostics(6), mnsDiagnostics(14), teachDiagnostics(4), 
 32971 ;;		 -> consumerDiagnostics(6), canDiagnostics(38), NULL(0), 
 32972 ;;  newMode         1   88[COMRAM] unsigned char 
 32973 ;;  i               1   84[COMRAM] unsigned char 
 32974 ;;  flags           1    0        unsigned char 
 32975 ;; Return value:  Size  Location     Type
 32976 ;;                  1    wreg      enum E23340
 32977 ;; Registers used:
 32978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32979 ;; Tracked objects:
 32980 ;;		On entry : 0/0
 32981 ;;		On exit  : 0/0
 32982 ;;		Unchanged: 0/0
 32983 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32984 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32985 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32986 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32987 ;;      Totals:         7      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32988 ;;Total ram usage:       31 bytes
 32989 ;; Hardware stack levels used: 1
 32990 ;; Hardware stack levels required when called: 11
 32991 ;; This function calls:
 32992 ;;		NULL
 32993 ;;		_bootEsdData
 32994 ;;		_canEsdData
 32995 ;;		_canGetDiagnostic
 32996 ;;		_consumerEsdData
 32997 ;;		_consumerGetDiagnostic
 32998 ;;		_factoryReset
 32999 ;;		_findServiceIndex
 33000 ;;		_getParameter
 33001 ;;		_getParameterFlags
 33002 ;;		_mnsGetDiagnostic
 33003 ;;		_nvGetDiagnostic
 33004 ;;		_nvGetESDdata
 33005 ;;		_producerEsdData
 33006 ;;		_producerGetDiagnostic
 33007 ;;		_rebuildHashtable
 33008 ;;		_sendMessage2
 33009 ;;		_sendMessage3
 33010 ;;		_sendMessage4
 33011 ;;		_sendMessage5
 33012 ;;		_sendMessage6
 33013 ;;		_sendMessage7
 33014 ;;		_setLEDsByMode
 33015 ;;		_startTimedResponse
 33016 ;;		_teachGetDiagnostic
 33017 ;;		_teachGetESDdata
 33018 ;;		_writeNVM
 33019 ;; This function is called by:
 33020 ;;		_APP_preProcessMessage
 33021 ;;		_poll
 33022 ;; This function uses a non-reentrant model
 33023 ;;
 33024                           
 33025                           	psect	text42
 33026   010000                     __ptext42:
 33027                           	callstack 0
 33028   010000                     _mnsProcessMessage:
 33029                           	callstack 114
 33030                           
 33031                           ;../../VLCBlib_PIC/mns.c: 359:     uint8_t i;;../../VLCBlib_PIC/mns.c: 360:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 362:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 367: 
      +                              if (mode_state == MODE_SETUP) {
 33032                           
 33033                           ;incstack = 0
 33034   010000  0105               	movlb	5	; () banked
 33035   010002  5190               	movf	_mode_state& (0+255),w,b
 33036   010004  B4D8               	btfsc	status,2,c
 33037   010006  D0B3               	goto	l10545
 33038   010008  D123               	goto	l10601
 33039   01000A                     l10501:
 33040                           
 33041                           ; BSR set to: 5
 33042                           ;../../VLCBlib_PIC/mns.c: 370:                 if (m->len < 3) {
 33043   01000A  C553  F4D9         	movff	mnsProcessMessage@m,fsr2l
 33044   01000E  C554  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 33045   010012  0E03               	movlw	3
 33046   010014  60DF               	cpfslt	indf2,c
 33047   010016  D00E               	goto	l10505
 33048                           
 33049                           ; BSR set to: 5
 33050                           ;../../VLCBlib_PIC/mns.c: 372:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_SNN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 33051   010018  C55F  F525         	movff	_nn+1,sendMessage5@data1
 33052   01001C  C55E  F526         	movff	_nn,sendMessage5@data2
 33053   010020  0E42               	movlw	66
 33054   010022  6E27               	movwf	sendMessage5@data3^(0+1280),c
 33055   010024  0E01               	movlw	1
 33056   010026  6E28               	movwf	sendMessage5@data4^(0+1280),c
 33057   010028  0E01               	movlw	1
 33058   01002A  6E29               	movwf	sendMessage5@data5^(0+1280),c
 33059   01002C  0EAF               	movlw	175
 33060   01002E  EC36  F0B1         	call	_sendMessage5
 33061                           
 33062                           ;../../VLCBlib_PIC/mns.c: 374:                 } else {
 33063   010032  D037               	goto	l10521
 33064   010034                     l10505:
 33065                           
 33066                           ; BSR set to: 5
 33067                           ;../../VLCBlib_PIC/mns.c: 375:                     nn.bytes.hi = m->bytes[0];
 33068   010034  EE20 F002          	lfsr	2,2
 33069   010038  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33070   01003A  26D9               	addwf	fsr2l,f,c
 33071   01003C  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33072   01003E  22DA               	addwfc	fsr2h,f,c
 33073   010040  50DF               	movf	indf2,w,c
 33074   010042  6E5F               	movwf	(_nn+1)^(0+1280),c
 33075                           
 33076                           ;../../VLCBlib_PIC/mns.c: 376:                     nn.bytes.lo = m->bytes[1];
 33077   010044  EE20 F003          	lfsr	2,3
 33078   010048  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33079   01004A  26D9               	addwf	fsr2l,f,c
 33080   01004C  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33081   01004E  22DA               	addwfc	fsr2h,f,c
 33082   010050  50DF               	movf	indf2,w,c
 33083   010052  6E5E               	movwf	_nn^(0+1280),c
 33084                           
 33085                           ; BSR set to: 5
 33086                           ;../../VLCBlib_PIC/mns.c: 377:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.hi);
 33087   010054  0EFD               	movlw	253
 33088   010056  6E0E               	movwf	writeNVM@index^(0+1280),c
 33089   010058  0E03               	movlw	3
 33090   01005A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 33091   01005C  0E00               	movlw	0
 33092   01005E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 33093   010060  C55F  F511         	movff	_nn+1,writeNVM@value
 33094   010064  0E00               	movlw	0
 33095   010066  EC71  F0AD         	call	_writeNVM
 33096                           
 33097                           ;../../VLCBlib_PIC/mns.c: 378:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.lo);
 33098   01006A  0EFC               	movlw	252
 33099   01006C  6E0E               	movwf	writeNVM@index^(0+1280),c
 33100   01006E  0E03               	movlw	3
 33101   010070  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 33102   010072  0E00               	movlw	0
 33103   010074  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 33104   010076  C55E  F511         	movff	_nn,writeNVM@value
 33105   01007A  0E00               	movlw	0
 33106   01007C  EC71  F0AD         	call	_writeNVM
 33107                           
 33108                           ;../../VLCBlib_PIC/mns.c: 380:                     mode_state = MODE_NORMAL;
 33109   010080  0E01               	movlw	1
 33110   010082  0105               	movlb	5	; () banked
 33111   010084  6F90               	movwf	_mode_state& (0+255),b
 33112                           
 33113                           ; BSR set to: 5
 33114                           ;../../VLCBlib_PIC/mns.c: 383:                     rebuildHashtable();
 33115   010086  ECC0  F0A0         	call	_rebuildHashtable	;wreg free
 33116                           
 33117                           ;../../VLCBlib_PIC/mns.c: 386:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 33118   01008A  C55F  F525         	movff	_nn+1,sendMessage2@data1
 33119   01008E  C55E  F526         	movff	_nn,sendMessage2@data2
 33120   010092  0E52               	movlw	82
 33121   010094  EC0C  F0B1         	call	_sendMessage2
 33122                           
 33123                           ;../../VLCBlib_PIC/mns.c: 388:                     mnsDiagnostics[0x05].asUint++;
 33124   010098  0105               	movlb	5	; () banked
 33125   01009A  4BAC               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 33126   01009C  2BAD               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 33127   01009E                     l10519:
 33128                           
 33129                           ; BSR set to: 5
 33130                           ;../../VLCBlib_PIC/mns.c: 391:                     setLEDsByMode();
 33131   01009E  EC40  F0B0         	call	_setLEDsByMode	;wreg free
 33132   0100A2                     l10521:
 33133                           
 33134                           ;../../VLCBlib_PIC/mns.c: 393:                 return PROCESSED;
 33135   0100A2  0E01               	movlw	1
 33136   0100A4  0012               	return	
 33137   0100A6                     l10525:
 33138                           
 33139                           ; BSR set to: 5
 33140                           ;../../VLCBlib_PIC/mns.c: 395:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'a',
 33141   0100A6  0EA5               	movlw	165
 33142   0100A8  6E25               	movwf	sendMessage7@data1^(0+1280),c
 33143   0100AA  0E61               	movlw	97
 33144   0100AC  6E26               	movwf	sendMessage7@data2^(0+1280),c
 33145   0100AE  0E1D               	movlw	29
 33146   0100B0  6E27               	movwf	sendMessage7@data3^(0+1280),c
 33147   0100B2  0EFE               	movlw	254
 33148   0100B4  6E28               	movwf	sendMessage7@data4^(0+1280),c
 33149   0100B6  0E0D               	movlw	13
 33150   0100B8  6E29               	movwf	sendMessage7@data5^(0+1280),c
 33151   0100BA  0E43               	movlw	67
 33152   0100BC  6E2A               	movwf	sendMessage7@data6^(0+1280),c
 33153   0100BE  0E05               	movlw	5
 33154   0100C0  6E2B               	movwf	sendMessage7@data7^(0+1280),c
 33155   0100C2  0EEF               	movlw	239
 33156   0100C4  EC21  F0B1         	call	_sendMessage7
 33157   0100C8  D7EC               	goto	l10521
 33158   0100CA                     l10531:
 33159                           
 33160                           ; BSR set to: 5
 33161                           ;../../VLCBlib_PIC/mns.c: 400:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 33162   0100CA  0E48               	movlw	72
 33163   0100CC  6EF6               	movwf	tblptrl,c
 33164   0100CE                     	if	1	;There is more than 1 active tblptr byte
 33165   0100CE  0E08               	movlw	8
 33166   0100D0  6EF7               	movwf	tblptrh,c
 33167   0100D2                     	endif
 33168   0100D2                     	if	1	;There are 3 active tblptr bytes
 33169   0100D2  0E00               	movlw	0
 33170   0100D4  6EF8               	movwf	tblptru,c
 33171   0100D6                     	endif
 33172   0100D6  0008               	tblrd		*
 33173   0100D8  C4F5 F525          	movff	tablat,sendMessage7@data1
 33174   0100DC  0E49               	movlw	73
 33175   0100DE  6EF6               	movwf	tblptrl,c
 33176   0100E0  0E08               	movlw	8
 33177   0100E2  6EF7               	movwf	tblptrh,c
 33178   0100E4  0E00               	movlw	0
 33179   0100E6  6EF8               	movwf	tblptru,c
 33180   0100E8  0008               	tblrd		*
 33181   0100EA  C4F5 F526          	movff	tablat,sendMessage7@data2
 33182   0100EE  0E4A               	movlw	74
 33183   0100F0  6EF6               	movwf	tblptrl,c
 33184   0100F2  0E08               	movlw	8
 33185   0100F4  6EF7               	movwf	tblptrh,c
 33186   0100F6  0E00               	movlw	0
 33187   0100F8  6EF8               	movwf	tblptru,c
 33188   0100FA  0008               	tblrd		*
 33189   0100FC  C4F5 F527          	movff	tablat,sendMessage7@data3
 33190   010100  0E4B               	movlw	75
 33191   010102  6EF6               	movwf	tblptrl,c
 33192   010104  0E08               	movlw	8
 33193   010106  6EF7               	movwf	tblptrh,c
 33194   010108  0E00               	movlw	0
 33195   01010A  6EF8               	movwf	tblptru,c
 33196   01010C  0008               	tblrd		*
 33197   01010E  C4F5 F528          	movff	tablat,sendMessage7@data4
 33198   010112  0E4C               	movlw	76
 33199   010114  6EF6               	movwf	tblptrl,c
 33200   010116  0E08               	movlw	8
 33201   010118  6EF7               	movwf	tblptrh,c
 33202   01011A  0E00               	movlw	0
 33203   01011C  6EF8               	movwf	tblptru,c
 33204   01011E  0008               	tblrd		*
 33205   010120  C4F5 F529          	movff	tablat,sendMessage7@data5
 33206   010124  0E4D               	movlw	77
 33207   010126  6EF6               	movwf	tblptrl,c
 33208   010128  0E08               	movlw	8
 33209   01012A  6EF7               	movwf	tblptrh,c
 33210   01012C  0E00               	movlw	0
 33211   01012E  6EF8               	movwf	tblptru,c
 33212   010130  0008               	tblrd		*
 33213   010132  C4F5 F52A          	movff	tablat,sendMessage7@data6
 33214   010136  0E4E               	movlw	78
 33215   010138  6EF6               	movwf	tblptrl,c
 33216   01013A  0E08               	movlw	8
 33217   01013C  6EF7               	movwf	tblptrh,c
 33218   01013E  0E00               	movlw	0
 33219   010140  6EF8               	movwf	tblptru,c
 33220   010142  0008               	tblrd		*
 33221   010144  C4F5 F52B          	movff	tablat,sendMessage7@data7
 33222   010148  0EE2               	movlw	226
 33223   01014A  EC21  F0B1         	call	_sendMessage7
 33224   01014E  D7A9               	goto	l10521
 33225   010150                     l10537:
 33226                           
 33227                           ; BSR set to: 5
 33228                           ;../../VLCBlib_PIC/mns.c: 404:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_CANPAN, getParameterFlags());
 33229   010150  0E00               	movlw	0
 33230   010152  6E25               	movwf	sendMessage5@data1^(0+1280),c
 33231   010154  0E00               	movlw	0
 33232   010156  6E26               	movwf	sendMessage5@data2^(0+1280),c
 33233   010158  0EA5               	movlw	165
 33234   01015A  6E27               	movwf	sendMessage5@data3^(0+1280),c
 33235   01015C  0E1D               	movlw	29
 33236   01015E  6E28               	movwf	sendMessage5@data4^(0+1280),c
 33237   010160  EC90  F0AE         	call	_getParameterFlags	;wreg free
 33238   010164  6E29               	movwf	sendMessage5@data5^(0+1280),c
 33239   010166  0EB6               	movlw	182
 33240   010168  EC36  F0B1         	call	_sendMessage5
 33241   01016C  D79A               	goto	l10521
 33242   01016E                     l10545:
 33243                           
 33244                           ; BSR set to: 5
 33245   01016E  EE20 F001          	lfsr	2,1
 33246   010172  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33247   010174  26D9               	addwf	fsr2l,f,c
 33248   010176  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33249   010178  22DA               	addwfc	fsr2h,f,c
 33250   01017A  50DF               	movf	indf2,w,c
 33251   01017C  6FC9               	movwf	??_mnsProcessMessage& (0+255),b
 33252   01017E  6BCA               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 33253                           
 33254                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33255                           ; Switch size 1, requested type "simple"
 33256                           ; Number of cases is 1, Range of values is 0 to 0
 33257                           ; switch strategies available:
 33258                           ; Name         Instructions Cycles
 33259                           ; simple_byte            4     3 (average)
 33260                           ;	Chosen strategy is simple_byte
 33261   010180  51CA               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 33262   010182  0A00               	xorlw	0	; case 0
 33263   010184  A4D8               	btfss	status,2,c
 33264   010186  D00D               	goto	l10547
 33265                           
 33266                           ; BSR set to: 5
 33267                           ; Switch size 1, requested type "simple"
 33268                           ; Number of cases is 4, Range of values is 13 to 66
 33269                           ; switch strategies available:
 33270                           ; Name         Instructions Cycles
 33271                           ; simple_byte           13     7 (average)
 33272                           ;	Chosen strategy is simple_byte
 33273   010188  51C9               	movf	??_mnsProcessMessage& (0+255),w,b
 33274   01018A  0A0D               	xorlw	13	; case 13
 33275   01018C  B4D8               	btfsc	status,2,c
 33276   01018E  D7E0               	goto	l10537
 33277   010190  0A1D               	xorlw	29	; case 16
 33278   010192  B4D8               	btfsc	status,2,c
 33279   010194  D788               	goto	l10525
 33280   010196  0A01               	xorlw	1	; case 17
 33281   010198  B4D8               	btfsc	status,2,c
 33282   01019A  D797               	goto	l10531
 33283   01019C  0A53               	xorlw	83	; case 66
 33284   01019E  B4D8               	btfsc	status,2,c
 33285   0101A0  D734               	goto	l10501
 33286   0101A2                     l10547:
 33287                           
 33288                           ; BSR set to: 5
 33289                           ;../../VLCBlib_PIC/mns.c: 409:         return NOT_PROCESSED;
 33290   0101A2  0E00               	movlw	0
 33291   0101A4  0012               	return	
 33292   0101A6                     l10551:
 33293                           
 33294                           ; BSR set to: 5
 33295                           ;../../VLCBlib_PIC/mns.c: 414:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_CANPAN, getParameterFlags());
 33296   0101A6  C55F  F525         	movff	_nn+1,sendMessage5@data1
 33297   0101AA  C55E  F526         	movff	_nn,sendMessage5@data2
 33298   0101AE  0EA5               	movlw	165
 33299   0101B0  6E27               	movwf	sendMessage5@data3^(0+1280),c
 33300   0101B2  0E1D               	movlw	29
 33301   0101B4  6E28               	movwf	sendMessage5@data4^(0+1280),c
 33302   0101B6  EC90  F0AE         	call	_getParameterFlags	;wreg free
 33303   0101BA  6E29               	movwf	sendMessage5@data5^(0+1280),c
 33304   0101BC  0EB6               	movlw	182
 33305   0101BE  EC36  F0B1         	call	_sendMessage5
 33306   0101C2  D76F               	goto	l10521
 33307   0101C4                     l10557:
 33308                           
 33309                           ; BSR set to: 5
 33310                           ;../../VLCBlib_PIC/mns.c: 418:             if (m->len < 4) {
 33311   0101C4  C553  F4D9         	movff	mnsProcessMessage@m,fsr2l
 33312   0101C8  C554  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 33313   0101CC  0E04               	movlw	4
 33314   0101CE  60DF               	cpfslt	indf2,c
 33315   0101D0  D00E               	goto	l10565
 33316                           
 33317                           ; BSR set to: 5
 33318                           ;../../VLCBlib_PIC/mns.c: 419:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 33319   0101D2  C55F  F525         	movff	_nn+1,sendMessage5@data1
 33320   0101D6  C55E  F526         	movff	_nn,sendMessage5@data2
 33321   0101DA  0E76               	movlw	118
 33322   0101DC  6E27               	movwf	sendMessage5@data3^(0+1280),c
 33323   0101DE  0E01               	movlw	1
 33324   0101E0  6E28               	movwf	sendMessage5@data4^(0+1280),c
 33325   0101E2  0E01               	movlw	1
 33326   0101E4  6E29               	movwf	sendMessage5@data5^(0+1280),c
 33327   0101E6  0EAF               	movlw	175
 33328   0101E8  EC36  F0B1         	call	_sendMessage5
 33329   0101EC  D75A               	goto	l10521
 33330   0101EE                     l10565:
 33331                           
 33332                           ; BSR set to: 5
 33333                           ;../../VLCBlib_PIC/mns.c: 422:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 33334   0101EE  EE20 F002          	lfsr	2,2
 33335   0101F2  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33336   0101F4  26D9               	addwf	fsr2l,f,c
 33337   0101F6  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33338   0101F8  22DA               	addwfc	fsr2h,f,c
 33339   0101FA  50DF               	movf	indf2,w,c
 33340   0101FC  A4D8               	btfss	status,2,c
 33341   0101FE  D03C               	goto	l10603
 33342                           
 33343                           ; BSR set to: 5
 33344   010200  EE20 F003          	lfsr	2,3
 33345   010204  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33346   010206  26D9               	addwf	fsr2l,f,c
 33347   010208  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33348   01020A  22DA               	addwfc	fsr2h,f,c
 33349   01020C  50DF               	movf	indf2,w,c
 33350   01020E  A4D8               	btfss	status,2,c
 33351   010210  D033               	goto	l10603
 33352                           
 33353                           ; BSR set to: 5
 33354                           ;../../VLCBlib_PIC/mns.c: 423:                 newMode = m->bytes[2];
 33355   010212  EE20 F004          	lfsr	2,4
 33356   010216  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33357   010218  26D9               	addwf	fsr2l,f,c
 33358   01021A  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33359   01021C  22DA               	addwfc	fsr2h,f,c
 33360   01021E  50DF               	movf	indf2,w,c
 33361   010220  6E59               	movwf	mnsProcessMessage@newMode^(0+1280),c
 33362                           
 33363                           ;../../VLCBlib_PIC/mns.c: 425:                 switch (newMode) {
 33364   010222  D008               	goto	l10597
 33365   010224                     l10571:
 33366                           
 33367                           ; BSR set to: 5
 33368                           ;../../VLCBlib_PIC/mns.c: 427:                         mode_flags |= 4;
 33369   010224  859F               	bsf	_mode_flags& (0+255),2,b
 33370   010226  D73D               	goto	l10521
 33371   010228                     l10577:
 33372                           
 33373                           ; BSR set to: 5
 33374                           ;../../VLCBlib_PIC/mns.c: 430:                         mode_flags &= ~4;
 33375   010228  959F               	bcf	_mode_flags& (0+255),2,b
 33376   01022A  D73B               	goto	l10521
 33377   01022C                     l10583:
 33378                           
 33379                           ; BSR set to: 5
 33380                           ;../../VLCBlib_PIC/mns.c: 433:                         mode_flags |= 8;
 33381   01022C  879F               	bsf	_mode_flags& (0+255),3,b
 33382   01022E  D739               	goto	l10521
 33383   010230                     l10589:
 33384                           
 33385                           ; BSR set to: 5
 33386                           ;../../VLCBlib_PIC/mns.c: 436:                         mode_flags &= ~8;
 33387   010230  979F               	bcf	_mode_flags& (0+255),3,b
 33388   010232  D737               	goto	l10521
 33389   010234                     l10597:
 33390                           
 33391                           ; BSR set to: 5
 33392   010234  5059               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 33393                           
 33394                           ; Switch size 1, requested type "simple"
 33395                           ; Number of cases is 4, Range of values is 12 to 17
 33396                           ; switch strategies available:
 33397                           ; Name         Instructions Cycles
 33398                           ; simple_byte           13     7 (average)
 33399                           ;	Chosen strategy is simple_byte
 33400   010236  0A0C               	xorlw	12	; case 12
 33401   010238  B4D8               	btfsc	status,2,c
 33402   01023A  D7F4               	goto	l10571
 33403   01023C  0A01               	xorlw	1	; case 13
 33404   01023E  B4D8               	btfsc	status,2,c
 33405   010240  D7F3               	goto	l10577
 33406   010242  0A1D               	xorlw	29	; case 16
 33407   010244  B4D8               	btfsc	status,2,c
 33408   010246  D7F2               	goto	l10583
 33409   010248  0A01               	xorlw	1	; case 17
 33410   01024A  B4D8               	btfsc	status,2,c
 33411   01024C  D7F1               	goto	l10589
 33412                           
 33413                           ; BSR set to: 5
 33414                           ;../../VLCBlib_PIC/mns.c: 442:             break;
 33415                           
 33416                           ;../../VLCBlib_PIC/mns.c: 441:             }
 33417   01024E  D014               	goto	l10603
 33418   010250                     l10601:
 33419                           
 33420                           ; BSR set to: 5
 33421   010250  EE20 F001          	lfsr	2,1
 33422   010254  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33423   010256  26D9               	addwf	fsr2l,f,c
 33424   010258  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33425   01025A  22DA               	addwfc	fsr2h,f,c
 33426   01025C  50DF               	movf	indf2,w,c
 33427   01025E  6FC9               	movwf	??_mnsProcessMessage& (0+255),b
 33428   010260  6BCA               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 33429                           
 33430                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33431                           ; Switch size 1, requested type "simple"
 33432                           ; Number of cases is 1, Range of values is 0 to 0
 33433                           ; switch strategies available:
 33434                           ; Name         Instructions Cycles
 33435                           ; simple_byte            4     3 (average)
 33436                           ;	Chosen strategy is simple_byte
 33437   010262  51CA               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 33438   010264  0A00               	xorlw	0	; case 0
 33439   010266  A4D8               	btfss	status,2,c
 33440   010268  D007               	goto	l10603
 33441                           
 33442                           ; BSR set to: 5
 33443                           ; Switch size 1, requested type "simple"
 33444                           ; Number of cases is 2, Range of values is 13 to 118
 33445                           ; switch strategies available:
 33446                           ; Name         Instructions Cycles
 33447                           ; simple_byte            7     4 (average)
 33448                           ;	Chosen strategy is simple_byte
 33449   01026A  51C9               	movf	??_mnsProcessMessage& (0+255),w,b
 33450   01026C  0A0D               	xorlw	13	; case 13
 33451   01026E  B4D8               	btfsc	status,2,c
 33452   010270  D79A               	goto	l10551
 33453   010272  0A7B               	xorlw	123	; case 118
 33454   010274  B4D8               	btfsc	status,2,c
 33455   010276  D7A6               	goto	l10557
 33456   010278                     l10603:
 33457                           
 33458                           ; BSR set to: 5
 33459                           ;../../VLCBlib_PIC/mns.c: 447:     if (m->len < 3) {
 33460   010278  C553  F4D9         	movff	mnsProcessMessage@m,fsr2l
 33461   01027C  C554  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 33462   010280  0E03               	movlw	3
 33463   010282  60DF               	cpfslt	indf2,c
 33464   010284  D001               	goto	l10609
 33465   010286  D78D               	goto	l10547
 33466   010288                     l10609:
 33467                           
 33468                           ; BSR set to: 5
 33469                           ;../../VLCBlib_PIC/mns.c: 451:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 33470   010288  EE20 F002          	lfsr	2,2
 33471   01028C  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33472   01028E  26D9               	addwf	fsr2l,f,c
 33473   010290  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33474   010292  22DA               	addwfc	fsr2h,f,c
 33475   010294  50DE               	movf	postinc2,w,c
 33476   010296  185F               	xorwf	(_nn+1)^(0+1280),w,c
 33477   010298  A4D8               	btfss	status,2,c
 33478   01029A  D783               	goto	l10547
 33479                           
 33480                           ; BSR set to: 5
 33481                           ;../../VLCBlib_PIC/mns.c: 452:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 33482   01029C  EE20 F003          	lfsr	2,3
 33483   0102A0  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33484   0102A2  26D9               	addwf	fsr2l,f,c
 33485   0102A4  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33486   0102A6  22DA               	addwfc	fsr2h,f,c
 33487   0102A8  505E               	movf	_nn^(0+1280),w,c
 33488   0102AA  18DE               	xorwf	postinc2,w,c
 33489   0102AC  A4D8               	btfss	status,2,c
 33490   0102AE  D779               	goto	l10547
 33491   0102B0  EF67  F085         	goto	l10823
 33492   0102B4                     l10621:
 33493                           
 33494                           ; BSR set to: 5
 33495                           ;../../VLCBlib_PIC/mns.c: 456:             if (m->len < 4) {
 33496   0102B4  C553  F4D9         	movff	mnsProcessMessage@m,fsr2l
 33497   0102B8  C554  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 33498   0102BC  0E04               	movlw	4
 33499   0102BE  60DF               	cpfslt	indf2,c
 33500   0102C0  D00E               	goto	l10629
 33501                           
 33502                           ; BSR set to: 5
 33503                           ;../../VLCBlib_PIC/mns.c: 458:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 33504   0102C2  C55F  F525         	movff	_nn+1,sendMessage5@data1
 33505   0102C6  C55E  F526         	movff	_nn,sendMessage5@data2
 33506   0102CA  0E73               	movlw	115
 33507   0102CC  6E27               	movwf	sendMessage5@data3^(0+1280),c
 33508   0102CE  0E01               	movlw	1
 33509   0102D0  6E28               	movwf	sendMessage5@data4^(0+1280),c
 33510   0102D2  0E01               	movlw	1
 33511   0102D4  6E29               	movwf	sendMessage5@data5^(0+1280),c
 33512   0102D6  0EAF               	movlw	175
 33513   0102D8  EC36  F0B1         	call	_sendMessage5
 33514   0102DC  D6E2               	goto	l10521
 33515   0102DE                     l10629:
 33516                           
 33517                           ; BSR set to: 5
 33518                           ;../../VLCBlib_PIC/mns.c: 462:             if (m->bytes[2] > 20) {
 33519   0102DE  EE20 F004          	lfsr	2,4
 33520   0102E2  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33521   0102E4  26D9               	addwf	fsr2l,f,c
 33522   0102E6  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33523   0102E8  22DA               	addwfc	fsr2h,f,c
 33524   0102EA  0E14               	movlw	20
 33525   0102EC  64DF               	cpfsgt	indf2,c
 33526   0102EE  D017               	goto	l10637
 33527                           
 33528                           ; BSR set to: 5
 33529                           ;../../VLCBlib_PIC/mns.c: 463:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 33530   0102F0  C55F  F525         	movff	_nn+1,sendMessage3@data1
 33531   0102F4  C55E  F526         	movff	_nn,sendMessage3@data2
 33532   0102F8  0E09               	movlw	9
 33533   0102FA  6E27               	movwf	sendMessage3@data3^(0+1280),c
 33534   0102FC  0E6F               	movlw	111
 33535   0102FE  ECF7  F0B0         	call	_sendMessage3
 33536                           
 33537                           ;../../VLCBlib_PIC/mns.c: 465:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 33538   010302  C55F  F525         	movff	_nn+1,sendMessage5@data1
 33539   010306  C55E  F526         	movff	_nn,sendMessage5@data2
 33540   01030A  0E73               	movlw	115
 33541   01030C  6E27               	movwf	sendMessage5@data3^(0+1280),c
 33542   01030E  0E01               	movlw	1
 33543   010310  6E28               	movwf	sendMessage5@data4^(0+1280),c
 33544   010312  0E09               	movlw	9
 33545   010314  6E29               	movwf	sendMessage5@data5^(0+1280),c
 33546   010316  0EAF               	movlw	175
 33547   010318  EC36  F0B1         	call	_sendMessage5
 33548   01031C  D6C2               	goto	l10521
 33549   01031E                     l10637:
 33550                           
 33551                           ; BSR set to: 5
 33552                           ;../../VLCBlib_PIC/mns.c: 469:             i = getParameter(m->bytes[2]);
 33553   01031E  EE20 F004          	lfsr	2,4
 33554   010322  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33555   010324  26D9               	addwf	fsr2l,f,c
 33556   010326  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33557   010328  22DA               	addwfc	fsr2h,f,c
 33558   01032A  50DF               	movf	indf2,w,c
 33559   01032C  ECDA  F09B         	call	_getParameter
 33560   010330  6E55               	movwf	mnsProcessMessage@i^(0+1280),c
 33561                           
 33562                           ;../../VLCBlib_PIC/mns.c: 470:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 33563   010332  C55F  F525         	movff	_nn+1,sendMessage4@data1
 33564   010336  C55E  F526         	movff	_nn,sendMessage4@data2
 33565   01033A  EE20 F004          	lfsr	2,4
 33566   01033E  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33567   010340  26D9               	addwf	fsr2l,f,c
 33568   010342  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33569   010344  22DA               	addwfc	fsr2h,f,c
 33570   010346  50DF               	movf	indf2,w,c
 33571   010348  6E27               	movwf	sendMessage4@data3^(0+1280),c
 33572   01034A  C555  F528         	movff	mnsProcessMessage@i,sendMessage4@data4
 33573   01034E  0E9B               	movlw	155
 33574   010350  EC4B  F0B1         	call	_sendMessage4
 33575                           
 33576                           ;../../VLCBlib_PIC/mns.c: 472:             if (((mode_flags & 8) == 0) && (m->bytes[2] =
      +                          = 0)) {
 33577   010354  0105               	movlb	5	; () banked
 33578   010356  B79F               	btfsc	_mode_flags& (0+255),3,b
 33579   010358  D6A4               	goto	l10521
 33580                           
 33581                           ; BSR set to: 5
 33582   01035A  EE20 F004          	lfsr	2,4
 33583   01035E  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33584   010360  26D9               	addwf	fsr2l,f,c
 33585   010362  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33586   010364  22DA               	addwfc	fsr2h,f,c
 33587   010366  50DF               	movf	indf2,w,c
 33588   010368  A4D8               	btfss	status,2,c
 33589   01036A  D69B               	goto	l10521
 33590                           
 33591                           ; BSR set to: 5
 33592                           ;../../VLCBlib_PIC/mns.c: 473:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 33593   01036C  0E01               	movlw	1
 33594   01036E  EC02  F0A8         	call	_findServiceIndex
 33595   010372  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 33596   010374  0EC0               	movlw	low _mnsTRrqnpnCallback
 33597   010376  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 33598   010378  0E62               	movlw	high _mnsTRrqnpnCallback
 33599   01037A  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 33600   01037C  0E01               	movlw	low (_mnsTRrqnpnCallback shr (0+16))
 33601   01037E  6E08               	movwf	(startTimedResponse@callback+2)^(0+1280),c
 33602   010380  0E07               	movlw	7
 33603   010382  ECD0  F0AE         	call	_startTimedResponse
 33604   010386  D68D               	goto	l10521
 33605   010388                     l1580:
 33606                           
 33607                           ; BSR set to: 5
 33608                           ;../../VLCBlib_PIC/mns.c: 478:             previousNN.word = nn.word;
 33609   010388  C55E  F57E         	movff	_nn,_previousNN
 33610   01038C  C55F  F57F         	movff	_nn+1,_previousNN+1
 33611                           
 33612                           ; BSR set to: 5
 33613                           ;../../VLCBlib_PIC/mns.c: 479:             factoryReset();
 33614   010390  ECD4  F09D         	call	_factoryReset	;wreg free
 33615                           
 33616                           ;../../VLCBlib_PIC/mns.c: 480:             if (previousNN.word != 0) {
 33617   010394  0105               	movlb	5	; () banked
 33618   010396  517E               	movf	_previousNN& (0+255),w,b
 33619   010398  117F               	iorwf	(_previousNN+1)& (0+255),w,b
 33620   01039A  B4D8               	btfsc	status,2,c
 33621   01039C  D007               	goto	l1581
 33622                           
 33623                           ; BSR set to: 5
 33624                           ;../../VLCBlib_PIC/mns.c: 481:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 33625   01039E  C57F  F525         	movff	_previousNN+1,sendMessage2@data1
 33626   0103A2  C57E  F526         	movff	_previousNN,sendMessage2@data2
 33627   0103A6  0E51               	movlw	81
 33628   0103A8  EC0C  F0B1         	call	_sendMessage2
 33629   0103AC                     l1581:
 33630   0103AC  00FF               	reset		;# 
 33631   0103AE                     l10657:
 33632                           
 33633                           ;../../VLCBlib_PIC/mns.c: 486:             if (m->len < 5) {
 33634   0103AE  C553  F4D9         	movff	mnsProcessMessage@m,fsr2l
 33635   0103B2  C554  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 33636   0103B6  0E05               	movlw	5
 33637   0103B8  60DF               	cpfslt	indf2,c
 33638   0103BA  D00E               	goto	l10665
 33639                           
 33640                           ;../../VLCBlib_PIC/mns.c: 487:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 33641   0103BC  C55F  F525         	movff	_nn+1,sendMessage5@data1
 33642   0103C0  C55E  F526         	movff	_nn,sendMessage5@data2
 33643   0103C4  0E87               	movlw	135
 33644   0103C6  6E27               	movwf	sendMessage5@data3^(0+1280),c
 33645   0103C8  0E01               	movlw	1
 33646   0103CA  6E28               	movwf	sendMessage5@data4^(0+1280),c
 33647   0103CC  0E01               	movlw	1
 33648   0103CE  6E29               	movwf	sendMessage5@data5^(0+1280),c
 33649   0103D0  0EAF               	movlw	175
 33650   0103D2  EC36  F0B1         	call	_sendMessage5
 33651   0103D6  D665               	goto	l10521
 33652   0103D8                     l10665:
 33653                           
 33654                           ;../../VLCBlib_PIC/mns.c: 490:             if (m->bytes[2] == 0) {
 33655   0103D8  EE20 F004          	lfsr	2,4
 33656   0103DC  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33657   0103DE  26D9               	addwf	fsr2l,f,c
 33658   0103E0  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33659   0103E2  22DA               	addwfc	fsr2h,f,c
 33660   0103E4  50DF               	movf	indf2,w,c
 33661   0103E6  A4D8               	btfss	status,2,c
 33662   0103E8  D00C               	goto	l10669
 33663                           
 33664                           ;../../VLCBlib_PIC/mns.c: 492:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 33665   0103EA  0E00               	movlw	0
 33666   0103EC  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 33667   0103EE  0EC8               	movlw	low _mnsTRallDiagnosticsCallback
 33668   0103F0  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 33669   0103F2  0E38               	movlw	high _mnsTRallDiagnosticsCallback
 33670   0103F4  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 33671   0103F6  0E01               	movlw	low (_mnsTRallDiagnosticsCallback shr (0+16))
 33672   0103F8  6E08               	movwf	(startTimedResponse@callback+2)^(0+1280),c
 33673   0103FA  0E04               	movlw	4
 33674   0103FC  ECD0  F0AE         	call	_startTimedResponse
 33675                           
 33676                           ;../../VLCBlib_PIC/mns.c: 493:             } else {
 33677   010400  D650               	goto	l10521
 33678   010402                     l10669:
 33679                           
 33680                           ;../../VLCBlib_PIC/mns.c: 495:                 if (m->bytes[2] > 8) {
 33681   010402  EE20 F004          	lfsr	2,4
 33682   010406  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33683   010408  26D9               	addwf	fsr2l,f,c
 33684   01040A  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33685   01040C  22DA               	addwfc	fsr2h,f,c
 33686   01040E  0E08               	movlw	8
 33687   010410  64DF               	cpfsgt	indf2,c
 33688   010412  D00E               	goto	l10677
 33689                           
 33690                           ;../../VLCBlib_PIC/mns.c: 496:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 33691   010414  C55F  F525         	movff	_nn+1,sendMessage5@data1
 33692   010418  C55E  F526         	movff	_nn,sendMessage5@data2
 33693   01041C  0E87               	movlw	135
 33694   01041E  6E27               	movwf	sendMessage5@data3^(0+1280),c
 33695   010420  0E01               	movlw	1
 33696   010422  6E28               	movwf	sendMessage5@data4^(0+1280),c
 33697   010424  0EFC               	movlw	252
 33698   010426  6E29               	movwf	sendMessage5@data5^(0+1280),c
 33699   010428  0EAF               	movlw	175
 33700   01042A  EC36  F0B1         	call	_sendMessage5
 33701   01042E  D639               	goto	l10521
 33702   010430                     l10677:
 33703                           
 33704                           ;../../VLCBlib_PIC/mns.c: 499:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 33705   010430  EE20 F004          	lfsr	2,4
 33706   010434  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33707   010436  26D9               	addwf	fsr2l,f,c
 33708   010438  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33709   01043A  22DA               	addwfc	fsr2h,f,c
 33710   01043C  50DF               	movf	indf2,w,c
 33711   01043E  0105               	movlb	5	; () banked
 33712   010440  6FC9               	movwf	??_mnsProcessMessage& (0+255),b
 33713   010442  6BCA               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 33714   010444  90D8               	bcf	status,0,c
 33715   010446  37C9               	rlcf	??_mnsProcessMessage& (0+255),f,b
 33716   010448  37CA               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 33717   01044A  0EFE               	movlw	254
 33718   01044C  25C9               	addwf	??_mnsProcessMessage& (0+255),w,b
 33719   01044E  6FCB               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 33720   010450  0EFF               	movlw	255
 33721   010452  21CA               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 33722   010454  6FCC               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 33723   010456  0E39               	movlw	low _services
 33724   010458  25CB               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 33725   01045A  6EF6               	movwf	tblptrl,c
 33726   01045C  0EFF               	movlw	high _services
 33727   01045E  21CC               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 33728   010460  6EF7               	movwf	tblptrh,c
 33729   010462                     	if	1	;There are 3 active tblptr bytes
 33730   010462  6AF8               	clrf	tblptru,c
 33731   010464  0E00               	movlw	low (__pmediumconst shr (0+16))
 33732   010466  22F8               	addwfc	tblptru,f,c
 33733   010468                     	endif
 33734   010468  0009               	tblrd		*+
 33735   01046A  C4F5 F5CD          	movff	tablat,??_mnsProcessMessage+4
 33736   01046E  0009               	tblrd		*+
 33737   010470  C4F5 F5CE          	movff	tablat,??_mnsProcessMessage+5
 33738   010474  0E11               	movlw	17
 33739   010476  27CD               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 33740   010478  0E00               	movlw	0
 33741   01047A  23CE               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 33742   01047C  C5CD  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 33743   010480  C5CE  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 33744   010484                     	if	0	;tblptru may be non-zero
 33745   010484                     	endif
 33746   010484                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33747   010484  0E00               	movlw	low (__pmediumconst shr (0+16))
 33748   010486  6EF8               	movwf	tblptru,c
 33749   010488                     	endif
 33750   010488  0009               	tblrd		*+
 33751   01048A  50F5               	movf	tablat,w,c
 33752   01048C  0009               	tblrd		*+
 33753   01048E  10F5               	iorwf	tablat,w,c
 33754   010490  0009               	tblrd		*+
 33755   010492  10F5               	iorwf	tablat,w,c
 33756   010494  A4D8               	btfss	status,2,c
 33757   010496  D013               	goto	l10681
 33758                           
 33759                           ; BSR set to: 5
 33760                           ;../../VLCBlib_PIC/mns.c: 501:                     sendMessage5(OPC_DGN, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_RDGN, m->bytes[2], 0);
 33761   010498  C55F  F525         	movff	_nn+1,sendMessage5@data1
 33762   01049C  C55E  F526         	movff	_nn,sendMessage5@data2
 33763   0104A0  0E87               	movlw	135
 33764   0104A2  6E27               	movwf	sendMessage5@data3^(0+1280),c
 33765   0104A4  EE20 F004          	lfsr	2,4
 33766   0104A8  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33767   0104AA  26D9               	addwf	fsr2l,f,c
 33768   0104AC  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33769   0104AE  22DA               	addwfc	fsr2h,f,c
 33770   0104B0  50DF               	movf	indf2,w,c
 33771   0104B2  6E28               	movwf	sendMessage5@data4^(0+1280),c
 33772   0104B4  0E00               	movlw	0
 33773   0104B6  6E29               	movwf	sendMessage5@data5^(0+1280),c
 33774   0104B8  0EC7               	movlw	199
 33775   0104BA  EC36  F0B1         	call	_sendMessage5
 33776   0104BE                     l10681:
 33777                           
 33778                           ;../../VLCBlib_PIC/mns.c: 503:                 if (m->bytes[3] == 0) {
 33779   0104BE  EE20 F005          	lfsr	2,5
 33780   0104C2  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33781   0104C4  26D9               	addwf	fsr2l,f,c
 33782   0104C6  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33783   0104C8  22DA               	addwfc	fsr2h,f,c
 33784   0104CA  50DF               	movf	indf2,w,c
 33785   0104CC  A4D8               	btfss	status,2,c
 33786   0104CE  D012               	goto	l10691
 33787                           
 33788                           ;../../VLCBlib_PIC/mns.c: 505:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 33789   0104D0  EE20 F004          	lfsr	2,4
 33790   0104D4  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33791   0104D6  26D9               	addwf	fsr2l,f,c
 33792   0104D8  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33793   0104DA  22DA               	addwfc	fsr2h,f,c
 33794   0104DC  50DF               	movf	indf2,w,c
 33795   0104DE  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 33796   0104E0  0EC8               	movlw	low _mnsTRallDiagnosticsCallback
 33797   0104E2  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 33798   0104E4  0E38               	movlw	high _mnsTRallDiagnosticsCallback
 33799   0104E6  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 33800   0104E8  0E01               	movlw	low (_mnsTRallDiagnosticsCallback shr (0+16))
 33801   0104EA  6E08               	movwf	(startTimedResponse@callback+2)^(0+1280),c
 33802   0104EC  0E04               	movlw	4
 33803   0104EE  ECD0  F0AE         	call	_startTimedResponse
 33804   0104F2  D5D7               	goto	l10521
 33805   0104F4                     l10691:
 33806                           
 33807                           ;../../VLCBlib_PIC/mns.c: 508:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 33808   0104F4  EE20 F004          	lfsr	2,4
 33809   0104F8  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33810   0104FA  26D9               	addwf	fsr2l,f,c
 33811   0104FC  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33812   0104FE  22DA               	addwfc	fsr2h,f,c
 33813   010500  50DF               	movf	indf2,w,c
 33814   010502  0105               	movlb	5	; () banked
 33815   010504  6FC9               	movwf	??_mnsProcessMessage& (0+255),b
 33816   010506  6BCA               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 33817   010508  90D8               	bcf	status,0,c
 33818   01050A  37C9               	rlcf	??_mnsProcessMessage& (0+255),f,b
 33819   01050C  37CA               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 33820   01050E  0EFE               	movlw	254
 33821   010510  25C9               	addwf	??_mnsProcessMessage& (0+255),w,b
 33822   010512  6FCB               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 33823   010514  0EFF               	movlw	255
 33824   010516  21CA               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 33825   010518  6FCC               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 33826   01051A  0E39               	movlw	low _services
 33827   01051C  25CB               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 33828   01051E  6EF6               	movwf	tblptrl,c
 33829   010520  0EFF               	movlw	high _services
 33830   010522  21CC               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 33831   010524  6EF7               	movwf	tblptrh,c
 33832   010526                     	if	1	;There are 3 active tblptr bytes
 33833   010526  6AF8               	clrf	tblptru,c
 33834   010528  0E00               	movlw	low (__pmediumconst shr (0+16))
 33835   01052A  22F8               	addwfc	tblptru,f,c
 33836   01052C                     	endif
 33837   01052C  0009               	tblrd		*+
 33838   01052E  C4F5 F5CD          	movff	tablat,??_mnsProcessMessage+4
 33839   010532  0009               	tblrd		*+
 33840   010534  C4F5 F5CE          	movff	tablat,??_mnsProcessMessage+5
 33841   010538  0E11               	movlw	17
 33842   01053A  27CD               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 33843   01053C  0E00               	movlw	0
 33844   01053E  23CE               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 33845   010540  C5CD  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 33846   010544  C5CE  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 33847   010548                     	if	0	;tblptru may be non-zero
 33848   010548                     	endif
 33849   010548                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33850   010548  0E00               	movlw	low (__pmediumconst shr (0+16))
 33851   01054A  6EF8               	movwf	tblptru,c
 33852   01054C                     	endif
 33853   01054C  D801               	call	u8788
 33854   01054E  D014               	goto	u8789
 33855   010550                     u8788:
 33856   010550  0005               	push	
 33857   010552  6EFA               	movwf	pclath,c
 33858   010554  0009               	tblrd		*+
 33859   010556  50F5               	movf	tablat,w,c
 33860   010558  6EFD               	movwf	tosl,c
 33861   01055A  0009               	tblrd		*+
 33862   01055C  50F5               	movf	tablat,w,c
 33863   01055E  6EFE               	movwf	tosh,c
 33864   010560  0009               	tblrd		*+
 33865   010562  50F5               	movf	tablat,w,c
 33866   010564  6EFF               	movwf	tosu,c
 33867   010566  50FA               	movf	pclath,w,c
 33868   010568  EE20 F005          	lfsr	2,5
 33869   01056C  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33870   01056E  26D9               	addwf	fsr2l,f,c
 33871   010570  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33872   010572  22DA               	addwfc	fsr2h,f,c
 33873   010574  50DF               	movf	indf2,w,c
 33874   010576  0012               	return		;indir
 33875   010578                     u8789:
 33876   010578  C507  F557         	movff	?_producerGetDiagnostic,mnsProcessMessage@d
 33877   01057C  C508  F558         	movff	?_producerGetDiagnostic+1,mnsProcessMessage@d+1
 33878                           
 33879                           ;../../VLCBlib_PIC/mns.c: 509:                     if (d == ((void*)0)) {
 33880   010580  5057               	movf	mnsProcessMessage@d^(0+1280),w,c
 33881   010582  1058               	iorwf	(mnsProcessMessage@d+1)^(0+1280),w,c
 33882   010584  A4D8               	btfss	status,2,c
 33883   010586  D00E               	goto	l10697
 33884                           
 33885                           ;../../VLCBlib_PIC/mns.c: 511:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 33886   010588  C55F  F525         	movff	_nn+1,sendMessage5@data1
 33887   01058C  C55E  F526         	movff	_nn,sendMessage5@data2
 33888   010590  0E87               	movlw	135
 33889   010592  6E27               	movwf	sendMessage5@data3^(0+1280),c
 33890   010594  0E01               	movlw	1
 33891   010596  6E28               	movwf	sendMessage5@data4^(0+1280),c
 33892   010598  0EFD               	movlw	253
 33893   01059A  6E29               	movwf	sendMessage5@data5^(0+1280),c
 33894   01059C  0EAF               	movlw	175
 33895   01059E  EC36  F0B1         	call	_sendMessage5
 33896                           
 33897                           ;../../VLCBlib_PIC/mns.c: 512:                     } else {
 33898   0105A2  D57F               	goto	l10521
 33899   0105A4                     l10697:
 33900                           
 33901                           ;../../VLCBlib_PIC/mns.c: 514:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 33902   0105A4  C55F  F525         	movff	_nn+1,sendMessage6@data1
 33903   0105A8  C55E  F526         	movff	_nn,sendMessage6@data2
 33904   0105AC  EE20 F004          	lfsr	2,4
 33905   0105B0  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33906   0105B2  26D9               	addwf	fsr2l,f,c
 33907   0105B4  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33908   0105B6  22DA               	addwfc	fsr2h,f,c
 33909   0105B8  50DF               	movf	indf2,w,c
 33910   0105BA  6E27               	movwf	sendMessage6@data3^(0+1280),c
 33911   0105BC  EE20 F005          	lfsr	2,5
 33912   0105C0  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33913   0105C2  26D9               	addwf	fsr2l,f,c
 33914   0105C4  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33915   0105C6  22DA               	addwfc	fsr2h,f,c
 33916   0105C8  50DF               	movf	indf2,w,c
 33917   0105CA  6E28               	movwf	sendMessage6@data4^(0+1280),c
 33918   0105CC  EE20 F001          	lfsr	2,1
 33919   0105D0  5057               	movf	mnsProcessMessage@d^(0+1280),w,c
 33920   0105D2  26D9               	addwf	fsr2l,f,c
 33921   0105D4  5058               	movf	(mnsProcessMessage@d+1)^(0+1280),w,c
 33922   0105D6  22DA               	addwfc	fsr2h,f,c
 33923   0105D8  50DF               	movf	indf2,w,c
 33924   0105DA  6E29               	movwf	sendMessage6@data5^(0+1280),c
 33925   0105DC  C557  F4D9         	movff	mnsProcessMessage@d,fsr2l
 33926   0105E0  C558  F4DA         	movff	mnsProcessMessage@d+1,fsr2h
 33927   0105E4  50DF               	movf	indf2,w,c
 33928   0105E6  6E2A               	movwf	sendMessage6@data6^(0+1280),c
 33929   0105E8  0EC7               	movlw	199
 33930   0105EA  ECE2  F0B0         	call	_sendMessage6
 33931   0105EE  D559               	goto	l10521
 33932   0105F0                     l10703:
 33933                           
 33934                           ; BSR set to: 5
 33935                           ;../../VLCBlib_PIC/mns.c: 522:             if (m->len < 4) {
 33936   0105F0  C553  F4D9         	movff	mnsProcessMessage@m,fsr2l
 33937   0105F4  C554  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 33938   0105F8  0E04               	movlw	4
 33939   0105FA  60DF               	cpfslt	indf2,c
 33940   0105FC  D00E               	goto	l10711
 33941                           
 33942                           ; BSR set to: 5
 33943                           ;../../VLCBlib_PIC/mns.c: 523:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 33944   0105FE  C55F  F525         	movff	_nn+1,sendMessage5@data1
 33945   010602  C55E  F526         	movff	_nn,sendMessage5@data2
 33946   010606  0E78               	movlw	120
 33947   010608  6E27               	movwf	sendMessage5@data3^(0+1280),c
 33948   01060A  0E01               	movlw	1
 33949   01060C  6E28               	movwf	sendMessage5@data4^(0+1280),c
 33950   01060E  0E01               	movlw	1
 33951   010610  6E29               	movwf	sendMessage5@data5^(0+1280),c
 33952   010612  0EAF               	movlw	175
 33953   010614  EC36  F0B1         	call	_sendMessage5
 33954   010618  D544               	goto	l10521
 33955   01061A                     l10711:
 33956                           
 33957                           ; BSR set to: 5
 33958                           ;../../VLCBlib_PIC/mns.c: 526:             if (m->bytes[2] == 0) {
 33959   01061A  EE20 F004          	lfsr	2,4
 33960   01061E  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 33961   010620  26D9               	addwf	fsr2l,f,c
 33962   010622  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 33963   010624  22DA               	addwfc	fsr2h,f,c
 33964   010626  50DF               	movf	indf2,w,c
 33965   010628  A4D8               	btfss	status,2,c
 33966   01062A  D019               	goto	l10717
 33967                           
 33968                           ; BSR set to: 5
 33969                           ;../../VLCBlib_PIC/mns.c: 528:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 8);
 33970   01062C  C55F  F525         	movff	_nn+1,sendMessage5@data1
 33971   010630  C55E  F526         	movff	_nn,sendMessage5@data2
 33972   010634  0E00               	movlw	0
 33973   010636  6E27               	movwf	sendMessage5@data3^(0+1280),c
 33974   010638  0E00               	movlw	0
 33975   01063A  6E28               	movwf	sendMessage5@data4^(0+1280),c
 33976   01063C  0E08               	movlw	8
 33977   01063E  6E29               	movwf	sendMessage5@data5^(0+1280),c
 33978   010640  0EAC               	movlw	172
 33979   010642  EC36  F0B1         	call	_sendMessage5
 33980                           
 33981                           ;../../VLCBlib_PIC/mns.c: 530:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 33982   010646  0E01               	movlw	1
 33983   010648  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 33984   01064A  0E86               	movlw	low _mnsTRserviceDiscoveryCallback
 33985   01064C  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 33986   01064E  0E47               	movlw	high _mnsTRserviceDiscoveryCallback
 33987   010650  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 33988   010652  0E01               	movlw	low (_mnsTRserviceDiscoveryCallback shr (0+16))
 33989   010654  6E08               	movwf	(startTimedResponse@callback+2)^(0+1280),c
 33990   010656  0E03               	movlw	3
 33991   010658  ECD0  F0AE         	call	_startTimedResponse
 33992                           
 33993                           ;../../VLCBlib_PIC/mns.c: 531:             } else if (m->bytes[2] > 8) {
 33994   01065C  D522               	goto	l10521
 33995   01065E                     l10717:
 33996                           
 33997                           ; BSR set to: 5
 33998   01065E  EE20 F004          	lfsr	2,4
 33999   010662  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34000   010664  26D9               	addwf	fsr2l,f,c
 34001   010666  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34002   010668  22DA               	addwfc	fsr2h,f,c
 34003   01066A  0E08               	movlw	8
 34004   01066C  64DF               	cpfsgt	indf2,c
 34005   01066E  D00E               	goto	l10727
 34006                           
 34007                           ; BSR set to: 5
 34008                           ;../../VLCBlib_PIC/mns.c: 532:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 34009   010670  C55F  F525         	movff	_nn+1,sendMessage5@data1
 34010   010674  C55E  F526         	movff	_nn,sendMessage5@data2
 34011   010678  0E78               	movlw	120
 34012   01067A  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34013   01067C  0E01               	movlw	1
 34014   01067E  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34015   010680  0EFC               	movlw	252
 34016   010682  6E29               	movwf	sendMessage5@data5^(0+1280),c
 34017   010684  0EAF               	movlw	175
 34018   010686  EC36  F0B1         	call	_sendMessage5
 34019   01068A  D50B               	goto	l10521
 34020   01068C                     l10727:
 34021                           
 34022                           ; BSR set to: 5
 34023                           ;../../VLCBlib_PIC/mns.c: 536:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 34024   01068C  EE20 F004          	lfsr	2,4
 34025   010690  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34026   010692  26D9               	addwf	fsr2l,f,c
 34027   010694  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34028   010696  22DA               	addwfc	fsr2h,f,c
 34029   010698  50DF               	movf	indf2,w,c
 34030   01069A  6FC9               	movwf	??_mnsProcessMessage& (0+255),b
 34031   01069C  6BCA               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 34032   01069E  90D8               	bcf	status,0,c
 34033   0106A0  37C9               	rlcf	??_mnsProcessMessage& (0+255),f,b
 34034   0106A2  37CA               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 34035   0106A4  0EFE               	movlw	254
 34036   0106A6  25C9               	addwf	??_mnsProcessMessage& (0+255),w,b
 34037   0106A8  6FCB               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 34038   0106AA  0EFF               	movlw	255
 34039   0106AC  21CA               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 34040   0106AE  6FCC               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 34041   0106B0  0E39               	movlw	low _services
 34042   0106B2  25CB               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 34043   0106B4  6EF6               	movwf	tblptrl,c
 34044   0106B6  0EFF               	movlw	high _services
 34045   0106B8  21CC               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 34046   0106BA  6EF7               	movwf	tblptrh,c
 34047   0106BC                     	if	1	;There are 3 active tblptr bytes
 34048   0106BC  6AF8               	clrf	tblptru,c
 34049   0106BE  0E00               	movlw	low (__pmediumconst shr (0+16))
 34050   0106C0  22F8               	addwfc	tblptru,f,c
 34051   0106C2                     	endif
 34052   0106C2  0009               	tblrd		*+
 34053   0106C4  C4F5 F5CD          	movff	tablat,??_mnsProcessMessage+4
 34054   0106C8  0009               	tblrd		*+
 34055   0106CA  C4F5 F5CE          	movff	tablat,??_mnsProcessMessage+5
 34056   0106CE  0E0E               	movlw	14
 34057   0106D0  27CD               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 34058   0106D2  0E00               	movlw	0
 34059   0106D4  23CE               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 34060   0106D6  C5CD  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 34061   0106DA  C5CE  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 34062   0106DE                     	if	0	;tblptru may be non-zero
 34063   0106DE                     	endif
 34064   0106DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34065   0106DE  0E00               	movlw	low (__pmediumconst shr (0+16))
 34066   0106E0  6EF8               	movwf	tblptru,c
 34067   0106E2                     	endif
 34068   0106E2  0009               	tblrd		*+
 34069   0106E4  50F5               	movf	tablat,w,c
 34070   0106E6  0009               	tblrd		*+
 34071   0106E8  10F5               	iorwf	tablat,w,c
 34072   0106EA  0009               	tblrd		*+
 34073   0106EC  10F5               	iorwf	tablat,w,c
 34074   0106EE  A4D8               	btfss	status,2,c
 34075   0106F0  D040               	goto	l10731
 34076                           
 34077                           ; BSR set to: 5
 34078                           ;../../VLCBlib_PIC/mns.c: 537:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 34079   0106F2  C55F  F525         	movff	_nn+1,sendMessage7@data1
 34080   0106F6  C55E  F526         	movff	_nn,sendMessage7@data2
 34081   0106FA  EE20 F004          	lfsr	2,4
 34082   0106FE  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34083   010700  26D9               	addwf	fsr2l,f,c
 34084   010702  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34085   010704  22DA               	addwfc	fsr2h,f,c
 34086   010706  50DF               	movf	indf2,w,c
 34087   010708  6E27               	movwf	sendMessage7@data3^(0+1280),c
 34088   01070A  EE20 F004          	lfsr	2,4
 34089   01070E  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34090   010710  26D9               	addwf	fsr2l,f,c
 34091   010712  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34092   010714  22DA               	addwfc	fsr2h,f,c
 34093   010716  50DF               	movf	indf2,w,c
 34094   010718  6FC9               	movwf	??_mnsProcessMessage& (0+255),b
 34095   01071A  6BCA               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 34096   01071C  90D8               	bcf	status,0,c
 34097   01071E  37C9               	rlcf	??_mnsProcessMessage& (0+255),f,b
 34098   010720  37CA               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 34099   010722  0EFE               	movlw	254
 34100   010724  25C9               	addwf	??_mnsProcessMessage& (0+255),w,b
 34101   010726  6FCB               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 34102   010728  0EFF               	movlw	255
 34103   01072A  21CA               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 34104   01072C  6FCC               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 34105   01072E  0E39               	movlw	low _services
 34106   010730  25CB               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 34107   010732  6EF6               	movwf	tblptrl,c
 34108   010734  0EFF               	movlw	high _services
 34109   010736  21CC               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 34110   010738  6EF7               	movwf	tblptrh,c
 34111   01073A                     	if	1	;There are 3 active tblptr bytes
 34112   01073A  6AF8               	clrf	tblptru,c
 34113   01073C  0E00               	movlw	low (__pmediumconst shr (0+16))
 34114   01073E  22F8               	addwfc	tblptru,f,c
 34115   010740                     	endif
 34116   010740  0009               	tblrd		*+
 34117   010742  C4F5 F5CD          	movff	tablat,??_mnsProcessMessage+4
 34118   010746  0009               	tblrd		*+
 34119   010748  C4F5 F5CE          	movff	tablat,??_mnsProcessMessage+5
 34120   01074C  C5CD  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 34121   010750  C5CE  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 34122   010754                     	if	0	;tblptru may be non-zero
 34123   010754                     	endif
 34124   010754                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34125   010754  0E00               	movlw	low (__pmediumconst shr (0+16))
 34126   010756  6EF8               	movwf	tblptru,c
 34127   010758                     	endif
 34128   010758  0008               	tblrd		*
 34129   01075A  C4F5 F528          	movff	tablat,sendMessage7@data4
 34130   01075E  0E00               	movlw	0
 34131   010760  6E29               	movwf	sendMessage7@data5^(0+1280),c
 34132   010762  0E00               	movlw	0
 34133   010764  6E2A               	movwf	sendMessage7@data6^(0+1280),c
 34134   010766  0E00               	movlw	0
 34135   010768  6E2B               	movwf	sendMessage7@data7^(0+1280),c
 34136   01076A  0EE7               	movlw	231
 34137   01076C  EC21  F0B1         	call	_sendMessage7
 34138                           
 34139                           ;../../VLCBlib_PIC/mns.c: 538:                 } else {
 34140   010770  D498               	goto	l10521
 34141   010772                     l10731:
 34142                           
 34143                           ; BSR set to: 5
 34144                           ;../../VLCBlib_PIC/mns.c: 539:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 34145   010772  C55F  F525         	movff	_nn+1,sendMessage7@data1
 34146   010776  C55E  F526         	movff	_nn,sendMessage7@data2
 34147   01077A  EE20 F004          	lfsr	2,4
 34148   01077E  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34149   010780  26D9               	addwf	fsr2l,f,c
 34150   010782  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34151   010784  22DA               	addwfc	fsr2h,f,c
 34152   010786  50DF               	movf	indf2,w,c
 34153   010788  6E27               	movwf	sendMessage7@data3^(0+1280),c
 34154   01078A  EE20 F004          	lfsr	2,4
 34155   01078E  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34156   010790  26D9               	addwf	fsr2l,f,c
 34157   010792  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34158   010794  22DA               	addwfc	fsr2h,f,c
 34159   010796  50DF               	movf	indf2,w,c
 34160   010798  6FC9               	movwf	??_mnsProcessMessage& (0+255),b
 34161   01079A  6BCA               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 34162   01079C  90D8               	bcf	status,0,c
 34163   01079E  37C9               	rlcf	??_mnsProcessMessage& (0+255),f,b
 34164   0107A0  37CA               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 34165   0107A2  0EFE               	movlw	254
 34166   0107A4  25C9               	addwf	??_mnsProcessMessage& (0+255),w,b
 34167   0107A6  6FCB               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 34168   0107A8  0EFF               	movlw	255
 34169   0107AA  21CA               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 34170   0107AC  6FCC               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 34171   0107AE  0E39               	movlw	low _services
 34172   0107B0  25CB               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 34173   0107B2  6EF6               	movwf	tblptrl,c
 34174   0107B4  0EFF               	movlw	high _services
 34175   0107B6  21CC               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 34176   0107B8  6EF7               	movwf	tblptrh,c
 34177   0107BA                     	if	1	;There are 3 active tblptr bytes
 34178   0107BA  6AF8               	clrf	tblptru,c
 34179   0107BC  0E00               	movlw	low (__pmediumconst shr (0+16))
 34180   0107BE  22F8               	addwfc	tblptru,f,c
 34181   0107C0                     	endif
 34182   0107C0  0009               	tblrd		*+
 34183   0107C2  C4F5 F5CD          	movff	tablat,??_mnsProcessMessage+4
 34184   0107C6  0009               	tblrd		*+
 34185   0107C8  C4F5 F5CE          	movff	tablat,??_mnsProcessMessage+5
 34186   0107CC  C5CD  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 34187   0107D0  C5CE  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 34188   0107D4                     	if	0	;tblptru may be non-zero
 34189   0107D4                     	endif
 34190   0107D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34191   0107D4  0E00               	movlw	low (__pmediumconst shr (0+16))
 34192   0107D6  6EF8               	movwf	tblptru,c
 34193   0107D8                     	endif
 34194   0107D8  0008               	tblrd		*
 34195   0107DA  C4F5 F528          	movff	tablat,sendMessage7@data4
 34196   0107DE  EE20 F004          	lfsr	2,4
 34197   0107E2  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34198   0107E4  26D9               	addwf	fsr2l,f,c
 34199   0107E6  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34200   0107E8  22DA               	addwfc	fsr2h,f,c
 34201   0107EA  50DF               	movf	indf2,w,c
 34202   0107EC  6FCF               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 34203   0107EE  6BD0               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 34204   0107F0  90D8               	bcf	status,0,c
 34205   0107F2  37CF               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 34206   0107F4  37D0               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 34207   0107F6  0EFE               	movlw	254
 34208   0107F8  25CF               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 34209   0107FA  6FD1               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 34210   0107FC  0EFF               	movlw	255
 34211   0107FE  21D0               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 34212   010800  6FD2               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 34213   010802  0E39               	movlw	low _services
 34214   010804  25D1               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 34215   010806  6EF6               	movwf	tblptrl,c
 34216   010808  0EFF               	movlw	high _services
 34217   01080A  21D2               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 34218   01080C  6EF7               	movwf	tblptrh,c
 34219   01080E                     	if	1	;There are 3 active tblptr bytes
 34220   01080E  6AF8               	clrf	tblptru,c
 34221   010810  0E00               	movlw	low (__pmediumconst shr (0+16))
 34222   010812  22F8               	addwfc	tblptru,f,c
 34223   010814                     	endif
 34224   010814  0009               	tblrd		*+
 34225   010816  C4F5 F5D3          	movff	tablat,??_mnsProcessMessage+10
 34226   01081A  0009               	tblrd		*+
 34227   01081C  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+11
 34228   010820  0E0E               	movlw	14
 34229   010822  27D3               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 34230   010824  0E00               	movlw	0
 34231   010826  23D4               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 34232   010828  C5D3  F4F6         	movff	??_mnsProcessMessage+10,tblptrl
 34233   01082C  C5D4  F4F7         	movff	??_mnsProcessMessage+11,tblptrh
 34234   010830                     	if	0	;tblptru may be non-zero
 34235   010830                     	endif
 34236   010830                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34237   010830  0E00               	movlw	low (__pmediumconst shr (0+16))
 34238   010832  6EF8               	movwf	tblptru,c
 34239   010834                     	endif
 34240   010834  D801               	call	u8848
 34241   010836  D00E               	goto	u8849
 34242   010838                     u8848:
 34243   010838  0005               	push	
 34244   01083A  6EFA               	movwf	pclath,c
 34245   01083C  0009               	tblrd		*+
 34246   01083E  50F5               	movf	tablat,w,c
 34247   010840  6EFD               	movwf	tosl,c
 34248   010842  0009               	tblrd		*+
 34249   010844  50F5               	movf	tablat,w,c
 34250   010846  6EFE               	movwf	tosh,c
 34251   010848  0009               	tblrd		*+
 34252   01084A  50F5               	movf	tablat,w,c
 34253   01084C  6EFF               	movwf	tosu,c
 34254   01084E  50FA               	movf	pclath,w,c
 34255   010850  0E01               	movlw	1
 34256   010852  0012               	return		;indir
 34257   010854                     u8849:
 34258   010854  6E29               	movwf	sendMessage7@data5^(0+1280),c
 34259   010856  EE20 F004          	lfsr	2,4
 34260   01085A  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34261   01085C  26D9               	addwf	fsr2l,f,c
 34262   01085E  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34263   010860  22DA               	addwfc	fsr2h,f,c
 34264   010862  50DF               	movf	indf2,w,c
 34265   010864  0105               	movlb	5	; () banked
 34266   010866  6FD5               	movwf	(??_mnsProcessMessage+12)& (0+255),b
 34267   010868  6BD6               	clrf	(??_mnsProcessMessage+13)& (0+255),b
 34268   01086A  90D8               	bcf	status,0,c
 34269   01086C  37D5               	rlcf	(??_mnsProcessMessage+12)& (0+255),f,b
 34270   01086E  37D6               	rlcf	(??_mnsProcessMessage+13)& (0+255),f,b
 34271   010870  0EFE               	movlw	254
 34272   010872  25D5               	addwf	(??_mnsProcessMessage+12)& (0+255),w,b
 34273   010874  6FD7               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 34274   010876  0EFF               	movlw	255
 34275   010878  21D6               	addwfc	(??_mnsProcessMessage+13)& (0+255),w,b
 34276   01087A  6FD8               	movwf	(??_mnsProcessMessage+15)& (0+255),b
 34277   01087C  0E39               	movlw	low _services
 34278   01087E  25D7               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 34279   010880  6EF6               	movwf	tblptrl,c
 34280   010882  0EFF               	movlw	high _services
 34281   010884  21D8               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 34282   010886  6EF7               	movwf	tblptrh,c
 34283   010888                     	if	1	;There are 3 active tblptr bytes
 34284   010888  6AF8               	clrf	tblptru,c
 34285   01088A  0E00               	movlw	low (__pmediumconst shr (0+16))
 34286   01088C  22F8               	addwfc	tblptru,f,c
 34287   01088E                     	endif
 34288   01088E  0009               	tblrd		*+
 34289   010890  C4F5 F5D9          	movff	tablat,??_mnsProcessMessage+16
 34290   010894  0009               	tblrd		*+
 34291   010896  C4F5 F5DA          	movff	tablat,??_mnsProcessMessage+17
 34292   01089A  0E0E               	movlw	14
 34293   01089C  27D9               	addwf	(??_mnsProcessMessage+16)& (0+255),f,b
 34294   01089E  0E00               	movlw	0
 34295   0108A0  23DA               	addwfc	(??_mnsProcessMessage+17)& (0+255),f,b
 34296   0108A2  C5D9  F4F6         	movff	??_mnsProcessMessage+16,tblptrl
 34297   0108A6  C5DA  F4F7         	movff	??_mnsProcessMessage+17,tblptrh
 34298   0108AA                     	if	0	;tblptru may be non-zero
 34299   0108AA                     	endif
 34300   0108AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34301   0108AA  0E00               	movlw	low (__pmediumconst shr (0+16))
 34302   0108AC  6EF8               	movwf	tblptru,c
 34303   0108AE                     	endif
 34304   0108AE  D801               	call	u8858
 34305   0108B0  D00E               	goto	u8859
 34306   0108B2                     u8858:
 34307   0108B2  0005               	push	
 34308   0108B4  6EFA               	movwf	pclath,c
 34309   0108B6  0009               	tblrd		*+
 34310   0108B8  50F5               	movf	tablat,w,c
 34311   0108BA  6EFD               	movwf	tosl,c
 34312   0108BC  0009               	tblrd		*+
 34313   0108BE  50F5               	movf	tablat,w,c
 34314   0108C0  6EFE               	movwf	tosh,c
 34315   0108C2  0009               	tblrd		*+
 34316   0108C4  50F5               	movf	tablat,w,c
 34317   0108C6  6EFF               	movwf	tosu,c
 34318   0108C8  50FA               	movf	pclath,w,c
 34319   0108CA  0E02               	movlw	2
 34320   0108CC  0012               	return		;indir
 34321   0108CE                     u8859:
 34322   0108CE  6E2A               	movwf	sendMessage7@data6^(0+1280),c
 34323   0108D0  EE20 F004          	lfsr	2,4
 34324   0108D4  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34325   0108D6  26D9               	addwf	fsr2l,f,c
 34326   0108D8  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34327   0108DA  22DA               	addwfc	fsr2h,f,c
 34328   0108DC  50DF               	movf	indf2,w,c
 34329   0108DE  0105               	movlb	5	; () banked
 34330   0108E0  6FDB               	movwf	(??_mnsProcessMessage+18)& (0+255),b
 34331   0108E2  6BDC               	clrf	(??_mnsProcessMessage+19)& (0+255),b
 34332   0108E4  90D8               	bcf	status,0,c
 34333   0108E6  37DB               	rlcf	(??_mnsProcessMessage+18)& (0+255),f,b
 34334   0108E8  37DC               	rlcf	(??_mnsProcessMessage+19)& (0+255),f,b
 34335   0108EA  0EFE               	movlw	254
 34336   0108EC  25DB               	addwf	(??_mnsProcessMessage+18)& (0+255),w,b
 34337   0108EE  6FDD               	movwf	(??_mnsProcessMessage+20)& (0+255),b
 34338   0108F0  0EFF               	movlw	255
 34339   0108F2  21DC               	addwfc	(??_mnsProcessMessage+19)& (0+255),w,b
 34340   0108F4  6FDE               	movwf	(??_mnsProcessMessage+21)& (0+255),b
 34341   0108F6  0E39               	movlw	low _services
 34342   0108F8  25DD               	addwf	(??_mnsProcessMessage+20)& (0+255),w,b
 34343   0108FA  6EF6               	movwf	tblptrl,c
 34344   0108FC  0EFF               	movlw	high _services
 34345   0108FE  21DE               	addwfc	(??_mnsProcessMessage+21)& (0+255),w,b
 34346   010900  6EF7               	movwf	tblptrh,c
 34347   010902                     	if	1	;There are 3 active tblptr bytes
 34348   010902  6AF8               	clrf	tblptru,c
 34349   010904  0E00               	movlw	low (__pmediumconst shr (0+16))
 34350   010906  22F8               	addwfc	tblptru,f,c
 34351   010908                     	endif
 34352   010908  0009               	tblrd		*+
 34353   01090A  C4F5 F5DF          	movff	tablat,??_mnsProcessMessage+22
 34354   01090E  0009               	tblrd		*+
 34355   010910  C4F5 F5E0          	movff	tablat,??_mnsProcessMessage+23
 34356   010914  0E0E               	movlw	14
 34357   010916  27DF               	addwf	(??_mnsProcessMessage+22)& (0+255),f,b
 34358   010918  0E00               	movlw	0
 34359   01091A  23E0               	addwfc	(??_mnsProcessMessage+23)& (0+255),f,b
 34360   01091C  C5DF  F4F6         	movff	??_mnsProcessMessage+22,tblptrl
 34361   010920  C5E0  F4F7         	movff	??_mnsProcessMessage+23,tblptrh
 34362   010924                     	if	0	;tblptru may be non-zero
 34363   010924                     	endif
 34364   010924                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 34365   010924  0E00               	movlw	low (__pmediumconst shr (0+16))
 34366   010926  6EF8               	movwf	tblptru,c
 34367   010928                     	endif
 34368   010928  D801               	call	u8868
 34369   01092A  D00E               	goto	u8869
 34370   01092C                     u8868:
 34371   01092C  0005               	push	
 34372   01092E  6EFA               	movwf	pclath,c
 34373   010930  0009               	tblrd		*+
 34374   010932  50F5               	movf	tablat,w,c
 34375   010934  6EFD               	movwf	tosl,c
 34376   010936  0009               	tblrd		*+
 34377   010938  50F5               	movf	tablat,w,c
 34378   01093A  6EFE               	movwf	tosh,c
 34379   01093C  0009               	tblrd		*+
 34380   01093E  50F5               	movf	tablat,w,c
 34381   010940  6EFF               	movwf	tosu,c
 34382   010942  50FA               	movf	pclath,w,c
 34383   010944  0E03               	movlw	3
 34384   010946  0012               	return		;indir
 34385   010948                     u8869:
 34386   010948  6E2B               	movwf	sendMessage7@data7^(0+1280),c
 34387   01094A  0EE7               	movlw	231
 34388   01094C  EC21  F0B1         	call	_sendMessage7
 34389   010950  EF51  F080         	goto	l10521
 34390   010954                     l10737:
 34391                           
 34392                           ; BSR set to: 5
 34393                           ;../../VLCBlib_PIC/mns.c: 549:             if (m->len < 4) {
 34394   010954  C553  F4D9         	movff	mnsProcessMessage@m,fsr2l
 34395   010958  C554  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 34396   01095C  0E04               	movlw	4
 34397   01095E  60DF               	cpfslt	indf2,c
 34398   010960  D00F               	goto	l10745
 34399                           
 34400                           ; BSR set to: 5
 34401                           ;../../VLCBlib_PIC/mns.c: 550:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 34402   010962  C55F  F525         	movff	_nn+1,sendMessage5@data1
 34403   010966  C55E  F526         	movff	_nn,sendMessage5@data2
 34404   01096A  0E76               	movlw	118
 34405   01096C  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34406   01096E  0E01               	movlw	1
 34407   010970  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34408   010972  0E01               	movlw	1
 34409   010974  6E29               	movwf	sendMessage5@data5^(0+1280),c
 34410   010976  0EAF               	movlw	175
 34411   010978  EC36  F0B1         	call	_sendMessage5
 34412   01097C  EF51  F080         	goto	l10521
 34413   010980                     l10745:
 34414                           
 34415                           ; BSR set to: 5
 34416                           ;../../VLCBlib_PIC/mns.c: 553:             newMode = m->bytes[2];
 34417   010980  EE20 F004          	lfsr	2,4
 34418   010984  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34419   010986  26D9               	addwf	fsr2l,f,c
 34420   010988  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34421   01098A  22DA               	addwfc	fsr2h,f,c
 34422   01098C  50DF               	movf	indf2,w,c
 34423   01098E  6E59               	movwf	mnsProcessMessage@newMode^(0+1280),c
 34424                           
 34425                           ; BSR set to: 5
 34426                           ;../../VLCBlib_PIC/mns.c: 554:             previousNN.word = nn.word;
 34427   010990  C55E  F57E         	movff	_nn,_previousNN
 34428   010994  C55F  F57F         	movff	_nn+1,_previousNN+1
 34429                           
 34430                           ;../../VLCBlib_PIC/mns.c: 556:             switch (newMode) {
 34431   010998  D082               	goto	l10811
 34432   01099A                     l10749:
 34433                           
 34434                           ; BSR set to: 5
 34435                           ;../../VLCBlib_PIC/mns.c: 559:                     if (mode_state == MODE_NORMAL) {
 34436   01099A  0590               	decf	_mode_state& (0+255),w,b
 34437   01099C  A4D8               	btfss	status,2,c
 34438   01099E  D401               	goto	l10547
 34439                           
 34440                           ; BSR set to: 5
 34441                           ;../../VLCBlib_PIC/mns.c: 560:                         sendMessage2((newMode == MODE_SET
      +                          UP) ? OPC_RQNN : OPC_NNREL, nn.bytes.hi, nn.bytes.lo);
 34442   0109A0  5059               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 34443   0109A2  B4D8               	btfsc	status,2,c
 34444   0109A4  D002               	goto	l10755
 34445                           
 34446                           ; BSR set to: 5
 34447   0109A6  0E51               	movlw	81
 34448   0109A8  D001               	goto	L4
 34449   0109AA                     l10755:
 34450                           
 34451                           ; BSR set to: 5
 34452   0109AA  0E50               	movlw	80
 34453   0109AC                     L4:
 34454   0109AC  6E56               	movwf	_mnsProcessMessage$4895^(0+1280),c
 34455                           
 34456                           ; BSR set to: 5
 34457   0109AE  C55F  F525         	movff	_nn+1,sendMessage2@data1
 34458   0109B2  C55E  F526         	movff	_nn,sendMessage2@data2
 34459   0109B6  5056               	movf	_mnsProcessMessage$4895^(0+1280),w,c
 34460   0109B8  EC0C  F0B1         	call	_sendMessage2
 34461                           
 34462                           ;../../VLCBlib_PIC/mns.c: 561:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 34463   0109BC  C55F  F525         	movff	_nn+1,sendMessage5@data1
 34464   0109C0  C55E  F526         	movff	_nn,sendMessage5@data2
 34465   0109C4  0E76               	movlw	118
 34466   0109C6  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34467   0109C8  0E01               	movlw	1
 34468   0109CA  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34469   0109CC  0E00               	movlw	0
 34470   0109CE  6E29               	movwf	sendMessage5@data5^(0+1280),c
 34471   0109D0  0EAF               	movlw	175
 34472   0109D2  EC36  F0B1         	call	_sendMessage5
 34473                           
 34474                           ;../../VLCBlib_PIC/mns.c: 562:                         nn.bytes.lo = nn.bytes.hi = 0;
 34475   0109D6  6A5F               	clrf	(_nn+1)^(0+1280),c
 34476   0109D8  6A5E               	clrf	_nn^(0+1280),c
 34477                           
 34478                           ;../../VLCBlib_PIC/mns.c: 563:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC +
      +                          1, nn.bytes.hi);
 34479   0109DA  0EFD               	movlw	253
 34480   0109DC  6E0E               	movwf	writeNVM@index^(0+1280),c
 34481   0109DE  0E03               	movlw	3
 34482   0109E0  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 34483   0109E2  0E00               	movlw	0
 34484   0109E4  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 34485   0109E6  C55F  F511         	movff	_nn+1,writeNVM@value
 34486   0109EA  0E00               	movlw	0
 34487   0109EC  EC71  F0AD         	call	_writeNVM
 34488                           
 34489                           ;../../VLCBlib_PIC/mns.c: 564:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC, 
      +                          nn.bytes.lo);
 34490   0109F0  0EFC               	movlw	252
 34491   0109F2  6E0E               	movwf	writeNVM@index^(0+1280),c
 34492   0109F4  0E03               	movlw	3
 34493   0109F6  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 34494   0109F8  0E00               	movlw	0
 34495   0109FA  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 34496   0109FC  C55E  F511         	movff	_nn,writeNVM@value
 34497   010A00  0E00               	movlw	0
 34498   010A02  EC71  F0AD         	call	_writeNVM
 34499                           
 34500                           ;../../VLCBlib_PIC/mns.c: 566:                         mode_state = (newMode == MODE_SET
      +                          UP) ? MODE_SETUP : MODE_UNINITIALISED;
 34501   010A06  5059               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 34502   010A08  B4D8               	btfsc	status,2,c
 34503   010A0A  D003               	goto	l1611
 34504   010A0C  0105               	movlb	5	; () banked
 34505   010A0E  6990               	setf	_mode_state& (0+255),b
 34506   010A10  D002               	goto	l10769
 34507   010A12                     l1611:
 34508   010A12  0105               	movlb	5	; () banked
 34509   010A14  6B90               	clrf	_mode_state& (0+255),b
 34510   010A16                     l10769:
 34511                           
 34512                           ; BSR set to: 5
 34513                           ;../../VLCBlib_PIC/mns.c: 567:                         setupModePreviousMode = MODE_NORM
      +                          AL;
 34514   010A16  0E01               	movlw	1
 34515   010A18  6F8D               	movwf	_setupModePreviousMode& (0+255),b
 34516   010A1A  EF4F  F080         	goto	l10519
 34517   010A1E                     l10777:
 34518                           
 34519                           ; BSR set to: 5
 34520                           ;../../VLCBlib_PIC/mns.c: 574:                     mode_flags |= 4;
 34521   010A1E  859F               	bsf	_mode_flags& (0+255),2,b
 34522                           
 34523                           ; BSR set to: 5
 34524                           ;../../VLCBlib_PIC/mns.c: 575:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 34525   010A20  C55F  F525         	movff	_nn+1,sendMessage5@data1
 34526   010A24  C55E  F526         	movff	_nn,sendMessage5@data2
 34527   010A28  0E76               	movlw	118
 34528   010A2A  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34529   010A2C  0E01               	movlw	1
 34530   010A2E  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34531   010A30  0E00               	movlw	0
 34532   010A32  6E29               	movwf	sendMessage5@data5^(0+1280),c
 34533   010A34  0EAF               	movlw	175
 34534   010A36  EC36  F0B1         	call	_sendMessage5
 34535   010A3A  EF51  F080         	goto	l10521
 34536   010A3E                     l10785:
 34537                           
 34538                           ; BSR set to: 5
 34539                           ;../../VLCBlib_PIC/mns.c: 578:                     mode_flags &= ~4;
 34540   010A3E  959F               	bcf	_mode_flags& (0+255),2,b
 34541                           
 34542                           ; BSR set to: 5
 34543                           ;../../VLCBlib_PIC/mns.c: 579:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 34544   010A40  C55F  F525         	movff	_nn+1,sendMessage5@data1
 34545   010A44  C55E  F526         	movff	_nn,sendMessage5@data2
 34546   010A48  0E76               	movlw	118
 34547   010A4A  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34548   010A4C  0E01               	movlw	1
 34549   010A4E  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34550   010A50  0E00               	movlw	0
 34551   010A52  6E29               	movwf	sendMessage5@data5^(0+1280),c
 34552   010A54  0EAF               	movlw	175
 34553   010A56  EC36  F0B1         	call	_sendMessage5
 34554   010A5A  EF51  F080         	goto	l10521
 34555   010A5E                     l10793:
 34556                           
 34557                           ; BSR set to: 5
 34558                           ;../../VLCBlib_PIC/mns.c: 582:                     mode_flags |= 8;
 34559   010A5E  879F               	bsf	_mode_flags& (0+255),3,b
 34560                           
 34561                           ; BSR set to: 5
 34562                           ;../../VLCBlib_PIC/mns.c: 583:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 34563   010A60  C55F  F525         	movff	_nn+1,sendMessage5@data1
 34564   010A64  C55E  F526         	movff	_nn,sendMessage5@data2
 34565   010A68  0E76               	movlw	118
 34566   010A6A  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34567   010A6C  0E01               	movlw	1
 34568   010A6E  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34569   010A70  0E00               	movlw	0
 34570   010A72  6E29               	movwf	sendMessage5@data5^(0+1280),c
 34571   010A74  0EAF               	movlw	175
 34572   010A76  EC36  F0B1         	call	_sendMessage5
 34573   010A7A  EF51  F080         	goto	l10521
 34574   010A7E                     l10801:
 34575                           
 34576                           ; BSR set to: 5
 34577                           ;../../VLCBlib_PIC/mns.c: 586:                     mode_flags &= ~8;
 34578   010A7E  979F               	bcf	_mode_flags& (0+255),3,b
 34579                           
 34580                           ; BSR set to: 5
 34581                           ;../../VLCBlib_PIC/mns.c: 587:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 34582   010A80  C55F  F525         	movff	_nn+1,sendMessage5@data1
 34583   010A84  C55E  F526         	movff	_nn,sendMessage5@data2
 34584   010A88  0E76               	movlw	118
 34585   010A8A  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34586   010A8C  0E01               	movlw	1
 34587   010A8E  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34588   010A90  0E00               	movlw	0
 34589   010A92  6E29               	movwf	sendMessage5@data5^(0+1280),c
 34590   010A94  0EAF               	movlw	175
 34591   010A96  EC36  F0B1         	call	_sendMessage5
 34592   010A9A  EF51  F080         	goto	l10521
 34593   010A9E                     l10811:
 34594                           
 34595                           ; BSR set to: 5
 34596   010A9E  5059               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 34597                           
 34598                           ; Switch size 1, requested type "simple"
 34599                           ; Number of cases is 6, Range of values is 0 to 255
 34600                           ; switch strategies available:
 34601                           ; Name         Instructions Cycles
 34602                           ; simple_byte           19    10 (average)
 34603                           ;	Chosen strategy is simple_byte
 34604   010AA0  0A00               	xorlw	0	; case 0
 34605   010AA2  B4D8               	btfsc	status,2,c
 34606   010AA4  D77A               	goto	l10749
 34607   010AA6  0A0C               	xorlw	12	; case 12
 34608   010AA8  B4D8               	btfsc	status,2,c
 34609   010AAA  D7B9               	goto	l10777
 34610   010AAC  0A01               	xorlw	1	; case 13
 34611   010AAE  B4D8               	btfsc	status,2,c
 34612   010AB0  D7C6               	goto	l10785
 34613   010AB2  0A1D               	xorlw	29	; case 16
 34614   010AB4  B4D8               	btfsc	status,2,c
 34615   010AB6  D7D3               	goto	l10793
 34616   010AB8  0A01               	xorlw	1	; case 17
 34617   010ABA  B4D8               	btfsc	status,2,c
 34618   010ABC  D7E0               	goto	l10801
 34619   010ABE  0AEE               	xorlw	238	; case 255
 34620   010AC0  B4D8               	btfsc	status,2,c
 34621   010AC2  D76B               	goto	l10749
 34622   010AC4  EFD1  F080         	goto	l10547
 34623   010AC8                     l1620:
 34624                           
 34625                           ; BSR set to: 5
 34626   010AC8  00FF               	reset		;# 
 34627   010ACA  EF51  F080         	goto	l10521
 34628   010ACE                     l10823:
 34629                           
 34630                           ; BSR set to: 5
 34631   010ACE  EE20 F001          	lfsr	2,1
 34632   010AD2  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34633   010AD4  26D9               	addwf	fsr2l,f,c
 34634   010AD6  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34635   010AD8  22DA               	addwfc	fsr2h,f,c
 34636   010ADA  50DF               	movf	indf2,w,c
 34637   010ADC  6FC9               	movwf	??_mnsProcessMessage& (0+255),b
 34638   010ADE  6BCA               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 34639                           
 34640                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34641                           ; Switch size 1, requested type "simple"
 34642                           ; Number of cases is 1, Range of values is 0 to 0
 34643                           ; switch strategies available:
 34644                           ; Name         Instructions Cycles
 34645                           ; simple_byte            4     3 (average)
 34646                           ;	Chosen strategy is simple_byte
 34647   010AE0  51CA               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 34648   010AE2  0A00               	xorlw	0	; case 0
 34649   010AE4  A4D8               	btfss	status,2,c
 34650   010AE6  EFD1  F080         	goto	l10547
 34651                           
 34652                           ; BSR set to: 5
 34653                           ; Switch size 1, requested type "simple"
 34654                           ; Number of cases is 6, Range of values is 79 to 135
 34655                           ; switch strategies available:
 34656                           ; Name         Instructions Cycles
 34657                           ; simple_byte           19    10 (average)
 34658                           ;	Chosen strategy is simple_byte
 34659   010AEA  51C9               	movf	??_mnsProcessMessage& (0+255),w,b
 34660   010AEC  0A4F               	xorlw	79	; case 79
 34661   010AEE  B4D8               	btfsc	status,2,c
 34662   010AF0  D44B               	goto	l1580
 34663   010AF2  0A11               	xorlw	17	; case 94
 34664   010AF4  B4D8               	btfsc	status,2,c
 34665   010AF6  D7E8               	goto	l1620
 34666   010AF8  0A2D               	xorlw	45	; case 115
 34667   010AFA  B4D8               	btfsc	status,2,c
 34668   010AFC  EF5A  F081         	goto	l10621
 34669   010B00  0A05               	xorlw	5	; case 118
 34670   010B02  B4D8               	btfsc	status,2,c
 34671   010B04  D727               	goto	l10737
 34672   010B06  0A0E               	xorlw	14	; case 120
 34673   010B08  B4D8               	btfsc	status,2,c
 34674   010B0A  D572               	goto	l10703
 34675   010B0C  0AFF               	xorlw	255	; case 135
 34676   010B0E  B4D8               	btfsc	status,2,c
 34677   010B10  D44E               	goto	l10657
 34678   010B12  EFD1  F080         	goto	l10547
 34679   010B16                     __end_of_mnsProcessMessage:
 34680                           	callstack 0
 34681                           
 34682 ;; *************** function _consumerProcessMessage *****************
 34683 ;; Defined at:
 34684 ;;		line 110 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 34685 ;; Parameters:    Size  Location     Type
 34686 ;;  m               2   82[COMRAM] PTR struct Message
 34687 ;;		 -> poll@m(9), 
 34688 ;; Auto vars:     Size  Location     Type
 34689 ;;  enn             2   87[COMRAM] unsigned short 
 34690 ;;  tableIndex      1   90[COMRAM] unsigned char 
 34691 ;;  ret             1   89[COMRAM] enum E23340
 34692 ;; Return value:  Size  Location     Type
 34693 ;;                  1    wreg      enum E23340
 34694 ;; Registers used:
 34695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 34696 ;; Tracked objects:
 34697 ;;		On entry : 0/0
 34698 ;;		On exit  : 0/0
 34699 ;;		Unchanged: 0/0
 34700 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34702 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34703 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34704 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34705 ;;Total ram usage:        9 bytes
 34706 ;; Hardware stack levels used: 1
 34707 ;; Hardware stack levels required when called: 8
 34708 ;; This function calls:
 34709 ;;		_APP_processConsumedEvent
 34710 ;;		_consumerEventCheckLen
 34711 ;;		_findEvent
 34712 ;;		_isConsumedEvent
 34713 ;;		_sendMessage7
 34714 ;; This function is called by:
 34715 ;;		_APP_preProcessMessage
 34716 ;;		_poll
 34717 ;; This function uses a non-reentrant model
 34718 ;;
 34719                           
 34720                           	psect	text43
 34721   012328                     __ptext43:
 34722                           	callstack 0
 34723   012328                     _consumerProcessMessage:
 34724                           	callstack 117
 34725                           
 34726                           ;../../VLCBlib_PIC/event_consumer_simple.c: 111:     Processed ret;;../../VLCBlib_PIC/ev
      +                          ent_consumer_simple.c: 112:     uint8_t tableIndex;;../../VLCBlib_PIC/event_consumer_sim
      +                          ple.c: 113:     uint16_t enn;;../../VLCBlib_PIC/event_consumer_simple.c: 116:     if (m-
      +                          >opc == OPC_MODE) {
 34727                           
 34728                           ;incstack = 0
 34729   012328  EE20 F001          	lfsr	2,1
 34730   01232C  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 34731   01232E  26D9               	addwf	fsr2l,f,c
 34732   012330  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 34733   012332  22DA               	addwfc	fsr2h,f,c
 34734   012334  0E76               	movlw	118
 34735   012336  18DE               	xorwf	postinc2,w,c
 34736   012338  A4D8               	btfss	status,2,c
 34737   01233A  D03D               	goto	l10133
 34738                           
 34739                           ;../../VLCBlib_PIC/event_consumer_simple.c: 117:         if (consumerEventCheckLen(m, 4)
      +                           == PROCESSED) return PROCESSED;
 34740   01233C  C553  F530         	movff	consumerProcessMessage@m,consumerEventCheckLen@m
 34741   012340  C554  F531         	movff	consumerProcessMessage@m+1,consumerEventCheckLen@m+1
 34742   012344  0E04               	movlw	4
 34743   012346  6E32               	movwf	consumerEventCheckLen@needed^(0+1280),c
 34744   012348  ECC0  F0B2         	call	_consumerEventCheckLen	;wreg free
 34745   01234C  06E8               	decf	wreg,f,c
 34746   01234E  A4D8               	btfss	status,2,c
 34747   012350  D002               	goto	l10107
 34748   012352                     u8070:
 34749   012352  0E01               	movlw	1
 34750   012354  0012               	return	
 34751   012356                     l10107:
 34752                           
 34753                           ;../../VLCBlib_PIC/event_consumer_simple.c: 118:         if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 34754   012356  EE20 F002          	lfsr	2,2
 34755   01235A  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 34756   01235C  26D9               	addwf	fsr2l,f,c
 34757   01235E  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 34758   012360  22DA               	addwfc	fsr2h,f,c
 34759   012362  50DE               	movf	postinc2,w,c
 34760   012364  185F               	xorwf	(_nn+1)^(0+1280),w,c
 34761   012366  A4D8               	btfss	status,2,c
 34762   012368  D024               	goto	l10129
 34763   01236A  EE20 F003          	lfsr	2,3
 34764   01236E  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 34765   012370  26D9               	addwf	fsr2l,f,c
 34766   012372  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 34767   012374  22DA               	addwfc	fsr2h,f,c
 34768   012376  505E               	movf	_nn^(0+1280),w,c
 34769   012378  18DE               	xorwf	postinc2,w,c
 34770   01237A  A4D8               	btfss	status,2,c
 34771   01237C  D01A               	goto	l10129
 34772                           
 34773                           ;../../VLCBlib_PIC/event_consumer_simple.c: 119:             if (m->bytes[2] == MODE_EVE
      +                          NT_ACK_ON) {
 34774   01237E  EE20 F004          	lfsr	2,4
 34775   012382  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 34776   012384  26D9               	addwf	fsr2l,f,c
 34777   012386  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 34778   012388  22DA               	addwfc	fsr2h,f,c
 34779   01238A  0E0A               	movlw	10
 34780   01238C  18DE               	xorwf	postinc2,w,c
 34781   01238E  A4D8               	btfss	status,2,c
 34782   012390  D003               	goto	l10121
 34783                           
 34784                           ;../../VLCBlib_PIC/event_consumer_simple.c: 121:                 mode_flags |= 2;
 34785   012392  0105               	movlb	5	; () banked
 34786   012394  839F               	bsf	_mode_flags& (0+255),1,b
 34787   012396  D7DD               	goto	u8070
 34788   012398                     l10121:
 34789   012398  EE20 F004          	lfsr	2,4
 34790   01239C  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 34791   01239E  26D9               	addwf	fsr2l,f,c
 34792   0123A0  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 34793   0123A2  22DA               	addwfc	fsr2h,f,c
 34794   0123A4  0E0B               	movlw	11
 34795   0123A6  18DE               	xorwf	postinc2,w,c
 34796   0123A8  A4D8               	btfss	status,2,c
 34797   0123AA  D003               	goto	l10129
 34798                           
 34799                           ;../../VLCBlib_PIC/event_consumer_simple.c: 125:                 mode_flags &= ~2;
 34800   0123AC  0105               	movlb	5	; () banked
 34801   0123AE  939F               	bcf	_mode_flags& (0+255),1,b
 34802   0123B0  D7D0               	goto	u8070
 34803   0123B2                     l10129:
 34804                           
 34805                           ;../../VLCBlib_PIC/event_consumer_simple.c: 129:         return NOT_PROCESSED;
 34806   0123B2  0E00               	movlw	0
 34807   0123B4  0012               	return	
 34808   0123B6                     l10133:
 34809                           
 34810                           ;../../VLCBlib_PIC/event_consumer_simple.c: 133:     if (m->len < 5) return NOT_PROCESSE
      +                          D;
 34811   0123B6  C553  F4D9         	movff	consumerProcessMessage@m,fsr2l
 34812   0123BA  C554  F4DA         	movff	consumerProcessMessage@m+1,fsr2h
 34813   0123BE  0E05               	movlw	5
 34814   0123C0  60DF               	cpfslt	indf2,c
 34815   0123C2  D001               	goto	l10139
 34816   0123C4  D7F6               	goto	l10129
 34817   0123C6                     l10139:
 34818                           
 34819                           ;../../VLCBlib_PIC/event_consumer_simple.c: 135:     enn = ((uint16_t)m->bytes[0])*256+m
      +                          ->bytes[1];
 34820   0123C6  EE20 F003          	lfsr	2,3
 34821   0123CA  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 34822   0123CC  26D9               	addwf	fsr2l,f,c
 34823   0123CE  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 34824   0123D0  22DA               	addwfc	fsr2h,f,c
 34825   0123D2  50DF               	movf	indf2,w,c
 34826   0123D4  6E55               	movwf	??_consumerProcessMessage^(0+1280),c
 34827   0123D6  EE20 F002          	lfsr	2,2
 34828   0123DA  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 34829   0123DC  26D9               	addwf	fsr2l,f,c
 34830   0123DE  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 34831   0123E0  22DA               	addwfc	fsr2h,f,c
 34832   0123E2  50DF               	movf	indf2,w,c
 34833   0123E4  6E56               	movwf	(??_consumerProcessMessage+1)^(0+1280),c
 34834   0123E6  5055               	movf	??_consumerProcessMessage^(0+1280),w,c
 34835   0123E8  6E58               	movwf	consumerProcessMessage@enn^(0+1280),c
 34836   0123EA  C556  F559         	movff	??_consumerProcessMessage+1,consumerProcessMessage@enn+1
 34837                           
 34838                           ;../../VLCBlib_PIC/event_consumer_simple.c: 137:     switch (m->opc) {
 34839   0123EE  D005               	goto	l10151
 34840   0123F0                     l1049:
 34841                           
 34842                           ;../../VLCBlib_PIC/event_consumer_simple.c: 144:   enn = 0;
 34843   0123F0  0E00               	movlw	0
 34844   0123F2  6E59               	movwf	(consumerProcessMessage@enn+1)^(0+1280),c
 34845   0123F4  0E00               	movlw	0
 34846   0123F6  6E58               	movwf	consumerProcessMessage@enn^(0+1280),c
 34847                           
 34848                           ;../../VLCBlib_PIC/event_consumer_simple.c: 152:             break;
 34849                           
 34850                           ;../../VLCBlib_PIC/event_consumer_simple.c: 150:         case OPC_ACON3:
 34851   0123F8  D03F               	goto	l10153
 34852   0123FA                     l10151:
 34853   0123FA  EE20 F001          	lfsr	2,1
 34854   0123FE  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 34855   012400  26D9               	addwf	fsr2l,f,c
 34856   012402  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 34857   012404  22DA               	addwfc	fsr2h,f,c
 34858   012406  50DF               	movf	indf2,w,c
 34859   012408  6E55               	movwf	??_consumerProcessMessage^(0+1280),c
 34860   01240A  6A56               	clrf	(??_consumerProcessMessage+1)^(0+1280),c
 34861                           
 34862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34863                           ; Switch size 1, requested type "simple"
 34864                           ; Number of cases is 1, Range of values is 0 to 0
 34865                           ; switch strategies available:
 34866                           ; Name         Instructions Cycles
 34867                           ; simple_byte            4     3 (average)
 34868                           ;	Chosen strategy is simple_byte
 34869   01240C  5056               	movf	(??_consumerProcessMessage+1)^(0+1280),w,c
 34870   01240E  0A00               	xorlw	0	; case 0
 34871   012410  A4D8               	btfss	status,2,c
 34872   012412  D7CF               	goto	l10129
 34873                           
 34874                           ; Switch size 1, requested type "simple"
 34875                           ; Number of cases is 16, Range of values is 144 to 249
 34876                           ; switch strategies available:
 34877                           ; Name         Instructions Cycles
 34878                           ; simple_byte           49    25 (average)
 34879                           ;	Chosen strategy is simple_byte
 34880   012414  5055               	movf	??_consumerProcessMessage^(0+1280),w,c
 34881   012416  0A90               	xorlw	144	; case 144
 34882   012418  B4D8               	btfsc	status,2,c
 34883   01241A  D02E               	goto	l10153
 34884   01241C  0A01               	xorlw	1	; case 145
 34885   01241E  B4D8               	btfsc	status,2,c
 34886   012420  D02B               	goto	l10153
 34887   012422  0A09               	xorlw	9	; case 152
 34888   012424  B4D8               	btfsc	status,2,c
 34889   012426  D7E4               	goto	l1049
 34890   012428  0A01               	xorlw	1	; case 153
 34891   01242A  B4D8               	btfsc	status,2,c
 34892   01242C  D7E1               	goto	l1049
 34893   01242E  0A29               	xorlw	41	; case 176
 34894   012430  B4D8               	btfsc	status,2,c
 34895   012432  D022               	goto	l10153
 34896   012434  0A01               	xorlw	1	; case 177
 34897   012436  B4D8               	btfsc	status,2,c
 34898   012438  D01F               	goto	l10153
 34899   01243A  0A09               	xorlw	9	; case 184
 34900   01243C  B4D8               	btfsc	status,2,c
 34901   01243E  D7D8               	goto	l1049
 34902   012440  0A01               	xorlw	1	; case 185
 34903   012442  B4D8               	btfsc	status,2,c
 34904   012444  D7D5               	goto	l1049
 34905   012446  0A69               	xorlw	105	; case 208
 34906   012448  B4D8               	btfsc	status,2,c
 34907   01244A  D016               	goto	l10153
 34908   01244C  0A01               	xorlw	1	; case 209
 34909   01244E  B4D8               	btfsc	status,2,c
 34910   012450  D013               	goto	l10153
 34911   012452  0A09               	xorlw	9	; case 216
 34912   012454  B4D8               	btfsc	status,2,c
 34913   012456  D7CC               	goto	l1049
 34914   012458  0A01               	xorlw	1	; case 217
 34915   01245A  B4D8               	btfsc	status,2,c
 34916   01245C  D7C9               	goto	l1049
 34917   01245E  0A29               	xorlw	41	; case 240
 34918   012460  B4D8               	btfsc	status,2,c
 34919   012462  D00A               	goto	l10153
 34920   012464  0A01               	xorlw	1	; case 241
 34921   012466  B4D8               	btfsc	status,2,c
 34922   012468  D007               	goto	l10153
 34923   01246A  0A09               	xorlw	9	; case 248
 34924   01246C  B4D8               	btfsc	status,2,c
 34925   01246E  D7C0               	goto	l1049
 34926   012470  0A01               	xorlw	1	; case 249
 34927   012472  B4D8               	btfsc	status,2,c
 34928   012474  D7BD               	goto	l1049
 34929   012476  D79D               	goto	l10129
 34930   012478                     l10153:
 34931                           
 34932                           ;../../VLCBlib_PIC/event_consumer_simple.c: 172:     tableIndex = findEvent(enn, ((uint1
      +                          6_t)m->bytes[2])*256+m->bytes[3]);
 34933   012478  C558  F51E         	movff	consumerProcessMessage@enn,findEvent@nodeNumber
 34934   01247C  C559  F51F         	movff	consumerProcessMessage@enn+1,findEvent@nodeNumber+1
 34935   012480  EE20 F005          	lfsr	2,5
 34936   012484  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 34937   012486  26D9               	addwf	fsr2l,f,c
 34938   012488  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 34939   01248A  22DA               	addwfc	fsr2h,f,c
 34940   01248C  50DF               	movf	indf2,w,c
 34941   01248E  6E55               	movwf	??_consumerProcessMessage^(0+1280),c
 34942   012490  EE20 F004          	lfsr	2,4
 34943   012494  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 34944   012496  26D9               	addwf	fsr2l,f,c
 34945   012498  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 34946   01249A  22DA               	addwfc	fsr2h,f,c
 34947   01249C  50DF               	movf	indf2,w,c
 34948   01249E  6E56               	movwf	(??_consumerProcessMessage+1)^(0+1280),c
 34949   0124A0  5055               	movf	??_consumerProcessMessage^(0+1280),w,c
 34950   0124A2  6E20               	movwf	findEvent@eventNumber^(0+1280),c
 34951   0124A4  C556  F521         	movff	??_consumerProcessMessage+1,findEvent@eventNumber+1
 34952   0124A8  EC4F  F0A4         	call	_findEvent	;wreg free
 34953   0124AC  6E5B               	movwf	consumerProcessMessage@tableIndex^(0+1280),c
 34954                           
 34955                           ;../../VLCBlib_PIC/event_consumer_simple.c: 173:     if (tableIndex == 0xff) return NOT_
      +                          PROCESSED;
 34956   0124AE  285B               	incf	consumerProcessMessage@tableIndex^(0+1280),w,c
 34957   0124B0  B4D8               	btfsc	status,2,c
 34958   0124B2  D77F               	goto	l10129
 34959                           
 34960                           ;../../VLCBlib_PIC/event_consumer_simple.c: 175:     if (!isConsumedEvent(tableIndex)) {
 34961   0124B4  505B               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 34962   0124B6  EC06  F0B3         	call	_isConsumedEvent
 34963   0124BA  0900               	iorlw	0
 34964   0124BC  B4D8               	btfsc	status,2,c
 34965   0124BE  D779               	goto	l10129
 34966                           
 34967                           ;../../VLCBlib_PIC/event_consumer_simple.c: 183:     if ((mode_flags & 2) && (isConsumed
      +                          Event(tableIndex))) {
 34968                           
 34969                           ;../../VLCBlib_PIC/event_consumer_simple.c: 177:     }
 34970   0124C0  0105               	movlb	5	; () banked
 34971   0124C2  A39F               	btfss	_mode_flags& (0+255),1,b
 34972   0124C4  D038               	goto	l10173
 34973                           
 34974                           ; BSR set to: 5
 34975   0124C6  505B               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 34976   0124C8  EC06  F0B3         	call	_isConsumedEvent
 34977   0124CC  0900               	iorlw	0
 34978   0124CE  B4D8               	btfsc	status,2,c
 34979   0124D0  D032               	goto	l10173
 34980                           
 34981                           ;../../VLCBlib_PIC/event_consumer_simple.c: 185:         sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, (uint8_t)(m->opc), m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]
      +                          );
 34982   0124D2  C55F  F525         	movff	_nn+1,sendMessage7@data1
 34983   0124D6  C55E  F526         	movff	_nn,sendMessage7@data2
 34984   0124DA  EE20 F001          	lfsr	2,1
 34985   0124DE  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 34986   0124E0  26D9               	addwf	fsr2l,f,c
 34987   0124E2  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 34988   0124E4  22DA               	addwfc	fsr2h,f,c
 34989   0124E6  50DF               	movf	indf2,w,c
 34990   0124E8  6E27               	movwf	sendMessage7@data3^(0+1280),c
 34991   0124EA  EE20 F002          	lfsr	2,2
 34992   0124EE  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 34993   0124F0  26D9               	addwf	fsr2l,f,c
 34994   0124F2  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 34995   0124F4  22DA               	addwfc	fsr2h,f,c
 34996   0124F6  50DF               	movf	indf2,w,c
 34997   0124F8  6E28               	movwf	sendMessage7@data4^(0+1280),c
 34998   0124FA  EE20 F003          	lfsr	2,3
 34999   0124FE  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 35000   012500  26D9               	addwf	fsr2l,f,c
 35001   012502  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 35002   012504  22DA               	addwfc	fsr2h,f,c
 35003   012506  50DF               	movf	indf2,w,c
 35004   012508  6E29               	movwf	sendMessage7@data5^(0+1280),c
 35005   01250A  EE20 F004          	lfsr	2,4
 35006   01250E  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 35007   012510  26D9               	addwf	fsr2l,f,c
 35008   012512  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 35009   012514  22DA               	addwfc	fsr2h,f,c
 35010   012516  50DF               	movf	indf2,w,c
 35011   012518  6E2A               	movwf	sendMessage7@data6^(0+1280),c
 35012   01251A  EE20 F005          	lfsr	2,5
 35013   01251E  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 35014   012520  26D9               	addwf	fsr2l,f,c
 35015   012522  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 35016   012524  22DA               	addwfc	fsr2h,f,c
 35017   012526  50DF               	movf	indf2,w,c
 35018   012528  6E2B               	movwf	sendMessage7@data7^(0+1280),c
 35019   01252A  0EE6               	movlw	230
 35020   01252C  EC21  F0B1         	call	_sendMessage7
 35021                           
 35022                           ;../../VLCBlib_PIC/event_consumer_simple.c: 187:         consumerDiagnostics[2].asInt++;
 35023   012530  0105               	movlb	5	; () banked
 35024   012532  4BBA               	infsnz	(_consumerDiagnostics+4)& (0+255),f,b
 35025   012534  2BBB               	incf	(_consumerDiagnostics+5)& (0+255),f,b
 35026   012536                     l10173:
 35027                           
 35028                           ;../../VLCBlib_PIC/event_consumer_simple.c: 195:     ret = APP_processConsumedEvent(tabl
      +                          eIndex, m);
 35029   012536  C553  F518         	movff	consumerProcessMessage@m,APP_processConsumedEvent@m
 35030   01253A  C554  F519         	movff	consumerProcessMessage@m+1,APP_processConsumedEvent@m+1
 35031   01253E  505B               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 35032   012540  EC4B  F097         	call	_APP_processConsumedEvent
 35033   012544  6E5A               	movwf	consumerProcessMessage@ret^(0+1280),c
 35034                           
 35035                           ;../../VLCBlib_PIC/event_consumer_simple.c: 196:     if (ret == PROCESSED) {
 35036   012546  045A               	decf	consumerProcessMessage@ret^(0+1280),w,c
 35037   012548  A4D8               	btfss	status,2,c
 35038   01254A  D003               	goto	l10179
 35039                           
 35040                           ;../../VLCBlib_PIC/event_consumer_simple.c: 197:         consumerDiagnostics[1].asUint++
      +                          ;
 35041   01254C  0105               	movlb	5	; () banked
 35042   01254E  4BB8               	infsnz	(_consumerDiagnostics+2)& (0+255),f,b
 35043   012550  2BB9               	incf	(_consumerDiagnostics+3)& (0+255),f,b
 35044   012552                     l10179:
 35045                           
 35046                           ;../../VLCBlib_PIC/event_consumer_simple.c: 199:     return ret;
 35047   012552  505A               	movf	consumerProcessMessage@ret^(0+1280),w,c
 35048   012554  0012               	return		;funcret
 35049   012556                     __end_of_consumerProcessMessage:
 35050                           	callstack 0
 35051                           
 35052 ;; *************** function _canProcessMessage *****************
 35053 ;; Defined at:
 35054 ;;		line 409 in file "../../VLCBlib_PIC/can18_can_2.c"
 35055 ;; Parameters:    Size  Location     Type
 35056 ;;  m               2   82[COMRAM] PTR struct Message
 35057 ;;		 -> poll@m(9), 
 35058 ;; Auto vars:     Size  Location     Type
 35059 ;;		None
 35060 ;; Return value:  Size  Location     Type
 35061 ;;                  1    wreg      enum E23507
 35062 ;; Registers used:
 35063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 35064 ;; Tracked objects:
 35065 ;;		On entry : 0/0
 35066 ;;		On exit  : 0/0
 35067 ;;		Unchanged: 0/0
 35068 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35071 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35072 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35073 ;;Total ram usage:        4 bytes
 35074 ;; Hardware stack levels used: 1
 35075 ;; Hardware stack levels required when called: 6
 35076 ;; This function calls:
 35077 ;;		_sendMessage5
 35078 ;; This function is called by:
 35079 ;;		_APP_preProcessMessage
 35080 ;;		_poll
 35081 ;; This function uses a non-reentrant model
 35082 ;;
 35083                           
 35084                           	psect	text44
 35085   01465E                     __ptext44:
 35086                           	callstack 0
 35087   01465E                     _canProcessMessage:
 35088                           	callstack 119
 35089                           
 35090                           ;../../VLCBlib_PIC/can18_can_2.c: 411:     if (m->len < 3) return NOT_PROCESSED;
 35091                           
 35092                           ;incstack = 0
 35093   01465E  C553  F4D9         	movff	canProcessMessage@m,fsr2l
 35094   014662  C554  F4DA         	movff	canProcessMessage@m+1,fsr2h
 35095   014666  0E03               	movlw	3
 35096   014668  60DF               	cpfslt	indf2,c
 35097   01466A  D002               	goto	l9937
 35098   01466C                     u7870:
 35099   01466C  0E00               	movlw	0
 35100   01466E  0012               	return	
 35101   014670                     l9937:
 35102                           
 35103                           ;../../VLCBlib_PIC/can18_can_2.c: 412:     if (m->bytes[0] != nn.bytes.hi) return NOT_PR
      +                          OCESSED;
 35104   014670  EE20 F002          	lfsr	2,2
 35105   014674  5053               	movf	canProcessMessage@m^(0+1280),w,c
 35106   014676  26D9               	addwf	fsr2l,f,c
 35107   014678  5054               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 35108   01467A  22DA               	addwfc	fsr2h,f,c
 35109   01467C  50DE               	movf	postinc2,w,c
 35110   01467E  185F               	xorwf	(_nn+1)^(0+1280),w,c
 35111   014680  A4D8               	btfss	status,2,c
 35112   014682  D7F4               	goto	u7870
 35113                           
 35114                           ;../../VLCBlib_PIC/can18_can_2.c: 413:     if (m->bytes[1] != nn.bytes.lo) return NOT_PR
      +                          OCESSED;
 35115   014684  EE20 F003          	lfsr	2,3
 35116   014688  5053               	movf	canProcessMessage@m^(0+1280),w,c
 35117   01468A  26D9               	addwf	fsr2l,f,c
 35118   01468C  5054               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 35119   01468E  22DA               	addwfc	fsr2h,f,c
 35120   014690  505E               	movf	_nn^(0+1280),w,c
 35121   014692  18DE               	xorwf	postinc2,w,c
 35122   014694  A4D8               	btfss	status,2,c
 35123   014696  D7EA               	goto	u7870
 35124   014698  D017               	goto	l9967
 35125   01469A                     l9949:
 35126                           
 35127                           ;../../VLCBlib_PIC/can18_can_2.c: 419:             return PROCESSED;
 35128   01469A  0E01               	movlw	1
 35129   01469C  0012               	return	
 35130   01469E                     l9953:
 35131                           
 35132                           ;../../VLCBlib_PIC/can18_can_2.c: 421:             if (m->len < 4) {
 35133   01469E  C553  F4D9         	movff	canProcessMessage@m,fsr2l
 35134   0146A2  C554  F4DA         	movff	canProcessMessage@m+1,fsr2h
 35135   0146A6  0E04               	movlw	4
 35136   0146A8  60DF               	cpfslt	indf2,c
 35137   0146AA  D7F7               	goto	l9949
 35138                           
 35139                           ;../../VLCBlib_PIC/can18_can_2.c: 423:                 sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_CANID, SERVICE_ID_MNS, CMDERR_INV_CMD);
 35140   0146AC  C55F  F525         	movff	_nn+1,sendMessage5@data1
 35141   0146B0  C55E  F526         	movff	_nn,sendMessage5@data2
 35142   0146B4  0E75               	movlw	117
 35143   0146B6  6E27               	movwf	sendMessage5@data3^(0+1280),c
 35144   0146B8  0E01               	movlw	1
 35145   0146BA  6E28               	movwf	sendMessage5@data4^(0+1280),c
 35146   0146BC  0E01               	movlw	1
 35147   0146BE  6E29               	movwf	sendMessage5@data5^(0+1280),c
 35148   0146C0  0EAF               	movlw	175
 35149   0146C2  EC36  F0B1         	call	_sendMessage5
 35150   0146C6  D7E9               	goto	l9949
 35151   0146C8                     l9967:
 35152   0146C8  EE20 F001          	lfsr	2,1
 35153   0146CC  5053               	movf	canProcessMessage@m^(0+1280),w,c
 35154   0146CE  26D9               	addwf	fsr2l,f,c
 35155   0146D0  5054               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 35156   0146D2  22DA               	addwfc	fsr2h,f,c
 35157   0146D4  50DF               	movf	indf2,w,c
 35158   0146D6  6E55               	movwf	??_canProcessMessage^(0+1280),c
 35159   0146D8  6A56               	clrf	(??_canProcessMessage+1)^(0+1280),c
 35160                           
 35161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35162                           ; Switch size 1, requested type "simple"
 35163                           ; Number of cases is 1, Range of values is 0 to 0
 35164                           ; switch strategies available:
 35165                           ; Name         Instructions Cycles
 35166                           ; simple_byte            4     3 (average)
 35167                           ;	Chosen strategy is simple_byte
 35168   0146DA  5056               	movf	(??_canProcessMessage+1)^(0+1280),w,c
 35169   0146DC  0A00               	xorlw	0	; case 0
 35170   0146DE  A4D8               	btfss	status,2,c
 35171   0146E0  D7C5               	goto	u7870
 35172                           
 35173                           ; Switch size 1, requested type "simple"
 35174                           ; Number of cases is 2, Range of values is 93 to 117
 35175                           ; switch strategies available:
 35176                           ; Name         Instructions Cycles
 35177                           ; simple_byte            7     4 (average)
 35178                           ;	Chosen strategy is simple_byte
 35179   0146E2  5055               	movf	??_canProcessMessage^(0+1280),w,c
 35180   0146E4  0A5D               	xorlw	93	; case 93
 35181   0146E6  B4D8               	btfsc	status,2,c
 35182   0146E8  D7D8               	goto	l9949
 35183   0146EA  0A28               	xorlw	40	; case 117
 35184   0146EC  B4D8               	btfsc	status,2,c
 35185   0146EE  D7D7               	goto	l9953
 35186   0146F0  D7BD               	goto	u7870
 35187   0146F2                     __end_of_canProcessMessage:
 35188                           	callstack 0
 35189                           
 35190 ;; *************** function _bootProcessMessage *****************
 35191 ;; Defined at:
 35192 ;;		line 231 in file "../../VLCBlib_PIC/boot.c"
 35193 ;; Parameters:    Size  Location     Type
 35194 ;;  m               2   82[COMRAM] PTR struct Message
 35195 ;;		 -> poll@m(9), 
 35196 ;; Auto vars:     Size  Location     Type
 35197 ;;		None
 35198 ;; Return value:  Size  Location     Type
 35199 ;;                  1    wreg      enum E23340
 35200 ;; Registers used:
 35201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35202 ;; Tracked objects:
 35203 ;;		On entry : 0/0
 35204 ;;		On exit  : 0/0
 35205 ;;		Unchanged: 0/0
 35206 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35209 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35210 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35211 ;;Total ram usage:        4 bytes
 35212 ;; Hardware stack levels used: 1
 35213 ;; Hardware stack levels required when called: 6
 35214 ;; This function calls:
 35215 ;;		_writeNVM
 35216 ;; This function is called by:
 35217 ;;		_APP_preProcessMessage
 35218 ;;		_poll
 35219 ;; This function uses a non-reentrant model
 35220 ;;
 35221                           
 35222                           	psect	text45
 35223   014816                     __ptext45:
 35224                           	callstack 0
 35225   014816                     _bootProcessMessage:
 35226                           	callstack 119
 35227                           
 35228                           ;../../VLCBlib_PIC/boot.c: 233:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 35229                           
 35230                           ;incstack = 0
 35231   014816  EE20 F002          	lfsr	2,2
 35232   01481A  5053               	movf	bootProcessMessage@m^(0+1280),w,c
 35233   01481C  26D9               	addwf	fsr2l,f,c
 35234   01481E  5054               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 35235   014820  22DA               	addwfc	fsr2h,f,c
 35236   014822  50DE               	movf	postinc2,w,c
 35237   014824  185F               	xorwf	(_nn+1)^(0+1280),w,c
 35238   014826  B4D8               	btfsc	status,2,c
 35239   014828  D002               	goto	l9883
 35240   01482A                     u7790:
 35241   01482A  0E00               	movlw	0
 35242   01482C  0012               	return	
 35243   01482E                     l9883:
 35244                           
 35245                           ;../../VLCBlib_PIC/boot.c: 234:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 35246   01482E  EE20 F003          	lfsr	2,3
 35247   014832  5053               	movf	bootProcessMessage@m^(0+1280),w,c
 35248   014834  26D9               	addwf	fsr2l,f,c
 35249   014836  5054               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 35250   014838  22DA               	addwfc	fsr2h,f,c
 35251   01483A  505E               	movf	_nn^(0+1280),w,c
 35252   01483C  18DE               	xorwf	postinc2,w,c
 35253   01483E  A4D8               	btfss	status,2,c
 35254   014840  D7F4               	goto	u7790
 35255   014842  D018               	goto	l9907
 35256   014844                     l9889:
 35257                           
 35258                           ;../../VLCBlib_PIC/boot.c: 239:             if (m->bytes[2] != MODE_BOOT) return NOT_PRO
      +                          CESSED;
 35259   014844  EE20 F004          	lfsr	2,4
 35260   014848  5053               	movf	bootProcessMessage@m^(0+1280),w,c
 35261   01484A  26D9               	addwf	fsr2l,f,c
 35262   01484C  5054               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 35263   01484E  22DA               	addwfc	fsr2h,f,c
 35264   014850  0E0E               	movlw	14
 35265   014852  18DE               	xorwf	postinc2,w,c
 35266   014854  A4D8               	btfss	status,2,c
 35267   014856  D7E9               	goto	u7790
 35268   014858                     l9895:
 35269                           
 35270                           ;../../VLCBlib_PIC/boot.c: 244:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 35271   014858  0EFF               	movlw	255
 35272   01485A  6E0E               	movwf	writeNVM@index^(0+1280),c
 35273   01485C  0E03               	movlw	3
 35274   01485E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 35275   014860  0E00               	movlw	0
 35276   014862  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 35277   014864  0EFF               	movlw	255
 35278   014866  6E11               	movwf	writeNVM@value^(0+1280),c
 35279   014868  0E00               	movlw	0
 35280   01486A  EC71  F0AD         	call	_writeNVM
 35281   01486E  00FF               	reset		;# 
 35282                           
 35283                           ;../../VLCBlib_PIC/boot.c: 246:             return PROCESSED;
 35284   014870  0E01               	movlw	1
 35285   014872  0012               	return	
 35286   014874                     l9907:
 35287   014874  EE20 F001          	lfsr	2,1
 35288   014878  5053               	movf	bootProcessMessage@m^(0+1280),w,c
 35289   01487A  26D9               	addwf	fsr2l,f,c
 35290   01487C  5054               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 35291   01487E  22DA               	addwfc	fsr2h,f,c
 35292   014880  50DF               	movf	indf2,w,c
 35293   014882  6E55               	movwf	??_bootProcessMessage^(0+1280),c
 35294   014884  6A56               	clrf	(??_bootProcessMessage+1)^(0+1280),c
 35295                           
 35296                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35297                           ; Switch size 1, requested type "simple"
 35298                           ; Number of cases is 1, Range of values is 0 to 0
 35299                           ; switch strategies available:
 35300                           ; Name         Instructions Cycles
 35301                           ; simple_byte            4     3 (average)
 35302                           ;	Chosen strategy is simple_byte
 35303   014886  5056               	movf	(??_bootProcessMessage+1)^(0+1280),w,c
 35304   014888  0A00               	xorlw	0	; case 0
 35305   01488A  A4D8               	btfss	status,2,c
 35306   01488C  D7CE               	goto	u7790
 35307                           
 35308                           ; Switch size 1, requested type "simple"
 35309                           ; Number of cases is 2, Range of values is 92 to 118
 35310                           ; switch strategies available:
 35311                           ; Name         Instructions Cycles
 35312                           ; simple_byte            7     4 (average)
 35313                           ;	Chosen strategy is simple_byte
 35314   01488E  5055               	movf	??_bootProcessMessage^(0+1280),w,c
 35315   014890  0A5C               	xorlw	92	; case 92
 35316   014892  B4D8               	btfsc	status,2,c
 35317   014894  D7E1               	goto	l9895
 35318   014896  0A2A               	xorlw	42	; case 118
 35319   014898  B4D8               	btfsc	status,2,c
 35320   01489A  D7D4               	goto	l9889
 35321   01489C  D7C6               	goto	u7790
 35322   01489E                     __end_of_bootProcessMessage:
 35323                           	callstack 0
 35324                           
 35325 ;; *************** function _teachProcessMessage *****************
 35326 ;; Defined at:
 35327 ;;		line 221 in file "../../VLCBlib_PIC/event_teach_simple.c"
 35328 ;; Parameters:    Size  Location     Type
 35329 ;;  m               2   82[COMRAM] PTR struct Message
 35330 ;;		 -> poll@m(9), 
 35331 ;; Auto vars:     Size  Location     Type
 35332 ;;		None
 35333 ;; Return value:  Size  Location     Type
 35334 ;;                  1    wreg      enum E23340
 35335 ;; Registers used:
 35336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 35337 ;; Tracked objects:
 35338 ;;		On entry : 0/0
 35339 ;;		On exit  : 0/0
 35340 ;;		Unchanged: 0/0
 35341 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 35342 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35344 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35345 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 35346 ;;Total ram usage:        8 bytes
 35347 ;; Hardware stack levels used: 1
 35348 ;; Hardware stack levels required when called: 10
 35349 ;; This function calls:
 35350 ;;		_doEvlrn
 35351 ;;		_doEvuln
 35352 ;;		_doNenrd
 35353 ;;		_doNerd
 35354 ;;		_doNnclr
 35355 ;;		_doNnevn
 35356 ;;		_doReqev
 35357 ;;		_doReval
 35358 ;;		_doRqevn
 35359 ;;		_sendMessage3
 35360 ;;		_sendMessage5
 35361 ;;		_teachCheckLen
 35362 ;; This function is called by:
 35363 ;;		_APP_preProcessMessage
 35364 ;;		_poll
 35365 ;; This function uses a non-reentrant model
 35366 ;;
 35367                           
 35368                           	psect	text46
 35369   010B16                     __ptext46:
 35370                           	callstack 0
 35371   010B16                     _teachProcessMessage:
 35372                           	callstack 115
 35373                           
 35374                           ;../../VLCBlib_PIC/event_teach_simple.c: 222:     switch(m->opc) {
 35375                           
 35376                           ;incstack = 0
 35377   010B16  D2A8               	goto	l10447
 35378   010B18                     l10189:
 35379                           
 35380                           ;../../VLCBlib_PIC/event_teach_simple.c: 225:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 35381   010B18  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 35382   010B1C  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 35383   010B20  0E03               	movlw	3
 35384   010B22  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 35385   010B24  0E00               	movlw	0
 35386   010B26  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 35387   010B28  ECB3  F0AA         	call	_teachCheckLen	;wreg free
 35388   010B2C  06E8               	decf	wreg,f,c
 35389   010B2E  A4D8               	btfss	status,2,c
 35390   010B30  D002               	goto	l10195
 35391   010B32                     u8180:
 35392   010B32  0E01               	movlw	1
 35393   010B34  0012               	return	
 35394   010B36                     l10195:
 35395                           
 35396                           ;../../VLCBlib_PIC/event_teach_simple.c: 226:             if ((m->bytes[0] == nn.bytes.h
      +                          i) && (m->bytes[1] == nn.bytes.lo)) {
 35397   010B36  EE20 F002          	lfsr	2,2
 35398   010B3A  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35399   010B3C  26D9               	addwf	fsr2l,f,c
 35400   010B3E  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35401   010B40  22DA               	addwfc	fsr2h,f,c
 35402   010B42  50DE               	movf	postinc2,w,c
 35403   010B44  185F               	xorwf	(_nn+1)^(0+1280),w,c
 35404   010B46  A4D8               	btfss	status,2,c
 35405   010B48  D00D               	goto	l10201
 35406   010B4A  EE20 F003          	lfsr	2,3
 35407   010B4E  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35408   010B50  26D9               	addwf	fsr2l,f,c
 35409   010B52  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35410   010B54  22DA               	addwfc	fsr2h,f,c
 35411   010B56  505E               	movf	_nn^(0+1280),w,c
 35412   010B58  18DE               	xorwf	postinc2,w,c
 35413   010B5A  A4D8               	btfss	status,2,c
 35414   010B5C  D003               	goto	l10201
 35415   010B5E                     u8200:
 35416                           
 35417                           ;../../VLCBlib_PIC/event_teach_simple.c: 227:                 mode_flags |= 1;
 35418   010B5E  0105               	movlb	5	; () banked
 35419   010B60  819F               	bsf	_mode_flags& (0+255),0,b
 35420                           
 35421                           ;../../VLCBlib_PIC/event_teach_simple.c: 228:             } else {
 35422   010B62  D7E7               	goto	u8180
 35423   010B64                     l10201:
 35424                           
 35425                           ;../../VLCBlib_PIC/event_teach_simple.c: 229:                 mode_flags &= ~1;
 35426   010B64  0105               	movlb	5	; () banked
 35427   010B66  919F               	bcf	_mode_flags& (0+255),0,b
 35428   010B68  D7E4               	goto	u8180
 35429   010B6A                     l10207:
 35430                           
 35431                           ;../../VLCBlib_PIC/event_teach_simple.c: 234:             if (teachCheckLen(m, 4, 0) == 
      +                          PROCESSED) return PROCESSED;
 35432   010B6A  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 35433   010B6E  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 35434   010B72  0E04               	movlw	4
 35435   010B74  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 35436   010B76  0E00               	movlw	0
 35437   010B78  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 35438   010B7A  ECB3  F0AA         	call	_teachCheckLen	;wreg free
 35439   010B7E  06E8               	decf	wreg,f,c
 35440   010B80  B4D8               	btfsc	status,2,c
 35441   010B82  D7D7               	goto	u8180
 35442                           
 35443                           ;../../VLCBlib_PIC/event_teach_simple.c: 235:             if ((m->bytes[0] == nn.bytes.h
      +                          i) && (m->bytes[1] == nn.bytes.lo)) {
 35444   010B84  EE20 F002          	lfsr	2,2
 35445   010B88  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35446   010B8A  26D9               	addwf	fsr2l,f,c
 35447   010B8C  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35448   010B8E  22DA               	addwfc	fsr2h,f,c
 35449   010B90  50DE               	movf	postinc2,w,c
 35450   010B92  185F               	xorwf	(_nn+1)^(0+1280),w,c
 35451   010B94  A4D8               	btfss	status,2,c
 35452   010B96  D01F               	goto	l10235
 35453   010B98  EE20 F003          	lfsr	2,3
 35454   010B9C  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35455   010B9E  26D9               	addwf	fsr2l,f,c
 35456   010BA0  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35457   010BA2  22DA               	addwfc	fsr2h,f,c
 35458   010BA4  505E               	movf	_nn^(0+1280),w,c
 35459   010BA6  18DE               	xorwf	postinc2,w,c
 35460   010BA8  A4D8               	btfss	status,2,c
 35461   010BAA  D015               	goto	l10235
 35462                           
 35463                           ;../../VLCBlib_PIC/event_teach_simple.c: 236:                 if (m->bytes[2] == MODE_LE
      +                          ARN_ON) {
 35464   010BAC  EE20 F004          	lfsr	2,4
 35465   010BB0  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35466   010BB2  26D9               	addwf	fsr2l,f,c
 35467   010BB4  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35468   010BB6  22DA               	addwfc	fsr2h,f,c
 35469   010BB8  0E08               	movlw	8
 35470   010BBA  18DE               	xorwf	postinc2,w,c
 35471   010BBC  B4D8               	btfsc	status,2,c
 35472   010BBE  D7CF               	goto	u8200
 35473   010BC0  EE20 F004          	lfsr	2,4
 35474   010BC4  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35475   010BC6  26D9               	addwf	fsr2l,f,c
 35476   010BC8  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35477   010BCA  22DA               	addwfc	fsr2h,f,c
 35478   010BCC  0E09               	movlw	9
 35479   010BCE  18DE               	xorwf	postinc2,w,c
 35480   010BD0  B4D8               	btfsc	status,2,c
 35481   010BD2  D7C8               	goto	l10201
 35482   010BD4  D002               	goto	l10237
 35483   010BD6                     l10235:
 35484                           
 35485                           ;../../VLCBlib_PIC/event_teach_simple.c: 247:                 mode_flags &= ~1;
 35486   010BD6  0105               	movlb	5	; () banked
 35487   010BD8  919F               	bcf	_mode_flags& (0+255),0,b
 35488   010BDA                     l10237:
 35489                           
 35490                           ;../../VLCBlib_PIC/event_teach_simple.c: 249:             return NOT_PROCESSED;
 35491   010BDA  0E00               	movlw	0
 35492   010BDC  0012               	return	
 35493   010BDE                     l10241:
 35494                           
 35495                           ;../../VLCBlib_PIC/event_teach_simple.c: 253:             if (teachCheckLen(m, 7, 1) == 
      +                          PROCESSED) {
 35496   010BDE  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 35497   010BE2  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 35498   010BE6  0E07               	movlw	7
 35499   010BE8  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 35500   010BEA  0E01               	movlw	1
 35501   010BEC  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 35502   010BEE  ECB3  F0AA         	call	_teachCheckLen	;wreg free
 35503   010BF2  06E8               	decf	wreg,f,c
 35504   010BF4  A4D8               	btfss	status,2,c
 35505   010BF6  D00A               	goto	l1208
 35506                           
 35507                           ;../../VLCBlib_PIC/event_teach_simple.c: 254:                 sendMessage3(OPC_CMDERR, n
      +                          n.bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 35508   010BF8  C55F  F525         	movff	_nn+1,sendMessage3@data1
 35509   010BFC  C55E  F526         	movff	_nn,sendMessage3@data2
 35510   010C00  0E01               	movlw	1
 35511   010C02  6E27               	movwf	sendMessage3@data3^(0+1280),c
 35512   010C04  0E6F               	movlw	111
 35513   010C06  ECF7  F0B0         	call	_sendMessage3
 35514   010C0A  D793               	goto	u8180
 35515   010C0C                     l1208:
 35516                           
 35517                           ;../../VLCBlib_PIC/event_teach_simple.c: 258:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 35518   010C0C  0105               	movlb	5	; () banked
 35519   010C0E  A19F               	btfss	_mode_flags& (0+255),0,b
 35520   010C10  D790               	goto	u8180
 35521                           
 35522                           ; BSR set to: 5
 35523                           ;../../VLCBlib_PIC/event_teach_simple.c: 260:             doEvlrn((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[
      +                          5]);
 35524   010C12  EE20 F003          	lfsr	2,3
 35525   010C16  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35526   010C18  26D9               	addwf	fsr2l,f,c
 35527   010C1A  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35528   010C1C  22DA               	addwfc	fsr2h,f,c
 35529   010C1E  50DF               	movf	indf2,w,c
 35530   010C20  6E55               	movwf	??_teachProcessMessage^(0+1280),c
 35531   010C22  EE20 F002          	lfsr	2,2
 35532   010C26  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35533   010C28  26D9               	addwf	fsr2l,f,c
 35534   010C2A  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35535   010C2C  22DA               	addwfc	fsr2h,f,c
 35536   010C2E  50DF               	movf	indf2,w,c
 35537   010C30  6E56               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 35538   010C32  5055               	movf	??_teachProcessMessage^(0+1280),w,c
 35539   010C34  6E4D               	movwf	doEvlrn@nodeNumber^(0+1280),c
 35540   010C36  C556  F54E         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 35541   010C3A  EE20 F005          	lfsr	2,5
 35542   010C3E  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35543   010C40  26D9               	addwf	fsr2l,f,c
 35544   010C42  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35545   010C44  22DA               	addwfc	fsr2h,f,c
 35546   010C46  50DF               	movf	indf2,w,c
 35547   010C48  6E58               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 35548   010C4A  EE20 F004          	lfsr	2,4
 35549   010C4E  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35550   010C50  26D9               	addwf	fsr2l,f,c
 35551   010C52  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35552   010C54  22DA               	addwfc	fsr2h,f,c
 35553   010C56  50DF               	movf	indf2,w,c
 35554   010C58  6E59               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 35555   010C5A  5058               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 35556   010C5C  6E4F               	movwf	doEvlrn@eventNumber^(0+1280),c
 35557   010C5E  C559  F550         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 35558   010C62  EE20 F006          	lfsr	2,6
 35559   010C66  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35560   010C68  26D9               	addwf	fsr2l,f,c
 35561   010C6A  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35562   010C6C  22DA               	addwfc	fsr2h,f,c
 35563   010C6E  50DF               	movf	indf2,w,c
 35564   010C70  6E51               	movwf	doEvlrn@evNum^(0+1280),c
 35565   010C72  EE20 F007          	lfsr	2,7
 35566   010C76  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35567   010C78  26D9               	addwf	fsr2l,f,c
 35568   010C7A  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35569   010C7C  22DA               	addwfc	fsr2h,f,c
 35570   010C7E  50DF               	movf	indf2,w,c
 35571   010C80  6E52               	movwf	doEvlrn@evVal^(0+1280),c
 35572   010C82  EC1F  F0A1         	call	_doEvlrn	;wreg free
 35573   010C86  D755               	goto	u8180
 35574   010C88                     l10259:
 35575                           
 35576                           ;../../VLCBlib_PIC/event_teach_simple.c: 263:             if (teachCheckLen(m, 5, 1) == 
      +                          PROCESSED) return PROCESSED;
 35577   010C88  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 35578   010C8C  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 35579   010C90  0E05               	movlw	5
 35580   010C92  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 35581   010C94  0E01               	movlw	1
 35582   010C96  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 35583   010C98  ECB3  F0AA         	call	_teachCheckLen	;wreg free
 35584   010C9C  06E8               	decf	wreg,f,c
 35585   010C9E  B4D8               	btfsc	status,2,c
 35586   010CA0  D748               	goto	u8180
 35587                           
 35588                           ;../../VLCBlib_PIC/event_teach_simple.c: 264:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 35589   010CA2  0105               	movlb	5	; () banked
 35590   010CA4  A19F               	btfss	_mode_flags& (0+255),0,b
 35591   010CA6  D745               	goto	u8180
 35592                           
 35593                           ; BSR set to: 5
 35594                           ;../../VLCBlib_PIC/event_teach_simple.c: 266:             doEvuln((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 35595   010CA8  EE20 F003          	lfsr	2,3
 35596   010CAC  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35597   010CAE  26D9               	addwf	fsr2l,f,c
 35598   010CB0  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35599   010CB2  22DA               	addwfc	fsr2h,f,c
 35600   010CB4  50DF               	movf	indf2,w,c
 35601   010CB6  6E55               	movwf	??_teachProcessMessage^(0+1280),c
 35602   010CB8  EE20 F002          	lfsr	2,2
 35603   010CBC  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35604   010CBE  26D9               	addwf	fsr2l,f,c
 35605   010CC0  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35606   010CC2  22DA               	addwfc	fsr2h,f,c
 35607   010CC4  50DF               	movf	indf2,w,c
 35608   010CC6  6E56               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 35609   010CC8  5055               	movf	??_teachProcessMessage^(0+1280),w,c
 35610   010CCA  6E33               	movwf	doEvuln@nodeNumber^(0+1280),c
 35611   010CCC  C556  F534         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 35612   010CD0  EE20 F005          	lfsr	2,5
 35613   010CD4  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35614   010CD6  26D9               	addwf	fsr2l,f,c
 35615   010CD8  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35616   010CDA  22DA               	addwfc	fsr2h,f,c
 35617   010CDC  50DF               	movf	indf2,w,c
 35618   010CDE  6E58               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 35619   010CE0  EE20 F004          	lfsr	2,4
 35620   010CE4  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35621   010CE6  26D9               	addwf	fsr2l,f,c
 35622   010CE8  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35623   010CEA  22DA               	addwfc	fsr2h,f,c
 35624   010CEC  50DF               	movf	indf2,w,c
 35625   010CEE  6E59               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 35626   010CF0  5058               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 35627   010CF2  6E35               	movwf	doEvuln@eventNumber^(0+1280),c
 35628   010CF4  C559  F536         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 35629   010CF8  EC8E  F0A7         	call	_doEvuln	;wreg free
 35630   010CFC  D71A               	goto	u8180
 35631   010CFE                     l10275:
 35632                           
 35633                           ;../../VLCBlib_PIC/event_teach_simple.c: 269:             if (teachCheckLen(m, 6, 1) == 
      +                          PROCESSED) return PROCESSED;
 35634   010CFE  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 35635   010D02  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 35636   010D06  0E06               	movlw	6
 35637   010D08  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 35638   010D0A  0E01               	movlw	1
 35639   010D0C  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 35640   010D0E  ECB3  F0AA         	call	_teachCheckLen	;wreg free
 35641   010D12  06E8               	decf	wreg,f,c
 35642   010D14  B4D8               	btfsc	status,2,c
 35643   010D16  D70D               	goto	u8180
 35644                           
 35645                           ;../../VLCBlib_PIC/event_teach_simple.c: 270:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 35646   010D18  0105               	movlb	5	; () banked
 35647   010D1A  A19F               	btfss	_mode_flags& (0+255),0,b
 35648   010D1C  D70A               	goto	u8180
 35649                           
 35650                           ; BSR set to: 5
 35651                           ;../../VLCBlib_PIC/event_teach_simple.c: 272:             doReqev((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 35652   010D1E  EE20 F003          	lfsr	2,3
 35653   010D22  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35654   010D24  26D9               	addwf	fsr2l,f,c
 35655   010D26  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35656   010D28  22DA               	addwfc	fsr2h,f,c
 35657   010D2A  50DF               	movf	indf2,w,c
 35658   010D2C  6E55               	movwf	??_teachProcessMessage^(0+1280),c
 35659   010D2E  EE20 F002          	lfsr	2,2
 35660   010D32  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35661   010D34  26D9               	addwf	fsr2l,f,c
 35662   010D36  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35663   010D38  22DA               	addwfc	fsr2h,f,c
 35664   010D3A  50DF               	movf	indf2,w,c
 35665   010D3C  6E56               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 35666   010D3E  5055               	movf	??_teachProcessMessage^(0+1280),w,c
 35667   010D40  6E2C               	movwf	doReqev@nodeNumber^(0+1280),c
 35668   010D42  C556  F52D         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 35669   010D46  EE20 F005          	lfsr	2,5
 35670   010D4A  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35671   010D4C  26D9               	addwf	fsr2l,f,c
 35672   010D4E  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35673   010D50  22DA               	addwfc	fsr2h,f,c
 35674   010D52  50DF               	movf	indf2,w,c
 35675   010D54  6E58               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 35676   010D56  EE20 F004          	lfsr	2,4
 35677   010D5A  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35678   010D5C  26D9               	addwf	fsr2l,f,c
 35679   010D5E  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35680   010D60  22DA               	addwfc	fsr2h,f,c
 35681   010D62  50DF               	movf	indf2,w,c
 35682   010D64  6E59               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 35683   010D66  5058               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 35684   010D68  6E2E               	movwf	doReqev@eventNumber^(0+1280),c
 35685   010D6A  C559  F52F         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 35686   010D6E  EE20 F006          	lfsr	2,6
 35687   010D72  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35688   010D74  26D9               	addwf	fsr2l,f,c
 35689   010D76  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35690   010D78  22DA               	addwfc	fsr2h,f,c
 35691   010D7A  50DF               	movf	indf2,w,c
 35692   010D7C  6E30               	movwf	doReqev@evNum^(0+1280),c
 35693   010D7E  EC15  F09A         	call	_doReqev	;wreg free
 35694   010D82  D6D7               	goto	u8180
 35695   010D84                     l10291:
 35696                           
 35697                           ;../../VLCBlib_PIC/event_teach_simple.c: 276:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 35698   010D84  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 35699   010D88  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 35700   010D8C  0E03               	movlw	3
 35701   010D8E  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 35702   010D90  0E00               	movlw	0
 35703   010D92  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 35704   010D94  ECB3  F0AA         	call	_teachCheckLen	;wreg free
 35705   010D98  06E8               	decf	wreg,f,c
 35706   010D9A  B4D8               	btfsc	status,2,c
 35707   010D9C  D6CA               	goto	u8180
 35708                           
 35709                           ;../../VLCBlib_PIC/event_teach_simple.c: 277:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 35710   010D9E  EE20 F002          	lfsr	2,2
 35711   010DA2  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35712   010DA4  26D9               	addwf	fsr2l,f,c
 35713   010DA6  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35714   010DA8  22DA               	addwfc	fsr2h,f,c
 35715   010DAA  50DE               	movf	postinc2,w,c
 35716   010DAC  185F               	xorwf	(_nn+1)^(0+1280),w,c
 35717   010DAE  A4D8               	btfss	status,2,c
 35718   010DB0  D6C0               	goto	u8180
 35719   010DB2  EE20 F003          	lfsr	2,3
 35720   010DB6  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35721   010DB8  26D9               	addwf	fsr2l,f,c
 35722   010DBA  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35723   010DBC  22DA               	addwfc	fsr2h,f,c
 35724   010DBE  505E               	movf	_nn^(0+1280),w,c
 35725   010DC0  18DE               	xorwf	postinc2,w,c
 35726   010DC2  A4D8               	btfss	status,2,c
 35727   010DC4  D6B6               	goto	u8180
 35728   010DC6  D6CE               	goto	l10201
 35729   010DC8                     l10311:
 35730                           
 35731                           ;../../VLCBlib_PIC/event_teach_simple.c: 282:             if (teachCheckLen(m, 3, 1) == 
      +                          PROCESSED) return PROCESSED;
 35732   010DC8  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 35733   010DCC  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 35734   010DD0  0E03               	movlw	3
 35735   010DD2  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 35736   010DD4  0E01               	movlw	1
 35737   010DD6  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 35738   010DD8  ECB3  F0AA         	call	_teachCheckLen	;wreg free
 35739   010DDC  06E8               	decf	wreg,f,c
 35740   010DDE  B4D8               	btfsc	status,2,c
 35741   010DE0  D6A8               	goto	u8180
 35742                           
 35743                           ;../../VLCBlib_PIC/event_teach_simple.c: 283:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 35744   010DE2  EE20 F002          	lfsr	2,2
 35745   010DE6  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35746   010DE8  26D9               	addwf	fsr2l,f,c
 35747   010DEA  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35748   010DEC  22DA               	addwfc	fsr2h,f,c
 35749   010DEE  50DE               	movf	postinc2,w,c
 35750   010DF0  185F               	xorwf	(_nn+1)^(0+1280),w,c
 35751   010DF2  A4D8               	btfss	status,2,c
 35752   010DF4  D69E               	goto	u8180
 35753   010DF6  EE20 F003          	lfsr	2,3
 35754   010DFA  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35755   010DFC  26D9               	addwf	fsr2l,f,c
 35756   010DFE  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35757   010E00  22DA               	addwfc	fsr2h,f,c
 35758   010E02  505E               	movf	_nn^(0+1280),w,c
 35759   010E04  18DE               	xorwf	postinc2,w,c
 35760   010E06  A4D8               	btfss	status,2,c
 35761   010E08  D694               	goto	u8180
 35762                           
 35763                           ;../../VLCBlib_PIC/event_teach_simple.c: 285:             if (! (mode_flags & 1)) {
 35764   010E0A  0105               	movlb	5	; () banked
 35765   010E0C  B19F               	btfsc	_mode_flags& (0+255),0,b
 35766   010E0E  D017               	goto	l10331
 35767                           
 35768                           ; BSR set to: 5
 35769                           ;../../VLCBlib_PIC/event_teach_simple.c: 286:                 sendMessage3(OPC_CMDERR, n
      +                          n.bytes.hi, nn.bytes.lo, CMDERR_NOT_LRN);
 35770   010E10  C55F  F525         	movff	_nn+1,sendMessage3@data1
 35771   010E14  C55E  F526         	movff	_nn,sendMessage3@data2
 35772   010E18  0E02               	movlw	2
 35773   010E1A  6E27               	movwf	sendMessage3@data3^(0+1280),c
 35774   010E1C  0E6F               	movlw	111
 35775   010E1E  ECF7  F0B0         	call	_sendMessage3
 35776                           
 35777                           ;../../VLCBlib_PIC/event_teach_simple.c: 288:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 35778   010E22  C55F  F525         	movff	_nn+1,sendMessage5@data1
 35779   010E26  C55E  F526         	movff	_nn,sendMessage5@data2
 35780   010E2A  0E55               	movlw	85
 35781   010E2C  6E27               	movwf	sendMessage5@data3^(0+1280),c
 35782   010E2E  0E04               	movlw	4
 35783   010E30  6E28               	movwf	sendMessage5@data4^(0+1280),c
 35784   010E32  0E02               	movlw	2
 35785   010E34  6E29               	movwf	sendMessage5@data5^(0+1280),c
 35786   010E36  0EAF               	movlw	175
 35787   010E38  EC36  F0B1         	call	_sendMessage5
 35788   010E3C  D67A               	goto	u8180
 35789   010E3E                     l10331:
 35790                           
 35791                           ; BSR set to: 5
 35792                           ;../../VLCBlib_PIC/event_teach_simple.c: 293:             doNnclr();
 35793   010E3E  EC89  F0B0         	call	_doNnclr	;wreg free
 35794                           
 35795                           ;../../VLCBlib_PIC/event_teach_simple.c: 294:             break;
 35796   010E42  D6CB               	goto	l10237
 35797   010E44                     l10333:
 35798                           
 35799                           ;../../VLCBlib_PIC/event_teach_simple.c: 296:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 35800   010E44  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 35801   010E48  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 35802   010E4C  0E03               	movlw	3
 35803   010E4E  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 35804   010E50  0E00               	movlw	0
 35805   010E52  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 35806   010E54  ECB3  F0AA         	call	_teachCheckLen	;wreg free
 35807   010E58  06E8               	decf	wreg,f,c
 35808   010E5A  B4D8               	btfsc	status,2,c
 35809   010E5C  D66A               	goto	u8180
 35810                           
 35811                           ;../../VLCBlib_PIC/event_teach_simple.c: 297:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 35812   010E5E  EE20 F002          	lfsr	2,2
 35813   010E62  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35814   010E64  26D9               	addwf	fsr2l,f,c
 35815   010E66  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35816   010E68  22DA               	addwfc	fsr2h,f,c
 35817   010E6A  50DE               	movf	postinc2,w,c
 35818   010E6C  185F               	xorwf	(_nn+1)^(0+1280),w,c
 35819   010E6E  A4D8               	btfss	status,2,c
 35820   010E70  D660               	goto	u8180
 35821   010E72  EE20 F003          	lfsr	2,3
 35822   010E76  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35823   010E78  26D9               	addwf	fsr2l,f,c
 35824   010E7A  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35825   010E7C  22DA               	addwfc	fsr2h,f,c
 35826   010E7E  505E               	movf	_nn^(0+1280),w,c
 35827   010E80  18DE               	xorwf	postinc2,w,c
 35828   010E82  A4D8               	btfss	status,2,c
 35829   010E84  D656               	goto	u8180
 35830                           
 35831                           ;../../VLCBlib_PIC/event_teach_simple.c: 299:             doNerd();
 35832   010E86  EC5B  F0B2         	call	_doNerd	;wreg free
 35833   010E8A  D653               	goto	u8180
 35834   010E8C                     l10353:
 35835                           
 35836                           ;../../VLCBlib_PIC/event_teach_simple.c: 302:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 35837   010E8C  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 35838   010E90  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 35839   010E94  0E03               	movlw	3
 35840   010E96  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 35841   010E98  0E00               	movlw	0
 35842   010E9A  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 35843   010E9C  ECB3  F0AA         	call	_teachCheckLen	;wreg free
 35844   010EA0  06E8               	decf	wreg,f,c
 35845   010EA2  B4D8               	btfsc	status,2,c
 35846   010EA4  D646               	goto	u8180
 35847                           
 35848                           ;../../VLCBlib_PIC/event_teach_simple.c: 303:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 35849   010EA6  EE20 F002          	lfsr	2,2
 35850   010EAA  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35851   010EAC  26D9               	addwf	fsr2l,f,c
 35852   010EAE  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35853   010EB0  22DA               	addwfc	fsr2h,f,c
 35854   010EB2  50DE               	movf	postinc2,w,c
 35855   010EB4  185F               	xorwf	(_nn+1)^(0+1280),w,c
 35856   010EB6  A4D8               	btfss	status,2,c
 35857   010EB8  D63C               	goto	u8180
 35858   010EBA  EE20 F003          	lfsr	2,3
 35859   010EBE  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35860   010EC0  26D9               	addwf	fsr2l,f,c
 35861   010EC2  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35862   010EC4  22DA               	addwfc	fsr2h,f,c
 35863   010EC6  505E               	movf	_nn^(0+1280),w,c
 35864   010EC8  18DE               	xorwf	postinc2,w,c
 35865   010ECA  A4D8               	btfss	status,2,c
 35866   010ECC  D632               	goto	u8180
 35867                           
 35868                           ;../../VLCBlib_PIC/event_teach_simple.c: 305:             doNnevn();
 35869   010ECE  ECD6  F0AF         	call	_doNnevn	;wreg free
 35870   010ED2  D62F               	goto	u8180
 35871   010ED4                     l10373:
 35872                           
 35873                           ;../../VLCBlib_PIC/event_teach_simple.c: 308:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 35874   010ED4  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 35875   010ED8  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 35876   010EDC  0E03               	movlw	3
 35877   010EDE  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 35878   010EE0  0E00               	movlw	0
 35879   010EE2  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 35880   010EE4  ECB3  F0AA         	call	_teachCheckLen	;wreg free
 35881   010EE8  06E8               	decf	wreg,f,c
 35882   010EEA  B4D8               	btfsc	status,2,c
 35883   010EEC  D622               	goto	u8180
 35884                           
 35885                           ;../../VLCBlib_PIC/event_teach_simple.c: 309:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 35886   010EEE  EE20 F002          	lfsr	2,2
 35887   010EF2  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35888   010EF4  26D9               	addwf	fsr2l,f,c
 35889   010EF6  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35890   010EF8  22DA               	addwfc	fsr2h,f,c
 35891   010EFA  50DE               	movf	postinc2,w,c
 35892   010EFC  185F               	xorwf	(_nn+1)^(0+1280),w,c
 35893   010EFE  A4D8               	btfss	status,2,c
 35894   010F00  D618               	goto	u8180
 35895   010F02  EE20 F003          	lfsr	2,3
 35896   010F06  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35897   010F08  26D9               	addwf	fsr2l,f,c
 35898   010F0A  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35899   010F0C  22DA               	addwfc	fsr2h,f,c
 35900   010F0E  505E               	movf	_nn^(0+1280),w,c
 35901   010F10  18DE               	xorwf	postinc2,w,c
 35902   010F12  A4D8               	btfss	status,2,c
 35903   010F14  D60E               	goto	u8180
 35904                           
 35905                           ;../../VLCBlib_PIC/event_teach_simple.c: 311:             doRqevn();
 35906   010F16  ECBB  F0AF         	call	_doRqevn	;wreg free
 35907   010F1A  D60B               	goto	u8180
 35908   010F1C                     l10393:
 35909                           
 35910                           ;../../VLCBlib_PIC/event_teach_simple.c: 314:             if (teachCheckLen(m, 4, 0) == 
      +                          PROCESSED) return PROCESSED;
 35911   010F1C  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 35912   010F20  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 35913   010F24  0E04               	movlw	4
 35914   010F26  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 35915   010F28  0E00               	movlw	0
 35916   010F2A  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 35917   010F2C  ECB3  F0AA         	call	_teachCheckLen	;wreg free
 35918   010F30  06E8               	decf	wreg,f,c
 35919   010F32  B4D8               	btfsc	status,2,c
 35920   010F34  D5FE               	goto	u8180
 35921                           
 35922                           ;../../VLCBlib_PIC/event_teach_simple.c: 315:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 35923   010F36  EE20 F002          	lfsr	2,2
 35924   010F3A  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35925   010F3C  26D9               	addwf	fsr2l,f,c
 35926   010F3E  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35927   010F40  22DA               	addwfc	fsr2h,f,c
 35928   010F42  50DE               	movf	postinc2,w,c
 35929   010F44  185F               	xorwf	(_nn+1)^(0+1280),w,c
 35930   010F46  A4D8               	btfss	status,2,c
 35931   010F48  D5F4               	goto	u8180
 35932   010F4A  EE20 F003          	lfsr	2,3
 35933   010F4E  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35934   010F50  26D9               	addwf	fsr2l,f,c
 35935   010F52  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35936   010F54  22DA               	addwfc	fsr2h,f,c
 35937   010F56  505E               	movf	_nn^(0+1280),w,c
 35938   010F58  18DE               	xorwf	postinc2,w,c
 35939   010F5A  A4D8               	btfss	status,2,c
 35940   010F5C  D5EA               	goto	u8180
 35941                           
 35942                           ;../../VLCBlib_PIC/event_teach_simple.c: 317:             doNenrd(m->bytes[2]);
 35943   010F5E  EE20 F004          	lfsr	2,4
 35944   010F62  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35945   010F64  26D9               	addwf	fsr2l,f,c
 35946   010F66  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35947   010F68  22DA               	addwfc	fsr2h,f,c
 35948   010F6A  50DF               	movf	indf2,w,c
 35949   010F6C  EC18  F0A7         	call	_doNenrd
 35950   010F70  D5E0               	goto	u8180
 35951   010F72                     l10413:
 35952                           
 35953                           ;../../VLCBlib_PIC/event_teach_simple.c: 320:             if (teachCheckLen(m, 5, 0) == 
      +                          PROCESSED) return PROCESSED;
 35954   010F72  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 35955   010F76  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 35956   010F7A  0E05               	movlw	5
 35957   010F7C  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 35958   010F7E  0E00               	movlw	0
 35959   010F80  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 35960   010F82  ECB3  F0AA         	call	_teachCheckLen	;wreg free
 35961   010F86  06E8               	decf	wreg,f,c
 35962   010F88  B4D8               	btfsc	status,2,c
 35963   010F8A  D5D3               	goto	u8180
 35964                           
 35965                           ;../../VLCBlib_PIC/event_teach_simple.c: 321:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 35966   010F8C  EE20 F002          	lfsr	2,2
 35967   010F90  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35968   010F92  26D9               	addwf	fsr2l,f,c
 35969   010F94  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35970   010F96  22DA               	addwfc	fsr2h,f,c
 35971   010F98  50DE               	movf	postinc2,w,c
 35972   010F9A  185F               	xorwf	(_nn+1)^(0+1280),w,c
 35973   010F9C  A4D8               	btfss	status,2,c
 35974   010F9E  D5C9               	goto	u8180
 35975   010FA0  EE20 F003          	lfsr	2,3
 35976   010FA4  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35977   010FA6  26D9               	addwf	fsr2l,f,c
 35978   010FA8  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35979   010FAA  22DA               	addwfc	fsr2h,f,c
 35980   010FAC  505E               	movf	_nn^(0+1280),w,c
 35981   010FAE  18DE               	xorwf	postinc2,w,c
 35982   010FB0  A4D8               	btfss	status,2,c
 35983   010FB2  D5BF               	goto	u8180
 35984                           
 35985                           ;../../VLCBlib_PIC/event_teach_simple.c: 323:             doReval(m->bytes[2], m->bytes[
      +                          3]);
 35986   010FB4  EE20 F005          	lfsr	2,5
 35987   010FB8  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35988   010FBA  26D9               	addwf	fsr2l,f,c
 35989   010FBC  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35990   010FBE  22DA               	addwfc	fsr2h,f,c
 35991   010FC0  50DF               	movf	indf2,w,c
 35992   010FC2  6E2B               	movwf	doReval@evNum^(0+1280),c
 35993   010FC4  EE20 F004          	lfsr	2,4
 35994   010FC8  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 35995   010FCA  26D9               	addwf	fsr2l,f,c
 35996   010FCC  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 35997   010FCE  22DA               	addwfc	fsr2h,f,c
 35998   010FD0  50DF               	movf	indf2,w,c
 35999   010FD2  EC01  F0A0         	call	_doReval
 36000   010FD6  D5AD               	goto	u8180
 36001   010FD8                     l10433:
 36002                           
 36003                           ;../../VLCBlib_PIC/event_teach_simple.c: 326:             if (teachCheckLen(m, 8, 1) == 
      +                          PROCESSED) return PROCESSED;
 36004   010FD8  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 36005   010FDC  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 36006   010FE0  0E08               	movlw	8
 36007   010FE2  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 36008   010FE4  0E01               	movlw	1
 36009   010FE6  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 36010   010FE8  ECB3  F0AA         	call	_teachCheckLen	;wreg free
 36011   010FEC  06E8               	decf	wreg,f,c
 36012   010FEE  B4D8               	btfsc	status,2,c
 36013   010FF0  D5A0               	goto	u8180
 36014                           
 36015                           ;../../VLCBlib_PIC/event_teach_simple.c: 328:             doEvlrn((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[
      +                          6]);
 36016   010FF2  EE20 F003          	lfsr	2,3
 36017   010FF6  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36018   010FF8  26D9               	addwf	fsr2l,f,c
 36019   010FFA  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36020   010FFC  22DA               	addwfc	fsr2h,f,c
 36021   010FFE  50DF               	movf	indf2,w,c
 36022   011000  6E55               	movwf	??_teachProcessMessage^(0+1280),c
 36023   011002  EE20 F002          	lfsr	2,2
 36024   011006  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36025   011008  26D9               	addwf	fsr2l,f,c
 36026   01100A  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36027   01100C  22DA               	addwfc	fsr2h,f,c
 36028   01100E  50DF               	movf	indf2,w,c
 36029   011010  6E56               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 36030   011012  5055               	movf	??_teachProcessMessage^(0+1280),w,c
 36031   011014  6E4D               	movwf	doEvlrn@nodeNumber^(0+1280),c
 36032   011016  C556  F54E         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 36033   01101A  EE20 F005          	lfsr	2,5
 36034   01101E  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36035   011020  26D9               	addwf	fsr2l,f,c
 36036   011022  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36037   011024  22DA               	addwfc	fsr2h,f,c
 36038   011026  50DF               	movf	indf2,w,c
 36039   011028  6E58               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 36040   01102A  EE20 F004          	lfsr	2,4
 36041   01102E  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36042   011030  26D9               	addwf	fsr2l,f,c
 36043   011032  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36044   011034  22DA               	addwfc	fsr2h,f,c
 36045   011036  50DF               	movf	indf2,w,c
 36046   011038  6E59               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 36047   01103A  5058               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 36048   01103C  6E4F               	movwf	doEvlrn@eventNumber^(0+1280),c
 36049   01103E  C559  F550         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 36050   011042  EE20 F007          	lfsr	2,7
 36051   011046  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36052   011048  26D9               	addwf	fsr2l,f,c
 36053   01104A  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36054   01104C  22DA               	addwfc	fsr2h,f,c
 36055   01104E  50DF               	movf	indf2,w,c
 36056   011050  6E51               	movwf	doEvlrn@evNum^(0+1280),c
 36057   011052  EE20 F008          	lfsr	2,8
 36058   011056  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36059   011058  26D9               	addwf	fsr2l,f,c
 36060   01105A  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36061   01105C  22DA               	addwfc	fsr2h,f,c
 36062   01105E  50DF               	movf	indf2,w,c
 36063   011060  6E52               	movwf	doEvlrn@evVal^(0+1280),c
 36064   011062  EC1F  F0A1         	call	_doEvlrn	;wreg free
 36065   011066  D565               	goto	u8180
 36066   011068                     l10447:
 36067   011068  EE20 F001          	lfsr	2,1
 36068   01106C  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36069   01106E  26D9               	addwf	fsr2l,f,c
 36070   011070  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36071   011072  22DA               	addwfc	fsr2h,f,c
 36072   011074  50DF               	movf	indf2,w,c
 36073   011076  6E55               	movwf	??_teachProcessMessage^(0+1280),c
 36074   011078  6A56               	clrf	(??_teachProcessMessage+1)^(0+1280),c
 36075                           
 36076                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36077                           ; Switch size 1, requested type "simple"
 36078                           ; Number of cases is 1, Range of values is 0 to 0
 36079                           ; switch strategies available:
 36080                           ; Name         Instructions Cycles
 36081                           ; simple_byte            4     3 (average)
 36082                           ;	Chosen strategy is simple_byte
 36083   01107A  5056               	movf	(??_teachProcessMessage+1)^(0+1280),w,c
 36084   01107C  0A00               	xorlw	0	; case 0
 36085   01107E  A4D8               	btfss	status,2,c
 36086   011080  D5AC               	goto	l10237
 36087                           
 36088                           ; Switch size 1, requested type "simple"
 36089                           ; Number of cases is 13, Range of values is 83 to 245
 36090                           ; switch strategies available:
 36091                           ; Name         Instructions Cycles
 36092                           ; simple_byte           40    21 (average)
 36093                           ;	Chosen strategy is simple_byte
 36094   011082  5055               	movf	??_teachProcessMessage^(0+1280),w,c
 36095   011084  0A53               	xorlw	83	; case 83
 36096   011086  B4D8               	btfsc	status,2,c
 36097   011088  D547               	goto	l10189
 36098   01108A  0A07               	xorlw	7	; case 84
 36099   01108C  B4D8               	btfsc	status,2,c
 36100   01108E  D67A               	goto	l10291
 36101   011090  0A01               	xorlw	1	; case 85
 36102   011092  B4D8               	btfsc	status,2,c
 36103   011094  D699               	goto	l10311
 36104   011096  0A03               	xorlw	3	; case 86
 36105   011098  B4D8               	btfsc	status,2,c
 36106   01109A  D6F8               	goto	l10353
 36107   01109C  0A01               	xorlw	1	; case 87
 36108   01109E  B4D8               	btfsc	status,2,c
 36109   0110A0  D6D1               	goto	l10333
 36110   0110A2  0A0F               	xorlw	15	; case 88
 36111   0110A4  B4D8               	btfsc	status,2,c
 36112   0110A6  D716               	goto	l10373
 36113   0110A8  0A2A               	xorlw	42	; case 114
 36114   0110AA  B4D8               	btfsc	status,2,c
 36115   0110AC  D737               	goto	l10393
 36116   0110AE  0A04               	xorlw	4	; case 118
 36117   0110B0  B4D8               	btfsc	status,2,c
 36118   0110B2  D55B               	goto	l10207
 36119   0110B4  0AE3               	xorlw	227	; case 149
 36120   0110B6  B4D8               	btfsc	status,2,c
 36121   0110B8  D5E7               	goto	l10259
 36122   0110BA  0A09               	xorlw	9	; case 156
 36123   0110BC  B4D8               	btfsc	status,2,c
 36124   0110BE  D759               	goto	l10413
 36125   0110C0  0A2E               	xorlw	46	; case 178
 36126   0110C2  B4D8               	btfsc	status,2,c
 36127   0110C4  D61C               	goto	l10275
 36128   0110C6  0A60               	xorlw	96	; case 210
 36129   0110C8  B4D8               	btfsc	status,2,c
 36130   0110CA  D589               	goto	l10241
 36131   0110CC  0A27               	xorlw	39	; case 245
 36132   0110CE  B4D8               	btfsc	status,2,c
 36133   0110D0  D783               	goto	l10433
 36134   0110D2  D583               	goto	l10237
 36135   0110D4                     __end_of_teachProcessMessage:
 36136                           	callstack 0
 36137                           
 36138 ;; *************** function _teachCheckLen *****************
 36139 ;; Defined at:
 36140 ;;		line 343 in file "../../VLCBlib_PIC/event_teach_simple.c"
 36141 ;; Parameters:    Size  Location     Type
 36142 ;;  m               2   47[COMRAM] PTR struct Message
 36143 ;;		 -> poll@m(9), 
 36144 ;;  needed          1   49[COMRAM] unsigned char 
 36145 ;;  learn           1   50[COMRAM] unsigned char 
 36146 ;; Auto vars:     Size  Location     Type
 36147 ;;		None
 36148 ;; Return value:  Size  Location     Type
 36149 ;;                  1    wreg      enum E23340
 36150 ;; Registers used:
 36151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 36152 ;; Tracked objects:
 36153 ;;		On entry : 0/0
 36154 ;;		On exit  : 0/0
 36155 ;;		Unchanged: 0/0
 36156 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36157 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36159 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36160 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36161 ;;Total ram usage:        5 bytes
 36162 ;; Hardware stack levels used: 1
 36163 ;; Hardware stack levels required when called: 7
 36164 ;; This function calls:
 36165 ;;		_checkLen
 36166 ;;		_sendMessage5
 36167 ;; This function is called by:
 36168 ;;		_teachProcessMessage
 36169 ;; This function uses a non-reentrant model
 36170 ;;
 36171                           
 36172                           	psect	text47
 36173   015566                     __ptext47:
 36174                           	callstack 0
 36175   015566                     _teachCheckLen:
 36176                           	callstack 117
 36177                           
 36178                           ;../../VLCBlib_PIC/event_teach_simple.c: 344:     if (learn) {
 36179                           
 36180                           ;incstack = 0
 36181   015566  5033               	movf	teachCheckLen@learn^(0+1280),w,c
 36182   015568  B4D8               	btfsc	status,2,c
 36183   01556A  D022               	goto	l9407
 36184                           
 36185                           ;../../VLCBlib_PIC/event_teach_simple.c: 346:         if (m->len < needed) {
 36186   01556C  C530  F4D9         	movff	teachCheckLen@m,fsr2l
 36187   015570  C531  F4DA         	movff	teachCheckLen@m+1,fsr2h
 36188   015574  5032               	movf	teachCheckLen@needed^(0+1280),w,c
 36189   015576  5CDE               	subwf	postinc2,w,c
 36190   015578  B0D8               	btfsc	status,0,c
 36191   01557A  D018               	goto	l9403
 36192                           
 36193                           ;../../VLCBlib_PIC/event_teach_simple.c: 348:             if (mode_flags & 1) {
 36194   01557C  0105               	movlb	5	; () banked
 36195   01557E  A19F               	btfss	_mode_flags& (0+255),0,b
 36196   015580  D013               	goto	l9399
 36197                           
 36198                           ; BSR set to: 5
 36199                           ;../../VLCBlib_PIC/event_teach_simple.c: 351:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, (uint8_t)(m->opc), SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 36200   015582  C55F  F525         	movff	_nn+1,sendMessage5@data1
 36201   015586  C55E  F526         	movff	_nn,sendMessage5@data2
 36202   01558A  EE20 F001          	lfsr	2,1
 36203   01558E  5030               	movf	teachCheckLen@m^(0+1280),w,c
 36204   015590  26D9               	addwf	fsr2l,f,c
 36205   015592  5031               	movf	(teachCheckLen@m+1)^(0+1280),w,c
 36206   015594  22DA               	addwfc	fsr2h,f,c
 36207   015596  50DF               	movf	indf2,w,c
 36208   015598  6E27               	movwf	sendMessage5@data3^(0+1280),c
 36209   01559A  0E04               	movlw	4
 36210   01559C  6E28               	movwf	sendMessage5@data4^(0+1280),c
 36211   01559E  0E01               	movlw	1
 36212   0155A0  6E29               	movwf	sendMessage5@data5^(0+1280),c
 36213   0155A2  0EAF               	movlw	175
 36214   0155A4  EC36  F0B1         	call	_sendMessage5
 36215   0155A8                     l9399:
 36216                           
 36217                           ;../../VLCBlib_PIC/event_teach_simple.c: 354:             return PROCESSED;
 36218   0155A8  0E01               	movlw	1
 36219   0155AA  0012               	return	
 36220   0155AC                     l9403:
 36221                           
 36222                           ;../../VLCBlib_PIC/event_teach_simple.c: 356:         return NOT_PROCESSED;
 36223   0155AC  0E00               	movlw	0
 36224   0155AE  0012               	return	
 36225   0155B0                     l9407:
 36226                           
 36227                           ;../../VLCBlib_PIC/event_teach_simple.c: 358:     return checkLen(m, needed, SERVICE_ID_
      +                          OLD_TEACH);
 36228   0155B0  C530  F52B         	movff	teachCheckLen@m,checkLen@m
 36229   0155B4  C531  F52C         	movff	teachCheckLen@m+1,checkLen@m+1
 36230   0155B8  C532  F52D         	movff	teachCheckLen@needed,checkLen@needed
 36231   0155BC  0E04               	movlw	4
 36232   0155BE  6E2E               	movwf	checkLen@service^(0+1280),c
 36233   0155C0  ECC8  F0A7         	call	_checkLen	;wreg free
 36234   0155C4  0012               	return		;funcret
 36235   0155C6                     __end_of_teachCheckLen:
 36236                           	callstack 0
 36237                           
 36238 ;; *************** function _doRqevn *****************
 36239 ;; Defined at:
 36240 ;;		line 488 in file "../../VLCBlib_PIC/event_teach_simple.c"
 36241 ;; Parameters:    Size  Location     Type
 36242 ;;		None
 36243 ;; Auto vars:     Size  Location     Type
 36244 ;;  eventNumber     2   40[COMRAM] unsigned short 
 36245 ;;  i               1   43[COMRAM] unsigned char 
 36246 ;;  count           1   42[COMRAM] unsigned char 
 36247 ;; Return value:  Size  Location     Type
 36248 ;;                  1    wreg      void 
 36249 ;; Registers used:
 36250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 36251 ;; Tracked objects:
 36252 ;;		On entry : 0/0
 36253 ;;		On exit  : 0/0
 36254 ;;		Unchanged: 0/0
 36255 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36257 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36259 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36260 ;;Total ram usage:        4 bytes
 36261 ;; Hardware stack levels used: 1
 36262 ;; Hardware stack levels required when called: 6
 36263 ;; This function calls:
 36264 ;;		_getEN
 36265 ;;		_sendMessage3
 36266 ;; This function is called by:
 36267 ;;		_teachProcessMessage
 36268 ;; This function uses a non-reentrant model
 36269 ;;
 36270                           
 36271                           	psect	text48
 36272   015F76                     __ptext48:
 36273                           	callstack 0
 36274   015F76                     _doRqevn:
 36275                           	callstack 118
 36276                           
 36277                           ;../../VLCBlib_PIC/event_teach_simple.c: 490:     uint8_t count = 0;
 36278                           
 36279                           ;incstack = 0
 36280   015F76  6A2B               	clrf	doRqevn@count^(0+1280),c
 36281                           
 36282                           ;../../VLCBlib_PIC/event_teach_simple.c: 491:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 492:     for (i=0; i<254; i++) {
 36283   015F78  6A2C               	clrf	doRqevn@i^(0+1280),c
 36284   015F7A                     l9515:
 36285                           
 36286                           ;../../VLCBlib_PIC/event_teach_simple.c: 493:         uint16_t eventNumber;;../../VLCBli
      +                          b_PIC/event_teach_simple.c: 494:         eventNumber = getEN(i);
 36287   015F7A  502C               	movf	doRqevn@i^(0+1280),w,c
 36288   015F7C  EC70  F0A8         	call	_getEN
 36289   015F80  C50D  F529         	movff	?_getEN,doRqevn@eventNumber
 36290   015F84  C50E  F52A         	movff	?_getEN+1,doRqevn@eventNumber+1
 36291                           
 36292                           ;../../VLCBlib_PIC/event_teach_simple.c: 495:         if (eventNumber != 0) {
 36293   015F88  5029               	movf	doRqevn@eventNumber^(0+1280),w,c
 36294   015F8A  102A               	iorwf	(doRqevn@eventNumber+1)^(0+1280),w,c
 36295   015F8C  A4D8               	btfss	status,2,c
 36296                           
 36297                           ;../../VLCBlib_PIC/event_teach_simple.c: 496:             count++;
 36298   015F8E  2A2B               	incf	doRqevn@count^(0+1280),f,c
 36299                           
 36300                           ;../../VLCBlib_PIC/event_teach_simple.c: 498:     }
 36301                           
 36302                           ;../../VLCBlib_PIC/event_teach_simple.c: 497:         }
 36303   015F90  2A2C               	incf	doRqevn@i^(0+1280),f,c
 36304   015F92  0EFD               	movlw	253
 36305   015F94  642C               	cpfsgt	doRqevn@i^(0+1280),c
 36306   015F96  D7F1               	goto	l9515
 36307                           
 36308                           ;../../VLCBlib_PIC/event_teach_simple.c: 499:     sendMessage3(OPC_NUMEV, nn.bytes.hi, n
      +                          n.bytes.lo, count);
 36309   015F98  C55F  F525         	movff	_nn+1,sendMessage3@data1
 36310   015F9C  C55E  F526         	movff	_nn,sendMessage3@data2
 36311   015FA0  C52B  F527         	movff	doRqevn@count,sendMessage3@data3
 36312   015FA4  0E74               	movlw	116
 36313   015FA6  ECF7  F0B0         	call	_sendMessage3
 36314   015FAA  0012               	return		;funcret
 36315   015FAC                     __end_of_doRqevn:
 36316                           	callstack 0
 36317                           
 36318 ;; *************** function _doReval *****************
 36319 ;; Defined at:
 36320 ;;		line 557 in file "../../VLCBlib_PIC/event_teach_simple.c"
 36321 ;; Parameters:    Size  Location     Type
 36322 ;;  enNum           1    wreg     unsigned char 
 36323 ;;  evNum           1   42[COMRAM] unsigned char 
 36324 ;; Auto vars:     Size  Location     Type
 36325 ;;  enNum           1   44[COMRAM] unsigned char 
 36326 ;;  evVal           2   46[COMRAM] int 
 36327 ;;  tableIndex      1   45[COMRAM] unsigned char 
 36328 ;;  evIndex         1   43[COMRAM] unsigned char 
 36329 ;; Return value:  Size  Location     Type
 36330 ;;                  1    wreg      void 
 36331 ;; Registers used:
 36332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 36333 ;; Tracked objects:
 36334 ;;		On entry : 0/0
 36335 ;;		On exit  : 0/0
 36336 ;;		Unchanged: 0/0
 36337 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36338 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36339 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36341 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36342 ;;Total ram usage:        6 bytes
 36343 ;; Hardware stack levels used: 1
 36344 ;; Hardware stack levels required when called: 6
 36345 ;; This function calls:
 36346 ;;		_evtIdxToTableIndex
 36347 ;;		_findServiceIndex
 36348 ;;		_getEv
 36349 ;;		_sendMessage3
 36350 ;;		_sendMessage5
 36351 ;;		_startTimedResponse
 36352 ;; This function is called by:
 36353 ;;		_teachProcessMessage
 36354 ;; This function uses a non-reentrant model
 36355 ;;
 36356                           
 36357                           	psect	text49
 36358   014002                     __ptext49:
 36359                           	callstack 0
 36360   014002                     _doReval:
 36361                           	callstack 118
 36362                           
 36363                           ;incstack = 0
 36364                           ;doReval@enNum stored from wreg
 36365   014002  6E2D               	movwf	doReval@enNum^(0+1280),c
 36366                           
 36367                           ;../../VLCBlib_PIC/event_teach_simple.c: 560:     uint8_t evIndex;;../../VLCBlib_PIC/eve
      +                          nt_teach_simple.c: 561:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 36368   014004  502D               	movf	doReval@enNum^(0+1280),w,c
 36369   014006  EC1B  F0B3         	call	_evtIdxToTableIndex
 36370   01400A  6E2E               	movwf	doReval@tableIndex^(0+1280),c
 36371                           
 36372                           ;../../VLCBlib_PIC/event_teach_simple.c: 562:     int evVal;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 564:     if (tableIndex >= 254) {
 36373   01400C  0EFD               	movlw	253
 36374   01400E  642E               	cpfsgt	doReval@tableIndex^(0+1280),c
 36375   014010  D00A               	goto	l9545
 36376                           
 36377                           ;../../VLCBlib_PIC/event_teach_simple.c: 565:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 36378   014012  C55F  F525         	movff	_nn+1,sendMessage3@data1
 36379   014016  C55E  F526         	movff	_nn,sendMessage3@data2
 36380   01401A  0E06               	movlw	6
 36381   01401C  6E27               	movwf	sendMessage3@data3^(0+1280),c
 36382   01401E  0E6F               	movlw	111
 36383   014020  ECF7  F0B0         	call	_sendMessage3
 36384   014024  0012               	return	
 36385   014026                     l9545:
 36386                           
 36387                           ;../../VLCBlib_PIC/event_teach_simple.c: 569:     evIndex = evNum-1U;
 36388   014026  042B               	decf	doReval@evNum^(0+1280),w,c
 36389   014028  6E2C               	movwf	doReval@evIndex^(0+1280),c
 36390                           
 36391                           ;../../VLCBlib_PIC/event_teach_simple.c: 571:     if (evNum == 0) {
 36392   01402A  502B               	movf	doReval@evNum^(0+1280),w,c
 36393   01402C  A4D8               	btfss	status,2,c
 36394   01402E  D017               	goto	l9557
 36395                           
 36396                           ;../../VLCBlib_PIC/event_teach_simple.c: 572:         evVal = 13;
 36397   014030  0E00               	movlw	0
 36398   014032  6E30               	movwf	(doReval@evVal+1)^(0+1280),c
 36399   014034  0E0D               	movlw	13
 36400   014036  6E2F               	movwf	doReval@evVal^(0+1280),c
 36401                           
 36402                           ;../../VLCBlib_PIC/event_teach_simple.c: 573:         if ((mode_flags & 8) == 0) {
 36403   014038  0105               	movlb	5	; () banked
 36404   01403A  B79F               	btfsc	_mode_flags& (0+255),3,b
 36405   01403C  D019               	goto	l9559
 36406                           
 36407                           ; BSR set to: 5
 36408                           ;../../VLCBlib_PIC/event_teach_simple.c: 576:             timedResponseOpcode = OPC_NEVA
      +                          L;
 36409   01403E  0EB5               	movlw	181
 36410   014040  6F91               	movwf	_timedResponseOpcode& (0+255),b
 36411                           
 36412                           ; BSR set to: 5
 36413                           ;../../VLCBlib_PIC/event_teach_simple.c: 577:             startTimedResponse(tableIndex,
      +                           findServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 36414   014042  0E04               	movlw	4
 36415   014044  EC02  F0A8         	call	_findServiceIndex
 36416   014048  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 36417   01404A  0EAE               	movlw	low _reqevCallback
 36418   01404C  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 36419   01404E  0E43               	movlw	high _reqevCallback
 36420   014050  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 36421   014052  0E01               	movlw	low (_reqevCallback shr (0+16))
 36422   014054  6E08               	movwf	(startTimedResponse@callback+2)^(0+1280),c
 36423   014056  502E               	movf	doReval@tableIndex^(0+1280),w,c
 36424   014058  ECD0  F0AE         	call	_startTimedResponse
 36425   01405C  D009               	goto	l9559
 36426   01405E                     l9557:
 36427                           
 36428                           ;../../VLCBlib_PIC/event_teach_simple.c: 580:         evVal = getEv(tableIndex, evIndex)
      +                          ;
 36429   01405E  C52C  F50D         	movff	doReval@evIndex,getEv@evNum
 36430   014062  502E               	movf	doReval@tableIndex^(0+1280),w,c
 36431   014064  EC13  F0A9         	call	_getEv
 36432   014068  C50D  F52F         	movff	?_getEv,doReval@evVal
 36433   01406C  C50E  F530         	movff	?_getEv+1,doReval@evVal+1
 36434   014070                     l9559:
 36435                           
 36436                           ;../../VLCBlib_PIC/event_teach_simple.c: 583:     if (evVal < 0) {
 36437   014070  AE30               	btfss	(doReval@evVal+1)^(0+1280),7,c
 36438   014072  D019               	goto	l9565
 36439                           
 36440                           ;../../VLCBlib_PIC/event_teach_simple.c: 585:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, (uint8_t)(-evVal));
 36441   014074  C55F  F525         	movff	_nn+1,sendMessage3@data1
 36442   014078  C55E  F526         	movff	_nn,sendMessage3@data2
 36443   01407C  502F               	movf	doReval@evVal^(0+1280),w,c
 36444   01407E  0800               	sublw	0
 36445   014080  6E27               	movwf	sendMessage3@data3^(0+1280),c
 36446   014082  0E6F               	movlw	111
 36447   014084  ECF7  F0B0         	call	_sendMessage3
 36448                           
 36449                           ;../../VLCBlib_PIC/event_teach_simple.c: 587:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REVAL, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 36450   014088  C55F  F525         	movff	_nn+1,sendMessage5@data1
 36451   01408C  C55E  F526         	movff	_nn,sendMessage5@data2
 36452   014090  0E9C               	movlw	156
 36453   014092  6E27               	movwf	sendMessage5@data3^(0+1280),c
 36454   014094  0E04               	movlw	4
 36455   014096  6E28               	movwf	sendMessage5@data4^(0+1280),c
 36456   014098  502F               	movf	doReval@evVal^(0+1280),w,c
 36457   01409A  0800               	sublw	0
 36458   01409C  6E29               	movwf	sendMessage5@data5^(0+1280),c
 36459   01409E  0EAF               	movlw	175
 36460   0140A0  EC36  F0B1         	call	_sendMessage5
 36461   0140A4  0012               	return	
 36462   0140A6                     l9565:
 36463                           
 36464                           ;../../VLCBlib_PIC/event_teach_simple.c: 591:     sendMessage5(OPC_NEVAL, nn.bytes.hi, n
      +                          n.bytes.lo, enNum, evNum, (uint8_t)evVal);
 36465   0140A6  C55F  F525         	movff	_nn+1,sendMessage5@data1
 36466   0140AA  C55E  F526         	movff	_nn,sendMessage5@data2
 36467   0140AE  C52D  F527         	movff	doReval@enNum,sendMessage5@data3
 36468   0140B2  C52B  F528         	movff	doReval@evNum,sendMessage5@data4
 36469   0140B6  C52F  F529         	movff	doReval@evVal,sendMessage5@data5
 36470   0140BA  0EB5               	movlw	181
 36471   0140BC  EC36  F0B1         	call	_sendMessage5
 36472   0140C0  0012               	return		;funcret
 36473   0140C2                     __end_of_doReval:
 36474                           	callstack 0
 36475                           
 36476 ;; *************** function _doReqev *****************
 36477 ;; Defined at:
 36478 ;;		line 622 in file "../../VLCBlib_PIC/event_teach_simple.c"
 36479 ;; Parameters:    Size  Location     Type
 36480 ;;  nodeNumber      2   43[COMRAM] unsigned short 
 36481 ;;  eventNumber     2   45[COMRAM] unsigned short 
 36482 ;;  evNum           1   47[COMRAM] unsigned char 
 36483 ;; Auto vars:     Size  Location     Type
 36484 ;;  evVal           2   48[COMRAM] short 
 36485 ;;  tableIndex      1   50[COMRAM] unsigned char 
 36486 ;; Return value:  Size  Location     Type
 36487 ;;                  1    wreg      void 
 36488 ;; Registers used:
 36489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 36490 ;; Tracked objects:
 36491 ;;		On entry : 0/0
 36492 ;;		On exit  : 0/0
 36493 ;;		Unchanged: 0/0
 36494 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36495 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36496 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36498 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36499 ;;Total ram usage:        8 bytes
 36500 ;; Hardware stack levels used: 1
 36501 ;; Hardware stack levels required when called: 6
 36502 ;; This function calls:
 36503 ;;		_findEvent
 36504 ;;		_findServiceIndex
 36505 ;;		_getEv
 36506 ;;		_numEv
 36507 ;;		_sendMessage3
 36508 ;;		_sendMessage5
 36509 ;;		_sendMessage6
 36510 ;;		_startTimedResponse
 36511 ;; This function is called by:
 36512 ;;		_teachProcessMessage
 36513 ;; This function uses a non-reentrant model
 36514 ;;
 36515                           
 36516                           	psect	text50
 36517   01342A                     __ptext50:
 36518                           	callstack 0
 36519   01342A                     _doReqev:
 36520                           	callstack 118
 36521                           
 36522                           ;../../VLCBlib_PIC/event_teach_simple.c: 623:     int16_t evVal;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 625:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 36523                           
 36524                           ;incstack = 0
 36525   01342A  C52C  F51E         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 36526   01342E  C52D  F51F         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 36527   013432  C52E  F520         	movff	doReqev@eventNumber,findEvent@eventNumber
 36528   013436  C52F  F521         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 36529   01343A  EC4F  F0A4         	call	_findEvent	;wreg free
 36530   01343E  6E33               	movwf	doReqev@tableIndex^(0+1280),c
 36531                           
 36532                           ;../../VLCBlib_PIC/event_teach_simple.c: 626:     if (tableIndex == 0xff) {
 36533   013440  2833               	incf	doReqev@tableIndex^(0+1280),w,c
 36534   013442  A4D8               	btfss	status,2,c
 36535   013444  D017               	goto	l9453
 36536                           
 36537                           ;../../VLCBlib_PIC/event_teach_simple.c: 627:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INVALID_EVENT);
 36538   013446  C55F  F525         	movff	_nn+1,sendMessage3@data1
 36539   01344A  C55E  F526         	movff	_nn,sendMessage3@data2
 36540   01344E  0E07               	movlw	7
 36541   013450  6E27               	movwf	sendMessage3@data3^(0+1280),c
 36542   013452  0E6F               	movlw	111
 36543   013454  ECF7  F0B0         	call	_sendMessage3
 36544                           
 36545                           ;../../VLCBlib_PIC/event_teach_simple.c: 629:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 36546   013458  C55F  F525         	movff	_nn+1,sendMessage5@data1
 36547   01345C  C55E  F526         	movff	_nn,sendMessage5@data2
 36548   013460  0EB2               	movlw	178
 36549   013462  6E27               	movwf	sendMessage5@data3^(0+1280),c
 36550   013464  0E04               	movlw	4
 36551   013466  6E28               	movwf	sendMessage5@data4^(0+1280),c
 36552   013468  0E07               	movlw	7
 36553   01346A  6E29               	movwf	sendMessage5@data5^(0+1280),c
 36554   01346C  0EAF               	movlw	175
 36555   01346E  EC36  F0B1         	call	_sendMessage5
 36556   013472  0012               	return	
 36557   013474                     l9453:
 36558                           
 36559                           ;../../VLCBlib_PIC/event_teach_simple.c: 633:     if (evNum > 13) {
 36560   013474  0E0D               	movlw	13
 36561   013476  6430               	cpfsgt	doReqev@evNum^(0+1280),c
 36562   013478  D017               	goto	l9459
 36563                           
 36564                           ;../../VLCBlib_PIC/event_teach_simple.c: 634:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 36565   01347A  C55F  F525         	movff	_nn+1,sendMessage3@data1
 36566   01347E  C55E  F526         	movff	_nn,sendMessage3@data2
 36567   013482  0E06               	movlw	6
 36568   013484  6E27               	movwf	sendMessage3@data3^(0+1280),c
 36569   013486  0E6F               	movlw	111
 36570   013488  ECF7  F0B0         	call	_sendMessage3
 36571                           
 36572                           ;../../VLCBlib_PIC/event_teach_simple.c: 636:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 36573   01348C  C55F  F525         	movff	_nn+1,sendMessage5@data1
 36574   013490  C55E  F526         	movff	_nn,sendMessage5@data2
 36575   013494  0EB2               	movlw	178
 36576   013496  6E27               	movwf	sendMessage5@data3^(0+1280),c
 36577   013498  0E04               	movlw	4
 36578   01349A  6E28               	movwf	sendMessage5@data4^(0+1280),c
 36579   01349C  0E06               	movlw	6
 36580   01349E  6E29               	movwf	sendMessage5@data5^(0+1280),c
 36581   0134A0  0EAF               	movlw	175
 36582   0134A2  EC36  F0B1         	call	_sendMessage5
 36583   0134A6  0012               	return	
 36584   0134A8                     l9459:
 36585                           
 36586                           ;../../VLCBlib_PIC/event_teach_simple.c: 641:     if (evNum == 0) {
 36587   0134A8  5030               	movf	doReqev@evNum^(0+1280),w,c
 36588   0134AA  A4D8               	btfss	status,2,c
 36589   0134AC  D029               	goto	l9473
 36590                           
 36591                           ;../../VLCBlib_PIC/event_teach_simple.c: 642:         evVal = 13;
 36592   0134AE  0E00               	movlw	0
 36593   0134B0  6E32               	movwf	(doReqev@evVal+1)^(0+1280),c
 36594   0134B2  0E0D               	movlw	13
 36595   0134B4  6E31               	movwf	doReqev@evVal^(0+1280),c
 36596                           
 36597                           ;../../VLCBlib_PIC/event_teach_simple.c: 643:         if ((mode_flags & 8) == 0) {
 36598   0134B6  0105               	movlb	5	; () banked
 36599   0134B8  B79F               	btfsc	_mode_flags& (0+255),3,b
 36600   0134BA  D02B               	goto	l9475
 36601                           
 36602                           ; BSR set to: 5
 36603                           ;../../VLCBlib_PIC/event_teach_simple.c: 644:             sendMessage6(OPC_EVANS, nodeNu
      +                          mber>>8, nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 36604   0134BC  502D               	movf	(doReqev@nodeNumber+1)^(0+1280),w,c
 36605   0134BE  6E25               	movwf	sendMessage6@data1^(0+1280),c
 36606   0134C0  C52C  F526         	movff	doReqev@nodeNumber,sendMessage6@data2
 36607   0134C4  502F               	movf	(doReqev@eventNumber+1)^(0+1280),w,c
 36608   0134C6  6E27               	movwf	sendMessage6@data3^(0+1280),c
 36609   0134C8  C52E  F528         	movff	doReqev@eventNumber,sendMessage6@data4
 36610   0134CC  0E00               	movlw	0
 36611   0134CE  6E29               	movwf	sendMessage6@data5^(0+1280),c
 36612   0134D0  5033               	movf	doReqev@tableIndex^(0+1280),w,c
 36613   0134D2  EC24  F0B3         	call	_numEv
 36614   0134D6  6E2A               	movwf	sendMessage6@data6^(0+1280),c
 36615   0134D8  0ED3               	movlw	211
 36616   0134DA  ECE2  F0B0         	call	_sendMessage6
 36617                           
 36618                           ;../../VLCBlib_PIC/event_teach_simple.c: 647:             timedResponseOpcode = OPC_EVAN
      +                          S;
 36619   0134DE  0ED3               	movlw	211
 36620   0134E0  0105               	movlb	5	; () banked
 36621   0134E2  6F91               	movwf	_timedResponseOpcode& (0+255),b
 36622                           
 36623                           ; BSR set to: 5
 36624                           ;../../VLCBlib_PIC/event_teach_simple.c: 648:             startTimedResponse(tableIndex,
      +                           findServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 36625   0134E4  0E04               	movlw	4
 36626   0134E6  EC02  F0A8         	call	_findServiceIndex
 36627   0134EA  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 36628   0134EC  0EAE               	movlw	low _reqevCallback
 36629   0134EE  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 36630   0134F0  0E43               	movlw	high _reqevCallback
 36631   0134F2  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 36632   0134F4  0E01               	movlw	low (_reqevCallback shr (0+16))
 36633   0134F6  6E08               	movwf	(startTimedResponse@callback+2)^(0+1280),c
 36634   0134F8  5033               	movf	doReqev@tableIndex^(0+1280),w,c
 36635   0134FA  ECD0  F0AE         	call	_startTimedResponse
 36636   0134FE  0012               	return	
 36637   013500                     l9473:
 36638                           
 36639                           ;../../VLCBlib_PIC/event_teach_simple.c: 652:         evVal = getEv(tableIndex, evNum-1)
      +                          ;
 36640   013500  0430               	decf	doReqev@evNum^(0+1280),w,c
 36641   013502  6E0D               	movwf	getEv@evNum^(0+1280),c
 36642   013504  5033               	movf	doReqev@tableIndex^(0+1280),w,c
 36643   013506  EC13  F0A9         	call	_getEv
 36644   01350A  C50D  F531         	movff	?_getEv,doReqev@evVal
 36645   01350E  C50E  F532         	movff	?_getEv+1,doReqev@evVal+1
 36646   013512                     l9475:
 36647                           
 36648                           ;../../VLCBlib_PIC/event_teach_simple.c: 655:     if (evVal < 0) {
 36649   013512  AE32               	btfss	(doReqev@evVal+1)^(0+1280),7,c
 36650   013514  D019               	goto	l9481
 36651                           
 36652                           ;../../VLCBlib_PIC/event_teach_simple.c: 657:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, (uint8_t)(-evVal));
 36653   013516  C55F  F525         	movff	_nn+1,sendMessage3@data1
 36654   01351A  C55E  F526         	movff	_nn,sendMessage3@data2
 36655   01351E  5031               	movf	doReqev@evVal^(0+1280),w,c
 36656   013520  0800               	sublw	0
 36657   013522  6E27               	movwf	sendMessage3@data3^(0+1280),c
 36658   013524  0E6F               	movlw	111
 36659   013526  ECF7  F0B0         	call	_sendMessage3
 36660                           
 36661                           ;../../VLCBlib_PIC/event_teach_simple.c: 659:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 36662   01352A  C55F  F525         	movff	_nn+1,sendMessage5@data1
 36663   01352E  C55E  F526         	movff	_nn,sendMessage5@data2
 36664   013532  0EB2               	movlw	178
 36665   013534  6E27               	movwf	sendMessage5@data3^(0+1280),c
 36666   013536  0E04               	movlw	4
 36667   013538  6E28               	movwf	sendMessage5@data4^(0+1280),c
 36668   01353A  5031               	movf	doReqev@evVal^(0+1280),w,c
 36669   01353C  0800               	sublw	0
 36670   01353E  6E29               	movwf	sendMessage5@data5^(0+1280),c
 36671   013540  0EAF               	movlw	175
 36672   013542  EC36  F0B1         	call	_sendMessage5
 36673   013546  0012               	return	
 36674   013548                     l9481:
 36675                           
 36676                           ;../../VLCBlib_PIC/event_teach_simple.c: 664:     sendMessage6(OPC_EVANS, nodeNumber>>8,
      +                           nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 36677   013548  502D               	movf	(doReqev@nodeNumber+1)^(0+1280),w,c
 36678   01354A  6E25               	movwf	sendMessage6@data1^(0+1280),c
 36679   01354C  C52C  F526         	movff	doReqev@nodeNumber,sendMessage6@data2
 36680   013550  502F               	movf	(doReqev@eventNumber+1)^(0+1280),w,c
 36681   013552  6E27               	movwf	sendMessage6@data3^(0+1280),c
 36682   013554  C52E  F528         	movff	doReqev@eventNumber,sendMessage6@data4
 36683   013558  C530  F529         	movff	doReqev@evNum,sendMessage6@data5
 36684   01355C  C531  F52A         	movff	doReqev@evVal,sendMessage6@data6
 36685   013560  0ED3               	movlw	211
 36686   013562  ECE2  F0B0         	call	_sendMessage6
 36687   013566  0012               	return		;funcret
 36688   013568                     __end_of_doReqev:
 36689                           	callstack 0
 36690                           
 36691 ;; *************** function _numEv *****************
 36692 ;; Defined at:
 36693 ;;		line 881 in file "../../VLCBlib_PIC/event_teach_simple.c"
 36694 ;; Parameters:    Size  Location     Type
 36695 ;;  tableIndex      1    wreg     unsigned char 
 36696 ;; Auto vars:     Size  Location     Type
 36697 ;;  tableIndex      1    0[COMRAM] unsigned char 
 36698 ;; Return value:  Size  Location     Type
 36699 ;;                  1    wreg      unsigned char 
 36700 ;; Registers used:
 36701 ;;		wreg
 36702 ;; Tracked objects:
 36703 ;;		On entry : 0/0
 36704 ;;		On exit  : 0/0
 36705 ;;		Unchanged: 0/0
 36706 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36711 ;;Total ram usage:        0 bytes
 36712 ;; Hardware stack levels used: 1
 36713 ;; Hardware stack levels required when called: 1
 36714 ;; This function calls:
 36715 ;;		Nothing
 36716 ;; This function is called by:
 36717 ;;		_doReqev
 36718 ;;		_reqevCallback
 36719 ;; This function uses a non-reentrant model
 36720 ;;
 36721                           
 36722                           	psect	text51
 36723   016648                     __ptext51:
 36724                           	callstack 0
 36725   016648                     _numEv:
 36726                           	callstack 122
 36727                           
 36728                           ;../../VLCBlib_PIC/event_teach_simple.c: 882:     return 13;
 36729                           
 36730                           ;incstack = 0
 36731   016648  0E0D               	movlw	13
 36732   01664A  0012               	return		;funcret
 36733   01664C                     __end_of_numEv:
 36734                           	callstack 0
 36735                           
 36736 ;; *************** function _doNnevn *****************
 36737 ;; Defined at:
 36738 ;;		line 412 in file "../../VLCBlib_PIC/event_teach_simple.c"
 36739 ;; Parameters:    Size  Location     Type
 36740 ;;		None
 36741 ;; Auto vars:     Size  Location     Type
 36742 ;;  eventNumber     2   40[COMRAM] unsigned short 
 36743 ;;  i               1   43[COMRAM] unsigned char 
 36744 ;;  count           1   42[COMRAM] unsigned char 
 36745 ;; Return value:  Size  Location     Type
 36746 ;;                  1    wreg      void 
 36747 ;; Registers used:
 36748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 36749 ;; Tracked objects:
 36750 ;;		On entry : 0/0
 36751 ;;		On exit  : 0/0
 36752 ;;		Unchanged: 0/0
 36753 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36755 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36757 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36758 ;;Total ram usage:        4 bytes
 36759 ;; Hardware stack levels used: 1
 36760 ;; Hardware stack levels required when called: 6
 36761 ;; This function calls:
 36762 ;;		_getEN
 36763 ;;		_sendMessage3
 36764 ;; This function is called by:
 36765 ;;		_teachProcessMessage
 36766 ;; This function uses a non-reentrant model
 36767 ;;
 36768                           
 36769                           	psect	text52
 36770   015FAC                     __ptext52:
 36771                           	callstack 0
 36772   015FAC                     _doNnevn:
 36773                           	callstack 118
 36774                           
 36775                           ;../../VLCBlib_PIC/event_teach_simple.c: 414:     uint8_t count = 0;
 36776                           
 36777                           ;incstack = 0
 36778   015FAC  6A2B               	clrf	doNnevn@count^(0+1280),c
 36779                           
 36780                           ;../../VLCBlib_PIC/event_teach_simple.c: 415:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 416:     for (i=0; i<254; i++) {
 36781   015FAE  6A2C               	clrf	doNnevn@i^(0+1280),c
 36782   015FB0                     l9499:
 36783                           
 36784                           ;../../VLCBlib_PIC/event_teach_simple.c: 417:         uint16_t eventNumber;;../../VLCBli
      +                          b_PIC/event_teach_simple.c: 418:         eventNumber = getEN(i);
 36785   015FB0  502C               	movf	doNnevn@i^(0+1280),w,c
 36786   015FB2  EC70  F0A8         	call	_getEN
 36787   015FB6  C50D  F529         	movff	?_getEN,doNnevn@eventNumber
 36788   015FBA  C50E  F52A         	movff	?_getEN+1,doNnevn@eventNumber+1
 36789                           
 36790                           ;../../VLCBlib_PIC/event_teach_simple.c: 419:         if (eventNumber == 0) {
 36791   015FBE  5029               	movf	doNnevn@eventNumber^(0+1280),w,c
 36792   015FC0  102A               	iorwf	(doNnevn@eventNumber+1)^(0+1280),w,c
 36793   015FC2  B4D8               	btfsc	status,2,c
 36794                           
 36795                           ;../../VLCBlib_PIC/event_teach_simple.c: 420:             count++;
 36796   015FC4  2A2B               	incf	doNnevn@count^(0+1280),f,c
 36797                           
 36798                           ;../../VLCBlib_PIC/event_teach_simple.c: 422:     }
 36799                           
 36800                           ;../../VLCBlib_PIC/event_teach_simple.c: 421:         }
 36801   015FC6  2A2C               	incf	doNnevn@i^(0+1280),f,c
 36802   015FC8  0EFD               	movlw	253
 36803   015FCA  642C               	cpfsgt	doNnevn@i^(0+1280),c
 36804   015FCC  D7F1               	goto	l9499
 36805                           
 36806                           ;../../VLCBlib_PIC/event_teach_simple.c: 423:     sendMessage3(OPC_EVNLF, nn.bytes.hi, n
      +                          n.bytes.lo, count);
 36807   015FCE  C55F  F525         	movff	_nn+1,sendMessage3@data1
 36808   015FD2  C55E  F526         	movff	_nn,sendMessage3@data2
 36809   015FD6  C52B  F527         	movff	doNnevn@count,sendMessage3@data3
 36810   015FDA  0E70               	movlw	112
 36811   015FDC  ECF7  F0B0         	call	_sendMessage3
 36812   015FE0  0012               	return		;funcret
 36813   015FE2                     __end_of_doNnevn:
 36814                           	callstack 0
 36815                           
 36816 ;; *************** function _doNnclr *****************
 36817 ;; Defined at:
 36818 ;;		line 505 in file "../../VLCBlib_PIC/event_teach_simple.c"
 36819 ;; Parameters:    Size  Location     Type
 36820 ;;		None
 36821 ;; Auto vars:     Size  Location     Type
 36822 ;;		None
 36823 ;; Return value:  Size  Location     Type
 36824 ;;                  1    wreg      void 
 36825 ;; Registers used:
 36826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 36827 ;; Tracked objects:
 36828 ;;		On entry : 0/0
 36829 ;;		On exit  : 0/0
 36830 ;;		Unchanged: 0/0
 36831 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36836 ;;Total ram usage:        0 bytes
 36837 ;; Hardware stack levels used: 1
 36838 ;; Hardware stack levels required when called: 8
 36839 ;; This function calls:
 36840 ;;		_clearAllEvents
 36841 ;;		_sendMessage2
 36842 ;;		_sendMessage5
 36843 ;; This function is called by:
 36844 ;;		_teachProcessMessage
 36845 ;; This function uses a non-reentrant model
 36846 ;;
 36847                           
 36848                           	psect	text53
 36849   016112                     __ptext53:
 36850                           	callstack 0
 36851   016112                     _doNnclr:
 36852                           	callstack 116
 36853                           
 36854                           ;../../VLCBlib_PIC/event_teach_simple.c: 506:     clearAllEvents();
 36855                           
 36856                           ;incstack = 0
 36857   016112  ECD6  F0B2         	call	_clearAllEvents	;wreg free
 36858                           
 36859                           ;../../VLCBlib_PIC/event_teach_simple.c: 507:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 36860   016116  C55F  F525         	movff	_nn+1,sendMessage2@data1
 36861   01611A  C55E  F526         	movff	_nn,sendMessage2@data2
 36862   01611E  0E59               	movlw	89
 36863   016120  EC0C  F0B1         	call	_sendMessage2
 36864                           
 36865                           ;../../VLCBlib_PIC/event_teach_simple.c: 509:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, GRSP_OK);
 36866   016124  C55F  F525         	movff	_nn+1,sendMessage5@data1
 36867   016128  C55E  F526         	movff	_nn,sendMessage5@data2
 36868   01612C  0E55               	movlw	85
 36869   01612E  6E27               	movwf	sendMessage5@data3^(0+1280),c
 36870   016130  0E04               	movlw	4
 36871   016132  6E28               	movwf	sendMessage5@data4^(0+1280),c
 36872   016134  0E00               	movlw	0
 36873   016136  6E29               	movwf	sendMessage5@data5^(0+1280),c
 36874   016138  0EAF               	movlw	175
 36875   01613A  EC36  F0B1         	call	_sendMessage5
 36876   01613E  0012               	return		;funcret
 36877   016140                     __end_of_doNnclr:
 36878                           	callstack 0
 36879                           
 36880 ;; *************** function _doNerd *****************
 36881 ;; Defined at:
 36882 ;;		line 431 in file "../../VLCBlib_PIC/event_teach_simple.c"
 36883 ;; Parameters:    Size  Location     Type
 36884 ;;		None
 36885 ;; Auto vars:     Size  Location     Type
 36886 ;;		None
 36887 ;; Return value:  Size  Location     Type
 36888 ;;                  1    wreg      void 
 36889 ;; Registers used:
 36890 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36891 ;; Tracked objects:
 36892 ;;		On entry : 0/0
 36893 ;;		On exit  : 0/0
 36894 ;;		Unchanged: 0/0
 36895 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36900 ;;Total ram usage:        0 bytes
 36901 ;; Hardware stack levels used: 1
 36902 ;; Hardware stack levels required when called: 2
 36903 ;; This function calls:
 36904 ;;		_findServiceIndex
 36905 ;;		_startTimedResponse
 36906 ;; This function is called by:
 36907 ;;		_teachProcessMessage
 36908 ;; This function uses a non-reentrant model
 36909 ;;
 36910                           
 36911                           	psect	text54
 36912   0164B6                     __ptext54:
 36913                           	callstack 0
 36914   0164B6                     _doNerd:
 36915                           	callstack 122
 36916                           
 36917                           ;../../VLCBlib_PIC/event_teach_simple.c: 432:     startTimedResponse(2, findServiceIndex
      +                          (SERVICE_ID_OLD_TEACH), nerdCallback);
 36918                           
 36919                           ;incstack = 0
 36920   0164B6  0E04               	movlw	4
 36921   0164B8  EC02  F0A8         	call	_findServiceIndex
 36922   0164BC  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 36923   0164BE  0EF2               	movlw	low _nerdCallback
 36924   0164C0  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 36925   0164C2  0E57               	movlw	high _nerdCallback
 36926   0164C4  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 36927   0164C6  0E01               	movlw	low (_nerdCallback shr (0+16))
 36928   0164C8  6E08               	movwf	(startTimedResponse@callback+2)^(0+1280),c
 36929   0164CA  0E02               	movlw	2
 36930   0164CC  ECD0  F0AE         	call	_startTimedResponse
 36931   0164D0  0012               	return		;funcret
 36932   0164D2                     __end_of_doNerd:
 36933                           	callstack 0
 36934                           
 36935 ;; *************** function _doNenrd *****************
 36936 ;; Defined at:
 36937 ;;		line 464 in file "../../VLCBlib_PIC/event_teach_simple.c"
 36938 ;; Parameters:    Size  Location     Type
 36939 ;;  index           1    wreg     unsigned char 
 36940 ;; Auto vars:     Size  Location     Type
 36941 ;;  index           1   46[COMRAM] unsigned char 
 36942 ;;  eventNumber     2   44[COMRAM] unsigned short 
 36943 ;;  nodeNumber      2   42[COMRAM] unsigned short 
 36944 ;;  tableIndex      1   47[COMRAM] unsigned char 
 36945 ;; Return value:  Size  Location     Type
 36946 ;;                  1    wreg      void 
 36947 ;; Registers used:
 36948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 36949 ;; Tracked objects:
 36950 ;;		On entry : 0/0
 36951 ;;		On exit  : 0/0
 36952 ;;		Unchanged: 0/0
 36953 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36955 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36957 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36958 ;;Total ram usage:        6 bytes
 36959 ;; Hardware stack levels used: 1
 36960 ;; Hardware stack levels required when called: 6
 36961 ;; This function calls:
 36962 ;;		_evtIdxToTableIndex
 36963 ;;		_getEN
 36964 ;;		_getNN
 36965 ;;		_sendMessage3
 36966 ;;		_sendMessage5
 36967 ;; This function is called by:
 36968 ;;		_teachProcessMessage
 36969 ;; This function uses a non-reentrant model
 36970 ;;
 36971                           
 36972                           	psect	text55
 36973   014E30                     __ptext55:
 36974                           	callstack 0
 36975   014E30                     _doNenrd:
 36976                           	callstack 118
 36977                           
 36978                           ;incstack = 0
 36979                           ;doNenrd@index stored from wreg
 36980   014E30  6E2F               	movwf	doNenrd@index^(0+1280),c
 36981                           
 36982                           ;../../VLCBlib_PIC/event_teach_simple.c: 465:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 466:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 468:     tableIndex = evtIdxToTableIndex(index);
 36983   014E32  502F               	movf	doNenrd@index^(0+1280),w,c
 36984   014E34  EC1B  F0B3         	call	_evtIdxToTableIndex
 36985   014E38  6E30               	movwf	doNenrd@tableIndex^(0+1280),c
 36986                           
 36987                           ;../../VLCBlib_PIC/event_teach_simple.c: 470:     if (tableIndex >= 254) {
 36988   014E3A  0EFD               	movlw	253
 36989   014E3C  6430               	cpfsgt	doNenrd@tableIndex^(0+1280),c
 36990   014E3E  D017               	goto	l9533
 36991                           
 36992                           ;../../VLCBlib_PIC/event_teach_simple.c: 471:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EN_IDX);
 36993   014E40  C55F  F525         	movff	_nn+1,sendMessage3@data1
 36994   014E44  C55E  F526         	movff	_nn,sendMessage3@data2
 36995   014E48  0E08               	movlw	8
 36996   014E4A  6E27               	movwf	sendMessage3@data3^(0+1280),c
 36997   014E4C  0E6F               	movlw	111
 36998   014E4E  ECF7  F0B0         	call	_sendMessage3
 36999                           
 37000                           ;../../VLCBlib_PIC/event_teach_simple.c: 473:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, OPC_NENRD, SERVICE_ID_OLD_TEACH, CMDERR_INV_EN_IDX);
 37001   014E52  C55F  F525         	movff	_nn+1,sendMessage5@data1
 37002   014E56  C55E  F526         	movff	_nn,sendMessage5@data2
 37003   014E5A  0E72               	movlw	114
 37004   014E5C  6E27               	movwf	sendMessage5@data3^(0+1280),c
 37005   014E5E  0E04               	movlw	4
 37006   014E60  6E28               	movwf	sendMessage5@data4^(0+1280),c
 37007   014E62  0E08               	movlw	8
 37008   014E64  6E29               	movwf	sendMessage5@data5^(0+1280),c
 37009   014E66  0EAF               	movlw	175
 37010   014E68  EC36  F0B1         	call	_sendMessage5
 37011   014E6C  0012               	return	
 37012   014E6E                     l9533:
 37013                           
 37014                           ;../../VLCBlib_PIC/event_teach_simple.c: 477:     nodeNumber = getNN(tableIndex);
 37015   014E6E  5030               	movf	doNenrd@tableIndex^(0+1280),w,c
 37016   014E70  EC7C  F0A1         	call	_getNN
 37017   014E74  C50D  F52B         	movff	?_getNN,doNenrd@nodeNumber
 37018   014E78  C50E  F52C         	movff	?_getNN+1,doNenrd@nodeNumber+1
 37019                           
 37020                           ;../../VLCBlib_PIC/event_teach_simple.c: 478:     eventNumber = getEN(tableIndex);
 37021   014E7C  5030               	movf	doNenrd@tableIndex^(0+1280),w,c
 37022   014E7E  EC70  F0A8         	call	_getEN
 37023   014E82  C50D  F52D         	movff	?_getEN,doNenrd@eventNumber
 37024   014E86  C50E  F52E         	movff	?_getEN+1,doNenrd@eventNumber+1
 37025                           
 37026                           ;../../VLCBlib_PIC/event_teach_simple.c: 479:     sendMessage5(OPC_ENRSP, nodeNumber>>8,
      +                           nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 37027   014E8A  502C               	movf	(doNenrd@nodeNumber+1)^(0+1280),w,c
 37028   014E8C  6E25               	movwf	sendMessage5@data1^(0+1280),c
 37029   014E8E  C52B  F526         	movff	doNenrd@nodeNumber,sendMessage5@data2
 37030   014E92  502E               	movf	(doNenrd@eventNumber+1)^(0+1280),w,c
 37031   014E94  6E27               	movwf	sendMessage5@data3^(0+1280),c
 37032   014E96  C52D  F528         	movff	doNenrd@eventNumber,sendMessage5@data4
 37033   014E9A  C52F  F529         	movff	doNenrd@index,sendMessage5@data5
 37034   014E9E  0EF2               	movlw	242
 37035   014EA0  EC36  F0B1         	call	_sendMessage5
 37036   014EA4  0012               	return		;funcret
 37037   014EA6                     __end_of_doNenrd:
 37038                           	callstack 0
 37039                           
 37040 ;; *************** function _evtIdxToTableIndex *****************
 37041 ;; Defined at:
 37042 ;;		line 961 in file "../../VLCBlib_PIC/event_teach_simple.c"
 37043 ;; Parameters:    Size  Location     Type
 37044 ;;  evtIdx          1    wreg     unsigned char 
 37045 ;; Auto vars:     Size  Location     Type
 37046 ;;  evtIdx          1    0[COMRAM] unsigned char 
 37047 ;; Return value:  Size  Location     Type
 37048 ;;                  1    wreg      unsigned char 
 37049 ;; Registers used:
 37050 ;;		wreg, status,2, status,0
 37051 ;; Tracked objects:
 37052 ;;		On entry : 0/0
 37053 ;;		On exit  : 0/0
 37054 ;;		Unchanged: 0/0
 37055 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37059 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37060 ;;Total ram usage:        1 bytes
 37061 ;; Hardware stack levels used: 1
 37062 ;; Hardware stack levels required when called: 1
 37063 ;; This function calls:
 37064 ;;		Nothing
 37065 ;; This function is called by:
 37066 ;;		_doNenrd
 37067 ;;		_doReval
 37068 ;; This function uses a non-reentrant model
 37069 ;;
 37070                           
 37071                           	psect	text56
 37072   016636                     __ptext56:
 37073                           	callstack 0
 37074   016636                     _evtIdxToTableIndex:
 37075                           	callstack 122
 37076                           
 37077                           ;incstack = 0
 37078                           ;evtIdxToTableIndex@evtIdx stored from wreg
 37079   016636  6E01               	movwf	evtIdxToTableIndex@evtIdx^(0+1280),c
 37080                           
 37081                           ;../../VLCBlib_PIC/event_teach_simple.c: 962:     return evtIdx - 1;
 37082   016638  0401               	decf	evtIdxToTableIndex@evtIdx^(0+1280),w,c
 37083   01663A  0012               	return		;funcret
 37084   01663C                     __end_of_evtIdxToTableIndex:
 37085                           	callstack 0
 37086                           
 37087 ;; *************** function _doEvuln *****************
 37088 ;; Defined at:
 37089 ;;		line 599 in file "../../VLCBlib_PIC/event_teach_simple.c"
 37090 ;; Parameters:    Size  Location     Type
 37091 ;;  nodeNumber      2   50[COMRAM] unsigned short 
 37092 ;;  eventNumber     2   52[COMRAM] unsigned short 
 37093 ;; Auto vars:     Size  Location     Type
 37094 ;;  result          1   54[COMRAM] unsigned char 
 37095 ;; Return value:  Size  Location     Type
 37096 ;;                  1    wreg      void 
 37097 ;; Registers used:
 37098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 37099 ;; Tracked objects:
 37100 ;;		On entry : 0/0
 37101 ;;		On exit  : 0/0
 37102 ;;		Unchanged: 0/0
 37103 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37107 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37108 ;;Total ram usage:        5 bytes
 37109 ;; Hardware stack levels used: 1
 37110 ;; Hardware stack levels required when called: 8
 37111 ;; This function calls:
 37112 ;;		_removeEvent
 37113 ;;		_sendMessage2
 37114 ;;		_sendMessage3
 37115 ;;		_sendMessage5
 37116 ;; This function is called by:
 37117 ;;		_teachProcessMessage
 37118 ;; This function uses a non-reentrant model
 37119 ;;
 37120                           
 37121                           	psect	text57
 37122   014F1C                     __ptext57:
 37123                           	callstack 0
 37124   014F1C                     _doEvuln:
 37125                           	callstack 116
 37126                           
 37127                           ;../../VLCBlib_PIC/event_teach_simple.c: 600:     uint8_t result;;../../VLCBlib_PIC/even
      +                          t_teach_simple.c: 601:     result = removeEvent(nodeNumber, eventNumber);
 37128                           
 37129                           ;incstack = 0
 37130   014F1C  C533  F52E         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 37131   014F20  C534  F52F         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 37132   014F24  C535  F530         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 37133   014F28  C536  F531         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 37134   014F2C  EC74  F0B1         	call	_removeEvent	;wreg free
 37135   014F30  6E37               	movwf	doEvuln@result^(0+1280),c
 37136                           
 37137                           ;../../VLCBlib_PIC/event_teach_simple.c: 602:     if (result) {
 37138   014F32  5037               	movf	doEvuln@result^(0+1280),w,c
 37139   014F34  B4D8               	btfsc	status,2,c
 37140   014F36  D017               	goto	l9443
 37141                           
 37142                           ;../../VLCBlib_PIC/event_teach_simple.c: 603:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, result);
 37143   014F38  C55F  F525         	movff	_nn+1,sendMessage3@data1
 37144   014F3C  C55E  F526         	movff	_nn,sendMessage3@data2
 37145   014F40  C537  F527         	movff	doEvuln@result,sendMessage3@data3
 37146   014F44  0E6F               	movlw	111
 37147   014F46  ECF7  F0B0         	call	_sendMessage3
 37148                           
 37149                           ;../../VLCBlib_PIC/event_teach_simple.c: 605:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 37150   014F4A  C55F  F525         	movff	_nn+1,sendMessage5@data1
 37151   014F4E  C55E  F526         	movff	_nn,sendMessage5@data2
 37152   014F52  0E95               	movlw	149
 37153   014F54  6E27               	movwf	sendMessage5@data3^(0+1280),c
 37154   014F56  0E04               	movlw	4
 37155   014F58  6E28               	movwf	sendMessage5@data4^(0+1280),c
 37156   014F5A  C537  F529         	movff	doEvuln@result,sendMessage5@data5
 37157   014F5E  0EAF               	movlw	175
 37158   014F60  EC36  F0B1         	call	_sendMessage5
 37159   014F64  0012               	return	
 37160   014F66                     l9443:
 37161                           
 37162                           ;../../VLCBlib_PIC/event_teach_simple.c: 610:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 37163   014F66  C55F  F525         	movff	_nn+1,sendMessage2@data1
 37164   014F6A  C55E  F526         	movff	_nn,sendMessage2@data2
 37165   014F6E  0E59               	movlw	89
 37166   014F70  EC0C  F0B1         	call	_sendMessage2
 37167                           
 37168                           ;../../VLCBlib_PIC/event_teach_simple.c: 612:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 37169   014F74  C55F  F525         	movff	_nn+1,sendMessage5@data1
 37170   014F78  C55E  F526         	movff	_nn,sendMessage5@data2
 37171   014F7C  0E95               	movlw	149
 37172   014F7E  6E27               	movwf	sendMessage5@data3^(0+1280),c
 37173   014F80  0E04               	movlw	4
 37174   014F82  6E28               	movwf	sendMessage5@data4^(0+1280),c
 37175   014F84  0E00               	movlw	0
 37176   014F86  6E29               	movwf	sendMessage5@data5^(0+1280),c
 37177   014F88  0EAF               	movlw	175
 37178   014F8A  EC36  F0B1         	call	_sendMessage5
 37179   014F8E  0012               	return		;funcret
 37180   014F90                     __end_of_doEvuln:
 37181                           	callstack 0
 37182                           
 37183 ;; *************** function _removeEvent *****************
 37184 ;; Defined at:
 37185 ;;		line 705 in file "../../VLCBlib_PIC/event_teach_simple.c"
 37186 ;; Parameters:    Size  Location     Type
 37187 ;;  nodeNumber      2   45[COMRAM] unsigned short 
 37188 ;;  eventNumber     2   47[COMRAM] unsigned short 
 37189 ;; Auto vars:     Size  Location     Type
 37190 ;;  tableIndex      1   49[COMRAM] unsigned char 
 37191 ;; Return value:  Size  Location     Type
 37192 ;;                  1    wreg      unsigned char 
 37193 ;; Registers used:
 37194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37195 ;; Tracked objects:
 37196 ;;		On entry : 0/0
 37197 ;;		On exit  : 0/0
 37198 ;;		Unchanged: 0/0
 37199 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37200 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37203 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37204 ;;Total ram usage:        5 bytes
 37205 ;; Hardware stack levels used: 1
 37206 ;; Hardware stack levels required when called: 7
 37207 ;; This function calls:
 37208 ;;		_findEvent
 37209 ;;		_removeTableEntry
 37210 ;; This function is called by:
 37211 ;;		_doEvuln
 37212 ;; This function uses a non-reentrant model
 37213 ;;
 37214                           
 37215                           	psect	text58
 37216   0162E8                     __ptext58:
 37217                           	callstack 0
 37218   0162E8                     _removeEvent:
 37219                           	callstack 116
 37220                           
 37221                           ;../../VLCBlib_PIC/event_teach_simple.c: 707:     uint8_t tableIndex = findEvent(nodeNum
      +                          ber, eventNumber);
 37222                           
 37223                           ;incstack = 0
 37224   0162E8  C52E  F51E         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 37225   0162EC  C52F  F51F         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 37226   0162F0  C530  F520         	movff	removeEvent@eventNumber,findEvent@eventNumber
 37227   0162F4  C531  F521         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 37228   0162F8  EC4F  F0A4         	call	_findEvent	;wreg free
 37229   0162FC  6E32               	movwf	removeEvent@tableIndex^(0+1280),c
 37230                           
 37231                           ;../../VLCBlib_PIC/event_teach_simple.c: 708:     if (tableIndex == 0xff) return CMDERR_
      +                          INVALID_EVENT;
 37232   0162FE  2832               	incf	removeEvent@tableIndex^(0+1280),w,c
 37233   016300  A4D8               	btfss	status,2,c
 37234   016302  D002               	goto	l9059
 37235   016304  0E07               	movlw	7
 37236   016306  0012               	return	
 37237   016308                     l9059:
 37238                           
 37239                           ;../../VLCBlib_PIC/event_teach_simple.c: 710:     return removeTableEntry(tableIndex);
 37240   016308  5032               	movf	removeEvent@tableIndex^(0+1280),w,c
 37241   01630A  ECB4  F09A         	call	_removeTableEntry
 37242   01630E  0012               	return		;funcret
 37243   016310                     __end_of_removeEvent:
 37244                           	callstack 0
 37245                           
 37246 ;; *************** function _doEvlrn *****************
 37247 ;; Defined at:
 37248 ;;		line 522 in file "../../VLCBlib_PIC/event_teach_simple.c"
 37249 ;; Parameters:    Size  Location     Type
 37250 ;;  nodeNumber      2   76[COMRAM] unsigned short 
 37251 ;;  eventNumber     2   78[COMRAM] unsigned short 
 37252 ;;  evNum           1   80[COMRAM] unsigned char 
 37253 ;;  evVal           1   81[COMRAM] unsigned char 
 37254 ;; Auto vars:     Size  Location     Type
 37255 ;;		None
 37256 ;; Return value:  Size  Location     Type
 37257 ;;                  1    wreg      void 
 37258 ;; Registers used:
 37259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 37260 ;; Tracked objects:
 37261 ;;		On entry : 0/0
 37262 ;;		On exit  : 0/0
 37263 ;;		Unchanged: 0/0
 37264 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37265 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37268 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37269 ;;Total ram usage:        6 bytes
 37270 ;; Hardware stack levels used: 1
 37271 ;; Hardware stack levels required when called: 9
 37272 ;; This function calls:
 37273 ;;		_APP_addEvent
 37274 ;;		_sendMessage2
 37275 ;;		_sendMessage3
 37276 ;;		_sendMessage5
 37277 ;; This function is called by:
 37278 ;;		_teachProcessMessage
 37279 ;; This function uses a non-reentrant model
 37280 ;;
 37281                           
 37282                           	psect	text59
 37283   01423E                     __ptext59:
 37284                           	callstack 0
 37285   01423E                     _doEvlrn:
 37286                           	callstack 115
 37287                           
 37288                           ;../../VLCBlib_PIC/event_teach_simple.c: 524:     evNum--;
 37289                           
 37290                           ;incstack = 0
 37291   01423E  0651               	decf	doEvlrn@evNum^(0+1280),f,c
 37292                           
 37293                           ;../../VLCBlib_PIC/event_teach_simple.c: 525:     if (evNum >= 13) {
 37294   014240  0E0C               	movlw	12
 37295   014242  6451               	cpfsgt	doEvlrn@evNum^(0+1280),c
 37296   014244  D017               	goto	l9419
 37297                           
 37298                           ;../../VLCBlib_PIC/event_teach_simple.c: 526:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 37299   014246  C55F  F525         	movff	_nn+1,sendMessage3@data1
 37300   01424A  C55E  F526         	movff	_nn,sendMessage3@data2
 37301   01424E  0E06               	movlw	6
 37302   014250  6E27               	movwf	sendMessage3@data3^(0+1280),c
 37303   014252  0E6F               	movlw	111
 37304   014254  ECF7  F0B0         	call	_sendMessage3
 37305                           
 37306                           ;../../VLCBlib_PIC/event_teach_simple.c: 528:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 37307   014258  C55F  F525         	movff	_nn+1,sendMessage5@data1
 37308   01425C  C55E  F526         	movff	_nn,sendMessage5@data2
 37309   014260  0ED2               	movlw	210
 37310   014262  6E27               	movwf	sendMessage5@data3^(0+1280),c
 37311   014264  0E04               	movlw	4
 37312   014266  6E28               	movwf	sendMessage5@data4^(0+1280),c
 37313   014268  0E06               	movlw	6
 37314   01426A  6E29               	movwf	sendMessage5@data5^(0+1280),c
 37315   01426C  0EAF               	movlw	175
 37316   01426E  EC36  F0B1         	call	_sendMessage5
 37317   014272  0012               	return	
 37318   014274                     l9419:
 37319                           
 37320                           ;../../VLCBlib_PIC/event_teach_simple.c: 532:     APP_addEvent(nodeNumber, eventNumber, 
      +                          evNum, evVal, FALSE);
 37321   014274  C54D  F53F         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 37322   014278  C54E  F540         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 37323   01427C  C54F  F541         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 37324   014280  C550  F542         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 37325   014284  C551  F543         	movff	doEvlrn@evNum,APP_addEvent@evNum
 37326   014288  C552  F544         	movff	doEvlrn@evVal,APP_addEvent@evVal
 37327   01428C  0E00               	movlw	0
 37328   01428E  6E45               	movwf	APP_addEvent@forceOwnNN^(0+1280),c
 37329   014290  ECE6  F09C         	call	_APP_addEvent	;wreg free
 37330                           
 37331                           ;../../VLCBlib_PIC/event_teach_simple.c: 533:     if (errno) {
 37332   014294  0105               	movlb	5	; () banked
 37333   014296  519E               	movf	_errno& (0+255),w,b
 37334   014298  B4D8               	btfsc	status,2,c
 37335   01429A  D017               	goto	l9427
 37336                           
 37337                           ; BSR set to: 5
 37338                           ;../../VLCBlib_PIC/event_teach_simple.c: 535:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, errno);
 37339   01429C  C55F  F525         	movff	_nn+1,sendMessage3@data1
 37340   0142A0  C55E  F526         	movff	_nn,sendMessage3@data2
 37341   0142A4  C59E  F527         	movff	_errno,sendMessage3@data3
 37342   0142A8  0E6F               	movlw	111
 37343   0142AA  ECF7  F0B0         	call	_sendMessage3
 37344                           
 37345                           ;../../VLCBlib_PIC/event_teach_simple.c: 537:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, errno);
 37346   0142AE  C55F  F525         	movff	_nn+1,sendMessage5@data1
 37347   0142B2  C55E  F526         	movff	_nn,sendMessage5@data2
 37348   0142B6  0ED2               	movlw	210
 37349   0142B8  6E27               	movwf	sendMessage5@data3^(0+1280),c
 37350   0142BA  0E04               	movlw	4
 37351   0142BC  6E28               	movwf	sendMessage5@data4^(0+1280),c
 37352   0142BE  C59E  F529         	movff	_errno,sendMessage5@data5
 37353   0142C2  0EAF               	movlw	175
 37354   0142C4  EC36  F0B1         	call	_sendMessage5
 37355   0142C8  0012               	return	
 37356   0142CA                     l9427:
 37357                           
 37358                           ; BSR set to: 5
 37359                           ;../../VLCBlib_PIC/event_teach_simple.c: 542:     teachDiagnostics[0x01].asUint++;
 37360   0142CA  4BC7               	infsnz	(_teachDiagnostics+2)& (0+255),f,b
 37361   0142CC  2BC8               	incf	(_teachDiagnostics+3)& (0+255),f,b
 37362                           
 37363                           ; BSR set to: 5
 37364                           ;../../VLCBlib_PIC/event_teach_simple.c: 544:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 37365   0142CE  C55F  F525         	movff	_nn+1,sendMessage2@data1
 37366   0142D2  C55E  F526         	movff	_nn,sendMessage2@data2
 37367   0142D6  0E59               	movlw	89
 37368   0142D8  EC0C  F0B1         	call	_sendMessage2
 37369                           
 37370                           ;../../VLCBlib_PIC/event_teach_simple.c: 546:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 37371   0142DC  C55F  F525         	movff	_nn+1,sendMessage5@data1
 37372   0142E0  C55E  F526         	movff	_nn,sendMessage5@data2
 37373   0142E4  0ED2               	movlw	210
 37374   0142E6  6E27               	movwf	sendMessage5@data3^(0+1280),c
 37375   0142E8  0E04               	movlw	4
 37376   0142EA  6E28               	movwf	sendMessage5@data4^(0+1280),c
 37377   0142EC  0E00               	movlw	0
 37378   0142EE  6E29               	movwf	sendMessage5@data5^(0+1280),c
 37379   0142F0  0EAF               	movlw	175
 37380   0142F2  EC36  F0B1         	call	_sendMessage5
 37381   0142F6  0012               	return		;funcret
 37382   0142F8                     __end_of_doEvlrn:
 37383                           	callstack 0
 37384                           
 37385 ;; *************** function _APP_addEvent *****************
 37386 ;; Defined at:
 37387 ;;		line 258 in file "../canpan3Events.c"
 37388 ;; Parameters:    Size  Location     Type
 37389 ;;  nodeNumber      2   62[COMRAM] unsigned short 
 37390 ;;  eventNumber     2   64[COMRAM] unsigned short 
 37391 ;;  evNum           1   66[COMRAM] unsigned char 
 37392 ;;  evVal           1   67[COMRAM] unsigned char 
 37393 ;;  forceOwnNN      1   68[COMRAM] enum E23257
 37394 ;; Auto vars:     Size  Location     Type
 37395 ;;  oti             1   75[COMRAM] unsigned char 
 37396 ;;  switchNo        1   74[COMRAM] unsigned char 
 37397 ;;  tableIndex      1   73[COMRAM] unsigned char 
 37398 ;;  leds            1   72[COMRAM] unsigned char 
 37399 ;;  prevSwitchNo    1    0        unsigned char 
 37400 ;; Return value:  Size  Location     Type
 37401 ;;                  1    wreg      unsigned char 
 37402 ;; Registers used:
 37403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37404 ;; Tracked objects:
 37405 ;;		On entry : 0/0
 37406 ;;		On exit  : 0/0
 37407 ;;		Unchanged: 0/0
 37408 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37409 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37410 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37411 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37412 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37413 ;;Total ram usage:       14 bytes
 37414 ;; Hardware stack levels used: 1
 37415 ;; Hardware stack levels required when called: 8
 37416 ;; This function calls:
 37417 ;;		_addEvent
 37418 ;;		_findEvent
 37419 ;;		_getEVs
 37420 ;;		_writeEv
 37421 ;;		_writeNVM
 37422 ;; This function is called by:
 37423 ;;		_doEvlrn
 37424 ;; This function uses a non-reentrant model
 37425 ;;
 37426                           
 37427                           	psect	text60
 37428   0139CC                     __ptext60:
 37429                           	callstack 0
 37430   0139CC                     _APP_addEvent:
 37431                           	callstack 115
 37432                           
 37433                           ;../canpan3Events.c: 259:     uint8_t tableIndex;;../canpan3Events.c: 260:     uint8_t o
      +                          ti;;../canpan3Events.c: 261:     uint8_t switchNo;;../canpan3Events.c: 262:     uint8_t 
      +                          prevSwitchNo;;../canpan3Events.c: 263:     uint8_t leds;;../canpan3Events.c: 265:     if
      +                           (evNum == 1) {
 37434                           
 37435                           ;incstack = 0
 37436   0139CC  0443               	decf	APP_addEvent@evNum^(0+1280),w,c
 37437   0139CE  A4D8               	btfss	status,2,c
 37438   0139D0  D069               	goto	l8981
 37439                           
 37440                           ;../canpan3Events.c: 266:         switchNo = evVal;
 37441   0139D2  C544  F54B         	movff	APP_addEvent@evVal,APP_addEvent@switchNo
 37442                           
 37443                           ;../canpan3Events.c: 267:         tableIndex = findEvent(nodeNumber, eventNumber);
 37444   0139D6  C53F  F51E         	movff	APP_addEvent@nodeNumber,findEvent@nodeNumber
 37445   0139DA  C540  F51F         	movff	APP_addEvent@nodeNumber+1,findEvent@nodeNumber+1
 37446   0139DE  C541  F520         	movff	APP_addEvent@eventNumber,findEvent@eventNumber
 37447   0139E2  C542  F521         	movff	APP_addEvent@eventNumber+1,findEvent@eventNumber+1
 37448   0139E6  EC4F  F0A4         	call	_findEvent	;wreg free
 37449   0139EA  6E4A               	movwf	APP_addEvent@tableIndex^(0+1280),c
 37450                           
 37451                           ;../canpan3Events.c: 269:         if ((switchNo > 0) && (switchNo <= ((8*4)+1))) {
 37452   0139EC  504B               	movf	APP_addEvent@switchNo^(0+1280),w,c
 37453   0139EE  B4D8               	btfsc	status,2,c
 37454   0139F0  D058               	goto	l210
 37455   0139F2  0E22               	movlw	34
 37456   0139F4  604B               	cpfslt	APP_addEvent@switchNo^(0+1280),c
 37457   0139F6  D055               	goto	l210
 37458                           
 37459                           ;../canpan3Events.c: 270:             oti = switch2Event[switchNo-1];
 37460   0139F8  0EFF               	movlw	low (_switch2Event+65535)
 37461   0139FA  244B               	addwf	APP_addEvent@switchNo^(0+1280),w,c
 37462   0139FC  6ED9               	movwf	fsr2l,c
 37463   0139FE  6ADA               	clrf	fsr2h,c
 37464   013A00  0E05               	movlw	high (_switch2Event+65535)
 37465   013A02  22DA               	addwfc	fsr2h,f,c
 37466   013A04  50DF               	movf	indf2,w,c
 37467   013A06  6E4C               	movwf	APP_addEvent@oti^(0+1280),c
 37468                           
 37469                           ;../canpan3Events.c: 271:             if ((oti != 0xff) && (oti != tableIndex)){
 37470   013A08  284C               	incf	APP_addEvent@oti^(0+1280),w,c
 37471   013A0A  B4D8               	btfsc	status,2,c
 37472   013A0C  D041               	goto	l8979
 37473   013A0E  504A               	movf	APP_addEvent@tableIndex^(0+1280),w,c
 37474   013A10  184C               	xorwf	APP_addEvent@oti^(0+1280),w,c
 37475   013A12  B4D8               	btfsc	status,2,c
 37476   013A14  D03D               	goto	l8979
 37477                           
 37478                           ;../canpan3Events.c: 273:                 writeEv(oti, 1, 0);
 37479   013A16  0E01               	movlw	1
 37480   013A18  6E15               	movwf	writeEv@evNum^(0+1280),c
 37481   013A1A  0E00               	movlw	0
 37482   013A1C  6E16               	movwf	writeEv@evVal^(0+1280),c
 37483   013A1E  504C               	movf	APP_addEvent@oti^(0+1280),w,c
 37484   013A20  EC13  F0AB         	call	_writeEv
 37485                           
 37486                           ;../canpan3Events.c: 275:                 getEVs(oti);
 37487   013A24  504C               	movf	APP_addEvent@oti^(0+1280),w,c
 37488   013A26  EC48  F0A9         	call	_getEVs
 37489                           
 37490                           ;../canpan3Events.c: 278:                 leds = evs[4] | evs[5] | evs[6] | evs[7];
 37491   013A2A  0106               	movlb	6	; () banked
 37492   013A2C  5175               	movf	(_evs+4)& (0+255),w,b
 37493   013A2E  1176               	iorwf	(_evs+5)& (0+255),w,b
 37494   013A30  1177               	iorwf	(_evs+6)& (0+255),w,b
 37495   013A32  1178               	iorwf	(_evs+7)& (0+255),w,b
 37496   013A34  6E49               	movwf	APP_addEvent@leds^(0+1280),c
 37497                           
 37498                           ; BSR set to: 6
 37499                           ;../canpan3Events.c: 279:                 if (leds == 0) {
 37500   013A36  5049               	movf	APP_addEvent@leds^(0+1280),w,c
 37501   013A38  A4D8               	btfss	status,2,c
 37502   013A3A  D02A               	goto	l8979
 37503                           
 37504                           ; BSR set to: 6
 37505                           ;../canpan3Events.c: 282:                     writeNVM(FLASH_NVM_TYPE, 0x1E800 + (sizeof
      +                          (Event) + 1 + 13)*oti+3, 0);
 37506   013A3C  504C               	movf	APP_addEvent@oti^(0+1280),w,c
 37507   013A3E  0D12               	mullw	18
 37508   013A40  C4F3 F546          	movff	prodl,??_APP_addEvent
 37509   013A44  C4F4 F547          	movff	prodh,??_APP_addEvent+1
 37510   013A48  6A48               	clrf	(??_APP_addEvent+2)^(0+1280),c
 37511   013A4A  0E03               	movlw	3
 37512   013A4C  2446               	addwf	??_APP_addEvent^(0+1280),w,c
 37513   013A4E  6E0E               	movwf	writeNVM@index^(0+1280),c
 37514   013A50  0EE8               	movlw	232
 37515   013A52  2047               	addwfc	(??_APP_addEvent+1)^(0+1280),w,c
 37516   013A54  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 37517   013A56  0E01               	movlw	1
 37518   013A58  2048               	addwfc	(??_APP_addEvent+2)^(0+1280),w,c
 37519   013A5A  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 37520   013A5C  0E00               	movlw	0
 37521   013A5E  6E11               	movwf	writeNVM@value^(0+1280),c
 37522   013A60  0E01               	movlw	1
 37523   013A62  EC71  F0AD         	call	_writeNVM
 37524                           
 37525                           ;../canpan3Events.c: 283:                     writeNVM(FLASH_NVM_TYPE, 0x1E800 + (sizeof
      +                          (Event) + 1 + 13)*oti+2, 0);
 37526   013A66  504C               	movf	APP_addEvent@oti^(0+1280),w,c
 37527   013A68  0D12               	mullw	18
 37528   013A6A  C4F3 F546          	movff	prodl,??_APP_addEvent
 37529   013A6E  C4F4 F547          	movff	prodh,??_APP_addEvent+1
 37530   013A72  6A48               	clrf	(??_APP_addEvent+2)^(0+1280),c
 37531   013A74  0E02               	movlw	2
 37532   013A76  2446               	addwf	??_APP_addEvent^(0+1280),w,c
 37533   013A78  6E0E               	movwf	writeNVM@index^(0+1280),c
 37534   013A7A  0EE8               	movlw	232
 37535   013A7C  2047               	addwfc	(??_APP_addEvent+1)^(0+1280),w,c
 37536   013A7E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 37537   013A80  0E01               	movlw	1
 37538   013A82  2048               	addwfc	(??_APP_addEvent+2)^(0+1280),w,c
 37539   013A84  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 37540   013A86  0E00               	movlw	0
 37541   013A88  6E11               	movwf	writeNVM@value^(0+1280),c
 37542   013A8A  0E01               	movlw	1
 37543   013A8C  EC71  F0AD         	call	_writeNVM
 37544   013A90                     l8979:
 37545                           
 37546                           ;../canpan3Events.c: 286:             switch2Event[switchNo-1] = tableIndex;
 37547   013A90  0EFF               	movlw	low (_switch2Event+65535)
 37548   013A92  244B               	addwf	APP_addEvent@switchNo^(0+1280),w,c
 37549   013A94  6ED9               	movwf	fsr2l,c
 37550   013A96  6ADA               	clrf	fsr2h,c
 37551   013A98  0E05               	movlw	high (_switch2Event+65535)
 37552   013A9A  22DA               	addwfc	fsr2h,f,c
 37553   013A9C  C54A  F4DF         	movff	APP_addEvent@tableIndex,indf2
 37554                           
 37555                           ;../canpan3Events.c: 287:         } else {
 37556   013AA0  D001               	goto	l8981
 37557   013AA2                     l210:
 37558                           
 37559                           ;../canpan3Events.c: 291:             evVal = 0;
 37560   013AA2  6A44               	clrf	APP_addEvent@evVal^(0+1280),c
 37561   013AA4                     l8981:
 37562                           
 37563                           ;../canpan3Events.c: 294:     return addEvent(nodeNumber, eventNumber, evNum, evVal, for
      +                          ceOwnNN);;	Return value of _APP_addEvent is never used
 37564   013AA4  C53F  F52B         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 37565   013AA8  C540  F52C         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 37566   013AAC  C541  F52D         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 37567   013AB0  C542  F52E         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 37568   013AB4  C543  F52F         	movff	APP_addEvent@evNum,addEvent@evNum
 37569   013AB8  C544  F530         	movff	APP_addEvent@evVal,addEvent@evVal
 37570   013ABC  C545  F531         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 37571   013AC0  ECA1  F094         	call	_addEvent	;wreg free
 37572   013AC4  0012               	return		;funcret
 37573   013AC6                     __end_of_APP_addEvent:
 37574                           	callstack 0
 37575                           
 37576 ;; *************** function _rebuildLookupTable *****************
 37577 ;; Defined at:
 37578 ;;		line 110 in file "../canpan3Events.c"
 37579 ;; Parameters:    Size  Location     Type
 37580 ;;		None
 37581 ;; Auto vars:     Size  Location     Type
 37582 ;;  swNo            2   24[COMRAM] short 
 37583 ;;  i               1   27[COMRAM] unsigned char 
 37584 ;;  sw              1   26[COMRAM] unsigned char 
 37585 ;; Return value:  Size  Location     Type
 37586 ;;                  1    wreg      void 
 37587 ;; Registers used:
 37588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37589 ;; Tracked objects:
 37590 ;;		On entry : 0/0
 37591 ;;		On exit  : 0/0
 37592 ;;		Unchanged: 0/0
 37593 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37595 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37597 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37598 ;;Total ram usage:        4 bytes
 37599 ;; Hardware stack levels used: 1
 37600 ;; Hardware stack levels required when called: 4
 37601 ;; This function calls:
 37602 ;;		_getEv
 37603 ;; This function is called by:
 37604 ;;		_initEvents
 37605 ;;		_APP_preProcessMessage
 37606 ;; This function uses a non-reentrant model
 37607 ;;
 37608                           
 37609                           	psect	text61
 37610   01549C                     __ptext61:
 37611                           	callstack 0
 37612   01549C                     _rebuildLookupTable:
 37613                           	callstack 120
 37614                           
 37615                           ;../canpan3Events.c: 111:     uint8_t sw;;../canpan3Events.c: 112:     int16_t swNo;;../
      +                          canpan3Events.c: 113:     uint8_t i;;../canpan3Events.c: 116:     for (sw=0; sw < ((8*4)
      +                          +1); sw++) {
 37616                           
 37617                           ;incstack = 0
 37618   01549C  6A1B               	clrf	rebuildLookupTable@sw^(0+1280),c
 37619   01549E                     l9825:
 37620                           
 37621                           ;../canpan3Events.c: 117:         switch2Event[sw] = 0xff;
 37622   01549E  0E00               	movlw	low _switch2Event
 37623   0154A0  241B               	addwf	rebuildLookupTable@sw^(0+1280),w,c
 37624   0154A2  6ED9               	movwf	fsr2l,c
 37625   0154A4  6ADA               	clrf	fsr2h,c
 37626   0154A6  0E06               	movlw	high _switch2Event
 37627   0154A8  22DA               	addwfc	fsr2h,f,c
 37628   0154AA  0EFF               	movlw	255
 37629   0154AC  6EDF               	movwf	indf2,c
 37630                           
 37631                           ;../canpan3Events.c: 118:     }
 37632   0154AE  2A1B               	incf	rebuildLookupTable@sw^(0+1280),f,c
 37633   0154B0  0E20               	movlw	32
 37634   0154B2  641B               	cpfsgt	rebuildLookupTable@sw^(0+1280),c
 37635   0154B4  D7F4               	goto	l9825
 37636                           
 37637                           ;../canpan3Events.c: 120:     for (i=0; i<254; i++) {
 37638   0154B6  6A1C               	clrf	rebuildLookupTable@i^(0+1280),c
 37639   0154B8                     l9835:
 37640                           
 37641                           ;../canpan3Events.c: 121:         swNo = getEv(i, 1);
 37642   0154B8  0E01               	movlw	1
 37643   0154BA  6E0D               	movwf	getEv@evNum^(0+1280),c
 37644   0154BC  501C               	movf	rebuildLookupTable@i^(0+1280),w,c
 37645   0154BE  EC13  F0A9         	call	_getEv
 37646   0154C2  C50D  F519         	movff	?_getEv,rebuildLookupTable@swNo
 37647   0154C6  C50E  F51A         	movff	?_getEv+1,rebuildLookupTable@swNo+1
 37648                           
 37649                           ;../canpan3Events.c: 122:         if ((swNo >0) && ( swNo <= ((8*4)+1))) {
 37650   0154CA  BE1A               	btfsc	(rebuildLookupTable@swNo+1)^(0+1280),7,c
 37651   0154CC  D015               	goto	l9843
 37652   0154CE  501A               	movf	(rebuildLookupTable@swNo+1)^(0+1280),w,c
 37653   0154D0  E103               	bnz	u7640
 37654   0154D2  0419               	decf	rebuildLookupTable@swNo^(0+1280),w,c
 37655   0154D4  A0D8               	btfss	status,0,c
 37656   0154D6  D010               	goto	l9843
 37657   0154D8                     u7640:
 37658   0154D8  BE1A               	btfsc	(rebuildLookupTable@swNo+1)^(0+1280),7,c
 37659   0154DA  D006               	goto	u7650
 37660   0154DC  501A               	movf	(rebuildLookupTable@swNo+1)^(0+1280),w,c
 37661   0154DE  E10C               	bnz	l9843
 37662   0154E0  0E22               	movlw	34
 37663   0154E2  5C19               	subwf	rebuildLookupTable@swNo^(0+1280),w,c
 37664   0154E4  B0D8               	btfsc	status,0,c
 37665   0154E6  D008               	goto	l9843
 37666   0154E8                     u7650:
 37667                           
 37668                           ;../canpan3Events.c: 123:             switch2Event[swNo-1] = i;
 37669   0154E8  0EFF               	movlw	low (_switch2Event+65535)
 37670   0154EA  2419               	addwf	rebuildLookupTable@swNo^(0+1280),w,c
 37671   0154EC  6ED9               	movwf	fsr2l,c
 37672   0154EE  0E05               	movlw	high (_switch2Event+65535)
 37673   0154F0  201A               	addwfc	(rebuildLookupTable@swNo+1)^(0+1280),w,c
 37674   0154F2  6EDA               	movwf	fsr2h,c
 37675   0154F4  C51C  F4DF         	movff	rebuildLookupTable@i,indf2
 37676   0154F8                     l9843:
 37677                           
 37678                           ;../canpan3Events.c: 125:     }
 37679   0154F8  2A1C               	incf	rebuildLookupTable@i^(0+1280),f,c
 37680   0154FA  0EFD               	movlw	253
 37681   0154FC  641C               	cpfsgt	rebuildLookupTable@i^(0+1280),c
 37682   0154FE  D7DC               	goto	l9835
 37683   015500  0012               	return	
 37684   015502                     __end_of_rebuildLookupTable:
 37685                           	callstack 0
 37686                           
 37687 ;; *************** function _APP_GetEventIndexState *****************
 37688 ;; Defined at:
 37689 ;;		line 387 in file "../canpan3Events.c"
 37690 ;; Parameters:    Size  Location     Type
 37691 ;;  tableIndex      1    wreg     unsigned char 
 37692 ;; Auto vars:     Size  Location     Type
 37693 ;;  tableIndex      1   27[COMRAM] unsigned char 
 37694 ;;  switchNo        1   28[COMRAM] unsigned char 
 37695 ;; Return value:  Size  Location     Type
 37696 ;;                  1    wreg      enum E23277
 37697 ;; Registers used:
 37698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37699 ;; Tracked objects:
 37700 ;;		On entry : 0/0
 37701 ;;		On exit  : 0/0
 37702 ;;		Unchanged: 0/0
 37703 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37705 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37708 ;;Total ram usage:        2 bytes
 37709 ;; Hardware stack levels used: 1
 37710 ;; Hardware stack levels required when called: 5
 37711 ;; This function calls:
 37712 ;;		_APP_isProducedEvent
 37713 ;;		_getEVs
 37714 ;; This function is called by:
 37715 ;;		_sodTRCallback
 37716 ;;		_producerProcessMessage
 37717 ;; This function uses a non-reentrant model
 37718 ;;
 37719                           
 37720                           	psect	text62
 37721   015C54                     __ptext62:
 37722                           	callstack 0
 37723   015C54                     _APP_GetEventIndexState:
 37724                           	callstack 119
 37725                           
 37726                           ;incstack = 0
 37727                           ;APP_GetEventIndexState@tableIndex stored from wreg
 37728   015C54  6E1C               	movwf	APP_GetEventIndexState@tableIndex^(0+1280),c
 37729                           
 37730                           ;../canpan3Events.c: 388:     uint8_t switchNo;;../canpan3Events.c: 391:     if ( ! APP_
      +                          isProducedEvent(tableIndex)) {
 37731   015C56  501C               	movf	APP_GetEventIndexState@tableIndex^(0+1280),w,c
 37732   015C58  EC2C  F0AF         	call	_APP_isProducedEvent
 37733   015C5C  0900               	iorlw	0
 37734   015C5E  A4D8               	btfss	status,2,c
 37735   015C60  D002               	goto	l9281
 37736   015C62                     u7190:
 37737                           
 37738                           ;../canpan3Events.c: 392:         return EVENT_UNKNOWN;
 37739   015C62  0EFF               	movlw	255
 37740   015C64  0012               	return	
 37741   015C66                     l9281:
 37742                           
 37743                           ;../canpan3Events.c: 395:     getEVs(tableIndex);
 37744   015C66  501C               	movf	APP_GetEventIndexState@tableIndex^(0+1280),w,c
 37745   015C68  EC48  F0A9         	call	_getEVs
 37746                           
 37747                           ;../canpan3Events.c: 396:     switchNo = evs[1];
 37748   015C6C  C672  F51D         	movff	_evs+1,APP_GetEventIndexState@switchNo
 37749                           
 37750                           ;../canpan3Events.c: 397:     if ((switchNo < 1) || (switchNo > (8*4))) {
 37751   015C70  501D               	movf	APP_GetEventIndexState@switchNo^(0+1280),w,c
 37752   015C72  B4D8               	btfsc	status,2,c
 37753   015C74  D7F6               	goto	u7190
 37754   015C76  0E20               	movlw	32
 37755   015C78  641D               	cpfsgt	APP_GetEventIndexState@switchNo^(0+1280),c
 37756   015C7A  D001               	goto	l9293
 37757   015C7C  D7F2               	goto	u7190
 37758   015C7E                     l9293:
 37759                           
 37760                           ;../canpan3Events.c: 401:     return outputState[switchNo-1] ? EVENT_ON : EVENT_OFF;
 37761   015C7E  0E40               	movlw	low (_outputState+65535)
 37762   015C80  241D               	addwf	APP_GetEventIndexState@switchNo^(0+1280),w,c
 37763   015C82  6ED9               	movwf	fsr2l,c
 37764   015C84  6ADA               	clrf	fsr2h,c
 37765   015C86  0E06               	movlw	high (_outputState+65535)
 37766   015C88  22DA               	addwfc	fsr2h,f,c
 37767   015C8A  50DF               	movf	indf2,w,c
 37768   015C8C  B4D8               	btfsc	status,2,c
 37769   015C8E  D002               	goto	u7220
 37770   015C90  0E01               	movlw	1
 37771   015C92  0012               	return	
 37772   015C94                     u7220:
 37773   015C94  0E00               	movlw	0
 37774   015C96  0012               	return		;funcret
 37775   015C98                     __end_of_APP_GetEventIndexState:
 37776                           	callstack 0
 37777                           
 37778 ;; *************** function _APP_isProducedEvent *****************
 37779 ;; Defined at:
 37780 ;;		line 163 in file "../canpan3Events.c"
 37781 ;; Parameters:    Size  Location     Type
 37782 ;;  tableIndex      1    wreg     unsigned char 
 37783 ;; Auto vars:     Size  Location     Type
 37784 ;;  tableIndex      1   24[COMRAM] unsigned char 
 37785 ;;  ev              2   25[COMRAM] short 
 37786 ;; Return value:  Size  Location     Type
 37787 ;;                  1    wreg      unsigned char 
 37788 ;; Registers used:
 37789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37790 ;; Tracked objects:
 37791 ;;		On entry : 0/0
 37792 ;;		On exit  : 0/0
 37793 ;;		Unchanged: 0/0
 37794 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37796 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37798 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37799 ;;Total ram usage:        3 bytes
 37800 ;; Hardware stack levels used: 1
 37801 ;; Hardware stack levels required when called: 4
 37802 ;; This function calls:
 37803 ;;		_getEv
 37804 ;; This function is called by:
 37805 ;;		_APP_preProcessMessage
 37806 ;;		_APP_GetEventIndexState
 37807 ;; This function uses a non-reentrant model
 37808 ;;
 37809                           
 37810                           	psect	text63
 37811   015E58                     __ptext63:
 37812                           	callstack 0
 37813   015E58                     _APP_isProducedEvent:
 37814                           	callstack 119
 37815                           
 37816                           ;incstack = 0
 37817                           ;APP_isProducedEvent@tableIndex stored from wreg
 37818   015E58  6E19               	movwf	APP_isProducedEvent@tableIndex^(0+1280),c
 37819                           
 37820                           ;../canpan3Events.c: 164:     int16_t ev;;../canpan3Events.c: 166:     ev = getEv(tableI
      +                          ndex, 1);
 37821   015E5A  0E01               	movlw	1
 37822   015E5C  6E0D               	movwf	getEv@evNum^(0+1280),c
 37823   015E5E  5019               	movf	APP_isProducedEvent@tableIndex^(0+1280),w,c
 37824   015E60  EC13  F0A9         	call	_getEv
 37825   015E64  C50D  F51A         	movff	?_getEv,APP_isProducedEvent@ev
 37826   015E68  C50E  F51B         	movff	?_getEv+1,APP_isProducedEvent@ev+1
 37827                           
 37828                           ;../canpan3Events.c: 167:     if ((ev > 0) && (ev <= ((8*4)+1))) {
 37829   015E6C  BE1B               	btfsc	(APP_isProducedEvent@ev+1)^(0+1280),7,c
 37830   015E6E  D00F               	goto	l8951
 37831   015E70  501B               	movf	(APP_isProducedEvent@ev+1)^(0+1280),w,c
 37832   015E72  E103               	bnz	u6670
 37833   015E74  041A               	decf	APP_isProducedEvent@ev^(0+1280),w,c
 37834   015E76  A0D8               	btfss	status,0,c
 37835   015E78  D00A               	goto	l8951
 37836   015E7A                     u6670:
 37837   015E7A  BE1B               	btfsc	(APP_isProducedEvent@ev+1)^(0+1280),7,c
 37838   015E7C  D006               	goto	u6680
 37839   015E7E  501B               	movf	(APP_isProducedEvent@ev+1)^(0+1280),w,c
 37840   015E80  E106               	bnz	l8951
 37841   015E82  0E22               	movlw	34
 37842   015E84  5C1A               	subwf	APP_isProducedEvent@ev^(0+1280),w,c
 37843   015E86  B0D8               	btfsc	status,0,c
 37844   015E88  D002               	goto	l8951
 37845   015E8A                     u6680:
 37846                           
 37847                           ;../canpan3Events.c: 168:         return 1;
 37848   015E8A  0E01               	movlw	1
 37849   015E8C  0012               	return	
 37850   015E8E                     l8951:
 37851                           
 37852                           ;../canpan3Events.c: 170:     return 0;
 37853   015E8E  0E00               	movlw	0
 37854   015E90  0012               	return		;funcret
 37855   015E92                     __end_of_APP_isProducedEvent:
 37856                           	callstack 0
 37857                           
 37858 ;; *************** function _setNV *****************
 37859 ;; Defined at:
 37860 ;;		line 218 in file "../../VLCBlib_PIC/nv.c"
 37861 ;; Parameters:    Size  Location     Type
 37862 ;;  index           1    wreg     unsigned char 
 37863 ;;  value           1   20[COMRAM] unsigned char 
 37864 ;; Auto vars:     Size  Location     Type
 37865 ;;  index           1   24[COMRAM] unsigned char 
 37866 ;;  oldValue        1   23[COMRAM] unsigned char 
 37867 ;; Return value:  Size  Location     Type
 37868 ;;                  1    wreg      unsigned char 
 37869 ;; Registers used:
 37870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37871 ;; Tracked objects:
 37872 ;;		On entry : 0/0
 37873 ;;		On exit  : 0/0
 37874 ;;		Unchanged: 0/0
 37875 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37876 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37877 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37879 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37880 ;;Total ram usage:        5 bytes
 37881 ;; Hardware stack levels used: 1
 37882 ;; Hardware stack levels required when called: 6
 37883 ;; This function calls:
 37884 ;;		_APP_nvValidate
 37885 ;;		_APP_nvValueChanged
 37886 ;;		_writeNVM
 37887 ;; This function is called by:
 37888 ;;		_nvProcessMessage
 37889 ;; This function uses a non-reentrant model
 37890 ;;
 37891                           
 37892                           	psect	text64
 37893   014EA6                     __ptext64:
 37894                           	callstack 0
 37895   014EA6                     _setNV:
 37896                           	callstack 118
 37897                           
 37898                           ;incstack = 0
 37899                           ;setNV@index stored from wreg
 37900   014EA6  6E19               	movwf	setNV@index^(0+1280),c
 37901                           
 37902                           ;../../VLCBlib_PIC/nv.c: 219:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 221:     if 
      +                          (index > 67) return CMDERR_INV_NV_IDX;
 37903   014EA8  0E43               	movlw	67
 37904   014EAA  6419               	cpfsgt	setNV@index^(0+1280),c
 37905   014EAC  D002               	goto	l9757
 37906   014EAE  0E0A               	movlw	10
 37907   014EB0  0012               	return	
 37908   014EB2                     l9757:
 37909                           
 37910                           ;../../VLCBlib_PIC/nv.c: 222:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 37911   014EB2  C515  F501         	movff	setNV@value,APP_nvValidate@value
 37912   014EB6  5019               	movf	setNV@index^(0+1280),w,c
 37913   014EB8  EC9F  F0B2         	call	_APP_nvValidate
 37914   014EBC  0900               	iorlw	0
 37915   014EBE  A4D8               	btfss	status,2,c
 37916   014EC0  D002               	goto	l9763
 37917   014EC2  0E0C               	movlw	12
 37918   014EC4  0012               	return	
 37919   014EC6                     l9763:
 37920                           
 37921                           ;../../VLCBlib_PIC/nv.c: 224:     oldValue = nvCache[index];
 37922   014EC6  0E00               	movlw	low _nvCache
 37923   014EC8  2419               	addwf	setNV@index^(0+1280),w,c
 37924   014ECA  6ED9               	movwf	fsr2l,c
 37925   014ECC  6ADA               	clrf	fsr2h,c
 37926   014ECE  0E07               	movlw	high _nvCache
 37927   014ED0  22DA               	addwfc	fsr2h,f,c
 37928   014ED2  50DF               	movf	indf2,w,c
 37929   014ED4  6E18               	movwf	setNV@oldValue^(0+1280),c
 37930                           
 37931                           ;../../VLCBlib_PIC/nv.c: 225:     nvCache[index] = value;
 37932   014ED6  0E00               	movlw	low _nvCache
 37933   014ED8  2419               	addwf	setNV@index^(0+1280),w,c
 37934   014EDA  6ED9               	movwf	fsr2l,c
 37935   014EDC  6ADA               	clrf	fsr2h,c
 37936   014EDE  0E07               	movlw	high _nvCache
 37937   014EE0  22DA               	addwfc	fsr2h,f,c
 37938   014EE2  C515  F4DF         	movff	setNV@value,indf2
 37939                           
 37940                           ;../../VLCBlib_PIC/nv.c: 226:     writeNVM(EEPROM_NVM_TYPE, 0x200 +index, value);
 37941   014EE6  0E00               	movlw	0
 37942   014EE8  2419               	addwf	setNV@index^(0+1280),w,c
 37943   014EEA  6E16               	movwf	??_setNV^(0+1280),c
 37944   014EEC  6A17               	clrf	(??_setNV+1)^(0+1280),c
 37945   014EEE  0E02               	movlw	2
 37946   014EF0  2217               	addwfc	(??_setNV+1)^(0+1280),f,c
 37947   014EF2  C516  F50E         	movff	??_setNV,writeNVM@index
 37948   014EF6  C517  F50F         	movff	??_setNV+1,writeNVM@index+1
 37949   014EFA  6A10               	clrf	(writeNVM@index+2)^(0+1280),c
 37950   014EFC  BE0F               	btfsc	(writeNVM@index+1)^(0+1280),7,c
 37951   014EFE  0610               	decf	(writeNVM@index+2)^(0+1280),f,c
 37952   014F00  C515  F511         	movff	setNV@value,writeNVM@value
 37953   014F04  0E00               	movlw	0
 37954   014F06  EC71  F0AD         	call	_writeNVM
 37955                           
 37956                           ;../../VLCBlib_PIC/nv.c: 231:     APP_nvValueChanged(index, value, oldValue);
 37957   014F0A  C515  F501         	movff	setNV@value,APP_nvValueChanged@value
 37958   014F0E  C518  F502         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 37959   014F12  5019               	movf	setNV@index^(0+1280),w,c
 37960   014F14  EC2B  F0B3         	call	_APP_nvValueChanged
 37961                           
 37962                           ;../../VLCBlib_PIC/nv.c: 232:     return 0;
 37963   014F18  0E00               	movlw	0
 37964   014F1A  0012               	return		;funcret
 37965   014F1C                     __end_of_setNV:
 37966                           	callstack 0
 37967                           
 37968 ;; *************** function _APP_nvValueChanged *****************
 37969 ;; Defined at:
 37970 ;;		line 79 in file "../canpan3Nv.c"
 37971 ;; Parameters:    Size  Location     Type
 37972 ;;  index           1    wreg     unsigned char 
 37973 ;;  value           1    0[COMRAM] unsigned char 
 37974 ;;  oldValue        1    1[COMRAM] unsigned char 
 37975 ;; Auto vars:     Size  Location     Type
 37976 ;;  index           1    0[COMRAM] unsigned char 
 37977 ;; Return value:  Size  Location     Type
 37978 ;;                  1    wreg      void 
 37979 ;; Registers used:
 37980 ;;		wreg
 37981 ;; Tracked objects:
 37982 ;;		On entry : 0/0
 37983 ;;		On exit  : 0/0
 37984 ;;		Unchanged: 0/0
 37985 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37986 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37989 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37990 ;;Total ram usage:        2 bytes
 37991 ;; Hardware stack levels used: 1
 37992 ;; Hardware stack levels required when called: 1
 37993 ;; This function calls:
 37994 ;;		Nothing
 37995 ;; This function is called by:
 37996 ;;		_setNV
 37997 ;; This function uses a non-reentrant model
 37998 ;;
 37999                           
 38000                           	psect	text65
 38001   016656                     __ptext65:
 38002                           	callstack 0
 38003   016656                     _APP_nvValueChanged:
 38004                           	callstack 122
 38005                           
 38006                           ;incstack = 0
 38007   016656  0012               	return		;funcret
 38008   016658                     __end_of_APP_nvValueChanged:
 38009                           	callstack 0
 38010                           
 38011 ;; *************** function _APP_nvValidate *****************
 38012 ;; Defined at:
 38013 ;;		line 69 in file "../canpan3Nv.c"
 38014 ;; Parameters:    Size  Location     Type
 38015 ;;  index           1    wreg     unsigned char 
 38016 ;;  value           1    0[COMRAM] unsigned char 
 38017 ;; Auto vars:     Size  Location     Type
 38018 ;;  index           1    1[COMRAM] unsigned char 
 38019 ;; Return value:  Size  Location     Type
 38020 ;;                  1    wreg      enum E23466
 38021 ;; Registers used:
 38022 ;;		wreg, status,2, status,0
 38023 ;; Tracked objects:
 38024 ;;		On entry : 0/0
 38025 ;;		On exit  : 0/0
 38026 ;;		Unchanged: 0/0
 38027 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38028 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38031 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38032 ;;Total ram usage:        2 bytes
 38033 ;; Hardware stack levels used: 1
 38034 ;; Hardware stack levels required when called: 1
 38035 ;; This function calls:
 38036 ;;		Nothing
 38037 ;; This function is called by:
 38038 ;;		_setNV
 38039 ;; This function uses a non-reentrant model
 38040 ;;
 38041                           
 38042                           	psect	text66
 38043   01653E                     __ptext66:
 38044                           	callstack 0
 38045   01653E                     _APP_nvValidate:
 38046                           	callstack 122
 38047                           
 38048                           ;incstack = 0
 38049                           ;APP_nvValidate@index stored from wreg
 38050   01653E  6E02               	movwf	APP_nvValidate@index^(0+1280),c
 38051                           
 38052                           ;../canpan3Nv.c: 70:     if ((index == 1) &&(value > 3)) {
 38053   016540  0402               	decf	APP_nvValidate@index^(0+1280),w,c
 38054   016542  A4D8               	btfss	status,2,c
 38055   016544  D005               	goto	l9007
 38056   016546  0E03               	movlw	3
 38057   016548  6401               	cpfsgt	APP_nvValidate@value^(0+1280),c
 38058   01654A  D002               	goto	l9007
 38059                           
 38060                           ;../canpan3Nv.c: 71:         return INVALID;
 38061   01654C  0E00               	movlw	0
 38062   01654E  0012               	return	
 38063   016550                     l9007:
 38064                           
 38065                           ;../canpan3Nv.c: 73:     return VALID;
 38066   016550  0E01               	movlw	1
 38067   016552  0012               	return		;funcret
 38068   016554                     __end_of_APP_nvValidate:
 38069                           	callstack 0
 38070                           
 38071 ;; *************** function _producerEsdData *****************
 38072 ;; Defined at:
 38073 ;;		line 178 in file "../../VLCBlib_PIC/event_producer_simple.c"
 38074 ;; Parameters:    Size  Location     Type
 38075 ;;  index           1    wreg     unsigned char 
 38076 ;; Auto vars:     Size  Location     Type
 38077 ;;  index           1    0[COMRAM] unsigned char 
 38078 ;; Return value:  Size  Location     Type
 38079 ;;                  1    wreg      unsigned char 
 38080 ;; Registers used:
 38081 ;;		wreg, status,2, status,0
 38082 ;; Tracked objects:
 38083 ;;		On entry : 0/0
 38084 ;;		On exit  : 0/0
 38085 ;;		Unchanged: 0/0
 38086 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38090 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38091 ;;Total ram usage:        1 bytes
 38092 ;; Hardware stack levels used: 1
 38093 ;; Hardware stack levels required when called: 1
 38094 ;; This function calls:
 38095 ;;		Nothing
 38096 ;; This function is called by:
 38097 ;;		_mnsProcessMessage
 38098 ;; This function uses a non-reentrant model
 38099 ;;
 38100                           
 38101                           	psect	text67
 38102   0164D2                     __ptext67:
 38103                           	callstack 0
 38104   0164D2                     _producerEsdData:
 38105                           	callstack 123
 38106                           
 38107                           ;incstack = 0
 38108                           ;producerEsdData@index stored from wreg
 38109   0164D2  6E01               	movwf	producerEsdData@index^(0+1280),c
 38110                           
 38111                           ;../../VLCBlib_PIC/event_producer_simple.c: 179:     switch (index){
 38112   0164D4  D004               	goto	l9813
 38113   0164D6                     l9799:
 38114                           
 38115                           ;../../VLCBlib_PIC/event_producer_simple.c: 181:             return PRODUCER_EV_HAPPENIN
      +                          G;
 38116   0164D6  0E01               	movlw	1
 38117   0164D8  0012               	return	
 38118   0164DA                     l9807:
 38119                           
 38120                           ;../../VLCBlib_PIC/event_producer_simple.c: 185:             return 0;
 38121   0164DA  0E00               	movlw	0
 38122   0164DC  0012               	return	
 38123   0164DE                     l9813:
 38124   0164DE  5001               	movf	producerEsdData@index^(0+1280),w,c
 38125                           
 38126                           ; Switch size 1, requested type "simple"
 38127                           ; Number of cases is 2, Range of values is 0 to 1
 38128                           ; switch strategies available:
 38129                           ; Name         Instructions Cycles
 38130                           ; simple_byte            7     4 (average)
 38131                           ;	Chosen strategy is simple_byte
 38132   0164E0  0A00               	xorlw	0	; case 0
 38133   0164E2  B4D8               	btfsc	status,2,c
 38134   0164E4  D7F8               	goto	l9799
 38135   0164E6  0A01               	xorlw	1	; case 1
 38136   0164E8  B4D8               	btfsc	status,2,c
 38137   0164EA  D7F5               	goto	l9799
 38138   0164EC  D7F6               	goto	l9807
 38139   0164EE                     __end_of_producerEsdData:
 38140                           	callstack 0
 38141                           
 38142 ;; *************** function _nvGetESDdata *****************
 38143 ;; Defined at:
 38144 ;;		line 354 in file "../../VLCBlib_PIC/nv.c"
 38145 ;; Parameters:    Size  Location     Type
 38146 ;;  id              1    wreg     unsigned char 
 38147 ;; Auto vars:     Size  Location     Type
 38148 ;;  id              1    0[COMRAM] unsigned char 
 38149 ;; Return value:  Size  Location     Type
 38150 ;;                  1    wreg      unsigned char 
 38151 ;; Registers used:
 38152 ;;		wreg, status,2, status,0
 38153 ;; Tracked objects:
 38154 ;;		On entry : 0/0
 38155 ;;		On exit  : 0/0
 38156 ;;		Unchanged: 0/0
 38157 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38161 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38162 ;;Total ram usage:        1 bytes
 38163 ;; Hardware stack levels used: 1
 38164 ;; Hardware stack levels required when called: 1
 38165 ;; This function calls:
 38166 ;;		Nothing
 38167 ;; This function is called by:
 38168 ;;		_mnsProcessMessage
 38169 ;; This function uses a non-reentrant model
 38170 ;;
 38171                           
 38172                           	psect	text68
 38173   016554                     __ptext68:
 38174                           	callstack 0
 38175   016554                     _nvGetESDdata:
 38176                           	callstack 123
 38177                           
 38178                           ;incstack = 0
 38179                           ;nvGetESDdata@id stored from wreg
 38180   016554  6E01               	movwf	nvGetESDdata@id^(0+1280),c
 38181                           
 38182                           ;../../VLCBlib_PIC/nv.c: 355:     switch (id) {
 38183   016556  D004               	goto	l9785
 38184   016558                     l9775:
 38185   016558  0E43               	movlw	67
 38186   01655A  0012               	return	
 38187   01655C                     l9779:
 38188   01655C  0E00               	movlw	0
 38189   01655E  0012               	return	
 38190   016560                     l9785:
 38191   016560  5001               	movf	nvGetESDdata@id^(0+1280),w,c
 38192                           
 38193                           ; Switch size 1, requested type "simple"
 38194                           ; Number of cases is 1, Range of values is 1 to 1
 38195                           ; switch strategies available:
 38196                           ; Name         Instructions Cycles
 38197                           ; simple_byte            4     3 (average)
 38198                           ;	Chosen strategy is simple_byte
 38199   016562  0A01               	xorlw	1	; case 1
 38200   016564  B4D8               	btfsc	status,2,c
 38201   016566  D7F8               	goto	l9775
 38202   016568  D7F9               	goto	l9779
 38203   01656A                     __end_of_nvGetESDdata:
 38204                           	callstack 0
 38205                           
 38206 ;; *************** function _consumerEsdData *****************
 38207 ;; Defined at:
 38208 ;;		line 232 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 38209 ;; Parameters:    Size  Location     Type
 38210 ;;  index           1    wreg     unsigned char 
 38211 ;; Auto vars:     Size  Location     Type
 38212 ;;  index           1    0[COMRAM] unsigned char 
 38213 ;; Return value:  Size  Location     Type
 38214 ;;                  1    wreg      unsigned char 
 38215 ;; Registers used:
 38216 ;;		wreg, status,2, status,0
 38217 ;; Tracked objects:
 38218 ;;		On entry : 0/0
 38219 ;;		On exit  : 0/0
 38220 ;;		Unchanged: 0/0
 38221 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38223 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38225 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38226 ;;Total ram usage:        1 bytes
 38227 ;; Hardware stack levels used: 1
 38228 ;; Hardware stack levels required when called: 1
 38229 ;; This function calls:
 38230 ;;		Nothing
 38231 ;; This function is called by:
 38232 ;;		_mnsProcessMessage
 38233 ;; This function uses a non-reentrant model
 38234 ;;
 38235                           
 38236                           	psect	text69
 38237   0165E8                     __ptext69:
 38238                           	callstack 0
 38239   0165E8                     _consumerEsdData:
 38240                           	callstack 123
 38241                           
 38242                           ;incstack = 0
 38243                           ;consumerEsdData@index stored from wreg
 38244   0165E8  6E01               	movwf	consumerEsdData@index^(0+1280),c
 38245                           
 38246                           ;../../VLCBlib_PIC/event_consumer_simple.c: 233:     switch (index){
 38247   0165EA  D002               	goto	l9389
 38248   0165EC                     l9379:
 38249                           
 38250                           ;../../VLCBlib_PIC/event_consumer_simple.c: 235:             return CONSUMER_EV_NOT_SPEC
      +                          IFIED;
 38251   0165EC  0E00               	movlw	0
 38252   0165EE  0012               	return	
 38253   0165F0                     l9389:
 38254   0165F0  5001               	movf	consumerEsdData@index^(0+1280),w,c
 38255                           
 38256                           ; Switch size 1, requested type "simple"
 38257                           ; Number of cases is 1, Range of values is 0 to 0
 38258                           ; switch strategies available:
 38259                           ; Name         Instructions Cycles
 38260                           ; simple_byte            4     3 (average)
 38261                           ;	Chosen strategy is simple_byte
 38262   0165F2  0A00               	xorlw	0	; case 0
 38263   0165F4  D7FB               	goto	l9379
 38264   0165F6                     __end_of_consumerEsdData:
 38265                           	callstack 0
 38266                           
 38267 ;; *************** function _canEsdData *****************
 38268 ;; Defined at:
 38269 ;;		line 466 in file "../../VLCBlib_PIC/can18_can_2.c"
 38270 ;; Parameters:    Size  Location     Type
 38271 ;;  id              1    wreg     unsigned char 
 38272 ;; Auto vars:     Size  Location     Type
 38273 ;;  id              1    0[COMRAM] unsigned char 
 38274 ;; Return value:  Size  Location     Type
 38275 ;;                  1    wreg      unsigned char 
 38276 ;; Registers used:
 38277 ;;		wreg, status,2, status,0
 38278 ;; Tracked objects:
 38279 ;;		On entry : 0/0
 38280 ;;		On exit  : 0/0
 38281 ;;		Unchanged: 0/0
 38282 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38286 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38287 ;;Total ram usage:        1 bytes
 38288 ;; Hardware stack levels used: 1
 38289 ;; Hardware stack levels required when called: 1
 38290 ;; This function calls:
 38291 ;;		Nothing
 38292 ;; This function is called by:
 38293 ;;		_mnsProcessMessage
 38294 ;; This function uses a non-reentrant model
 38295 ;;
 38296                           
 38297                           	psect	text70
 38298   01656A                     __ptext70:
 38299                           	callstack 0
 38300   01656A                     _canEsdData:
 38301                           	callstack 123
 38302                           
 38303                           ;incstack = 0
 38304                           ;canEsdData@id stored from wreg
 38305   01656A  6E01               	movwf	canEsdData@id^(0+1280),c
 38306                           
 38307                           ;../../VLCBlib_PIC/can18_can_2.c: 467:     switch(id) {
 38308   01656C  D004               	goto	l9319
 38309   01656E                     l9309:
 38310                           
 38311                           ;../../VLCBlib_PIC/can18_can_2.c: 469:             return CAN_HW_PIC_CAN_2_0;
 38312   01656E  0E02               	movlw	2
 38313   016570  0012               	return	
 38314   016572                     l9313:
 38315                           
 38316                           ;../../VLCBlib_PIC/can18_can_2.c: 471:             return 0;
 38317   016572  0E00               	movlw	0
 38318   016574  0012               	return	
 38319   016576                     l9319:
 38320   016576  5001               	movf	canEsdData@id^(0+1280),w,c
 38321                           
 38322                           ; Switch size 1, requested type "simple"
 38323                           ; Number of cases is 1, Range of values is 1 to 1
 38324                           ; switch strategies available:
 38325                           ; Name         Instructions Cycles
 38326                           ; simple_byte            4     3 (average)
 38327                           ;	Chosen strategy is simple_byte
 38328   016578  0A01               	xorlw	1	; case 1
 38329   01657A  B4D8               	btfsc	status,2,c
 38330   01657C  D7F8               	goto	l9309
 38331   01657E  D7F9               	goto	l9313
 38332   016580                     __end_of_canEsdData:
 38333                           	callstack 0
 38334                           
 38335 ;; *************** function _bootEsdData *****************
 38336 ;; Defined at:
 38337 ;;		line 257 in file "../../VLCBlib_PIC/boot.c"
 38338 ;; Parameters:    Size  Location     Type
 38339 ;;  id              1    wreg     unsigned char 
 38340 ;; Auto vars:     Size  Location     Type
 38341 ;;  id              1    0[COMRAM] unsigned char 
 38342 ;; Return value:  Size  Location     Type
 38343 ;;                  1    wreg      unsigned char 
 38344 ;; Registers used:
 38345 ;;		wreg, status,2, status,0
 38346 ;; Tracked objects:
 38347 ;;		On entry : 0/0
 38348 ;;		On exit  : 0/0
 38349 ;;		Unchanged: 0/0
 38350 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38354 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38355 ;;Total ram usage:        1 bytes
 38356 ;; Hardware stack levels used: 1
 38357 ;; Hardware stack levels required when called: 1
 38358 ;; This function calls:
 38359 ;;		Nothing
 38360 ;; This function is called by:
 38361 ;;		_mnsProcessMessage
 38362 ;; This function uses a non-reentrant model
 38363 ;;
 38364                           
 38365                           	psect	text71
 38366   01635C                     __ptext71:
 38367                           	callstack 0
 38368   01635C                     _bootEsdData:
 38369                           	callstack 123
 38370                           
 38371                           ;incstack = 0
 38372                           ;bootEsdData@id stored from wreg
 38373   01635C  6E01               	movwf	bootEsdData@id^(0+1280),c
 38374                           
 38375                           ;../../VLCBlib_PIC/boot.c: 258:     switch (id) {
 38376   01635E  D008               	goto	l9305
 38377   016360                     l599:
 38378                           
 38379                           ;../../VLCBlib_PIC/boot.c: 261:             return bootloaderType;
 38380   016360  0105               	movlb	5	; () banked
 38381   016362  5197               	movf	_bootloaderType& (0+255),w,b
 38382   016364  0012               	return	
 38383   016366                     l601:
 38384                           
 38385                           ;../../VLCBlib_PIC/boot.c: 264:             return bootloaderVersion;
 38386   016366  0105               	movlb	5	; () banked
 38387   016368  5196               	movf	_bootloaderVersion& (0+255),w,b
 38388   01636A  0012               	return	
 38389   01636C                     l9299:
 38390                           
 38391                           ;../../VLCBlib_PIC/boot.c: 266:             return 0;
 38392   01636C  0E00               	movlw	0
 38393   01636E  0012               	return	
 38394   016370                     l9305:
 38395   016370  5001               	movf	bootEsdData@id^(0+1280),w,c
 38396                           
 38397                           ; Switch size 1, requested type "simple"
 38398                           ; Number of cases is 2, Range of values is 1 to 2
 38399                           ; switch strategies available:
 38400                           ; Name         Instructions Cycles
 38401                           ; simple_byte            7     4 (average)
 38402                           ;	Chosen strategy is simple_byte
 38403   016372  0A01               	xorlw	1	; case 1
 38404   016374  B4D8               	btfsc	status,2,c
 38405   016376  D7F4               	goto	l599
 38406   016378  0A03               	xorlw	3	; case 2
 38407   01637A  B4D8               	btfsc	status,2,c
 38408   01637C  D7F4               	goto	l601
 38409   01637E  D7F6               	goto	l9299
 38410   016380                     __end_of_bootEsdData:
 38411                           	callstack 0
 38412                           
 38413 ;; *************** function _teachGetESDdata *****************
 38414 ;; Defined at:
 38415 ;;		line 367 in file "../../VLCBlib_PIC/event_teach_simple.c"
 38416 ;; Parameters:    Size  Location     Type
 38417 ;;  id              1    wreg     unsigned char 
 38418 ;; Auto vars:     Size  Location     Type
 38419 ;;  id              1    0[COMRAM] unsigned char 
 38420 ;; Return value:  Size  Location     Type
 38421 ;;                  1    wreg      unsigned char 
 38422 ;; Registers used:
 38423 ;;		wreg, status,2, status,0
 38424 ;; Tracked objects:
 38425 ;;		On entry : 0/0
 38426 ;;		On exit  : 0/0
 38427 ;;		Unchanged: 0/0
 38428 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38432 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38433 ;;Total ram usage:        1 bytes
 38434 ;; Hardware stack levels used: 1
 38435 ;; Hardware stack levels required when called: 1
 38436 ;; This function calls:
 38437 ;;		Nothing
 38438 ;; This function is called by:
 38439 ;;		_mnsProcessMessage
 38440 ;; This function uses a non-reentrant model
 38441 ;;
 38442                           
 38443                           	psect	text72
 38444   016456                     __ptext72:
 38445                           	callstack 0
 38446   016456                     _teachGetESDdata:
 38447                           	callstack 123
 38448                           
 38449                           ;incstack = 0
 38450                           ;teachGetESDdata@id stored from wreg
 38451   016456  6E01               	movwf	teachGetESDdata@id^(0+1280),c
 38452                           
 38453                           ;../../VLCBlib_PIC/event_teach_simple.c: 368:     switch (id) {
 38454   016458  D006               	goto	l9583
 38455   01645A                     l9569:
 38456   01645A  0EFE               	movlw	254
 38457   01645C  0012               	return	
 38458   01645E                     l9573:
 38459   01645E  0E0D               	movlw	13
 38460   016460  0012               	return	
 38461   016462                     l9577:
 38462   016462  0E00               	movlw	0
 38463   016464  0012               	return	
 38464   016466                     l9583:
 38465   016466  5001               	movf	teachGetESDdata@id^(0+1280),w,c
 38466                           
 38467                           ; Switch size 1, requested type "simple"
 38468                           ; Number of cases is 2, Range of values is 1 to 2
 38469                           ; switch strategies available:
 38470                           ; Name         Instructions Cycles
 38471                           ; simple_byte            7     4 (average)
 38472                           ;	Chosen strategy is simple_byte
 38473   016468  0A01               	xorlw	1	; case 1
 38474   01646A  B4D8               	btfsc	status,2,c
 38475   01646C  D7F6               	goto	l9569
 38476   01646E  0A03               	xorlw	3	; case 2
 38477   016470  B4D8               	btfsc	status,2,c
 38478   016472  D7F5               	goto	l9573
 38479   016474  D7F6               	goto	l9577
 38480   016476                     __end_of_teachGetESDdata:
 38481                           	callstack 0
 38482                           
 38483 ;; *************** function _producerGetDiagnostic *****************
 38484 ;; Defined at:
 38485 ;;		line 157 in file "../../VLCBlib_PIC/event_producer_simple.c"
 38486 ;; Parameters:    Size  Location     Type
 38487 ;;  index           1    wreg     unsigned char 
 38488 ;; Auto vars:     Size  Location     Type
 38489 ;;  index           1    9[COMRAM] unsigned char 
 38490 ;; Return value:  Size  Location     Type
 38491 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 38492 ;; Registers used:
 38493 ;;		wreg, status,2, status,0, prodl, prodh
 38494 ;; Tracked objects:
 38495 ;;		On entry : 0/0
 38496 ;;		On exit  : 0/0
 38497 ;;		Unchanged: 0/0
 38498 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38499 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38502 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38503 ;;Total ram usage:        4 bytes
 38504 ;; Hardware stack levels used: 1
 38505 ;; Hardware stack levels required when called: 1
 38506 ;; This function calls:
 38507 ;;		Nothing
 38508 ;; This function is called by:
 38509 ;;		_mnsProcessMessage
 38510 ;;		_mnsTRallDiagnosticsCallback
 38511 ;; This function uses a non-reentrant model
 38512 ;;
 38513                           
 38514                           	psect	text73
 38515   016380                     __ptext73:
 38516                           	callstack 0
 38517   016380                     _producerGetDiagnostic:
 38518                           	callstack 122
 38519                           
 38520                           ;incstack = 0
 38521                           ;producerGetDiagnostic@index stored from wreg
 38522   016380  6E0A               	movwf	producerGetDiagnostic@index^(0+1280),c
 38523                           
 38524                           ;../../VLCBlib_PIC/event_producer_simple.c: 158:     if (index > 1) {
 38525   016382  0E01               	movlw	1
 38526   016384  640A               	cpfsgt	producerGetDiagnostic@index^(0+1280),c
 38527   016386  D005               	goto	l9793
 38528                           
 38529                           ;../../VLCBlib_PIC/event_producer_simple.c: 159:         return ((void*)0);
 38530   016388  0E00               	movlw	0
 38531   01638A  6E07               	movwf	?_producerGetDiagnostic^(0+1280),c
 38532   01638C  0E00               	movlw	0
 38533   01638E  6E08               	movwf	(?_producerGetDiagnostic+1)^(0+1280),c
 38534   016390  0012               	return	
 38535   016392                     l9793:
 38536                           
 38537                           ;../../VLCBlib_PIC/event_producer_simple.c: 161:     return &(producerDiagnostics[index]
      +                          );
 38538   016392  500A               	movf	producerGetDiagnostic@index^(0+1280),w,c
 38539   016394  0D02               	mullw	2
 38540   016396  0EC1               	movlw	low _producerDiagnostics
 38541   016398  24F3               	addwf	243,w,c
 38542   01639A  6E07               	movwf	?_producerGetDiagnostic^(0+1280),c
 38543   01639C  0E05               	movlw	high _producerDiagnostics
 38544   01639E  20F4               	addwfc	prodh,w,c
 38545   0163A0  6E08               	movwf	(?_producerGetDiagnostic+1)^(0+1280),c
 38546   0163A2  0012               	return		;funcret
 38547   0163A4                     __end_of_producerGetDiagnostic:
 38548                           	callstack 0
 38549                           
 38550 ;; *************** function _nvGetDiagnostic *****************
 38551 ;; Defined at:
 38552 ;;		line 150 in file "../../VLCBlib_PIC/nv.c"
 38553 ;; Parameters:    Size  Location     Type
 38554 ;;  index           1    wreg     unsigned char 
 38555 ;; Auto vars:     Size  Location     Type
 38556 ;;  index           1    9[COMRAM] unsigned char 
 38557 ;; Return value:  Size  Location     Type
 38558 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 38559 ;; Registers used:
 38560 ;;		wreg, status,2, status,0, prodl, prodh
 38561 ;; Tracked objects:
 38562 ;;		On entry : 0/0
 38563 ;;		On exit  : 0/0
 38564 ;;		Unchanged: 0/0
 38565 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38566 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38569 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38570 ;;Total ram usage:        4 bytes
 38571 ;; Hardware stack levels used: 1
 38572 ;; Hardware stack levels required when called: 1
 38573 ;; This function calls:
 38574 ;;		Nothing
 38575 ;; This function is called by:
 38576 ;;		_mnsProcessMessage
 38577 ;;		_mnsTRallDiagnosticsCallback
 38578 ;; This function uses a non-reentrant model
 38579 ;;
 38580                           
 38581                           	psect	text74
 38582   0163A4                     __ptext74:
 38583                           	callstack 0
 38584   0163A4                     _nvGetDiagnostic:
 38585                           	callstack 122
 38586                           
 38587                           ;incstack = 0
 38588                           ;nvGetDiagnostic@index stored from wreg
 38589   0163A4  6E0A               	movwf	nvGetDiagnostic@index^(0+1280),c
 38590                           
 38591                           ;../../VLCBlib_PIC/nv.c: 151:     if (index > 2) {
 38592   0163A6  0E02               	movlw	2
 38593   0163A8  640A               	cpfsgt	nvGetDiagnostic@index^(0+1280),c
 38594   0163AA  D005               	goto	l9747
 38595                           
 38596                           ;../../VLCBlib_PIC/nv.c: 152:         return ((void*)0);
 38597   0163AC  0E00               	movlw	0
 38598   0163AE  6E07               	movwf	?_nvGetDiagnostic^(0+1280),c
 38599   0163B0  0E00               	movlw	0
 38600   0163B2  6E08               	movwf	(?_nvGetDiagnostic+1)^(0+1280),c
 38601   0163B4  0012               	return	
 38602   0163B6                     l9747:
 38603                           
 38604                           ;../../VLCBlib_PIC/nv.c: 154:     return &(nvDiagnostics[index]);
 38605   0163B6  500A               	movf	nvGetDiagnostic@index^(0+1280),w,c
 38606   0163B8  0D02               	mullw	2
 38607   0163BA  0EB0               	movlw	low _nvDiagnostics
 38608   0163BC  24F3               	addwf	243,w,c
 38609   0163BE  6E07               	movwf	?_nvGetDiagnostic^(0+1280),c
 38610   0163C0  0E05               	movlw	high _nvDiagnostics
 38611   0163C2  20F4               	addwfc	prodh,w,c
 38612   0163C4  6E08               	movwf	(?_nvGetDiagnostic+1)^(0+1280),c
 38613   0163C6  0012               	return		;funcret
 38614   0163C8                     __end_of_nvGetDiagnostic:
 38615                           	callstack 0
 38616                           
 38617 ;; *************** function _mnsGetDiagnostic *****************
 38618 ;; Defined at:
 38619 ;;		line 805 in file "../../VLCBlib_PIC/mns.c"
 38620 ;; Parameters:    Size  Location     Type
 38621 ;;  index           1    wreg     unsigned char 
 38622 ;; Auto vars:     Size  Location     Type
 38623 ;;  index           1    9[COMRAM] unsigned char 
 38624 ;; Return value:  Size  Location     Type
 38625 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 38626 ;; Registers used:
 38627 ;;		wreg, status,2, status,0, prodl, prodh
 38628 ;; Tracked objects:
 38629 ;;		On entry : 0/0
 38630 ;;		On exit  : 0/0
 38631 ;;		Unchanged: 0/0
 38632 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38633 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38636 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38637 ;;Total ram usage:        4 bytes
 38638 ;; Hardware stack levels used: 1
 38639 ;; Hardware stack levels required when called: 1
 38640 ;; This function calls:
 38641 ;;		Nothing
 38642 ;; This function is called by:
 38643 ;;		_mnsProcessMessage
 38644 ;;		_mnsTRallDiagnosticsCallback
 38645 ;; This function uses a non-reentrant model
 38646 ;;
 38647                           
 38648                           	psect	text75
 38649   0163C8                     __ptext75:
 38650                           	callstack 0
 38651   0163C8                     _mnsGetDiagnostic:
 38652                           	callstack 122
 38653                           
 38654                           ;incstack = 0
 38655                           ;mnsGetDiagnostic@index stored from wreg
 38656   0163C8  6E0A               	movwf	mnsGetDiagnostic@index^(0+1280),c
 38657                           
 38658                           ;../../VLCBlib_PIC/mns.c: 806:     if (index > 6) {
 38659   0163CA  0E06               	movlw	6
 38660   0163CC  640A               	cpfsgt	mnsGetDiagnostic@index^(0+1280),c
 38661   0163CE  D005               	goto	l9737
 38662                           
 38663                           ;../../VLCBlib_PIC/mns.c: 807:         return ((void*)0);
 38664   0163D0  0E00               	movlw	0
 38665   0163D2  6E07               	movwf	?_mnsGetDiagnostic^(0+1280),c
 38666   0163D4  0E00               	movlw	0
 38667   0163D6  6E08               	movwf	(?_mnsGetDiagnostic+1)^(0+1280),c
 38668   0163D8  0012               	return	
 38669   0163DA                     l9737:
 38670                           
 38671                           ;../../VLCBlib_PIC/mns.c: 809:     return &(mnsDiagnostics[index]);
 38672   0163DA  500A               	movf	mnsGetDiagnostic@index^(0+1280),w,c
 38673   0163DC  0D02               	mullw	2
 38674   0163DE  0EA2               	movlw	low _mnsDiagnostics
 38675   0163E0  24F3               	addwf	243,w,c
 38676   0163E2  6E07               	movwf	?_mnsGetDiagnostic^(0+1280),c
 38677   0163E4  0E05               	movlw	high _mnsDiagnostics
 38678   0163E6  20F4               	addwfc	prodh,w,c
 38679   0163E8  6E08               	movwf	(?_mnsGetDiagnostic+1)^(0+1280),c
 38680   0163EA  0012               	return		;funcret
 38681   0163EC                     __end_of_mnsGetDiagnostic:
 38682                           	callstack 0
 38683                           
 38684 ;; *************** function _consumerGetDiagnostic *****************
 38685 ;; Defined at:
 38686 ;;		line 218 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 38687 ;; Parameters:    Size  Location     Type
 38688 ;;  index           1    wreg     unsigned char 
 38689 ;; Auto vars:     Size  Location     Type
 38690 ;;  index           1    9[COMRAM] unsigned char 
 38691 ;; Return value:  Size  Location     Type
 38692 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 38693 ;; Registers used:
 38694 ;;		wreg, status,2, status,0, prodl, prodh
 38695 ;; Tracked objects:
 38696 ;;		On entry : 0/0
 38697 ;;		On exit  : 0/0
 38698 ;;		Unchanged: 0/0
 38699 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38700 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38703 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38704 ;;Total ram usage:        4 bytes
 38705 ;; Hardware stack levels used: 1
 38706 ;; Hardware stack levels required when called: 1
 38707 ;; This function calls:
 38708 ;;		Nothing
 38709 ;; This function is called by:
 38710 ;;		_mnsProcessMessage
 38711 ;;		_mnsTRallDiagnosticsCallback
 38712 ;; This function uses a non-reentrant model
 38713 ;;
 38714                           
 38715                           	psect	text76
 38716   0163EC                     __ptext76:
 38717                           	callstack 0
 38718   0163EC                     _consumerGetDiagnostic:
 38719                           	callstack 122
 38720                           
 38721                           ;incstack = 0
 38722                           ;consumerGetDiagnostic@index stored from wreg
 38723   0163EC  6E0A               	movwf	consumerGetDiagnostic@index^(0+1280),c
 38724                           
 38725                           ;../../VLCBlib_PIC/event_consumer_simple.c: 219:     if (index > 2) {
 38726   0163EE  0E02               	movlw	2
 38727   0163F0  640A               	cpfsgt	consumerGetDiagnostic@index^(0+1280),c
 38728   0163F2  D005               	goto	l9373
 38729                           
 38730                           ;../../VLCBlib_PIC/event_consumer_simple.c: 220:         return ((void*)0);
 38731   0163F4  0E00               	movlw	0
 38732   0163F6  6E07               	movwf	?_consumerGetDiagnostic^(0+1280),c
 38733   0163F8  0E00               	movlw	0
 38734   0163FA  6E08               	movwf	(?_consumerGetDiagnostic+1)^(0+1280),c
 38735   0163FC  0012               	return	
 38736   0163FE                     l9373:
 38737                           
 38738                           ;../../VLCBlib_PIC/event_consumer_simple.c: 222:     return &(consumerDiagnostics[index]
      +                          );
 38739   0163FE  500A               	movf	consumerGetDiagnostic@index^(0+1280),w,c
 38740   016400  0D02               	mullw	2
 38741   016402  0EB6               	movlw	low _consumerDiagnostics
 38742   016404  24F3               	addwf	243,w,c
 38743   016406  6E07               	movwf	?_consumerGetDiagnostic^(0+1280),c
 38744   016408  0E05               	movlw	high _consumerDiagnostics
 38745   01640A  20F4               	addwfc	prodh,w,c
 38746   01640C  6E08               	movwf	(?_consumerGetDiagnostic+1)^(0+1280),c
 38747   01640E  0012               	return		;funcret
 38748   016410                     __end_of_consumerGetDiagnostic:
 38749                           	callstack 0
 38750                           
 38751 ;; *************** function _canGetDiagnostic *****************
 38752 ;; Defined at:
 38753 ;;		line 498 in file "../../VLCBlib_PIC/can18_can_2.c"
 38754 ;; Parameters:    Size  Location     Type
 38755 ;;  index           1    wreg     unsigned char 
 38756 ;; Auto vars:     Size  Location     Type
 38757 ;;  index           1   10[COMRAM] unsigned char 
 38758 ;;  i16             2    0        short 
 38759 ;; Return value:  Size  Location     Type
 38760 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 38761 ;; Registers used:
 38762 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 38763 ;; Tracked objects:
 38764 ;;		On entry : 0/0
 38765 ;;		On exit  : 0/0
 38766 ;;		Unchanged: 0/0
 38767 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38768 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38770 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38771 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38772 ;;Total ram usage:        5 bytes
 38773 ;; Hardware stack levels used: 1
 38774 ;; Hardware stack levels required when called: 2
 38775 ;; This function calls:
 38776 ;;		_getNumRxBuffersInUse
 38777 ;;		_getNumTxBuffersInUse
 38778 ;; This function is called by:
 38779 ;;		_mnsProcessMessage
 38780 ;;		_mnsTRallDiagnosticsCallback
 38781 ;; This function uses a non-reentrant model
 38782 ;;
 38783                           
 38784                           	psect	text77
 38785   014A30                     __ptext77:
 38786                           	callstack 0
 38787   014A30                     _canGetDiagnostic:
 38788                           	callstack 121
 38789                           
 38790                           ;incstack = 0
 38791                           ;canGetDiagnostic@index stored from wreg
 38792   014A30  6E0B               	movwf	canGetDiagnostic@index^(0+1280),c
 38793                           
 38794                           ;../../VLCBlib_PIC/can18_can_2.c: 499:     int16_t i16;;../../VLCBlib_PIC/can18_can_2.c:
      +                           501:     if (index > 18) {
 38795   014A32  0E12               	movlw	18
 38796   014A34  640B               	cpfsgt	canGetDiagnostic@index^(0+1280),c
 38797   014A36  D024               	goto	l9333
 38798                           
 38799                           ;../../VLCBlib_PIC/can18_can_2.c: 502:         return ((void*)0);
 38800   014A38  0E00               	movlw	0
 38801   014A3A  6E07               	movwf	?_canGetDiagnostic^(0+1280),c
 38802   014A3C  0E00               	movlw	0
 38803   014A3E  6E08               	movwf	(?_canGetDiagnostic+1)^(0+1280),c
 38804   014A40  0012               	return	
 38805   014A42                     l891:
 38806                           
 38807                           ;../../VLCBlib_PIC/can18_can_2.c: 506:             canDiagnostics[0x03].asUint = C1TRECU
      +                          ;
 38808   014A42  C136 F6A8          	movff	310,_canDiagnostics+6	;volatile
 38809   014A46  0106               	movlb	6	; () banked
 38810   014A48  6BA9               	clrf	(_canDiagnostics+7)& (0+255),b
 38811                           
 38812                           ;../../VLCBlib_PIC/can18_can_2.c: 507:             break;
 38813   014A4A  D02A               	goto	l9335
 38814   014A4C                     l9327:
 38815                           
 38816                           ;../../VLCBlib_PIC/can18_can_2.c: 509:             canDiagnostics[0x04].asUint = getNumT
      +                          xBuffersInUse();
 38817   014A4C  ECE3  F0AA         	call	_getNumTxBuffersInUse	;wreg free
 38818   014A50  6E0A               	movwf	??_canGetDiagnostic^(0+1280),c
 38819   014A52  500A               	movf	??_canGetDiagnostic^(0+1280),w,c
 38820   014A54  0106               	movlb	6	; () banked
 38821   014A56  6FAA               	movwf	(_canDiagnostics+8)& (0+255),b
 38822   014A58  6BAB               	clrf	(_canDiagnostics+9)& (0+255),b
 38823                           
 38824                           ;../../VLCBlib_PIC/can18_can_2.c: 510:             break;
 38825   014A5A  D022               	goto	l9335
 38826   014A5C                     l9329:
 38827                           
 38828                           ;../../VLCBlib_PIC/can18_can_2.c: 512:             canDiagnostics[0x07].asUint = getNumR
      +                          xBuffersInUse();
 38829   014A5C  EC9F  F0AB         	call	_getNumRxBuffersInUse	;wreg free
 38830   014A60  6E0A               	movwf	??_canGetDiagnostic^(0+1280),c
 38831   014A62  500A               	movf	??_canGetDiagnostic^(0+1280),w,c
 38832   014A64  0106               	movlb	6	; () banked
 38833   014A66  6FB0               	movwf	(_canDiagnostics+14)& (0+255),b
 38834   014A68  6BB1               	clrf	(_canDiagnostics+15)& (0+255),b
 38835                           
 38836                           ;../../VLCBlib_PIC/can18_can_2.c: 513:             break;
 38837   014A6A  D01A               	goto	l9335
 38838   014A6C                     l895:
 38839                           
 38840                           ;../../VLCBlib_PIC/can18_can_2.c: 515:             canDiagnostics[0x02].asUint = C1BDIAG
      +                          0Hbits.NTERRCNT;
 38841   014A6C  C139 F6A6          	movff	313,_canDiagnostics+4	;volatile
 38842   014A70  0106               	movlb	6	; () banked
 38843   014A72  6BA7               	clrf	(_canDiagnostics+5)& (0+255),b
 38844                           
 38845                           ;../../VLCBlib_PIC/can18_can_2.c: 516:             break;
 38846   014A74  D015               	goto	l9335
 38847   014A76                     l896:
 38848                           
 38849                           ;../../VLCBlib_PIC/can18_can_2.c: 518:             canDiagnostics[0x01].asUint = C1BDIAG
      +                          0Lbits.NRERRCNT;
 38850   014A76  C138 F6A4          	movff	312,_canDiagnostics+2	;volatile
 38851   014A7A  0106               	movlb	6	; () banked
 38852   014A7C  6BA5               	clrf	(_canDiagnostics+3)& (0+255),b
 38853                           
 38854                           ;../../VLCBlib_PIC/can18_can_2.c: 519:             break;
 38855   014A7E  D010               	goto	l9335
 38856   014A80                     l9333:
 38857   014A80  500B               	movf	canGetDiagnostic@index^(0+1280),w,c
 38858                           
 38859                           ; Switch size 1, requested type "simple"
 38860                           ; Number of cases is 5, Range of values is 1 to 7
 38861                           ; switch strategies available:
 38862                           ; Name         Instructions Cycles
 38863                           ; simple_byte           16     9 (average)
 38864                           ;	Chosen strategy is simple_byte
 38865   014A82  0A01               	xorlw	1	; case 1
 38866   014A84  B4D8               	btfsc	status,2,c
 38867   014A86  D7F7               	goto	l896
 38868   014A88  0A03               	xorlw	3	; case 2
 38869   014A8A  B4D8               	btfsc	status,2,c
 38870   014A8C  D7EF               	goto	l895
 38871   014A8E  0A01               	xorlw	1	; case 3
 38872   014A90  B4D8               	btfsc	status,2,c
 38873   014A92  D7D7               	goto	l891
 38874   014A94  0A07               	xorlw	7	; case 4
 38875   014A96  B4D8               	btfsc	status,2,c
 38876   014A98  D7D9               	goto	l9327
 38877   014A9A  0A03               	xorlw	3	; case 7
 38878   014A9C  B4D8               	btfsc	status,2,c
 38879   014A9E  D7DE               	goto	l9329
 38880   014AA0                     l9335:
 38881                           
 38882                           ;../../VLCBlib_PIC/can18_can_2.c: 522:     return &(canDiagnostics[index]);
 38883   014AA0  500B               	movf	canGetDiagnostic@index^(0+1280),w,c
 38884   014AA2  0D02               	mullw	2
 38885   014AA4  0EA2               	movlw	low _canDiagnostics
 38886   014AA6  24F3               	addwf	243,w,c
 38887   014AA8  6E07               	movwf	?_canGetDiagnostic^(0+1280),c
 38888   014AAA  0E06               	movlw	high _canDiagnostics
 38889   014AAC  20F4               	addwfc	prodh,w,c
 38890   014AAE  6E08               	movwf	(?_canGetDiagnostic+1)^(0+1280),c
 38891   014AB0  0012               	return		;funcret
 38892   014AB2                     __end_of_canGetDiagnostic:
 38893                           	callstack 0
 38894                           
 38895 ;; *************** function _teachGetDiagnostic *****************
 38896 ;; Defined at:
 38897 ;;		line 382 in file "../../VLCBlib_PIC/event_teach_simple.c"
 38898 ;; Parameters:    Size  Location     Type
 38899 ;;  index           1    wreg     unsigned char 
 38900 ;; Auto vars:     Size  Location     Type
 38901 ;;  index           1    9[COMRAM] unsigned char 
 38902 ;; Return value:  Size  Location     Type
 38903 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 38904 ;; Registers used:
 38905 ;;		wreg, status,2, status,0, prodl, prodh
 38906 ;; Tracked objects:
 38907 ;;		On entry : 0/0
 38908 ;;		On exit  : 0/0
 38909 ;;		Unchanged: 0/0
 38910 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38911 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38912 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38914 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38915 ;;Total ram usage:        4 bytes
 38916 ;; Hardware stack levels used: 1
 38917 ;; Hardware stack levels required when called: 1
 38918 ;; This function calls:
 38919 ;;		Nothing
 38920 ;; This function is called by:
 38921 ;;		_mnsProcessMessage
 38922 ;;		_mnsTRallDiagnosticsCallback
 38923 ;; This function uses a non-reentrant model
 38924 ;;
 38925                           
 38926                           	psect	text78
 38927   016410                     __ptext78:
 38928                           	callstack 0
 38929   016410                     _teachGetDiagnostic:
 38930                           	callstack 122
 38931                           
 38932                           ;incstack = 0
 38933                           ;teachGetDiagnostic@index stored from wreg
 38934   016410  6E0A               	movwf	teachGetDiagnostic@index^(0+1280),c
 38935                           
 38936                           ;../../VLCBlib_PIC/event_teach_simple.c: 383:     if (index > 1) {
 38937   016412  0E01               	movlw	1
 38938   016414  640A               	cpfsgt	teachGetDiagnostic@index^(0+1280),c
 38939   016416  D005               	goto	l9591
 38940                           
 38941                           ;../../VLCBlib_PIC/event_teach_simple.c: 384:         return ((void*)0);
 38942   016418  0E00               	movlw	0
 38943   01641A  6E07               	movwf	?_teachGetDiagnostic^(0+1280),c
 38944   01641C  0E00               	movlw	0
 38945   01641E  6E08               	movwf	(?_teachGetDiagnostic+1)^(0+1280),c
 38946   016420  0012               	return	
 38947   016422                     l9591:
 38948                           
 38949                           ;../../VLCBlib_PIC/event_teach_simple.c: 386:     return &(teachDiagnostics[index]);
 38950   016422  500A               	movf	teachGetDiagnostic@index^(0+1280),w,c
 38951   016424  0D02               	mullw	2
 38952   016426  0EC5               	movlw	low _teachDiagnostics
 38953   016428  24F3               	addwf	243,w,c
 38954   01642A  6E07               	movwf	?_teachGetDiagnostic^(0+1280),c
 38955   01642C  0E05               	movlw	high _teachDiagnostics
 38956   01642E  20F4               	addwfc	prodh,w,c
 38957   016430  6E08               	movwf	(?_teachGetDiagnostic+1)^(0+1280),c
 38958   016432  0012               	return		;funcret
 38959   016434                     __end_of_teachGetDiagnostic:
 38960                           	callstack 0
 38961                           
 38962 ;; *************** function _setLEDsByMode *****************
 38963 ;; Defined at:
 38964 ;;		line 816 in file "../../VLCBlib_PIC/mns.c"
 38965 ;; Parameters:    Size  Location     Type
 38966 ;;		None
 38967 ;; Auto vars:     Size  Location     Type
 38968 ;;		None
 38969 ;; Return value:  Size  Location     Type
 38970 ;;                  1    wreg      void 
 38971 ;; Registers used:
 38972 ;;		wreg, status,2, status,0, cstack
 38973 ;; Tracked objects:
 38974 ;;		On entry : 0/0
 38975 ;;		On exit  : 0/0
 38976 ;;		Unchanged: 0/0
 38977 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38982 ;;Total ram usage:        0 bytes
 38983 ;; Hardware stack levels used: 1
 38984 ;; Hardware stack levels required when called: 2
 38985 ;; This function calls:
 38986 ;;		_showStatus
 38987 ;; This function is called by:
 38988 ;;		_mnsPowerUp
 38989 ;;		_mnsProcessMessage
 38990 ;;		_mnsPoll
 38991 ;; This function uses a non-reentrant model
 38992 ;;
 38993                           
 38994                           	psect	text79
 38995   016080                     __ptext79:
 38996                           	callstack 0
 38997   016080                     _setLEDsByMode:
 38998                           	callstack 122
 38999                           
 39000                           ;../../VLCBlib_PIC/mns.c: 817:        switch (mode_state) {
 39001                           
 39002                           ;incstack = 0
 39003   016080  D00C               	goto	l9609
 39004   016082                     l9601:
 39005                           
 39006                           ; BSR set to: 5
 39007                           ;../../VLCBlib_PIC/mns.c: 819:             showStatus(STATUS_UNINITIALISED);
 39008   016082  0E01               	movlw	1
 39009   016084  EC45  F09E         	call	_showStatus
 39010                           
 39011                           ;../../VLCBlib_PIC/mns.c: 820:             break;
 39012   016088  0012               	return	
 39013   01608A                     l9603:
 39014                           
 39015                           ; BSR set to: 5
 39016                           ;../../VLCBlib_PIC/mns.c: 823:             showStatus(STATUS_SETUP);
 39017   01608A  0E02               	movlw	2
 39018   01608C  EC45  F09E         	call	_showStatus
 39019                           
 39020                           ;../../VLCBlib_PIC/mns.c: 824:             break;
 39021   016090  0012               	return	
 39022   016092                     l9605:
 39023                           
 39024                           ; BSR set to: 5
 39025                           ;../../VLCBlib_PIC/mns.c: 826:             showStatus(STATUS_NORMAL);
 39026   016092  0E03               	movlw	3
 39027   016094  EC45  F09E         	call	_showStatus
 39028                           
 39029                           ;../../VLCBlib_PIC/mns.c: 827:             break;
 39030   016098  0012               	return	
 39031   01609A                     l9609:
 39032   01609A  0105               	movlb	5	; () banked
 39033   01609C  5190               	movf	_mode_state& (0+255),w,b
 39034                           
 39035                           ; Switch size 1, requested type "simple"
 39036                           ; Number of cases is 3, Range of values is 0 to 255
 39037                           ; switch strategies available:
 39038                           ; Name         Instructions Cycles
 39039                           ; simple_byte           10     6 (average)
 39040                           ;	Chosen strategy is simple_byte
 39041   01609E  0A00               	xorlw	0	; case 0
 39042   0160A0  B4D8               	btfsc	status,2,c
 39043   0160A2  D7F3               	goto	l9603
 39044   0160A4  0AFD               	xorlw	253	; case 253
 39045   0160A6  B4D8               	btfsc	status,2,c
 39046   0160A8  D7F0               	goto	l9603
 39047   0160AA  0A02               	xorlw	2	; case 255
 39048   0160AC  B4D8               	btfsc	status,2,c
 39049   0160AE  D7E9               	goto	l9601
 39050   0160B0  D7F0               	goto	l9605
 39051   0160B2                     __end_of_setLEDsByMode:
 39052                           	callstack 0
 39053                           
 39054 ;; *************** function _sendMessage6 *****************
 39055 ;; Defined at:
 39056 ;;		line 1207 in file "../../VLCBlib_PIC/vlcb.c"
 39057 ;; Parameters:    Size  Location     Type
 39058 ;;  opc             1    wreg     enum E22928
 39059 ;;  data1           1   36[COMRAM] unsigned char 
 39060 ;;  data2           1   37[COMRAM] unsigned char 
 39061 ;;  data3           1   38[COMRAM] unsigned char 
 39062 ;;  data4           1   39[COMRAM] unsigned char 
 39063 ;;  data5           1   40[COMRAM] unsigned char 
 39064 ;;  data6           1   41[COMRAM] unsigned char 
 39065 ;; Auto vars:     Size  Location     Type
 39066 ;;  opc             1   42[COMRAM] enum E22928
 39067 ;; Return value:  Size  Location     Type
 39068 ;;                  1    wreg      void 
 39069 ;; Registers used:
 39070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 39071 ;; Tracked objects:
 39072 ;;		On entry : 0/0
 39073 ;;		On exit  : 0/0
 39074 ;;		Unchanged: 0/0
 39075 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39076 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39079 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39080 ;;Total ram usage:        7 bytes
 39081 ;; Hardware stack levels used: 1
 39082 ;; Hardware stack levels required when called: 5
 39083 ;; This function calls:
 39084 ;;		_sendMessage
 39085 ;; This function is called by:
 39086 ;;		_doReqev
 39087 ;;		_reqevCallback
 39088 ;;		_mnsProcessMessage
 39089 ;;		_mnsTRallDiagnosticsCallback
 39090 ;; This function uses a non-reentrant model
 39091 ;;
 39092                           
 39093                           	psect	text80
 39094   0161C4                     __ptext80:
 39095                           	callstack 0
 39096   0161C4                     _sendMessage6:
 39097                           	callstack 118
 39098                           
 39099                           ;incstack = 0
 39100                           ;sendMessage6@opc stored from wreg
 39101   0161C4  6E2B               	movwf	sendMessage6@opc^(0+1280),c
 39102                           
 39103                           ;../../VLCBlib_PIC/vlcb.c: 1208:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 39104   0161C6  0E07               	movlw	7
 39105   0161C8  6E1C               	movwf	sendMessage@len^(0+1280),c
 39106   0161CA  C525  F51D         	movff	sendMessage6@data1,sendMessage@data1
 39107   0161CE  C526  F51E         	movff	sendMessage6@data2,sendMessage@data2
 39108   0161D2  C527  F51F         	movff	sendMessage6@data3,sendMessage@data3
 39109   0161D6  C528  F520         	movff	sendMessage6@data4,sendMessage@data4
 39110   0161DA  C529  F521         	movff	sendMessage6@data5,sendMessage@data5
 39111   0161DE  C52A  F522         	movff	sendMessage6@data6,sendMessage@data6
 39112   0161E2  0E00               	movlw	0
 39113   0161E4  6E23               	movwf	sendMessage@data7^(0+1280),c
 39114   0161E6  502B               	movf	sendMessage6@opc^(0+1280),w,c
 39115   0161E8  EC9B  F0A6         	call	_sendMessage
 39116   0161EC  0012               	return		;funcret
 39117   0161EE                     __end_of_sendMessage6:
 39118                           	callstack 0
 39119                           
 39120 ;; *************** function _sendMessage3 *****************
 39121 ;; Defined at:
 39122 ;;		line 1168 in file "../../VLCBlib_PIC/vlcb.c"
 39123 ;; Parameters:    Size  Location     Type
 39124 ;;  opc             1    wreg     enum E22928
 39125 ;;  data1           1   36[COMRAM] unsigned char 
 39126 ;;  data2           1   37[COMRAM] unsigned char 
 39127 ;;  data3           1   38[COMRAM] unsigned char 
 39128 ;; Auto vars:     Size  Location     Type
 39129 ;;  opc             1   39[COMRAM] enum E22928
 39130 ;; Return value:  Size  Location     Type
 39131 ;;                  1    wreg      void 
 39132 ;; Registers used:
 39133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 39134 ;; Tracked objects:
 39135 ;;		On entry : 0/0
 39136 ;;		On exit  : 0/0
 39137 ;;		Unchanged: 0/0
 39138 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39139 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39140 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39142 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39143 ;;Total ram usage:        4 bytes
 39144 ;; Hardware stack levels used: 1
 39145 ;; Hardware stack levels required when called: 5
 39146 ;; This function calls:
 39147 ;;		_sendMessage
 39148 ;; This function is called by:
 39149 ;;		_teachProcessMessage
 39150 ;;		_doNnevn
 39151 ;;		_doNenrd
 39152 ;;		_doRqevn
 39153 ;;		_doEvlrn
 39154 ;;		_doReval
 39155 ;;		_doEvuln
 39156 ;;		_doReqev
 39157 ;;		_mnsProcessMessage
 39158 ;;		_nvProcessMessage
 39159 ;;		_producerProcessMessage
 39160 ;; This function uses a non-reentrant model
 39161 ;;
 39162                           
 39163                           	psect	text81
 39164   0161EE                     __ptext81:
 39165                           	callstack 0
 39166   0161EE                     _sendMessage3:
 39167                           	callstack 119
 39168                           
 39169                           ;incstack = 0
 39170                           ;sendMessage3@opc stored from wreg
 39171   0161EE  6E28               	movwf	sendMessage3@opc^(0+1280),c
 39172                           
 39173                           ;../../VLCBlib_PIC/vlcb.c: 1169:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 39174   0161F0  0E04               	movlw	4
 39175   0161F2  6E1C               	movwf	sendMessage@len^(0+1280),c
 39176   0161F4  C525  F51D         	movff	sendMessage3@data1,sendMessage@data1
 39177   0161F8  C526  F51E         	movff	sendMessage3@data2,sendMessage@data2
 39178   0161FC  C527  F51F         	movff	sendMessage3@data3,sendMessage@data3
 39179   016200  0E00               	movlw	0
 39180   016202  6E20               	movwf	sendMessage@data4^(0+1280),c
 39181   016204  0E00               	movlw	0
 39182   016206  6E21               	movwf	sendMessage@data5^(0+1280),c
 39183   016208  0E00               	movlw	0
 39184   01620A  6E22               	movwf	sendMessage@data6^(0+1280),c
 39185   01620C  0E00               	movlw	0
 39186   01620E  6E23               	movwf	sendMessage@data7^(0+1280),c
 39187   016210  5028               	movf	sendMessage3@opc^(0+1280),w,c
 39188   016212  EC9B  F0A6         	call	_sendMessage
 39189   016216  0012               	return		;funcret
 39190   016218                     __end_of_sendMessage3:
 39191                           	callstack 0
 39192                           
 39193 ;; *************** function _sendMessage2 *****************
 39194 ;; Defined at:
 39195 ;;		line 1157 in file "../../VLCBlib_PIC/vlcb.c"
 39196 ;; Parameters:    Size  Location     Type
 39197 ;;  opc             1    wreg     enum E22928
 39198 ;;  data1           1   36[COMRAM] unsigned char 
 39199 ;;  data2           1   37[COMRAM] unsigned char 
 39200 ;; Auto vars:     Size  Location     Type
 39201 ;;  opc             1   38[COMRAM] enum E22928
 39202 ;; Return value:  Size  Location     Type
 39203 ;;                  1    wreg      void 
 39204 ;; Registers used:
 39205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 39206 ;; Tracked objects:
 39207 ;;		On entry : 0/0
 39208 ;;		On exit  : 0/0
 39209 ;;		Unchanged: 0/0
 39210 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39214 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39215 ;;Total ram usage:        3 bytes
 39216 ;; Hardware stack levels used: 1
 39217 ;; Hardware stack levels required when called: 5
 39218 ;; This function calls:
 39219 ;;		_sendMessage
 39220 ;; This function is called by:
 39221 ;;		_doNnclr
 39222 ;;		_doEvlrn
 39223 ;;		_doEvuln
 39224 ;;		_mnsProcessMessage
 39225 ;;		_mnsPoll
 39226 ;;		_nvProcessMessage
 39227 ;; This function uses a non-reentrant model
 39228 ;;
 39229                           
 39230                           	psect	text82
 39231   016218                     __ptext82:
 39232                           	callstack 0
 39233   016218                     _sendMessage2:
 39234                           	callstack 118
 39235                           
 39236                           ;incstack = 0
 39237                           ;sendMessage2@opc stored from wreg
 39238   016218  6E27               	movwf	sendMessage2@opc^(0+1280),c
 39239                           
 39240                           ;../../VLCBlib_PIC/vlcb.c: 1158:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 39241   01621A  0E03               	movlw	3
 39242   01621C  6E1C               	movwf	sendMessage@len^(0+1280),c
 39243   01621E  C525  F51D         	movff	sendMessage2@data1,sendMessage@data1
 39244   016222  C526  F51E         	movff	sendMessage2@data2,sendMessage@data2
 39245   016226  0E00               	movlw	0
 39246   016228  6E1F               	movwf	sendMessage@data3^(0+1280),c
 39247   01622A  0E00               	movlw	0
 39248   01622C  6E20               	movwf	sendMessage@data4^(0+1280),c
 39249   01622E  0E00               	movlw	0
 39250   016230  6E21               	movwf	sendMessage@data5^(0+1280),c
 39251   016232  0E00               	movlw	0
 39252   016234  6E22               	movwf	sendMessage@data6^(0+1280),c
 39253   016236  0E00               	movlw	0
 39254   016238  6E23               	movwf	sendMessage@data7^(0+1280),c
 39255   01623A  5027               	movf	sendMessage2@opc^(0+1280),w,c
 39256   01623C  EC9B  F0A6         	call	_sendMessage
 39257   016240  0012               	return		;funcret
 39258   016242                     __end_of_sendMessage2:
 39259                           	callstack 0
 39260                           
 39261 ;; *************** function _getParameter *****************
 39262 ;; Defined at:
 39263 ;;		line 836 in file "../../VLCBlib_PIC/mns.c"
 39264 ;; Parameters:    Size  Location     Type
 39265 ;;  idx             1    wreg     unsigned char 
 39266 ;; Auto vars:     Size  Location     Type
 39267 ;;  idx             1    5[COMRAM] unsigned char 
 39268 ;;  i               1    0        unsigned char 
 39269 ;; Return value:  Size  Location     Type
 39270 ;;                  1    wreg      unsigned char 
 39271 ;; Registers used:
 39272 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39273 ;; Tracked objects:
 39274 ;;		On entry : 0/0
 39275 ;;		On exit  : 0/0
 39276 ;;		Unchanged: 0/0
 39277 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39279 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39281 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39282 ;;Total ram usage:        1 bytes
 39283 ;; Hardware stack levels used: 1
 39284 ;; Hardware stack levels required when called: 3
 39285 ;; This function calls:
 39286 ;;		_getParameterFlags
 39287 ;;		_have
 39288 ;; This function is called by:
 39289 ;;		_mnsProcessMessage
 39290 ;;		_mnsTRrqnpnCallback
 39291 ;; This function uses a non-reentrant model
 39292 ;;
 39293                           
 39294                           	psect	text83
 39295   0137B4                     __ptext83:
 39296                           	callstack 0
 39297   0137B4                     _getParameter:
 39298                           	callstack 120
 39299                           
 39300                           ;incstack = 0
 39301                           ;getParameter@idx stored from wreg
 39302   0137B4  6E06               	movwf	getParameter@idx^(0+1280),c
 39303                           
 39304                           ;../../VLCBlib_PIC/mns.c: 837:     uint8_t i;;../../VLCBlib_PIC/mns.c: 838:     switch(i
      +                          dx) {
 39305   0137B6  D047               	goto	l9709
 39306   0137B8                     l9613:
 39307                           
 39308                           ;../../VLCBlib_PIC/mns.c: 840:         return 20;
 39309   0137B8  0E14               	movlw	20
 39310   0137BA  0012               	return	
 39311   0137BC                     l9617:
 39312                           
 39313                           ;../../VLCBlib_PIC/mns.c: 842:         return MANU_MERG;
 39314   0137BC  0EA5               	movlw	165
 39315   0137BE  0012               	return	
 39316   0137C0                     l9621:
 39317                           
 39318                           ;../../VLCBlib_PIC/mns.c: 844:         return 'a';
 39319   0137C0  0E61               	movlw	97
 39320   0137C2  0012               	return	
 39321   0137C4                     l9625:
 39322                           
 39323                           ;../../VLCBlib_PIC/mns.c: 846:         return MTYP_CANPAN;
 39324   0137C4  0E1D               	movlw	29
 39325   0137C6  0012               	return	
 39326   0137C8                     l9629:
 39327                           
 39328                           ;../../VLCBlib_PIC/mns.c: 848:         return 254;
 39329   0137C8  0EFE               	movlw	254
 39330   0137CA  0012               	return	
 39331   0137CC                     l9633:
 39332                           
 39333                           ;../../VLCBlib_PIC/mns.c: 850:         return 13;
 39334   0137CC  0E0D               	movlw	13
 39335   0137CE  0012               	return	
 39336   0137D0                     l9637:
 39337                           
 39338                           ;../../VLCBlib_PIC/mns.c: 852:         return 67;
 39339   0137D0  0E43               	movlw	67
 39340   0137D2  0012               	return	
 39341   0137D4                     l9641:
 39342                           
 39343                           ;../../VLCBlib_PIC/mns.c: 854:         return 5;
 39344   0137D4  0E05               	movlw	5
 39345   0137D6  0012               	return	
 39346   0137D8                     l9645:
 39347                           
 39348                           ;../../VLCBlib_PIC/mns.c: 856:         return getParameterFlags();
 39349   0137D8  EC90  F0AE         	call	_getParameterFlags	;wreg free
 39350   0137DC  0012               	return	
 39351   0137DE                     l9649:
 39352                           
 39353                           ;../../VLCBlib_PIC/mns.c: 858:         return P18F27Q83;
 39354   0137DE  0E17               	movlw	23
 39355   0137E0  0012               	return	
 39356   0137E2                     l9653:
 39357                           
 39358                           ;../../VLCBlib_PIC/mns.c: 860:         if (have(SERVICE_ID_CAN)) {
 39359   0137E2  0E03               	movlw	3
 39360   0137E4  EC39  F0A8         	call	_have
 39361   0137E8  0900               	iorlw	0
 39362   0137EA  B4D8               	btfsc	status,2,c
 39363   0137EC  D002               	goto	l9659
 39364   0137EE                     u7490:
 39365                           
 39366                           ;../../VLCBlib_PIC/mns.c: 861:             return PB_CAN;
 39367   0137EE  0E01               	movlw	1
 39368   0137F0  0012               	return	
 39369   0137F2                     l9659:
 39370                           
 39371                           ;../../VLCBlib_PIC/mns.c: 863:         return 0;
 39372   0137F2  0E00               	movlw	0
 39373   0137F4  0012               	return	
 39374   0137F6                     l9667:
 39375                           
 39376                           ;../../VLCBlib_PIC/mns.c: 867:         return 0x08;
 39377   0137F6  0E08               	movlw	8
 39378   0137F8  0012               	return	
 39379   0137FA                     l9679:
 39380                           
 39381                           ;../../VLCBlib_PIC/mns.c: 874:         return *(const uint8_t*)0x3FFFFC;
 39382   0137FA  0EFC               	movlw	252
 39383   0137FC  6EF6               	movwf	tblptrl,c
 39384   0137FE                     	if	1	;There is more than 1 active tblptr byte
 39385   0137FE  0EFF               	movlw	255
 39386   013800  6EF7               	movwf	tblptrh,c
 39387   013802                     	endif
 39388   013802                     	if	1	;There are 3 active tblptr bytes
 39389   013802  0E3F               	movlw	63
 39390   013804  6EF8               	movwf	tblptru,c
 39391   013806                     	endif
 39392   013806  0008               	tblrd		*
 39393   013808  50F5               	movf	tablat,w,c
 39394   01380A  0012               	return	
 39395   01380C                     l9683:
 39396                           
 39397                           ;../../VLCBlib_PIC/mns.c: 876:         return *(const uint8_t*)0x3FFFFD;
 39398   01380C  0EFD               	movlw	253
 39399   01380E  6EF6               	movwf	tblptrl,c
 39400   013810                     	if	1	;There is more than 1 active tblptr byte
 39401   013810  0EFF               	movlw	255
 39402   013812  6EF7               	movwf	tblptrh,c
 39403   013814                     	endif
 39404   013814                     	if	1	;There are 3 active tblptr bytes
 39405   013814  0E3F               	movlw	63
 39406   013816  6EF8               	movwf	tblptru,c
 39407   013818                     	endif
 39408   013818  0008               	tblrd		*
 39409   01381A  50F5               	movf	tablat,w,c
 39410   01381C  0012               	return	
 39411   01381E                     l9687:
 39412                           
 39413                           ;../../VLCBlib_PIC/mns.c: 879:         return *(const uint8_t*)0x3FFFFE;
 39414   01381E  0EFE               	movlw	254
 39415   013820  6EF6               	movwf	tblptrl,c
 39416   013822                     	if	1	;There is more than 1 active tblptr byte
 39417   013822  0EFF               	movlw	255
 39418   013824  6EF7               	movwf	tblptrh,c
 39419   013826                     	endif
 39420   013826                     	if	1	;There are 3 active tblptr bytes
 39421   013826  0E3F               	movlw	63
 39422   013828  6EF8               	movwf	tblptru,c
 39423   01382A                     	endif
 39424   01382A  0008               	tblrd		*
 39425   01382C  50F5               	movf	tablat,w,c
 39426   01382E  0012               	return	
 39427   013830                     l9691:
 39428                           
 39429                           ;../../VLCBlib_PIC/mns.c: 881:         return *(const uint8_t*)0x3FFFFF;
 39430   013830  0EFF               	movlw	255
 39431   013832  6EF6               	movwf	tblptrl,c
 39432   013834                     	if	1	;There is more than 1 active tblptr byte
 39433   013834  0EFF               	movlw	255
 39434   013836  6EF7               	movwf	tblptrh,c
 39435   013838                     	endif
 39436   013838                     	if	1	;There are 3 active tblptr bytes
 39437   013838  0E3F               	movlw	63
 39438   01383A  6EF8               	movwf	tblptru,c
 39439   01383C                     	endif
 39440   01383C  0008               	tblrd		*
 39441   01383E  50F5               	movf	tablat,w,c
 39442   013840  0012               	return	
 39443   013842                     l9699:
 39444                           
 39445                           ;../../VLCBlib_PIC/mns.c: 885:         return 6;
 39446   013842  0E06               	movlw	6
 39447   013844  0012               	return	
 39448   013846                     l9709:
 39449   013846  5006               	movf	getParameter@idx^(0+1280),w,c
 39450                           
 39451                           ; Switch size 1, requested type "simple"
 39452                           ; Number of cases is 21, Range of values is 0 to 20
 39453                           ; switch strategies available:
 39454                           ; Name         Instructions Cycles
 39455                           ; simple_byte           64    33 (average)
 39456                           ;	Chosen strategy is simple_byte
 39457   013848  0A00               	xorlw	0	; case 0
 39458   01384A  B4D8               	btfsc	status,2,c
 39459   01384C  D7B5               	goto	l9613
 39460   01384E  0A01               	xorlw	1	; case 1
 39461   013850  B4D8               	btfsc	status,2,c
 39462   013852  D7B4               	goto	l9617
 39463   013854  0A03               	xorlw	3	; case 2
 39464   013856  B4D8               	btfsc	status,2,c
 39465   013858  D7B3               	goto	l9621
 39466   01385A  0A01               	xorlw	1	; case 3
 39467   01385C  B4D8               	btfsc	status,2,c
 39468   01385E  D7B2               	goto	l9625
 39469   013860  0A07               	xorlw	7	; case 4
 39470   013862  B4D8               	btfsc	status,2,c
 39471   013864  D7B1               	goto	l9629
 39472   013866  0A01               	xorlw	1	; case 5
 39473   013868  B4D8               	btfsc	status,2,c
 39474   01386A  D7B0               	goto	l9633
 39475   01386C  0A03               	xorlw	3	; case 6
 39476   01386E  B4D8               	btfsc	status,2,c
 39477   013870  D7AF               	goto	l9637
 39478   013872  0A01               	xorlw	1	; case 7
 39479   013874  B4D8               	btfsc	status,2,c
 39480   013876  D7AE               	goto	l9641
 39481   013878  0A0F               	xorlw	15	; case 8
 39482   01387A  B4D8               	btfsc	status,2,c
 39483   01387C  D7AD               	goto	l9645
 39484   01387E  0A01               	xorlw	1	; case 9
 39485   013880  B4D8               	btfsc	status,2,c
 39486   013882  D7AD               	goto	l9649
 39487   013884  0A03               	xorlw	3	; case 10
 39488   013886  B4D8               	btfsc	status,2,c
 39489   013888  D7AC               	goto	l9653
 39490   01388A  0A01               	xorlw	1	; case 11
 39491   01388C  B4D8               	btfsc	status,2,c
 39492   01388E  D7B1               	goto	l9659
 39493   013890  0A07               	xorlw	7	; case 12
 39494   013892  B4D8               	btfsc	status,2,c
 39495   013894  D7B0               	goto	l9667
 39496   013896  0A01               	xorlw	1	; case 13
 39497   013898  B4D8               	btfsc	status,2,c
 39498   01389A  D7AB               	goto	l9659
 39499   01389C  0A03               	xorlw	3	; case 14
 39500   01389E  B4D8               	btfsc	status,2,c
 39501   0138A0  D7A8               	goto	l9659
 39502   0138A2  0A01               	xorlw	1	; case 15
 39503   0138A4  B4D8               	btfsc	status,2,c
 39504   0138A6  D7A9               	goto	l9679
 39505   0138A8  0A1F               	xorlw	31	; case 16
 39506   0138AA  B4D8               	btfsc	status,2,c
 39507   0138AC  D7AF               	goto	l9683
 39508   0138AE  0A01               	xorlw	1	; case 17
 39509   0138B0  B4D8               	btfsc	status,2,c
 39510   0138B2  D7B5               	goto	l9687
 39511   0138B4  0A03               	xorlw	3	; case 18
 39512   0138B6  B4D8               	btfsc	status,2,c
 39513   0138B8  D7BB               	goto	l9691
 39514   0138BA  0A01               	xorlw	1	; case 19
 39515   0138BC  B4D8               	btfsc	status,2,c
 39516   0138BE  D797               	goto	u7490
 39517   0138C0  0A07               	xorlw	7	; case 20
 39518   0138C2  B4D8               	btfsc	status,2,c
 39519   0138C4  D7BE               	goto	l9699
 39520   0138C6  D795               	goto	l9659
 39521   0138C8                     __end_of_getParameter:
 39522                           	callstack 0
 39523                           
 39524 ;; *************** function _getParameterFlags *****************
 39525 ;; Defined at:
 39526 ;;		line 607 in file "../../VLCBlib_PIC/mns.c"
 39527 ;; Parameters:    Size  Location     Type
 39528 ;;		None
 39529 ;; Auto vars:     Size  Location     Type
 39530 ;;  flags           1    4[COMRAM] unsigned char 
 39531 ;; Return value:  Size  Location     Type
 39532 ;;                  1    wreg      unsigned char 
 39533 ;; Registers used:
 39534 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39535 ;; Tracked objects:
 39536 ;;		On entry : 0/0
 39537 ;;		On exit  : 0/0
 39538 ;;		Unchanged: 0/0
 39539 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39543 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39544 ;;Total ram usage:        1 bytes
 39545 ;; Hardware stack levels used: 1
 39546 ;; Hardware stack levels required when called: 2
 39547 ;; This function calls:
 39548 ;;		_have
 39549 ;; This function is called by:
 39550 ;;		_mnsProcessMessage
 39551 ;;		_getParameter
 39552 ;; This function uses a non-reentrant model
 39553 ;;
 39554                           
 39555                           	psect	text84
 39556   015D20                     __ptext84:
 39557                           	callstack 0
 39558   015D20                     _getParameterFlags:
 39559                           	callstack 120
 39560                           
 39561                           ;../../VLCBlib_PIC/mns.c: 608:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 609:     flag
      +                          s = 0;
 39562                           
 39563                           ;incstack = 0
 39564   015D20  6A05               	clrf	getParameterFlags@flags^(0+1280),c
 39565                           
 39566                           ;../../VLCBlib_PIC/mns.c: 610:     if (have(SERVICE_ID_CONSUMER)) {
 39567   015D22  0E06               	movlw	6
 39568   015D24  EC39  F0A8         	call	_have
 39569   015D28  0900               	iorlw	0
 39570   015D2A  A4D8               	btfss	status,2,c
 39571                           
 39572                           ;../../VLCBlib_PIC/mns.c: 611:         flags |= 1;
 39573   015D2C  8005               	bsf	getParameterFlags@flags^(0+1280),0,c
 39574                           
 39575                           ;../../VLCBlib_PIC/mns.c: 613:     if (have(SERVICE_ID_PRODUCER)) {
 39576   015D2E  0E05               	movlw	5
 39577   015D30  EC39  F0A8         	call	_have
 39578   015D34  0900               	iorlw	0
 39579   015D36  A4D8               	btfss	status,2,c
 39580                           
 39581                           ;../../VLCBlib_PIC/mns.c: 614:         flags |= 2;
 39582   015D38  8205               	bsf	getParameterFlags@flags^(0+1280),1,c
 39583                           
 39584                           ;../../VLCBlib_PIC/mns.c: 616:     if (flags == (2 | 1)) flags |= 16;
 39585   015D3A  0E03               	movlw	3
 39586   015D3C  1805               	xorwf	getParameterFlags@flags^(0+1280),w,c
 39587   015D3E  B4D8               	btfsc	status,2,c
 39588   015D40  8805               	bsf	getParameterFlags@flags^(0+1280),4,c
 39589                           
 39590                           ;../../VLCBlib_PIC/mns.c: 617:     if (have(SERVICE_ID_BOOT)) {
 39591   015D42  0E0A               	movlw	10
 39592   015D44  EC39  F0A8         	call	_have
 39593   015D48  0900               	iorlw	0
 39594   015D4A  A4D8               	btfss	status,2,c
 39595                           
 39596                           ;../../VLCBlib_PIC/mns.c: 618:         flags |= 8;
 39597   015D4C  8605               	bsf	getParameterFlags@flags^(0+1280),3,c
 39598                           
 39599                           ;../../VLCBlib_PIC/mns.c: 620:     if (mode_flags & 1) {
 39600   015D4E  0105               	movlb	5	; () banked
 39601   015D50  B19F               	btfsc	_mode_flags& (0+255),0,b
 39602                           
 39603                           ; BSR set to: 5
 39604                           ;../../VLCBlib_PIC/mns.c: 621:         flags |= 32;
 39605   015D52  8A05               	bsf	getParameterFlags@flags^(0+1280),5,c
 39606                           
 39607                           ; BSR set to: 5
 39608                           ;../../VLCBlib_PIC/mns.c: 623:     if (mode_state == MODE_NORMAL) {
 39609   015D54  0590               	decf	_mode_state& (0+255),w,b
 39610   015D56  B4D8               	btfsc	status,2,c
 39611                           
 39612                           ; BSR set to: 5
 39613                           ;../../VLCBlib_PIC/mns.c: 624:         flags |= 4;
 39614   015D58  8405               	bsf	getParameterFlags@flags^(0+1280),2,c
 39615                           
 39616                           ; BSR set to: 5
 39617                           ;../../VLCBlib_PIC/mns.c: 627:     flags |= 64;
 39618                           
 39619                           ;../../VLCBlib_PIC/mns.c: 625:     }
 39620   015D5A  8C05               	bsf	getParameterFlags@flags^(0+1280),6,c
 39621                           
 39622                           ; BSR set to: 5
 39623                           ;../../VLCBlib_PIC/mns.c: 629:     return flags;
 39624   015D5C  5005               	movf	getParameterFlags@flags^(0+1280),w,c
 39625                           
 39626                           ; BSR set to: 5
 39627   015D5E  0012               	return		;funcret
 39628   015D60                     __end_of_getParameterFlags:
 39629                           	callstack 0
 39630                           
 39631 ;; *************** function _sendMessage7 *****************
 39632 ;; Defined at:
 39633 ;;		line 1222 in file "../../VLCBlib_PIC/vlcb.c"
 39634 ;; Parameters:    Size  Location     Type
 39635 ;;  opc             1    wreg     enum E22928
 39636 ;;  data1           1   36[COMRAM] unsigned char 
 39637 ;;  data2           1   37[COMRAM] unsigned char 
 39638 ;;  data3           1   38[COMRAM] unsigned char 
 39639 ;;  data4           1   39[COMRAM] unsigned char 
 39640 ;;  data5           1   40[COMRAM] unsigned char 
 39641 ;;  data6           1   41[COMRAM] unsigned char 
 39642 ;;  data7           1   42[COMRAM] unsigned char 
 39643 ;; Auto vars:     Size  Location     Type
 39644 ;;  opc             1   43[COMRAM] enum E22928
 39645 ;; Return value:  Size  Location     Type
 39646 ;;                  1    wreg      void 
 39647 ;; Registers used:
 39648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 39649 ;; Tracked objects:
 39650 ;;		On entry : 0/0
 39651 ;;		On exit  : 0/0
 39652 ;;		Unchanged: 0/0
 39653 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39654 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39657 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39658 ;;Total ram usage:        8 bytes
 39659 ;; Hardware stack levels used: 1
 39660 ;; Hardware stack levels required when called: 5
 39661 ;; This function calls:
 39662 ;;		_sendMessage
 39663 ;; This function is called by:
 39664 ;;		_consumerProcessMessage
 39665 ;;		_nerdCallback
 39666 ;;		_mnsProcessMessage
 39667 ;; This function uses a non-reentrant model
 39668 ;;
 39669                           
 39670                           	psect	text85
 39671   016242                     __ptext85:
 39672                           	callstack 0
 39673   016242                     _sendMessage7:
 39674                           	callstack 118
 39675                           
 39676                           ; BSR set to: 5
 39677                           ;incstack = 0
 39678                           ;sendMessage7@opc stored from wreg
 39679   016242  6E2C               	movwf	sendMessage7@opc^(0+1280),c
 39680                           
 39681                           ;../../VLCBlib_PIC/vlcb.c: 1223:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 39682   016244  0E08               	movlw	8
 39683   016246  6E1C               	movwf	sendMessage@len^(0+1280),c
 39684   016248  C525  F51D         	movff	sendMessage7@data1,sendMessage@data1
 39685   01624C  C526  F51E         	movff	sendMessage7@data2,sendMessage@data2
 39686   016250  C527  F51F         	movff	sendMessage7@data3,sendMessage@data3
 39687   016254  C528  F520         	movff	sendMessage7@data4,sendMessage@data4
 39688   016258  C529  F521         	movff	sendMessage7@data5,sendMessage@data5
 39689   01625C  C52A  F522         	movff	sendMessage7@data6,sendMessage@data6
 39690   016260  C52B  F523         	movff	sendMessage7@data7,sendMessage@data7
 39691   016264  502C               	movf	sendMessage7@opc^(0+1280),w,c
 39692   016266  EC9B  F0A6         	call	_sendMessage
 39693   01626A  0012               	return		;funcret
 39694   01626C                     __end_of_sendMessage7:
 39695                           	callstack 0
 39696                           
 39697 ;; *************** function _isConsumedEvent *****************
 39698 ;; Defined at:
 39699 ;;		line 208 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 39700 ;; Parameters:    Size  Location     Type
 39701 ;;  eventIndex      1    wreg     unsigned char 
 39702 ;; Auto vars:     Size  Location     Type
 39703 ;;  eventIndex      1   27[COMRAM] unsigned char 
 39704 ;; Return value:  Size  Location     Type
 39705 ;;                  1    wreg      unsigned char 
 39706 ;; Registers used:
 39707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39708 ;; Tracked objects:
 39709 ;;		On entry : 0/0
 39710 ;;		On exit  : 0/0
 39711 ;;		Unchanged: 0/0
 39712 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39716 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39717 ;;Total ram usage:        1 bytes
 39718 ;; Hardware stack levels used: 1
 39719 ;; Hardware stack levels required when called: 5
 39720 ;; This function calls:
 39721 ;;		_APP_isConsumedEvent
 39722 ;; This function is called by:
 39723 ;;		_consumerProcessMessage
 39724 ;; This function uses a non-reentrant model
 39725 ;;
 39726                           
 39727                           	psect	text86
 39728   01660C                     __ptext86:
 39729                           	callstack 0
 39730   01660C                     _isConsumedEvent:
 39731                           	callstack 119
 39732                           
 39733                           ;incstack = 0
 39734                           ;isConsumedEvent@eventIndex stored from wreg
 39735   01660C  6E1C               	movwf	isConsumedEvent@eventIndex^(0+1280),c
 39736                           
 39737                           ;../../VLCBlib_PIC/event_consumer_simple.c: 209:     return APP_isConsumedEvent(eventInd
      +                          ex);
 39738   01660E  501C               	movf	isConsumedEvent@eventIndex^(0+1280),w,c
 39739   016610  EC79  F0A3         	call	_APP_isConsumedEvent
 39740   016614  0012               	return		;funcret
 39741   016616                     __end_of_isConsumedEvent:
 39742                           	callstack 0
 39743                           
 39744 ;; *************** function _APP_isConsumedEvent *****************
 39745 ;; Defined at:
 39746 ;;		line 135 in file "../canpan3Events.c"
 39747 ;; Parameters:    Size  Location     Type
 39748 ;;  tableIndex      1    wreg     unsigned char 
 39749 ;; Auto vars:     Size  Location     Type
 39750 ;;  tableIndex      1   24[COMRAM] unsigned char 
 39751 ;;  ev              2   25[COMRAM] short 
 39752 ;; Return value:  Size  Location     Type
 39753 ;;                  1    wreg      unsigned char 
 39754 ;; Registers used:
 39755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39756 ;; Tracked objects:
 39757 ;;		On entry : 0/0
 39758 ;;		On exit  : 0/0
 39759 ;;		Unchanged: 0/0
 39760 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39762 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39764 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39765 ;;Total ram usage:        3 bytes
 39766 ;; Hardware stack levels used: 1
 39767 ;; Hardware stack levels required when called: 4
 39768 ;; This function calls:
 39769 ;;		_getEv
 39770 ;; This function is called by:
 39771 ;;		_isConsumedEvent
 39772 ;; This function uses a non-reentrant model
 39773 ;;
 39774                           
 39775                           	psect	text87
 39776   0146F2                     __ptext87:
 39777                           	callstack 0
 39778   0146F2                     _APP_isConsumedEvent:
 39779                           	callstack 119
 39780                           
 39781                           ;incstack = 0
 39782                           ;APP_isConsumedEvent@tableIndex stored from wreg
 39783   0146F2  6E19               	movwf	APP_isConsumedEvent@tableIndex^(0+1280),c
 39784                           
 39785                           ;../canpan3Events.c: 136:     int16_t ev;;../canpan3Events.c: 138:     ev = getEv(tableI
      +                          ndex, 0);
 39786   0146F4  0E00               	movlw	0
 39787   0146F6  6E0D               	movwf	getEv@evNum^(0+1280),c
 39788   0146F8  5019               	movf	APP_isConsumedEvent@tableIndex^(0+1280),w,c
 39789   0146FA  EC13  F0A9         	call	_getEv
 39790   0146FE  C50D  F51A         	movff	?_getEv,APP_isConsumedEvent@ev
 39791   014702  C50E  F51B         	movff	?_getEv+1,APP_isConsumedEvent@ev+1
 39792                           
 39793                           ;../canpan3Events.c: 139:     if (ev < 0) {
 39794   014706  AE1B               	btfss	(APP_isConsumedEvent@ev+1)^(0+1280),7,c
 39795   014708  D002               	goto	l162
 39796                           
 39797                           ;../canpan3Events.c: 141:         return 0;
 39798   01470A  0E00               	movlw	0
 39799   01470C  0012               	return	
 39800   01470E                     l162:
 39801                           
 39802                           ;../canpan3Events.c: 144:     if ((ev & 2) == 2) {
 39803   01470E  A21A               	btfss	APP_isConsumedEvent@ev^(0+1280),1,c
 39804   014710  D002               	goto	l8911
 39805   014712                     u6610:
 39806                           
 39807                           ;../canpan3Events.c: 145:         return 1;
 39808   014712  0E01               	movlw	1
 39809   014714  0012               	return	
 39810   014716                     l8911:
 39811                           
 39812                           ;../canpan3Events.c: 147:     ev = getEv(tableIndex, 4);
 39813   014716  0E04               	movlw	4
 39814   014718  6E0D               	movwf	getEv@evNum^(0+1280),c
 39815   01471A  5019               	movf	APP_isConsumedEvent@tableIndex^(0+1280),w,c
 39816   01471C  EC13  F0A9         	call	_getEv
 39817   014720  C50D  F51A         	movff	?_getEv,APP_isConsumedEvent@ev
 39818   014724  C50E  F51B         	movff	?_getEv+1,APP_isConsumedEvent@ev+1
 39819                           
 39820                           ;../canpan3Events.c: 148:     if (ev) return 1;
 39821   014728  501A               	movf	APP_isConsumedEvent@ev^(0+1280),w,c
 39822   01472A  101B               	iorwf	(APP_isConsumedEvent@ev+1)^(0+1280),w,c
 39823   01472C  A4D8               	btfss	status,2,c
 39824   01472E  D7F1               	goto	u6610
 39825                           
 39826                           ;../canpan3Events.c: 149:     ev = getEv(tableIndex, 5);
 39827   014730  0E05               	movlw	5
 39828   014732  6E0D               	movwf	getEv@evNum^(0+1280),c
 39829   014734  5019               	movf	APP_isConsumedEvent@tableIndex^(0+1280),w,c
 39830   014736  EC13  F0A9         	call	_getEv
 39831   01473A  C50D  F51A         	movff	?_getEv,APP_isConsumedEvent@ev
 39832   01473E  C50E  F51B         	movff	?_getEv+1,APP_isConsumedEvent@ev+1
 39833                           
 39834                           ;../canpan3Events.c: 150:     if (ev) return 1;
 39835   014742  501A               	movf	APP_isConsumedEvent@ev^(0+1280),w,c
 39836   014744  101B               	iorwf	(APP_isConsumedEvent@ev+1)^(0+1280),w,c
 39837   014746  A4D8               	btfss	status,2,c
 39838   014748  D7E4               	goto	u6610
 39839                           
 39840                           ;../canpan3Events.c: 151:     ev = getEv(tableIndex, 6);
 39841   01474A  0E06               	movlw	6
 39842   01474C  6E0D               	movwf	getEv@evNum^(0+1280),c
 39843   01474E  5019               	movf	APP_isConsumedEvent@tableIndex^(0+1280),w,c
 39844   014750  EC13  F0A9         	call	_getEv
 39845   014754  C50D  F51A         	movff	?_getEv,APP_isConsumedEvent@ev
 39846   014758  C50E  F51B         	movff	?_getEv+1,APP_isConsumedEvent@ev+1
 39847                           
 39848                           ;../canpan3Events.c: 152:     if (ev) return 1;
 39849   01475C  501A               	movf	APP_isConsumedEvent@ev^(0+1280),w,c
 39850   01475E  101B               	iorwf	(APP_isConsumedEvent@ev+1)^(0+1280),w,c
 39851   014760  A4D8               	btfss	status,2,c
 39852   014762  D7D7               	goto	u6610
 39853                           
 39854                           ;../canpan3Events.c: 153:     ev = getEv(tableIndex, 7);
 39855   014764  0E07               	movlw	7
 39856   014766  6E0D               	movwf	getEv@evNum^(0+1280),c
 39857   014768  5019               	movf	APP_isConsumedEvent@tableIndex^(0+1280),w,c
 39858   01476A  EC13  F0A9         	call	_getEv
 39859   01476E  C50D  F51A         	movff	?_getEv,APP_isConsumedEvent@ev
 39860   014772  C50E  F51B         	movff	?_getEv+1,APP_isConsumedEvent@ev+1
 39861                           
 39862                           ;../canpan3Events.c: 154:     return ev != 0;
 39863   014776  501A               	movf	APP_isConsumedEvent@ev^(0+1280),w,c
 39864   014778  101B               	iorwf	(APP_isConsumedEvent@ev+1)^(0+1280),w,c
 39865   01477A  B4D8               	btfsc	status,2,c
 39866   01477C  D002               	goto	u6650
 39867   01477E  0E01               	movlw	1
 39868   014780  0012               	return	
 39869   014782                     u6650:
 39870   014782  0E00               	movlw	0
 39871   014784  0012               	return		;funcret
 39872   014786                     __end_of_APP_isConsumedEvent:
 39873                           	callstack 0
 39874                           
 39875 ;; *************** function _getEv *****************
 39876 ;; Defined at:
 39877 ;;		line 865 in file "../../VLCBlib_PIC/event_teach_simple.c"
 39878 ;; Parameters:    Size  Location     Type
 39879 ;;  tableIndex      1    wreg     unsigned char 
 39880 ;;  evNum           1   12[COMRAM] unsigned char 
 39881 ;; Auto vars:     Size  Location     Type
 39882 ;;  tableIndex      1   23[COMRAM] unsigned char 
 39883 ;; Return value:  Size  Location     Type
 39884 ;;                  2   12[COMRAM] short 
 39885 ;; Registers used:
 39886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39887 ;; Tracked objects:
 39888 ;;		On entry : 0/0
 39889 ;;		On exit  : 0/0
 39890 ;;		Unchanged: 0/0
 39891 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39894 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39895 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39896 ;;Total ram usage:       12 bytes
 39897 ;; Hardware stack levels used: 1
 39898 ;; Hardware stack levels required when called: 3
 39899 ;; This function calls:
 39900 ;;		_readNVM
 39901 ;; This function is called by:
 39902 ;;		_rebuildLookupTable
 39903 ;;		_APP_isConsumedEvent
 39904 ;;		_APP_isProducedEvent
 39905 ;;		_APP_preProcessMessage
 39906 ;;		_doReval
 39907 ;;		_doReqev
 39908 ;;		_reqevCallback
 39909 ;; This function uses a non-reentrant model
 39910 ;;
 39911                           
 39912                           	psect	text88
 39913   015226                     __ptext88:
 39914                           	callstack 0
 39915   015226                     _getEv:
 39916                           	callstack 120
 39917                           
 39918                           ;incstack = 0
 39919                           ;getEv@tableIndex stored from wreg
 39920   015226  6E18               	movwf	getEv@tableIndex^(0+1280),c
 39921                           
 39922                           ;../../VLCBlib_PIC/event_teach_simple.c: 866:     if (tableIndex >= 254) {
 39923   015228  0EFD               	movlw	253
 39924   01522A  6418               	cpfsgt	getEv@tableIndex^(0+1280),c
 39925   01522C  D005               	goto	l8759
 39926                           
 39927                           ;../../VLCBlib_PIC/event_teach_simple.c: 867:         return CMDERR_INV_EN_IDX;
 39928   01522E  0E00               	movlw	0
 39929   015230  6E0E               	movwf	(?_getEv+1)^(0+1280),c
 39930   015232  0E08               	movlw	8
 39931   015234  6E0D               	movwf	?_getEv^(0+1280),c
 39932   015236  0012               	return	
 39933   015238                     l8759:
 39934                           
 39935                           ;../../VLCBlib_PIC/event_teach_simple.c: 869:     if (evNum >= 13) {
 39936   015238  0E0C               	movlw	12
 39937   01523A  640D               	cpfsgt	getEv@evNum^(0+1280),c
 39938   01523C  D005               	goto	l8765
 39939                           
 39940                           ;../../VLCBlib_PIC/event_teach_simple.c: 870:         return -CMDERR_INV_EV_IDX;
 39941   01523E  0EFF               	movlw	255
 39942   015240  6E0E               	movwf	(?_getEv+1)^(0+1280),c
 39943   015242  0EFA               	movlw	250
 39944   015244  6E0D               	movwf	?_getEv^(0+1280),c
 39945   015246  0012               	return	
 39946   015248                     l8765:
 39947                           
 39948                           ;../../VLCBlib_PIC/event_teach_simple.c: 872:     return (uint8_t)readNVM(FLASH_NVM_TYPE
      +                          , 0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+5 +evNum);
 39949   015248  500D               	movf	getEv@evNum^(0+1280),w,c
 39950   01524A  6E0F               	movwf	??_getEv^(0+1280),c
 39951   01524C  6A10               	clrf	(??_getEv+1)^(0+1280),c
 39952   01524E  6A11               	clrf	(??_getEv+2)^(0+1280),c
 39953   015250  5018               	movf	getEv@tableIndex^(0+1280),w,c
 39954   015252  0D12               	mullw	18
 39955   015254  C4F3 F512          	movff	prodl,??_getEv+3
 39956   015258  C4F4 F513          	movff	prodh,??_getEv+4
 39957   01525C  6A14               	clrf	(??_getEv+5)^(0+1280),c
 39958   01525E  500F               	movf	??_getEv^(0+1280),w,c
 39959   015260  2412               	addwf	(??_getEv+3)^(0+1280),w,c
 39960   015262  6E15               	movwf	(??_getEv+6)^(0+1280),c
 39961   015264  5010               	movf	(??_getEv+1)^(0+1280),w,c
 39962   015266  2013               	addwfc	(??_getEv+4)^(0+1280),w,c
 39963   015268  6E16               	movwf	(??_getEv+7)^(0+1280),c
 39964   01526A  5011               	movf	(??_getEv+2)^(0+1280),w,c
 39965   01526C  2014               	addwfc	(??_getEv+5)^(0+1280),w,c
 39966   01526E  6E17               	movwf	(??_getEv+8)^(0+1280),c
 39967   015270  0E05               	movlw	5
 39968   015272  2415               	addwf	(??_getEv+6)^(0+1280),w,c
 39969   015274  6E07               	movwf	readNVM@index^(0+1280),c
 39970   015276  0EE8               	movlw	232
 39971   015278  2016               	addwfc	(??_getEv+7)^(0+1280),w,c
 39972   01527A  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 39973   01527C  0E01               	movlw	1
 39974   01527E  2017               	addwfc	(??_getEv+8)^(0+1280),w,c
 39975   015280  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 39976   015282  0E01               	movlw	1
 39977   015284  EC42  F0AB         	call	_readNVM
 39978   015288  5007               	movf	?_readNVM^(0+1280),w,c
 39979   01528A  6E0D               	movwf	?_getEv^(0+1280),c
 39980   01528C  6A0E               	clrf	(?_getEv+1)^(0+1280),c
 39981   01528E  0012               	return		;funcret
 39982   015290                     __end_of_getEv:
 39983                           	callstack 0
 39984                           
 39985 ;; *************** function _consumerEventCheckLen *****************
 39986 ;; Defined at:
 39987 ;;		line 248 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 39988 ;; Parameters:    Size  Location     Type
 39989 ;;  m               2   47[COMRAM] PTR struct Message
 39990 ;;		 -> poll@m(9), 
 39991 ;;  needed          1   49[COMRAM] unsigned char 
 39992 ;; Auto vars:     Size  Location     Type
 39993 ;;		None
 39994 ;; Return value:  Size  Location     Type
 39995 ;;                  1    wreg      enum E23340
 39996 ;; Registers used:
 39997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 39998 ;; Tracked objects:
 39999 ;;		On entry : 0/0
 40000 ;;		On exit  : 0/0
 40001 ;;		Unchanged: 0/0
 40002 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40003 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40006 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40007 ;;Total ram usage:        3 bytes
 40008 ;; Hardware stack levels used: 1
 40009 ;; Hardware stack levels required when called: 7
 40010 ;; This function calls:
 40011 ;;		_checkLen
 40012 ;; This function is called by:
 40013 ;;		_consumerProcessMessage
 40014 ;; This function uses a non-reentrant model
 40015 ;;
 40016                           
 40017                           	psect	text89
 40018   016580                     __ptext89:
 40019                           	callstack 0
 40020   016580                     _consumerEventCheckLen:
 40021                           	callstack 117
 40022                           
 40023                           ;../../VLCBlib_PIC/event_consumer_simple.c: 249:     return checkLen(m, needed, SERVICE_
      +                          ID_CONSUMER);
 40024                           
 40025                           ;incstack = 0
 40026   016580  C530  F52B         	movff	consumerEventCheckLen@m,checkLen@m
 40027   016584  C531  F52C         	movff	consumerEventCheckLen@m+1,checkLen@m+1
 40028   016588  C532  F52D         	movff	consumerEventCheckLen@needed,checkLen@needed
 40029   01658C  0E06               	movlw	6
 40030   01658E  6E2E               	movwf	checkLen@service^(0+1280),c
 40031   016590  ECC8  F0A7         	call	_checkLen	;wreg free
 40032   016594  0012               	return		;funcret
 40033   016596                     __end_of_consumerEventCheckLen:
 40034                           	callstack 0
 40035                           
 40036 ;; *************** function _checkLen *****************
 40037 ;; Defined at:
 40038 ;;		line 1108 in file "../../VLCBlib_PIC/vlcb.c"
 40039 ;; Parameters:    Size  Location     Type
 40040 ;;  m               2   42[COMRAM] PTR struct Message
 40041 ;;		 -> poll@m(9), 
 40042 ;;  needed          1   44[COMRAM] unsigned char 
 40043 ;;  service         1   45[COMRAM] unsigned char 
 40044 ;; Auto vars:     Size  Location     Type
 40045 ;;		None
 40046 ;; Return value:  Size  Location     Type
 40047 ;;                  1    wreg      enum E23340
 40048 ;; Registers used:
 40049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 40050 ;; Tracked objects:
 40051 ;;		On entry : 0/0
 40052 ;;		On exit  : 0/0
 40053 ;;		Unchanged: 0/0
 40054 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40055 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40058 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40059 ;;Total ram usage:        5 bytes
 40060 ;; Hardware stack levels used: 1
 40061 ;; Hardware stack levels required when called: 6
 40062 ;; This function calls:
 40063 ;;		_sendMessage5
 40064 ;; This function is called by:
 40065 ;;		_consumerEventCheckLen
 40066 ;;		_teachCheckLen
 40067 ;; This function uses a non-reentrant model
 40068 ;;
 40069                           
 40070                           	psect	text90
 40071   014F90                     __ptext90:
 40072                           	callstack 0
 40073   014F90                     _checkLen:
 40074                           	callstack 117
 40075                           
 40076                           ;../../VLCBlib_PIC/vlcb.c: 1109:     if (m->len < needed) {
 40077                           
 40078                           ;incstack = 0
 40079   014F90  C52B  F4D9         	movff	checkLen@m,fsr2l
 40080   014F94  C52C  F4DA         	movff	checkLen@m+1,fsr2h
 40081   014F98  502D               	movf	checkLen@needed^(0+1280),w,c
 40082   014F9A  5CDE               	subwf	postinc2,w,c
 40083   014F9C  B0D8               	btfsc	status,0,c
 40084   014F9E  D030               	goto	l9037
 40085                           
 40086                           ;../../VLCBlib_PIC/vlcb.c: 1111:         if (m->len > 2) {
 40087   014FA0  C52B  F4D9         	movff	checkLen@m,fsr2l
 40088   014FA4  C52C  F4DA         	movff	checkLen@m+1,fsr2h
 40089   014FA8  0E02               	movlw	2
 40090   014FAA  64DF               	cpfsgt	indf2,c
 40091   014FAC  D027               	goto	l9033
 40092                           
 40093                           ;../../VLCBlib_PIC/vlcb.c: 1112:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 40094   014FAE  EE20 F002          	lfsr	2,2
 40095   014FB2  502B               	movf	checkLen@m^(0+1280),w,c
 40096   014FB4  26D9               	addwf	fsr2l,f,c
 40097   014FB6  502C               	movf	(checkLen@m+1)^(0+1280),w,c
 40098   014FB8  22DA               	addwfc	fsr2h,f,c
 40099   014FBA  50DE               	movf	postinc2,w,c
 40100   014FBC  185F               	xorwf	(_nn+1)^(0+1280),w,c
 40101   014FBE  A4D8               	btfss	status,2,c
 40102   014FC0  D01D               	goto	l9033
 40103   014FC2  EE20 F003          	lfsr	2,3
 40104   014FC6  502B               	movf	checkLen@m^(0+1280),w,c
 40105   014FC8  26D9               	addwf	fsr2l,f,c
 40106   014FCA  502C               	movf	(checkLen@m+1)^(0+1280),w,c
 40107   014FCC  22DA               	addwfc	fsr2h,f,c
 40108   014FCE  505E               	movf	_nn^(0+1280),w,c
 40109   014FD0  18DE               	xorwf	postinc2,w,c
 40110   014FD2  A4D8               	btfss	status,2,c
 40111   014FD4  D013               	goto	l9033
 40112                           
 40113                           ;../../VLCBlib_PIC/vlcb.c: 1113:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, (uint8_t)(m->opc), service, CMDERR_INV_CMD);
 40114   014FD6  C55F  F525         	movff	_nn+1,sendMessage5@data1
 40115   014FDA  C55E  F526         	movff	_nn,sendMessage5@data2
 40116   014FDE  EE20 F001          	lfsr	2,1
 40117   014FE2  502B               	movf	checkLen@m^(0+1280),w,c
 40118   014FE4  26D9               	addwf	fsr2l,f,c
 40119   014FE6  502C               	movf	(checkLen@m+1)^(0+1280),w,c
 40120   014FE8  22DA               	addwfc	fsr2h,f,c
 40121   014FEA  50DF               	movf	indf2,w,c
 40122   014FEC  6E27               	movwf	sendMessage5@data3^(0+1280),c
 40123   014FEE  C52E  F528         	movff	checkLen@service,sendMessage5@data4
 40124   014FF2  0E01               	movlw	1
 40125   014FF4  6E29               	movwf	sendMessage5@data5^(0+1280),c
 40126   014FF6  0EAF               	movlw	175
 40127   014FF8  EC36  F0B1         	call	_sendMessage5
 40128   014FFC                     l9033:
 40129                           
 40130                           ;../../VLCBlib_PIC/vlcb.c: 1117:         return PROCESSED;
 40131   014FFC  0E01               	movlw	1
 40132   014FFE  0012               	return	
 40133   015000                     l9037:
 40134                           
 40135                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return NOT_PROCESSED;
 40136   015000  0E00               	movlw	0
 40137   015002  0012               	return		;funcret
 40138   015004                     __end_of_checkLen:
 40139                           	callstack 0
 40140                           
 40141 ;; *************** function _APP_processConsumedEvent *****************
 40142 ;; Defined at:
 40143 ;;		line 305 in file "../canpan3Events.c"
 40144 ;; Parameters:    Size  Location     Type
 40145 ;;  tableIndex      1    wreg     unsigned char 
 40146 ;;  m               2   23[COMRAM] PTR struct Message
 40147 ;;		 -> poll@m(9), 
 40148 ;; Auto vars:     Size  Location     Type
 40149 ;;  tableIndex      1   28[COMRAM] unsigned char 
 40150 ;;  ledNo           1   33[COMRAM] unsigned char 
 40151 ;;  onOff           1   32[COMRAM] unsigned char 
 40152 ;;  polarity        1   31[COMRAM] unsigned char 
 40153 ;;  flags           1   30[COMRAM] unsigned char 
 40154 ;;  ledMode         1   29[COMRAM] unsigned char 
 40155 ;; Return value:  Size  Location     Type
 40156 ;;                  1    wreg      enum E23290
 40157 ;; Registers used:
 40158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40159 ;; Tracked objects:
 40160 ;;		On entry : 0/0
 40161 ;;		On exit  : 0/0
 40162 ;;		Unchanged: 0/0
 40163 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40165 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40166 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40167 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40168 ;;Total ram usage:       11 bytes
 40169 ;; Hardware stack levels used: 1
 40170 ;; Hardware stack levels required when called: 5
 40171 ;; This function calls:
 40172 ;;		___awdiv
 40173 ;;		_doSoD
 40174 ;;		_getEVs
 40175 ;;		_setLedState
 40176 ;; This function is called by:
 40177 ;;		_consumerProcessMessage
 40178 ;; This function uses a non-reentrant model
 40179 ;;
 40180                           
 40181                           	psect	text91
 40182   012E96                     __ptext91:
 40183                           	callstack 0
 40184   012E96                     _APP_processConsumedEvent:
 40185                           	callstack 119
 40186                           
 40187                           ;incstack = 0
 40188                           ;APP_processConsumedEvent@tableIndex stored from wreg
 40189   012E96  6E1D               	movwf	APP_processConsumedEvent@tableIndex^(0+1280),c
 40190                           
 40191                           ;../canpan3Events.c: 306:     uint8_t onOff;;../canpan3Events.c: 307:     uint8_t ledMod
      +                          e;;../canpan3Events.c: 308:     uint8_t ledNo;;../canpan3Events.c: 309:     uint8_t flag
      +                          s;;../canpan3Events.c: 310:     uint8_t polarity;;../canpan3Events.c: 312:     onOff = !
      +                          (m->opc & 1);
 40192   012E98  EE20 F001          	lfsr	2,1
 40193   012E9C  5018               	movf	APP_processConsumedEvent@m^(0+1280),w,c
 40194   012E9E  26D9               	addwf	fsr2l,f,c
 40195   012EA0  5019               	movf	(APP_processConsumedEvent@m+1)^(0+1280),w,c
 40196   012EA2  22DA               	addwfc	fsr2h,f,c
 40197   012EA4  B0DF               	btfsc	indf2,0,c
 40198   012EA6  D002               	goto	u7010
 40199   012EA8  0E01               	movlw	1
 40200   012EAA  D001               	goto	u7020
 40201   012EAC                     u7010:
 40202   012EAC  0E00               	movlw	0
 40203   012EAE                     u7020:
 40204   012EAE  6E21               	movwf	APP_processConsumedEvent@onOff^(0+1280),c
 40205                           
 40206                           ;../canpan3Events.c: 313:     if (getEVs(tableIndex)) {
 40207   012EB0  501D               	movf	APP_processConsumedEvent@tableIndex^(0+1280),w,c
 40208   012EB2  EC48  F0A9         	call	_getEVs
 40209   012EB6  0900               	iorlw	0
 40210   012EB8  B4D8               	btfsc	status,2,c
 40211   012EBA  D002               	goto	l9203
 40212   012EBC                     u7030:
 40213                           
 40214                           ;../canpan3Events.c: 315:         return PROCESSED;
 40215   012EBC  0E01               	movlw	1
 40216   012EBE  0012               	return	
 40217   012EC0                     l9203:
 40218                           
 40219                           ;../canpan3Events.c: 317:     if (onOff && ((evs[0] & 2) == 2)) {
 40220   012EC0  5021               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 40221   012EC2  B4D8               	btfsc	status,2,c
 40222   012EC4  D004               	goto	l9209
 40223   012EC6  0106               	movlb	6	; () banked
 40224   012EC8  B371               	btfsc	_evs& (0+255),1,b
 40225                           
 40226                           ; BSR set to: 6
 40227                           ;../canpan3Events.c: 318:         doSoD();
 40228   012ECA  EC88  F0B1         	call	_doSoD	;wreg free
 40229   012ECE                     l9209:
 40230                           
 40231                           ;../canpan3Events.c: 321:     ledMode = evs[12];
 40232   012ECE  C67D  F51E         	movff	_evs+12,APP_processConsumedEvent@ledMode
 40233                           
 40234                           ;../canpan3Events.c: 322:     for (ledNo=0; ledNo<(4*8); ledNo++) {
 40235   012ED2  6A22               	clrf	APP_processConsumedEvent@ledNo^(0+1280),c
 40236   012ED4                     l9217:
 40237                           
 40238                           ;../canpan3Events.c: 323:         flags = evs[4 + ledNo/8] & (1 << (ledNo%8));
 40239   012ED4  C522  F501         	movff	APP_processConsumedEvent@ledNo,___awdiv@dividend
 40240   012ED8  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 40241   012EDA  0E00               	movlw	0
 40242   012EDC  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 40243   012EDE  0E08               	movlw	8
 40244   012EE0  6E03               	movwf	___awdiv@divisor^(0+1280),c
 40245   012EE2  EC9A  F0A5         	call	___awdiv	;wreg free
 40246   012EE6  0E75               	movlw	low (_evs+4)
 40247   012EE8  2401               	addwf	?___awdiv^(0+1280),w,c
 40248   012EEA  6ED9               	movwf	fsr2l,c
 40249   012EEC  0E06               	movlw	high (_evs+4)
 40250   012EEE  2002               	addwfc	(?___awdiv+1)^(0+1280),w,c
 40251   012EF0  6EDA               	movwf	fsr2h,c
 40252   012EF2  50DF               	movf	indf2,w,c
 40253   012EF4  6E1A               	movwf	??_APP_processConsumedEvent^(0+1280),c
 40254   012EF6  C522  F51B         	movff	APP_processConsumedEvent@ledNo,??_APP_processConsumedEvent+1
 40255   012EFA  0E07               	movlw	7
 40256   012EFC  161B               	andwf	(??_APP_processConsumedEvent+1)^(0+1280),f,c
 40257   012EFE  0E01               	movlw	1
 40258   012F00  6E1C               	movwf	(??_APP_processConsumedEvent+2)^(0+1280),c
 40259   012F02  2A1B               	incf	(??_APP_processConsumedEvent+1)^(0+1280),f,c
 40260   012F04  D002               	goto	u7064
 40261   012F06                     u7065:
 40262   012F06  90D8               	bcf	status,0,c
 40263   012F08  361C               	rlcf	(??_APP_processConsumedEvent+2)^(0+1280),f,c
 40264   012F0A                     u7064:
 40265   012F0A  2E1B               	decfsz	(??_APP_processConsumedEvent+1)^(0+1280),f,c
 40266   012F0C  D7FC               	goto	u7065
 40267   012F0E  501C               	movf	(??_APP_processConsumedEvent+2)^(0+1280),w,c
 40268   012F10  141A               	andwf	??_APP_processConsumedEvent^(0+1280),w,c
 40269   012F12  6E1F               	movwf	APP_processConsumedEvent@flags^(0+1280),c
 40270                           
 40271                           ;../canpan3Events.c: 324:         if (flags) {
 40272   012F14  501F               	movf	APP_processConsumedEvent@flags^(0+1280),w,c
 40273   012F16  B4D8               	btfsc	status,2,c
 40274   012F18  D08B               	goto	l9267
 40275                           
 40276                           ;../canpan3Events.c: 326:             polarity = evs[8 + ledNo/8]& (1 << (ledNo%8));
 40277   012F1A  C522  F501         	movff	APP_processConsumedEvent@ledNo,___awdiv@dividend
 40278   012F1E  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 40279   012F20  0E00               	movlw	0
 40280   012F22  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 40281   012F24  0E08               	movlw	8
 40282   012F26  6E03               	movwf	___awdiv@divisor^(0+1280),c
 40283   012F28  EC9A  F0A5         	call	___awdiv	;wreg free
 40284   012F2C  0E79               	movlw	low (_evs+8)
 40285   012F2E  2401               	addwf	?___awdiv^(0+1280),w,c
 40286   012F30  6ED9               	movwf	fsr2l,c
 40287   012F32  0E06               	movlw	high (_evs+8)
 40288   012F34  2002               	addwfc	(?___awdiv+1)^(0+1280),w,c
 40289   012F36  6EDA               	movwf	fsr2h,c
 40290   012F38  50DF               	movf	indf2,w,c
 40291   012F3A  6E1A               	movwf	??_APP_processConsumedEvent^(0+1280),c
 40292   012F3C  C522  F51B         	movff	APP_processConsumedEvent@ledNo,??_APP_processConsumedEvent+1
 40293   012F40  0E07               	movlw	7
 40294   012F42  161B               	andwf	(??_APP_processConsumedEvent+1)^(0+1280),f,c
 40295   012F44  0E01               	movlw	1
 40296   012F46  6E1C               	movwf	(??_APP_processConsumedEvent+2)^(0+1280),c
 40297   012F48  2A1B               	incf	(??_APP_processConsumedEvent+1)^(0+1280),f,c
 40298   012F4A  D002               	goto	u7084
 40299   012F4C                     u7085:
 40300   012F4C  90D8               	bcf	status,0,c
 40301   012F4E  361C               	rlcf	(??_APP_processConsumedEvent+2)^(0+1280),f,c
 40302   012F50                     u7084:
 40303   012F50  2E1B               	decfsz	(??_APP_processConsumedEvent+1)^(0+1280),f,c
 40304   012F52  D7FC               	goto	u7085
 40305   012F54  501C               	movf	(??_APP_processConsumedEvent+2)^(0+1280),w,c
 40306   012F56  141A               	andwf	??_APP_processConsumedEvent^(0+1280),w,c
 40307   012F58  6E20               	movwf	APP_processConsumedEvent@polarity^(0+1280),c
 40308                           
 40309                           ;../canpan3Events.c: 327:             switch(ledMode) {
 40310   012F5A  D05D               	goto	l9265
 40311   012F5C                     l9223:
 40312                           
 40313                           ;../canpan3Events.c: 329:                     if (polarity) {
 40314   012F5C  5020               	movf	APP_processConsumedEvent@polarity^(0+1280),w,c
 40315   012F5E  B4D8               	btfsc	status,2,c
 40316   012F60  D00F               	goto	l9231
 40317                           
 40318                           ;../canpan3Events.c: 331:                         if (onOff) {
 40319   012F62  5021               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 40320   012F64  B4D8               	btfsc	status,2,c
 40321   012F66  D006               	goto	l9229
 40322                           
 40323                           ;../canpan3Events.c: 332:                             setLedState(ledNo, CANPANLED_OFF);
 40324   012F68  0E01               	movlw	1
 40325   012F6A  6E11               	movwf	setLedState@state^(0+1280),c
 40326   012F6C  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 40327   012F6E  EC9F  F0AF         	call	_setLedState
 40328                           
 40329                           ;../canpan3Events.c: 333:                         } else {
 40330   012F72  D05E               	goto	l9267
 40331   012F74                     l9229:
 40332                           
 40333                           ;../canpan3Events.c: 334:                             setLedState(ledNo, CANPANLED_ON);
 40334   012F74  0E00               	movlw	0
 40335   012F76  6E11               	movwf	setLedState@state^(0+1280),c
 40336   012F78  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 40337   012F7A  EC9F  F0AF         	call	_setLedState
 40338   012F7E  D058               	goto	l9267
 40339   012F80                     l9231:
 40340                           
 40341                           ;../canpan3Events.c: 339:                         if (onOff) {
 40342   012F80  5021               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 40343   012F82  B4D8               	btfsc	status,2,c
 40344   012F84  D006               	goto	l9235
 40345                           
 40346                           ;../canpan3Events.c: 340:                             setLedState(ledNo, CANPANLED_ON);
 40347   012F86  0E00               	movlw	0
 40348   012F88  6E11               	movwf	setLedState@state^(0+1280),c
 40349   012F8A  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 40350   012F8C  EC9F  F0AF         	call	_setLedState
 40351                           
 40352                           ;../canpan3Events.c: 341:                         } else {
 40353   012F90  D04F               	goto	l9267
 40354   012F92                     l9235:
 40355                           
 40356                           ;../canpan3Events.c: 342:                             setLedState(ledNo, CANPANLED_OFF);
 40357   012F92  0E01               	movlw	1
 40358   012F94  6E11               	movwf	setLedState@state^(0+1280),c
 40359   012F96  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 40360   012F98  EC9F  F0AF         	call	_setLedState
 40361   012F9C  D049               	goto	l9267
 40362   012F9E                     l9237:
 40363                           
 40364                           ;../canpan3Events.c: 347:                     if (onOff) {
 40365   012F9E  5021               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 40366   012FA0  B4D8               	btfsc	status,2,c
 40367   012FA2  D046               	goto	l9267
 40368                           
 40369                           ;../canpan3Events.c: 348:                         if (polarity) {
 40370   012FA4  5020               	movf	APP_processConsumedEvent@polarity^(0+1280),w,c
 40371   012FA6  B4D8               	btfsc	status,2,c
 40372   012FA8  D006               	goto	l9243
 40373                           
 40374                           ;../canpan3Events.c: 349:                             setLedState(ledNo, CANPANLED_OFF);
 40375   012FAA  0E01               	movlw	1
 40376   012FAC  6E11               	movwf	setLedState@state^(0+1280),c
 40377   012FAE  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 40378   012FB0  EC9F  F0AF         	call	_setLedState
 40379                           
 40380                           ;../canpan3Events.c: 350:                         } else {
 40381   012FB4  D03D               	goto	l9267
 40382   012FB6                     l9243:
 40383                           
 40384                           ;../canpan3Events.c: 351:                             setLedState(ledNo, CANPANLED_ON);
 40385   012FB6  0E00               	movlw	0
 40386   012FB8  6E11               	movwf	setLedState@state^(0+1280),c
 40387   012FBA  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 40388   012FBC  EC9F  F0AF         	call	_setLedState
 40389   012FC0  D037               	goto	l9267
 40390   012FC2                     l9245:
 40391                           
 40392                           ;../canpan3Events.c: 356:                     if (!onOff) {
 40393   012FC2  5021               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 40394   012FC4  A4D8               	btfss	status,2,c
 40395   012FC6  D034               	goto	l9267
 40396                           
 40397                           ;../canpan3Events.c: 357:                         if (polarity) {
 40398   012FC8  5020               	movf	APP_processConsumedEvent@polarity^(0+1280),w,c
 40399   012FCA  B4D8               	btfsc	status,2,c
 40400   012FCC  D006               	goto	l9251
 40401                           
 40402                           ;../canpan3Events.c: 358:                             setLedState(ledNo, CANPANLED_ON);
 40403   012FCE  0E00               	movlw	0
 40404   012FD0  6E11               	movwf	setLedState@state^(0+1280),c
 40405   012FD2  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 40406   012FD4  EC9F  F0AF         	call	_setLedState
 40407                           
 40408                           ;../canpan3Events.c: 359:                         } else {
 40409   012FD8  D02B               	goto	l9267
 40410   012FDA                     l9251:
 40411                           
 40412                           ;../canpan3Events.c: 360:                             setLedState(ledNo, CANPANLED_OFF);
 40413   012FDA  0E01               	movlw	1
 40414   012FDC  6E11               	movwf	setLedState@state^(0+1280),c
 40415   012FDE  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 40416   012FE0  EC9F  F0AF         	call	_setLedState
 40417   012FE4  D025               	goto	l9267
 40418   012FE6                     l9253:
 40419                           
 40420                           ;../canpan3Events.c: 365:                     if (onOff) {
 40421   012FE6  5021               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 40422   012FE8  B4D8               	btfsc	status,2,c
 40423   012FEA  D00F               	goto	l9261
 40424                           
 40425                           ;../canpan3Events.c: 366:                         if (polarity) {
 40426   012FEC  5020               	movf	APP_processConsumedEvent@polarity^(0+1280),w,c
 40427   012FEE  B4D8               	btfsc	status,2,c
 40428   012FF0  D006               	goto	l9259
 40429                           
 40430                           ;../canpan3Events.c: 367:                             setLedState(ledNo, CANPANLED_ANTIF
      +                          LASH);
 40431   012FF2  0E03               	movlw	3
 40432   012FF4  6E11               	movwf	setLedState@state^(0+1280),c
 40433   012FF6  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 40434   012FF8  EC9F  F0AF         	call	_setLedState
 40435                           
 40436                           ;../canpan3Events.c: 368:                         } else {
 40437   012FFC  D019               	goto	l9267
 40438   012FFE                     l9259:
 40439                           
 40440                           ;../canpan3Events.c: 369:                             setLedState(ledNo, CANPANLED_FLASH
      +                          );
 40441   012FFE  0E02               	movlw	2
 40442   013000  6E11               	movwf	setLedState@state^(0+1280),c
 40443   013002  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 40444   013004  EC9F  F0AF         	call	_setLedState
 40445   013008  D013               	goto	l9267
 40446   01300A                     l9261:
 40447                           
 40448                           ;../canpan3Events.c: 372:                         setLedState(ledNo, CANPANLED_OFF);
 40449   01300A  0E01               	movlw	1
 40450   01300C  6E11               	movwf	setLedState@state^(0+1280),c
 40451   01300E  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 40452   013010  EC9F  F0AF         	call	_setLedState
 40453   013014  D00D               	goto	l9267
 40454   013016                     l9265:
 40455   013016  501E               	movf	APP_processConsumedEvent@ledMode^(0+1280),w,c
 40456                           
 40457                           ; Switch size 1, requested type "simple"
 40458                           ; Number of cases is 4, Range of values is 248 to 255
 40459                           ; switch strategies available:
 40460                           ; Name         Instructions Cycles
 40461                           ; simple_byte           13     7 (average)
 40462                           ;	Chosen strategy is simple_byte
 40463   013018  0AF8               	xorlw	248	; case 248
 40464   01301A  B4D8               	btfsc	status,2,c
 40465   01301C  D7E4               	goto	l9253
 40466   01301E  0A05               	xorlw	5	; case 253
 40467   013020  B4D8               	btfsc	status,2,c
 40468   013022  D7CF               	goto	l9245
 40469   013024  0A03               	xorlw	3	; case 254
 40470   013026  B4D8               	btfsc	status,2,c
 40471   013028  D7BA               	goto	l9237
 40472   01302A  0A01               	xorlw	1	; case 255
 40473   01302C  B4D8               	btfsc	status,2,c
 40474   01302E  D796               	goto	l9223
 40475   013030                     l9267:
 40476                           
 40477                           ;../canpan3Events.c: 377:     }
 40478   013030  2A22               	incf	APP_processConsumedEvent@ledNo^(0+1280),f,c
 40479   013032  0E1F               	movlw	31
 40480   013034  6422               	cpfsgt	APP_processConsumedEvent@ledNo^(0+1280),c
 40481   013036  D74E               	goto	l9217
 40482   013038  D741               	goto	u7030
 40483   01303A                     __end_of_APP_processConsumedEvent:
 40484                           	callstack 0
 40485                           
 40486 ;; *************** function _setLedState *****************
 40487 ;; Defined at:
 40488 ;;		line 99 in file "../canpan3Leds.c"
 40489 ;; Parameters:    Size  Location     Type
 40490 ;;  ledNo           1    wreg     unsigned char 
 40491 ;;  state           1   16[COMRAM] enum E23465
 40492 ;; Auto vars:     Size  Location     Type
 40493 ;;  ledNo           1   19[COMRAM] unsigned char 
 40494 ;; Return value:  Size  Location     Type
 40495 ;;                  1    wreg      void 
 40496 ;; Registers used:
 40497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40498 ;; Tracked objects:
 40499 ;;		On entry : 0/0
 40500 ;;		On exit  : 0/0
 40501 ;;		Unchanged: 0/0
 40502 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40503 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40504 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40505 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40506 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40507 ;;Total ram usage:        4 bytes
 40508 ;; Hardware stack levels used: 1
 40509 ;; Hardware stack levels required when called: 4
 40510 ;; This function calls:
 40511 ;;		_EEPROM_WriteNoVerify
 40512 ;;		_setLedStateNoSave
 40513 ;; This function is called by:
 40514 ;;		_APP_processConsumedEvent
 40515 ;; This function uses a non-reentrant model
 40516 ;;
 40517                           
 40518                           	psect	text92
 40519   015F3E                     __ptext92:
 40520                           	callstack 0
 40521   015F3E                     _setLedState:
 40522                           	callstack 119
 40523                           
 40524                           ;incstack = 0
 40525                           ;setLedState@ledNo stored from wreg
 40526   015F3E  6E14               	movwf	setLedState@ledNo^(0+1280),c
 40527                           
 40528                           ;../canpan3Leds.c: 100:     setLedStateNoSave(ledNo, state);
 40529   015F40  C511  F50D         	movff	setLedState@state,setLedStateNoSave@state
 40530   015F44  5014               	movf	setLedState@ledNo^(0+1280),w,c
 40531   015F46  EC25  F0AC         	call	_setLedStateNoSave
 40532                           
 40533                           ;../canpan3Leds.c: 101:     if (startupNv & 0x02) {
 40534   015F4A  0105               	movlb	5	; () banked
 40535   015F4C  A398               	btfss	_startupNv& (0+255),1,b
 40536   015F4E  0012               	return	
 40537                           
 40538                           ; BSR set to: 5
 40539                           ;../canpan3Leds.c: 102:         EEPROM_WriteNoVerify(0x0040 +ledNo, (uint8_t)state);
 40540   015F50  5014               	movf	setLedState@ledNo^(0+1280),w,c
 40541   015F52  6E12               	movwf	??_setLedState^(0+1280),c
 40542   015F54  6A13               	clrf	(??_setLedState+1)^(0+1280),c
 40543   015F56  0E40               	movlw	64
 40544   015F58  2612               	addwf	??_setLedState^(0+1280),f,c
 40545   015F5A  0E00               	movlw	0
 40546   015F5C  2213               	addwfc	(??_setLedState+1)^(0+1280),f,c
 40547   015F5E  C512  F501         	movff	??_setLedState,EEPROM_WriteNoVerify@index
 40548   015F62  C513  F502         	movff	??_setLedState+1,EEPROM_WriteNoVerify@index+1
 40549   015F66  6A03               	clrf	(EEPROM_WriteNoVerify@index+2)^(0+1280),c
 40550   015F68  BE02               	btfsc	(EEPROM_WriteNoVerify@index+1)^(0+1280),7,c
 40551   015F6A  0603               	decf	(EEPROM_WriteNoVerify@index+2)^(0+1280),f,c
 40552   015F6C  C511  F504         	movff	setLedState@state,EEPROM_WriteNoVerify@value
 40553   015F70  ECF8  F0AC         	call	_EEPROM_WriteNoVerify	;wreg free
 40554   015F74  0012               	return		;funcret
 40555   015F76                     __end_of_setLedState:
 40556                           	callstack 0
 40557                           
 40558 ;; *************** function _setLedStateNoSave *****************
 40559 ;; Defined at:
 40560 ;;		line 78 in file "../canpan3Leds.c"
 40561 ;; Parameters:    Size  Location     Type
 40562 ;;  ledNo           1    wreg     unsigned char 
 40563 ;;  state           1   12[COMRAM] enum E23465
 40564 ;; Auto vars:     Size  Location     Type
 40565 ;;  ledNo           1   15[COMRAM] unsigned char 
 40566 ;; Return value:  Size  Location     Type
 40567 ;;                  1    wreg      void 
 40568 ;; Registers used:
 40569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40570 ;; Tracked objects:
 40571 ;;		On entry : 0/0
 40572 ;;		On exit  : 0/0
 40573 ;;		Unchanged: 0/0
 40574 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40575 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40578 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40579 ;;Total ram usage:        4 bytes
 40580 ;; Hardware stack levels used: 1
 40581 ;; Hardware stack levels required when called: 3
 40582 ;; This function calls:
 40583 ;;		_clearLed
 40584 ;;		_setLed
 40585 ;; This function is called by:
 40586 ;;		_initLeds
 40587 ;;		_setLedState
 40588 ;; This function uses a non-reentrant model
 40589 ;;
 40590                           
 40591                           	psect	text93
 40592   01584A                     __ptext93:
 40593                           	callstack 0
 40594   01584A                     _setLedStateNoSave:
 40595                           	callstack 121
 40596                           
 40597                           ;incstack = 0
 40598                           ;setLedStateNoSave@ledNo stored from wreg
 40599   01584A  6E10               	movwf	setLedStateNoSave@ledNo^(0+1280),c
 40600                           
 40601                           ;../canpan3Leds.c: 79:     ledStates[ledNo] = state;
 40602   01584C  0E21               	movlw	low _ledStates
 40603   01584E  2410               	addwf	setLedStateNoSave@ledNo^(0+1280),w,c
 40604   015850  6ED9               	movwf	fsr2l,c
 40605   015852  6ADA               	clrf	fsr2h,c
 40606   015854  0E06               	movlw	high _ledStates
 40607   015856  22DA               	addwfc	fsr2h,f,c
 40608   015858  C50D  F4DF         	movff	setLedStateNoSave@state,indf2
 40609                           
 40610                           ;../canpan3Leds.c: 80:     switch (ledStates[ledNo]) {
 40611   01585C  D008               	goto	l8877
 40612   01585E                     l8871:
 40613                           
 40614                           ;../canpan3Leds.c: 82:             setLed(ledNo);
 40615   01585E  5010               	movf	setLedStateNoSave@ledNo^(0+1280),w,c
 40616   015860  ECEF  F0AE         	call	_setLed
 40617                           
 40618                           ;../canpan3Leds.c: 83:             break;
 40619   015864  0012               	return	
 40620   015866                     l8873:
 40621                           
 40622                           ;../canpan3Leds.c: 85:             clearLed(ledNo);
 40623   015866  5010               	movf	setLedStateNoSave@ledNo^(0+1280),w,c
 40624   015868  EC6E  F0AE         	call	_clearLed
 40625                           
 40626                           ;../canpan3Leds.c: 86:             break;
 40627   01586C  0012               	return	
 40628   01586E                     l8877:
 40629   01586E  0E21               	movlw	low _ledStates
 40630   015870  2410               	addwf	setLedStateNoSave@ledNo^(0+1280),w,c
 40631   015872  6ED9               	movwf	fsr2l,c
 40632   015874  6ADA               	clrf	fsr2h,c
 40633   015876  0E06               	movlw	high _ledStates
 40634   015878  22DA               	addwfc	fsr2h,f,c
 40635   01587A  50DF               	movf	indf2,w,c
 40636   01587C  6E0E               	movwf	??_setLedStateNoSave^(0+1280),c
 40637   01587E  6A0F               	clrf	(??_setLedStateNoSave+1)^(0+1280),c
 40638                           
 40639                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40640                           ; Switch size 1, requested type "simple"
 40641                           ; Number of cases is 1, Range of values is 0 to 0
 40642                           ; switch strategies available:
 40643                           ; Name         Instructions Cycles
 40644                           ; simple_byte            4     3 (average)
 40645                           ;	Chosen strategy is simple_byte
 40646   015880  500F               	movf	(??_setLedStateNoSave+1)^(0+1280),w,c
 40647   015882  0A00               	xorlw	0	; case 0
 40648   015884  A4D8               	btfss	status,2,c
 40649   015886  0012               	return	
 40650                           
 40651                           ; Switch size 1, requested type "simple"
 40652                           ; Number of cases is 4, Range of values is 0 to 3
 40653                           ; switch strategies available:
 40654                           ; Name         Instructions Cycles
 40655                           ; simple_byte           13     7 (average)
 40656                           ;	Chosen strategy is simple_byte
 40657   015888  500E               	movf	??_setLedStateNoSave^(0+1280),w,c
 40658   01588A  0A00               	xorlw	0	; case 0
 40659   01588C  B4D8               	btfsc	status,2,c
 40660   01588E  D7E7               	goto	l8871
 40661   015890  0A01               	xorlw	1	; case 1
 40662   015892  B4D8               	btfsc	status,2,c
 40663   015894  D7E8               	goto	l8873
 40664   015896  0A03               	xorlw	3	; case 2
 40665   015898  B4D8               	btfsc	status,2,c
 40666   01589A  0012               	return	
 40667   01589C  0A01               	xorlw	1	; case 3
 40668   01589E  0012               	return	
 40669   0158A0                     __end_of_setLedStateNoSave:
 40670                           	callstack 0
 40671                           
 40672 ;; *************** function _doSoD *****************
 40673 ;; Defined at:
 40674 ;;		line 320 in file "../canpan3Inputs.c"
 40675 ;; Parameters:    Size  Location     Type
 40676 ;;		None
 40677 ;; Auto vars:     Size  Location     Type
 40678 ;;		None
 40679 ;; Return value:  Size  Location     Type
 40680 ;;                  1    wreg      void 
 40681 ;; Registers used:
 40682 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40683 ;; Tracked objects:
 40684 ;;		On entry : 0/0
 40685 ;;		On exit  : 0/0
 40686 ;;		Unchanged: 0/0
 40687 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40692 ;;Total ram usage:        0 bytes
 40693 ;; Hardware stack levels used: 1
 40694 ;; Hardware stack levels required when called: 2
 40695 ;; This function calls:
 40696 ;;		_findServiceIndex
 40697 ;;		_startTimedResponse
 40698 ;;		_timedResponseInProgress
 40699 ;; This function is called by:
 40700 ;;		_APP_processConsumedEvent
 40701 ;; This function uses a non-reentrant model
 40702 ;;
 40703                           
 40704                           	psect	text94
 40705   016310                     __ptext94:
 40706                           	callstack 0
 40707   016310                     _doSoD:
 40708                           	callstack 121
 40709                           
 40710                           ;../canpan3Inputs.c: 321:     if (!timedResponseInProgress()) {
 40711                           
 40712                           ;incstack = 0
 40713   016310  ECEC  F0B2         	call	_timedResponseInProgress	;wreg free
 40714   016314  0900               	iorlw	0
 40715   016316  A4D8               	btfss	status,2,c
 40716   016318  0012               	return	
 40717                           
 40718                           ;../canpan3Inputs.c: 322:         startTimedResponse(1, findServiceIndex(SERVICE_ID_PROD
      +                          UCER), sodTRCallback);
 40719   01631A  0E05               	movlw	5
 40720   01631C  EC02  F0A8         	call	_findServiceIndex
 40721   016320  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 40722   016322  0E06               	movlw	low _sodTRCallback
 40723   016324  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 40724   016326  0E5F               	movlw	high _sodTRCallback
 40725   016328  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 40726   01632A  0E01               	movlw	low (_sodTRCallback shr (0+16))
 40727   01632C  6E08               	movwf	(startTimedResponse@callback+2)^(0+1280),c
 40728   01632E  0E01               	movlw	1
 40729   016330  ECD0  F0AE         	call	_startTimedResponse
 40730   016334  0012               	return		;funcret
 40731   016336                     __end_of_doSoD:
 40732                           	callstack 0
 40733                           
 40734 ;; *************** function _timedResponseInProgress *****************
 40735 ;; Defined at:
 40736 ;;		line 82 in file "../../VLCBlib_PIC/timedResponse.c"
 40737 ;; Parameters:    Size  Location     Type
 40738 ;;		None
 40739 ;; Auto vars:     Size  Location     Type
 40740 ;;		None
 40741 ;; Return value:  Size  Location     Type
 40742 ;;                  1    wreg      unsigned char 
 40743 ;; Registers used:
 40744 ;;		wreg, status,2, status,0
 40745 ;; Tracked objects:
 40746 ;;		On entry : 0/0
 40747 ;;		On exit  : 0/0
 40748 ;;		Unchanged: 0/0
 40749 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40754 ;;Total ram usage:        0 bytes
 40755 ;; Hardware stack levels used: 1
 40756 ;; Hardware stack levels required when called: 1
 40757 ;; This function calls:
 40758 ;;		Nothing
 40759 ;; This function is called by:
 40760 ;;		_doSoD
 40761 ;; This function uses a non-reentrant model
 40762 ;;
 40763                           
 40764                           	psect	text95
 40765   0165D8                     __ptext95:
 40766                           	callstack 0
 40767   0165D8                     _timedResponseInProgress:
 40768                           	callstack 121
 40769                           
 40770                           ;../../VLCBlib_PIC/timedResponse.c: 83:     return timedResponseType != 0xFF;
 40771                           
 40772                           ;incstack = 0
 40773   0165D8  0105               	movlb	5	; () banked
 40774   0165DA  2985               	incf	_timedResponseType& (0+255),w,b
 40775   0165DC  B4D8               	btfsc	status,2,c
 40776   0165DE  D002               	goto	u6460
 40777   0165E0  0E01               	movlw	1
 40778   0165E2  0012               	return	
 40779   0165E4                     u6460:
 40780   0165E4  0E00               	movlw	0
 40781                           
 40782                           ; BSR set to: 5
 40783   0165E6  0012               	return		;funcret
 40784   0165E8                     __end_of_timedResponseInProgress:
 40785                           	callstack 0
 40786                           
 40787 ;; *************** function _startTimedResponse *****************
 40788 ;; Defined at:
 40789 ;;		line 93 in file "../../VLCBlib_PIC/timedResponse.c"
 40790 ;; Parameters:    Size  Location     Type
 40791 ;;  type            1    wreg     unsigned char 
 40792 ;;  serviceIndex    1    4[COMRAM] unsigned char 
 40793 ;;  callback        3    5[COMRAM] PTR FTN(unsigned char ,u
 40794 ;;		 -> nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), 
 40795 ;;		 -> reqevCallback(1), nerdCallback(1), sodTRCallback(1), 
 40796 ;; Auto vars:     Size  Location     Type
 40797 ;;  type            1    8[COMRAM] unsigned char 
 40798 ;; Return value:  Size  Location     Type
 40799 ;;                  1    wreg      void 
 40800 ;; Registers used:
 40801 ;;		wreg, status,2, status,0
 40802 ;; Tracked objects:
 40803 ;;		On entry : 0/0
 40804 ;;		On exit  : 0/0
 40805 ;;		Unchanged: 0/0
 40806 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40810 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40811 ;;Total ram usage:        5 bytes
 40812 ;; Hardware stack levels used: 1
 40813 ;; Hardware stack levels required when called: 1
 40814 ;; This function calls:
 40815 ;;		Nothing
 40816 ;; This function is called by:
 40817 ;;		_doSoD
 40818 ;;		_doNerd
 40819 ;;		_doReval
 40820 ;;		_doReqev
 40821 ;;		_mnsProcessMessage
 40822 ;;		_nvProcessMessage
 40823 ;; This function uses a non-reentrant model
 40824 ;;
 40825                           
 40826                           	psect	text96
 40827   015DA0                     __ptext96:
 40828                           	callstack 0
 40829   015DA0                     _startTimedResponse:
 40830                           	callstack 122
 40831                           
 40832                           ; BSR set to: 5
 40833                           ;incstack = 0
 40834                           ;startTimedResponse@type stored from wreg
 40835   015DA0  6E09               	movwf	startTimedResponse@type^(0+1280),c
 40836                           
 40837                           ;../../VLCBlib_PIC/timedResponse.c: 94:     timedResponseType = type;
 40838   015DA2  C509  F585         	movff	startTimedResponse@type,_timedResponseType
 40839                           
 40840                           ;../../VLCBlib_PIC/timedResponse.c: 95:     if (serviceIndex == 0) {
 40841   015DA6  5005               	movf	startTimedResponse@serviceIndex^(0+1280),w,c
 40842   015DA8  A4D8               	btfss	status,2,c
 40843   015DAA  D005               	goto	l2113
 40844                           
 40845                           ;../../VLCBlib_PIC/timedResponse.c: 97:         timedResponseAllServicesFlag = 1;
 40846   015DAC  0E01               	movlw	1
 40847   015DAE  0105               	movlb	5	; () banked
 40848   015DB0  6F86               	movwf	_timedResponseAllServicesFlag& (0+255),b
 40849                           
 40850                           ; BSR set to: 5
 40851                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = 0;
 40852   015DB2  6B87               	clrf	_timedResponseServiceIndex& (0+255),b
 40853                           
 40854                           ;../../VLCBlib_PIC/timedResponse.c: 99:     } else {
 40855   015DB4  D00C               	goto	l8831
 40856   015DB6                     l2113:
 40857                           
 40858                           ;../../VLCBlib_PIC/timedResponse.c: 100:         timedResponseAllServicesFlag = 0;
 40859   015DB6  0105               	movlb	5	; () banked
 40860   015DB8  6B86               	clrf	_timedResponseAllServicesFlag& (0+255),b
 40861                           
 40862                           ; BSR set to: 5
 40863                           ;../../VLCBlib_PIC/timedResponse.c: 101:         if ((serviceIndex < 1) || (serviceIndex
      +                           > 8)) {
 40864   015DBA  5005               	movf	startTimedResponse@serviceIndex^(0+1280),w,c
 40865   015DBC  B4D8               	btfsc	status,2,c
 40866   015DBE  D003               	goto	u6530
 40867                           
 40868                           ; BSR set to: 5
 40869   015DC0  0E08               	movlw	8
 40870   015DC2  6405               	cpfsgt	startTimedResponse@serviceIndex^(0+1280),c
 40871   015DC4  D002               	goto	l8829
 40872   015DC6                     u6530:
 40873                           
 40874                           ; BSR set to: 5
 40875                           ;../../VLCBlib_PIC/timedResponse.c: 103:             timedResponseType = 0xFF;
 40876   015DC6  6985               	setf	_timedResponseType& (0+255),b
 40877                           
 40878                           ;../../VLCBlib_PIC/timedResponse.c: 104:             return;
 40879   015DC8  0012               	return	
 40880   015DCA                     l8829:
 40881                           
 40882                           ; BSR set to: 5
 40883                           ;../../VLCBlib_PIC/timedResponse.c: 106:         timedResponseServiceIndex = (uint8_t)se
      +                          rviceIndex-1;
 40884   015DCA  0405               	decf	startTimedResponse@serviceIndex^(0+1280),w,c
 40885   015DCC  6F87               	movwf	_timedResponseServiceIndex& (0+255),b
 40886   015DCE                     l8831:
 40887                           
 40888                           ; BSR set to: 5
 40889                           ;../../VLCBlib_PIC/timedResponse.c: 108:     timedResponseStep = 0;
 40890   015DCE  6B84               	clrf	_timedResponseStep& (0+255),b
 40891                           
 40892                           ;../../VLCBlib_PIC/timedResponse.c: 109:     timedResponseCallback = callback;
 40893   015DD0  C506  F574         	movff	startTimedResponse@callback,_timedResponseCallback
 40894   015DD4  C507  F575         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 40895   015DD8  C508  F576         	movff	startTimedResponse@callback+2,_timedResponseCallback+2
 40896                           
 40897                           ; BSR set to: 5
 40898   015DDC  0012               	return		;funcret
 40899   015DDE                     __end_of_startTimedResponse:
 40900                           	callstack 0
 40901                           
 40902 ;; *************** function _findServiceIndex *****************
 40903 ;; Defined at:
 40904 ;;		line 833 in file "../../VLCBlib_PIC/vlcb.c"
 40905 ;; Parameters:    Size  Location     Type
 40906 ;;  serviceType     1    wreg     unsigned char 
 40907 ;; Auto vars:     Size  Location     Type
 40908 ;;  serviceType     1    2[COMRAM] unsigned char 
 40909 ;;  i               1    3[COMRAM] unsigned char 
 40910 ;; Return value:  Size  Location     Type
 40911 ;;                  1    wreg      unsigned char 
 40912 ;; Registers used:
 40913 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 40914 ;; Tracked objects:
 40915 ;;		On entry : 0/0
 40916 ;;		On exit  : 0/0
 40917 ;;		Unchanged: 0/0
 40918 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40920 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40921 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40922 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40923 ;;Total ram usage:        4 bytes
 40924 ;; Hardware stack levels used: 1
 40925 ;; Hardware stack levels required when called: 1
 40926 ;; This function calls:
 40927 ;;		Nothing
 40928 ;; This function is called by:
 40929 ;;		_doSoD
 40930 ;;		_doNerd
 40931 ;;		_doReval
 40932 ;;		_doReqev
 40933 ;;		_mnsProcessMessage
 40934 ;;		_nvProcessMessage
 40935 ;; This function uses a non-reentrant model
 40936 ;;
 40937                           
 40938                           	psect	text97
 40939   015004                     __ptext97:
 40940                           	callstack 0
 40941   015004                     _findServiceIndex:
 40942                           	callstack 122
 40943                           
 40944                           ; BSR set to: 5
 40945                           ;incstack = 0
 40946                           ;findServiceIndex@serviceType stored from wreg
 40947   015004  6E03               	movwf	findServiceIndex@serviceType^(0+1280),c
 40948                           
 40949                           ;../../VLCBlib_PIC/vlcb.c: 834:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 835:     for (i
      +                          =0; i<8; i++) {
 40950   015006  6A04               	clrf	findServiceIndex@i^(0+1280),c
 40951   015008                     l8801:
 40952                           
 40953                           ;../../VLCBlib_PIC/vlcb.c: 836:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 40954   015008  5004               	movf	findServiceIndex@i^(0+1280),w,c
 40955   01500A  0D02               	mullw	2
 40956   01500C  0E39               	movlw	low _services
 40957   01500E  24F3               	addwf	243,w,c
 40958   015010  6EF6               	movwf	tblptrl,c
 40959   015012  0EFF               	movlw	high _services
 40960   015014  20F4               	addwfc	244,w,c
 40961   015016  6EF7               	movwf	tblptrh,c
 40962   015018                     	if	1	;There are 3 active tblptr bytes
 40963   015018  6AF8               	clrf	tblptru,c
 40964   01501A  0E00               	movlw	low (__pmediumconst shr (0+16))
 40965   01501C  22F8               	addwfc	tblptru,f,c
 40966   01501E                     	endif
 40967   01501E  0009               	tblrd		*+
 40968   015020  50F5               	movf	tablat,w,c
 40969   015022  0009               	tblrd		*+
 40970   015024  10F5               	iorwf	tablat,w,c
 40971   015026  B4D8               	btfsc	status,2,c
 40972   015028  D01E               	goto	l8809
 40973   01502A  5004               	movf	findServiceIndex@i^(0+1280),w,c
 40974   01502C  0D02               	mullw	2
 40975   01502E  0E39               	movlw	low _services
 40976   015030  24F3               	addwf	243,w,c
 40977   015032  6EF6               	movwf	tblptrl,c
 40978   015034  0EFF               	movlw	high _services
 40979   015036  20F4               	addwfc	244,w,c
 40980   015038  6EF7               	movwf	tblptrh,c
 40981   01503A                     	if	1	;There are 3 active tblptr bytes
 40982   01503A  6AF8               	clrf	tblptru,c
 40983   01503C  0E00               	movlw	low (__pmediumconst shr (0+16))
 40984   01503E  22F8               	addwfc	tblptru,f,c
 40985   015040                     	endif
 40986   015040  0009               	tblrd		*+
 40987   015042  C4F5 F501          	movff	tablat,??_findServiceIndex
 40988   015046  0009               	tblrd		*+
 40989   015048  C4F5 F502          	movff	tablat,??_findServiceIndex+1
 40990   01504C  C501  F4F6         	movff	??_findServiceIndex,tblptrl
 40991   015050  C502  F4F7         	movff	??_findServiceIndex+1,tblptrh
 40992   015054                     	if	0	;tblptru may be non-zero
 40993   015054                     	endif
 40994   015054                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 40995   015054  0E00               	movlw	low (__pmediumconst shr (0+16))
 40996   015056  6EF8               	movwf	tblptru,c
 40997   015058                     	endif
 40998   015058  0008               	tblrd		*
 40999   01505A  50F5               	movf	tablat,w,c
 41000   01505C  1803               	xorwf	findServiceIndex@serviceType^(0+1280),w,c
 41001   01505E  A4D8               	btfss	status,2,c
 41002   015060  D002               	goto	l8809
 41003                           
 41004                           ;../../VLCBlib_PIC/vlcb.c: 837:             return i;
 41005   015062  5004               	movf	findServiceIndex@i^(0+1280),w,c
 41006   015064  0012               	return	
 41007   015066                     l8809:
 41008                           
 41009                           ;../../VLCBlib_PIC/vlcb.c: 839:     }
 41010   015066  2A04               	incf	findServiceIndex@i^(0+1280),f,c
 41011   015068  0E07               	movlw	7
 41012   01506A  6404               	cpfsgt	findServiceIndex@i^(0+1280),c
 41013   01506C  D7CD               	goto	l8801
 41014                           
 41015                           ;../../VLCBlib_PIC/vlcb.c: 840:     return 0xFF;
 41016   01506E  0EFF               	movlw	255
 41017   015070  0012               	return		;funcret
 41018   015072                     __end_of_findServiceIndex:
 41019                           	callstack 0
 41020                           
 41021 ;; *************** function _APP_postProcessMessage *****************
 41022 ;; Defined at:
 41023 ;;		line 278 in file "../main.c"
 41024 ;; Parameters:    Size  Location     Type
 41025 ;;  m               2    0[COMRAM] PTR struct Message
 41026 ;;		 -> poll@m(9), 
 41027 ;; Auto vars:     Size  Location     Type
 41028 ;;		None
 41029 ;; Return value:  Size  Location     Type
 41030 ;;                  1    wreg      enum E23290
 41031 ;; Registers used:
 41032 ;;		wreg
 41033 ;; Tracked objects:
 41034 ;;		On entry : 0/0
 41035 ;;		On exit  : 0/0
 41036 ;;		Unchanged: 0/0
 41037 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41042 ;;Total ram usage:        2 bytes
 41043 ;; Hardware stack levels used: 1
 41044 ;; Hardware stack levels required when called: 1
 41045 ;; This function calls:
 41046 ;;		Nothing
 41047 ;; This function is called by:
 41048 ;;		_poll
 41049 ;; This function uses a non-reentrant model
 41050 ;;
 41051                           
 41052                           	psect	text98
 41053   01664C                     __ptext98:
 41054                           	callstack 0
 41055   01664C                     _APP_postProcessMessage:
 41056                           	callstack 124
 41057                           
 41058                           ;../main.c: 279:     return NOT_PROCESSED;
 41059                           
 41060                           ;incstack = 0
 41061   01664C  0E00               	movlw	0
 41062   01664E  0012               	return		;funcret
 41063   016650                     __end_of_APP_postProcessMessage:
 41064                           	callstack 0
 41065                           
 41066 ;; *************** function _loop *****************
 41067 ;; Defined at:
 41068 ;;		line 235 in file "../main.c"
 41069 ;; Parameters:    Size  Location     Type
 41070 ;;		None
 41071 ;; Auto vars:     Size  Location     Type
 41072 ;;  tableIndex      1   68[COMRAM] unsigned char 
 41073 ;; Return value:  Size  Location     Type
 41074 ;;                  1    wreg      void 
 41075 ;; Registers used:
 41076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 41077 ;; Tracked objects:
 41078 ;;		On entry : 0/0
 41079 ;;		On exit  : 0/0
 41080 ;;		Unchanged: 0/0
 41081 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41084 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41085 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41086 ;;Total ram usage:        9 bytes
 41087 ;; Hardware stack levels used: 1
 41088 ;; Hardware stack levels required when called: 8
 41089 ;; This function calls:
 41090 ;;		___lldiv
 41091 ;;		___lmul
 41092 ;;		_canpanSendProducedEvent
 41093 ;;		_doFlash
 41094 ;;		_getNV
 41095 ;;		_inputScan
 41096 ;;		_pollOutputs
 41097 ;;		_tickGet
 41098 ;; This function is called by:
 41099 ;;		_main
 41100 ;; This function uses a non-reentrant model
 41101 ;;
 41102                           
 41103                           	psect	text99
 41104   01303A                     __ptext99:
 41105                           	callstack 0
 41106   01303A                     _loop:
 41107                           	callstack 118
 41108                           
 41109                           ;../main.c: 236:     uint8_t tableIndex;;../main.c: 239:     if (started == FALSE) {
 41110                           
 41111                           ;incstack = 0
 41112   01303A  0105               	movlb	5	; () banked
 41113   01303C  51A0               	movf	_started& (0+255),w,b
 41114   01303E  A4D8               	btfss	status,2,c
 41115   013040  D049               	goto	l12275
 41116                           
 41117                           ; BSR set to: 5
 41118                           ;../main.c: 240:         if ((tickGet() - startTime.val) > ((62500*2)+getNV(((3 +(8*4)) 
      +                          + (8*4)))*62500)) {
 41119   013042  EC50  F0AC         	call	_tickGet	;wreg free
 41120   013046  0105               	movlb	5	; () banked
 41121   013048  5170               	movf	_startTime& (0+255),w,b
 41122   01304A  5C01               	subwf	?_tickGet^(0+1280),w,c
 41123   01304C  6E3D               	movwf	??_loop^(0+1280),c
 41124   01304E  5171               	movf	(_startTime+1)& (0+255),w,b
 41125   013050  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 41126   013052  6E3E               	movwf	(??_loop+1)^(0+1280),c
 41127   013054  5172               	movf	(_startTime+2)& (0+255),w,b
 41128   013056  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 41129   013058  6E3F               	movwf	(??_loop+2)^(0+1280),c
 41130   01305A  5173               	movf	(_startTime+3)& (0+255),w,b
 41131   01305C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 41132   01305E  6E40               	movwf	(??_loop+3)^(0+1280),c
 41133   013060  0E43               	movlw	67
 41134   013062  EC49  F0AF         	call	_getNV
 41135   013066  C501  F505         	movff	?_getNV,___lmul@multiplier
 41136   01306A  C502  F506         	movff	?_getNV+1,___lmul@multiplier+1
 41137   01306E  0E00               	movlw	0
 41138   013070  BE06               	btfsc	(___lmul@multiplier+1)^(0+1280),7,c
 41139   013072  0EFF               	movlw	-1
 41140   013074  6E07               	movwf	(___lmul@multiplier+2)^(0+1280),c
 41141   013076  6E08               	movwf	(___lmul@multiplier+3)^(0+1280),c
 41142   013078  0E24               	movlw	36
 41143   01307A  6E09               	movwf	___lmul@multiplicand^(0+1280),c
 41144   01307C  0EF4               	movlw	244
 41145   01307E  6E0A               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 41146   013080  0E00               	movlw	0
 41147   013082  6E0B               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 41148   013084  0E00               	movlw	0
 41149   013086  6E0C               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 41150   013088  EC7B  F0AC         	call	___lmul	;wreg free
 41151   01308C  0E48               	movlw	72
 41152   01308E  2405               	addwf	?___lmul^(0+1280),w,c
 41153   013090  6E41               	movwf	(??_loop+4)^(0+1280),c
 41154   013092  0EE8               	movlw	232
 41155   013094  2006               	addwfc	(?___lmul+1)^(0+1280),w,c
 41156   013096  6E42               	movwf	(??_loop+5)^(0+1280),c
 41157   013098  0E01               	movlw	1
 41158   01309A  2007               	addwfc	(?___lmul+2)^(0+1280),w,c
 41159   01309C  6E43               	movwf	(??_loop+6)^(0+1280),c
 41160   01309E  0E00               	movlw	0
 41161   0130A0  2008               	addwfc	(?___lmul+3)^(0+1280),w,c
 41162   0130A2  6E44               	movwf	(??_loop+7)^(0+1280),c
 41163   0130A4  503D               	movf	??_loop^(0+1280),w,c
 41164   0130A6  5C41               	subwf	(??_loop+4)^(0+1280),w,c
 41165   0130A8  503E               	movf	(??_loop+1)^(0+1280),w,c
 41166   0130AA  5842               	subwfb	(??_loop+5)^(0+1280),w,c
 41167   0130AC  503F               	movf	(??_loop+2)^(0+1280),w,c
 41168   0130AE  5843               	subwfb	(??_loop+6)^(0+1280),w,c
 41169   0130B0  5040               	movf	(??_loop+3)^(0+1280),w,c
 41170   0130B2  5844               	subwfb	(??_loop+7)^(0+1280),w,c
 41171   0130B4  B0D8               	btfsc	status,0,c
 41172   0130B6  D031               	goto	l12281
 41173                           
 41174                           ;../main.c: 241:             started = TRUE;
 41175   0130B8  0E01               	movlw	1
 41176   0130BA  0105               	movlb	5	; () banked
 41177   0130BC  6FA0               	movwf	_started& (0+255),b
 41178                           
 41179                           ; BSR set to: 5
 41180                           ;../main.c: 242:             tableIndex = switch2Event[((8*4)+1)-1];
 41181   0130BE  C620  F545         	movff	_switch2Event+32,loop@tableIndex
 41182                           
 41183                           ; BSR set to: 5
 41184                           ;../main.c: 243:             if (tableIndex != 0xff) canpanSendProducedEvent(tableIndex,
      +                           TRUE);
 41185   0130C2  2845               	incf	loop@tableIndex^(0+1280),w,c
 41186   0130C4  B4D8               	btfsc	status,2,c
 41187   0130C6  D029               	goto	l12281
 41188                           
 41189                           ; BSR set to: 5
 41190   0130C8  0E01               	movlw	1
 41191   0130CA  6E2A               	movwf	canpanSendProducedEvent@onOff^(0+1280),c
 41192   0130CC  5045               	movf	loop@tableIndex^(0+1280),w,c
 41193   0130CE  EC1A  F0AA         	call	_canpanSendProducedEvent
 41194   0130D2  D023               	goto	l12281
 41195   0130D4                     l12275:
 41196                           
 41197                           ; BSR set to: 5
 41198                           ;../main.c: 246:         if ((tickGet() - lastInputScanTime.val) > 2*(62500/1000)) {
 41199   0130D4  EC50  F0AC         	call	_tickGet	;wreg free
 41200   0130D8  0105               	movlb	5	; () banked
 41201   0130DA  516C               	movf	_lastInputScanTime& (0+255),w,b
 41202   0130DC  5C01               	subwf	?_tickGet^(0+1280),w,c
 41203   0130DE  6E3D               	movwf	??_loop^(0+1280),c
 41204   0130E0  516D               	movf	(_lastInputScanTime+1)& (0+255),w,b
 41205   0130E2  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 41206   0130E4  6E3E               	movwf	(??_loop+1)^(0+1280),c
 41207   0130E6  516E               	movf	(_lastInputScanTime+2)& (0+255),w,b
 41208   0130E8  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 41209   0130EA  6E3F               	movwf	(??_loop+2)^(0+1280),c
 41210   0130EC  516F               	movf	(_lastInputScanTime+3)& (0+255),w,b
 41211   0130EE  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 41212   0130F0  6E40               	movwf	(??_loop+3)^(0+1280),c
 41213   0130F2  5040               	movf	(??_loop+3)^(0+1280),w,c
 41214   0130F4  103F               	iorwf	(??_loop+2)^(0+1280),w,c
 41215   0130F6  103E               	iorwf	(??_loop+1)^(0+1280),w,c
 41216   0130F8  E104               	bnz	u10590
 41217   0130FA  0E7D               	movlw	125
 41218   0130FC  5C3D               	subwf	??_loop^(0+1280),w,c
 41219   0130FE  A0D8               	btfss	status,0,c
 41220   013100  D00C               	goto	l12281
 41221   013102                     u10590:
 41222                           
 41223                           ; BSR set to: 5
 41224                           ;../main.c: 247:             inputScan();
 41225   013102  EC39  F08F         	call	_inputScan	;wreg free
 41226                           
 41227                           ;../main.c: 248:             lastInputScanTime.val = tickGet();
 41228   013106  EC50  F0AC         	call	_tickGet	;wreg free
 41229   01310A  C501  F56C         	movff	?_tickGet,_lastInputScanTime
 41230   01310E  C502  F56D         	movff	?_tickGet+1,_lastInputScanTime+1
 41231   013112  C503  F56E         	movff	?_tickGet+2,_lastInputScanTime+2
 41232   013116  C504  F56F         	movff	?_tickGet+3,_lastInputScanTime+3
 41233   01311A                     l12281:
 41234                           
 41235                           ;../main.c: 251:     if ((tickGet() - flashTime.val)/1000 > getNV(2)) {
 41236   01311A  0E02               	movlw	2
 41237   01311C  EC49  F0AF         	call	_getNV
 41238   013120  C501  F53D         	movff	?_getNV,??_loop
 41239   013124  C502  F53E         	movff	?_getNV+1,??_loop+1
 41240   013128  0E00               	movlw	0
 41241   01312A  BE3E               	btfsc	(??_loop+1)^(0+1280),7,c
 41242   01312C  0EFF               	movlw	255
 41243   01312E  6E3F               	movwf	(??_loop+2)^(0+1280),c
 41244   013130  6E40               	movwf	(??_loop+3)^(0+1280),c
 41245   013132  EC50  F0AC         	call	_tickGet	;wreg free
 41246   013136  0106               	movlb	6	; () banked
 41247   013138  519E               	movf	_flashTime& (0+255),w,b
 41248   01313A  5C01               	subwf	?_tickGet^(0+1280),w,c
 41249   01313C  6E0B               	movwf	___lldiv@dividend^(0+1280),c
 41250   01313E  519F               	movf	(_flashTime+1)& (0+255),w,b
 41251   013140  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 41252   013142  6E0C               	movwf	(___lldiv@dividend+1)^(0+1280),c
 41253   013144  51A0               	movf	(_flashTime+2)& (0+255),w,b
 41254   013146  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 41255   013148  6E0D               	movwf	(___lldiv@dividend+2)^(0+1280),c
 41256   01314A  51A1               	movf	(_flashTime+3)& (0+255),w,b
 41257   01314C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 41258   01314E  6E0E               	movwf	(___lldiv@dividend+3)^(0+1280),c
 41259   013150  0EE8               	movlw	232
 41260   013152  6E0F               	movwf	___lldiv@divisor^(0+1280),c
 41261   013154  0E03               	movlw	3
 41262   013156  6E10               	movwf	(___lldiv@divisor+1)^(0+1280),c
 41263   013158  0E00               	movlw	0
 41264   01315A  6E11               	movwf	(___lldiv@divisor+2)^(0+1280),c
 41265   01315C  0E00               	movlw	0
 41266   01315E  6E12               	movwf	(___lldiv@divisor+3)^(0+1280),c
 41267   013160  ECDB  F0A5         	call	___lldiv	;wreg free
 41268   013164  500B               	movf	?___lldiv^(0+1280),w,c
 41269   013166  5C3D               	subwf	??_loop^(0+1280),w,c
 41270   013168  500C               	movf	(?___lldiv+1)^(0+1280),w,c
 41271   01316A  583E               	subwfb	(??_loop+1)^(0+1280),w,c
 41272   01316C  500D               	movf	(?___lldiv+2)^(0+1280),w,c
 41273   01316E  583F               	subwfb	(??_loop+2)^(0+1280),w,c
 41274   013170  500E               	movf	(?___lldiv+3)^(0+1280),w,c
 41275   013172  5840               	subwfb	(??_loop+3)^(0+1280),w,c
 41276   013174  B0D8               	btfsc	status,0,c
 41277   013176  D00C               	goto	l12287
 41278                           
 41279                           ;../main.c: 252:         doFlash();
 41280   013178  EC59  F0A5         	call	_doFlash	;wreg free
 41281                           
 41282                           ;../main.c: 253:         flashTime.val = tickGet();
 41283   01317C  EC50  F0AC         	call	_tickGet	;wreg free
 41284   013180  C501  F69E         	movff	?_tickGet,_flashTime
 41285   013184  C502  F69F         	movff	?_tickGet+1,_flashTime+1
 41286   013188  C503  F6A0         	movff	?_tickGet+2,_flashTime+2
 41287   01318C  C504  F6A1         	movff	?_tickGet+3,_flashTime+3
 41288   013190                     l12287:
 41289                           
 41290                           ;../main.c: 256:     pollOutputs();
 41291   013190  EC93  F09F         	call	_pollOutputs	;wreg free
 41292   013194  0012               	return		;funcret
 41293   013196                     __end_of_loop:
 41294                           	callstack 0
 41295                           
 41296 ;; *************** function _pollOutputs *****************
 41297 ;; Defined at:
 41298 ;;		line 122 in file "../canpan3Outputs.c"
 41299 ;; Parameters:    Size  Location     Type
 41300 ;;		None
 41301 ;; Auto vars:     Size  Location     Type
 41302 ;;  i               1    8[COMRAM] unsigned char 
 41303 ;;  offset          1    7[COMRAM] unsigned char 
 41304 ;; Return value:  Size  Location     Type
 41305 ;;                  1    wreg      void 
 41306 ;; Registers used:
 41307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41308 ;; Tracked objects:
 41309 ;;		On entry : 0/0
 41310 ;;		On exit  : 0/0
 41311 ;;		Unchanged: 0/0
 41312 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41314 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41315 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41316 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41317 ;;Total ram usage:        5 bytes
 41318 ;; Hardware stack levels used: 1
 41319 ;; Hardware stack levels required when called: 2
 41320 ;; This function calls:
 41321 ;;		_getNV
 41322 ;; This function is called by:
 41323 ;;		_loop
 41324 ;; This function uses a non-reentrant model
 41325 ;;
 41326                           
 41327                           	psect	text100
 41328   013F26                     __ptext100:
 41329                           	callstack 0
 41330   013F26                     _pollOutputs:
 41331                           	callstack 123
 41332                           
 41333                           ;../canpan3Outputs.c: 124:     uint8_t i;;../canpan3Outputs.c: 125:     uint8_t offset;;
      +                          ../canpan3Outputs.c: 127:     if (brightness == 0) {
 41334                           
 41335                           ;incstack = 0
 41336   013F26  0105               	movlb	5	; () banked
 41337   013F28  519A               	movf	_brightness& (0+255),w,b
 41338   013F2A  A4D8               	btfss	status,2,c
 41339   013F2C  D031               	goto	l472
 41340                           
 41341                           ; BSR set to: 5
 41342                           ;../canpan3Outputs.c: 129:         current_row++;
 41343   013F2E  2B9C               	incf	_current_row& (0+255),f,b
 41344                           
 41345                           ; BSR set to: 5
 41346                           ;../canpan3Outputs.c: 130:         current_row &= 0x3;
 41347   013F30  0E03               	movlw	3
 41348   013F32  179C               	andwf	_current_row& (0+255),f,b
 41349                           
 41350                           ; BSR set to: 5
 41351                           ;../canpan3Outputs.c: 133:         LATCbits.LATC2 = 1;
 41352   013F34  84C0               	bsf	192,2,c	;volatile
 41353                           
 41354                           ; BSR set to: 5
 41355                           ;../canpan3Outputs.c: 135:         LATBbits.LATB4 = 0;
 41356   013F36  98BF               	bcf	191,4,c	;volatile
 41357                           
 41358                           ; BSR set to: 5
 41359                           ;../canpan3Outputs.c: 136:         LATBbits.LATB5 = 0;
 41360   013F38  9ABF               	bcf	191,5,c	;volatile
 41361                           
 41362                           ; BSR set to: 5
 41363                           ;../canpan3Outputs.c: 137:         LATCbits.LATC6 = 0;
 41364   013F3A  9CC0               	bcf	192,6,c	;volatile
 41365                           
 41366                           ; BSR set to: 5
 41367                           ;../canpan3Outputs.c: 138:         LATCbits.LATC7 = 0;
 41368   013F3C  9EC0               	bcf	192,7,c	;volatile
 41369                           
 41370                           ; BSR set to: 5
 41371                           ;../canpan3Outputs.c: 140:         cathodes = ledMatrix[current_row];
 41372   013F3E  0E68               	movlw	low _ledMatrix
 41373   013F40  259C               	addwf	_current_row& (0+255),w,b
 41374   013F42  6ED9               	movwf	fsr2l,c
 41375   013F44  6ADA               	clrf	fsr2h,c
 41376   013F46  0E05               	movlw	high _ledMatrix
 41377   013F48  22DA               	addwfc	fsr2h,f,c
 41378   013F4A  50DF               	movf	indf2,w,c
 41379   013F4C  6F9B               	movwf	_cathodes& (0+255),b
 41380                           
 41381                           ; BSR set to: 5
 41382                           ;../canpan3Outputs.c: 141:         SPI1TCNTH=0;
 41383   013F4E  0100               	movlb	0	; () banked
 41384   013F50  6B83               	clrf	131,b	;volatile
 41385                           
 41386                           ; BSR set to: 0
 41387                           ;../canpan3Outputs.c: 142:         SPI1TCNTL=1;
 41388   013F52  0E01               	movlw	1
 41389   013F54  6F82               	movwf	130,b	;volatile
 41390                           
 41391                           ; BSR set to: 0
 41392                           ;../canpan3Outputs.c: 143:         SPI1TWIDTH=0;
 41393   013F56  6B88               	clrf	136,b	;volatile
 41394                           
 41395                           ; BSR set to: 0
 41396                           ;../canpan3Outputs.c: 145:         SPI1TXB = cathodes;
 41397   013F58  C59B  F081         	movff	_cathodes,129	;volatile
 41398   013F5C                     l473:
 41399                           
 41400                           ; BSR set to: 0
 41401                           ;../canpan3Outputs.c: 150:         while (! SPI1STATUSbits.TXBE)
 41402   013F5C  BB87               	btfsc	135,5,b	;volatile
 41403   013F5E  D009               	goto	l11543
 41404   013F60  D7FD               	goto	l473
 41405   013F62                     l477:
 41406                           
 41407                           ; BSR set to: 5
 41408                           ;../canpan3Outputs.c: 159:                 LATBbits.LATB4 = 1;
 41409   013F62  88BF               	bsf	191,4,c	;volatile
 41410                           
 41411                           ;../canpan3Outputs.c: 160:                 break;
 41412   013F64  D045               	goto	u9880
 41413   013F66                     l479:
 41414                           
 41415                           ; BSR set to: 5
 41416                           ;../canpan3Outputs.c: 162:                 LATBbits.LATB5 = 1;
 41417   013F66  8ABF               	bsf	191,5,c	;volatile
 41418                           
 41419                           ;../canpan3Outputs.c: 163:                 break;
 41420   013F68  D043               	goto	u9880
 41421   013F6A                     l480:
 41422                           
 41423                           ; BSR set to: 5
 41424                           ;../canpan3Outputs.c: 165:                 LATCbits.LATC6 = 1;
 41425   013F6A  8CC0               	bsf	192,6,c	;volatile
 41426                           
 41427                           ;../canpan3Outputs.c: 166:                 break;
 41428   013F6C  D041               	goto	u9880
 41429   013F6E                     l481:
 41430                           
 41431                           ; BSR set to: 5
 41432                           ;../canpan3Outputs.c: 168:                 LATCbits.LATC7 = 1;
 41433   013F6E  8EC0               	bsf	192,7,c	;volatile
 41434                           
 41435                           ;../canpan3Outputs.c: 169:                 break;
 41436   013F70  D03F               	goto	u9880
 41437   013F72                     l11543:
 41438                           
 41439                           ; BSR set to: 0
 41440   013F72  0105               	movlb	5	; () banked
 41441   013F74  519C               	movf	_current_row& (0+255),w,b
 41442                           
 41443                           ; Switch size 1, requested type "simple"
 41444                           ; Number of cases is 4, Range of values is 0 to 3
 41445                           ; switch strategies available:
 41446                           ; Name         Instructions Cycles
 41447                           ; simple_byte           13     7 (average)
 41448                           ;	Chosen strategy is simple_byte
 41449   013F76  0A00               	xorlw	0	; case 0
 41450   013F78  B4D8               	btfsc	status,2,c
 41451   013F7A  D7F3               	goto	l477
 41452   013F7C  0A01               	xorlw	1	; case 1
 41453   013F7E  B4D8               	btfsc	status,2,c
 41454   013F80  D7F2               	goto	l479
 41455   013F82  0A03               	xorlw	3	; case 2
 41456   013F84  B4D8               	btfsc	status,2,c
 41457   013F86  D7F1               	goto	l480
 41458   013F88  0A01               	xorlw	1	; case 3
 41459   013F8A  B4D8               	btfsc	status,2,c
 41460   013F8C  D7F0               	goto	l481
 41461   013F8E  D030               	goto	u9880
 41462   013F90                     l472:
 41463                           
 41464                           ; BSR set to: 5
 41465                           ;../canpan3Outputs.c: 179:         LATCbits.LATC2 = 1;
 41466   013F90  84C0               	bsf	192,2,c	;volatile
 41467                           
 41468                           ; BSR set to: 5
 41469                           ;../canpan3Outputs.c: 182:         offset = current_row*8 +3;
 41470   013F92  519C               	movf	_current_row& (0+255),w,b
 41471   013F94  0D08               	mullw	8
 41472   013F96  50F3               	movf	243,w,c
 41473   013F98  0F03               	addlw	3
 41474   013F9A  6E08               	movwf	pollOutputs@offset^(0+1280),c
 41475                           
 41476                           ; BSR set to: 5
 41477                           ;../canpan3Outputs.c: 183:         for (i=0; i<8; i++) {
 41478   013F9C  6A09               	clrf	pollOutputs@i^(0+1280),c
 41479   013F9E                     l11553:
 41480                           
 41481                           ;../canpan3Outputs.c: 184:             if (brightness > getNV(offset + i)) {
 41482   013F9E  0105               	movlb	5	; () banked
 41483   013FA0  519A               	movf	_brightness& (0+255),w,b
 41484   013FA2  6E05               	movwf	??_pollOutputs^(0+1280),c
 41485   013FA4  6A06               	clrf	(??_pollOutputs+1)^(0+1280),c
 41486   013FA6  5008               	movf	pollOutputs@offset^(0+1280),w,c
 41487   013FA8  2409               	addwf	pollOutputs@i^(0+1280),w,c
 41488   013FAA  EC49  F0AF         	call	_getNV
 41489   013FAE  5005               	movf	??_pollOutputs^(0+1280),w,c
 41490   013FB0  5C01               	subwf	?_getNV^(0+1280),w,c
 41491   013FB2  5002               	movf	(?_getNV+1)^(0+1280),w,c
 41492   013FB4  0A80               	xorlw	128
 41493   013FB6  6E07               	movwf	(??_pollOutputs+2)^(0+1280),c
 41494   013FB8  5006               	movf	(??_pollOutputs+1)^(0+1280),w,c
 41495   013FBA  0A80               	xorlw	128
 41496   013FBC  5807               	subwfb	(??_pollOutputs+2)^(0+1280),w,c
 41497   013FBE  B0D8               	btfsc	status,0,c
 41498   013FC0  D00E               	goto	l11557
 41499                           
 41500                           ;../canpan3Outputs.c: 185:                 cathodes &= ~(1 << i);
 41501   013FC2  C509  F505         	movff	pollOutputs@i,??_pollOutputs
 41502   013FC6  0E01               	movlw	1
 41503   013FC8  6E06               	movwf	(??_pollOutputs+1)^(0+1280),c
 41504   013FCA  2A05               	incf	??_pollOutputs^(0+1280),f,c
 41505   013FCC  D002               	goto	u9864
 41506   013FCE                     u9865:
 41507   013FCE  90D8               	bcf	status,0,c
 41508   013FD0  3606               	rlcf	(??_pollOutputs+1)^(0+1280),f,c
 41509   013FD2                     u9864:
 41510   013FD2  2E05               	decfsz	??_pollOutputs^(0+1280),f,c
 41511   013FD4  D7FC               	goto	u9865
 41512   013FD6  5006               	movf	(??_pollOutputs+1)^(0+1280),w,c
 41513   013FD8  0AFF               	xorlw	255
 41514   013FDA  0105               	movlb	5	; () banked
 41515   013FDC  179B               	andwf	_cathodes& (0+255),f,b
 41516   013FDE                     l11557:
 41517                           
 41518                           ;../canpan3Outputs.c: 187:         }
 41519   013FDE  2A09               	incf	pollOutputs@i^(0+1280),f,c
 41520   013FE0  0E07               	movlw	7
 41521   013FE2  6409               	cpfsgt	pollOutputs@i^(0+1280),c
 41522   013FE4  D7DC               	goto	l11553
 41523                           
 41524                           ;../canpan3Outputs.c: 189:         SPI1TXB = cathodes;
 41525   013FE6  C59B  F081         	movff	_cathodes,129	;volatile
 41526   013FEA                     l486:
 41527                           
 41528                           ;../canpan3Outputs.c: 192:         while (! SPI1STATUSbits.TXBE)
 41529   013FEA  0100               	movlb	0	; () banked
 41530   013FEC  AB87               	btfss	135,5,b	;volatile
 41531   013FEE  D7FD               	goto	l486
 41532   013FF0                     u9880:
 41533                           
 41534                           ; BSR set to: 0
 41535                           ;../canpan3Outputs.c: 195:         LATCbits.LATC2 = 0;
 41536   013FF0  94C0               	bcf	192,2,c	;volatile
 41537                           
 41538                           ;../canpan3Outputs.c: 197:     brightness++;
 41539   013FF2  0105               	movlb	5	; () banked
 41540   013FF4  2B9A               	incf	_brightness& (0+255),f,b
 41541                           
 41542                           ; BSR set to: 5
 41543                           ;../canpan3Outputs.c: 198:     if (brightness == 32) {
 41544   013FF6  0E20               	movlw	32
 41545   013FF8  199A               	xorwf	_brightness& (0+255),w,b
 41546   013FFA  A4D8               	btfss	status,2,c
 41547   013FFC  0012               	return	
 41548                           
 41549                           ; BSR set to: 5
 41550                           ;../canpan3Outputs.c: 199:         brightness = 0;
 41551   013FFE  6B9A               	clrf	_brightness& (0+255),b
 41552                           
 41553                           ; BSR set to: 5
 41554   014000  0012               	return		;funcret
 41555   014002                     __end_of_pollOutputs:
 41556                           	callstack 0
 41557                           
 41558 ;; *************** function _inputScan *****************
 41559 ;; Defined at:
 41560 ;;		line 118 in file "../canpan3Inputs.c"
 41561 ;; Parameters:    Size  Location     Type
 41562 ;;		None
 41563 ;; Auto vars:     Size  Location     Type
 41564 ;;  producedEven    2    0        struct Word
 41565 ;;  producedEven    2    0        struct Word
 41566 ;;  buttonNo        1   59[COMRAM] unsigned char 
 41567 ;;  onOff           1   58[COMRAM] unsigned char 
 41568 ;;  sv              1   57[COMRAM] unsigned char 
 41569 ;;  i               1   56[COMRAM] unsigned char 
 41570 ;;  switchMode      1   55[COMRAM] unsigned char 
 41571 ;;  tableIndex      1   54[COMRAM] unsigned char 
 41572 ;;  row             1   53[COMRAM] unsigned char 
 41573 ;;  diff            1   52[COMRAM] unsigned char 
 41574 ;;  opc             1    0        unsigned char 
 41575 ;; Return value:  Size  Location     Type
 41576 ;;                  1    wreg      void 
 41577 ;; Registers used:
 41578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 41579 ;; Tracked objects:
 41580 ;;		On entry : 0/0
 41581 ;;		On exit  : 0/0
 41582 ;;		Unchanged: 0/0
 41583 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41585 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41586 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41587 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41588 ;;Total ram usage:       12 bytes
 41589 ;; Hardware stack levels used: 1
 41590 ;; Hardware stack levels required when called: 7
 41591 ;; This function calls:
 41592 ;;		_EEPROM_WriteNoVerify
 41593 ;;		_canpanSendProducedEvent
 41594 ;;		_driveColumn
 41595 ;;		_findEventForSwitch
 41596 ;;		_getEVs
 41597 ;;		_getNV
 41598 ;;		_sendMessage5
 41599 ;; This function is called by:
 41600 ;;		_loop
 41601 ;; This function uses a non-reentrant model
 41602 ;;
 41603                           
 41604                           	psect	text101
 41605   011E72                     __ptext101:
 41606                           	callstack 0
 41607   011E72                     _inputScan:
 41608                           	callstack 118
 41609                           
 41610                           ;../canpan3Inputs.c: 119:     uint8_t row;;../canpan3Inputs.c: 120:     uint8_t i;;../ca
      +                          npan3Inputs.c: 121:     uint8_t diff;;../canpan3Inputs.c: 122:     uint8_t tableIndex;;.
      +                          ./canpan3Inputs.c: 123:     uint8_t sv;;../canpan3Inputs.c: 124:     uint8_t switchMode;
      +                          ;../canpan3Inputs.c: 125:     uint8_t onOff;;../canpan3Inputs.c: 126:     uint8_t button
      +                          No;;../canpan3Inputs.c: 127:     Word producedEventNN;;../canpan3Inputs.c: 128:     Word
      +                           producedEventEN;;../canpan3Inputs.c: 129:     uint8_t opc;;../canpan3Inputs.c: 133:    
      +                           row = (uint8_t)((PORTC & 0x03) << 2);
 41611                           
 41612                           ; BSR set to: 5
 41613                           ;incstack = 0
 41614   011E72  C4D0 F531          	movff	1232,??_inputScan	;volatile
 41615   011E76  0E03               	movlw	3
 41616   011E78  1631               	andwf	??_inputScan^(0+1280),f,c
 41617   011E7A  90D8               	bcf	status,0,c
 41618   011E7C  3631               	rlcf	??_inputScan^(0+1280),f,c
 41619   011E7E  90D8               	bcf	status,0,c
 41620   011E80  3431               	rlcf	??_inputScan^(0+1280),w,c
 41621   011E82  6E36               	movwf	inputScan@row^(0+1280),c
 41622                           
 41623                           ;../canpan3Inputs.c: 134:     row |= (PORTB & 0x03);
 41624   011E84  50CF               	movf	207,w,c	;volatile
 41625   011E86  0B03               	andlw	3
 41626   011E88  1236               	iorwf	inputScan@row^(0+1280),f,c
 41627                           
 41628                           ;../canpan3Inputs.c: 135:     diff = row ^ buttonState[column];
 41629   011E8A  0E7E               	movlw	low _buttonState
 41630   011E8C  0105               	movlb	5	; () banked
 41631   011E8E  259D               	addwf	_column& (0+255),w,b
 41632   011E90  6ED9               	movwf	fsr2l,c
 41633   011E92  6ADA               	clrf	fsr2h,c
 41634   011E94  0E06               	movlw	high _buttonState
 41635   011E96  22DA               	addwfc	fsr2h,f,c
 41636   011E98  50DF               	movf	indf2,w,c
 41637   011E9A  1836               	xorwf	inputScan@row^(0+1280),w,c
 41638   011E9C  6E35               	movwf	inputScan@diff^(0+1280),c
 41639                           
 41640                           ; BSR set to: 5
 41641                           ;../canpan3Inputs.c: 139:     for (i=0; i<4; i++) {
 41642   011E9E  6A39               	clrf	inputScan@i^(0+1280),c
 41643   011EA0                     l11371:
 41644                           
 41645                           ;../canpan3Inputs.c: 140:         if (diff & (1 << i)) {
 41646   011EA0  C539  F531         	movff	inputScan@i,??_inputScan
 41647   011EA4  0E01               	movlw	1
 41648   011EA6  6E32               	movwf	(??_inputScan+1)^(0+1280),c
 41649   011EA8  2A31               	incf	??_inputScan^(0+1280),f,c
 41650   011EAA  D002               	goto	u9474
 41651   011EAC                     u9475:
 41652   011EAC  90D8               	bcf	status,0,c
 41653   011EAE  3632               	rlcf	(??_inputScan+1)^(0+1280),f,c
 41654   011EB0                     u9474:
 41655   011EB0  2E31               	decfsz	??_inputScan^(0+1280),f,c
 41656   011EB2  D7FC               	goto	u9475
 41657   011EB4  5032               	movf	(??_inputScan+1)^(0+1280),w,c
 41658   011EB6  1435               	andwf	inputScan@diff^(0+1280),w,c
 41659   011EB8  0900               	iorlw	0
 41660   011EBA  B4D8               	btfsc	status,2,c
 41661   011EBC  D0F5               	goto	l11467
 41662                           
 41663                           ;../canpan3Inputs.c: 142:             onOff = !!(row & (1 << i));
 41664   011EBE  C539  F531         	movff	inputScan@i,??_inputScan
 41665   011EC2  0E01               	movlw	1
 41666   011EC4  6E32               	movwf	(??_inputScan+1)^(0+1280),c
 41667   011EC6  2A31               	incf	??_inputScan^(0+1280),f,c
 41668   011EC8  D002               	goto	u9494
 41669   011ECA                     u9495:
 41670   011ECA  90D8               	bcf	status,0,c
 41671   011ECC  3632               	rlcf	(??_inputScan+1)^(0+1280),f,c
 41672   011ECE                     u9494:
 41673   011ECE  2E31               	decfsz	??_inputScan^(0+1280),f,c
 41674   011ED0  D7FC               	goto	u9495
 41675   011ED2  5032               	movf	(??_inputScan+1)^(0+1280),w,c
 41676   011ED4  1436               	andwf	inputScan@row^(0+1280),w,c
 41677   011ED6  0900               	iorlw	0
 41678   011ED8  B4D8               	btfsc	status,2,c
 41679   011EDA  D002               	goto	u9500
 41680   011EDC  0E01               	movlw	1
 41681   011EDE  D001               	goto	u9510
 41682   011EE0                     u9500:
 41683   011EE0  0E00               	movlw	0
 41684   011EE2                     u9510:
 41685   011EE2  6E3B               	movwf	inputScan@onOff^(0+1280),c
 41686                           
 41687                           ;../canpan3Inputs.c: 143:             buttonNo = column*4 + i;
 41688   011EE4  0105               	movlb	5	; () banked
 41689   011EE6  519D               	movf	_column& (0+255),w,b
 41690   011EE8  0D04               	mullw	4
 41691   011EEA  50F3               	movf	243,w,c
 41692   011EEC  2439               	addwf	inputScan@i^(0+1280),w,c
 41693   011EEE  6E3C               	movwf	inputScan@buttonNo^(0+1280),c
 41694                           
 41695                           ; BSR set to: 5
 41696                           ;../canpan3Inputs.c: 144:             if (mode_flags & 1) {
 41697   011EF0  A19F               	btfss	_mode_flags& (0+255),0,b
 41698   011EF2  D00E               	goto	l332
 41699                           
 41700                           ; BSR set to: 5
 41701                           ;../canpan3Inputs.c: 146:                 sendMessage5(OPC_ARON1, nn.bytes.hi, nn.bytes.
      +                          lo, 0, 0, buttonNo+1);
 41702   011EF4  C55F  F525         	movff	_nn+1,sendMessage5@data1
 41703   011EF8  C55E  F526         	movff	_nn,sendMessage5@data2
 41704   011EFC  0E00               	movlw	0
 41705   011EFE  6E27               	movwf	sendMessage5@data3^(0+1280),c
 41706   011F00  0E00               	movlw	0
 41707   011F02  6E28               	movwf	sendMessage5@data4^(0+1280),c
 41708   011F04  283C               	incf	inputScan@buttonNo^(0+1280),w,c
 41709   011F06  6E29               	movwf	sendMessage5@data5^(0+1280),c
 41710   011F08  0EB3               	movlw	179
 41711   011F0A  EC36  F0B1         	call	_sendMessage5
 41712                           
 41713                           ;../canpan3Inputs.c: 147:             } else {
 41714   011F0E  D0CC               	goto	l11467
 41715   011F10                     l332:
 41716                           
 41717                           ; BSR set to: 5
 41718                           ;../canpan3Inputs.c: 148:                 switchMode = 0;
 41719   011F10  6A38               	clrf	inputScan@switchMode^(0+1280),c
 41720                           
 41721                           ; BSR set to: 5
 41722                           ;../canpan3Inputs.c: 149:                 tableIndex = findEventForSwitch(buttonNo & 0xF
      +                          E);
 41723   011F12  503C               	movf	inputScan@buttonNo^(0+1280),w,c
 41724   011F14  0BFE               	andlw	254
 41725   011F16  EC77  F0B2         	call	_findEventForSwitch
 41726   011F1A  6E37               	movwf	inputScan@tableIndex^(0+1280),c
 41727                           
 41728                           ;../canpan3Inputs.c: 150:                 if (tableIndex != 0xff) {
 41729   011F1C  2837               	incf	inputScan@tableIndex^(0+1280),w,c
 41730   011F1E  B4D8               	btfsc	status,2,c
 41731   011F20  D01A               	goto	l11399
 41732                           
 41733                           ;../canpan3Inputs.c: 151:                     sv = (uint8_t)getNV((3 +(8*4)) + (buttonNo
      +                           & 0xFE));
 41734   011F22  503C               	movf	inputScan@buttonNo^(0+1280),w,c
 41735   011F24  0BFE               	andlw	254
 41736   011F26  0F23               	addlw	35
 41737   011F28  EC49  F0AF         	call	_getNV
 41738   011F2C  5001               	movf	?_getNV^(0+1280),w,c
 41739   011F2E  6E3A               	movwf	inputScan@sv^(0+1280),c
 41740                           
 41741                           ;../canpan3Inputs.c: 152:                     if (sv & 1) {
 41742   011F30  A03A               	btfss	inputScan@sv^(0+1280),0,c
 41743   011F32  D00D               	goto	l11397
 41744                           
 41745                           ;../canpan3Inputs.c: 153:                         switchMode = (buttonNo & 1) ? 5 : 4;
 41746   011F34  B03C               	btfsc	inputScan@buttonNo^(0+1280),0,c
 41747   011F36  D004               	goto	l11393
 41748   011F38  0E00               	movlw	0
 41749   011F3A  6E34               	movwf	(_inputScan$1239+1)^(0+1280),c
 41750   011F3C  0E04               	movlw	4
 41751   011F3E  D003               	goto	L5
 41752   011F40                     l11393:
 41753   011F40  0E00               	movlw	0
 41754   011F42  6E34               	movwf	(_inputScan$1239+1)^(0+1280),c
 41755   011F44  0E05               	movlw	5
 41756   011F46                     L5:
 41757   011F46  6E33               	movwf	_inputScan$1239^(0+1280),c
 41758   011F48  C533  F538         	movff	_inputScan$1239,inputScan@switchMode
 41759                           
 41760                           ;../canpan3Inputs.c: 154:                     } else {
 41761   011F4C  D008               	goto	l11401
 41762   011F4E                     l11397:
 41763                           
 41764                           ;../canpan3Inputs.c: 155:                         tableIndex = findEventForSwitch(button
      +                          No);
 41765   011F4E  503C               	movf	inputScan@buttonNo^(0+1280),w,c
 41766   011F50  EC77  F0B2         	call	_findEventForSwitch
 41767   011F54  D003               	goto	L6
 41768   011F56                     l11399:
 41769                           
 41770                           ;../canpan3Inputs.c: 158:                     tableIndex = findEventForSwitch(buttonNo);
 41771   011F56  503C               	movf	inputScan@buttonNo^(0+1280),w,c
 41772   011F58  EC77  F0B2         	call	_findEventForSwitch
 41773   011F5C                     L6:
 41774   011F5C  6E37               	movwf	inputScan@tableIndex^(0+1280),c
 41775   011F5E                     l11401:
 41776                           
 41777                           ;../canpan3Inputs.c: 161:                 if (tableIndex != 0xff) {
 41778   011F5E  2837               	incf	inputScan@tableIndex^(0+1280),w,c
 41779   011F60  B4D8               	btfsc	status,2,c
 41780   011F62  D0A2               	goto	l11467
 41781                           
 41782                           ;../canpan3Inputs.c: 162:                     getEVs(tableIndex);
 41783   011F64  5037               	movf	inputScan@tableIndex^(0+1280),w,c
 41784   011F66  EC48  F0A9         	call	_getEVs
 41785                           
 41786                           ;../canpan3Inputs.c: 163:                     sv = evs[2];
 41787   011F6A  C673  F53A         	movff	_evs+2,inputScan@sv
 41788                           
 41789                           ;../canpan3Inputs.c: 164:                     if (switchMode == 0) {
 41790   011F6E  5038               	movf	inputScan@switchMode^(0+1280),w,c
 41791   011F70  A4D8               	btfss	status,2,c
 41792   011F72  D00D               	goto	l345
 41793                           
 41794                           ;../canpan3Inputs.c: 166:                         switchMode = 0;
 41795   011F74  6A38               	clrf	inputScan@switchMode^(0+1280),c
 41796                           
 41797                           ;../canpan3Inputs.c: 167:                         if (sv & 1) {
 41798   011F76  A03A               	btfss	inputScan@sv^(0+1280),0,c
 41799   011F78  D002               	goto	l344
 41800                           
 41801                           ;../canpan3Inputs.c: 168:                             switchMode = 1;
 41802   011F7A  0E01               	movlw	1
 41803   011F7C  D007               	goto	L8
 41804   011F7E                     l344:
 41805   011F7E  A43A               	btfss	inputScan@sv^(0+1280),2,c
 41806   011F80  D002               	goto	l346
 41807                           
 41808                           ;../canpan3Inputs.c: 170:                             switchMode = 2;
 41809   011F82  0E02               	movlw	2
 41810   011F84  D003               	goto	L8
 41811   011F86                     l346:
 41812   011F86  A63A               	btfss	inputScan@sv^(0+1280),3,c
 41813   011F88  D002               	goto	l345
 41814                           
 41815                           ;../canpan3Inputs.c: 172:                             switchMode = 3;
 41816   011F8A  0E03               	movlw	3
 41817   011F8C                     L8:
 41818   011F8C  6E38               	movwf	inputScan@switchMode^(0+1280),c
 41819   011F8E                     l345:
 41820                           
 41821                           ;../canpan3Inputs.c: 176:                     if (mode_flags & 1) {
 41822   011F8E  0105               	movlb	5	; () banked
 41823   011F90  A19F               	btfss	_mode_flags& (0+255),0,b
 41824   011F92  D002               	goto	l349
 41825                           
 41826                           ; BSR set to: 5
 41827                           ;../canpan3Inputs.c: 177:                         switchMode = 1;
 41828   011F94  0E01               	movlw	1
 41829   011F96  6E38               	movwf	inputScan@switchMode^(0+1280),c
 41830   011F98                     l349:
 41831                           
 41832                           ; BSR set to: 5
 41833                           ;../canpan3Inputs.c: 179:                     if (switchMode != 0){
 41834   011F98  5038               	movf	inputScan@switchMode^(0+1280),w,c
 41835   011F9A  A4D8               	btfss	status,2,c
 41836   011F9C  D06C               	goto	l11461
 41837   011F9E  D084               	goto	l11467
 41838   011FA0                     l352:
 41839                           
 41840                           ; BSR set to: 5
 41841                           ;../canpan3Inputs.c: 183:                                 if (sv & 0b00000010) {
 41842   011FA0  A23A               	btfss	inputScan@sv^(0+1280),1,c
 41843   011FA2  D007               	goto	l11425
 41844                           
 41845                           ; BSR set to: 5
 41846                           ;../canpan3Inputs.c: 184:                                     onOff = !onOff;
 41847   011FA4  503B               	movf	inputScan@onOff^(0+1280),w,c
 41848   011FA6  A4D8               	btfss	status,2,c
 41849   011FA8  D002               	goto	u9640
 41850   011FAA  0E01               	movlw	1
 41851   011FAC  D001               	goto	u9650
 41852   011FAE                     u9640:
 41853   011FAE  0E00               	movlw	0
 41854   011FB0                     u9650:
 41855   011FB0  6E3B               	movwf	inputScan@onOff^(0+1280),c
 41856   011FB2                     l11425:
 41857                           
 41858                           ; BSR set to: 5
 41859                           ;../canpan3Inputs.c: 186:                                 outputState[buttonNo] = onOff;
 41860   011FB2  0E41               	movlw	low _outputState
 41861   011FB4  243C               	addwf	inputScan@buttonNo^(0+1280),w,c
 41862   011FB6  6ED9               	movwf	fsr2l,c
 41863   011FB8  6ADA               	clrf	fsr2h,c
 41864   011FBA  0E06               	movlw	high _outputState
 41865   011FBC  22DA               	addwfc	fsr2h,f,c
 41866   011FBE  C53B  F4DF         	movff	inputScan@onOff,indf2
 41867                           
 41868                           ;../canpan3Inputs.c: 187:                                 break;
 41869   011FC2  D069               	goto	l11463
 41870   011FC4                     l355:
 41871                           
 41872                           ; BSR set to: 5
 41873                           ;../canpan3Inputs.c: 189:                                 if (sv & 0b00000010) {
 41874   011FC4  A23A               	btfss	inputScan@sv^(0+1280),1,c
 41875   011FC6  D005               	goto	l11431
 41876                           
 41877                           ; BSR set to: 5
 41878                           ;../canpan3Inputs.c: 190:                                     if (! onOff) {
 41879   011FC8  503B               	movf	inputScan@onOff^(0+1280),w,c
 41880   011FCA  B4D8               	btfsc	status,2,c
 41881   011FCC  D06D               	goto	l11467
 41882                           
 41883                           ; BSR set to: 5
 41884                           ;../canpan3Inputs.c: 193:                                     onOff = 0;
 41885                           
 41886                           ;../canpan3Inputs.c: 192:                                     }
 41887                           
 41888                           ; BSR set to: 5
 41889                           ;../canpan3Inputs.c: 191:                                         continue;
 41890   011FCE  6A3B               	clrf	inputScan@onOff^(0+1280),c
 41891                           
 41892                           ;../canpan3Inputs.c: 194:                                 } else {
 41893   011FD0  D7F0               	goto	l11425
 41894   011FD2                     l11431:
 41895                           
 41896                           ; BSR set to: 5
 41897                           ;../canpan3Inputs.c: 195:                                     if (! onOff) {
 41898   011FD2  503B               	movf	inputScan@onOff^(0+1280),w,c
 41899   011FD4  B4D8               	btfsc	status,2,c
 41900   011FD6  D068               	goto	l11467
 41901   011FD8  D7EC               	goto	l11425
 41902   011FDA                     l11437:
 41903                           
 41904                           ; BSR set to: 5
 41905                           ;../canpan3Inputs.c: 202:                                 if (onOff) {
 41906   011FDA  503B               	movf	inputScan@onOff^(0+1280),w,c
 41907   011FDC  B4D8               	btfsc	status,2,c
 41908   011FDE  D064               	goto	l11467
 41909                           
 41910                           ; BSR set to: 5
 41911                           ;../canpan3Inputs.c: 203:                                     outputState[buttonNo] = ! 
      +                          outputState[buttonNo];
 41912   011FE0  0E41               	movlw	low _outputState
 41913   011FE2  243C               	addwf	inputScan@buttonNo^(0+1280),w,c
 41914   011FE4  6ED9               	movwf	fsr2l,c
 41915   011FE6  6ADA               	clrf	fsr2h,c
 41916   011FE8  0E06               	movlw	high _outputState
 41917   011FEA  22DA               	addwfc	fsr2h,f,c
 41918   011FEC  0E41               	movlw	low _outputState
 41919   011FEE  243C               	addwf	inputScan@buttonNo^(0+1280),w,c
 41920   011FF0  6EE1               	movwf	fsr1l,c
 41921   011FF2  6AE2               	clrf	fsr1h,c
 41922   011FF4  0E06               	movlw	high _outputState
 41923   011FF6  22E2               	addwfc	fsr1h,f,c
 41924   011FF8  50E7               	movf	indf1,w,c
 41925   011FFA  A4D8               	btfss	status,2,c
 41926   011FFC  D002               	goto	u9700
 41927   011FFE  0E01               	movlw	1
 41928   012000  D001               	goto	u9710
 41929   012002                     u9700:
 41930   012002  0E00               	movlw	0
 41931   012004                     u9710:
 41932   012004  6EDF               	movwf	indf2,c
 41933                           
 41934                           ; BSR set to: 5
 41935                           ;../canpan3Inputs.c: 207:                                 onOff = outputState[buttonNo];
 41936                           
 41937                           ;../canpan3Inputs.c: 204:                                 } else {
 41938   012006  0E41               	movlw	low _outputState
 41939   012008  243C               	addwf	inputScan@buttonNo^(0+1280),w,c
 41940   01200A  6ED9               	movwf	fsr2l,c
 41941   01200C  6ADA               	clrf	fsr2h,c
 41942   01200E  0E06               	movlw	high _outputState
 41943   012010  22DA               	addwfc	fsr2h,f,c
 41944   012012  50DF               	movf	indf2,w,c
 41945   012014  6E3B               	movwf	inputScan@onOff^(0+1280),c
 41946                           
 41947                           ; BSR set to: 5
 41948                           ;../canpan3Inputs.c: 208:                                 if ((getNV(1) & 0x01) == 0) {
 41949   012016  0E01               	movlw	1
 41950   012018  EC49  F0AF         	call	_getNV
 41951   01201C  B001               	btfsc	?_getNV^(0+1280),0,c
 41952   01201E  D03B               	goto	l11463
 41953                           
 41954                           ;../canpan3Inputs.c: 209:                                     EEPROM_WriteNoVerify(0x000
      +                          0 + buttonNo, outputState[buttonNo]);
 41955   012020  503C               	movf	inputScan@buttonNo^(0+1280),w,c
 41956   012022  6E01               	movwf	EEPROM_WriteNoVerify@index^(0+1280),c
 41957   012024  6A02               	clrf	(EEPROM_WriteNoVerify@index+1)^(0+1280),c
 41958   012026  6A03               	clrf	(EEPROM_WriteNoVerify@index+2)^(0+1280),c
 41959   012028  0E41               	movlw	low _outputState
 41960   01202A  243C               	addwf	inputScan@buttonNo^(0+1280),w,c
 41961   01202C  6ED9               	movwf	fsr2l,c
 41962   01202E  6ADA               	clrf	fsr2h,c
 41963   012030  0E06               	movlw	high _outputState
 41964   012032  22DA               	addwfc	fsr2h,f,c
 41965   012034  50DF               	movf	indf2,w,c
 41966   012036  6E04               	movwf	EEPROM_WriteNoVerify@value^(0+1280),c
 41967   012038  ECF8  F0AC         	call	_EEPROM_WriteNoVerify	;wreg free
 41968   01203C  D02C               	goto	l11463
 41969   01203E                     l11447:
 41970                           
 41971                           ; BSR set to: 5
 41972                           ;../canpan3Inputs.c: 213:                                 if (! onOff) {
 41973   01203E  503B               	movf	inputScan@onOff^(0+1280),w,c
 41974   012040  B4D8               	btfsc	status,2,c
 41975   012042  D032               	goto	l11467
 41976                           
 41977                           ; BSR set to: 5
 41978                           ;../canpan3Inputs.c: 216:                                 outputState[buttonNo] = 1;
 41979   012044  0E41               	movlw	low _outputState
 41980   012046  243C               	addwf	inputScan@buttonNo^(0+1280),w,c
 41981   012048  6ED9               	movwf	fsr2l,c
 41982   01204A  6ADA               	clrf	fsr2h,c
 41983   01204C  0E06               	movlw	high _outputState
 41984   01204E  22DA               	addwfc	fsr2h,f,c
 41985   012050  0E01               	movlw	1
 41986   012052  6EDF               	movwf	indf2,c
 41987                           
 41988                           ;../canpan3Inputs.c: 217:                                 break;
 41989   012054  D020               	goto	l11463
 41990   012056                     l11453:
 41991                           
 41992                           ; BSR set to: 5
 41993                           ;../canpan3Inputs.c: 219:                                 if (! onOff) {
 41994   012056  503B               	movf	inputScan@onOff^(0+1280),w,c
 41995   012058  B4D8               	btfsc	status,2,c
 41996   01205A  D026               	goto	l11467
 41997                           
 41998                           ; BSR set to: 5
 41999                           ;../canpan3Inputs.c: 222:                                 onOff = 0;
 42000                           
 42001                           ;../canpan3Inputs.c: 221:                                 }
 42002   01205C  6A3B               	clrf	inputScan@onOff^(0+1280),c
 42003                           
 42004                           ; BSR set to: 5
 42005                           ;../canpan3Inputs.c: 223:                                 outputState[buttonNo&0xFE] = 0
      +                          ;
 42006   01205E  503C               	movf	inputScan@buttonNo^(0+1280),w,c
 42007   012060  0BFE               	andlw	254
 42008   012062  6E31               	movwf	??_inputScan^(0+1280),c
 42009   012064  6A32               	clrf	(??_inputScan+1)^(0+1280),c
 42010   012066  0E41               	movlw	low _outputState
 42011   012068  2431               	addwf	??_inputScan^(0+1280),w,c
 42012   01206A  6ED9               	movwf	fsr2l,c
 42013   01206C  0E06               	movlw	high _outputState
 42014   01206E  2032               	addwfc	(??_inputScan+1)^(0+1280),w,c
 42015   012070  6EDA               	movwf	fsr2h,c
 42016   012072  6ADF               	clrf	indf2,c
 42017                           
 42018                           ;../canpan3Inputs.c: 224:                                 break;
 42019   012074  D010               	goto	l11463
 42020   012076                     l11461:
 42021                           
 42022                           ; BSR set to: 5
 42023   012076  5038               	movf	inputScan@switchMode^(0+1280),w,c
 42024                           
 42025                           ; Switch size 1, requested type "simple"
 42026                           ; Number of cases is 5, Range of values is 1 to 5
 42027                           ; switch strategies available:
 42028                           ; Name         Instructions Cycles
 42029                           ; simple_byte           16     9 (average)
 42030                           ;	Chosen strategy is simple_byte
 42031   012078  0A01               	xorlw	1	; case 1
 42032   01207A  B4D8               	btfsc	status,2,c
 42033   01207C  D791               	goto	l352
 42034   01207E  0A03               	xorlw	3	; case 2
 42035   012080  B4D8               	btfsc	status,2,c
 42036   012082  D7A0               	goto	l355
 42037   012084  0A01               	xorlw	1	; case 3
 42038   012086  B4D8               	btfsc	status,2,c
 42039   012088  D7A8               	goto	l11437
 42040   01208A  0A07               	xorlw	7	; case 4
 42041   01208C  B4D8               	btfsc	status,2,c
 42042   01208E  D7D7               	goto	l11447
 42043   012090  0A01               	xorlw	1	; case 5
 42044   012092  B4D8               	btfsc	status,2,c
 42045   012094  D7E0               	goto	l11453
 42046   012096                     l11463:
 42047                           
 42048                           ;../canpan3Inputs.c: 227:                         if (canpanScanReady) {
 42049   012096  0105               	movlb	5	; () banked
 42050   012098  51A1               	movf	_canpanScanReady& (0+255),w,b
 42051   01209A  B4D8               	btfsc	status,2,c
 42052   01209C  D005               	goto	l11467
 42053                           
 42054                           ; BSR set to: 5
 42055                           ;../canpan3Inputs.c: 229:                             canpanSendProducedEvent(tableIndex
      +                          , onOff);
 42056   01209E  C53B  F52A         	movff	inputScan@onOff,canpanSendProducedEvent@onOff
 42057   0120A2  5037               	movf	inputScan@tableIndex^(0+1280),w,c
 42058   0120A4  EC1A  F0AA         	call	_canpanSendProducedEvent
 42059   0120A8                     l11467:
 42060   0120A8  2A39               	incf	inputScan@i^(0+1280),f,c
 42061   0120AA  0E03               	movlw	3
 42062   0120AC  6439               	cpfsgt	inputScan@i^(0+1280),c
 42063   0120AE  D6F8               	goto	l11371
 42064                           
 42065                           ;../canpan3Inputs.c: 237:     buttonState[column] = row;
 42066   0120B0  0E7E               	movlw	low _buttonState
 42067   0120B2  0105               	movlb	5	; () banked
 42068   0120B4  259D               	addwf	_column& (0+255),w,b
 42069   0120B6  6ED9               	movwf	fsr2l,c
 42070   0120B8  6ADA               	clrf	fsr2h,c
 42071   0120BA  0E06               	movlw	high _buttonState
 42072   0120BC  22DA               	addwfc	fsr2h,f,c
 42073   0120BE  C536  F4DF         	movff	inputScan@row,indf2
 42074                           
 42075                           ; BSR set to: 5
 42076                           ;../canpan3Inputs.c: 240:     column++;
 42077   0120C2  2B9D               	incf	_column& (0+255),f,b
 42078                           
 42079                           ; BSR set to: 5
 42080                           ;../canpan3Inputs.c: 241:     if (column >= 8) {
 42081   0120C4  0E07               	movlw	7
 42082   0120C6  659D               	cpfsgt	_column& (0+255),b
 42083   0120C8  D003               	goto	l11481
 42084                           
 42085                           ; BSR set to: 5
 42086                           ;../canpan3Inputs.c: 243:         canpanScanReady = 1;
 42087   0120CA  0E01               	movlw	1
 42088   0120CC  6FA1               	movwf	_canpanScanReady& (0+255),b
 42089                           
 42090                           ; BSR set to: 5
 42091                           ;../canpan3Inputs.c: 244:         column=0;
 42092   0120CE  6B9D               	clrf	_column& (0+255),b
 42093   0120D0                     l11481:
 42094                           
 42095                           ; BSR set to: 5
 42096                           ;../canpan3Inputs.c: 246:     driveColumn();
 42097   0120D0  EC49  F0AD         	call	_driveColumn	;wreg free
 42098   0120D4  0012               	return		;funcret
 42099   0120D6                     __end_of_inputScan:
 42100                           	callstack 0
 42101                           
 42102 ;; *************** function _sendMessage5 *****************
 42103 ;; Defined at:
 42104 ;;		line 1193 in file "../../VLCBlib_PIC/vlcb.c"
 42105 ;; Parameters:    Size  Location     Type
 42106 ;;  opc             1    wreg     enum E22928
 42107 ;;  data1           1   36[COMRAM] unsigned char 
 42108 ;;  data2           1   37[COMRAM] unsigned char 
 42109 ;;  data3           1   38[COMRAM] unsigned char 
 42110 ;;  data4           1   39[COMRAM] unsigned char 
 42111 ;;  data5           1   40[COMRAM] unsigned char 
 42112 ;; Auto vars:     Size  Location     Type
 42113 ;;  opc             1   41[COMRAM] enum E22928
 42114 ;; Return value:  Size  Location     Type
 42115 ;;                  1    wreg      void 
 42116 ;; Registers used:
 42117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 42118 ;; Tracked objects:
 42119 ;;		On entry : 0/0
 42120 ;;		On exit  : 0/0
 42121 ;;		Unchanged: 0/0
 42122 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42123 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42126 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42127 ;;Total ram usage:        6 bytes
 42128 ;; Hardware stack levels used: 1
 42129 ;; Hardware stack levels required when called: 5
 42130 ;; This function calls:
 42131 ;;		_sendMessage
 42132 ;; This function is called by:
 42133 ;;		_inputScan
 42134 ;;		_canProcessMessage
 42135 ;;		_teachProcessMessage
 42136 ;;		_teachCheckLen
 42137 ;;		_doNenrd
 42138 ;;		_doNnclr
 42139 ;;		_doEvlrn
 42140 ;;		_doReval
 42141 ;;		_doEvuln
 42142 ;;		_doReqev
 42143 ;;		_reqevCallback
 42144 ;;		_mnsProcessMessage
 42145 ;;		_mnsPoll
 42146 ;;		_mnsTRserviceDiscoveryCallback
 42147 ;;		_nvProcessMessage
 42148 ;;		_checkLen
 42149 ;; This function uses a non-reentrant model
 42150 ;;
 42151                           
 42152                           	psect	text102
 42153   01626C                     __ptext102:
 42154                           	callstack 0
 42155   01626C                     _sendMessage5:
 42156                           	callstack 118
 42157                           
 42158                           ;incstack = 0
 42159                           ;sendMessage5@opc stored from wreg
 42160   01626C  6E2A               	movwf	sendMessage5@opc^(0+1280),c
 42161                           
 42162                           ;../../VLCBlib_PIC/vlcb.c: 1194:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 42163   01626E  0E06               	movlw	6
 42164   016270  6E1C               	movwf	sendMessage@len^(0+1280),c
 42165   016272  C525  F51D         	movff	sendMessage5@data1,sendMessage@data1
 42166   016276  C526  F51E         	movff	sendMessage5@data2,sendMessage@data2
 42167   01627A  C527  F51F         	movff	sendMessage5@data3,sendMessage@data3
 42168   01627E  C528  F520         	movff	sendMessage5@data4,sendMessage@data4
 42169   016282  C529  F521         	movff	sendMessage5@data5,sendMessage@data5
 42170   016286  0E00               	movlw	0
 42171   016288  6E22               	movwf	sendMessage@data6^(0+1280),c
 42172   01628A  0E00               	movlw	0
 42173   01628C  6E23               	movwf	sendMessage@data7^(0+1280),c
 42174   01628E  502A               	movf	sendMessage5@opc^(0+1280),w,c
 42175   016290  EC9B  F0A6         	call	_sendMessage
 42176   016294  0012               	return		;funcret
 42177   016296                     __end_of_sendMessage5:
 42178                           	callstack 0
 42179                           
 42180 ;; *************** function _getNV *****************
 42181 ;; Defined at:
 42182 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 42183 ;; Parameters:    Size  Location     Type
 42184 ;;  index           1    wreg     unsigned char 
 42185 ;; Auto vars:     Size  Location     Type
 42186 ;;  index           1    3[COMRAM] unsigned char 
 42187 ;; Return value:  Size  Location     Type
 42188 ;;                  2    0[COMRAM] short 
 42189 ;; Registers used:
 42190 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42191 ;; Tracked objects:
 42192 ;;		On entry : 0/0
 42193 ;;		On exit  : 0/0
 42194 ;;		Unchanged: 0/0
 42195 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42198 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42199 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42200 ;;Total ram usage:        4 bytes
 42201 ;; Hardware stack levels used: 1
 42202 ;; Hardware stack levels required when called: 1
 42203 ;; This function calls:
 42204 ;;		Nothing
 42205 ;; This function is called by:
 42206 ;;		_setup
 42207 ;;		_loop
 42208 ;;		_initInputs
 42209 ;;		_inputScan
 42210 ;;		_pollOutputs
 42211 ;;		_initLeds
 42212 ;;		_nvProcessMessage
 42213 ;;		_nvTRnvrdCallback
 42214 ;; This function uses a non-reentrant model
 42215 ;;
 42216                           
 42217                           	psect	text103
 42218   015E92                     __ptext103:
 42219                           	callstack 0
 42220   015E92                     _getNV:
 42221                           	callstack 123
 42222                           
 42223                           ;incstack = 0
 42224                           ;getNV@index stored from wreg
 42225   015E92  6E04               	movwf	getNV@index^(0+1280),c
 42226                           
 42227                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return 67;
 42228   015E94  5004               	movf	getNV@index^(0+1280),w,c
 42229   015E96  A4D8               	btfss	status,2,c
 42230   015E98  D005               	goto	l9163
 42231   015E9A  0E00               	movlw	0
 42232   015E9C  6E02               	movwf	(?_getNV+1)^(0+1280),c
 42233   015E9E  0E43               	movlw	67
 42234   015EA0  6E01               	movwf	?_getNV^(0+1280),c
 42235   015EA2  0012               	return	
 42236   015EA4                     l9163:
 42237                           
 42238                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > 67) return -CMDERR_INV_NV_IDX;
 42239   015EA4  0E43               	movlw	67
 42240   015EA6  6404               	cpfsgt	getNV@index^(0+1280),c
 42241   015EA8  D005               	goto	l9169
 42242   015EAA  0EFF               	movlw	255
 42243   015EAC  6E02               	movwf	(?_getNV+1)^(0+1280),c
 42244   015EAE  0EF6               	movlw	246
 42245   015EB0  6E01               	movwf	?_getNV^(0+1280),c
 42246   015EB2  0012               	return	
 42247   015EB4                     l9169:
 42248                           
 42249                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 42250   015EB4  0E00               	movlw	low _nvCache
 42251   015EB6  2404               	addwf	getNV@index^(0+1280),w,c
 42252   015EB8  6ED9               	movwf	fsr2l,c
 42253   015EBA  6ADA               	clrf	fsr2h,c
 42254   015EBC  0E07               	movlw	high _nvCache
 42255   015EBE  22DA               	addwfc	fsr2h,f,c
 42256   015EC0  50DF               	movf	indf2,w,c
 42257   015EC2  6E03               	movwf	??_getNV^(0+1280),c
 42258   015EC4  5003               	movf	??_getNV^(0+1280),w,c
 42259   015EC6  6E01               	movwf	?_getNV^(0+1280),c
 42260   015EC8  6A02               	clrf	(?_getNV+1)^(0+1280),c
 42261   015ECA  0012               	return		;funcret
 42262   015ECC                     __end_of_getNV:
 42263                           	callstack 0
 42264                           
 42265 ;; *************** function _getEVs *****************
 42266 ;; Defined at:
 42267 ;;		line 895 in file "../../VLCBlib_PIC/event_teach_simple.c"
 42268 ;; Parameters:    Size  Location     Type
 42269 ;;  tableIndex      1    wreg     unsigned char 
 42270 ;; Auto vars:     Size  Location     Type
 42271 ;;  tableIndex      1   21[COMRAM] unsigned char 
 42272 ;;  evIdx           1   22[COMRAM] unsigned char 
 42273 ;; Return value:  Size  Location     Type
 42274 ;;                  1    wreg      unsigned char 
 42275 ;; Registers used:
 42276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42277 ;; Tracked objects:
 42278 ;;		On entry : 0/0
 42279 ;;		On exit  : 0/0
 42280 ;;		Unchanged: 0/0
 42281 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42283 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42284 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42285 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42286 ;;Total ram usage:       11 bytes
 42287 ;; Hardware stack levels used: 1
 42288 ;; Hardware stack levels required when called: 3
 42289 ;; This function calls:
 42290 ;;		_readNVM
 42291 ;; This function is called by:
 42292 ;;		_APP_addEvent
 42293 ;;		_APP_processConsumedEvent
 42294 ;;		_APP_GetEventIndexState
 42295 ;;		_inputScan
 42296 ;;		_canpanSetAllSwitchOff
 42297 ;; This function uses a non-reentrant model
 42298 ;;
 42299                           
 42300                           	psect	text104
 42301   015290                     __ptext104:
 42302                           	callstack 0
 42303   015290                     _getEVs:
 42304                           	callstack 119
 42305                           
 42306                           ;incstack = 0
 42307                           ;getEVs@tableIndex stored from wreg
 42308   015290  6E16               	movwf	getEVs@tableIndex^(0+1280),c
 42309                           
 42310                           ;../../VLCBlib_PIC/event_teach_simple.c: 897:     uint8_t evIdx;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 898:     if (tableIndex >= 254) {
 42311   015292  0EFD               	movlw	253
 42312   015294  6416               	cpfsgt	getEVs@tableIndex^(0+1280),c
 42313   015296  D002               	goto	l1385
 42314                           
 42315                           ;../../VLCBlib_PIC/event_teach_simple.c: 899:         return CMDERR_INV_EN_IDX;
 42316   015298  0E08               	movlw	8
 42317   01529A  0012               	return	
 42318   01529C                     l1385:
 42319                           
 42320                           ;../../VLCBlib_PIC/event_teach_simple.c: 902:     for (evIdx=0; evIdx < 13; evIdx++) {
 42321   01529C  6A17               	clrf	getEVs@evIdx^(0+1280),c
 42322   01529E                     l8779:
 42323                           
 42324                           ;../../VLCBlib_PIC/event_teach_simple.c: 903:         evs[evIdx] = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+5 +evIdx);
 42325   01529E  5017               	movf	getEVs@evIdx^(0+1280),w,c
 42326   0152A0  6E0D               	movwf	??_getEVs^(0+1280),c
 42327   0152A2  6A0E               	clrf	(??_getEVs+1)^(0+1280),c
 42328   0152A4  6A0F               	clrf	(??_getEVs+2)^(0+1280),c
 42329   0152A6  5016               	movf	getEVs@tableIndex^(0+1280),w,c
 42330   0152A8  0D12               	mullw	18
 42331   0152AA  C4F3 F510          	movff	prodl,??_getEVs+3
 42332   0152AE  C4F4 F511          	movff	prodh,??_getEVs+4
 42333   0152B2  6A12               	clrf	(??_getEVs+5)^(0+1280),c
 42334   0152B4  500D               	movf	??_getEVs^(0+1280),w,c
 42335   0152B6  2410               	addwf	(??_getEVs+3)^(0+1280),w,c
 42336   0152B8  6E13               	movwf	(??_getEVs+6)^(0+1280),c
 42337   0152BA  500E               	movf	(??_getEVs+1)^(0+1280),w,c
 42338   0152BC  2011               	addwfc	(??_getEVs+4)^(0+1280),w,c
 42339   0152BE  6E14               	movwf	(??_getEVs+7)^(0+1280),c
 42340   0152C0  500F               	movf	(??_getEVs+2)^(0+1280),w,c
 42341   0152C2  2012               	addwfc	(??_getEVs+5)^(0+1280),w,c
 42342   0152C4  6E15               	movwf	(??_getEVs+8)^(0+1280),c
 42343   0152C6  0E05               	movlw	5
 42344   0152C8  2413               	addwf	(??_getEVs+6)^(0+1280),w,c
 42345   0152CA  6E07               	movwf	readNVM@index^(0+1280),c
 42346   0152CC  0EE8               	movlw	232
 42347   0152CE  2014               	addwfc	(??_getEVs+7)^(0+1280),w,c
 42348   0152D0  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 42349   0152D2  0E01               	movlw	1
 42350   0152D4  2015               	addwfc	(??_getEVs+8)^(0+1280),w,c
 42351   0152D6  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 42352   0152D8  0E01               	movlw	1
 42353   0152DA  EC42  F0AB         	call	_readNVM
 42354   0152DE  0E71               	movlw	low _evs
 42355   0152E0  2417               	addwf	getEVs@evIdx^(0+1280),w,c
 42356   0152E2  6ED9               	movwf	fsr2l,c
 42357   0152E4  6ADA               	clrf	fsr2h,c
 42358   0152E6  0E06               	movlw	high _evs
 42359   0152E8  22DA               	addwfc	fsr2h,f,c
 42360   0152EA  C507  F4DF         	movff	?_readNVM,indf2
 42361                           
 42362                           ;../../VLCBlib_PIC/event_teach_simple.c: 904:     }
 42363   0152EE  2A17               	incf	getEVs@evIdx^(0+1280),f,c
 42364   0152F0  0E0C               	movlw	12
 42365   0152F2  6417               	cpfsgt	getEVs@evIdx^(0+1280),c
 42366   0152F4  D7D4               	goto	l8779
 42367                           
 42368                           ;../../VLCBlib_PIC/event_teach_simple.c: 905:     return 0;
 42369   0152F6  0E00               	movlw	0
 42370   0152F8  0012               	return		;funcret
 42371   0152FA                     __end_of_getEVs:
 42372                           	callstack 0
 42373                           
 42374 ;; *************** function _findEventForSwitch *****************
 42375 ;; Defined at:
 42376 ;;		line 307 in file "../canpan3Inputs.c"
 42377 ;; Parameters:    Size  Location     Type
 42378 ;;  switchNo        1    wreg     unsigned char 
 42379 ;; Auto vars:     Size  Location     Type
 42380 ;;  switchNo        1    0[COMRAM] unsigned char 
 42381 ;; Return value:  Size  Location     Type
 42382 ;;                  1    wreg      unsigned char 
 42383 ;; Registers used:
 42384 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42385 ;; Tracked objects:
 42386 ;;		On entry : 0/0
 42387 ;;		On exit  : 0/0
 42388 ;;		Unchanged: 0/0
 42389 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42391 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42393 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42394 ;;Total ram usage:        1 bytes
 42395 ;; Hardware stack levels used: 1
 42396 ;; Hardware stack levels required when called: 1
 42397 ;; This function calls:
 42398 ;;		Nothing
 42399 ;; This function is called by:
 42400 ;;		_inputScan
 42401 ;;		_canpanSetAllSwitchOff
 42402 ;; This function uses a non-reentrant model
 42403 ;;
 42404                           
 42405                           	psect	text105
 42406   0164EE                     __ptext105:
 42407                           	callstack 0
 42408   0164EE                     _findEventForSwitch:
 42409                           	callstack 123
 42410                           
 42411                           ;incstack = 0
 42412                           ;findEventForSwitch@switchNo stored from wreg
 42413   0164EE  6E01               	movwf	findEventForSwitch@switchNo^(0+1280),c
 42414                           
 42415                           ;../canpan3Inputs.c: 308:     if (switchNo < ((8*4)+1)) {
 42416   0164F0  0E21               	movlw	33
 42417   0164F2  6001               	cpfslt	findEventForSwitch@switchNo^(0+1280),c
 42418   0164F4  D008               	goto	l9855
 42419                           
 42420                           ;../canpan3Inputs.c: 309:         return switch2Event[switchNo];
 42421   0164F6  0E00               	movlw	low _switch2Event
 42422   0164F8  2401               	addwf	findEventForSwitch@switchNo^(0+1280),w,c
 42423   0164FA  6ED9               	movwf	fsr2l,c
 42424   0164FC  6ADA               	clrf	fsr2h,c
 42425   0164FE  0E06               	movlw	high _switch2Event
 42426   016500  22DA               	addwfc	fsr2h,f,c
 42427   016502  50DF               	movf	indf2,w,c
 42428   016504  0012               	return	
 42429   016506                     l9855:
 42430                           
 42431                           ;../canpan3Inputs.c: 311:     return 0xff;
 42432   016506  0EFF               	movlw	255
 42433   016508  0012               	return		;funcret
 42434   01650A                     __end_of_findEventForSwitch:
 42435                           	callstack 0
 42436                           
 42437 ;; *************** function _driveColumn *****************
 42438 ;; Defined at:
 42439 ;;		line 295 in file "../canpan3Inputs.c"
 42440 ;; Parameters:    Size  Location     Type
 42441 ;;		None
 42442 ;; Auto vars:     Size  Location     Type
 42443 ;;		None
 42444 ;; Return value:  Size  Location     Type
 42445 ;;                  1    wreg      void 
 42446 ;; Registers used:
 42447 ;;		wreg, status,2, status,0
 42448 ;; Tracked objects:
 42449 ;;		On entry : 0/0
 42450 ;;		On exit  : 0/0
 42451 ;;		Unchanged: 0/0
 42452 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42455 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42456 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42457 ;;Total ram usage:        1 bytes
 42458 ;; Hardware stack levels used: 1
 42459 ;; Hardware stack levels required when called: 1
 42460 ;; This function calls:
 42461 ;;		Nothing
 42462 ;; This function is called by:
 42463 ;;		_initInputs
 42464 ;;		_inputScan
 42465 ;; This function uses a non-reentrant model
 42466 ;;
 42467                           
 42468                           	psect	text106
 42469   015A92                     __ptext106:
 42470                           	callstack 0
 42471   015A92                     _driveColumn:
 42472                           	callstack 123
 42473                           
 42474                           ;../canpan3Inputs.c: 296:     LATAbits.LATA0 = (column & 0x01)?1:0;
 42475                           
 42476                           ;incstack = 0
 42477   015A92  0105               	movlb	5	; () banked
 42478   015A94  A19D               	btfss	_column& (0+255),0,b
 42479   015A96  D003               	goto	u7670
 42480   015A98  6A01               	clrf	??_driveColumn^(0+1280),c
 42481   015A9A  2A01               	incf	??_driveColumn^(0+1280),f,c
 42482   015A9C  D001               	goto	u7688
 42483   015A9E                     u7670:
 42484   015A9E  6A01               	clrf	??_driveColumn^(0+1280),c
 42485   015AA0                     u7688:
 42486   015AA0  50BE               	movf	190,w,c	;volatile
 42487   015AA2  1801               	xorwf	??_driveColumn^(0+1280),w,c
 42488   015AA4  0BFE               	andlw	-2
 42489   015AA6  1801               	xorwf	??_driveColumn^(0+1280),w,c
 42490   015AA8  6EBE               	movwf	190,c	;volatile
 42491                           
 42492                           ;../canpan3Inputs.c: 297:     LATAbits.LATA1 = (column & 0x02)?1:0;
 42493   015AAA  0105               	movlb	5	; () banked
 42494   015AAC  A39D               	btfss	_column& (0+255),1,b
 42495   015AAE  D003               	goto	u7690
 42496   015AB0  6A01               	clrf	??_driveColumn^(0+1280),c
 42497   015AB2  2A01               	incf	??_driveColumn^(0+1280),f,c
 42498   015AB4  D001               	goto	u7708
 42499   015AB6                     u7690:
 42500   015AB6  6A01               	clrf	??_driveColumn^(0+1280),c
 42501   015AB8                     u7708:
 42502   015AB8  4601               	rlncf	??_driveColumn^(0+1280),f,c
 42503   015ABA  50BE               	movf	190,w,c	;volatile
 42504   015ABC  1801               	xorwf	??_driveColumn^(0+1280),w,c
 42505   015ABE  0BFD               	andlw	-3
 42506   015AC0  1801               	xorwf	??_driveColumn^(0+1280),w,c
 42507   015AC2  6EBE               	movwf	190,c	;volatile
 42508                           
 42509                           ;../canpan3Inputs.c: 298:     LATAbits.LATA2 = (column & 0x04)?1:0;
 42510   015AC4  0105               	movlb	5	; () banked
 42511   015AC6  A59D               	btfss	_column& (0+255),2,b
 42512   015AC8  D003               	goto	u7710
 42513   015ACA  6A01               	clrf	??_driveColumn^(0+1280),c
 42514   015ACC  2A01               	incf	??_driveColumn^(0+1280),f,c
 42515   015ACE  D001               	goto	u7728
 42516   015AD0                     u7710:
 42517   015AD0  6A01               	clrf	??_driveColumn^(0+1280),c
 42518   015AD2                     u7728:
 42519   015AD2  4601               	rlncf	??_driveColumn^(0+1280),f,c
 42520   015AD4  4601               	rlncf	??_driveColumn^(0+1280),f,c
 42521   015AD6  50BE               	movf	190,w,c	;volatile
 42522   015AD8  1801               	xorwf	??_driveColumn^(0+1280),w,c
 42523   015ADA  0BFB               	andlw	-5
 42524   015ADC  1801               	xorwf	??_driveColumn^(0+1280),w,c
 42525   015ADE  6EBE               	movwf	190,c	;volatile
 42526   015AE0  0012               	return		;funcret
 42527   015AE2                     __end_of_driveColumn:
 42528                           	callstack 0
 42529                           
 42530 ;; *************** function _canpanSendProducedEvent *****************
 42531 ;; Defined at:
 42532 ;;		line 265 in file "../canpan3Inputs.c"
 42533 ;; Parameters:    Size  Location     Type
 42534 ;;  tableIndex      1    wreg     unsigned char 
 42535 ;;  onOff           1   41[COMRAM] unsigned char 
 42536 ;; Auto vars:     Size  Location     Type
 42537 ;;  tableIndex      1   42[COMRAM] unsigned char 
 42538 ;;  producedEven    2   46[COMRAM] struct Word
 42539 ;;  producedEven    2   44[COMRAM] struct Word
 42540 ;;  opc             1   43[COMRAM] unsigned char 
 42541 ;; Return value:  Size  Location     Type
 42542 ;;                  1    wreg      void 
 42543 ;; Registers used:
 42544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 42545 ;; Tracked objects:
 42546 ;;		On entry : 0/0
 42547 ;;		On exit  : 0/0
 42548 ;;		Unchanged: 0/0
 42549 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42550 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42551 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42553 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42554 ;;Total ram usage:        7 bytes
 42555 ;; Hardware stack levels used: 1
 42556 ;; Hardware stack levels required when called: 6
 42557 ;; This function calls:
 42558 ;;		_getEN
 42559 ;;		_getNN
 42560 ;;		_incrementProducerCounter
 42561 ;;		_sendMessage4
 42562 ;; This function is called by:
 42563 ;;		_loop
 42564 ;;		_inputScan
 42565 ;;		_sodTRCallback
 42566 ;; This function uses a non-reentrant model
 42567 ;;
 42568                           
 42569                           	psect	text107
 42570   015434                     __ptext107:
 42571                           	callstack 0
 42572   015434                     _canpanSendProducedEvent:
 42573                           	callstack 117
 42574                           
 42575                           ;incstack = 0
 42576                           ;canpanSendProducedEvent@tableIndex stored from wreg
 42577   015434  6E2B               	movwf	canpanSendProducedEvent@tableIndex^(0+1280),c
 42578                           
 42579                           ;../canpan3Inputs.c: 266:     uint8_t opc;;../canpan3Inputs.c: 267:     Word producedEve
      +                          ntNN;;../canpan3Inputs.c: 268:     Word producedEventEN;;../canpan3Inputs.c: 270:     pr
      +                          oducedEventNN.word = getNN(tableIndex);
 42580   015436  502B               	movf	canpanSendProducedEvent@tableIndex^(0+1280),w,c
 42581   015438  EC7C  F0A1         	call	_getNN
 42582   01543C  C50D  F52F         	movff	?_getNN,canpanSendProducedEvent@producedEventNN
 42583   015440  C50E  F530         	movff	?_getNN+1,canpanSendProducedEvent@producedEventNN+1
 42584                           
 42585                           ;../canpan3Inputs.c: 271:     producedEventEN.word = getEN(tableIndex);
 42586   015444  502B               	movf	canpanSendProducedEvent@tableIndex^(0+1280),w,c
 42587   015446  EC70  F0A8         	call	_getEN
 42588   01544A  C50D  F52D         	movff	?_getEN,canpanSendProducedEvent@producedEventEN
 42589   01544E  C50E  F52E         	movff	?_getEN+1,canpanSendProducedEvent@producedEventEN+1
 42590                           
 42591                           ;../canpan3Inputs.c: 272:     if (producedEventNN.word == 0) {
 42592   015452  502F               	movf	canpanSendProducedEvent@producedEventNN^(0+1280),w,c
 42593   015454  1030               	iorwf	(canpanSendProducedEvent@producedEventNN+1)^(0+1280),w,c
 42594   015456  A4D8               	btfss	status,2,c
 42595   015458  D00C               	goto	l9185
 42596                           
 42597                           ;../canpan3Inputs.c: 274:         if (onOff) {
 42598   01545A  502A               	movf	canpanSendProducedEvent@onOff^(0+1280),w,c
 42599   01545C  B4D8               	btfsc	status,2,c
 42600   01545E  D002               	goto	l9181
 42601                           
 42602                           ;../canpan3Inputs.c: 275:             opc = OPC_ASON;
 42603   015460  0E98               	movlw	152
 42604   015462  D001               	goto	L9
 42605   015464                     l9181:
 42606                           
 42607                           ;../canpan3Inputs.c: 277:             opc = OPC_ASOF;
 42608   015464  0E99               	movlw	153
 42609   015466                     L9:
 42610   015466  6E2C               	movwf	canpanSendProducedEvent@opc^(0+1280),c
 42611                           
 42612                           ;../canpan3Inputs.c: 279:         producedEventNN.word = nn.word;
 42613   015468  C55E  F52F         	movff	_nn,canpanSendProducedEvent@producedEventNN
 42614   01546C  C55F  F530         	movff	_nn+1,canpanSendProducedEvent@producedEventNN+1
 42615                           
 42616                           ;../canpan3Inputs.c: 280:     } else {
 42617   015470  D007               	goto	l9191
 42618   015472                     l9185:
 42619                           
 42620                           ;../canpan3Inputs.c: 282:         if (onOff) {
 42621   015472  502A               	movf	canpanSendProducedEvent@onOff^(0+1280),w,c
 42622   015474  B4D8               	btfsc	status,2,c
 42623   015476  D002               	goto	l9189
 42624                           
 42625                           ;../canpan3Inputs.c: 283:             opc = OPC_ACON;
 42626   015478  0E90               	movlw	144
 42627   01547A  D001               	goto	L10
 42628   01547C                     l9189:
 42629                           
 42630                           ;../canpan3Inputs.c: 285:             opc = OPC_ACOF;
 42631   01547C  0E91               	movlw	145
 42632   01547E                     L10:
 42633   01547E  6E2C               	movwf	canpanSendProducedEvent@opc^(0+1280),c
 42634   015480                     l9191:
 42635                           
 42636                           ;../canpan3Inputs.c: 289:     sendMessage4(opc, producedEventNN.bytes.hi, producedEventN
      +                          N.bytes.lo,
 42637   015480  C530  F525         	movff	canpanSendProducedEvent@producedEventNN+1,sendMessage4@data1
 42638   015484  C52F  F526         	movff	canpanSendProducedEvent@producedEventNN,sendMessage4@data2
 42639   015488  C52E  F527         	movff	canpanSendProducedEvent@producedEventEN+1,sendMessage4@data3
 42640   01548C  C52D  F528         	movff	canpanSendProducedEvent@producedEventEN,sendMessage4@data4
 42641   015490  502C               	movf	canpanSendProducedEvent@opc^(0+1280),w,c
 42642   015492  EC4B  F0B1         	call	_sendMessage4
 42643                           
 42644                           ;../canpan3Inputs.c: 292:     incrementProducerCounter();
 42645   015496  EC0B  F0B3         	call	_incrementProducerCounter	;wreg free
 42646   01549A  0012               	return		;funcret
 42647   01549C                     __end_of_canpanSendProducedEvent:
 42648                           	callstack 0
 42649                           
 42650 ;; *************** function _sendMessage4 *****************
 42651 ;; Defined at:
 42652 ;;		line 1180 in file "../../VLCBlib_PIC/vlcb.c"
 42653 ;; Parameters:    Size  Location     Type
 42654 ;;  opc             1    wreg     enum E22928
 42655 ;;  data1           1   36[COMRAM] unsigned char 
 42656 ;;  data2           1   37[COMRAM] unsigned char 
 42657 ;;  data3           1   38[COMRAM] unsigned char 
 42658 ;;  data4           1   39[COMRAM] unsigned char 
 42659 ;; Auto vars:     Size  Location     Type
 42660 ;;  opc             1   40[COMRAM] enum E22928
 42661 ;; Return value:  Size  Location     Type
 42662 ;;                  1    wreg      void 
 42663 ;; Registers used:
 42664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 42665 ;; Tracked objects:
 42666 ;;		On entry : 0/0
 42667 ;;		On exit  : 0/0
 42668 ;;		Unchanged: 0/0
 42669 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42670 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42671 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42673 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42674 ;;Total ram usage:        5 bytes
 42675 ;; Hardware stack levels used: 1
 42676 ;; Hardware stack levels required when called: 5
 42677 ;; This function calls:
 42678 ;;		_sendMessage
 42679 ;; This function is called by:
 42680 ;;		_canpanSendProducedEvent
 42681 ;;		_mnsProcessMessage
 42682 ;;		_mnsTRrqnpnCallback
 42683 ;;		_nvProcessMessage
 42684 ;;		_nvTRnvrdCallback
 42685 ;;		_producerProcessMessage
 42686 ;; This function uses a non-reentrant model
 42687 ;;
 42688                           
 42689                           	psect	text108
 42690   016296                     __ptext108:
 42691                           	callstack 0
 42692   016296                     _sendMessage4:
 42693                           	callstack 119
 42694                           
 42695                           ;incstack = 0
 42696                           ;sendMessage4@opc stored from wreg
 42697   016296  6E29               	movwf	sendMessage4@opc^(0+1280),c
 42698                           
 42699                           ;../../VLCBlib_PIC/vlcb.c: 1181:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 42700   016298  0E05               	movlw	5
 42701   01629A  6E1C               	movwf	sendMessage@len^(0+1280),c
 42702   01629C  C525  F51D         	movff	sendMessage4@data1,sendMessage@data1
 42703   0162A0  C526  F51E         	movff	sendMessage4@data2,sendMessage@data2
 42704   0162A4  C527  F51F         	movff	sendMessage4@data3,sendMessage@data3
 42705   0162A8  C528  F520         	movff	sendMessage4@data4,sendMessage@data4
 42706   0162AC  0E00               	movlw	0
 42707   0162AE  6E21               	movwf	sendMessage@data5^(0+1280),c
 42708   0162B0  0E00               	movlw	0
 42709   0162B2  6E22               	movwf	sendMessage@data6^(0+1280),c
 42710   0162B4  0E00               	movlw	0
 42711   0162B6  6E23               	movwf	sendMessage@data7^(0+1280),c
 42712   0162B8  5029               	movf	sendMessage4@opc^(0+1280),w,c
 42713   0162BA  EC9B  F0A6         	call	_sendMessage
 42714   0162BE  0012               	return		;funcret
 42715   0162C0                     __end_of_sendMessage4:
 42716                           	callstack 0
 42717                           
 42718 ;; *************** function _sendMessage *****************
 42719 ;; Defined at:
 42720 ;;		line 1238 in file "../../VLCBlib_PIC/vlcb.c"
 42721 ;; Parameters:    Size  Location     Type
 42722 ;;  opc             1    wreg     enum E22928
 42723 ;;  len             1   27[COMRAM] unsigned char 
 42724 ;;  data1           1   28[COMRAM] unsigned char 
 42725 ;;  data2           1   29[COMRAM] unsigned char 
 42726 ;;  data3           1   30[COMRAM] unsigned char 
 42727 ;;  data4           1   31[COMRAM] unsigned char 
 42728 ;;  data5           1   32[COMRAM] unsigned char 
 42729 ;;  data6           1   33[COMRAM] unsigned char 
 42730 ;;  data7           1   34[COMRAM] unsigned char 
 42731 ;; Auto vars:     Size  Location     Type
 42732 ;;  opc             1   35[COMRAM] enum E22928
 42733 ;; Return value:  Size  Location     Type
 42734 ;;                  1    wreg      void 
 42735 ;; Registers used:
 42736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 42737 ;; Tracked objects:
 42738 ;;		On entry : 0/0
 42739 ;;		On exit  : 0/0
 42740 ;;		Unchanged: 0/0
 42741 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42742 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42745 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42746 ;;Total ram usage:        9 bytes
 42747 ;; Hardware stack levels used: 1
 42748 ;; Hardware stack levels required when called: 4
 42749 ;; This function calls:
 42750 ;;		_canSendMessage
 42751 ;; This function is called by:
 42752 ;;		_sendMessage2
 42753 ;;		_sendMessage3
 42754 ;;		_sendMessage4
 42755 ;;		_sendMessage5
 42756 ;;		_sendMessage6
 42757 ;;		_sendMessage7
 42758 ;;		_sendMessage0
 42759 ;;		_sendMessage1
 42760 ;; This function uses a non-reentrant model
 42761 ;;
 42762                           
 42763                           	psect	text109
 42764   014D36                     __ptext109:
 42765                           	callstack 0
 42766   014D36                     _sendMessage:
 42767                           	callstack 118
 42768                           
 42769                           ;incstack = 0
 42770                           ;sendMessage@opc stored from wreg
 42771   014D36  6E24               	movwf	sendMessage@opc^(0+1280),c
 42772                           
 42773                           ;../../VLCBlib_PIC/vlcb.c: 1239:     tmpMessage.opc = opc;
 42774   014D38  C524  F6C9         	movff	sendMessage@opc,_tmpMessage+1
 42775                           
 42776                           ;../../VLCBlib_PIC/vlcb.c: 1240:     tmpMessage.len = len;
 42777   014D3C  C51C  F6C8         	movff	sendMessage@len,_tmpMessage
 42778                           
 42779                           ;../../VLCBlib_PIC/vlcb.c: 1241:     tmpMessage.bytes[0] = data1;
 42780   014D40  C51D  F6CA         	movff	sendMessage@data1,_tmpMessage+2
 42781                           
 42782                           ;../../VLCBlib_PIC/vlcb.c: 1242:     tmpMessage.bytes[1] = data2;
 42783   014D44  C51E  F6CB         	movff	sendMessage@data2,_tmpMessage+3
 42784                           
 42785                           ;../../VLCBlib_PIC/vlcb.c: 1243:     tmpMessage.bytes[2] = data3;
 42786   014D48  C51F  F6CC         	movff	sendMessage@data3,_tmpMessage+4
 42787                           
 42788                           ;../../VLCBlib_PIC/vlcb.c: 1244:     tmpMessage.bytes[3] = data4;
 42789   014D4C  C520  F6CD         	movff	sendMessage@data4,_tmpMessage+5
 42790                           
 42791                           ;../../VLCBlib_PIC/vlcb.c: 1245:     tmpMessage.bytes[4] = data5;
 42792   014D50  C521  F6CE         	movff	sendMessage@data5,_tmpMessage+6
 42793                           
 42794                           ;../../VLCBlib_PIC/vlcb.c: 1246:     tmpMessage.bytes[5] = data6;
 42795   014D54  C522  F6CF         	movff	sendMessage@data6,_tmpMessage+7
 42796                           
 42797                           ;../../VLCBlib_PIC/vlcb.c: 1247:     tmpMessage.bytes[6] = data7;
 42798   014D58  C523  F6D0         	movff	sendMessage@data7,_tmpMessage+8
 42799                           
 42800                           ;../../VLCBlib_PIC/vlcb.c: 1248:     if (transport != ((void*)0)) {
 42801   014D5C  0105               	movlb	5	; () banked
 42802   014D5E  5180               	movf	_transport& (0+255),w,b
 42803   014D60  1181               	iorwf	(_transport+1)& (0+255),w,b
 42804   014D62  B4D8               	btfsc	status,2,c
 42805   014D64  0012               	return	
 42806                           
 42807                           ; BSR set to: 5
 42808                           ;../../VLCBlib_PIC/vlcb.c: 1249:         if (transport->sendMessage != ((void*)0)) {
 42809   014D66  C580  F4F6         	movff	_transport,tblptrl
 42810   014D6A  C581  F4F7         	movff	_transport+1,tblptrh
 42811   014D6E                     	if	0	;tblptru may be non-zero
 42812   014D6E                     	endif
 42813   014D6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42814   014D6E  0E00               	movlw	low (__pmediumconst shr (0+16))
 42815   014D70  6EF8               	movwf	tblptru,c
 42816   014D72                     	endif
 42817   014D72  0009               	tblrd		*+
 42818   014D74  50F5               	movf	tablat,w,c
 42819   014D76  0009               	tblrd		*+
 42820   014D78  10F5               	iorwf	tablat,w,c
 42821   014D7A  0009               	tblrd		*+
 42822   014D7C  10F5               	iorwf	tablat,w,c
 42823   014D7E  B4D8               	btfsc	status,2,c
 42824   014D80  0012               	return	
 42825                           
 42826                           ; BSR set to: 5
 42827                           ;../../VLCBlib_PIC/vlcb.c: 1250:             transport->sendMessage(&tmpMessage);
 42828   014D82  0EC8               	movlw	low _tmpMessage
 42829   014D84  6E0E               	movwf	canSendMessage@mp^(0+1280),c
 42830   014D86  0E06               	movlw	high _tmpMessage
 42831   014D88  6E0F               	movwf	(canSendMessage@mp+1)^(0+1280),c
 42832   014D8A  C580  F4F6         	movff	_transport,tblptrl
 42833   014D8E  C581  F4F7         	movff	_transport+1,tblptrh
 42834   014D92                     	if	0	;tblptru may be non-zero
 42835   014D92                     	endif
 42836   014D92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42837   014D92  0E00               	movlw	low (__pmediumconst shr (0+16))
 42838   014D94  6EF8               	movwf	tblptru,c
 42839   014D96                     	endif
 42840   014D96  D801               	call	u6348
 42841   014D98  0012               	return	
 42842   014D9A                     u6348:
 42843   014D9A  0005               	push	
 42844   014D9C  6EFA               	movwf	pclath,c
 42845   014D9E  0009               	tblrd		*+
 42846   014DA0  50F5               	movf	tablat,w,c
 42847   014DA2  6EFD               	movwf	tosl,c
 42848   014DA4  0009               	tblrd		*+
 42849   014DA6  50F5               	movf	tablat,w,c
 42850   014DA8  6EFE               	movwf	tosh,c
 42851   014DAA  0009               	tblrd		*+
 42852   014DAC  50F5               	movf	tablat,w,c
 42853   014DAE  6EFF               	movwf	tosu,c
 42854   014DB0  50FA               	movf	pclath,w,c
 42855   014DB2  0012               	return		;indir
 42856   014DB4                     __end_of_sendMessage:
 42857                           	callstack 0
 42858                           
 42859 ;; *************** function _canSendMessage *****************
 42860 ;; Defined at:
 42861 ;;		line 568 in file "../../VLCBlib_PIC/can18_can_2.c"
 42862 ;; Parameters:    Size  Location     Type
 42863 ;;  mp              2   13[COMRAM] PTR struct Message
 42864 ;;		 -> tmpMessage(9), 
 42865 ;; Auto vars:     Size  Location     Type
 42866 ;;  txFifoObj       2   25[COMRAM] PTR unsigned char 
 42867 ;;		 -> RAM(16383), 
 42868 ;;  m               2   23[COMRAM] PTR struct Message
 42869 ;;		 -> rxBuffers(72), NULL(0), 
 42870 ;;  temp            2   21[COMRAM] unsigned short 
 42871 ;;  i               1    0        unsigned char 
 42872 ;; Return value:  Size  Location     Type
 42873 ;;                  1    wreg      enum E23618
 42874 ;; Registers used:
 42875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42876 ;; Tracked objects:
 42877 ;;		On entry : 0/0
 42878 ;;		On exit  : 0/0
 42879 ;;		Unchanged: 0/0
 42880 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42881 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42882 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42883 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42884 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42885 ;;Total ram usage:       14 bytes
 42886 ;; Hardware stack levels used: 1
 42887 ;; Hardware stack levels required when called: 3
 42888 ;; This function calls:
 42889 ;;		_getNextWriteMessage
 42890 ;;		_getNumRxBuffersInUse
 42891 ;;		_getNumTxBuffersInUse
 42892 ;;		_have
 42893 ;;		_isEvent
 42894 ;;		_startEnumeration
 42895 ;;		_updateModuleErrorStatus
 42896 ;; This function is called by:
 42897 ;;		_sendMessage
 42898 ;; This function uses a non-reentrant model
 42899 ;;
 42900                           
 42901                           	psect	text110
 42902   0110D4                     __ptext110:
 42903                           	callstack 0
 42904   0110D4                     _canSendMessage:
 42905                           	callstack 118
 42906                           
 42907                           ;../../VLCBlib_PIC/can18_can_2.c: 569:     uint8_t i;;../../VLCBlib_PIC/can18_can_2.c: 5
      +                          70:     uint8_t* txFifoObj;;../../VLCBlib_PIC/can18_can_2.c: 572:     uint16_t temp;;../
      +                          ../VLCBlib_PIC/can18_can_2.c: 575:     Message * m;;../../VLCBlib_PIC/can18_can_2.c: 579
      +                          :     if (isEvent((uint8_t)(mp->opc))) {
 42908                           
 42909                           ;incstack = 0
 42910   0110D4  EE20 F001          	lfsr	2,1
 42911   0110D8  500E               	movf	canSendMessage@mp^(0+1280),w,c
 42912   0110DA  26D9               	addwf	fsr2l,f,c
 42913   0110DC  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 42914   0110DE  22DA               	addwfc	fsr2h,f,c
 42915   0110E0  50DF               	movf	indf2,w,c
 42916   0110E2  EC1A  F0B2         	call	_isEvent
 42917   0110E6  0900               	iorlw	0
 42918   0110E8  B4D8               	btfsc	status,2,c
 42919   0110EA  D0A5               	goto	l911
 42920                           
 42921                           ;../../VLCBlib_PIC/can18_can_2.c: 580:         if (have(SERVICE_ID_CONSUME_OWN_EVENTS)) 
      +                          {
 42922   0110EC  0E08               	movlw	8
 42923   0110EE  EC39  F0A8         	call	_have
 42924   0110F2  0900               	iorlw	0
 42925   0110F4  B4D8               	btfsc	status,2,c
 42926   0110F6  D09F               	goto	l911
 42927                           
 42928                           ;../../VLCBlib_PIC/can18_can_2.c: 582:             m = getNextWriteMessage(&rxQueue);
 42929   0110F8  0EBC               	movlw	low _rxQueue
 42930   0110FA  6E01               	movwf	getNextWriteMessage@q^(0+1280),c
 42931   0110FC  0E05               	movlw	high _rxQueue
 42932   0110FE  6E02               	movwf	(getNextWriteMessage@q+1)^(0+1280),c
 42933   011100  EC63  F09D         	call	_getNextWriteMessage	;wreg free
 42934   011104  C501  F518         	movff	?_getNextWriteMessage,canSendMessage@m
 42935   011108  C502  F519         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 42936                           
 42937                           ;../../VLCBlib_PIC/can18_can_2.c: 583:             if (m == ((void*)0)) {
 42938   01110C  5018               	movf	canSendMessage@m^(0+1280),w,c
 42939   01110E  1019               	iorwf	(canSendMessage@m+1)^(0+1280),w,c
 42940   011110  A4D8               	btfss	status,2,c
 42941   011112  D006               	goto	l8443
 42942                           
 42943                           ;../../VLCBlib_PIC/can18_can_2.c: 585:                 canDiagnostics[0x08].asUint++;
 42944   011114  0106               	movlb	6	; () banked
 42945   011116  4BB2               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 42946   011118  2BB3               	incf	(_canDiagnostics+17)& (0+255),f,b
 42947                           
 42948                           ; BSR set to: 6
 42949                           ;../../VLCBlib_PIC/can18_can_2.c: 586:                 updateModuleErrorStatus();
 42950   01111A  ECFB  F0B2         	call	_updateModuleErrorStatus	;wreg free
 42951                           
 42952                           ;../../VLCBlib_PIC/can18_can_2.c: 588:             } else {
 42953   01111E  D07A               	goto	l8461
 42954   011120                     l8443:
 42955                           
 42956                           ;../../VLCBlib_PIC/can18_can_2.c: 590:                 m->opc = mp->opc;
 42957   011120  EE20 F001          	lfsr	2,1
 42958   011124  500E               	movf	canSendMessage@mp^(0+1280),w,c
 42959   011126  26D9               	addwf	fsr2l,f,c
 42960   011128  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 42961   01112A  22DA               	addwfc	fsr2h,f,c
 42962   01112C  EE10 F001          	lfsr	1,1
 42963   011130  5018               	movf	canSendMessage@m^(0+1280),w,c
 42964   011132  26E1               	addwf	fsr1l,f,c
 42965   011134  5019               	movf	(canSendMessage@m+1)^(0+1280),w,c
 42966   011136  22E2               	addwfc	fsr1h,f,c
 42967   011138  C4DF F4E7          	movff	indf2,indf1
 42968                           
 42969                           ;../../VLCBlib_PIC/can18_can_2.c: 591:                 m->len = mp->len;
 42970   01113C  C50E  F4D9         	movff	canSendMessage@mp,fsr2l
 42971   011140  C50F  F4DA         	movff	canSendMessage@mp+1,fsr2h
 42972   011144  C518  F4E1         	movff	canSendMessage@m,fsr1l
 42973   011148  C519  F4E2         	movff	canSendMessage@m+1,fsr1h
 42974   01114C  C4DF F4E7          	movff	indf2,indf1
 42975                           
 42976                           ;../../VLCBlib_PIC/can18_can_2.c: 592:                 m->bytes[0] = mp->bytes[0];
 42977   011150  EE20 F002          	lfsr	2,2
 42978   011154  500E               	movf	canSendMessage@mp^(0+1280),w,c
 42979   011156  26D9               	addwf	fsr2l,f,c
 42980   011158  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 42981   01115A  22DA               	addwfc	fsr2h,f,c
 42982   01115C  EE10 F002          	lfsr	1,2
 42983   011160  5018               	movf	canSendMessage@m^(0+1280),w,c
 42984   011162  26E1               	addwf	fsr1l,f,c
 42985   011164  5019               	movf	(canSendMessage@m+1)^(0+1280),w,c
 42986   011166  22E2               	addwfc	fsr1h,f,c
 42987   011168  C4DF F4E7          	movff	indf2,indf1
 42988                           
 42989                           ;../../VLCBlib_PIC/can18_can_2.c: 593:                 m->bytes[1] = mp->bytes[1];
 42990   01116C  EE20 F003          	lfsr	2,3
 42991   011170  500E               	movf	canSendMessage@mp^(0+1280),w,c
 42992   011172  26D9               	addwf	fsr2l,f,c
 42993   011174  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 42994   011176  22DA               	addwfc	fsr2h,f,c
 42995   011178  EE10 F003          	lfsr	1,3
 42996   01117C  5018               	movf	canSendMessage@m^(0+1280),w,c
 42997   01117E  26E1               	addwf	fsr1l,f,c
 42998   011180  5019               	movf	(canSendMessage@m+1)^(0+1280),w,c
 42999   011182  22E2               	addwfc	fsr1h,f,c
 43000   011184  C4DF F4E7          	movff	indf2,indf1
 43001                           
 43002                           ;../../VLCBlib_PIC/can18_can_2.c: 594:                 m->bytes[2] = mp->bytes[2];
 43003   011188  EE20 F004          	lfsr	2,4
 43004   01118C  500E               	movf	canSendMessage@mp^(0+1280),w,c
 43005   01118E  26D9               	addwf	fsr2l,f,c
 43006   011190  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 43007   011192  22DA               	addwfc	fsr2h,f,c
 43008   011194  EE10 F004          	lfsr	1,4
 43009   011198  5018               	movf	canSendMessage@m^(0+1280),w,c
 43010   01119A  26E1               	addwf	fsr1l,f,c
 43011   01119C  5019               	movf	(canSendMessage@m+1)^(0+1280),w,c
 43012   01119E  22E2               	addwfc	fsr1h,f,c
 43013   0111A0  C4DF F4E7          	movff	indf2,indf1
 43014                           
 43015                           ;../../VLCBlib_PIC/can18_can_2.c: 595:                 m->bytes[3] = mp->bytes[3];
 43016   0111A4  EE20 F005          	lfsr	2,5
 43017   0111A8  500E               	movf	canSendMessage@mp^(0+1280),w,c
 43018   0111AA  26D9               	addwf	fsr2l,f,c
 43019   0111AC  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 43020   0111AE  22DA               	addwfc	fsr2h,f,c
 43021   0111B0  EE10 F005          	lfsr	1,5
 43022   0111B4  5018               	movf	canSendMessage@m^(0+1280),w,c
 43023   0111B6  26E1               	addwf	fsr1l,f,c
 43024   0111B8  5019               	movf	(canSendMessage@m+1)^(0+1280),w,c
 43025   0111BA  22E2               	addwfc	fsr1h,f,c
 43026   0111BC  C4DF F4E7          	movff	indf2,indf1
 43027                           
 43028                           ;../../VLCBlib_PIC/can18_can_2.c: 596:                 m->bytes[4] = mp->bytes[4];
 43029   0111C0  EE20 F006          	lfsr	2,6
 43030   0111C4  500E               	movf	canSendMessage@mp^(0+1280),w,c
 43031   0111C6  26D9               	addwf	fsr2l,f,c
 43032   0111C8  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 43033   0111CA  22DA               	addwfc	fsr2h,f,c
 43034   0111CC  EE10 F006          	lfsr	1,6
 43035   0111D0  5018               	movf	canSendMessage@m^(0+1280),w,c
 43036   0111D2  26E1               	addwf	fsr1l,f,c
 43037   0111D4  5019               	movf	(canSendMessage@m+1)^(0+1280),w,c
 43038   0111D6  22E2               	addwfc	fsr1h,f,c
 43039   0111D8  C4DF F4E7          	movff	indf2,indf1
 43040                           
 43041                           ;../../VLCBlib_PIC/can18_can_2.c: 597:                 m->bytes[5] = mp->bytes[5];
 43042   0111DC  EE20 F007          	lfsr	2,7
 43043   0111E0  500E               	movf	canSendMessage@mp^(0+1280),w,c
 43044   0111E2  26D9               	addwf	fsr2l,f,c
 43045   0111E4  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 43046   0111E6  22DA               	addwfc	fsr2h,f,c
 43047   0111E8  EE10 F007          	lfsr	1,7
 43048   0111EC  5018               	movf	canSendMessage@m^(0+1280),w,c
 43049   0111EE  26E1               	addwf	fsr1l,f,c
 43050   0111F0  5019               	movf	(canSendMessage@m+1)^(0+1280),w,c
 43051   0111F2  22E2               	addwfc	fsr1h,f,c
 43052   0111F4  C4DF F4E7          	movff	indf2,indf1
 43053                           
 43054                           ;../../VLCBlib_PIC/can18_can_2.c: 598:                 m->bytes[6] = mp->bytes[6];
 43055   0111F8  EE20 F008          	lfsr	2,8
 43056   0111FC  500E               	movf	canSendMessage@mp^(0+1280),w,c
 43057   0111FE  26D9               	addwf	fsr2l,f,c
 43058   011200  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 43059   011202  22DA               	addwfc	fsr2h,f,c
 43060   011204  EE10 F008          	lfsr	1,8
 43061   011208  5018               	movf	canSendMessage@m^(0+1280),w,c
 43062   01120A  26E1               	addwf	fsr1l,f,c
 43063   01120C  5019               	movf	(canSendMessage@m+1)^(0+1280),w,c
 43064   01120E  22E2               	addwfc	fsr1h,f,c
 43065   011210  C4DF F4E7          	movff	indf2,indf1
 43066   011214                     l8461:
 43067                           
 43068                           ;../../VLCBlib_PIC/can18_can_2.c: 601:             temp = getNumRxBuffersInUse();
 43069   011214  EC9F  F0AB         	call	_getNumRxBuffersInUse	;wreg free
 43070   011218  6E10               	movwf	??_canSendMessage^(0+1280),c
 43071   01121A  5010               	movf	??_canSendMessage^(0+1280),w,c
 43072   01121C  6E16               	movwf	canSendMessage@temp^(0+1280),c
 43073   01121E  6A17               	clrf	(canSendMessage@temp+1)^(0+1280),c
 43074                           
 43075                           ;../../VLCBlib_PIC/can18_can_2.c: 602:             if (temp > canDiagnostics[0x12].asUin
      +                          t) {
 43076   011220  5016               	movf	canSendMessage@temp^(0+1280),w,c
 43077   011222  0106               	movlb	6	; () banked
 43078   011224  5DC6               	subwf	(_canDiagnostics+36)& (0+255),w,b
 43079   011226  5017               	movf	(canSendMessage@temp+1)^(0+1280),w,c
 43080   011228  59C7               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 43081   01122A  B0D8               	btfsc	status,0,c
 43082   01122C  D004               	goto	l911
 43083                           
 43084                           ; BSR set to: 6
 43085                           ;../../VLCBlib_PIC/can18_can_2.c: 603:                 canDiagnostics[0x12].asUint = tem
      +                          p;
 43086   01122E  C516  F6C6         	movff	canSendMessage@temp,_canDiagnostics+36
 43087   011232  C517  F6C7         	movff	canSendMessage@temp+1,_canDiagnostics+37
 43088   011236                     l911:
 43089                           
 43090                           ;../../VLCBlib_PIC/can18_can_2.c: 610:     if (!C1FIFOSTA2Lbits.TFNRFNIF) {
 43091   011236  0101               	movlb	1	; () banked
 43092   011238  B16C               	btfsc	108,0,b	;volatile
 43093   01123A  D006               	goto	l916
 43094                           
 43095                           ; BSR set to: 1
 43096                           ;../../VLCBlib_PIC/can18_can_2.c: 612:         canDiagnostics[0x05].asUint++;
 43097   01123C  0106               	movlb	6	; () banked
 43098   01123E  4BAC               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 43099   011240  2BAD               	incf	(_canDiagnostics+11)& (0+255),f,b
 43100                           
 43101                           ; BSR set to: 6
 43102                           ;../../VLCBlib_PIC/can18_can_2.c: 613:         updateModuleErrorStatus();
 43103   011242  ECFB  F0B2         	call	_updateModuleErrorStatus	;wreg free
 43104   011246  0012               	return	
 43105   011248                     l916:
 43106                           
 43107                           ; BSR set to: 1
 43108                           ;../../VLCBlib_PIC/can18_can_2.c: 621:     if (C1FIFOSTA2Lbits.TXLARB == 1) {
 43109   011248  AD6C               	btfss	108,6,b	;volatile
 43110   01124A  D003               	goto	l8475
 43111                           
 43112                           ; BSR set to: 1
 43113                           ;../../VLCBlib_PIC/can18_can_2.c: 622:         canDiagnostics[0x0C].asUint++;
 43114   01124C  0106               	movlb	6	; () banked
 43115   01124E  4BBA               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 43116   011250  2BBB               	incf	(_canDiagnostics+25)& (0+255),f,b
 43117   011252                     l8475:
 43118                           
 43119                           ;../../VLCBlib_PIC/can18_can_2.c: 627:     if ((canId == 0) && (enumerationState == NO_E
      +                          NUMERATION)) {
 43120   011252  0105               	movlb	5	; () banked
 43121   011254  5195               	movf	_canId& (0+255),w,b
 43122   011256  A4D8               	btfss	status,2,c
 43123   011258  D007               	goto	l8481
 43124                           
 43125                           ; BSR set to: 5
 43126   01125A  5192               	movf	_enumerationState& (0+255),w,b
 43127   01125C  A4D8               	btfss	status,2,c
 43128   01125E  D004               	goto	l8481
 43129                           
 43130                           ; BSR set to: 5
 43131                           ;../../VLCBlib_PIC/can18_can_2.c: 628:         enumerationState = ENUMERATION_REQUIRED;
 43132   011260  0E01               	movlw	1
 43133   011262  6F92               	movwf	_enumerationState& (0+255),b
 43134                           
 43135                           ;../../VLCBlib_PIC/can18_can_2.c: 629:         canId = 1;
 43136   011264  0E01               	movlw	1
 43137   011266  6F95               	movwf	_canId& (0+255),b
 43138   011268                     l8481:
 43139                           
 43140                           ; BSR set to: 5
 43141                           ;../../VLCBlib_PIC/can18_can_2.c: 633:     txFifoObj = (uint8_t*) C1FIFOUA2;
 43142   011268  C170 F51A          	movff	368,canSendMessage@txFifoObj	;volatile
 43143   01126C  C171 F51B          	movff	369,canSendMessage@txFifoObj+1	;volatile
 43144                           
 43145                           ; BSR set to: 5
 43146                           ;../../VLCBlib_PIC/can18_can_2.c: 634:     txFifoObj[0] = (uint8_t)((canPri[priorities[m
      +                          p->opc]] & 1) << 7) | (canId & 0x7F);
 43147   011270  C595  F510         	movff	_canId,??_canSendMessage
 43148   011274  0E7F               	movlw	127
 43149   011276  1610               	andwf	??_canSendMessage^(0+1280),f,c
 43150   011278  EE20 F001          	lfsr	2,1
 43151   01127C  500E               	movf	canSendMessage@mp^(0+1280),w,c
 43152   01127E  26D9               	addwf	fsr2l,f,c
 43153   011280  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 43154   011282  22DA               	addwfc	fsr2h,f,c
 43155   011284  50DF               	movf	indf2,w,c
 43156   011286  6E11               	movwf	(??_canSendMessage+1)^(0+1280),c
 43157   011288  6A12               	clrf	(??_canSendMessage+2)^(0+1280),c
 43158   01128A  0E39               	movlw	low _priorities
 43159   01128C  2411               	addwf	(??_canSendMessage+1)^(0+1280),w,c
 43160   01128E  6EF6               	movwf	tblptrl,c
 43161   011290  0EFE               	movlw	high _priorities
 43162   011292  2012               	addwfc	(??_canSendMessage+2)^(0+1280),w,c
 43163   011294  6EF7               	movwf	tblptrh,c
 43164   011296                     	if	1	;There are 3 active tblptr bytes
 43165   011296  6AF8               	clrf	tblptru,c
 43166   011298  0E00               	movlw	low (__pmediumconst shr (0+16))
 43167   01129A  22F8               	addwfc	tblptru,f,c
 43168   01129C                     	endif
 43169   01129C  0008               	tblrd		*
 43170   01129E  50F5               	movf	tablat,w,c
 43171   0112A0  6E13               	movwf	(??_canSendMessage+3)^(0+1280),c
 43172   0112A2  6A14               	clrf	(??_canSendMessage+4)^(0+1280),c
 43173   0112A4  0E54               	movlw	low _canPri
 43174   0112A6  2413               	addwf	(??_canSendMessage+3)^(0+1280),w,c
 43175   0112A8  6EF6               	movwf	tblptrl,c
 43176   0112AA  0EFF               	movlw	high _canPri
 43177   0112AC  2014               	addwfc	(??_canSendMessage+4)^(0+1280),w,c
 43178   0112AE  6EF7               	movwf	tblptrh,c
 43179   0112B0                     	if	1	;There are 3 active tblptr bytes
 43180   0112B0  6AF8               	clrf	tblptru,c
 43181   0112B2  0E00               	movlw	low (__pmediumconst shr (0+16))
 43182   0112B4  22F8               	addwfc	tblptru,f,c
 43183   0112B6                     	endif
 43184   0112B6  0008               	tblrd		*
 43185   0112B8  C4F5 F515          	movff	tablat,??_canSendMessage+5
 43186   0112BC  0E01               	movlw	1
 43187   0112BE  1615               	andwf	(??_canSendMessage+5)^(0+1280),f,c
 43188   0112C0  0E00               	movlw	0
 43189   0112C2  B015               	btfsc	(??_canSendMessage+5)^(0+1280),0,c
 43190   0112C4  0E80               	movlw	128
 43191   0112C6  6E15               	movwf	(??_canSendMessage+5)^(0+1280),c
 43192   0112C8  5015               	movf	(??_canSendMessage+5)^(0+1280),w,c
 43193   0112CA  1010               	iorwf	??_canSendMessage^(0+1280),w,c
 43194   0112CC  C51A  F4D9         	movff	canSendMessage@txFifoObj,fsr2l
 43195   0112D0  C51B  F4DA         	movff	canSendMessage@txFifoObj+1,fsr2h
 43196   0112D4  6EDF               	movwf	indf2,c
 43197                           
 43198                           ; BSR set to: 5
 43199                           ;../../VLCBlib_PIC/can18_can_2.c: 635:     txFifoObj[1] = canPri[priorities[mp->opc]] >>
      +                           1;
 43200   0112D6  EE20 F001          	lfsr	2,1
 43201   0112DA  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 43202   0112DC  26D9               	addwf	fsr2l,f,c
 43203   0112DE  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 43204   0112E0  22DA               	addwfc	fsr2h,f,c
 43205   0112E2  EE10 F001          	lfsr	1,1
 43206   0112E6  500E               	movf	canSendMessage@mp^(0+1280),w,c
 43207   0112E8  26E1               	addwf	fsr1l,f,c
 43208   0112EA  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 43209   0112EC  22E2               	addwfc	fsr1h,f,c
 43210   0112EE  50E7               	movf	indf1,w,c
 43211   0112F0  6E10               	movwf	??_canSendMessage^(0+1280),c
 43212   0112F2  6A11               	clrf	(??_canSendMessage+1)^(0+1280),c
 43213   0112F4  0E39               	movlw	low _priorities
 43214   0112F6  2410               	addwf	??_canSendMessage^(0+1280),w,c
 43215   0112F8  6EF6               	movwf	tblptrl,c
 43216   0112FA  0EFE               	movlw	high _priorities
 43217   0112FC  2011               	addwfc	(??_canSendMessage+1)^(0+1280),w,c
 43218   0112FE  6EF7               	movwf	tblptrh,c
 43219   011300                     	if	1	;There are 3 active tblptr bytes
 43220   011300  6AF8               	clrf	tblptru,c
 43221   011302  0E00               	movlw	low (__pmediumconst shr (0+16))
 43222   011304  22F8               	addwfc	tblptru,f,c
 43223   011306                     	endif
 43224   011306  0008               	tblrd		*
 43225   011308  50F5               	movf	tablat,w,c
 43226   01130A  6E12               	movwf	(??_canSendMessage+2)^(0+1280),c
 43227   01130C  6A13               	clrf	(??_canSendMessage+3)^(0+1280),c
 43228   01130E  0E54               	movlw	low _canPri
 43229   011310  2412               	addwf	(??_canSendMessage+2)^(0+1280),w,c
 43230   011312  6EF6               	movwf	tblptrl,c
 43231   011314  0EFF               	movlw	high _canPri
 43232   011316  2013               	addwfc	(??_canSendMessage+3)^(0+1280),w,c
 43233   011318  6EF7               	movwf	tblptrh,c
 43234   01131A                     	if	1	;There are 3 active tblptr bytes
 43235   01131A  6AF8               	clrf	tblptru,c
 43236   01131C  0E00               	movlw	low (__pmediumconst shr (0+16))
 43237   01131E  22F8               	addwfc	tblptru,f,c
 43238   011320                     	endif
 43239   011320  0008               	tblrd		*
 43240   011322  C4F5 F514          	movff	tablat,??_canSendMessage+4
 43241   011326  90D8               	bcf	status,0,c
 43242   011328  3014               	rrcf	(??_canSendMessage+4)^(0+1280),w,c
 43243   01132A  6EDF               	movwf	indf2,c
 43244                           
 43245                           ; BSR set to: 5
 43246                           ;../../VLCBlib_PIC/can18_can_2.c: 636:     txFifoObj[4] = (mp->len&0xF);
 43247   01132C  EE20 F004          	lfsr	2,4
 43248   011330  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 43249   011332  26D9               	addwf	fsr2l,f,c
 43250   011334  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 43251   011336  22DA               	addwfc	fsr2h,f,c
 43252   011338  C50E  F4E1         	movff	canSendMessage@mp,fsr1l
 43253   01133C  C50F  F4E2         	movff	canSendMessage@mp+1,fsr1h
 43254   011340  50E7               	movf	indf1,w,c
 43255   011342  0B0F               	andlw	15
 43256   011344  6EDF               	movwf	indf2,c
 43257                           
 43258                           ; BSR set to: 5
 43259                           ;../../VLCBlib_PIC/can18_can_2.c: 637:     txFifoObj[5] = 0;
 43260   011346  EE20 F005          	lfsr	2,5
 43261   01134A  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 43262   01134C  26D9               	addwf	fsr2l,f,c
 43263   01134E  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 43264   011350  22DA               	addwfc	fsr2h,f,c
 43265   011352  6ADF               	clrf	indf2,c
 43266                           
 43267                           ; BSR set to: 5
 43268                           ;../../VLCBlib_PIC/can18_can_2.c: 638:     txFifoObj[6] = 0;
 43269   011354  EE20 F006          	lfsr	2,6
 43270   011358  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 43271   01135A  26D9               	addwf	fsr2l,f,c
 43272   01135C  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 43273   01135E  22DA               	addwfc	fsr2h,f,c
 43274   011360  6ADF               	clrf	indf2,c
 43275                           
 43276                           ; BSR set to: 5
 43277                           ;../../VLCBlib_PIC/can18_can_2.c: 639:     txFifoObj[7] = 0;
 43278   011362  EE20 F007          	lfsr	2,7
 43279   011366  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 43280   011368  26D9               	addwf	fsr2l,f,c
 43281   01136A  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 43282   01136C  22DA               	addwfc	fsr2h,f,c
 43283   01136E  6ADF               	clrf	indf2,c
 43284                           
 43285                           ; BSR set to: 5
 43286                           ;../../VLCBlib_PIC/can18_can_2.c: 640:     txFifoObj[8] = (uint8_t)(mp->opc);
 43287   011370  EE20 F001          	lfsr	2,1
 43288   011374  500E               	movf	canSendMessage@mp^(0+1280),w,c
 43289   011376  26D9               	addwf	fsr2l,f,c
 43290   011378  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 43291   01137A  22DA               	addwfc	fsr2h,f,c
 43292   01137C  EE10 F008          	lfsr	1,8
 43293   011380  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 43294   011382  26E1               	addwf	fsr1l,f,c
 43295   011384  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 43296   011386  22E2               	addwfc	fsr1h,f,c
 43297   011388  C4DF F4E7          	movff	indf2,indf1
 43298                           
 43299                           ; BSR set to: 5
 43300                           ;../../VLCBlib_PIC/can18_can_2.c: 641:     txFifoObj[9] = mp->bytes[0];
 43301   01138C  EE20 F002          	lfsr	2,2
 43302   011390  500E               	movf	canSendMessage@mp^(0+1280),w,c
 43303   011392  26D9               	addwf	fsr2l,f,c
 43304   011394  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 43305   011396  22DA               	addwfc	fsr2h,f,c
 43306   011398  EE10 F009          	lfsr	1,9
 43307   01139C  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 43308   01139E  26E1               	addwf	fsr1l,f,c
 43309   0113A0  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 43310   0113A2  22E2               	addwfc	fsr1h,f,c
 43311   0113A4  C4DF F4E7          	movff	indf2,indf1
 43312                           
 43313                           ; BSR set to: 5
 43314                           ;../../VLCBlib_PIC/can18_can_2.c: 642:     txFifoObj[10] = mp->bytes[1];
 43315   0113A8  EE20 F003          	lfsr	2,3
 43316   0113AC  500E               	movf	canSendMessage@mp^(0+1280),w,c
 43317   0113AE  26D9               	addwf	fsr2l,f,c
 43318   0113B0  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 43319   0113B2  22DA               	addwfc	fsr2h,f,c
 43320   0113B4  EE10 F00A          	lfsr	1,10
 43321   0113B8  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 43322   0113BA  26E1               	addwf	fsr1l,f,c
 43323   0113BC  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 43324   0113BE  22E2               	addwfc	fsr1h,f,c
 43325   0113C0  C4DF F4E7          	movff	indf2,indf1
 43326                           
 43327                           ; BSR set to: 5
 43328                           ;../../VLCBlib_PIC/can18_can_2.c: 643:     txFifoObj[11] = mp->bytes[2];
 43329   0113C4  EE20 F004          	lfsr	2,4
 43330   0113C8  500E               	movf	canSendMessage@mp^(0+1280),w,c
 43331   0113CA  26D9               	addwf	fsr2l,f,c
 43332   0113CC  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 43333   0113CE  22DA               	addwfc	fsr2h,f,c
 43334   0113D0  EE10 F00B          	lfsr	1,11
 43335   0113D4  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 43336   0113D6  26E1               	addwf	fsr1l,f,c
 43337   0113D8  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 43338   0113DA  22E2               	addwfc	fsr1h,f,c
 43339   0113DC  C4DF F4E7          	movff	indf2,indf1
 43340                           
 43341                           ; BSR set to: 5
 43342                           ;../../VLCBlib_PIC/can18_can_2.c: 644:     txFifoObj[12] = mp->bytes[3];
 43343   0113E0  EE20 F005          	lfsr	2,5
 43344   0113E4  500E               	movf	canSendMessage@mp^(0+1280),w,c
 43345   0113E6  26D9               	addwf	fsr2l,f,c
 43346   0113E8  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 43347   0113EA  22DA               	addwfc	fsr2h,f,c
 43348   0113EC  EE10 F00C          	lfsr	1,12
 43349   0113F0  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 43350   0113F2  26E1               	addwf	fsr1l,f,c
 43351   0113F4  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 43352   0113F6  22E2               	addwfc	fsr1h,f,c
 43353   0113F8  C4DF F4E7          	movff	indf2,indf1
 43354                           
 43355                           ; BSR set to: 5
 43356                           ;../../VLCBlib_PIC/can18_can_2.c: 645:     txFifoObj[13] = mp->bytes[4];
 43357   0113FC  EE20 F006          	lfsr	2,6
 43358   011400  500E               	movf	canSendMessage@mp^(0+1280),w,c
 43359   011402  26D9               	addwf	fsr2l,f,c
 43360   011404  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 43361   011406  22DA               	addwfc	fsr2h,f,c
 43362   011408  EE10 F00D          	lfsr	1,13
 43363   01140C  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 43364   01140E  26E1               	addwf	fsr1l,f,c
 43365   011410  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 43366   011412  22E2               	addwfc	fsr1h,f,c
 43367   011414  C4DF F4E7          	movff	indf2,indf1
 43368                           
 43369                           ; BSR set to: 5
 43370                           ;../../VLCBlib_PIC/can18_can_2.c: 646:     txFifoObj[14] = mp->bytes[5];
 43371   011418  EE20 F007          	lfsr	2,7
 43372   01141C  500E               	movf	canSendMessage@mp^(0+1280),w,c
 43373   01141E  26D9               	addwf	fsr2l,f,c
 43374   011420  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 43375   011422  22DA               	addwfc	fsr2h,f,c
 43376   011424  EE10 F00E          	lfsr	1,14
 43377   011428  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 43378   01142A  26E1               	addwf	fsr1l,f,c
 43379   01142C  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 43380   01142E  22E2               	addwfc	fsr1h,f,c
 43381   011430  C4DF F4E7          	movff	indf2,indf1
 43382                           
 43383                           ; BSR set to: 5
 43384                           ;../../VLCBlib_PIC/can18_can_2.c: 647:     txFifoObj[15] = mp->bytes[6];
 43385   011434  EE20 F008          	lfsr	2,8
 43386   011438  500E               	movf	canSendMessage@mp^(0+1280),w,c
 43387   01143A  26D9               	addwf	fsr2l,f,c
 43388   01143C  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 43389   01143E  22DA               	addwfc	fsr2h,f,c
 43390   011440  EE10 F00F          	lfsr	1,15
 43391   011444  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 43392   011446  26E1               	addwf	fsr1l,f,c
 43393   011448  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 43394   01144A  22E2               	addwfc	fsr1h,f,c
 43395   01144C  C4DF F4E7          	movff	indf2,indf1
 43396                           
 43397                           ; BSR set to: 5
 43398                           ;../../VLCBlib_PIC/can18_can_2.c: 650:     canDiagnostics[0x06].asUint++;
 43399   011450  0106               	movlb	6	; () banked
 43400   011452  4BAE               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 43401   011454  2BAF               	incf	(_canDiagnostics+13)& (0+255),f,b
 43402                           
 43403                           ; BSR set to: 6
 43404                           ;../../VLCBlib_PIC/can18_can_2.c: 652:     C1FIFOCON2H |= 0x1;
 43405   011456  0101               	movlb	1	; () banked
 43406   011458  8169               	bsf	105,0,b	;volatile
 43407                           
 43408                           ; BSR set to: 1
 43409                           ;../../VLCBlib_PIC/can18_can_2.c: 654:     temp = getNumTxBuffersInUse();
 43410   01145A  ECE3  F0AA         	call	_getNumTxBuffersInUse	;wreg free
 43411   01145E  6E10               	movwf	??_canSendMessage^(0+1280),c
 43412   011460  5010               	movf	??_canSendMessage^(0+1280),w,c
 43413   011462  6E16               	movwf	canSendMessage@temp^(0+1280),c
 43414   011464  6A17               	clrf	(canSendMessage@temp+1)^(0+1280),c
 43415                           
 43416                           ;../../VLCBlib_PIC/can18_can_2.c: 655:     if (temp > canDiagnostics[0x11].asUint) {
 43417   011466  5016               	movf	canSendMessage@temp^(0+1280),w,c
 43418   011468  0106               	movlb	6	; () banked
 43419   01146A  5DC4               	subwf	(_canDiagnostics+34)& (0+255),w,b
 43420   01146C  5017               	movf	(canSendMessage@temp+1)^(0+1280),w,c
 43421   01146E  59C5               	subwfb	(_canDiagnostics+35)& (0+255),w,b
 43422   011470  B0D8               	btfsc	status,0,c
 43423   011472  D004               	goto	l8521
 43424                           
 43425                           ; BSR set to: 6
 43426                           ;../../VLCBlib_PIC/can18_can_2.c: 656:         canDiagnostics[0x11].asUint = temp;
 43427   011474  C516  F6C4         	movff	canSendMessage@temp,_canDiagnostics+34
 43428   011478  C517  F6C5         	movff	canSendMessage@temp+1,_canDiagnostics+35
 43429   01147C                     l8521:
 43430                           
 43431                           ; BSR set to: 6
 43432                           ;../../VLCBlib_PIC/can18_can_2.c: 659:     if (canId == 0) {
 43433   01147C  0105               	movlb	5	; () banked
 43434   01147E  5195               	movf	_canId& (0+255),w,b
 43435   011480  A4D8               	btfss	status,2,c
 43436   011482  D004               	goto	l8525
 43437                           
 43438                           ; BSR set to: 5
 43439                           ;../../VLCBlib_PIC/can18_can_2.c: 661:         startEnumeration(1);
 43440   011484  0E01               	movlw	1
 43441   011486  ECA6  F0AC         	call	_startEnumeration
 43442                           
 43443                           ;../../VLCBlib_PIC/can18_can_2.c: 662:     } else {
 43444   01148A  0012               	return	
 43445   01148C                     l8525:
 43446                           
 43447                           ; BSR set to: 5
 43448                           ;../../VLCBlib_PIC/can18_can_2.c: 664:         C1FIFOCON2H |= 0x2;
 43449   01148C  0101               	movlb	1	; () banked
 43450   01148E  8369               	bsf	105,1,b	;volatile
 43451   011490  0012               	return		;funcret
 43452   011492                     __end_of_canSendMessage:
 43453                           	callstack 0
 43454                           
 43455 ;; *************** function _startEnumeration *****************
 43456 ;; Defined at:
 43457 ;;		line 769 in file "../../VLCBlib_PIC/can18_can_2.c"
 43458 ;; Parameters:    Size  Location     Type
 43459 ;;  txWaiting       1    wreg     enum E23474
 43460 ;; Auto vars:     Size  Location     Type
 43461 ;;  txWaiting       1   10[COMRAM] enum E23474
 43462 ;;  i               1   11[COMRAM] unsigned char 
 43463 ;; Return value:  Size  Location     Type
 43464 ;;                  1    wreg      void 
 43465 ;; Registers used:
 43466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43467 ;; Tracked objects:
 43468 ;;		On entry : 0/0
 43469 ;;		On exit  : 0/0
 43470 ;;		Unchanged: 0/0
 43471 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43473 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43476 ;;Total ram usage:        2 bytes
 43477 ;; Hardware stack levels used: 1
 43478 ;; Hardware stack levels required when called: 2
 43479 ;; This function calls:
 43480 ;;		_sendRTR
 43481 ;;		_tickGet
 43482 ;; This function is called by:
 43483 ;;		_canSendMessage
 43484 ;;		_processEnumeration
 43485 ;; This function uses a non-reentrant model
 43486 ;;
 43487                           
 43488                           	psect	text111
 43489   01594C                     __ptext111:
 43490                           	callstack 0
 43491   01594C                     _startEnumeration:
 43492                           	callstack 118
 43493                           
 43494                           ;incstack = 0
 43495                           ;startEnumeration@txWaiting stored from wreg
 43496   01594C  6E0B               	movwf	startEnumeration@txWaiting^(0+1280),c
 43497                           
 43498                           ;../../VLCBlib_PIC/can18_can_2.c: 770:     uint8_t i;;../../VLCBlib_PIC/can18_can_2.c: 7
      +                          72:     for (i=1; i< (0x7F/8)+1; i++) {
 43499   01594E  0E01               	movlw	1
 43500   015950  6E0C               	movwf	startEnumeration@i^(0+1280),c
 43501   015952                     l8367:
 43502                           
 43503                           ;../../VLCBlib_PIC/can18_can_2.c: 773:         enumerationResults[i] = 0;
 43504   015952  0E61               	movlw	low _enumerationResults
 43505   015954  240C               	addwf	startEnumeration@i^(0+1280),w,c
 43506   015956  6ED9               	movwf	fsr2l,c
 43507   015958  6ADA               	clrf	fsr2h,c
 43508   01595A  0E06               	movlw	high _enumerationResults
 43509   01595C  22DA               	addwfc	fsr2h,f,c
 43510   01595E  6ADF               	clrf	indf2,c
 43511                           
 43512                           ;../../VLCBlib_PIC/can18_can_2.c: 774:     }
 43513   015960  2A0C               	incf	startEnumeration@i^(0+1280),f,c
 43514   015962  0E0F               	movlw	15
 43515   015964  640C               	cpfsgt	startEnumeration@i^(0+1280),c
 43516   015966  D7F5               	goto	l8367
 43517                           
 43518                           ;../../VLCBlib_PIC/can18_can_2.c: 775:     enumerationResults[0] = 1;
 43519   015968  0E01               	movlw	1
 43520   01596A  0106               	movlb	6	; () banked
 43521   01596C  6F61               	movwf	_enumerationResults& (0+255),b
 43522                           
 43523                           ;../../VLCBlib_PIC/can18_can_2.c: 777:     enumerationState = txWaiting ? ENUMERATION_IN
      +                          _PROGRESS_TX_WAITING : ENUMERATION_IN_PROGRESS;
 43524   01596E  500B               	movf	startEnumeration@txWaiting^(0+1280),w,c
 43525   015970  A4D8               	btfss	status,2,c
 43526   015972  D002               	goto	l8377
 43527                           
 43528                           ; BSR set to: 6
 43529   015974  0E02               	movlw	2
 43530   015976  D001               	goto	L11
 43531   015978                     l8377:
 43532                           
 43533                           ; BSR set to: 6
 43534   015978  0E03               	movlw	3
 43535   01597A                     L11:
 43536   01597A  0105               	movlb	5	; () banked
 43537   01597C  6F92               	movwf	_enumerationState& (0+255),b
 43538                           
 43539                           ; BSR set to: 5
 43540                           ;../../VLCBlib_PIC/can18_can_2.c: 778:     enumerationStartTime.val = tickGet();
 43541   01597E  EC50  F0AC         	call	_tickGet	;wreg free
 43542   015982  C501  F564         	movff	?_tickGet,_enumerationStartTime
 43543   015986  C502  F565         	movff	?_tickGet+1,_enumerationStartTime+1
 43544   01598A  C503  F566         	movff	?_tickGet+2,_enumerationStartTime+2
 43545   01598E  C504  F567         	movff	?_tickGet+3,_enumerationStartTime+3
 43546                           
 43547                           ;../../VLCBlib_PIC/can18_can_2.c: 780:     canDiagnostics[0x0D].asUint++;
 43548   015992  0106               	movlb	6	; () banked
 43549   015994  4BBC               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 43550   015996  2BBD               	incf	(_canDiagnostics+27)& (0+255),f,b
 43551                           
 43552                           ; BSR set to: 6
 43553                           ;../../VLCBlib_PIC/can18_can_2.c: 782:     sendRTR();
 43554   015998  EC4C  F0AE         	call	_sendRTR	;wreg free
 43555   01599C  0012               	return		;funcret
 43556   01599E                     __end_of_startEnumeration:
 43557                           	callstack 0
 43558                           
 43559 ;; *************** function _sendRTR *****************
 43560 ;; Defined at:
 43561 ;;		line 672 in file "../../VLCBlib_PIC/can18_can_2.c"
 43562 ;; Parameters:    Size  Location     Type
 43563 ;;		None
 43564 ;; Auto vars:     Size  Location     Type
 43565 ;;  txFifoObj       2    0[COMRAM] PTR unsigned char 
 43566 ;;		 -> RAM(16383), 
 43567 ;; Return value:  Size  Location     Type
 43568 ;;                  1    wreg      void 
 43569 ;; Registers used:
 43570 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43571 ;; Tracked objects:
 43572 ;;		On entry : 0/0
 43573 ;;		On exit  : 0/0
 43574 ;;		Unchanged: 0/0
 43575 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43577 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43579 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43580 ;;Total ram usage:        2 bytes
 43581 ;; Hardware stack levels used: 1
 43582 ;; Hardware stack levels required when called: 1
 43583 ;; This function calls:
 43584 ;;		Nothing
 43585 ;; This function is called by:
 43586 ;;		_startEnumeration
 43587 ;; This function uses a non-reentrant model
 43588 ;;
 43589                           
 43590                           	psect	text112
 43591   015C98                     __ptext112:
 43592                           	callstack 0
 43593   015C98                     _sendRTR:
 43594                           	callstack 118
 43595                           
 43596                           ;../../VLCBlib_PIC/can18_can_2.c: 673:     uint8_t* txFifoObj = (uint8_t*) C1TXQUA;
 43597                           
 43598                           ;incstack = 0
 43599   015C98  C158 F501          	movff	344,sendRTR@txFifoObj	;volatile
 43600   015C9C  C159 F502          	movff	345,sendRTR@txFifoObj+1	;volatile
 43601                           
 43602                           ;../../VLCBlib_PIC/can18_can_2.c: 674:     txFifoObj[0] = (canId & 0x7F);
 43603   015CA0  0105               	movlb	5	; () banked
 43604   015CA2  5195               	movf	_canId& (0+255),w,b
 43605   015CA4  0B7F               	andlw	127
 43606   015CA6  C501  F4D9         	movff	sendRTR@txFifoObj,fsr2l
 43607   015CAA  C502  F4DA         	movff	sendRTR@txFifoObj+1,fsr2h
 43608   015CAE  6EDF               	movwf	indf2,c
 43609                           
 43610                           ; BSR set to: 5
 43611                           ;../../VLCBlib_PIC/can18_can_2.c: 675:     txFifoObj[1] = 0;
 43612   015CB0  EE20 F001          	lfsr	2,1
 43613   015CB4  5001               	movf	sendRTR@txFifoObj^(0+1280),w,c
 43614   015CB6  26D9               	addwf	fsr2l,f,c
 43615   015CB8  5002               	movf	(sendRTR@txFifoObj+1)^(0+1280),w,c
 43616   015CBA  22DA               	addwfc	fsr2h,f,c
 43617   015CBC  6ADF               	clrf	indf2,c
 43618                           
 43619                           ; BSR set to: 5
 43620                           ;../../VLCBlib_PIC/can18_can_2.c: 676:     txFifoObj[4] = 0x20;
 43621   015CBE  EE20 F004          	lfsr	2,4
 43622   015CC2  5001               	movf	sendRTR@txFifoObj^(0+1280),w,c
 43623   015CC4  26D9               	addwf	fsr2l,f,c
 43624   015CC6  5002               	movf	(sendRTR@txFifoObj+1)^(0+1280),w,c
 43625   015CC8  22DA               	addwfc	fsr2h,f,c
 43626   015CCA  0E20               	movlw	32
 43627   015CCC  6EDF               	movwf	indf2,c
 43628                           
 43629                           ; BSR set to: 5
 43630                           ;../../VLCBlib_PIC/can18_can_2.c: 677:     C1TXQCONH |= (0x2 | 0x1);
 43631   015CCE  0E03               	movlw	3
 43632   015CD0  0101               	movlb	1	; () banked
 43633   015CD2  1351               	iorwf	81,f,b	;volatile
 43634                           
 43635                           ; BSR set to: 1
 43636                           ;../../VLCBlib_PIC/can18_can_2.c: 679:     canDiagnostics[0x06].asUint++;
 43637   015CD4  0106               	movlb	6	; () banked
 43638   015CD6  4BAE               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 43639   015CD8  2BAF               	incf	(_canDiagnostics+13)& (0+255),f,b
 43640                           
 43641                           ; BSR set to: 6
 43642   015CDA  0012               	return		;funcret
 43643   015CDC                     __end_of_sendRTR:
 43644                           	callstack 0
 43645                           
 43646 ;; *************** function _isEvent *****************
 43647 ;; Defined at:
 43648 ;;		line 1130 in file "../../VLCBlib_PIC/vlcb.c"
 43649 ;; Parameters:    Size  Location     Type
 43650 ;;  opc             1    wreg     unsigned char 
 43651 ;; Auto vars:     Size  Location     Type
 43652 ;;  opc             1    1[COMRAM] unsigned char 
 43653 ;; Return value:  Size  Location     Type
 43654 ;;                  1    wreg      enum E23474
 43655 ;; Registers used:
 43656 ;;		wreg, status,2, status,0
 43657 ;; Tracked objects:
 43658 ;;		On entry : 0/0
 43659 ;;		On exit  : 0/0
 43660 ;;		Unchanged: 0/0
 43661 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43665 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43666 ;;Total ram usage:        2 bytes
 43667 ;; Hardware stack levels used: 1
 43668 ;; Hardware stack levels required when called: 1
 43669 ;; This function calls:
 43670 ;;		Nothing
 43671 ;; This function is called by:
 43672 ;;		_canSendMessage
 43673 ;; This function uses a non-reentrant model
 43674 ;;
 43675                           
 43676                           	psect	text113
 43677   016434                     __ptext113:
 43678                           	callstack 0
 43679   016434                     _isEvent:
 43680                           	callstack 119
 43681                           
 43682                           ; BSR set to: 6
 43683                           ;incstack = 0
 43684                           ;isEvent@opc stored from wreg
 43685   016434  6E02               	movwf	isEvent@opc^(0+1280),c
 43686                           
 43687                           ;../../VLCBlib_PIC/vlcb.c: 1131:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 43688   016436  6A01               	clrf	_isEvent$6167^(0+1280),c
 43689   016438  5002               	movf	isEvent@opc^(0+1280),w,c
 43690   01643A  0B90               	andlw	144
 43691   01643C  0A90               	xorlw	144
 43692   01643E  A4D8               	btfss	status,2,c
 43693   016440  D008               	goto	l2297
 43694   016442  5002               	movf	isEvent@opc^(0+1280),w,c
 43695   016444  0AFF               	xorlw	255
 43696   016446  0B06               	andlw	6
 43697   016448  0A06               	xorlw	6
 43698   01644A  A4D8               	btfss	status,2,c
 43699   01644C  D002               	goto	l2297
 43700   01644E  0E01               	movlw	1
 43701   016450  6E01               	movwf	_isEvent$6167^(0+1280),c
 43702   016452                     l2297:
 43703   016452  5001               	movf	_isEvent$6167^(0+1280),w,c
 43704   016454  0012               	return		;funcret
 43705   016456                     __end_of_isEvent:
 43706                           	callstack 0
 43707                           
 43708 ;; *************** function _have *****************
 43709 ;; Defined at:
 43710 ;;		line 848 in file "../../VLCBlib_PIC/vlcb.c"
 43711 ;; Parameters:    Size  Location     Type
 43712 ;;  id              1    wreg     unsigned char 
 43713 ;; Auto vars:     Size  Location     Type
 43714 ;;  id              1    2[COMRAM] unsigned char 
 43715 ;;  i               1    3[COMRAM] unsigned char 
 43716 ;; Return value:  Size  Location     Type
 43717 ;;                  1    wreg      enum E23601
 43718 ;; Registers used:
 43719 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 43720 ;; Tracked objects:
 43721 ;;		On entry : 0/0
 43722 ;;		On exit  : 0/0
 43723 ;;		Unchanged: 0/0
 43724 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43726 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43727 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43728 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43729 ;;Total ram usage:        4 bytes
 43730 ;; Hardware stack levels used: 1
 43731 ;; Hardware stack levels required when called: 1
 43732 ;; This function calls:
 43733 ;;		Nothing
 43734 ;; This function is called by:
 43735 ;;		_canSendMessage
 43736 ;;		_getParameterFlags
 43737 ;;		_getParameter
 43738 ;; This function uses a non-reentrant model
 43739 ;;
 43740                           
 43741                           	psect	text114
 43742   015072                     __ptext114:
 43743                           	callstack 0
 43744   015072                     _have:
 43745                           	callstack 119
 43746                           
 43747                           ;incstack = 0
 43748                           ;have@id stored from wreg
 43749   015072  6E03               	movwf	have@id^(0+1280),c
 43750                           
 43751                           ;../../VLCBlib_PIC/vlcb.c: 849:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 850:     for (i
      +                          =0; i<8; i++) {
 43752   015074  6A04               	clrf	have@i^(0+1280),c
 43753   015076                     l8329:
 43754                           
 43755                           ;../../VLCBlib_PIC/vlcb.c: 851:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 43756   015076  5004               	movf	have@i^(0+1280),w,c
 43757   015078  0D02               	mullw	2
 43758   01507A  0E39               	movlw	low _services
 43759   01507C  24F3               	addwf	243,w,c
 43760   01507E  6EF6               	movwf	tblptrl,c
 43761   015080  0EFF               	movlw	high _services
 43762   015082  20F4               	addwfc	244,w,c
 43763   015084  6EF7               	movwf	tblptrh,c
 43764   015086                     	if	1	;There are 3 active tblptr bytes
 43765   015086  6AF8               	clrf	tblptru,c
 43766   015088  0E00               	movlw	low (__pmediumconst shr (0+16))
 43767   01508A  22F8               	addwfc	tblptru,f,c
 43768   01508C                     	endif
 43769   01508C  0009               	tblrd		*+
 43770   01508E  50F5               	movf	tablat,w,c
 43771   015090  0009               	tblrd		*+
 43772   015092  10F5               	iorwf	tablat,w,c
 43773   015094  B4D8               	btfsc	status,2,c
 43774   015096  D01E               	goto	l8337
 43775   015098  5004               	movf	have@i^(0+1280),w,c
 43776   01509A  0D02               	mullw	2
 43777   01509C  0E39               	movlw	low _services
 43778   01509E  24F3               	addwf	243,w,c
 43779   0150A0  6EF6               	movwf	tblptrl,c
 43780   0150A2  0EFF               	movlw	high _services
 43781   0150A4  20F4               	addwfc	244,w,c
 43782   0150A6  6EF7               	movwf	tblptrh,c
 43783   0150A8                     	if	1	;There are 3 active tblptr bytes
 43784   0150A8  6AF8               	clrf	tblptru,c
 43785   0150AA  0E00               	movlw	low (__pmediumconst shr (0+16))
 43786   0150AC  22F8               	addwfc	tblptru,f,c
 43787   0150AE                     	endif
 43788   0150AE  0009               	tblrd		*+
 43789   0150B0  C4F5 F501          	movff	tablat,??_have
 43790   0150B4  0009               	tblrd		*+
 43791   0150B6  C4F5 F502          	movff	tablat,??_have+1
 43792   0150BA  C501  F4F6         	movff	??_have,tblptrl
 43793   0150BE  C502  F4F7         	movff	??_have+1,tblptrh
 43794   0150C2                     	if	0	;tblptru may be non-zero
 43795   0150C2                     	endif
 43796   0150C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 43797   0150C2  0E00               	movlw	low (__pmediumconst shr (0+16))
 43798   0150C4  6EF8               	movwf	tblptru,c
 43799   0150C6                     	endif
 43800   0150C6  0008               	tblrd		*
 43801   0150C8  50F5               	movf	tablat,w,c
 43802   0150CA  1803               	xorwf	have@id^(0+1280),w,c
 43803   0150CC  A4D8               	btfss	status,2,c
 43804   0150CE  D002               	goto	l8337
 43805                           
 43806                           ;../../VLCBlib_PIC/vlcb.c: 852:             return PRESENT;
 43807   0150D0  0E01               	movlw	1
 43808   0150D2  0012               	return	
 43809   0150D4                     l8337:
 43810                           
 43811                           ;../../VLCBlib_PIC/vlcb.c: 854:     }
 43812   0150D4  2A04               	incf	have@i^(0+1280),f,c
 43813   0150D6  0E07               	movlw	7
 43814   0150D8  6404               	cpfsgt	have@i^(0+1280),c
 43815   0150DA  D7CD               	goto	l8329
 43816                           
 43817                           ;../../VLCBlib_PIC/vlcb.c: 855:     return NOT_PRESENT;
 43818   0150DC  0E00               	movlw	0
 43819   0150DE  0012               	return		;funcret
 43820   0150E0                     __end_of_have:
 43821                           	callstack 0
 43822                           
 43823 ;; *************** function _getNumTxBuffersInUse *****************
 43824 ;; Defined at:
 43825 ;;		line 530 in file "../../VLCBlib_PIC/can18_can_2.c"
 43826 ;; Parameters:    Size  Location     Type
 43827 ;;		None
 43828 ;; Auto vars:     Size  Location     Type
 43829 ;;  i16             2    4[COMRAM] short 
 43830 ;; Return value:  Size  Location     Type
 43831 ;;                  1    wreg      unsigned char 
 43832 ;; Registers used:
 43833 ;;		wreg, status,2, status,0
 43834 ;; Tracked objects:
 43835 ;;		On entry : 0/0
 43836 ;;		On exit  : 0/0
 43837 ;;		Unchanged: 0/0
 43838 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43840 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43841 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43842 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43843 ;;Total ram usage:        6 bytes
 43844 ;; Hardware stack levels used: 1
 43845 ;; Hardware stack levels required when called: 1
 43846 ;; This function calls:
 43847 ;;		Nothing
 43848 ;; This function is called by:
 43849 ;;		_canGetDiagnostic
 43850 ;;		_canSendMessage
 43851 ;; This function uses a non-reentrant model
 43852 ;;
 43853                           
 43854                           	psect	text115
 43855   0155C6                     __ptext115:
 43856                           	callstack 0
 43857   0155C6                     _getNumTxBuffersInUse:
 43858                           	callstack 119
 43859                           
 43860                           ;../../VLCBlib_PIC/can18_can_2.c: 531:     if (! C1FIFOSTA2Lbits.TFNRFNIF) {
 43861                           
 43862                           ;incstack = 0
 43863   0155C6  0101               	movlb	1	; () banked
 43864   0155C8  B16C               	btfsc	108,0,b	;volatile
 43865   0155CA  D002               	goto	l8289
 43866                           
 43867                           ; BSR set to: 1
 43868                           ;../../VLCBlib_PIC/can18_can_2.c: 532:         return 32;
 43869   0155CC  0E20               	movlw	32
 43870   0155CE  0012               	return	
 43871   0155D0                     l8289:
 43872                           
 43873                           ; BSR set to: 1
 43874                           ;../../VLCBlib_PIC/can18_can_2.c: 534:         int16_t i16;;../../VLCBlib_PIC/can18_can_
      +                          2.c: 536:         i16 = (int16_t)((C1FIFOUA2 - ((0x3BB0 +((8 +8)*4))+((8 +8)*1)))/(8+8))
      +                          ;
 43875   0155D0  0E00               	movlw	0
 43876   0155D2  2570               	addwf	112,w,b	;volatile
 43877   0155D4  6E01               	movwf	??_getNumTxBuffersInUse^(0+1280),c
 43878   0155D6  0EC4               	movlw	196
 43879   0155D8  2171               	addwfc	113,w,b	;volatile
 43880   0155DA  6E02               	movwf	(??_getNumTxBuffersInUse+1)^(0+1280),c
 43881   0155DC  0EFF               	movlw	255
 43882   0155DE  2172               	addwfc	114,w,b	;volatile
 43883   0155E0  6E03               	movwf	(??_getNumTxBuffersInUse+2)^(0+1280),c
 43884   0155E2  0EFF               	movlw	255
 43885   0155E4  2173               	addwfc	115,w,b	;volatile
 43886   0155E6  6E04               	movwf	(??_getNumTxBuffersInUse+3)^(0+1280),c
 43887   0155E8  0E05               	movlw	5
 43888   0155EA  D005               	goto	u5860
 43889   0155EC                     u5865:
 43890   0155EC  90D8               	bcf	status,0,c
 43891   0155EE  3204               	rrcf	(??_getNumTxBuffersInUse+3)^(0+1280),f,c
 43892   0155F0  3203               	rrcf	(??_getNumTxBuffersInUse+2)^(0+1280),f,c
 43893   0155F2  3202               	rrcf	(??_getNumTxBuffersInUse+1)^(0+1280),f,c
 43894   0155F4  3201               	rrcf	??_getNumTxBuffersInUse^(0+1280),f,c
 43895   0155F6                     u5860:
 43896   0155F6  2EE8               	decfsz	wreg,f,c
 43897   0155F8  D7F9               	goto	u5865
 43898   0155FA  C501  F505         	movff	??_getNumTxBuffersInUse,getNumTxBuffersInUse@i16
 43899   0155FE  C502  F506         	movff	??_getNumTxBuffersInUse+1,getNumTxBuffersInUse@i16+1
 43900                           
 43901                           ;../../VLCBlib_PIC/can18_can_2.c: 537:         i16 = (int16_t)(i16 - C1FIFOSTA2Hbits.FIF
      +                          OCI);
 43902   015602  516D               	movf	109,w,b	;volatile
 43903   015604  0B1F               	andlw	31
 43904   015606  6E01               	movwf	??_getNumTxBuffersInUse^(0+1280),c
 43905   015608  5001               	movf	??_getNumTxBuffersInUse^(0+1280),w,c
 43906   01560A  5C05               	subwf	getNumTxBuffersInUse@i16^(0+1280),w,c
 43907   01560C  6E05               	movwf	getNumTxBuffersInUse@i16^(0+1280),c
 43908   01560E  5006               	movf	(getNumTxBuffersInUse@i16+1)^(0+1280),w,c
 43909   015610  A0D8               	btfss	status,0,c
 43910   015612  0406               	decf	(getNumTxBuffersInUse@i16+1)^(0+1280),w,c
 43911   015614  6E06               	movwf	(getNumTxBuffersInUse@i16+1)^(0+1280),c
 43912                           
 43913                           ;../../VLCBlib_PIC/can18_can_2.c: 538:         if (i16 < 0) i16 += 32;
 43914   015616  AE06               	btfss	(getNumTxBuffersInUse@i16+1)^(0+1280),7,c
 43915   015618  D004               	goto	l8293
 43916                           
 43917                           ; BSR set to: 1
 43918   01561A  0E20               	movlw	32
 43919   01561C  2605               	addwf	getNumTxBuffersInUse@i16^(0+1280),f,c
 43920   01561E  0E00               	movlw	0
 43921   015620  2206               	addwfc	(getNumTxBuffersInUse@i16+1)^(0+1280),f,c
 43922   015622                     l8293:
 43923                           
 43924                           ; BSR set to: 1
 43925                           ;../../VLCBlib_PIC/can18_can_2.c: 539:         return (uint8_t)i16;
 43926   015622  5005               	movf	getNumTxBuffersInUse@i16^(0+1280),w,c
 43927                           
 43928                           ; BSR set to: 1
 43929   015624  0012               	return		;funcret
 43930   015626                     __end_of_getNumTxBuffersInUse:
 43931                           	callstack 0
 43932                           
 43933 ;; *************** function _getNumRxBuffersInUse *****************
 43934 ;; Defined at:
 43935 ;;		line 548 in file "../../VLCBlib_PIC/can18_can_2.c"
 43936 ;; Parameters:    Size  Location     Type
 43937 ;;		None
 43938 ;; Auto vars:     Size  Location     Type
 43939 ;;  i16             2    4[COMRAM] short 
 43940 ;; Return value:  Size  Location     Type
 43941 ;;                  1    wreg      unsigned char 
 43942 ;; Registers used:
 43943 ;;		wreg, status,2, status,0
 43944 ;; Tracked objects:
 43945 ;;		On entry : 0/0
 43946 ;;		On exit  : 0/0
 43947 ;;		Unchanged: 0/0
 43948 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43951 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43952 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43953 ;;Total ram usage:        6 bytes
 43954 ;; Hardware stack levels used: 1
 43955 ;; Hardware stack levels required when called: 1
 43956 ;; This function calls:
 43957 ;;		Nothing
 43958 ;; This function is called by:
 43959 ;;		_canGetDiagnostic
 43960 ;;		_canSendMessage
 43961 ;;		_canReceiveMessage
 43962 ;; This function uses a non-reentrant model
 43963 ;;
 43964                           
 43965                           	psect	text116
 43966   01573E                     __ptext116:
 43967                           	callstack 0
 43968   01573E                     _getNumRxBuffersInUse:
 43969                           	callstack 119
 43970                           
 43971                           ;../../VLCBlib_PIC/can18_can_2.c: 549:     if (C1FIFOSTA3Lbits.TFERFFIF) {
 43972                           
 43973                           ; BSR set to: 1
 43974                           ;incstack = 0
 43975   01573E  0101               	movlb	1	; () banked
 43976   015740  A578               	btfss	120,2,b	;volatile
 43977   015742  D002               	goto	l8305
 43978                           
 43979                           ; BSR set to: 1
 43980                           ;../../VLCBlib_PIC/can18_can_2.c: 550:         return 32;
 43981   015744  0E20               	movlw	32
 43982   015746  0012               	return	
 43983   015748                     l8305:
 43984                           
 43985                           ; BSR set to: 1
 43986                           ;../../VLCBlib_PIC/can18_can_2.c: 552:         int16_t i16;;../../VLCBlib_PIC/can18_can_
      +                          2.c: 554:         i16 = (int16_t)(((((0x3BB0 +((8 +8)*4))+((8 +8)*1))+((8 +8)*32)) - C1F
      +                          IFOUA3)/(8+8));
 43987   015748  517C               	movf	124,w,b	;volatile
 43988   01574A  0800               	sublw	0
 43989   01574C  6E01               	movwf	??_getNumRxBuffersInUse^(0+1280),c
 43990   01574E  0E3E               	movlw	62
 43991   015750  557D               	subfwb	125,w,b	;volatile
 43992   015752  6E02               	movwf	(??_getNumRxBuffersInUse+1)^(0+1280),c
 43993   015754  0E00               	movlw	0
 43994   015756  557E               	subfwb	126,w,b	;volatile
 43995   015758  6E03               	movwf	(??_getNumRxBuffersInUse+2)^(0+1280),c
 43996   01575A  0E00               	movlw	0
 43997   01575C  557F               	subfwb	127,w,b	;volatile
 43998   01575E  6E04               	movwf	(??_getNumRxBuffersInUse+3)^(0+1280),c
 43999   015760  0E05               	movlw	5
 44000   015762  D005               	goto	u5890
 44001   015764                     u5895:
 44002   015764  90D8               	bcf	status,0,c
 44003   015766  3204               	rrcf	(??_getNumRxBuffersInUse+3)^(0+1280),f,c
 44004   015768  3203               	rrcf	(??_getNumRxBuffersInUse+2)^(0+1280),f,c
 44005   01576A  3202               	rrcf	(??_getNumRxBuffersInUse+1)^(0+1280),f,c
 44006   01576C  3201               	rrcf	??_getNumRxBuffersInUse^(0+1280),f,c
 44007   01576E                     u5890:
 44008   01576E  2EE8               	decfsz	wreg,f,c
 44009   015770  D7F9               	goto	u5895
 44010   015772  C501  F505         	movff	??_getNumRxBuffersInUse,getNumRxBuffersInUse@i16
 44011   015776  C502  F506         	movff	??_getNumRxBuffersInUse+1,getNumRxBuffersInUse@i16+1
 44012                           
 44013                           ;../../VLCBlib_PIC/can18_can_2.c: 555:         i16 += C1FIFOSTA3Hbits.FIFOCI;
 44014   01577A  5179               	movf	121,w,b	;volatile
 44015   01577C  0B1F               	andlw	31
 44016   01577E  6E01               	movwf	??_getNumRxBuffersInUse^(0+1280),c
 44017   015780  5001               	movf	??_getNumRxBuffersInUse^(0+1280),w,c
 44018   015782  2605               	addwf	getNumRxBuffersInUse@i16^(0+1280),f,c
 44019   015784  0E00               	movlw	0
 44020   015786  2206               	addwfc	(getNumRxBuffersInUse@i16+1)^(0+1280),f,c
 44021                           
 44022                           ;../../VLCBlib_PIC/can18_can_2.c: 556:         if (i16 < 0) i16 += 32;
 44023   015788  AE06               	btfss	(getNumRxBuffersInUse@i16+1)^(0+1280),7,c
 44024   01578A  D004               	goto	l8309
 44025                           
 44026                           ; BSR set to: 1
 44027   01578C  0E20               	movlw	32
 44028   01578E  2605               	addwf	getNumRxBuffersInUse@i16^(0+1280),f,c
 44029   015790  0E00               	movlw	0
 44030   015792  2206               	addwfc	(getNumRxBuffersInUse@i16+1)^(0+1280),f,c
 44031   015794                     l8309:
 44032                           
 44033                           ; BSR set to: 1
 44034                           ;../../VLCBlib_PIC/can18_can_2.c: 557:         return (uint8_t) i16;
 44035   015794  5005               	movf	getNumRxBuffersInUse@i16^(0+1280),w,c
 44036                           
 44037                           ; BSR set to: 1
 44038   015796  0012               	return		;funcret
 44039   015798                     __end_of_getNumRxBuffersInUse:
 44040                           	callstack 0
 44041                           
 44042 ;; *************** function _getNextWriteMessage *****************
 44043 ;; Defined at:
 44044 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 44045 ;; Parameters:    Size  Location     Type
 44046 ;;  q               2    0[COMRAM] PTR struct MessageQueue
 44047 ;;		 -> rxQueue(5), 
 44048 ;; Auto vars:     Size  Location     Type
 44049 ;;  wr              1   12[COMRAM] unsigned char 
 44050 ;; Return value:  Size  Location     Type
 44051 ;;                  2    0[COMRAM] PTR struct Message
 44052 ;; Registers used:
 44053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44054 ;; Tracked objects:
 44055 ;;		On entry : 0/0
 44056 ;;		On exit  : 0/0
 44057 ;;		Unchanged: 0/0
 44058 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44059 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44060 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44061 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44062 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44063 ;;Total ram usage:       13 bytes
 44064 ;; Hardware stack levels used: 1
 44065 ;; Hardware stack levels required when called: 1
 44066 ;; This function calls:
 44067 ;;		Nothing
 44068 ;; This function is called by:
 44069 ;;		_canSendMessage
 44070 ;; This function uses a non-reentrant model
 44071 ;;
 44072                           
 44073                           	psect	text117
 44074   013AC6                     __ptext117:
 44075                           	callstack 0
 44076   013AC6                     _getNextWriteMessage:
 44077                           	callstack 119
 44078                           
 44079                           ; BSR set to: 1
 44080                           ;incstack = 0
 44081   013AC6  EE20 F002          	lfsr	2,2
 44082   013ACA  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 44083   013ACC  26D9               	addwf	fsr2l,f,c
 44084   013ACE  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 44085   013AD0  22DA               	addwfc	fsr2h,f,c
 44086   013AD2  50DF               	movf	indf2,w,c
 44087   013AD4  6E04               	movwf	??_getNextWriteMessage^(0+1280),c
 44088   013AD6  6A05               	clrf	(??_getNextWriteMessage+1)^(0+1280),c
 44089   013AD8  EE20 F004          	lfsr	2,4
 44090   013ADC  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 44091   013ADE  26D9               	addwf	fsr2l,f,c
 44092   013AE0  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 44093   013AE2  22DA               	addwfc	fsr2h,f,c
 44094   013AE4  50DF               	movf	indf2,w,c
 44095   013AE6  6E06               	movwf	(??_getNextWriteMessage+2)^(0+1280),c
 44096   013AE8  0EFF               	movlw	255
 44097   013AEA  2406               	addwf	(??_getNextWriteMessage+2)^(0+1280),w,c
 44098   013AEC  6E07               	movwf	(??_getNextWriteMessage+3)^(0+1280),c
 44099   013AEE  6A08               	clrf	(??_getNextWriteMessage+4)^(0+1280),c
 44100   013AF0  0EFF               	movlw	255
 44101   013AF2  2208               	addwfc	(??_getNextWriteMessage+4)^(0+1280),f,c
 44102   013AF4  EE20 F003          	lfsr	2,3
 44103   013AF8  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 44104   013AFA  26D9               	addwf	fsr2l,f,c
 44105   013AFC  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 44106   013AFE  22DA               	addwfc	fsr2h,f,c
 44107   013B00  50DF               	movf	indf2,w,c
 44108   013B02  6E09               	movwf	(??_getNextWriteMessage+5)^(0+1280),c
 44109   013B04  6A0A               	clrf	(??_getNextWriteMessage+6)^(0+1280),c
 44110   013B06  0E01               	movlw	1
 44111   013B08  2609               	addwf	(??_getNextWriteMessage+5)^(0+1280),f,c
 44112   013B0A  0E00               	movlw	0
 44113   013B0C  220A               	addwfc	(??_getNextWriteMessage+6)^(0+1280),f,c
 44114   013B0E  5007               	movf	(??_getNextWriteMessage+3)^(0+1280),w,c
 44115   013B10  1409               	andwf	(??_getNextWriteMessage+5)^(0+1280),w,c
 44116   013B12  6E0B               	movwf	(??_getNextWriteMessage+7)^(0+1280),c
 44117   013B14  5008               	movf	(??_getNextWriteMessage+4)^(0+1280),w,c
 44118   013B16  140A               	andwf	(??_getNextWriteMessage+6)^(0+1280),w,c
 44119   013B18  6E0C               	movwf	(??_getNextWriteMessage+8)^(0+1280),c
 44120   013B1A  5004               	movf	??_getNextWriteMessage^(0+1280),w,c
 44121   013B1C  180B               	xorwf	(??_getNextWriteMessage+7)^(0+1280),w,c
 44122   013B1E  E109               	bnz	l8351
 44123   013B20  5005               	movf	(??_getNextWriteMessage+1)^(0+1280),w,c
 44124   013B22  180C               	xorwf	(??_getNextWriteMessage+8)^(0+1280),w,c
 44125   013B24  A4D8               	btfss	status,2,c
 44126   013B26  D005               	goto	l8351
 44127   013B28  0E00               	movlw	0
 44128   013B2A  6E01               	movwf	?_getNextWriteMessage^(0+1280),c
 44129   013B2C  0E00               	movlw	0
 44130   013B2E  6E02               	movwf	(?_getNextWriteMessage+1)^(0+1280),c
 44131   013B30  0012               	return	
 44132   013B32                     l8351:
 44133   013B32  EE20 F003          	lfsr	2,3
 44134   013B36  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 44135   013B38  26D9               	addwf	fsr2l,f,c
 44136   013B3A  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 44137   013B3C  22DA               	addwfc	fsr2h,f,c
 44138   013B3E  50DF               	movf	indf2,w,c
 44139   013B40  6E0D               	movwf	getNextWriteMessage@wr^(0+1280),c
 44140   013B42  EE20 F003          	lfsr	2,3
 44141   013B46  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 44142   013B48  26D9               	addwf	fsr2l,f,c
 44143   013B4A  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 44144   013B4C  22DA               	addwfc	fsr2h,f,c
 44145   013B4E  2ADF               	incf	indf2,f,c
 44146   013B50  EE20 F004          	lfsr	2,4
 44147   013B54  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 44148   013B56  26D9               	addwf	fsr2l,f,c
 44149   013B58  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 44150   013B5A  22DA               	addwfc	fsr2h,f,c
 44151   013B5C  EE10 F003          	lfsr	1,3
 44152   013B60  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 44153   013B62  26E1               	addwf	fsr1l,f,c
 44154   013B64  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 44155   013B66  22E2               	addwfc	fsr1h,f,c
 44156   013B68  50DE               	movf	postinc2,w,c
 44157   013B6A  5CE6               	subwf	postinc1,w,c
 44158   013B6C  A0D8               	btfss	status,0,c
 44159   013B6E  D007               	goto	l8357
 44160   013B70  EE20 F003          	lfsr	2,3
 44161   013B74  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 44162   013B76  26D9               	addwf	fsr2l,f,c
 44163   013B78  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 44164   013B7A  22DA               	addwfc	fsr2h,f,c
 44165   013B7C  6ADF               	clrf	indf2,c
 44166   013B7E                     l8357:
 44167   013B7E  500D               	movf	getNextWriteMessage@wr^(0+1280),w,c
 44168   013B80  0D09               	mullw	9
 44169   013B82  C4F3 F504          	movff	prodl,??_getNextWriteMessage
 44170   013B86  C4F4 F505          	movff	prodh,??_getNextWriteMessage+1
 44171   013B8A  C501  F4D9         	movff	getNextWriteMessage@q,fsr2l
 44172   013B8E  C502  F4DA         	movff	getNextWriteMessage@q+1,fsr2h
 44173   013B92  C4DE F506          	movff	postinc2,??_getNextWriteMessage+2
 44174   013B96  C4DD F507          	movff	postdec2,??_getNextWriteMessage+3
 44175   013B9A  5004               	movf	??_getNextWriteMessage^(0+1280),w,c
 44176   013B9C  2406               	addwf	(??_getNextWriteMessage+2)^(0+1280),w,c
 44177   013B9E  6E01               	movwf	?_getNextWriteMessage^(0+1280),c
 44178   013BA0  5005               	movf	(??_getNextWriteMessage+1)^(0+1280),w,c
 44179   013BA2  2007               	addwfc	(??_getNextWriteMessage+3)^(0+1280),w,c
 44180   013BA4  6E02               	movwf	(?_getNextWriteMessage+1)^(0+1280),c
 44181   013BA6  0012               	return		;funcret
 44182   013BA8                     __end_of_getNextWriteMessage:
 44183                           	callstack 0
 44184                           
 44185 ;; *************** function _incrementProducerCounter *****************
 44186 ;; Defined at:
 44187 ;;		line 167 in file "../../VLCBlib_PIC/event_producer_simple.c"
 44188 ;; Parameters:    Size  Location     Type
 44189 ;;		None
 44190 ;; Auto vars:     Size  Location     Type
 44191 ;;		None
 44192 ;; Return value:  Size  Location     Type
 44193 ;;                  1    wreg      void 
 44194 ;; Registers used:
 44195 ;;		status,2, status,0
 44196 ;; Tracked objects:
 44197 ;;		On entry : 0/0
 44198 ;;		On exit  : 0/0
 44199 ;;		Unchanged: 0/0
 44200 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44205 ;;Total ram usage:        0 bytes
 44206 ;; Hardware stack levels used: 1
 44207 ;; Hardware stack levels required when called: 1
 44208 ;; This function calls:
 44209 ;;		Nothing
 44210 ;; This function is called by:
 44211 ;;		_canpanSendProducedEvent
 44212 ;; This function uses a non-reentrant model
 44213 ;;
 44214                           
 44215                           	psect	text118
 44216   016616                     __ptext118:
 44217                           	callstack 0
 44218   016616                     _incrementProducerCounter:
 44219                           	callstack 121
 44220                           
 44221                           ;../../VLCBlib_PIC/event_producer_simple.c: 168:     producerDiagnostics[1].asUint++;
 44222                           
 44223                           ;incstack = 0
 44224   016616  0105               	movlb	5	; () banked
 44225   016618  4BC3               	infsnz	(_producerDiagnostics+2)& (0+255),f,b
 44226   01661A  2BC4               	incf	(_producerDiagnostics+3)& (0+255),f,b
 44227                           
 44228                           ; BSR set to: 5
 44229   01661C  0012               	return		;funcret
 44230   01661E                     __end_of_incrementProducerCounter:
 44231                           	callstack 0
 44232                           
 44233 ;; *************** function _doFlash *****************
 44234 ;; Defined at:
 44235 ;;		line 109 in file "../canpan3Leds.c"
 44236 ;; Parameters:    Size  Location     Type
 44237 ;;		None
 44238 ;; Auto vars:     Size  Location     Type
 44239 ;;  ledNo           1   14[COMRAM] unsigned char 
 44240 ;; Return value:  Size  Location     Type
 44241 ;;                  1    wreg      void 
 44242 ;; Registers used:
 44243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44244 ;; Tracked objects:
 44245 ;;		On entry : 0/0
 44246 ;;		On exit  : 0/0
 44247 ;;		Unchanged: 0/0
 44248 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44252 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44253 ;;Total ram usage:        3 bytes
 44254 ;; Hardware stack levels used: 1
 44255 ;; Hardware stack levels required when called: 3
 44256 ;; This function calls:
 44257 ;;		_clearLed
 44258 ;;		_setLed
 44259 ;; This function is called by:
 44260 ;;		_loop
 44261 ;; This function uses a non-reentrant model
 44262 ;;
 44263                           
 44264                           	psect	text119
 44265   014AB2                     __ptext119:
 44266                           	callstack 0
 44267   014AB2                     _doFlash:
 44268                           	callstack 122
 44269                           
 44270                           ;../canpan3Leds.c: 110:     uint8_t ledNo;;../canpan3Leds.c: 112:     for (ledNo=0; ledN
      +                          o<(4*8); ledNo++) {
 44271                           
 44272                           ; BSR set to: 5
 44273                           ;incstack = 0
 44274   014AB2  6A0F               	clrf	doFlash@ledNo^(0+1280),c
 44275   014AB4  D018               	goto	l11503
 44276   014AB6                     l11489:
 44277                           
 44278                           ;../canpan3Leds.c: 115:                 if (flashToggle) {
 44279   014AB6  0105               	movlb	5	; () banked
 44280   014AB8  5199               	movf	_flashToggle& (0+255),w,b
 44281   014ABA  B4D8               	btfsc	status,2,c
 44282   014ABC  D004               	goto	l11493
 44283                           
 44284                           ; BSR set to: 5
 44285                           ;../canpan3Leds.c: 116:                     setLed(ledNo);
 44286   014ABE  500F               	movf	doFlash@ledNo^(0+1280),w,c
 44287   014AC0  ECEF  F0AE         	call	_setLed
 44288                           
 44289                           ;../canpan3Leds.c: 117:                 } else {
 44290   014AC4  D02A               	goto	l11505
 44291   014AC6                     l11493:
 44292                           
 44293                           ; BSR set to: 5
 44294                           ;../canpan3Leds.c: 118:                     clearLed(ledNo);
 44295   014AC6  500F               	movf	doFlash@ledNo^(0+1280),w,c
 44296   014AC8  EC6E  F0AE         	call	_clearLed
 44297   014ACC  D026               	goto	l11505
 44298   014ACE                     l11495:
 44299                           
 44300                           ;../canpan3Leds.c: 122:                 if (flashToggle) {
 44301   014ACE  0105               	movlb	5	; () banked
 44302   014AD0  5199               	movf	_flashToggle& (0+255),w,b
 44303   014AD2  B4D8               	btfsc	status,2,c
 44304   014AD4  D004               	goto	l11499
 44305                           
 44306                           ; BSR set to: 5
 44307                           ;../canpan3Leds.c: 123:                     clearLed(ledNo);
 44308   014AD6  500F               	movf	doFlash@ledNo^(0+1280),w,c
 44309   014AD8  EC6E  F0AE         	call	_clearLed
 44310                           
 44311                           ;../canpan3Leds.c: 124:                 } else {
 44312   014ADC  D01E               	goto	l11505
 44313   014ADE                     l11499:
 44314                           
 44315                           ; BSR set to: 5
 44316                           ;../canpan3Leds.c: 125:                     setLed(ledNo);
 44317   014ADE  500F               	movf	doFlash@ledNo^(0+1280),w,c
 44318   014AE0  ECEF  F0AE         	call	_setLed
 44319   014AE4  D01A               	goto	l11505
 44320   014AE6                     l11503:
 44321   014AE6  0E21               	movlw	low _ledStates
 44322   014AE8  240F               	addwf	doFlash@ledNo^(0+1280),w,c
 44323   014AEA  6ED9               	movwf	fsr2l,c
 44324   014AEC  6ADA               	clrf	fsr2h,c
 44325   014AEE  0E06               	movlw	high _ledStates
 44326   014AF0  22DA               	addwfc	fsr2h,f,c
 44327   014AF2  50DF               	movf	indf2,w,c
 44328   014AF4  6E0D               	movwf	??_doFlash^(0+1280),c
 44329   014AF6  6A0E               	clrf	(??_doFlash+1)^(0+1280),c
 44330                           
 44331                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 44332                           ; Switch size 1, requested type "simple"
 44333                           ; Number of cases is 1, Range of values is 0 to 0
 44334                           ; switch strategies available:
 44335                           ; Name         Instructions Cycles
 44336                           ; simple_byte            4     3 (average)
 44337                           ;	Chosen strategy is simple_byte
 44338   014AF8  500E               	movf	(??_doFlash+1)^(0+1280),w,c
 44339   014AFA  0A00               	xorlw	0	; case 0
 44340   014AFC  A4D8               	btfss	status,2,c
 44341   014AFE  D00D               	goto	l11505
 44342                           
 44343                           ; Switch size 1, requested type "simple"
 44344                           ; Number of cases is 4, Range of values is 0 to 3
 44345                           ; switch strategies available:
 44346                           ; Name         Instructions Cycles
 44347                           ; simple_byte           13     7 (average)
 44348                           ;	Chosen strategy is simple_byte
 44349   014B00  500D               	movf	??_doFlash^(0+1280),w,c
 44350   014B02  0A00               	xorlw	0	; case 0
 44351   014B04  B4D8               	btfsc	status,2,c
 44352   014B06  D009               	goto	l11505
 44353   014B08  0A01               	xorlw	1	; case 1
 44354   014B0A  B4D8               	btfsc	status,2,c
 44355   014B0C  D006               	goto	l11505
 44356   014B0E  0A03               	xorlw	3	; case 2
 44357   014B10  B4D8               	btfsc	status,2,c
 44358   014B12  D7D1               	goto	l11489
 44359   014B14  0A01               	xorlw	1	; case 3
 44360   014B16  B4D8               	btfsc	status,2,c
 44361   014B18  D7DA               	goto	l11495
 44362   014B1A                     l11505:
 44363                           
 44364                           ;../canpan3Leds.c: 133:     }
 44365   014B1A  2A0F               	incf	doFlash@ledNo^(0+1280),f,c
 44366   014B1C  0E1F               	movlw	31
 44367   014B1E  640F               	cpfsgt	doFlash@ledNo^(0+1280),c
 44368   014B20  D7E2               	goto	l11503
 44369                           
 44370                           ;../canpan3Leds.c: 134:     flashToggle = !flashToggle;
 44371   014B22  0105               	movlb	5	; () banked
 44372   014B24  5199               	movf	_flashToggle& (0+255),w,b
 44373   014B26  A4D8               	btfss	status,2,c
 44374   014B28  D002               	goto	u9810
 44375   014B2A  0E01               	movlw	1
 44376   014B2C  D001               	goto	u9820
 44377   014B2E                     u9810:
 44378   014B2E  0E00               	movlw	0
 44379   014B30                     u9820:
 44380   014B30  6F99               	movwf	_flashToggle& (0+255),b
 44381                           
 44382                           ; BSR set to: 5
 44383   014B32  0012               	return		;funcret
 44384   014B34                     __end_of_doFlash:
 44385                           	callstack 0
 44386                           
 44387 ;; *************** function _setLed *****************
 44388 ;; Defined at:
 44389 ;;		line 208 in file "../canpan3Outputs.c"
 44390 ;; Parameters:    Size  Location     Type
 44391 ;;  no              1    wreg     unsigned char 
 44392 ;; Auto vars:     Size  Location     Type
 44393 ;;  no              1   10[COMRAM] unsigned char 
 44394 ;; Return value:  Size  Location     Type
 44395 ;;                  1    wreg      void 
 44396 ;; Registers used:
 44397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44398 ;; Tracked objects:
 44399 ;;		On entry : 0/0
 44400 ;;		On exit  : 0/0
 44401 ;;		Unchanged: 0/0
 44402 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44404 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44405 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44406 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44407 ;;Total ram usage:        3 bytes
 44408 ;; Hardware stack levels used: 1
 44409 ;; Hardware stack levels required when called: 2
 44410 ;; This function calls:
 44411 ;;		___awdiv
 44412 ;; This function is called by:
 44413 ;;		_setLedStateNoSave
 44414 ;;		_doFlash
 44415 ;; This function uses a non-reentrant model
 44416 ;;
 44417                           
 44418                           	psect	text120
 44419   015DDE                     __ptext120:
 44420                           	callstack 0
 44421   015DDE                     _setLed:
 44422                           	callstack 121
 44423                           
 44424                           ; BSR set to: 5
 44425                           ;incstack = 0
 44426                           ;setLed@no stored from wreg
 44427   015DDE  6E0B               	movwf	setLed@no^(0+1280),c
 44428                           
 44429                           ;../canpan3Outputs.c: 209:     ledMatrix[no/8] |= (1 << (no%8));
 44430   015DE0  C50B  F509         	movff	setLed@no,??_setLed
 44431   015DE4  0E07               	movlw	7
 44432   015DE6  1609               	andwf	??_setLed^(0+1280),f,c
 44433   015DE8  0E01               	movlw	1
 44434   015DEA  6E0A               	movwf	(??_setLed+1)^(0+1280),c
 44435   015DEC  2A09               	incf	??_setLed^(0+1280),f,c
 44436   015DEE  D002               	goto	u6304
 44437   015DF0                     u6305:
 44438   015DF0  90D8               	bcf	status,0,c
 44439   015DF2  360A               	rlcf	(??_setLed+1)^(0+1280),f,c
 44440   015DF4                     u6304:
 44441   015DF4  2E09               	decfsz	??_setLed^(0+1280),f,c
 44442   015DF6  D7FC               	goto	u6305
 44443   015DF8  C50B  F501         	movff	setLed@no,___awdiv@dividend
 44444   015DFC  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 44445   015DFE  0E00               	movlw	0
 44446   015E00  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 44447   015E02  0E08               	movlw	8
 44448   015E04  6E03               	movwf	___awdiv@divisor^(0+1280),c
 44449   015E06  EC9A  F0A5         	call	___awdiv	;wreg free
 44450   015E0A  0E68               	movlw	low _ledMatrix
 44451   015E0C  2401               	addwf	?___awdiv^(0+1280),w,c
 44452   015E0E  6ED9               	movwf	fsr2l,c
 44453   015E10  0E05               	movlw	high _ledMatrix
 44454   015E12  2002               	addwfc	(?___awdiv+1)^(0+1280),w,c
 44455   015E14  6EDA               	movwf	fsr2h,c
 44456   015E16  500A               	movf	(??_setLed+1)^(0+1280),w,c
 44457   015E18  12DF               	iorwf	indf2,f,c
 44458   015E1A  0012               	return		;funcret
 44459   015E1C                     __end_of_setLed:
 44460                           	callstack 0
 44461                           
 44462 ;; *************** function _clearLed *****************
 44463 ;; Defined at:
 44464 ;;		line 215 in file "../canpan3Outputs.c"
 44465 ;; Parameters:    Size  Location     Type
 44466 ;;  no              1    wreg     unsigned char 
 44467 ;; Auto vars:     Size  Location     Type
 44468 ;;  no              1   11[COMRAM] unsigned char 
 44469 ;; Return value:  Size  Location     Type
 44470 ;;                  1    wreg      void 
 44471 ;; Registers used:
 44472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44473 ;; Tracked objects:
 44474 ;;		On entry : 0/0
 44475 ;;		On exit  : 0/0
 44476 ;;		Unchanged: 0/0
 44477 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44480 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44481 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44482 ;;Total ram usage:        4 bytes
 44483 ;; Hardware stack levels used: 1
 44484 ;; Hardware stack levels required when called: 2
 44485 ;; This function calls:
 44486 ;;		___awdiv
 44487 ;; This function is called by:
 44488 ;;		_setLedStateNoSave
 44489 ;;		_doFlash
 44490 ;; This function uses a non-reentrant model
 44491 ;;
 44492                           
 44493                           	psect	text121
 44494   015CDC                     __ptext121:
 44495                           	callstack 0
 44496   015CDC                     _clearLed:
 44497                           	callstack 121
 44498                           
 44499                           ;incstack = 0
 44500                           ;clearLed@no stored from wreg
 44501   015CDC  6E0C               	movwf	clearLed@no^(0+1280),c
 44502                           
 44503                           ;../canpan3Outputs.c: 216:     ledMatrix[no/8] &= ~(1 << (no%8));
 44504   015CDE  C50C  F509         	movff	clearLed@no,??_clearLed
 44505   015CE2  0E07               	movlw	7
 44506   015CE4  1609               	andwf	??_clearLed^(0+1280),f,c
 44507   015CE6  0E01               	movlw	1
 44508   015CE8  6E0A               	movwf	(??_clearLed+1)^(0+1280),c
 44509   015CEA  2A09               	incf	??_clearLed^(0+1280),f,c
 44510   015CEC  D002               	goto	u6314
 44511   015CEE                     u6315:
 44512   015CEE  90D8               	bcf	status,0,c
 44513   015CF0  360A               	rlcf	(??_clearLed+1)^(0+1280),f,c
 44514   015CF2                     u6314:
 44515   015CF2  2E09               	decfsz	??_clearLed^(0+1280),f,c
 44516   015CF4  D7FC               	goto	u6315
 44517   015CF6  500A               	movf	(??_clearLed+1)^(0+1280),w,c
 44518   015CF8  0AFF               	xorlw	255
 44519   015CFA  6E0B               	movwf	(??_clearLed+2)^(0+1280),c
 44520   015CFC  C50C  F501         	movff	clearLed@no,___awdiv@dividend
 44521   015D00  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 44522   015D02  0E00               	movlw	0
 44523   015D04  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 44524   015D06  0E08               	movlw	8
 44525   015D08  6E03               	movwf	___awdiv@divisor^(0+1280),c
 44526   015D0A  EC9A  F0A5         	call	___awdiv	;wreg free
 44527   015D0E  0E68               	movlw	low _ledMatrix
 44528   015D10  2401               	addwf	?___awdiv^(0+1280),w,c
 44529   015D12  6ED9               	movwf	fsr2l,c
 44530   015D14  0E05               	movlw	high _ledMatrix
 44531   015D16  2002               	addwfc	(?___awdiv+1)^(0+1280),w,c
 44532   015D18  6EDA               	movwf	fsr2h,c
 44533   015D1A  500B               	movf	(??_clearLed+2)^(0+1280),w,c
 44534   015D1C  16DF               	andwf	indf2,f,c
 44535   015D1E  0012               	return		;funcret
 44536   015D20                     __end_of_clearLed:
 44537                           	callstack 0
 44538                           
 44539 ;; *************** function _initRomOps *****************
 44540 ;; Defined at:
 44541 ;;		line 156 in file "../../VLCBlib_PIC/nvm.c"
 44542 ;; Parameters:    Size  Location     Type
 44543 ;;		None
 44544 ;; Auto vars:     Size  Location     Type
 44545 ;;		None
 44546 ;; Return value:  Size  Location     Type
 44547 ;;                  1    wreg      void 
 44548 ;; Registers used:
 44549 ;;		wreg, status,2
 44550 ;; Tracked objects:
 44551 ;;		On entry : 0/0
 44552 ;;		On exit  : 0/0
 44553 ;;		Unchanged: 0/0
 44554 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44559 ;;Total ram usage:        0 bytes
 44560 ;; Hardware stack levels used: 1
 44561 ;; Hardware stack levels required when called: 1
 44562 ;; This function calls:
 44563 ;;		Nothing
 44564 ;; This function is called by:
 44565 ;;		_main
 44566 ;; This function uses a non-reentrant model
 44567 ;;
 44568                           
 44569                           	psect	text122
 44570   016526                     __ptext122:
 44571                           	callstack 0
 44572   016526                     _initRomOps:
 44573                           	callstack 125
 44574                           
 44575                           ;../../VLCBlib_PIC/nvm.c: 157:     flashFlags.asByte = 0;
 44576                           
 44577                           ;incstack = 0
 44578   016526  0105               	movlb	5	; () banked
 44579   016528  6B8A               	clrf	_flashFlags& (0+255),b
 44580                           
 44581                           ; BSR set to: 5
 44582                           ;../../VLCBlib_PIC/nvm.c: 158:     flashBlock = 0x0800;
 44583   01652A  0E00               	movlw	0
 44584   01652C  6F77               	movwf	_flashBlock& (0+255),b
 44585   01652E  0E08               	movlw	8
 44586   016530  6F78               	movwf	(_flashBlock+1)& (0+255),b
 44587   016532  0E00               	movlw	0
 44588   016534  6F79               	movwf	(_flashBlock+2)& (0+255),b
 44589                           
 44590                           ; BSR set to: 5
 44591                           ;../../VLCBlib_PIC/nvm.c: 160:     TBLPTRU = 0;
 44592   016536  6AF8               	clrf	248,c	;volatile
 44593                           
 44594                           ; BSR set to: 5
 44595                           ;../../VLCBlib_PIC/nvm.c: 162:     NVMCON1bits.WRERR = 0;
 44596   016538  0100               	movlb	0	; () banked
 44597   01653A  9F41               	bcf	65,7,b	;volsfr
 44598                           
 44599                           ; BSR set to: 0
 44600   01653C  0012               	return		;funcret
 44601   01653E                     __end_of_initRomOps:
 44602                           	callstack 0
 44603                           
 44604 ;; *************** function _checkPowerOnPb *****************
 44605 ;; Defined at:
 44606 ;;		line 966 in file "../../VLCBlib_PIC/vlcb.c"
 44607 ;; Parameters:    Size  Location     Type
 44608 ;;		None
 44609 ;; Auto vars:     Size  Location     Type
 44610 ;;  i               1   66[COMRAM] unsigned char 
 44611 ;; Return value:  Size  Location     Type
 44612 ;;                  1    wreg      void 
 44613 ;; Registers used:
 44614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44615 ;; Tracked objects:
 44616 ;;		On entry : 0/0
 44617 ;;		On exit  : 0/0
 44618 ;;		Unchanged: 0/0
 44619 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44623 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44624 ;;Total ram usage:        1 bytes
 44625 ;; Hardware stack levels used: 1
 44626 ;; Hardware stack levels required when called: 11
 44627 ;; This function calls:
 44628 ;;		_APP_testMode
 44629 ;;		_factoryReset
 44630 ;;		_pbDownTimer
 44631 ;;		_pbUpTimer
 44632 ;;		_showStatus
 44633 ;; This function is called by:
 44634 ;;		_main
 44635 ;; This function uses a non-reentrant model
 44636 ;;
 44637                           
 44638                           	psect	text123
 44639   01599E                     __ptext123:
 44640                           	callstack 0
 44641   01599E                     _checkPowerOnPb:
 44642                           	callstack 115
 44643                           
 44644                           ;../../VLCBlib_PIC/vlcb.c: 967:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 970:     if ((!
      +                          (PORTAbits.RA3))) {
 44645                           
 44646                           ; BSR set to: 0
 44647                           ;incstack = 0
 44648   01599E  B6CE               	btfsc	206,3,c	;volatile
 44649   0159A0  0012               	return	
 44650                           
 44651                           ;../../VLCBlib_PIC/vlcb.c: 972:         i = pbDownTimer(28);
 44652   0159A2  0E1C               	movlw	28
 44653   0159A4  EC86  F0A2         	call	_pbDownTimer
 44654   0159A8  6E43               	movwf	checkPowerOnPb@i^(0+1280),c
 44655                           
 44656                           ;../../VLCBlib_PIC/vlcb.c: 973:         if (i == 0) {
 44657   0159AA  5043               	movf	checkPowerOnPb@i^(0+1280),w,c
 44658   0159AC  B4D8               	btfsc	status,2,c
 44659   0159AE  0012               	return	
 44660                           
 44661                           ;../../VLCBlib_PIC/vlcb.c: 975:             return;
 44662   0159B0  0E04               	movlw	4
 44663   0159B2  6043               	cpfslt	checkPowerOnPb@i^(0+1280),c
 44664   0159B4  D003               	goto	l12335
 44665                           
 44666                           ;../../VLCBlib_PIC/vlcb.c: 977:             APP_testMode();
 44667   0159B6  ECCB  F0B2         	call	_APP_testMode	;wreg free
 44668                           
 44669                           ;../../VLCBlib_PIC/vlcb.c: 978:         } else if (i >= 8) {
 44670   0159BA  0012               	return	
 44671   0159BC                     l12335:
 44672   0159BC  0E07               	movlw	7
 44673   0159BE  6443               	cpfsgt	checkPowerOnPb@i^(0+1280),c
 44674   0159C0  0012               	return	
 44675                           
 44676                           ;../../VLCBlib_PIC/vlcb.c: 979:             showStatus(STATUS_RESET_WARNING);
 44677   0159C2  0E04               	movlw	4
 44678   0159C4  EC45  F09E         	call	_showStatus
 44679                           
 44680                           ;../../VLCBlib_PIC/vlcb.c: 981:             i = pbUpTimer(5);
 44681   0159C8  0E05               	movlw	5
 44682   0159CA  EC31  F0A2         	call	_pbUpTimer
 44683   0159CE  6E43               	movwf	checkPowerOnPb@i^(0+1280),c
 44684                           
 44685                           ;../../VLCBlib_PIC/vlcb.c: 982:             if (i == 0) {
 44686   0159D0  5043               	movf	checkPowerOnPb@i^(0+1280),w,c
 44687   0159D2  B4D8               	btfsc	status,2,c
 44688   0159D4  0012               	return	
 44689                           
 44690                           ;../../VLCBlib_PIC/vlcb.c: 986:             i = pbDownTimer(5);
 44691   0159D6  0E05               	movlw	5
 44692   0159D8  EC86  F0A2         	call	_pbDownTimer
 44693   0159DC  6E43               	movwf	checkPowerOnPb@i^(0+1280),c
 44694                           
 44695                           ;../../VLCBlib_PIC/vlcb.c: 987:             if ((i>=2) && (i < 4)) {
 44696   0159DE  0E01               	movlw	1
 44697   0159E0  6443               	cpfsgt	checkPowerOnPb@i^(0+1280),c
 44698   0159E2  0012               	return	
 44699   0159E4  0E04               	movlw	4
 44700   0159E6  6043               	cpfslt	checkPowerOnPb@i^(0+1280),c
 44701   0159E8  0012               	return	
 44702                           
 44703                           ;../../VLCBlib_PIC/vlcb.c: 988:                 factoryReset();
 44704   0159EA  ECD4  F09D         	call	_factoryReset	;wreg free
 44705   0159EE  0012               	return		;funcret
 44706   0159F0                     __end_of_checkPowerOnPb:
 44707                           	callstack 0
 44708                           
 44709 ;; *************** function _showStatus *****************
 44710 ;; Defined at:
 44711 ;;		line 235 in file "../../VLCBlib_PIC/statusLeds2.c"
 44712 ;; Parameters:    Size  Location     Type
 44713 ;;  s               1    wreg     enum E23434
 44714 ;; Auto vars:     Size  Location     Type
 44715 ;;  s               1    2[COMRAM] enum E23434
 44716 ;; Return value:  Size  Location     Type
 44717 ;;                  1    wreg      void 
 44718 ;; Registers used:
 44719 ;;		wreg, status,2, status,0
 44720 ;; Tracked objects:
 44721 ;;		On entry : 0/0
 44722 ;;		On exit  : 0/0
 44723 ;;		Unchanged: 0/0
 44724 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44726 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44727 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44728 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44729 ;;Total ram usage:        3 bytes
 44730 ;; Hardware stack levels used: 1
 44731 ;; Hardware stack levels required when called: 1
 44732 ;; This function calls:
 44733 ;;		Nothing
 44734 ;; This function is called by:
 44735 ;;		_setLEDsByMode
 44736 ;;		_checkPowerOnPb
 44737 ;;		_poll
 44738 ;; This function uses a non-reentrant model
 44739 ;;
 44740                           
 44741                           	psect	text124
 44742   013C8A                     __ptext124:
 44743                           	callstack 0
 44744   013C8A                     _showStatus:
 44745                           	callstack 122
 44746                           
 44747                           ;incstack = 0
 44748                           ;showStatus@s stored from wreg
 44749   013C8A  6E03               	movwf	showStatus@s^(0+1280),c
 44750                           
 44751                           ;../../VLCBlib_PIC/statusLeds2.c: 236:     switch (s) {
 44752   013C8C  D03E               	goto	l9139
 44753   013C8E                     l2037:
 44754                           
 44755                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[0] = LED_OFF;
 44756   013C8E  0105               	movlb	5	; () banked
 44757   013C90  6B7C               	clrf	_ledState& (0+255),b
 44758                           
 44759                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             ledState[1] = LED_OFF;
 44760   013C92  6B7D               	clrf	(_ledState+1)& (0+255),b
 44761                           
 44762                           ;../../VLCBlib_PIC/statusLeds2.c: 240:             break;
 44763   013C94  0012               	return	
 44764   013C96                     l9109:
 44765                           
 44766                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[0] = LED_ON;
 44767   013C96  0E01               	movlw	1
 44768   013C98  0105               	movlb	5	; () banked
 44769   013C9A  6F7C               	movwf	_ledState& (0+255),b
 44770                           
 44771                           ; BSR set to: 5
 44772                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             ledState[1] = LED_OFF;
 44773   013C9C  6B7D               	clrf	(_ledState+1)& (0+255),b
 44774                           
 44775                           ;../../VLCBlib_PIC/statusLeds2.c: 244:             break;
 44776   013C9E  0012               	return	
 44777   013CA0                     l2040:
 44778                           
 44779                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[0] = LED_OFF;
 44780   013CA0  0105               	movlb	5	; () banked
 44781   013CA2  6B7C               	clrf	_ledState& (0+255),b
 44782                           
 44783                           ; BSR set to: 5
 44784                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             ledState[1] = LED_FLASH_50_1HZ;
 44785   013CA4  0E03               	movlw	3
 44786   013CA6  6F7D               	movwf	(_ledState+1)& (0+255),b
 44787                           
 44788                           ;../../VLCBlib_PIC/statusLeds2.c: 248:             break;
 44789   013CA8  0012               	return	
 44790   013CAA                     l2043:
 44791                           
 44792                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[0] = LED_OFF;
 44793                           
 44794                           ;../../VLCBlib_PIC/statusLeds2.c: 253:         case STATUS_RECEIVE_ERROR:
 44795   013CAA  0105               	movlb	5	; () banked
 44796   013CAC  6B7C               	clrf	_ledState& (0+255),b
 44797                           
 44798                           ; BSR set to: 5
 44799                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             ledState[1] = LED_ON;
 44800   013CAE  0E01               	movlw	1
 44801   013CB0  6F7D               	movwf	(_ledState+1)& (0+255),b
 44802                           
 44803                           ;../../VLCBlib_PIC/statusLeds2.c: 256:             break;
 44804   013CB2  0012               	return	
 44805   013CB4                     l2046:
 44806                           
 44807                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[1] = 0;
 44808   013CB4  0105               	movlb	5	; () banked
 44809   013CB6  6B7B               	clrf	(_flashCounter+1)& (0+255),b
 44810                           
 44811                           ; BSR set to: 5
 44812                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             flashCounter[0] = 25;
 44813   013CB8  0E19               	movlw	25
 44814   013CBA  6F7A               	movwf	_flashCounter& (0+255),b
 44815                           
 44816                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[0] = LED_FLASH_50_2HZ;
 44817   013CBC  0E02               	movlw	2
 44818   013CBE  6F7C               	movwf	_ledState& (0+255),b
 44819                           
 44820                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             ledState[1] = LED_FLASH_50_2HZ;
 44821   013CC0  0E02               	movlw	2
 44822   013CC2  6F7D               	movwf	(_ledState+1)& (0+255),b
 44823                           
 44824                           ;../../VLCBlib_PIC/statusLeds2.c: 262:             break;
 44825   013CC4  0012               	return	
 44826   013CC6                     l9119:
 44827                           
 44828                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 44829   013CC6  0105               	movlb	5	; () banked
 44830   013CC8  2990               	incf	_mode_state& (0+255),w,b
 44831   013CCA  A4D8               	btfss	status,2,c
 44832   013CCC  D003               	goto	l9123
 44833                           
 44834                           ; BSR set to: 5
 44835                           ;../../VLCBlib_PIC/statusLeds2.c: 265:                 ledState[1] = LED_SINGLE_FLICKER_
      +                          ON;
 44836   013CCE  0E06               	movlw	6
 44837   013CD0  6F7D               	movwf	(_ledState+1)& (0+255),b
 44838                           
 44839                           ;../../VLCBlib_PIC/statusLeds2.c: 266:             } else if (mode_state == MODE_NORMAL)
      +                           {
 44840   013CD2  0012               	return	
 44841   013CD4                     l9123:
 44842                           
 44843                           ; BSR set to: 5
 44844   013CD4  0590               	decf	_mode_state& (0+255),w,b
 44845   013CD6  A4D8               	btfss	status,2,c
 44846   013CD8  0012               	return	
 44847                           
 44848                           ; BSR set to: 5
 44849                           ;../../VLCBlib_PIC/statusLeds2.c: 267:                 ledState[0] = LED_SINGLE_FLICKER_
      +                          ON;
 44850   013CDA  0E06               	movlw	6
 44851   013CDC  6F7C               	movwf	_ledState& (0+255),b
 44852   013CDE  0012               	return	
 44853   013CE0                     l9127:
 44854                           
 44855                           ;../../VLCBlib_PIC/statusLeds2.c: 271:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 44856   013CE0  0105               	movlb	5	; () banked
 44857   013CE2  2990               	incf	_mode_state& (0+255),w,b
 44858   013CE4  A4D8               	btfss	status,2,c
 44859   013CE6  D003               	goto	l9131
 44860                           
 44861                           ; BSR set to: 5
 44862                           ;../../VLCBlib_PIC/statusLeds2.c: 272:                 ledState[1] = LED_LONG_FLICKER_ON
      +                          ;
 44863   013CE8  0E08               	movlw	8
 44864   013CEA  6F7D               	movwf	(_ledState+1)& (0+255),b
 44865                           
 44866                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             } else if (mode_state == MODE_NORMAL)
      +                           {
 44867   013CEC  0012               	return	
 44868   013CEE                     l9131:
 44869                           
 44870                           ; BSR set to: 5
 44871   013CEE  0590               	decf	_mode_state& (0+255),w,b
 44872   013CF0  A4D8               	btfss	status,2,c
 44873   013CF2  0012               	return	
 44874                           
 44875                           ; BSR set to: 5
 44876                           ;../../VLCBlib_PIC/statusLeds2.c: 274:                 ledState[0] = LED_LONG_FLICKER_ON
      +                          ;
 44877   013CF4  0E08               	movlw	8
 44878   013CF6  6F7C               	movwf	_ledState& (0+255),b
 44879   013CF8  0012               	return	
 44880   013CFA                     l2056:
 44881                           
 44882                           ;../../VLCBlib_PIC/statusLeds2.c: 279:             flashCounter[1] = 0;
 44883   013CFA  0105               	movlb	5	; () banked
 44884   013CFC  6B7B               	clrf	(_flashCounter+1)& (0+255),b
 44885                           
 44886                           ;../../VLCBlib_PIC/statusLeds2.c: 280:             flashCounter[0] = 0;
 44887   013CFE  6B7A               	clrf	_flashCounter& (0+255),b
 44888                           
 44889                           ; BSR set to: 5
 44890                           ;../../VLCBlib_PIC/statusLeds2.c: 281:             ledState[0] = LED_FLASH_50_2HZ;
 44891   013D00  0E02               	movlw	2
 44892   013D02  6F7C               	movwf	_ledState& (0+255),b
 44893                           
 44894                           ;../../VLCBlib_PIC/statusLeds2.c: 282:             ledState[1] = LED_FLASH_50_2HZ;
 44895   013D04  0E02               	movlw	2
 44896   013D06  6F7D               	movwf	(_ledState+1)& (0+255),b
 44897                           
 44898                           ;../../VLCBlib_PIC/statusLeds2.c: 283:             break;
 44899   013D08  0012               	return	
 44900   013D0A                     l9139:
 44901   013D0A  5003               	movf	showStatus@s^(0+1280),w,c
 44902   013D0C  6E01               	movwf	??_showStatus^(0+1280),c
 44903   013D0E  6A02               	clrf	(??_showStatus+1)^(0+1280),c
 44904                           
 44905                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 44906                           ; Switch size 1, requested type "simple"
 44907                           ; Number of cases is 1, Range of values is 0 to 0
 44908                           ; switch strategies available:
 44909                           ; Name         Instructions Cycles
 44910                           ; simple_byte            4     3 (average)
 44911                           ;	Chosen strategy is simple_byte
 44912   013D10  5002               	movf	(??_showStatus+1)^(0+1280),w,c
 44913   013D12  0A00               	xorlw	0	; case 0
 44914   013D14  A4D8               	btfss	status,2,c
 44915   013D16  0012               	return	
 44916                           
 44917                           ; Switch size 1, requested type "simple"
 44918                           ; Number of cases is 13, Range of values is 0 to 12
 44919                           ; switch strategies available:
 44920                           ; Name         Instructions Cycles
 44921                           ; simple_byte           40    21 (average)
 44922                           ;	Chosen strategy is simple_byte
 44923   013D18  5001               	movf	??_showStatus^(0+1280),w,c
 44924   013D1A  0A00               	xorlw	0	; case 0
 44925   013D1C  B4D8               	btfsc	status,2,c
 44926   013D1E  D7B7               	goto	l2037
 44927   013D20  0A01               	xorlw	1	; case 1
 44928   013D22  B4D8               	btfsc	status,2,c
 44929   013D24  D7B8               	goto	l9109
 44930   013D26  0A03               	xorlw	3	; case 2
 44931   013D28  B4D8               	btfsc	status,2,c
 44932   013D2A  D7BA               	goto	l2040
 44933   013D2C  0A01               	xorlw	1	; case 3
 44934   013D2E  B4D8               	btfsc	status,2,c
 44935   013D30  D7BC               	goto	l2043
 44936   013D32  0A07               	xorlw	7	; case 4
 44937   013D34  B4D8               	btfsc	status,2,c
 44938   013D36  D7BE               	goto	l2046
 44939   013D38  0A01               	xorlw	1	; case 5
 44940   013D3A  B4D8               	btfsc	status,2,c
 44941   013D3C  D7B6               	goto	l2043
 44942   013D3E  0A03               	xorlw	3	; case 6
 44943   013D40  B4D8               	btfsc	status,2,c
 44944   013D42  D7B3               	goto	l2043
 44945   013D44  0A01               	xorlw	1	; case 7
 44946   013D46  B4D8               	btfsc	status,2,c
 44947   013D48  D7BE               	goto	l9119
 44948   013D4A  0A0F               	xorlw	15	; case 8
 44949   013D4C  B4D8               	btfsc	status,2,c
 44950   013D4E  D7C8               	goto	l9127
 44951   013D50  0A01               	xorlw	1	; case 9
 44952   013D52  B4D8               	btfsc	status,2,c
 44953   013D54  D7AA               	goto	l2043
 44954   013D56  0A03               	xorlw	3	; case 10
 44955   013D58  B4D8               	btfsc	status,2,c
 44956   013D5A  D7A7               	goto	l2043
 44957   013D5C  0A01               	xorlw	1	; case 11
 44958   013D5E  B4D8               	btfsc	status,2,c
 44959   013D60  D7CC               	goto	l2056
 44960   013D62  0A07               	xorlw	7	; case 12
 44961   013D64  A4D8               	btfss	status,2,c
 44962   013D66  0012               	return	
 44963   013D68  D7C8               	goto	l2056
 44964   013D6A                     __end_of_showStatus:
 44965                           	callstack 0
 44966                           
 44967 ;; *************** function _pbUpTimer *****************
 44968 ;; Defined at:
 44969 ;;		line 941 in file "../../VLCBlib_PIC/vlcb.c"
 44970 ;; Parameters:    Size  Location     Type
 44971 ;;  timeout         1    wreg     unsigned char 
 44972 ;; Auto vars:     Size  Location     Type
 44973 ;;  timeout         1   27[COMRAM] unsigned char 
 44974 ;; Return value:  Size  Location     Type
 44975 ;;                  1    wreg      unsigned char 
 44976 ;; Registers used:
 44977 ;;		wreg, status,2, status,0, cstack
 44978 ;; Tracked objects:
 44979 ;;		On entry : 0/0
 44980 ;;		On exit  : 0/0
 44981 ;;		Unchanged: 0/0
 44982 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44985 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44986 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44987 ;;Total ram usage:        5 bytes
 44988 ;; Hardware stack levels used: 1
 44989 ;; Hardware stack levels required when called: 3
 44990 ;; This function calls:
 44991 ;;		___lldiv
 44992 ;;		___lmul
 44993 ;;		_leds_poll
 44994 ;;		_tickGet
 44995 ;; This function is called by:
 44996 ;;		_checkPowerOnPb
 44997 ;; This function uses a non-reentrant model
 44998 ;;
 44999                           
 45000                           	psect	text125
 45001   014462                     __ptext125:
 45002                           	callstack 0
 45003   014462                     _pbUpTimer:
 45004                           	callstack 122
 45005                           
 45006                           ;incstack = 0
 45007                           ;pbUpTimer@timeout stored from wreg
 45008   014462  6E1C               	movwf	pbUpTimer@timeout^(0+1280),c
 45009                           
 45010                           ;../../VLCBlib_PIC/vlcb.c: 943:     pbTimer.val = tickGet();
 45011   014464  EC50  F0AC         	call	_tickGet	;wreg free
 45012   014468  C501  F560         	movff	?_tickGet,_pbTimer
 45013   01446C  C502  F561         	movff	?_tickGet+1,_pbTimer+1
 45014   014470  C503  F562         	movff	?_tickGet+2,_pbTimer+2
 45015   014474  C504  F563         	movff	?_tickGet+3,_pbTimer+3
 45016                           
 45017                           ;../../VLCBlib_PIC/vlcb.c: 944:     while (! ((!(PORTAbits.RA3)))) {
 45018   014478  D02C               	goto	l2253
 45019   01447A                     l12201:
 45020                           
 45021                           ;../../VLCBlib_PIC/vlcb.c: 945:         leds_poll();
 45022   01447A  EC6B  F090         	call	_leds_poll	;wreg free
 45023                           
 45024                           ;../../VLCBlib_PIC/vlcb.c: 946:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 45025   01447E  EC50  F0AC         	call	_tickGet	;wreg free
 45026   014482  0105               	movlb	5	; () banked
 45027   014484  5160               	movf	_pbTimer& (0+255),w,b
 45028   014486  5C01               	subwf	?_tickGet^(0+1280),w,c
 45029   014488  6E18               	movwf	??_pbUpTimer^(0+1280),c
 45030   01448A  5161               	movf	(_pbTimer+1)& (0+255),w,b
 45031   01448C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 45032   01448E  6E19               	movwf	(??_pbUpTimer+1)^(0+1280),c
 45033   014490  5162               	movf	(_pbTimer+2)& (0+255),w,b
 45034   014492  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 45035   014494  6E1A               	movwf	(??_pbUpTimer+2)^(0+1280),c
 45036   014496  5163               	movf	(_pbTimer+3)& (0+255),w,b
 45037   014498  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 45038   01449A  6E1B               	movwf	(??_pbUpTimer+3)^(0+1280),c
 45039   01449C  501C               	movf	pbUpTimer@timeout^(0+1280),w,c
 45040   01449E  6E05               	movwf	___lmul@multiplier^(0+1280),c
 45041   0144A0  6A06               	clrf	(___lmul@multiplier+1)^(0+1280),c
 45042   0144A2  6A07               	clrf	(___lmul@multiplier+2)^(0+1280),c
 45043   0144A4  6A08               	clrf	(___lmul@multiplier+3)^(0+1280),c
 45044   0144A6  0E24               	movlw	36
 45045   0144A8  6E09               	movwf	___lmul@multiplicand^(0+1280),c
 45046   0144AA  0EF4               	movlw	244
 45047   0144AC  6E0A               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 45048   0144AE  0E00               	movlw	0
 45049   0144B0  6E0B               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 45050   0144B2  0E00               	movlw	0
 45051   0144B4  6E0C               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 45052   0144B6  EC7B  F0AC         	call	___lmul	;wreg free
 45053   0144BA  5018               	movf	??_pbUpTimer^(0+1280),w,c
 45054   0144BC  5C05               	subwf	?___lmul^(0+1280),w,c
 45055   0144BE  5019               	movf	(??_pbUpTimer+1)^(0+1280),w,c
 45056   0144C0  5806               	subwfb	(?___lmul+1)^(0+1280),w,c
 45057   0144C2  501A               	movf	(??_pbUpTimer+2)^(0+1280),w,c
 45058   0144C4  5807               	subwfb	(?___lmul+2)^(0+1280),w,c
 45059   0144C6  501B               	movf	(??_pbUpTimer+3)^(0+1280),w,c
 45060   0144C8  5808               	subwfb	(?___lmul+3)^(0+1280),w,c
 45061   0144CA  B0D8               	btfsc	status,0,c
 45062   0144CC  D002               	goto	l2253
 45063                           
 45064                           ;../../VLCBlib_PIC/vlcb.c: 947:             return 0;
 45065   0144CE  0E00               	movlw	0
 45066   0144D0  0012               	return	
 45067   0144D2                     l2253:
 45068                           
 45069                           ;../../VLCBlib_PIC/vlcb.c: 944:     while (! ((!(PORTAbits.RA3)))) {
 45070   0144D2  B6CE               	btfsc	206,3,c	;volatile
 45071   0144D4  D7D2               	goto	l12201
 45072                           
 45073                           ;../../VLCBlib_PIC/vlcb.c: 951:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 45074   0144D6  EC50  F0AC         	call	_tickGet	;wreg free
 45075   0144DA  0105               	movlb	5	; () banked
 45076   0144DC  5160               	movf	_pbTimer& (0+255),w,b
 45077   0144DE  5C01               	subwf	?_tickGet^(0+1280),w,c
 45078   0144E0  6E0B               	movwf	___lldiv@dividend^(0+1280),c
 45079   0144E2  5161               	movf	(_pbTimer+1)& (0+255),w,b
 45080   0144E4  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 45081   0144E6  6E0C               	movwf	(___lldiv@dividend+1)^(0+1280),c
 45082   0144E8  5162               	movf	(_pbTimer+2)& (0+255),w,b
 45083   0144EA  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 45084   0144EC  6E0D               	movwf	(___lldiv@dividend+2)^(0+1280),c
 45085   0144EE  5163               	movf	(_pbTimer+3)& (0+255),w,b
 45086   0144F0  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 45087   0144F2  6E0E               	movwf	(___lldiv@dividend+3)^(0+1280),c
 45088   0144F4  0E24               	movlw	36
 45089   0144F6  6E0F               	movwf	___lldiv@divisor^(0+1280),c
 45090   0144F8  0EF4               	movlw	244
 45091   0144FA  6E10               	movwf	(___lldiv@divisor+1)^(0+1280),c
 45092   0144FC  0E00               	movlw	0
 45093   0144FE  6E11               	movwf	(___lldiv@divisor+2)^(0+1280),c
 45094   014500  0E00               	movlw	0
 45095   014502  6E12               	movwf	(___lldiv@divisor+3)^(0+1280),c
 45096   014504  ECDB  F0A5         	call	___lldiv	;wreg free
 45097   014508  500B               	movf	?___lldiv^(0+1280),w,c
 45098   01450A  0012               	return		;funcret
 45099   01450C                     __end_of_pbUpTimer:
 45100                           	callstack 0
 45101                           
 45102 ;; *************** function _pbDownTimer *****************
 45103 ;; Defined at:
 45104 ;;		line 922 in file "../../VLCBlib_PIC/vlcb.c"
 45105 ;; Parameters:    Size  Location     Type
 45106 ;;  timeout         1    wreg     unsigned char 
 45107 ;; Auto vars:     Size  Location     Type
 45108 ;;  timeout         1   27[COMRAM] unsigned char 
 45109 ;; Return value:  Size  Location     Type
 45110 ;;                  1    wreg      unsigned char 
 45111 ;; Registers used:
 45112 ;;		wreg, status,2, status,0, cstack
 45113 ;; Tracked objects:
 45114 ;;		On entry : 0/0
 45115 ;;		On exit  : 0/0
 45116 ;;		Unchanged: 0/0
 45117 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45120 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45121 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45122 ;;Total ram usage:        5 bytes
 45123 ;; Hardware stack levels used: 1
 45124 ;; Hardware stack levels required when called: 3
 45125 ;; This function calls:
 45126 ;;		___lldiv
 45127 ;;		___lmul
 45128 ;;		_leds_poll
 45129 ;;		_tickGet
 45130 ;; This function is called by:
 45131 ;;		_checkPowerOnPb
 45132 ;; This function uses a non-reentrant model
 45133 ;;
 45134                           
 45135                           	psect	text126
 45136   01450C                     __ptext126:
 45137                           	callstack 0
 45138   01450C                     _pbDownTimer:
 45139                           	callstack 122
 45140                           
 45141                           ;incstack = 0
 45142                           ;pbDownTimer@timeout stored from wreg
 45143   01450C  6E1C               	movwf	pbDownTimer@timeout^(0+1280),c
 45144                           
 45145                           ;../../VLCBlib_PIC/vlcb.c: 924:     pbTimer.val = tickGet();
 45146   01450E  EC50  F0AC         	call	_tickGet	;wreg free
 45147   014512  C501  F560         	movff	?_tickGet,_pbTimer
 45148   014516  C502  F561         	movff	?_tickGet+1,_pbTimer+1
 45149   01451A  C503  F562         	movff	?_tickGet+2,_pbTimer+2
 45150   01451E  C504  F563         	movff	?_tickGet+3,_pbTimer+3
 45151                           
 45152                           ;../../VLCBlib_PIC/vlcb.c: 925:     while ((!(PORTAbits.RA3))) {
 45153   014522  D02C               	goto	l2246
 45154   014524                     l12189:
 45155                           
 45156                           ;../../VLCBlib_PIC/vlcb.c: 926:         leds_poll();
 45157   014524  EC6B  F090         	call	_leds_poll	;wreg free
 45158                           
 45159                           ;../../VLCBlib_PIC/vlcb.c: 927:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 45160   014528  EC50  F0AC         	call	_tickGet	;wreg free
 45161   01452C  0105               	movlb	5	; () banked
 45162   01452E  5160               	movf	_pbTimer& (0+255),w,b
 45163   014530  5C01               	subwf	?_tickGet^(0+1280),w,c
 45164   014532  6E18               	movwf	??_pbDownTimer^(0+1280),c
 45165   014534  5161               	movf	(_pbTimer+1)& (0+255),w,b
 45166   014536  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 45167   014538  6E19               	movwf	(??_pbDownTimer+1)^(0+1280),c
 45168   01453A  5162               	movf	(_pbTimer+2)& (0+255),w,b
 45169   01453C  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 45170   01453E  6E1A               	movwf	(??_pbDownTimer+2)^(0+1280),c
 45171   014540  5163               	movf	(_pbTimer+3)& (0+255),w,b
 45172   014542  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 45173   014544  6E1B               	movwf	(??_pbDownTimer+3)^(0+1280),c
 45174   014546  501C               	movf	pbDownTimer@timeout^(0+1280),w,c
 45175   014548  6E05               	movwf	___lmul@multiplier^(0+1280),c
 45176   01454A  6A06               	clrf	(___lmul@multiplier+1)^(0+1280),c
 45177   01454C  6A07               	clrf	(___lmul@multiplier+2)^(0+1280),c
 45178   01454E  6A08               	clrf	(___lmul@multiplier+3)^(0+1280),c
 45179   014550  0E24               	movlw	36
 45180   014552  6E09               	movwf	___lmul@multiplicand^(0+1280),c
 45181   014554  0EF4               	movlw	244
 45182   014556  6E0A               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 45183   014558  0E00               	movlw	0
 45184   01455A  6E0B               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 45185   01455C  0E00               	movlw	0
 45186   01455E  6E0C               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 45187   014560  EC7B  F0AC         	call	___lmul	;wreg free
 45188   014564  5018               	movf	??_pbDownTimer^(0+1280),w,c
 45189   014566  5C05               	subwf	?___lmul^(0+1280),w,c
 45190   014568  5019               	movf	(??_pbDownTimer+1)^(0+1280),w,c
 45191   01456A  5806               	subwfb	(?___lmul+1)^(0+1280),w,c
 45192   01456C  501A               	movf	(??_pbDownTimer+2)^(0+1280),w,c
 45193   01456E  5807               	subwfb	(?___lmul+2)^(0+1280),w,c
 45194   014570  501B               	movf	(??_pbDownTimer+3)^(0+1280),w,c
 45195   014572  5808               	subwfb	(?___lmul+3)^(0+1280),w,c
 45196   014574  B0D8               	btfsc	status,0,c
 45197   014576  D002               	goto	l2246
 45198                           
 45199                           ;../../VLCBlib_PIC/vlcb.c: 928:             return 0;
 45200   014578  0E00               	movlw	0
 45201   01457A  0012               	return	
 45202   01457C                     l2246:
 45203                           
 45204                           ;../../VLCBlib_PIC/vlcb.c: 925:     while ((!(PORTAbits.RA3))) {
 45205   01457C  A6CE               	btfss	206,3,c	;volatile
 45206   01457E  D7D2               	goto	l12189
 45207                           
 45208                           ;../../VLCBlib_PIC/vlcb.c: 932:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 45209   014580  EC50  F0AC         	call	_tickGet	;wreg free
 45210   014584  0105               	movlb	5	; () banked
 45211   014586  5160               	movf	_pbTimer& (0+255),w,b
 45212   014588  5C01               	subwf	?_tickGet^(0+1280),w,c
 45213   01458A  6E0B               	movwf	___lldiv@dividend^(0+1280),c
 45214   01458C  5161               	movf	(_pbTimer+1)& (0+255),w,b
 45215   01458E  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 45216   014590  6E0C               	movwf	(___lldiv@dividend+1)^(0+1280),c
 45217   014592  5162               	movf	(_pbTimer+2)& (0+255),w,b
 45218   014594  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 45219   014596  6E0D               	movwf	(___lldiv@dividend+2)^(0+1280),c
 45220   014598  5163               	movf	(_pbTimer+3)& (0+255),w,b
 45221   01459A  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 45222   01459C  6E0E               	movwf	(___lldiv@dividend+3)^(0+1280),c
 45223   01459E  0E24               	movlw	36
 45224   0145A0  6E0F               	movwf	___lldiv@divisor^(0+1280),c
 45225   0145A2  0EF4               	movlw	244
 45226   0145A4  6E10               	movwf	(___lldiv@divisor+1)^(0+1280),c
 45227   0145A6  0E00               	movlw	0
 45228   0145A8  6E11               	movwf	(___lldiv@divisor+2)^(0+1280),c
 45229   0145AA  0E00               	movlw	0
 45230   0145AC  6E12               	movwf	(___lldiv@divisor+3)^(0+1280),c
 45231   0145AE  ECDB  F0A5         	call	___lldiv	;wreg free
 45232   0145B2  500B               	movf	?___lldiv^(0+1280),w,c
 45233   0145B4  0012               	return		;funcret
 45234   0145B6                     __end_of_pbDownTimer:
 45235                           	callstack 0
 45236                           
 45237 ;; *************** function _leds_poll *****************
 45238 ;; Defined at:
 45239 ;;		line 89 in file "../../VLCBlib_PIC/statusLeds2.c"
 45240 ;; Parameters:    Size  Location     Type
 45241 ;;		None
 45242 ;; Auto vars:     Size  Location     Type
 45243 ;;		None
 45244 ;; Return value:  Size  Location     Type
 45245 ;;                  1    wreg      void 
 45246 ;; Registers used:
 45247 ;;		wreg, status,2, status,0, cstack
 45248 ;; Tracked objects:
 45249 ;;		On entry : 0/0
 45250 ;;		On exit  : 0/0
 45251 ;;		Unchanged: 0/0
 45252 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45255 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45256 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45257 ;;Total ram usage:        4 bytes
 45258 ;; Hardware stack levels used: 1
 45259 ;; Hardware stack levels required when called: 2
 45260 ;; This function calls:
 45261 ;;		___awdiv
 45262 ;;		_tickGet
 45263 ;; This function is called by:
 45264 ;;		_pbDownTimer
 45265 ;;		_pbUpTimer
 45266 ;;		_poll
 45267 ;; This function uses a non-reentrant model
 45268 ;;
 45269                           
 45270                           	psect	text127
 45271   0120D6                     __ptext127:
 45272                           	callstack 0
 45273   0120D6                     _leds_poll:
 45274                           	callstack 123
 45275                           
 45276                           ;../../VLCBlib_PIC/statusLeds2.c: 90:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 45277                           
 45278                           ;incstack = 0
 45279   0120D6  EC50  F0AC         	call	_tickGet	;wreg free
 45280   0120DA  0106               	movlb	6	; () banked
 45281   0120DC  518E               	movf	_ledTimer& (0+255),w,b
 45282   0120DE  5C01               	subwf	?_tickGet^(0+1280),w,c
 45283   0120E0  6E0B               	movwf	??_leds_poll^(0+1280),c
 45284   0120E2  518F               	movf	(_ledTimer+1)& (0+255),w,b
 45285   0120E4  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 45286   0120E6  6E0C               	movwf	(??_leds_poll+1)^(0+1280),c
 45287   0120E8  5190               	movf	(_ledTimer+2)& (0+255),w,b
 45288   0120EA  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 45289   0120EC  6E0D               	movwf	(??_leds_poll+2)^(0+1280),c
 45290   0120EE  5191               	movf	(_ledTimer+3)& (0+255),w,b
 45291   0120F0  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 45292   0120F2  6E0E               	movwf	(??_leds_poll+3)^(0+1280),c
 45293   0120F4  500E               	movf	(??_leds_poll+3)^(0+1280),w,c
 45294   0120F6  100D               	iorwf	(??_leds_poll+2)^(0+1280),w,c
 45295   0120F8  E106               	bnz	u9120
 45296   0120FA  0E72               	movlw	114
 45297   0120FC  5C0B               	subwf	??_leds_poll^(0+1280),w,c
 45298   0120FE  0E02               	movlw	2
 45299   012100  580C               	subwfb	(??_leds_poll+1)^(0+1280),w,c
 45300   012102  A0D8               	btfss	status,0,c
 45301   012104  D067               	goto	l11127
 45302   012106                     u9120:
 45303                           
 45304                           ; BSR set to: 6
 45305                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[0]++;
 45306   012106  0105               	movlb	5	; () banked
 45307   012108  2B7A               	incf	_flashCounter& (0+255),f,b
 45308                           
 45309                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         flashCounter[1]++;
 45310   01210A  2B7B               	incf	(_flashCounter+1)& (0+255),f,b
 45311                           
 45312                           ; BSR set to: 5
 45313                           ;../../VLCBlib_PIC/statusLeds2.c: 93:         ledTimer.val = tickGet();
 45314   01210C  EC50  F0AC         	call	_tickGet	;wreg free
 45315   012110  C501  F68E         	movff	?_tickGet,_ledTimer
 45316   012114  C502  F68F         	movff	?_tickGet+1,_ledTimer+1
 45317   012118  C503  F690         	movff	?_tickGet+2,_ledTimer+2
 45318   01211C  C504  F691         	movff	?_tickGet+3,_ledTimer+3
 45319   012120  D059               	goto	l11127
 45320   012122                     l1994:
 45321                           
 45322                           ; BSR set to: 5
 45323                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             (LATBbits.LATB6=1);
 45324   012122  8CBF               	bsf	191,6,c	;volatile
 45325   012124  D017               	goto	u9130
 45326   012126                     l1996:
 45327                           
 45328                           ; BSR set to: 5
 45329                           ;../../VLCBlib_PIC/statusLeds2.c: 102:             (LATBbits.LATB6=0);
 45330   012126  9CBF               	bcf	191,6,c	;volatile
 45331   012128  D015               	goto	u9130
 45332   01212A                     l11081:
 45333                           
 45334                           ; BSR set to: 5
 45335                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             (LATBbits.LATB6=flashCounter[1]/25);
 45336   01212A  C57B  F501         	movff	_flashCounter+1,___awdiv@dividend
 45337   01212E  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 45338   012130  0E00               	movlw	0
 45339   012132  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 45340   012134  0E19               	movlw	25
 45341   012136  6E03               	movwf	___awdiv@divisor^(0+1280),c
 45342   012138  EC9A  F0A5         	call	___awdiv	;wreg free
 45343   01213C  3A01               	swapf	?___awdiv^(0+1280),f,c
 45344   01213E  4601               	rlncf	?___awdiv^(0+1280),f,c
 45345   012140  4601               	rlncf	?___awdiv^(0+1280),f,c
 45346   012142  50BF               	movf	191,w,c	;volatile
 45347   012144  1801               	xorwf	?___awdiv^(0+1280),w,c
 45348   012146  0BBF               	andlw	-65
 45349   012148  1801               	xorwf	?___awdiv^(0+1280),w,c
 45350   01214A  6EBF               	movwf	191,c	;volatile
 45351                           
 45352                           ;../../VLCBlib_PIC/statusLeds2.c: 108:             if (flashCounter[1] >= 50) {
 45353   01214C  0E31               	movlw	49
 45354   01214E  0105               	movlb	5	; () banked
 45355   012150  657B               	cpfsgt	(_flashCounter+1)& (0+255),b
 45356   012152  D0C3               	goto	l11175
 45357   012154                     u9130:
 45358                           
 45359                           ; BSR set to: 5
 45360                           ;../../VLCBlib_PIC/statusLeds2.c: 109:                 flashCounter[1] = 0;
 45361   012154  6B7B               	clrf	(_flashCounter+1)& (0+255),b
 45362   012156  D0C1               	goto	l11175
 45363   012158                     l11087:
 45364                           
 45365                           ; BSR set to: 5
 45366                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             (LATBbits.LATB6=flashCounter[1]/50);
 45367   012158  C57B  F501         	movff	_flashCounter+1,___awdiv@dividend
 45368   01215C  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 45369   01215E  0E00               	movlw	0
 45370   012160  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 45371   012162  0E32               	movlw	50
 45372   012164  6E03               	movwf	___awdiv@divisor^(0+1280),c
 45373   012166  EC9A  F0A5         	call	___awdiv	;wreg free
 45374   01216A  3A01               	swapf	?___awdiv^(0+1280),f,c
 45375   01216C  4601               	rlncf	?___awdiv^(0+1280),f,c
 45376   01216E  4601               	rlncf	?___awdiv^(0+1280),f,c
 45377   012170  50BF               	movf	191,w,c	;volatile
 45378   012172  1801               	xorwf	?___awdiv^(0+1280),w,c
 45379   012174  0BBF               	andlw	-65
 45380   012176  1801               	xorwf	?___awdiv^(0+1280),w,c
 45381   012178  6EBF               	movwf	191,c	;volatile
 45382                           
 45383                           ;../../VLCBlib_PIC/statusLeds2.c: 115:             if (flashCounter[1] >= 100) {
 45384   01217A  0E63               	movlw	99
 45385   01217C  D7E8               	goto	L15
 45386   01217E                     l11093:
 45387                           
 45388                           ; BSR set to: 5
 45389                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             (LATBbits.LATB6=flashCounter[1]/100);
 45390   01217E  C57B  F501         	movff	_flashCounter+1,___awdiv@dividend
 45391   012182  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 45392   012184  0E00               	movlw	0
 45393   012186  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 45394   012188  0E64               	movlw	100
 45395   01218A  6E03               	movwf	___awdiv@divisor^(0+1280),c
 45396   01218C  EC9A  F0A5         	call	___awdiv	;wreg free
 45397   012190  3A01               	swapf	?___awdiv^(0+1280),f,c
 45398   012192  4601               	rlncf	?___awdiv^(0+1280),f,c
 45399   012194  4601               	rlncf	?___awdiv^(0+1280),f,c
 45400   012196  50BF               	movf	191,w,c	;volatile
 45401   012198  1801               	xorwf	?___awdiv^(0+1280),w,c
 45402   01219A  0BBF               	andlw	-65
 45403   01219C  1801               	xorwf	?___awdiv^(0+1280),w,c
 45404   01219E  6EBF               	movwf	191,c	;volatile
 45405                           
 45406                           ;../../VLCBlib_PIC/statusLeds2.c: 121:             if (flashCounter[1] >= 200) {
 45407   0121A0  0EC7               	movlw	199
 45408   0121A2  D7D5               	goto	L15
 45409   0121A4                     l2003:
 45410                           
 45411                           ; BSR set to: 5
 45412                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             (LATBbits.LATB6=1);
 45413   0121A4  8CBF               	bsf	191,6,c	;volatile
 45414                           
 45415                           ; BSR set to: 5
 45416                           ;../../VLCBlib_PIC/statusLeds2.c: 127:             if (flashCounter[1] >= 25) {
 45417   0121A6  0E18               	movlw	24
 45418   0121A8  657B               	cpfsgt	(_flashCounter+1)& (0+255),b
 45419   0121AA  D097               	goto	l11175
 45420                           
 45421                           ; BSR set to: 5
 45422                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 flashCounter[1] = 0;
 45423   0121AC  6B7B               	clrf	(_flashCounter+1)& (0+255),b
 45424                           
 45425                           ;../../VLCBlib_PIC/statusLeds2.c: 129:                 ledState[1] = LED_OFF;
 45426   0121AE  6B7D               	clrf	(_ledState+1)& (0+255),b
 45427   0121B0  D094               	goto	l11175
 45428   0121B2                     l2005:
 45429                           
 45430                           ; BSR set to: 5
 45431                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             (LATBbits.LATB6=0);
 45432   0121B2  9CBF               	bcf	191,6,c	;volatile
 45433                           
 45434                           ; BSR set to: 5
 45435                           ;../../VLCBlib_PIC/statusLeds2.c: 134:             if (flashCounter[1] >= 25) {
 45436   0121B4  0E18               	movlw	24
 45437   0121B6  657B               	cpfsgt	(_flashCounter+1)& (0+255),b
 45438   0121B8  D090               	goto	l11175
 45439                           
 45440                           ; BSR set to: 5
 45441                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 flashCounter[1] = 0;
 45442   0121BA  6B7B               	clrf	(_flashCounter+1)& (0+255),b
 45443                           
 45444                           ; BSR set to: 5
 45445                           ;../../VLCBlib_PIC/statusLeds2.c: 136:                 ledState[1] = LED_ON;
 45446   0121BC  0E01               	movlw	1
 45447   0121BE  6F7D               	movwf	(_ledState+1)& (0+255),b
 45448   0121C0  D08C               	goto	l11175
 45449   0121C2                     l2007:
 45450                           
 45451                           ; BSR set to: 5
 45452                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             (LATBbits.LATB6=1);
 45453   0121C2  8CBF               	bsf	191,6,c	;volatile
 45454                           
 45455                           ; BSR set to: 5
 45456                           ;../../VLCBlib_PIC/statusLeds2.c: 141:             if (flashCounter[1] >= 50) {
 45457   0121C4  0E31               	movlw	49
 45458   0121C6  D7F0               	goto	L16
 45459   0121C8                     l2009:
 45460                           
 45461                           ; BSR set to: 5
 45462                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             (LATBbits.LATB6=0);
 45463   0121C8  9CBF               	bcf	191,6,c	;volatile
 45464                           
 45465                           ; BSR set to: 5
 45466                           ;../../VLCBlib_PIC/statusLeds2.c: 148:             if (flashCounter[1] >= 50) {
 45467   0121CA  0E31               	movlw	49
 45468   0121CC  D7F4               	goto	L17
 45469   0121CE                     l2011:
 45470                           
 45471                           ; BSR set to: 5
 45472                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             (LATBbits.LATB6=0);
 45473   0121CE  9CBF               	bcf	191,6,c	;volatile
 45474                           
 45475                           ; BSR set to: 5
 45476                           ;../../VLCBlib_PIC/statusLeds2.c: 155:             if (flashCounter[1] >= 100) {
 45477   0121D0  0E63               	movlw	99
 45478   0121D2  D7F1               	goto	L17
 45479   0121D4                     l11127:
 45480   0121D4  0105               	movlb	5	; () banked
 45481   0121D6  517D               	movf	(_ledState+1)& (0+255),w,b
 45482   0121D8  6E0B               	movwf	??_leds_poll^(0+1280),c
 45483   0121DA  6A0C               	clrf	(??_leds_poll+1)^(0+1280),c
 45484                           
 45485                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 45486                           ; Switch size 1, requested type "simple"
 45487                           ; Number of cases is 1, Range of values is 0 to 0
 45488                           ; switch strategies available:
 45489                           ; Name         Instructions Cycles
 45490                           ; simple_byte            4     3 (average)
 45491                           ;	Chosen strategy is simple_byte
 45492   0121DC  500C               	movf	(??_leds_poll+1)^(0+1280),w,c
 45493   0121DE  0A00               	xorlw	0	; case 0
 45494   0121E0  A4D8               	btfss	status,2,c
 45495   0121E2  D07B               	goto	l11175
 45496                           
 45497                           ; BSR set to: 5
 45498                           ; Switch size 1, requested type "simple"
 45499                           ; Number of cases is 10, Range of values is 0 to 9
 45500                           ; switch strategies available:
 45501                           ; Name         Instructions Cycles
 45502                           ; simple_byte           31    16 (average)
 45503                           ;	Chosen strategy is simple_byte
 45504   0121E4  500B               	movf	??_leds_poll^(0+1280),w,c
 45505   0121E6  0A00               	xorlw	0	; case 0
 45506   0121E8  B4D8               	btfsc	status,2,c
 45507   0121EA  D79D               	goto	l1996
 45508   0121EC  0A01               	xorlw	1	; case 1
 45509   0121EE  B4D8               	btfsc	status,2,c
 45510   0121F0  D798               	goto	l1994
 45511   0121F2  0A03               	xorlw	3	; case 2
 45512   0121F4  B4D8               	btfsc	status,2,c
 45513   0121F6  D799               	goto	l11081
 45514   0121F8  0A01               	xorlw	1	; case 3
 45515   0121FA  B4D8               	btfsc	status,2,c
 45516   0121FC  D7AD               	goto	l11087
 45517   0121FE  0A07               	xorlw	7	; case 4
 45518   012200  B4D8               	btfsc	status,2,c
 45519   012202  D7BD               	goto	l11093
 45520   012204  0A01               	xorlw	1	; case 5
 45521   012206  B4D8               	btfsc	status,2,c
 45522   012208  D7D4               	goto	l2005
 45523   01220A  0A03               	xorlw	3	; case 6
 45524   01220C  B4D8               	btfsc	status,2,c
 45525   01220E  D7CA               	goto	l2003
 45526   012210  0A01               	xorlw	1	; case 7
 45527   012212  B4D8               	btfsc	status,2,c
 45528   012214  D7D9               	goto	l2009
 45529   012216  0A0F               	xorlw	15	; case 8
 45530   012218  B4D8               	btfsc	status,2,c
 45531   01221A  D7D3               	goto	l2007
 45532   01221C  0A01               	xorlw	1	; case 9
 45533   01221E  B4D8               	btfsc	status,2,c
 45534   012220  D7D6               	goto	l2011
 45535   012222  D05B               	goto	l11175
 45536   012224                     l2014:
 45537                           
 45538                           ; BSR set to: 5
 45539                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             (LATBbits.LATB7=1);
 45540   012224  8EBF               	bsf	191,7,c	;volatile
 45541                           
 45542                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             flashCounter[0] = 0;
 45543   012226  6B7A               	clrf	_flashCounter& (0+255),b
 45544                           
 45545                           ;../../VLCBlib_PIC/statusLeds2.c: 166:             break;
 45546   012228  0012               	return	
 45547   01222A                     l2016:
 45548                           
 45549                           ; BSR set to: 5
 45550                           ;../../VLCBlib_PIC/statusLeds2.c: 168:             (LATBbits.LATB7=0);
 45551   01222A  9EBF               	bcf	191,7,c	;volatile
 45552                           
 45553                           ;../../VLCBlib_PIC/statusLeds2.c: 169:             flashCounter[0] = 0;
 45554   01222C  6B7A               	clrf	_flashCounter& (0+255),b
 45555                           
 45556                           ;../../VLCBlib_PIC/statusLeds2.c: 170:             break;
 45557   01222E  0012               	return	
 45558   012230                     l11129:
 45559                           
 45560                           ; BSR set to: 5
 45561                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             (LATBbits.LATB7=flashCounter[0]/25);
 45562   012230  C57A  F501         	movff	_flashCounter,___awdiv@dividend
 45563   012234  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 45564   012236  0E00               	movlw	0
 45565   012238  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 45566   01223A  0E19               	movlw	25
 45567   01223C  6E03               	movwf	___awdiv@divisor^(0+1280),c
 45568   01223E  EC9A  F0A5         	call	___awdiv	;wreg free
 45569   012242  3201               	rrcf	?___awdiv^(0+1280),f,c
 45570   012244  3201               	rrcf	?___awdiv^(0+1280),f,c
 45571   012246  50BF               	movf	191,w,c	;volatile
 45572   012248  1801               	xorwf	?___awdiv^(0+1280),w,c
 45573   01224A  0B7F               	andlw	-129
 45574   01224C  1801               	xorwf	?___awdiv^(0+1280),w,c
 45575   01224E  6EBF               	movwf	191,c	;volatile
 45576                           
 45577                           ;../../VLCBlib_PIC/statusLeds2.c: 174:             if (flashCounter[0] >= 50) {
 45578   012250  0E31               	movlw	49
 45579   012252  D013               	goto	L18
 45580   012254                     u9210:
 45581                           
 45582                           ; BSR set to: 5
 45583                           ;../../VLCBlib_PIC/statusLeds2.c: 175:                 flashCounter[0] = 0;
 45584   012254  6B7A               	clrf	_flashCounter& (0+255),b
 45585   012256  0012               	return	
 45586   012258                     l11135:
 45587                           
 45588                           ; BSR set to: 5
 45589                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             (LATBbits.LATB7=flashCounter[0]/50);
 45590   012258  C57A  F501         	movff	_flashCounter,___awdiv@dividend
 45591   01225C  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 45592   01225E  0E00               	movlw	0
 45593   012260  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 45594   012262  0E32               	movlw	50
 45595   012264  6E03               	movwf	___awdiv@divisor^(0+1280),c
 45596   012266  EC9A  F0A5         	call	___awdiv	;wreg free
 45597   01226A  3201               	rrcf	?___awdiv^(0+1280),f,c
 45598   01226C  3201               	rrcf	?___awdiv^(0+1280),f,c
 45599   01226E  50BF               	movf	191,w,c	;volatile
 45600   012270  1801               	xorwf	?___awdiv^(0+1280),w,c
 45601   012272  0B7F               	andlw	-129
 45602   012274  1801               	xorwf	?___awdiv^(0+1280),w,c
 45603   012276  6EBF               	movwf	191,c	;volatile
 45604                           
 45605                           ;../../VLCBlib_PIC/statusLeds2.c: 181:             if (flashCounter[0] >= 100) {
 45606   012278  0E63               	movlw	99
 45607   01227A                     L18:
 45608   01227A  0105               	movlb	5	; () banked
 45609   01227C  657A               	cpfsgt	_flashCounter& (0+255),b
 45610   01227E  0012               	return	
 45611   012280  D7E9               	goto	u9210
 45612   012282                     l11141:
 45613                           
 45614                           ; BSR set to: 5
 45615                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             (LATBbits.LATB7=flashCounter[0]/100);
 45616   012282  C57A  F501         	movff	_flashCounter,___awdiv@dividend
 45617   012286  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 45618   012288  0E00               	movlw	0
 45619   01228A  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 45620   01228C  0E64               	movlw	100
 45621   01228E  6E03               	movwf	___awdiv@divisor^(0+1280),c
 45622   012290  EC9A  F0A5         	call	___awdiv	;wreg free
 45623   012294  3201               	rrcf	?___awdiv^(0+1280),f,c
 45624   012296  3201               	rrcf	?___awdiv^(0+1280),f,c
 45625   012298  50BF               	movf	191,w,c	;volatile
 45626   01229A  1801               	xorwf	?___awdiv^(0+1280),w,c
 45627   01229C  0B7F               	andlw	-129
 45628   01229E  1801               	xorwf	?___awdiv^(0+1280),w,c
 45629   0122A0  6EBF               	movwf	191,c	;volatile
 45630                           
 45631                           ;../../VLCBlib_PIC/statusLeds2.c: 187:             if (flashCounter[0] >= 200) {
 45632   0122A2  0EC7               	movlw	199
 45633   0122A4  D7EA               	goto	L18
 45634   0122A6                     l2023:
 45635                           
 45636                           ; BSR set to: 5
 45637                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             (LATBbits.LATB7=1);
 45638   0122A6  8EBF               	bsf	191,7,c	;volatile
 45639                           
 45640                           ; BSR set to: 5
 45641                           ;../../VLCBlib_PIC/statusLeds2.c: 193:             if (flashCounter[0] >= 25) {
 45642   0122A8  0E18               	movlw	24
 45643   0122AA  D00C               	goto	L20
 45644   0122AC                     u9240:
 45645                           
 45646                           ; BSR set to: 5
 45647                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 flashCounter[0] = 0;
 45648   0122AC  6B7A               	clrf	_flashCounter& (0+255),b
 45649                           
 45650                           ;../../VLCBlib_PIC/statusLeds2.c: 195:                 ledState[0] = LED_OFF;
 45651   0122AE  6B7C               	clrf	_ledState& (0+255),b
 45652   0122B0  0012               	return	
 45653   0122B2                     l2025:
 45654                           
 45655                           ; BSR set to: 5
 45656                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             (LATBbits.LATB7=0);
 45657   0122B2  9EBF               	bcf	191,7,c	;volatile
 45658                           
 45659                           ; BSR set to: 5
 45660                           ;../../VLCBlib_PIC/statusLeds2.c: 200:             if (flashCounter[0] >= 25) {
 45661   0122B4  0E18               	movlw	24
 45662   0122B6  D00B               	goto	L19
 45663   0122B8                     u9250:
 45664                           
 45665                           ; BSR set to: 5
 45666                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 flashCounter[0] = 0;
 45667   0122B8  6B7A               	clrf	_flashCounter& (0+255),b
 45668                           
 45669                           ; BSR set to: 5
 45670                           ;../../VLCBlib_PIC/statusLeds2.c: 202:                 ledState[0] = LED_ON;
 45671   0122BA  0E01               	movlw	1
 45672   0122BC  6F7C               	movwf	_ledState& (0+255),b
 45673   0122BE  0012               	return	
 45674   0122C0                     l2027:
 45675                           
 45676                           ; BSR set to: 5
 45677                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             (LATBbits.LATB7=1);
 45678   0122C0  8EBF               	bsf	191,7,c	;volatile
 45679                           
 45680                           ; BSR set to: 5
 45681                           ;../../VLCBlib_PIC/statusLeds2.c: 207:             if (flashCounter[0] >= 50) {
 45682   0122C2  0E31               	movlw	49
 45683   0122C4                     L20:
 45684   0122C4  657A               	cpfsgt	_flashCounter& (0+255),b
 45685   0122C6  0012               	return	
 45686   0122C8  D7F1               	goto	u9240
 45687   0122CA                     l2029:
 45688                           
 45689                           ; BSR set to: 5
 45690                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             (LATBbits.LATB7=0);
 45691   0122CA  9EBF               	bcf	191,7,c	;volatile
 45692                           
 45693                           ; BSR set to: 5
 45694                           ;../../VLCBlib_PIC/statusLeds2.c: 214:             if (flashCounter[0] >= 50) {
 45695   0122CC  0E31               	movlw	49
 45696   0122CE                     L19:
 45697   0122CE  657A               	cpfsgt	_flashCounter& (0+255),b
 45698   0122D0  0012               	return	
 45699   0122D2  D7F2               	goto	u9250
 45700   0122D4                     l2031:
 45701                           
 45702                           ; BSR set to: 5
 45703                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             (LATBbits.LATB7=0);
 45704   0122D4  9EBF               	bcf	191,7,c	;volatile
 45705                           
 45706                           ; BSR set to: 5
 45707                           ;../../VLCBlib_PIC/statusLeds2.c: 221:             if (flashCounter[0] >= 100) {
 45708   0122D6  0E63               	movlw	99
 45709   0122D8  D7FA               	goto	L19
 45710   0122DA                     l11175:
 45711                           
 45712                           ; BSR set to: 5
 45713   0122DA  517C               	movf	_ledState& (0+255),w,b
 45714   0122DC  6E0B               	movwf	??_leds_poll^(0+1280),c
 45715   0122DE  6A0C               	clrf	(??_leds_poll+1)^(0+1280),c
 45716                           
 45717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 45718                           ; Switch size 1, requested type "simple"
 45719                           ; Number of cases is 1, Range of values is 0 to 0
 45720                           ; switch strategies available:
 45721                           ; Name         Instructions Cycles
 45722                           ; simple_byte            4     3 (average)
 45723                           ;	Chosen strategy is simple_byte
 45724   0122E0  500C               	movf	(??_leds_poll+1)^(0+1280),w,c
 45725   0122E2  0A00               	xorlw	0	; case 0
 45726   0122E4  A4D8               	btfss	status,2,c
 45727   0122E6  0012               	return	
 45728                           
 45729                           ; BSR set to: 5
 45730                           ; Switch size 1, requested type "simple"
 45731                           ; Number of cases is 10, Range of values is 0 to 9
 45732                           ; switch strategies available:
 45733                           ; Name         Instructions Cycles
 45734                           ; simple_byte           31    16 (average)
 45735                           ;	Chosen strategy is simple_byte
 45736   0122E8  500B               	movf	??_leds_poll^(0+1280),w,c
 45737   0122EA  0A00               	xorlw	0	; case 0
 45738   0122EC  B4D8               	btfsc	status,2,c
 45739   0122EE  D79D               	goto	l2016
 45740   0122F0  0A01               	xorlw	1	; case 1
 45741   0122F2  B4D8               	btfsc	status,2,c
 45742   0122F4  D797               	goto	l2014
 45743   0122F6  0A03               	xorlw	3	; case 2
 45744   0122F8  B4D8               	btfsc	status,2,c
 45745   0122FA  D79A               	goto	l11129
 45746   0122FC  0A01               	xorlw	1	; case 3
 45747   0122FE  B4D8               	btfsc	status,2,c
 45748   012300  D7AB               	goto	l11135
 45749   012302  0A07               	xorlw	7	; case 4
 45750   012304  B4D8               	btfsc	status,2,c
 45751   012306  D7BD               	goto	l11141
 45752   012308  0A01               	xorlw	1	; case 5
 45753   01230A  B4D8               	btfsc	status,2,c
 45754   01230C  D7D2               	goto	l2025
 45755   01230E  0A03               	xorlw	3	; case 6
 45756   012310  B4D8               	btfsc	status,2,c
 45757   012312  D7C9               	goto	l2023
 45758   012314  0A01               	xorlw	1	; case 7
 45759   012316  B4D8               	btfsc	status,2,c
 45760   012318  D7D8               	goto	l2029
 45761   01231A  0A0F               	xorlw	15	; case 8
 45762   01231C  B4D8               	btfsc	status,2,c
 45763   01231E  D7D0               	goto	l2027
 45764   012320  0A01               	xorlw	1	; case 9
 45765   012322  A4D8               	btfss	status,2,c
 45766   012324  0012               	return	
 45767   012326  D7D6               	goto	l2031
 45768   012328                     __end_of_leds_poll:
 45769                           	callstack 0
 45770                           
 45771 ;; *************** function _tickGet *****************
 45772 ;; Defined at:
 45773 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 45774 ;; Parameters:    Size  Location     Type
 45775 ;;		None
 45776 ;; Auto vars:     Size  Location     Type
 45777 ;;  currentTime     4    6[COMRAM] struct _TickValue
 45778 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 45779 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 45780 ;; Return value:  Size  Location     Type
 45781 ;;                  4    0[COMRAM] unsigned long 
 45782 ;; Registers used:
 45783 ;;		wreg, status,2, status,0
 45784 ;; Tracked objects:
 45785 ;;		On entry : 0/0
 45786 ;;		On exit  : 0/0
 45787 ;;		Unchanged: 0/0
 45788 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45790 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45792 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45793 ;;Total ram usage:       10 bytes
 45794 ;; Hardware stack levels used: 1
 45795 ;; Hardware stack levels required when called: 1
 45796 ;; This function calls:
 45797 ;;		Nothing
 45798 ;; This function is called by:
 45799 ;;		_setup
 45800 ;;		_loop
 45801 ;;		_canPowerUp
 45802 ;;		_startEnumeration
 45803 ;;		_handleSelfEnumeration
 45804 ;;		_processEnumeration
 45805 ;;		_mnsPowerUp
 45806 ;;		_mnsPoll
 45807 ;;		_leds_powerUp
 45808 ;;		_leds_poll
 45809 ;;		_pbDownTimer
 45810 ;;		_pbUpTimer
 45811 ;;		_poll
 45812 ;; This function uses a non-reentrant model
 45813 ;;
 45814                           
 45815                           	psect	text128
 45816   0158A0                     __ptext128:
 45817                           	callstack 0
 45818   0158A0                     _tickGet:
 45819                           	callstack 124
 45820                           
 45821                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 45822                           
 45823                           ; BSR set to: 5
 45824                           ;incstack = 0
 45825   0158A0  6A09               	clrf	(tickGet@currentTime+2)^(0+1280),c
 45826                           
 45827                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 45828   0158A2  6A0A               	clrf	(tickGet@currentTime+3)^(0+1280),c
 45829                           
 45830                           ;../../VLCBlib_PIC/ticktime.c: 169:     TMR0IE = 0;
 45831   0158A4  9EA1               	bcf	1185,7,c	;volatile
 45832   0158A6                     l8145:
 45833                           
 45834                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = TMR0IF;
 45835   0158A6  0E00               	movlw	0
 45836   0158A8  BEB1               	btfsc	1201,7,c	;volatile
 45837   0158AA  0E01               	movlw	1
 45838   0158AC  6E06               	movwf	tickGet@IntFlag1^(0+1280),c
 45839                           
 45840                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 45841   0158AE  C318 F507          	movff	792,tickGet@currentTime	;volatile
 45842                           
 45843                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 45844   0158B2  C319 F508          	movff	793,tickGet@currentTime+1	;volatile
 45845                           
 45846                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = TMR0IF;
 45847   0158B6  0E00               	movlw	0
 45848   0158B8  BEB1               	btfsc	1201,7,c	;volatile
 45849   0158BA  0E01               	movlw	1
 45850   0158BC  6E05               	movwf	tickGet@IntFlag2^(0+1280),c
 45851                           
 45852                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 45853   0158BE  5005               	movf	tickGet@IntFlag2^(0+1280),w,c
 45854   0158C0  1806               	xorwf	tickGet@IntFlag1^(0+1280),w,c
 45855   0158C2  A4D8               	btfss	status,2,c
 45856   0158C4  D7F0               	goto	l8145
 45857                           
 45858                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 45859   0158C6  5006               	movf	tickGet@IntFlag1^(0+1280),w,c
 45860   0158C8  B4D8               	btfsc	status,2,c
 45861   0158CA  D006               	goto	l8163
 45862                           
 45863                           ;../../VLCBlib_PIC/ticktime.c: 178:         TMR0IF = 0;
 45864   0158CC  9EB1               	bcf	1201,7,c	;volatile
 45865                           
 45866                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 45867   0158CE  0105               	movlb	5	; () banked
 45868   0158D0  2B89               	incf	_timerExtension1& (0+255),f,b	;volatile
 45869                           
 45870                           ; BSR set to: 5
 45871                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 45872   0158D2  5189               	movf	_timerExtension1& (0+255),w,b	;volatile
 45873   0158D4  B4D8               	btfsc	status,2,c
 45874                           
 45875                           ; BSR set to: 5
 45876                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 45877   0158D6  2B88               	incf	_timerExtension2& (0+255),f,b	;volatile
 45878   0158D8                     l8163:
 45879                           
 45880                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 45881   0158D8  0105               	movlb	5	; () banked
 45882   0158DA  5189               	movf	_timerExtension1& (0+255),w,b	;volatile
 45883   0158DC  2609               	addwf	(tickGet@currentTime+2)^(0+1280),f,c
 45884                           
 45885                           ; BSR set to: 5
 45886                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 45887   0158DE  5188               	movf	_timerExtension2& (0+255),w,b	;volatile
 45888   0158E0  260A               	addwf	(tickGet@currentTime+3)^(0+1280),f,c
 45889                           
 45890                           ; BSR set to: 5
 45891                           ;../../VLCBlib_PIC/ticktime.c: 191:     TMR0IE = 1;
 45892   0158E2  8EA1               	bsf	1185,7,c	;volatile
 45893                           
 45894                           ; BSR set to: 5
 45895                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 45896   0158E4  C507  F501         	movff	tickGet@currentTime,?_tickGet
 45897   0158E8  C508  F502         	movff	tickGet@currentTime+1,?_tickGet+1
 45898   0158EC  C509  F503         	movff	tickGet@currentTime+2,?_tickGet+2
 45899   0158F0  C50A  F504         	movff	tickGet@currentTime+3,?_tickGet+3
 45900                           
 45901                           ; BSR set to: 5
 45902   0158F4  0012               	return		;funcret
 45903   0158F6                     __end_of_tickGet:
 45904                           	callstack 0
 45905                           
 45906 ;; *************** function ___awdiv *****************
 45907 ;; Defined at:
 45908 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 45909 ;; Parameters:    Size  Location     Type
 45910 ;;  dividend        2    0[COMRAM] int 
 45911 ;;  divisor         2    2[COMRAM] int 
 45912 ;; Auto vars:     Size  Location     Type
 45913 ;;  quotient        2    6[COMRAM] int 
 45914 ;;  sign            1    5[COMRAM] unsigned char 
 45915 ;;  counter         1    4[COMRAM] unsigned char 
 45916 ;; Return value:  Size  Location     Type
 45917 ;;                  2    0[COMRAM] int 
 45918 ;; Registers used:
 45919 ;;		wreg, status,2, status,0
 45920 ;; Tracked objects:
 45921 ;;		On entry : 0/0
 45922 ;;		On exit  : 0/0
 45923 ;;		Unchanged: 0/0
 45924 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45925 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45926 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45928 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45929 ;;Total ram usage:        8 bytes
 45930 ;; Hardware stack levels used: 1
 45931 ;; Hardware stack levels required when called: 1
 45932 ;; This function calls:
 45933 ;;		Nothing
 45934 ;; This function is called by:
 45935 ;;		_APP_processConsumedEvent
 45936 ;;		_setLed
 45937 ;;		_clearLed
 45938 ;;		_leds_poll
 45939 ;;		_testLed
 45940 ;; This function uses a non-reentrant model
 45941 ;;
 45942                           
 45943                           	psect	text129
 45944   014B34                     __ptext129:
 45945                           	callstack 0
 45946   014B34                     ___awdiv:
 45947                           	callstack 121
 45948                           
 45949                           ; BSR set to: 5
 45950                           ;incstack = 0
 45951   014B34  6A06               	clrf	___awdiv@sign^(0+1280),c
 45952   014B36  AE04               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
 45953   014B38  D006               	goto	l8559
 45954   014B3A  6C03               	negf	___awdiv@divisor^(0+1280),c
 45955   014B3C  1E04               	comf	(___awdiv@divisor+1)^(0+1280),f,c
 45956   014B3E  B0D8               	btfsc	status,0,c
 45957   014B40  2A04               	incf	(___awdiv@divisor+1)^(0+1280),f,c
 45958   014B42  0E01               	movlw	1
 45959   014B44  6E06               	movwf	___awdiv@sign^(0+1280),c
 45960   014B46                     l8559:
 45961   014B46  AE02               	btfss	(___awdiv@dividend+1)^(0+1280),7,c
 45962   014B48  D006               	goto	l8565
 45963   014B4A  6C01               	negf	___awdiv@dividend^(0+1280),c
 45964   014B4C  1E02               	comf	(___awdiv@dividend+1)^(0+1280),f,c
 45965   014B4E  B0D8               	btfsc	status,0,c
 45966   014B50  2A02               	incf	(___awdiv@dividend+1)^(0+1280),f,c
 45967   014B52  0E01               	movlw	1
 45968   014B54  1A06               	xorwf	___awdiv@sign^(0+1280),f,c
 45969   014B56                     l8565:
 45970   014B56  0E00               	movlw	0
 45971   014B58  6E08               	movwf	(___awdiv@quotient+1)^(0+1280),c
 45972   014B5A  0E00               	movlw	0
 45973   014B5C  6E07               	movwf	___awdiv@quotient^(0+1280),c
 45974   014B5E  5003               	movf	___awdiv@divisor^(0+1280),w,c
 45975   014B60  1004               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
 45976   014B62  B4D8               	btfsc	status,2,c
 45977   014B64  D01C               	goto	l8587
 45978   014B66  0E01               	movlw	1
 45979   014B68  6E05               	movwf	___awdiv@counter^(0+1280),c
 45980   014B6A  D004               	goto	l8573
 45981   014B6C                     l8571:
 45982   014B6C  90D8               	bcf	status,0,c
 45983   014B6E  3603               	rlcf	___awdiv@divisor^(0+1280),f,c
 45984   014B70  3604               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
 45985   014B72  2A05               	incf	___awdiv@counter^(0+1280),f,c
 45986   014B74                     l8573:
 45987   014B74  AE04               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
 45988   014B76  D7FA               	goto	l8571
 45989   014B78                     u6200:
 45990   014B78  90D8               	bcf	status,0,c
 45991   014B7A  3607               	rlcf	___awdiv@quotient^(0+1280),f,c
 45992   014B7C  3608               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
 45993   014B7E  5003               	movf	___awdiv@divisor^(0+1280),w,c
 45994   014B80  5C01               	subwf	___awdiv@dividend^(0+1280),w,c
 45995   014B82  5004               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 45996   014B84  5802               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
 45997   014B86  A0D8               	btfss	status,0,c
 45998   014B88  D005               	goto	l8583
 45999   014B8A  5003               	movf	___awdiv@divisor^(0+1280),w,c
 46000   014B8C  5E01               	subwf	___awdiv@dividend^(0+1280),f,c
 46001   014B8E  5004               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 46002   014B90  5A02               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
 46003   014B92  8007               	bsf	___awdiv@quotient^(0+1280),0,c
 46004   014B94                     l8583:
 46005   014B94  90D8               	bcf	status,0,c
 46006   014B96  3204               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
 46007   014B98  3203               	rrcf	___awdiv@divisor^(0+1280),f,c
 46008   014B9A  2E05               	decfsz	___awdiv@counter^(0+1280),f,c
 46009   014B9C  D7ED               	goto	u6200
 46010   014B9E                     l8587:
 46011   014B9E  5006               	movf	___awdiv@sign^(0+1280),w,c
 46012   014BA0  B4D8               	btfsc	status,2,c
 46013   014BA2  D004               	goto	l8591
 46014   014BA4  6C07               	negf	___awdiv@quotient^(0+1280),c
 46015   014BA6  1E08               	comf	(___awdiv@quotient+1)^(0+1280),f,c
 46016   014BA8  B0D8               	btfsc	status,0,c
 46017   014BAA  2A08               	incf	(___awdiv@quotient+1)^(0+1280),f,c
 46018   014BAC                     l8591:
 46019   014BAC  C507  F501         	movff	___awdiv@quotient,?___awdiv
 46020   014BB0  C508  F502         	movff	___awdiv@quotient+1,?___awdiv+1
 46021   014BB4  0012               	return		;funcret
 46022   014BB6                     __end_of___awdiv:
 46023                           	callstack 0
 46024                           
 46025 ;; *************** function ___lmul *****************
 46026 ;; Defined at:
 46027 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
 46028 ;; Parameters:    Size  Location     Type
 46029 ;;  multiplier      4    4[COMRAM] unsigned long 
 46030 ;;  multiplicand    4    8[COMRAM] unsigned long 
 46031 ;; Auto vars:     Size  Location     Type
 46032 ;;  product         4   12[COMRAM] unsigned long 
 46033 ;; Return value:  Size  Location     Type
 46034 ;;                  4    4[COMRAM] unsigned long 
 46035 ;; Registers used:
 46036 ;;		wreg, status,2, status,0
 46037 ;; Tracked objects:
 46038 ;;		On entry : 0/0
 46039 ;;		On exit  : 0/0
 46040 ;;		Unchanged: 0/0
 46041 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46042 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46043 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46045 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46046 ;;Total ram usage:       12 bytes
 46047 ;; Hardware stack levels used: 1
 46048 ;; Hardware stack levels required when called: 1
 46049 ;; This function calls:
 46050 ;;		Nothing
 46051 ;; This function is called by:
 46052 ;;		_loop
 46053 ;;		_pbDownTimer
 46054 ;;		_pbUpTimer
 46055 ;;		_poll
 46056 ;; This function uses a non-reentrant model
 46057 ;;
 46058                           
 46059                           	psect	text130
 46060   0158F6                     __ptext130:
 46061                           	callstack 0
 46062   0158F6                     ___lmul:
 46063                           	callstack 124
 46064                           
 46065                           ;incstack = 0
 46066   0158F6  0E00               	movlw	0
 46067   0158F8  6E0D               	movwf	___lmul@product^(0+1280),c
 46068   0158FA  0E00               	movlw	0
 46069   0158FC  6E0E               	movwf	(___lmul@product+1)^(0+1280),c
 46070   0158FE  0E00               	movlw	0
 46071   015900  6E0F               	movwf	(___lmul@product+2)^(0+1280),c
 46072   015902  0E00               	movlw	0
 46073   015904  6E10               	movwf	(___lmul@product+3)^(0+1280),c
 46074   015906                     l11243:
 46075   015906  A005               	btfss	___lmul@multiplier^(0+1280),0,c
 46076   015908  D008               	goto	l11247
 46077   01590A  5009               	movf	___lmul@multiplicand^(0+1280),w,c
 46078   01590C  260D               	addwf	___lmul@product^(0+1280),f,c
 46079   01590E  500A               	movf	(___lmul@multiplicand+1)^(0+1280),w,c
 46080   015910  220E               	addwfc	(___lmul@product+1)^(0+1280),f,c
 46081   015912  500B               	movf	(___lmul@multiplicand+2)^(0+1280),w,c
 46082   015914  220F               	addwfc	(___lmul@product+2)^(0+1280),f,c
 46083   015916  500C               	movf	(___lmul@multiplicand+3)^(0+1280),w,c
 46084   015918  2210               	addwfc	(___lmul@product+3)^(0+1280),f,c
 46085   01591A                     l11247:
 46086   01591A  90D8               	bcf	status,0,c
 46087   01591C  3609               	rlcf	___lmul@multiplicand^(0+1280),f,c
 46088   01591E  360A               	rlcf	(___lmul@multiplicand+1)^(0+1280),f,c
 46089   015920  360B               	rlcf	(___lmul@multiplicand+2)^(0+1280),f,c
 46090   015922  360C               	rlcf	(___lmul@multiplicand+3)^(0+1280),f,c
 46091   015924  90D8               	bcf	status,0,c
 46092   015926  3208               	rrcf	(___lmul@multiplier+3)^(0+1280),f,c
 46093   015928  3207               	rrcf	(___lmul@multiplier+2)^(0+1280),f,c
 46094   01592A  3206               	rrcf	(___lmul@multiplier+1)^(0+1280),f,c
 46095   01592C  3205               	rrcf	___lmul@multiplier^(0+1280),f,c
 46096   01592E  5005               	movf	___lmul@multiplier^(0+1280),w,c
 46097   015930  1006               	iorwf	(___lmul@multiplier+1)^(0+1280),w,c
 46098   015932  1007               	iorwf	(___lmul@multiplier+2)^(0+1280),w,c
 46099   015934  1008               	iorwf	(___lmul@multiplier+3)^(0+1280),w,c
 46100   015936  A4D8               	btfss	status,2,c
 46101   015938  D7E6               	goto	l11243
 46102   01593A  C50D  F505         	movff	___lmul@product,?___lmul
 46103   01593E  C50E  F506         	movff	___lmul@product+1,?___lmul+1
 46104   015942  C50F  F507         	movff	___lmul@product+2,?___lmul+2
 46105   015946  C510  F508         	movff	___lmul@product+3,?___lmul+3
 46106   01594A  0012               	return		;funcret
 46107   01594C                     __end_of___lmul:
 46108                           	callstack 0
 46109                           
 46110 ;; *************** function ___lldiv *****************
 46111 ;; Defined at:
 46112 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
 46113 ;; Parameters:    Size  Location     Type
 46114 ;;  dividend        4   10[COMRAM] unsigned long 
 46115 ;;  divisor         4   14[COMRAM] unsigned long 
 46116 ;; Auto vars:     Size  Location     Type
 46117 ;;  quotient        4   18[COMRAM] unsigned long 
 46118 ;;  counter         1   22[COMRAM] unsigned char 
 46119 ;; Return value:  Size  Location     Type
 46120 ;;                  4   10[COMRAM] unsigned long 
 46121 ;; Registers used:
 46122 ;;		wreg, status,2, status,0
 46123 ;; Tracked objects:
 46124 ;;		On entry : 0/0
 46125 ;;		On exit  : 0/0
 46126 ;;		Unchanged: 0/0
 46127 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46128 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46129 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46131 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46132 ;;Total ram usage:       13 bytes
 46133 ;; Hardware stack levels used: 1
 46134 ;; Hardware stack levels required when called: 1
 46135 ;; This function calls:
 46136 ;;		Nothing
 46137 ;; This function is called by:
 46138 ;;		_loop
 46139 ;;		_pbDownTimer
 46140 ;;		_pbUpTimer
 46141 ;; This function uses a non-reentrant model
 46142 ;;
 46143                           
 46144                           	psect	text131
 46145   014BB6                     __ptext131:
 46146                           	callstack 0
 46147   014BB6                     ___lldiv:
 46148                           	callstack 124
 46149                           
 46150                           ;incstack = 0
 46151   014BB6  0E00               	movlw	0
 46152   014BB8  6E13               	movwf	___lldiv@quotient^(0+1280),c
 46153   014BBA  0E00               	movlw	0
 46154   014BBC  6E14               	movwf	(___lldiv@quotient+1)^(0+1280),c
 46155   014BBE  0E00               	movlw	0
 46156   014BC0  6E15               	movwf	(___lldiv@quotient+2)^(0+1280),c
 46157   014BC2  0E00               	movlw	0
 46158   014BC4  6E16               	movwf	(___lldiv@quotient+3)^(0+1280),c
 46159   014BC6  500F               	movf	___lldiv@divisor^(0+1280),w,c
 46160   014BC8  1010               	iorwf	(___lldiv@divisor+1)^(0+1280),w,c
 46161   014BCA  1011               	iorwf	(___lldiv@divisor+2)^(0+1280),w,c
 46162   014BCC  1012               	iorwf	(___lldiv@divisor+3)^(0+1280),w,c
 46163   014BCE  B4D8               	btfsc	status,2,c
 46164   014BD0  D02A               	goto	l2437
 46165   014BD2  0E01               	movlw	1
 46166   014BD4  6E17               	movwf	___lldiv@counter^(0+1280),c
 46167   014BD6  D006               	goto	l11259
 46168   014BD8                     l11257:
 46169   014BD8  90D8               	bcf	status,0,c
 46170   014BDA  360F               	rlcf	___lldiv@divisor^(0+1280),f,c
 46171   014BDC  3610               	rlcf	(___lldiv@divisor+1)^(0+1280),f,c
 46172   014BDE  3611               	rlcf	(___lldiv@divisor+2)^(0+1280),f,c
 46173   014BE0  3612               	rlcf	(___lldiv@divisor+3)^(0+1280),f,c
 46174   014BE2  2A17               	incf	___lldiv@counter^(0+1280),f,c
 46175   014BE4                     l11259:
 46176   014BE4  AE12               	btfss	(___lldiv@divisor+3)^(0+1280),7,c
 46177   014BE6  D7F8               	goto	l11257
 46178   014BE8                     u9380:
 46179   014BE8  90D8               	bcf	status,0,c
 46180   014BEA  3613               	rlcf	___lldiv@quotient^(0+1280),f,c
 46181   014BEC  3614               	rlcf	(___lldiv@quotient+1)^(0+1280),f,c
 46182   014BEE  3615               	rlcf	(___lldiv@quotient+2)^(0+1280),f,c
 46183   014BF0  3616               	rlcf	(___lldiv@quotient+3)^(0+1280),f,c
 46184   014BF2  500F               	movf	___lldiv@divisor^(0+1280),w,c
 46185   014BF4  5C0B               	subwf	___lldiv@dividend^(0+1280),w,c
 46186   014BF6  5010               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 46187   014BF8  580C               	subwfb	(___lldiv@dividend+1)^(0+1280),w,c
 46188   014BFA  5011               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 46189   014BFC  580D               	subwfb	(___lldiv@dividend+2)^(0+1280),w,c
 46190   014BFE  5012               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 46191   014C00  580E               	subwfb	(___lldiv@dividend+3)^(0+1280),w,c
 46192   014C02  A0D8               	btfss	status,0,c
 46193   014C04  D009               	goto	l11269
 46194   014C06  500F               	movf	___lldiv@divisor^(0+1280),w,c
 46195   014C08  5E0B               	subwf	___lldiv@dividend^(0+1280),f,c
 46196   014C0A  5010               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 46197   014C0C  5A0C               	subwfb	(___lldiv@dividend+1)^(0+1280),f,c
 46198   014C0E  5011               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 46199   014C10  5A0D               	subwfb	(___lldiv@dividend+2)^(0+1280),f,c
 46200   014C12  5012               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 46201   014C14  5A0E               	subwfb	(___lldiv@dividend+3)^(0+1280),f,c
 46202   014C16  8013               	bsf	___lldiv@quotient^(0+1280),0,c
 46203   014C18                     l11269:
 46204   014C18  90D8               	bcf	status,0,c
 46205   014C1A  3212               	rrcf	(___lldiv@divisor+3)^(0+1280),f,c
 46206   014C1C  3211               	rrcf	(___lldiv@divisor+2)^(0+1280),f,c
 46207   014C1E  3210               	rrcf	(___lldiv@divisor+1)^(0+1280),f,c
 46208   014C20  320F               	rrcf	___lldiv@divisor^(0+1280),f,c
 46209   014C22  2E17               	decfsz	___lldiv@counter^(0+1280),f,c
 46210   014C24  D7E1               	goto	u9380
 46211   014C26                     l2437:
 46212   014C26  C513  F50B         	movff	___lldiv@quotient,?___lldiv
 46213   014C2A  C514  F50C         	movff	___lldiv@quotient+1,?___lldiv+1
 46214   014C2E  C515  F50D         	movff	___lldiv@quotient+2,?___lldiv+2
 46215   014C32  C516  F50E         	movff	___lldiv@quotient+3,?___lldiv+3
 46216   014C36  0012               	return		;funcret
 46217   014C38                     __end_of___lldiv:
 46218                           	callstack 0
 46219                           
 46220 ;; *************** function _factoryReset *****************
 46221 ;; Defined at:
 46222 ;;		line 867 in file "../../VLCBlib_PIC/vlcb.c"
 46223 ;; Parameters:    Size  Location     Type
 46224 ;;		None
 46225 ;; Auto vars:     Size  Location     Type
 46226 ;;  i               1   49[COMRAM] unsigned char 
 46227 ;; Return value:  Size  Location     Type
 46228 ;;                  1    wreg      void 
 46229 ;; Registers used:
 46230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46231 ;; Tracked objects:
 46232 ;;		On entry : 0/0
 46233 ;;		On exit  : 0/0
 46234 ;;		Unchanged: 0/0
 46235 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46238 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46239 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46240 ;;Total ram usage:        3 bytes
 46241 ;; Hardware stack levels used: 1
 46242 ;; Hardware stack levels required when called: 10
 46243 ;; This function calls:
 46244 ;;		NULL
 46245 ;;		_APP_factoryReset
 46246 ;;		_canFactoryReset
 46247 ;;		_mnsFactoryReset
 46248 ;;		_nvFactoryReset
 46249 ;;		_teachFactoryReset
 46250 ;;		_writeNVM
 46251 ;; This function is called by:
 46252 ;;		_mnsProcessMessage
 46253 ;;		_checkPowerOnPb
 46254 ;;		_main
 46255 ;; This function uses a non-reentrant model
 46256 ;;
 46257                           
 46258                           	psect	text132
 46259   013BA8                     __ptext132:
 46260                           	callstack 0
 46261   013BA8                     _factoryReset:
 46262                           	callstack 114
 46263                           
 46264                           ;../../VLCBlib_PIC/vlcb.c: 868:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 870:     for (i
      +                          =0; i<8; i++) {
 46265                           
 46266                           ;incstack = 0
 46267   013BA8  6A32               	clrf	factoryReset@i^(0+1280),c
 46268   013BAA                     l9717:
 46269                           
 46270                           ;../../VLCBlib_PIC/vlcb.c: 871:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 46271   013BAA  5032               	movf	factoryReset@i^(0+1280),w,c
 46272   013BAC  0D02               	mullw	2
 46273   013BAE  0E39               	movlw	low _services
 46274   013BB0  24F3               	addwf	243,w,c
 46275   013BB2  6EF6               	movwf	tblptrl,c
 46276   013BB4  0EFF               	movlw	high _services
 46277   013BB6  20F4               	addwfc	244,w,c
 46278   013BB8  6EF7               	movwf	tblptrh,c
 46279   013BBA                     	if	1	;There are 3 active tblptr bytes
 46280   013BBA  6AF8               	clrf	tblptru,c
 46281   013BBC  0E00               	movlw	low (__pmediumconst shr (0+16))
 46282   013BBE  22F8               	addwfc	tblptru,f,c
 46283   013BC0                     	endif
 46284   013BC0  0009               	tblrd		*+
 46285   013BC2  50F5               	movf	tablat,w,c
 46286   013BC4  0009               	tblrd		*+
 46287   013BC6  10F5               	iorwf	tablat,w,c
 46288   013BC8  B4D8               	btfsc	status,2,c
 46289   013BCA  D04D               	goto	u7529
 46290   013BCC  5032               	movf	factoryReset@i^(0+1280),w,c
 46291   013BCE  0D02               	mullw	2
 46292   013BD0  0E39               	movlw	low _services
 46293   013BD2  24F3               	addwf	243,w,c
 46294   013BD4  6EF6               	movwf	tblptrl,c
 46295   013BD6  0EFF               	movlw	high _services
 46296   013BD8  20F4               	addwfc	244,w,c
 46297   013BDA  6EF7               	movwf	tblptrh,c
 46298   013BDC                     	if	1	;There are 3 active tblptr bytes
 46299   013BDC  6AF8               	clrf	tblptru,c
 46300   013BDE  0E00               	movlw	low (__pmediumconst shr (0+16))
 46301   013BE0  22F8               	addwfc	tblptru,f,c
 46302   013BE2                     	endif
 46303   013BE2  0009               	tblrd		*+
 46304   013BE4  C4F5 F530          	movff	tablat,??_factoryReset
 46305   013BE8  0009               	tblrd		*+
 46306   013BEA  C4F5 F531          	movff	tablat,??_factoryReset+1
 46307   013BEE  0E02               	movlw	2
 46308   013BF0  2630               	addwf	??_factoryReset^(0+1280),f,c
 46309   013BF2  0E00               	movlw	0
 46310   013BF4  2231               	addwfc	(??_factoryReset+1)^(0+1280),f,c
 46311   013BF6  C530  F4F6         	movff	??_factoryReset,tblptrl
 46312   013BFA  C531  F4F7         	movff	??_factoryReset+1,tblptrh
 46313   013BFE                     	if	0	;tblptru may be non-zero
 46314   013BFE                     	endif
 46315   013BFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 46316   013BFE  0E00               	movlw	low (__pmediumconst shr (0+16))
 46317   013C00  6EF8               	movwf	tblptru,c
 46318   013C02                     	endif
 46319   013C02  0009               	tblrd		*+
 46320   013C04  50F5               	movf	tablat,w,c
 46321   013C06  0009               	tblrd		*+
 46322   013C08  10F5               	iorwf	tablat,w,c
 46323   013C0A  0009               	tblrd		*+
 46324   013C0C  10F5               	iorwf	tablat,w,c
 46325   013C0E  B4D8               	btfsc	status,2,c
 46326   013C10  D02A               	goto	u7529
 46327                           
 46328                           ;../../VLCBlib_PIC/vlcb.c: 872:             services[i]->factoryReset();
 46329   013C12  5032               	movf	factoryReset@i^(0+1280),w,c
 46330   013C14  0D02               	mullw	2
 46331   013C16  0E39               	movlw	low _services
 46332   013C18  24F3               	addwf	243,w,c
 46333   013C1A  6EF6               	movwf	tblptrl,c
 46334   013C1C  0EFF               	movlw	high _services
 46335   013C1E  20F4               	addwfc	244,w,c
 46336   013C20  6EF7               	movwf	tblptrh,c
 46337   013C22                     	if	1	;There are 3 active tblptr bytes
 46338   013C22  6AF8               	clrf	tblptru,c
 46339   013C24  0E00               	movlw	low (__pmediumconst shr (0+16))
 46340   013C26  22F8               	addwfc	tblptru,f,c
 46341   013C28                     	endif
 46342   013C28  0009               	tblrd		*+
 46343   013C2A  C4F5 F530          	movff	tablat,??_factoryReset
 46344   013C2E  0009               	tblrd		*+
 46345   013C30  C4F5 F531          	movff	tablat,??_factoryReset+1
 46346   013C34  0E02               	movlw	2
 46347   013C36  2630               	addwf	??_factoryReset^(0+1280),f,c
 46348   013C38  0E00               	movlw	0
 46349   013C3A  2231               	addwfc	(??_factoryReset+1)^(0+1280),f,c
 46350   013C3C  C530  F4F6         	movff	??_factoryReset,tblptrl
 46351   013C40  C531  F4F7         	movff	??_factoryReset+1,tblptrh
 46352   013C44                     	if	0	;tblptru may be non-zero
 46353   013C44                     	endif
 46354   013C44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 46355   013C44  0E00               	movlw	low (__pmediumconst shr (0+16))
 46356   013C46  6EF8               	movwf	tblptru,c
 46357   013C48                     	endif
 46358   013C48  D801               	call	u7528
 46359   013C4A  D00D               	goto	u7529
 46360   013C4C                     u7528:
 46361   013C4C  0005               	push	
 46362   013C4E  6EFA               	movwf	pclath,c
 46363   013C50  0009               	tblrd		*+
 46364   013C52  50F5               	movf	tablat,w,c
 46365   013C54  6EFD               	movwf	tosl,c
 46366   013C56  0009               	tblrd		*+
 46367   013C58  50F5               	movf	tablat,w,c
 46368   013C5A  6EFE               	movwf	tosh,c
 46369   013C5C  0009               	tblrd		*+
 46370   013C5E  50F5               	movf	tablat,w,c
 46371   013C60  6EFF               	movwf	tosu,c
 46372   013C62  50FA               	movf	pclath,w,c
 46373   013C64  0012               	return		;indir
 46374   013C66                     u7529:
 46375                           
 46376                           ;../../VLCBlib_PIC/vlcb.c: 874:     }
 46377   013C66  2A32               	incf	factoryReset@i^(0+1280),f,c
 46378   013C68  0E07               	movlw	7
 46379   013C6A  6432               	cpfsgt	factoryReset@i^(0+1280),c
 46380   013C6C  D79E               	goto	l9717
 46381                           
 46382                           ;../../VLCBlib_PIC/vlcb.c: 876:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, 1);
 46383   013C6E  0EFA               	movlw	250
 46384   013C70  6E0E               	movwf	writeNVM@index^(0+1280),c
 46385   013C72  0E03               	movlw	3
 46386   013C74  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 46387   013C76  0E00               	movlw	0
 46388   013C78  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 46389   013C7A  0E01               	movlw	1
 46390   013C7C  6E11               	movwf	writeNVM@value^(0+1280),c
 46391   013C7E  0E00               	movlw	0
 46392   013C80  EC71  F0AD         	call	_writeNVM
 46393                           
 46394                           ;../../VLCBlib_PIC/vlcb.c: 878:     APP_factoryReset();
 46395   013C84  EC9B  F0B1         	call	_APP_factoryReset	;wreg free
 46396   013C88  0012               	return		;funcret
 46397   013C8A                     __end_of_factoryReset:
 46398                           	callstack 0
 46399                           
 46400 ;; *************** function _nvFactoryReset *****************
 46401 ;; Defined at:
 46402 ;;		line 126 in file "../../VLCBlib_PIC/nv.c"
 46403 ;; Parameters:    Size  Location     Type
 46404 ;;		None
 46405 ;; Auto vars:     Size  Location     Type
 46406 ;;  i               1   22[COMRAM] unsigned char 
 46407 ;; Return value:  Size  Location     Type
 46408 ;;                  1    wreg      void 
 46409 ;; Registers used:
 46410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 46411 ;; Tracked objects:
 46412 ;;		On entry : 0/0
 46413 ;;		On exit  : 0/0
 46414 ;;		Unchanged: 0/0
 46415 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46418 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46419 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46420 ;;Total ram usage:        3 bytes
 46421 ;; Hardware stack levels used: 1
 46422 ;; Hardware stack levels required when called: 6
 46423 ;; This function calls:
 46424 ;;		_APP_nvDefault
 46425 ;;		_writeNVM
 46426 ;; This function is called by:
 46427 ;;		_factoryReset
 46428 ;; This function uses a non-reentrant model
 46429 ;;
 46430                           
 46431                           	psect	text133
 46432   015FE2                     __ptext133:
 46433                           	callstack 0
 46434   015FE2                     _nvFactoryReset:
 46435                           	callstack 117
 46436                           
 46437                           ;../../VLCBlib_PIC/nv.c: 127:     uint8_t i;;../../VLCBlib_PIC/nv.c: 128:     for (i=1; 
      +                          i<= 67; i++) {
 46438                           
 46439                           ;incstack = 0
 46440   015FE2  0E01               	movlw	1
 46441   015FE4  6E17               	movwf	nvFactoryReset@i^(0+1280),c
 46442   015FE6                     l9151:
 46443                           
 46444                           ;../../VLCBlib_PIC/nv.c: 129:         writeNVM(EEPROM_NVM_TYPE, 0x200 +i, APP_nvDefault(
      +                          i));
 46445   015FE6  0E00               	movlw	0
 46446   015FE8  2417               	addwf	nvFactoryReset@i^(0+1280),w,c
 46447   015FEA  6E15               	movwf	??_nvFactoryReset^(0+1280),c
 46448   015FEC  6A16               	clrf	(??_nvFactoryReset+1)^(0+1280),c
 46449   015FEE  0E02               	movlw	2
 46450   015FF0  2216               	addwfc	(??_nvFactoryReset+1)^(0+1280),f,c
 46451   015FF2  C515  F50E         	movff	??_nvFactoryReset,writeNVM@index
 46452   015FF6  C516  F50F         	movff	??_nvFactoryReset+1,writeNVM@index+1
 46453   015FFA  6A10               	clrf	(writeNVM@index+2)^(0+1280),c
 46454   015FFC  BE0F               	btfsc	(writeNVM@index+1)^(0+1280),7,c
 46455   015FFE  0610               	decf	(writeNVM@index+2)^(0+1280),f,c
 46456   016000  5017               	movf	nvFactoryReset@i^(0+1280),w,c
 46457   016002  EC71  F0B0         	call	_APP_nvDefault
 46458   016006  6E11               	movwf	writeNVM@value^(0+1280),c
 46459   016008  0E00               	movlw	0
 46460   01600A  EC71  F0AD         	call	_writeNVM
 46461                           
 46462                           ;../../VLCBlib_PIC/nv.c: 130:     }
 46463   01600E  2A17               	incf	nvFactoryReset@i^(0+1280),f,c
 46464   016010  0E43               	movlw	67
 46465   016012  6417               	cpfsgt	nvFactoryReset@i^(0+1280),c
 46466   016014  D7E8               	goto	l9151
 46467   016016  0012               	return	
 46468   016018                     __end_of_nvFactoryReset:
 46469                           	callstack 0
 46470                           
 46471 ;; *************** function _mnsFactoryReset *****************
 46472 ;; Defined at:
 46473 ;;		line 279 in file "../../VLCBlib_PIC/mns.c"
 46474 ;; Parameters:    Size  Location     Type
 46475 ;;		None
 46476 ;; Auto vars:     Size  Location     Type
 46477 ;;		None
 46478 ;; Return value:  Size  Location     Type
 46479 ;;                  1    wreg      void 
 46480 ;; Registers used:
 46481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 46482 ;; Tracked objects:
 46483 ;;		On entry : 0/0
 46484 ;;		On exit  : 0/0
 46485 ;;		Unchanged: 0/0
 46486 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46491 ;;Total ram usage:        0 bytes
 46492 ;; Hardware stack levels used: 1
 46493 ;; Hardware stack levels required when called: 6
 46494 ;; This function calls:
 46495 ;;		_writeNVM
 46496 ;; This function is called by:
 46497 ;;		_factoryReset
 46498 ;; This function uses a non-reentrant model
 46499 ;;
 46500                           
 46501                           	psect	text134
 46502   0152FA                     __ptext134:
 46503                           	callstack 0
 46504   0152FA                     _mnsFactoryReset:
 46505                           	callstack 117
 46506                           
 46507                           ;../../VLCBlib_PIC/mns.c: 280:     nn.bytes.hi = 0;
 46508                           
 46509                           ;incstack = 0
 46510   0152FA  6A5F               	clrf	(_nn+1)^(0+1280),c
 46511                           
 46512                           ;../../VLCBlib_PIC/mns.c: 281:     nn.bytes.lo = 0;
 46513   0152FC  6A5E               	clrf	_nn^(0+1280),c
 46514                           
 46515                           ;../../VLCBlib_PIC/mns.c: 282:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.hi);
 46516   0152FE  0EFD               	movlw	253
 46517   015300  6E0E               	movwf	writeNVM@index^(0+1280),c
 46518   015302  0E03               	movlw	3
 46519   015304  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 46520   015306  0E00               	movlw	0
 46521   015308  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 46522   01530A  C55F  F511         	movff	_nn+1,writeNVM@value
 46523   01530E  0E00               	movlw	0
 46524   015310  EC71  F0AD         	call	_writeNVM
 46525                           
 46526                           ;../../VLCBlib_PIC/mns.c: 283:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.lo);
 46527   015314  0EFC               	movlw	252
 46528   015316  6E0E               	movwf	writeNVM@index^(0+1280),c
 46529   015318  0E03               	movlw	3
 46530   01531A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 46531   01531C  0E00               	movlw	0
 46532   01531E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 46533   015320  C55E  F511         	movff	_nn,writeNVM@value
 46534   015324  0E00               	movlw	0
 46535   015326  EC71  F0AD         	call	_writeNVM
 46536                           
 46537                           ;../../VLCBlib_PIC/mns.c: 285:     last_mode_state = mode_state = MODE_UNINITIALISED;
 46538   01532A  0105               	movlb	5	; () banked
 46539   01532C  6990               	setf	_mode_state& (0+255),b
 46540   01532E  698F               	setf	_last_mode_state& (0+255),b
 46541                           
 46542                           ;../../VLCBlib_PIC/mns.c: 286:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 46543   015330  0EFB               	movlw	251
 46544   015332  6E0E               	movwf	writeNVM@index^(0+1280),c
 46545   015334  0E03               	movlw	3
 46546   015336  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 46547   015338  0E00               	movlw	0
 46548   01533A  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 46549   01533C  C590  F511         	movff	_mode_state,writeNVM@value
 46550   015340  0E00               	movlw	0
 46551   015342  EC71  F0AD         	call	_writeNVM
 46552                           
 46553                           ;../../VLCBlib_PIC/mns.c: 288:     last_mode_flags = mode_flags = 0;
 46554   015346  0105               	movlb	5	; () banked
 46555   015348  6B9F               	clrf	_mode_flags& (0+255),b
 46556   01534A  6B8E               	clrf	_last_mode_flags& (0+255),b
 46557                           
 46558                           ;../../VLCBlib_PIC/mns.c: 289:     writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 46559   01534C  0EF9               	movlw	249
 46560   01534E  6E0E               	movwf	writeNVM@index^(0+1280),c
 46561   015350  0E03               	movlw	3
 46562   015352  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 46563   015354  0E00               	movlw	0
 46564   015356  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 46565   015358  C59F  F511         	movff	_mode_flags,writeNVM@value
 46566   01535C  0E00               	movlw	0
 46567   01535E  EC71  F0AD         	call	_writeNVM
 46568   015362  0012               	return		;funcret
 46569   015364                     __end_of_mnsFactoryReset:
 46570                           	callstack 0
 46571                           
 46572 ;; *************** function _canFactoryReset *****************
 46573 ;; Defined at:
 46574 ;;		line 208 in file "../../VLCBlib_PIC/can18_can_2.c"
 46575 ;; Parameters:    Size  Location     Type
 46576 ;;		None
 46577 ;; Auto vars:     Size  Location     Type
 46578 ;;		None
 46579 ;; Return value:  Size  Location     Type
 46580 ;;                  1    wreg      void 
 46581 ;; Registers used:
 46582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 46583 ;; Tracked objects:
 46584 ;;		On entry : 0/0
 46585 ;;		On exit  : 0/0
 46586 ;;		Unchanged: 0/0
 46587 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46592 ;;Total ram usage:        0 bytes
 46593 ;; Hardware stack levels used: 1
 46594 ;; Hardware stack levels required when called: 6
 46595 ;; This function calls:
 46596 ;;		_writeNVM
 46597 ;; This function is called by:
 46598 ;;		_factoryReset
 46599 ;; This function uses a non-reentrant model
 46600 ;;
 46601                           
 46602                           	psect	text135
 46603   01650A                     __ptext135:
 46604                           	callstack 0
 46605   01650A                     _canFactoryReset:
 46606                           	callstack 117
 46607                           
 46608                           ;../../VLCBlib_PIC/can18_can_2.c: 209:     canId = 0;
 46609                           
 46610                           ;incstack = 0
 46611   01650A  0105               	movlb	5	; () banked
 46612   01650C  6B95               	clrf	_canId& (0+255),b
 46613                           
 46614                           ; BSR set to: 5
 46615                           ;../../VLCBlib_PIC/can18_can_2.c: 210:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 46616   01650E  0EFE               	movlw	254
 46617   016510  6E0E               	movwf	writeNVM@index^(0+1280),c
 46618   016512  0E03               	movlw	3
 46619   016514  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 46620   016516  0E00               	movlw	0
 46621   016518  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 46622   01651A  C595  F511         	movff	_canId,writeNVM@value
 46623   01651E  0E00               	movlw	0
 46624   016520  EC71  F0AD         	call	_writeNVM
 46625   016524  0012               	return		;funcret
 46626   016526                     __end_of_canFactoryReset:
 46627                           	callstack 0
 46628                           
 46629 ;; *************** function _teachFactoryReset *****************
 46630 ;; Defined at:
 46631 ;;		line 190 in file "../../VLCBlib_PIC/event_teach_simple.c"
 46632 ;; Parameters:    Size  Location     Type
 46633 ;;		None
 46634 ;; Auto vars:     Size  Location     Type
 46635 ;;		None
 46636 ;; Return value:  Size  Location     Type
 46637 ;;                  1    wreg      void 
 46638 ;; Registers used:
 46639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46640 ;; Tracked objects:
 46641 ;;		On entry : 0/0
 46642 ;;		On exit  : 0/0
 46643 ;;		Unchanged: 0/0
 46644 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46649 ;;Total ram usage:        0 bytes
 46650 ;; Hardware stack levels used: 1
 46651 ;; Hardware stack levels required when called: 8
 46652 ;; This function calls:
 46653 ;;		_clearAllEvents
 46654 ;; This function is called by:
 46655 ;;		_factoryReset
 46656 ;; This function uses a non-reentrant model
 46657 ;;
 46658                           
 46659                           	psect	text136
 46660   01663C                     __ptext136:
 46661                           	callstack 0
 46662   01663C                     _teachFactoryReset:
 46663                           	callstack 115
 46664                           
 46665                           ;../../VLCBlib_PIC/event_teach_simple.c: 191:     clearAllEvents();
 46666                           
 46667                           ;incstack = 0
 46668   01663C  ECD6  F0B2         	call	_clearAllEvents	;wreg free
 46669   016640  0012               	return		;funcret
 46670   016642                     __end_of_teachFactoryReset:
 46671                           	callstack 0
 46672                           
 46673 ;; *************** function _APP_nvDefault *****************
 46674 ;; Defined at:
 46675 ;;		line 48 in file "../canpan3Nv.c"
 46676 ;; Parameters:    Size  Location     Type
 46677 ;;  index           1    wreg     unsigned char 
 46678 ;; Auto vars:     Size  Location     Type
 46679 ;;  index           1    0[COMRAM] unsigned char 
 46680 ;; Return value:  Size  Location     Type
 46681 ;;                  1    wreg      unsigned char 
 46682 ;; Registers used:
 46683 ;;		wreg, status,2, status,0
 46684 ;; Tracked objects:
 46685 ;;		On entry : 0/0
 46686 ;;		On exit  : 0/0
 46687 ;;		Unchanged: 0/0
 46688 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46693 ;;Total ram usage:        1 bytes
 46694 ;; Hardware stack levels used: 1
 46695 ;; Hardware stack levels required when called: 1
 46696 ;; This function calls:
 46697 ;;		Nothing
 46698 ;; This function is called by:
 46699 ;;		_nvFactoryReset
 46700 ;; This function uses a non-reentrant model
 46701 ;;
 46702                           
 46703                           	psect	text137
 46704   0160E2                     __ptext137:
 46705                           	callstack 0
 46706   0160E2                     _APP_nvDefault:
 46707                           	callstack 121
 46708                           
 46709                           ;incstack = 0
 46710                           ;APP_nvDefault@index stored from wreg
 46711   0160E2  6E01               	movwf	APP_nvDefault@index^(0+1280),c
 46712                           
 46713                           ;../canpan3Nv.c: 49:     if (index < 67) {
 46714   0160E4  0E43               	movlw	67
 46715   0160E6  6001               	cpfslt	APP_nvDefault@index^(0+1280),c
 46716   0160E8  D003               	goto	u6550
 46717                           
 46718                           ;../canpan3Nv.c: 51:         if (index == 1)
 46719   0160EA  0401               	decf	APP_nvDefault@index^(0+1280),w,c
 46720   0160EC  A4D8               	btfss	status,2,c
 46721   0160EE  D002               	goto	l8841
 46722   0160F0                     u6550:
 46723                           
 46724                           ;../canpan3Nv.c: 52:                 return 0;
 46725   0160F0  0E00               	movlw	0
 46726   0160F2  0012               	return	
 46727   0160F4                     l8841:
 46728                           
 46729                           ;../canpan3Nv.c: 53:         if (index == 2)
 46730   0160F4  0E02               	movlw	2
 46731   0160F6  1801               	xorwf	APP_nvDefault@index^(0+1280),w,c
 46732   0160F8  A4D8               	btfss	status,2,c
 46733   0160FA  D002               	goto	l8847
 46734                           
 46735                           ;../canpan3Nv.c: 54:                 return (62500/2)/1000;
 46736   0160FC  0E1F               	movlw	31
 46737   0160FE  0012               	return	
 46738   016100                     l8847:
 46739                           
 46740                           ;../canpan3Nv.c: 55:         if (index < (3 + (4*8)))
 46741   016100  0E23               	movlw	35
 46742   016102  6001               	cpfslt	APP_nvDefault@index^(0+1280),c
 46743   016104  D002               	goto	l8853
 46744                           
 46745                           ;../canpan3Nv.c: 56:                 return 16;
 46746   016106  0E10               	movlw	16
 46747   016108  0012               	return	
 46748   01610A                     l8853:
 46749                           
 46750                           ;../canpan3Nv.c: 57:         if (index <= ((3 +(8*4)) + (8*4)))
 46751   01610A  0E44               	movlw	68
 46752   01610C  6001               	cpfslt	APP_nvDefault@index^(0+1280),c
 46753   01610E  D7F0               	goto	u6550
 46754   016110  D7EF               	goto	u6550
 46755   016112                     __end_of_APP_nvDefault:
 46756                           	callstack 0
 46757                           
 46758 ;; *************** function _APP_factoryReset *****************
 46759 ;; Defined at:
 46760 ;;		line 148 in file "../main.c"
 46761 ;; Parameters:    Size  Location     Type
 46762 ;;		None
 46763 ;; Auto vars:     Size  Location     Type
 46764 ;;  sw              1   46[COMRAM] unsigned char 
 46765 ;; Return value:  Size  Location     Type
 46766 ;;                  1    wreg      void 
 46767 ;; Registers used:
 46768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46769 ;; Tracked objects:
 46770 ;;		On entry : 0/0
 46771 ;;		On exit  : 0/0
 46772 ;;		Unchanged: 0/0
 46773 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46777 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46778 ;;Total ram usage:        1 bytes
 46779 ;; Hardware stack levels used: 1
 46780 ;; Hardware stack levels required when called: 9
 46781 ;; This function calls:
 46782 ;;		_factoryResetGlobalEvents
 46783 ;;		_flushFlashBlock
 46784 ;;		_writeNVM
 46785 ;; This function is called by:
 46786 ;;		_factoryReset
 46787 ;; This function uses a non-reentrant model
 46788 ;;
 46789                           
 46790                           	psect	text138
 46791   016336                     __ptext138:
 46792                           	callstack 0
 46793   016336                     _APP_factoryReset:
 46794                           	callstack 114
 46795                           
 46796                           ;../main.c: 149:     uint8_t sw;;../main.c: 151:     factoryResetGlobalEvents();
 46797                           
 46798                           ;incstack = 0
 46799   016336  EC21  F0B3         	call	_factoryResetGlobalEvents	;wreg free
 46800                           
 46801                           ;../main.c: 153:     flushFlashBlock();
 46802   01633A  ECCC  F0AB         	call	_flushFlashBlock	;wreg free
 46803                           
 46804                           ;../main.c: 156:     for (sw=0; sw < (8*4); sw++) {
 46805   01633E  6A2F               	clrf	APP_factoryReset@sw^(0+1280),c
 46806   016340                     l8893:
 46807                           
 46808                           ;../main.c: 157:         writeNVM(EEPROM_NVM_TYPE, 0x0000 +sw, 0);
 46809   016340  502F               	movf	APP_factoryReset@sw^(0+1280),w,c
 46810   016342  6E0E               	movwf	writeNVM@index^(0+1280),c
 46811   016344  6A0F               	clrf	(writeNVM@index+1)^(0+1280),c
 46812   016346  6A10               	clrf	(writeNVM@index+2)^(0+1280),c
 46813   016348  0E00               	movlw	0
 46814   01634A  6E11               	movwf	writeNVM@value^(0+1280),c
 46815   01634C  0E00               	movlw	0
 46816   01634E  EC71  F0AD         	call	_writeNVM
 46817                           
 46818                           ;../main.c: 158:     }
 46819   016352  2A2F               	incf	APP_factoryReset@sw^(0+1280),f,c
 46820   016354  0E1F               	movlw	31
 46821   016356  642F               	cpfsgt	APP_factoryReset@sw^(0+1280),c
 46822   016358  D7F3               	goto	l8893
 46823   01635A  0012               	return	
 46824   01635C                     __end_of_APP_factoryReset:
 46825                           	callstack 0
 46826                           
 46827 ;; *************** function _factoryResetGlobalEvents *****************
 46828 ;; Defined at:
 46829 ;;		line 54 in file "../canpan3Events.c"
 46830 ;; Parameters:    Size  Location     Type
 46831 ;;		None
 46832 ;; Auto vars:     Size  Location     Type
 46833 ;;		None
 46834 ;; Return value:  Size  Location     Type
 46835 ;;                  1    wreg      void 
 46836 ;; Registers used:
 46837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46838 ;; Tracked objects:
 46839 ;;		On entry : 0/0
 46840 ;;		On exit  : 0/0
 46841 ;;		Unchanged: 0/0
 46842 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46847 ;;Total ram usage:        0 bytes
 46848 ;; Hardware stack levels used: 1
 46849 ;; Hardware stack levels required when called: 8
 46850 ;; This function calls:
 46851 ;;		_clearAllEvents
 46852 ;; This function is called by:
 46853 ;;		_APP_factoryReset
 46854 ;; This function uses a non-reentrant model
 46855 ;;
 46856                           
 46857                           	psect	text139
 46858   016642                     __ptext139:
 46859                           	callstack 0
 46860   016642                     _factoryResetGlobalEvents:
 46861                           	callstack 114
 46862                           
 46863                           ;../canpan3Events.c: 56:     clearAllEvents();
 46864                           
 46865                           ;incstack = 0
 46866   016642  ECD6  F0B2         	call	_clearAllEvents	;wreg free
 46867   016646  0012               	return		;funcret
 46868   016648                     __end_of_factoryResetGlobalEvents:
 46869                           	callstack 0
 46870                           
 46871 ;; *************** function _APP_testMode *****************
 46872 ;; Defined at:
 46873 ;;		line 168 in file "../main.c"
 46874 ;; Parameters:    Size  Location     Type
 46875 ;;		None
 46876 ;; Auto vars:     Size  Location     Type
 46877 ;;  sw              1   65[COMRAM] unsigned char 
 46878 ;; Return value:  Size  Location     Type
 46879 ;;                  1    wreg      void 
 46880 ;; Registers used:
 46881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46882 ;; Tracked objects:
 46883 ;;		On entry : 0/0
 46884 ;;		On exit  : 0/0
 46885 ;;		Unchanged: 0/0
 46886 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46888 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46890 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46891 ;;Total ram usage:        1 bytes
 46892 ;; Hardware stack levels used: 1
 46893 ;; Hardware stack levels required when called: 9
 46894 ;; This function calls:
 46895 ;;		_addTestEvent
 46896 ;;		_clearAllEvents
 46897 ;; This function is called by:
 46898 ;;		_checkPowerOnPb
 46899 ;; This function uses a non-reentrant model
 46900 ;;
 46901                           
 46902                           	psect	text140
 46903   016596                     __ptext140:
 46904                           	callstack 0
 46905   016596                     _APP_testMode:
 46906                           	callstack 116
 46907                           
 46908                           ;../main.c: 169:     uint8_t sw;;../main.c: 171:     clearAllEvents();
 46909                           
 46910                           ;incstack = 0
 46911   016596  ECD6  F0B2         	call	_clearAllEvents	;wreg free
 46912                           
 46913                           ;../main.c: 173:     for (sw=0; sw<(8*4); sw++) {
 46914   01659A  6A42               	clrf	APP_testMode@sw^(0+1280),c
 46915   01659C                     l11281:
 46916                           
 46917                           ;../main.c: 174:         addTestEvent(sw+1);
 46918   01659C  2842               	incf	APP_testMode@sw^(0+1280),w,c
 46919   01659E  EC8A  F095         	call	_addTestEvent
 46920                           
 46921                           ;../main.c: 175:     }
 46922   0165A2  2A42               	incf	APP_testMode@sw^(0+1280),f,c
 46923   0165A4  0E1F               	movlw	31
 46924   0165A6  6442               	cpfsgt	APP_testMode@sw^(0+1280),c
 46925   0165A8  D7F9               	goto	l11281
 46926   0165AA  0012               	return	
 46927   0165AC                     __end_of_APP_testMode:
 46928                           	callstack 0
 46929                           
 46930 ;; *************** function _clearAllEvents *****************
 46931 ;; Defined at:
 46932 ;;		line 397 in file "../../VLCBlib_PIC/event_teach_simple.c"
 46933 ;; Parameters:    Size  Location     Type
 46934 ;;		None
 46935 ;; Auto vars:     Size  Location     Type
 46936 ;;  tableIndex      1   45[COMRAM] unsigned char 
 46937 ;; Return value:  Size  Location     Type
 46938 ;;                  1    wreg      void 
 46939 ;; Registers used:
 46940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46941 ;; Tracked objects:
 46942 ;;		On entry : 0/0
 46943 ;;		On exit  : 0/0
 46944 ;;		Unchanged: 0/0
 46945 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46949 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46950 ;;Total ram usage:        1 bytes
 46951 ;; Hardware stack levels used: 1
 46952 ;; Hardware stack levels required when called: 7
 46953 ;; This function calls:
 46954 ;;		_rebuildHashtable
 46955 ;;		_removeTableEntry
 46956 ;; This function is called by:
 46957 ;;		_APP_testMode
 46958 ;;		_factoryResetGlobalEvents
 46959 ;;		_teachFactoryReset
 46960 ;;		_doNnclr
 46961 ;; This function uses a non-reentrant model
 46962 ;;
 46963                           
 46964                           	psect	text141
 46965   0165AC                     __ptext141:
 46966                           	callstack 0
 46967   0165AC                     _clearAllEvents:
 46968                           	callstack 116
 46969                           
 46970                           ;../../VLCBlib_PIC/event_teach_simple.c: 398:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 400:     for (tableIndex=0; tableIndex<254; tableIndex++) {
 46971                           
 46972                           ;incstack = 0
 46973   0165AC  6A2E               	clrf	clearAllEvents@tableIndex^(0+1280),c
 46974   0165AE                     l8601:
 46975                           
 46976                           ;../../VLCBlib_PIC/event_teach_simple.c: 401:         removeTableEntry(tableIndex);
 46977   0165AE  502E               	movf	clearAllEvents@tableIndex^(0+1280),w,c
 46978   0165B0  ECB4  F09A         	call	_removeTableEntry
 46979                           
 46980                           ;../../VLCBlib_PIC/event_teach_simple.c: 402:     }
 46981   0165B4  2A2E               	incf	clearAllEvents@tableIndex^(0+1280),f,c
 46982   0165B6  0EFD               	movlw	253
 46983   0165B8  642E               	cpfsgt	clearAllEvents@tableIndex^(0+1280),c
 46984   0165BA  D7F9               	goto	l8601
 46985                           
 46986                           ;../../VLCBlib_PIC/event_teach_simple.c: 404:     rebuildHashtable();
 46987   0165BC  ECC0  F0A0         	call	_rebuildHashtable	;wreg free
 46988   0165C0  0012               	return		;funcret
 46989   0165C2                     __end_of_clearAllEvents:
 46990                           	callstack 0
 46991                           
 46992 ;; *************** function _removeTableEntry *****************
 46993 ;; Defined at:
 46994 ;;		line 718 in file "../../VLCBlib_PIC/event_teach_simple.c"
 46995 ;; Parameters:    Size  Location     Type
 46996 ;;  tableIndex      1    wreg     unsigned char 
 46997 ;; Auto vars:     Size  Location     Type
 46998 ;;  tableIndex      1   44[COMRAM] unsigned char 
 46999 ;;  i               1   43[COMRAM] unsigned char 
 47000 ;; Return value:  Size  Location     Type
 47001 ;;                  1    wreg      unsigned char 
 47002 ;; Registers used:
 47003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47004 ;; Tracked objects:
 47005 ;;		On entry : 0/0
 47006 ;;		On exit  : 0/0
 47007 ;;		Unchanged: 0/0
 47008 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 47009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47011 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47012 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47013 ;;Total ram usage:       10 bytes
 47014 ;; Hardware stack levels used: 1
 47015 ;; Hardware stack levels required when called: 6
 47016 ;; This function calls:
 47017 ;;		_flushFlashBlock
 47018 ;;		_rebuildHashtable
 47019 ;;		_writeNVM
 47020 ;; This function is called by:
 47021 ;;		_clearAllEvents
 47022 ;;		_removeEvent
 47023 ;; This function uses a non-reentrant model
 47024 ;;
 47025                           
 47026                           	psect	text142
 47027   013568                     __ptext142:
 47028                           	callstack 0
 47029   013568                     _removeTableEntry:
 47030                           	callstack 116
 47031                           
 47032                           ;incstack = 0
 47033                           ;removeTableEntry@tableIndex stored from wreg
 47034   013568  6E2D               	movwf	removeTableEntry@tableIndex^(0+1280),c
 47035                           
 47036                           ;../../VLCBlib_PIC/event_teach_simple.c: 719:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 724:     writeNVM(FLASH_NVM_TYPE, 0x1E800 + (sizeof(Event) + 1 + 13)*tableI
      +                          ndex + 0, 0x00);
 47037   01356A  502D               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 47038   01356C  0D12               	mullw	18
 47039   01356E  C4F3 F524          	movff	prodl,??_removeTableEntry
 47040   013572  C4F4 F525          	movff	prodh,??_removeTableEntry+1
 47041   013576  6A26               	clrf	(??_removeTableEntry+2)^(0+1280),c
 47042   013578  0E00               	movlw	0
 47043   01357A  2424               	addwf	??_removeTableEntry^(0+1280),w,c
 47044   01357C  6E0E               	movwf	writeNVM@index^(0+1280),c
 47045   01357E  0EE8               	movlw	232
 47046   013580  2025               	addwfc	(??_removeTableEntry+1)^(0+1280),w,c
 47047   013582  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 47048   013584  0E01               	movlw	1
 47049   013586  2026               	addwfc	(??_removeTableEntry+2)^(0+1280),w,c
 47050   013588  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 47051   01358A  0E00               	movlw	0
 47052   01358C  6E11               	movwf	writeNVM@value^(0+1280),c
 47053   01358E  0E01               	movlw	1
 47054   013590  EC71  F0AD         	call	_writeNVM
 47055                           
 47056                           ;../../VLCBlib_PIC/event_teach_simple.c: 725:     writeNVM(FLASH_NVM_TYPE, 0x1E800 + (si
      +                          zeof(Event) + 1 + 13)*tableIndex + 1, 0x00);
 47057   013594  502D               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 47058   013596  0D12               	mullw	18
 47059   013598  C4F3 F524          	movff	prodl,??_removeTableEntry
 47060   01359C  C4F4 F525          	movff	prodh,??_removeTableEntry+1
 47061   0135A0  6A26               	clrf	(??_removeTableEntry+2)^(0+1280),c
 47062   0135A2  0E01               	movlw	1
 47063   0135A4  2424               	addwf	??_removeTableEntry^(0+1280),w,c
 47064   0135A6  6E0E               	movwf	writeNVM@index^(0+1280),c
 47065   0135A8  0EE8               	movlw	232
 47066   0135AA  2025               	addwfc	(??_removeTableEntry+1)^(0+1280),w,c
 47067   0135AC  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 47068   0135AE  0E01               	movlw	1
 47069   0135B0  2026               	addwfc	(??_removeTableEntry+2)^(0+1280),w,c
 47070   0135B2  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 47071   0135B4  0E00               	movlw	0
 47072   0135B6  6E11               	movwf	writeNVM@value^(0+1280),c
 47073   0135B8  0E01               	movlw	1
 47074   0135BA  EC71  F0AD         	call	_writeNVM
 47075                           
 47076                           ;../../VLCBlib_PIC/event_teach_simple.c: 726:     writeNVM(FLASH_NVM_TYPE, 0x1E800 + (si
      +                          zeof(Event) + 1 + 13)*tableIndex + 2, 0x00);
 47077   0135BE  502D               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 47078   0135C0  0D12               	mullw	18
 47079   0135C2  C4F3 F524          	movff	prodl,??_removeTableEntry
 47080   0135C6  C4F4 F525          	movff	prodh,??_removeTableEntry+1
 47081   0135CA  6A26               	clrf	(??_removeTableEntry+2)^(0+1280),c
 47082   0135CC  0E02               	movlw	2
 47083   0135CE  2424               	addwf	??_removeTableEntry^(0+1280),w,c
 47084   0135D0  6E0E               	movwf	writeNVM@index^(0+1280),c
 47085   0135D2  0EE8               	movlw	232
 47086   0135D4  2025               	addwfc	(??_removeTableEntry+1)^(0+1280),w,c
 47087   0135D6  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 47088   0135D8  0E01               	movlw	1
 47089   0135DA  2026               	addwfc	(??_removeTableEntry+2)^(0+1280),w,c
 47090   0135DC  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 47091   0135DE  0E00               	movlw	0
 47092   0135E0  6E11               	movwf	writeNVM@value^(0+1280),c
 47093   0135E2  0E01               	movlw	1
 47094   0135E4  EC71  F0AD         	call	_writeNVM
 47095                           
 47096                           ;../../VLCBlib_PIC/event_teach_simple.c: 727:     writeNVM(FLASH_NVM_TYPE, 0x1E800 + (si
      +                          zeof(Event) + 1 + 13)*tableIndex + 3, 0x00);
 47097   0135E8  502D               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 47098   0135EA  0D12               	mullw	18
 47099   0135EC  C4F3 F524          	movff	prodl,??_removeTableEntry
 47100   0135F0  C4F4 F525          	movff	prodh,??_removeTableEntry+1
 47101   0135F4  6A26               	clrf	(??_removeTableEntry+2)^(0+1280),c
 47102   0135F6  0E03               	movlw	3
 47103   0135F8  2424               	addwf	??_removeTableEntry^(0+1280),w,c
 47104   0135FA  6E0E               	movwf	writeNVM@index^(0+1280),c
 47105   0135FC  0EE8               	movlw	232
 47106   0135FE  2025               	addwfc	(??_removeTableEntry+1)^(0+1280),w,c
 47107   013600  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 47108   013602  0E01               	movlw	1
 47109   013604  2026               	addwfc	(??_removeTableEntry+2)^(0+1280),w,c
 47110   013606  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 47111   013608  0E00               	movlw	0
 47112   01360A  6E11               	movwf	writeNVM@value^(0+1280),c
 47113   01360C  0E01               	movlw	1
 47114   01360E  EC71  F0AD         	call	_writeNVM
 47115                           
 47116                           ;../../VLCBlib_PIC/event_teach_simple.c: 728:     writeNVM(FLASH_NVM_TYPE, 0x1E800 + (si
      +                          zeof(Event) + 1 + 13)*tableIndex + 4, 0x00);
 47117   013612  502D               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 47118   013614  0D12               	mullw	18
 47119   013616  C4F3 F524          	movff	prodl,??_removeTableEntry
 47120   01361A  C4F4 F525          	movff	prodh,??_removeTableEntry+1
 47121   01361E  6A26               	clrf	(??_removeTableEntry+2)^(0+1280),c
 47122   013620  0E04               	movlw	4
 47123   013622  2424               	addwf	??_removeTableEntry^(0+1280),w,c
 47124   013624  6E0E               	movwf	writeNVM@index^(0+1280),c
 47125   013626  0EE8               	movlw	232
 47126   013628  2025               	addwfc	(??_removeTableEntry+1)^(0+1280),w,c
 47127   01362A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 47128   01362C  0E01               	movlw	1
 47129   01362E  2026               	addwfc	(??_removeTableEntry+2)^(0+1280),w,c
 47130   013630  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 47131   013632  0E00               	movlw	0
 47132   013634  6E11               	movwf	writeNVM@value^(0+1280),c
 47133   013636  0E01               	movlw	1
 47134   013638  EC71  F0AD         	call	_writeNVM
 47135                           
 47136                           ;../../VLCBlib_PIC/event_teach_simple.c: 730:     for (i=0; i<13; i++) {
 47137   01363C  6A2C               	clrf	removeTableEntry@i^(0+1280),c
 47138   01363E                     l8537:
 47139                           
 47140                           ;../../VLCBlib_PIC/event_teach_simple.c: 731:         writeNVM(FLASH_NVM_TYPE, 0x1E800 +
      +                           (sizeof(Event) + 1 + 13)*tableIndex + (5 + i), 0x00);
 47141   01363E  502C               	movf	removeTableEntry@i^(0+1280),w,c
 47142   013640  6E24               	movwf	??_removeTableEntry^(0+1280),c
 47143   013642  6A25               	clrf	(??_removeTableEntry+1)^(0+1280),c
 47144   013644  0E05               	movlw	5
 47145   013646  2624               	addwf	??_removeTableEntry^(0+1280),f,c
 47146   013648  0E00               	movlw	0
 47147   01364A  2225               	addwfc	(??_removeTableEntry+1)^(0+1280),f,c
 47148   01364C  502D               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 47149   01364E  0D12               	mullw	18
 47150   013650  C4F3 F526          	movff	prodl,??_removeTableEntry+2
 47151   013654  C4F4 F527          	movff	prodh,??_removeTableEntry+3
 47152   013658  6A28               	clrf	(??_removeTableEntry+4)^(0+1280),c
 47153   01365A  5024               	movf	??_removeTableEntry^(0+1280),w,c
 47154   01365C  2426               	addwf	(??_removeTableEntry+2)^(0+1280),w,c
 47155   01365E  6E29               	movwf	(??_removeTableEntry+5)^(0+1280),c
 47156   013660  5025               	movf	(??_removeTableEntry+1)^(0+1280),w,c
 47157   013662  2027               	addwfc	(??_removeTableEntry+3)^(0+1280),w,c
 47158   013664  6E2A               	movwf	(??_removeTableEntry+6)^(0+1280),c
 47159   013666  0E00               	movlw	0
 47160   013668  BE25               	btfsc	(??_removeTableEntry+1)^(0+1280),7,c
 47161   01366A  0EFF               	movlw	255
 47162   01366C  2028               	addwfc	(??_removeTableEntry+4)^(0+1280),w,c
 47163   01366E  6E2B               	movwf	(??_removeTableEntry+7)^(0+1280),c
 47164   013670  0E00               	movlw	0
 47165   013672  2429               	addwf	(??_removeTableEntry+5)^(0+1280),w,c
 47166   013674  6E0E               	movwf	writeNVM@index^(0+1280),c
 47167   013676  0EE8               	movlw	232
 47168   013678  202A               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 47169   01367A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 47170   01367C  0E01               	movlw	1
 47171   01367E  202B               	addwfc	(??_removeTableEntry+7)^(0+1280),w,c
 47172   013680  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 47173   013682  0E00               	movlw	0
 47174   013684  6E11               	movwf	writeNVM@value^(0+1280),c
 47175   013686  0E01               	movlw	1
 47176   013688  EC71  F0AD         	call	_writeNVM
 47177                           
 47178                           ;../../VLCBlib_PIC/event_teach_simple.c: 732:     }
 47179   01368C  2A2C               	incf	removeTableEntry@i^(0+1280),f,c
 47180   01368E  0E0C               	movlw	12
 47181   013690  642C               	cpfsgt	removeTableEntry@i^(0+1280),c
 47182   013692  D7D5               	goto	l8537
 47183                           
 47184                           ;../../VLCBlib_PIC/event_teach_simple.c: 733:     flushFlashBlock();
 47185   013694  ECCC  F0AB         	call	_flushFlashBlock	;wreg free
 47186                           
 47187                           ;../../VLCBlib_PIC/event_teach_simple.c: 735:     rebuildHashtable();
 47188   013698  ECC0  F0A0         	call	_rebuildHashtable	;wreg free
 47189                           
 47190                           ;../../VLCBlib_PIC/event_teach_simple.c: 737:     return 0;
 47191   01369C  0E00               	movlw	0
 47192   01369E  0012               	return		;funcret
 47193   0136A0                     __end_of_removeTableEntry:
 47194                           	callstack 0
 47195                           
 47196 ;; *************** function _addTestEvent *****************
 47197 ;; Defined at:
 47198 ;;		line 89 in file "../canpan3Events.c"
 47199 ;; Parameters:    Size  Location     Type
 47200 ;;  sw              1    wreg     unsigned char 
 47201 ;; Auto vars:     Size  Location     Type
 47202 ;;  sw              1   64[COMRAM] unsigned char 
 47203 ;; Return value:  Size  Location     Type
 47204 ;;                  1    wreg      unsigned char 
 47205 ;; Registers used:
 47206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47207 ;; Tracked objects:
 47208 ;;		On entry : 0/0
 47209 ;;		On exit  : 0/0
 47210 ;;		Unchanged: 0/0
 47211 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 47212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47213 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47214 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47215 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47216 ;;Total ram usage:        3 bytes
 47217 ;; Hardware stack levels used: 1
 47218 ;; Hardware stack levels required when called: 8
 47219 ;; This function calls:
 47220 ;;		_addEvent
 47221 ;; This function is called by:
 47222 ;;		_APP_testMode
 47223 ;; This function uses a non-reentrant model
 47224 ;;
 47225                           
 47226                           	psect	text143
 47227   012B14                     __ptext143:
 47228                           	callstack 0
 47229   012B14                     _addTestEvent:
 47230                           	callstack 116
 47231                           
 47232                           ;incstack = 0
 47233                           ;addTestEvent@sw stored from wreg
 47234   012B14  6E41               	movwf	addTestEvent@sw^(0+1280),c
 47235                           
 47236                           ;../canpan3Events.c: 90:     addEvent(nn.word, sw, 0, 1, TRUE);
 47237   012B16  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 47238   012B1A  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 47239   012B1E  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 47240   012B22  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 47241   012B24  0E00               	movlw	0
 47242   012B26  6E2F               	movwf	addEvent@evNum^(0+1280),c
 47243   012B28  0E01               	movlw	1
 47244   012B2A  6E30               	movwf	addEvent@evVal^(0+1280),c
 47245   012B2C  0E01               	movlw	1
 47246   012B2E  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 47247   012B30  ECA1  F094         	call	_addEvent	;wreg free
 47248                           
 47249                           ;../canpan3Events.c: 91:     addEvent(nn.word, sw, 1, sw, TRUE);
 47250   012B34  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 47251   012B38  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 47252   012B3C  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 47253   012B40  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 47254   012B42  0E01               	movlw	1
 47255   012B44  6E2F               	movwf	addEvent@evNum^(0+1280),c
 47256   012B46  C541  F530         	movff	addTestEvent@sw,addEvent@evVal
 47257   012B4A  0E01               	movlw	1
 47258   012B4C  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 47259   012B4E  ECA1  F094         	call	_addEvent	;wreg free
 47260                           
 47261                           ;../canpan3Events.c: 92:     addEvent(nn.word, sw, 2, 8 | 0b00010000, TRUE);
 47262   012B52  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 47263   012B56  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 47264   012B5A  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 47265   012B5E  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 47266   012B60  0E02               	movlw	2
 47267   012B62  6E2F               	movwf	addEvent@evNum^(0+1280),c
 47268   012B64  0E18               	movlw	24
 47269   012B66  6E30               	movwf	addEvent@evVal^(0+1280),c
 47270   012B68  0E01               	movlw	1
 47271   012B6A  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 47272   012B6C  ECA1  F094         	call	_addEvent	;wreg free
 47273                           
 47274                           ;../canpan3Events.c: 94:     addEvent(nn.word, sw, 4, ((uint16_t)1<<(sw-1))&0xFF, TRUE);
 47275   012B70  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 47276   012B74  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 47277   012B78  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 47278   012B7C  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 47279   012B7E  0E04               	movlw	4
 47280   012B80  6E2F               	movwf	addEvent@evNum^(0+1280),c
 47281   012B82  C541  F53F         	movff	addTestEvent@sw,??_addTestEvent
 47282   012B86  0EFF               	movlw	-1
 47283   012B88  263F               	addwf	??_addTestEvent^(0+1280),f,c
 47284   012B8A  0E01               	movlw	1
 47285   012B8C  6E40               	movwf	(??_addTestEvent+1)^(0+1280),c
 47286   012B8E  2A3F               	incf	??_addTestEvent^(0+1280),f,c
 47287   012B90  D002               	goto	u7594
 47288   012B92                     u7595:
 47289   012B92  90D8               	bcf	status,0,c
 47290   012B94  3640               	rlcf	(??_addTestEvent+1)^(0+1280),f,c
 47291   012B96                     u7594:
 47292   012B96  2E3F               	decfsz	??_addTestEvent^(0+1280),f,c
 47293   012B98  D7FC               	goto	u7595
 47294   012B9A  5040               	movf	(??_addTestEvent+1)^(0+1280),w,c
 47295   012B9C  6E30               	movwf	addEvent@evVal^(0+1280),c
 47296   012B9E  0E01               	movlw	1
 47297   012BA0  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 47298   012BA2  ECA1  F094         	call	_addEvent	;wreg free
 47299                           
 47300                           ;../canpan3Events.c: 95:     addEvent(nn.word, sw, 5, ((uint16_t)1<<(sw-9))&0xFF, TRUE);
 47301   012BA6  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 47302   012BAA  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 47303   012BAE  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 47304   012BB2  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 47305   012BB4  0E05               	movlw	5
 47306   012BB6  6E2F               	movwf	addEvent@evNum^(0+1280),c
 47307   012BB8  C541  F53F         	movff	addTestEvent@sw,??_addTestEvent
 47308   012BBC  0EF7               	movlw	-9
 47309   012BBE  263F               	addwf	??_addTestEvent^(0+1280),f,c
 47310   012BC0  0E01               	movlw	1
 47311   012BC2  6E40               	movwf	(??_addTestEvent+1)^(0+1280),c
 47312   012BC4  2A3F               	incf	??_addTestEvent^(0+1280),f,c
 47313   012BC6  D002               	goto	u7604
 47314   012BC8                     u7605:
 47315   012BC8  90D8               	bcf	status,0,c
 47316   012BCA  3640               	rlcf	(??_addTestEvent+1)^(0+1280),f,c
 47317   012BCC                     u7604:
 47318   012BCC  2E3F               	decfsz	??_addTestEvent^(0+1280),f,c
 47319   012BCE  D7FC               	goto	u7605
 47320   012BD0  5040               	movf	(??_addTestEvent+1)^(0+1280),w,c
 47321   012BD2  6E30               	movwf	addEvent@evVal^(0+1280),c
 47322   012BD4  0E01               	movlw	1
 47323   012BD6  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 47324   012BD8  ECA1  F094         	call	_addEvent	;wreg free
 47325                           
 47326                           ;../canpan3Events.c: 96:     addEvent(nn.word, sw, 6, ((uint16_t)1<<(sw-17))&0xFF, TRUE)
      +                          ;
 47327   012BDC  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 47328   012BE0  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 47329   012BE4  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 47330   012BE8  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 47331   012BEA  0E06               	movlw	6
 47332   012BEC  6E2F               	movwf	addEvent@evNum^(0+1280),c
 47333   012BEE  C541  F53F         	movff	addTestEvent@sw,??_addTestEvent
 47334   012BF2  0EEF               	movlw	-17
 47335   012BF4  263F               	addwf	??_addTestEvent^(0+1280),f,c
 47336   012BF6  0E01               	movlw	1
 47337   012BF8  6E40               	movwf	(??_addTestEvent+1)^(0+1280),c
 47338   012BFA  2A3F               	incf	??_addTestEvent^(0+1280),f,c
 47339   012BFC  D002               	goto	u7614
 47340   012BFE                     u7615:
 47341   012BFE  90D8               	bcf	status,0,c
 47342   012C00  3640               	rlcf	(??_addTestEvent+1)^(0+1280),f,c
 47343   012C02                     u7614:
 47344   012C02  2E3F               	decfsz	??_addTestEvent^(0+1280),f,c
 47345   012C04  D7FC               	goto	u7615
 47346   012C06  5040               	movf	(??_addTestEvent+1)^(0+1280),w,c
 47347   012C08  6E30               	movwf	addEvent@evVal^(0+1280),c
 47348   012C0A  0E01               	movlw	1
 47349   012C0C  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 47350   012C0E  ECA1  F094         	call	_addEvent	;wreg free
 47351                           
 47352                           ;../canpan3Events.c: 97:     addEvent(nn.word, sw, 7, ((uint16_t)1<<(sw-25))&0xFF, TRUE)
      +                          ;
 47353   012C12  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 47354   012C16  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 47355   012C1A  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 47356   012C1E  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 47357   012C20  0E07               	movlw	7
 47358   012C22  6E2F               	movwf	addEvent@evNum^(0+1280),c
 47359   012C24  C541  F53F         	movff	addTestEvent@sw,??_addTestEvent
 47360   012C28  0EE7               	movlw	-25
 47361   012C2A  263F               	addwf	??_addTestEvent^(0+1280),f,c
 47362   012C2C  0E01               	movlw	1
 47363   012C2E  6E40               	movwf	(??_addTestEvent+1)^(0+1280),c
 47364   012C30  2A3F               	incf	??_addTestEvent^(0+1280),f,c
 47365   012C32  D002               	goto	u7624
 47366   012C34                     u7625:
 47367   012C34  90D8               	bcf	status,0,c
 47368   012C36  3640               	rlcf	(??_addTestEvent+1)^(0+1280),f,c
 47369   012C38                     u7624:
 47370   012C38  2E3F               	decfsz	??_addTestEvent^(0+1280),f,c
 47371   012C3A  D7FC               	goto	u7625
 47372   012C3C  5040               	movf	(??_addTestEvent+1)^(0+1280),w,c
 47373   012C3E  6E30               	movwf	addEvent@evVal^(0+1280),c
 47374   012C40  0E01               	movlw	1
 47375   012C42  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 47376   012C44  ECA1  F094         	call	_addEvent	;wreg free
 47377                           
 47378                           ;../canpan3Events.c: 99:     addEvent(nn.word, sw, 8, 0, TRUE);
 47379   012C48  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 47380   012C4C  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 47381   012C50  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 47382   012C54  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 47383   012C56  0E08               	movlw	8
 47384   012C58  6E2F               	movwf	addEvent@evNum^(0+1280),c
 47385   012C5A  0E00               	movlw	0
 47386   012C5C  6E30               	movwf	addEvent@evVal^(0+1280),c
 47387   012C5E  0E01               	movlw	1
 47388   012C60  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 47389   012C62  ECA1  F094         	call	_addEvent	;wreg free
 47390                           
 47391                           ;../canpan3Events.c: 100:     addEvent(nn.word, sw, 9, 0, TRUE);
 47392   012C66  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 47393   012C6A  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 47394   012C6E  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 47395   012C72  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 47396   012C74  0E09               	movlw	9
 47397   012C76  6E2F               	movwf	addEvent@evNum^(0+1280),c
 47398   012C78  0E00               	movlw	0
 47399   012C7A  6E30               	movwf	addEvent@evVal^(0+1280),c
 47400   012C7C  0E01               	movlw	1
 47401   012C7E  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 47402   012C80  ECA1  F094         	call	_addEvent	;wreg free
 47403                           
 47404                           ;../canpan3Events.c: 101:     addEvent(nn.word, sw, 10, 0, TRUE);
 47405   012C84  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 47406   012C88  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 47407   012C8C  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 47408   012C90  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 47409   012C92  0E0A               	movlw	10
 47410   012C94  6E2F               	movwf	addEvent@evNum^(0+1280),c
 47411   012C96  0E00               	movlw	0
 47412   012C98  6E30               	movwf	addEvent@evVal^(0+1280),c
 47413   012C9A  0E01               	movlw	1
 47414   012C9C  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 47415   012C9E  ECA1  F094         	call	_addEvent	;wreg free
 47416                           
 47417                           ;../canpan3Events.c: 102:     addEvent(nn.word, sw, 11, 0, TRUE);
 47418   012CA2  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 47419   012CA6  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 47420   012CAA  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 47421   012CAE  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 47422   012CB0  0E0B               	movlw	11
 47423   012CB2  6E2F               	movwf	addEvent@evNum^(0+1280),c
 47424   012CB4  0E00               	movlw	0
 47425   012CB6  6E30               	movwf	addEvent@evVal^(0+1280),c
 47426   012CB8  0E01               	movlw	1
 47427   012CBA  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 47428   012CBC  ECA1  F094         	call	_addEvent	;wreg free
 47429                           
 47430                           ;../canpan3Events.c: 103:     return addEvent(nn.word, sw, 12, 0xFF, TRUE);;	Return valu
      +                          e of _addTestEvent is never used
 47431   012CC0  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 47432   012CC4  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 47433   012CC8  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 47434   012CCC  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 47435   012CCE  0E0C               	movlw	12
 47436   012CD0  6E2F               	movwf	addEvent@evNum^(0+1280),c
 47437   012CD2  0EFF               	movlw	255
 47438   012CD4  6E30               	movwf	addEvent@evVal^(0+1280),c
 47439   012CD6  0E01               	movlw	1
 47440   012CD8  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 47441   012CDA  ECA1  F094         	call	_addEvent	;wreg free
 47442   012CDE  0012               	return		;funcret
 47443   012CE0                     __end_of_addTestEvent:
 47444                           	callstack 0
 47445                           
 47446 ;; *************** function _addEvent *****************
 47447 ;; Defined at:
 47448 ;;		line 754 in file "../../VLCBlib_PIC/event_teach_simple.c"
 47449 ;; Parameters:    Size  Location     Type
 47450 ;;  nodeNumber      2   42[COMRAM] unsigned short 
 47451 ;;  eventNumber     2   44[COMRAM] unsigned short 
 47452 ;;  evNum           1   46[COMRAM] unsigned char 
 47453 ;;  evVal           1   47[COMRAM] unsigned char 
 47454 ;;  forceOwnNN      1   48[COMRAM] enum E23307
 47455 ;; Auto vars:     Size  Location     Type
 47456 ;;  e               1   60[COMRAM] unsigned char 
 47457 ;;  en              2   58[COMRAM] unsigned short 
 47458 ;;  tableIndex      1   61[COMRAM] unsigned char 
 47459 ;; Return value:  Size  Location     Type
 47460 ;;                  1    wreg      unsigned char 
 47461 ;; Registers used:
 47462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47463 ;; Tracked objects:
 47464 ;;		On entry : 0/0
 47465 ;;		On exit  : 0/0
 47466 ;;		Unchanged: 0/0
 47467 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 47468 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47469 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47470 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47471 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47472 ;;Total ram usage:       20 bytes
 47473 ;; Hardware stack levels used: 1
 47474 ;; Hardware stack levels required when called: 7
 47475 ;; This function calls:
 47476 ;;		_findEvent
 47477 ;;		_flushFlashBlock
 47478 ;;		_getEN
 47479 ;;		_rebuildHashtable
 47480 ;;		_writeEv
 47481 ;;		_writeNVM
 47482 ;; This function is called by:
 47483 ;;		_addTestEvent
 47484 ;;		_APP_addEvent
 47485 ;; This function uses a non-reentrant model
 47486 ;;
 47487                           
 47488                           	psect	text144
 47489   012942                     __ptext144:
 47490                           	callstack 0
 47491   012942                     _addEvent:
 47492                           	callstack 115
 47493                           
 47494                           ;../../VLCBlib_PIC/event_teach_simple.c: 755:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 758:     tableIndex = findEvent(nodeNumber, eventNumber);
 47495                           
 47496                           ;incstack = 0
 47497   012942  C52B  F51E         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 47498   012946  C52C  F51F         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 47499   01294A  C52D  F520         	movff	addEvent@eventNumber,findEvent@eventNumber
 47500   01294E  C52E  F521         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 47501   012952  EC4F  F0A4         	call	_findEvent	;wreg free
 47502   012956  6E3E               	movwf	addEvent@tableIndex^(0+1280),c
 47503                           
 47504                           ;../../VLCBlib_PIC/event_teach_simple.c: 759:     if (tableIndex == 0xff) {
 47505   012958  283E               	incf	addEvent@tableIndex^(0+1280),w,c
 47506   01295A  A4D8               	btfss	status,2,c
 47507   01295C  D0C7               	goto	l8737
 47508                           
 47509                           ;../../VLCBlib_PIC/event_teach_simple.c: 760:         errno = CMDERR_TOO_MANY_EVENTS;
 47510   01295E  0E04               	movlw	4
 47511   012960  0105               	movlb	5	; () banked
 47512   012962  6F9E               	movwf	_errno& (0+255),b
 47513                           
 47514                           ; BSR set to: 5
 47515                           ;../../VLCBlib_PIC/event_teach_simple.c: 762:         for (tableIndex=0; tableIndex<254;
      +                           tableIndex++) {
 47516   012964  6A3E               	clrf	addEvent@tableIndex^(0+1280),c
 47517   012966                     l8699:
 47518   012966  0EFD               	movlw	253
 47519   012968  643E               	cpfsgt	addEvent@tableIndex^(0+1280),c
 47520   01296A  D001               	goto	l8703
 47521   01296C  D0B9               	goto	l8731
 47522   01296E                     l8703:
 47523                           
 47524                           ;../../VLCBlib_PIC/event_teach_simple.c: 763:             uint16_t en = getEN(tableIndex
      +                          );
 47525   01296E  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 47526   012970  EC70  F0A8         	call	_getEN
 47527   012974  C50D  F53B         	movff	?_getEN,addEvent@en
 47528   012978  C50E  F53C         	movff	?_getEN+1,addEvent@en+1
 47529                           
 47530                           ;../../VLCBlib_PIC/event_teach_simple.c: 764:             if (en == 0) {
 47531   01297C  503B               	movf	addEvent@en^(0+1280),w,c
 47532   01297E  103C               	iorwf	(addEvent@en+1)^(0+1280),w,c
 47533   012980  A4D8               	btfss	status,2,c
 47534   012982  D0AC               	goto	l8727
 47535                           
 47536                           ;../../VLCBlib_PIC/event_teach_simple.c: 765:                 uint8_t e;;../../VLCBlib_P
      +                          IC/event_teach_simple.c: 767:                 writeNVM(FLASH_NVM_TYPE, 0x1E800 + (sizeof
      +                          (Event) + 1 + 13)*tableIndex+1, nodeNumber&0xFF);
 47537   012984  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 47538   012986  0D12               	mullw	18
 47539   012988  C4F3 F532          	movff	prodl,??_addEvent
 47540   01298C  C4F4 F533          	movff	prodh,??_addEvent+1
 47541   012990  6A34               	clrf	(??_addEvent+2)^(0+1280),c
 47542   012992  0E01               	movlw	1
 47543   012994  2432               	addwf	??_addEvent^(0+1280),w,c
 47544   012996  6E0E               	movwf	writeNVM@index^(0+1280),c
 47545   012998  0EE8               	movlw	232
 47546   01299A  2033               	addwfc	(??_addEvent+1)^(0+1280),w,c
 47547   01299C  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 47548   01299E  0E01               	movlw	1
 47549   0129A0  2034               	addwfc	(??_addEvent+2)^(0+1280),w,c
 47550   0129A2  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 47551   0129A4  C52B  F511         	movff	addEvent@nodeNumber,writeNVM@value
 47552   0129A8  0E01               	movlw	1
 47553   0129AA  EC71  F0AD         	call	_writeNVM
 47554                           
 47555                           ;../../VLCBlib_PIC/event_teach_simple.c: 768:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+0, nodeNumber>>8);
 47556   0129AE  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 47557   0129B0  0D12               	mullw	18
 47558   0129B2  C4F3 F532          	movff	prodl,??_addEvent
 47559   0129B6  C4F4 F533          	movff	prodh,??_addEvent+1
 47560   0129BA  6A34               	clrf	(??_addEvent+2)^(0+1280),c
 47561   0129BC  0E00               	movlw	0
 47562   0129BE  2432               	addwf	??_addEvent^(0+1280),w,c
 47563   0129C0  6E0E               	movwf	writeNVM@index^(0+1280),c
 47564   0129C2  0EE8               	movlw	232
 47565   0129C4  2033               	addwfc	(??_addEvent+1)^(0+1280),w,c
 47566   0129C6  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 47567   0129C8  0E01               	movlw	1
 47568   0129CA  2034               	addwfc	(??_addEvent+2)^(0+1280),w,c
 47569   0129CC  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 47570   0129CE  502C               	movf	(addEvent@nodeNumber+1)^(0+1280),w,c
 47571   0129D0  6E11               	movwf	writeNVM@value^(0+1280),c
 47572   0129D2  0E01               	movlw	1
 47573   0129D4  EC71  F0AD         	call	_writeNVM
 47574                           
 47575                           ;../../VLCBlib_PIC/event_teach_simple.c: 769:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+3, eventNumber&0xFF);
 47576   0129D8  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 47577   0129DA  0D12               	mullw	18
 47578   0129DC  C4F3 F532          	movff	prodl,??_addEvent
 47579   0129E0  C4F4 F533          	movff	prodh,??_addEvent+1
 47580   0129E4  6A34               	clrf	(??_addEvent+2)^(0+1280),c
 47581   0129E6  0E03               	movlw	3
 47582   0129E8  2432               	addwf	??_addEvent^(0+1280),w,c
 47583   0129EA  6E0E               	movwf	writeNVM@index^(0+1280),c
 47584   0129EC  0EE8               	movlw	232
 47585   0129EE  2033               	addwfc	(??_addEvent+1)^(0+1280),w,c
 47586   0129F0  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 47587   0129F2  0E01               	movlw	1
 47588   0129F4  2034               	addwfc	(??_addEvent+2)^(0+1280),w,c
 47589   0129F6  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 47590   0129F8  C52D  F511         	movff	addEvent@eventNumber,writeNVM@value
 47591   0129FC  0E01               	movlw	1
 47592   0129FE  EC71  F0AD         	call	_writeNVM
 47593                           
 47594                           ;../../VLCBlib_PIC/event_teach_simple.c: 770:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+2, eventNumber>>8);
 47595   012A02  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 47596   012A04  0D12               	mullw	18
 47597   012A06  C4F3 F532          	movff	prodl,??_addEvent
 47598   012A0A  C4F4 F533          	movff	prodh,??_addEvent+1
 47599   012A0E  6A34               	clrf	(??_addEvent+2)^(0+1280),c
 47600   012A10  0E02               	movlw	2
 47601   012A12  2432               	addwf	??_addEvent^(0+1280),w,c
 47602   012A14  6E0E               	movwf	writeNVM@index^(0+1280),c
 47603   012A16  0EE8               	movlw	232
 47604   012A18  2033               	addwfc	(??_addEvent+1)^(0+1280),w,c
 47605   012A1A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 47606   012A1C  0E01               	movlw	1
 47607   012A1E  2034               	addwfc	(??_addEvent+2)^(0+1280),w,c
 47608   012A20  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 47609   012A22  502E               	movf	(addEvent@eventNumber+1)^(0+1280),w,c
 47610   012A24  6E11               	movwf	writeNVM@value^(0+1280),c
 47611   012A26  0E01               	movlw	1
 47612   012A28  EC71  F0AD         	call	_writeNVM
 47613                           
 47614                           ;../../VLCBlib_PIC/event_teach_simple.c: 771:                 if (forceOwnNN) {
 47615   012A2C  5031               	movf	addEvent@forceOwnNN^(0+1280),w,c
 47616   012A2E  B4D8               	btfsc	status,2,c
 47617   012A30  D016               	goto	l8713
 47618                           
 47619                           ;../../VLCBlib_PIC/event_teach_simple.c: 772:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+4, 1);
 47620   012A32  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 47621   012A34  0D12               	mullw	18
 47622   012A36  C4F3 F532          	movff	prodl,??_addEvent
 47623   012A3A  C4F4 F533          	movff	prodh,??_addEvent+1
 47624   012A3E  6A34               	clrf	(??_addEvent+2)^(0+1280),c
 47625   012A40  0E04               	movlw	4
 47626   012A42  2432               	addwf	??_addEvent^(0+1280),w,c
 47627   012A44  6E0E               	movwf	writeNVM@index^(0+1280),c
 47628   012A46  0EE8               	movlw	232
 47629   012A48  2033               	addwfc	(??_addEvent+1)^(0+1280),w,c
 47630   012A4A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 47631   012A4C  0E01               	movlw	1
 47632   012A4E  2034               	addwfc	(??_addEvent+2)^(0+1280),w,c
 47633   012A50  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 47634   012A52  0E01               	movlw	1
 47635   012A54  6E11               	movwf	writeNVM@value^(0+1280),c
 47636   012A56  0E01               	movlw	1
 47637   012A58  EC71  F0AD         	call	_writeNVM
 47638                           
 47639                           ;../../VLCBlib_PIC/event_teach_simple.c: 773:                 } else {
 47640   012A5C  D015               	goto	l8715
 47641   012A5E                     l8713:
 47642                           
 47643                           ;../../VLCBlib_PIC/event_teach_simple.c: 774:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+4, 0);
 47644   012A5E  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 47645   012A60  0D12               	mullw	18
 47646   012A62  C4F3 F532          	movff	prodl,??_addEvent
 47647   012A66  C4F4 F533          	movff	prodh,??_addEvent+1
 47648   012A6A  6A34               	clrf	(??_addEvent+2)^(0+1280),c
 47649   012A6C  0E04               	movlw	4
 47650   012A6E  2432               	addwf	??_addEvent^(0+1280),w,c
 47651   012A70  6E0E               	movwf	writeNVM@index^(0+1280),c
 47652   012A72  0EE8               	movlw	232
 47653   012A74  2033               	addwfc	(??_addEvent+1)^(0+1280),w,c
 47654   012A76  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 47655   012A78  0E01               	movlw	1
 47656   012A7A  2034               	addwfc	(??_addEvent+2)^(0+1280),w,c
 47657   012A7C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 47658   012A7E  0E00               	movlw	0
 47659   012A80  6E11               	movwf	writeNVM@value^(0+1280),c
 47660   012A82  0E01               	movlw	1
 47661   012A84  EC71  F0AD         	call	_writeNVM
 47662   012A88                     l8715:
 47663                           
 47664                           ;../../VLCBlib_PIC/event_teach_simple.c: 776:                 for (e = 0; e < 13; e++) {
 47665   012A88  6A3D               	clrf	addEvent@e^(0+1280),c
 47666   012A8A                     l8721:
 47667                           
 47668                           ;../../VLCBlib_PIC/event_teach_simple.c: 777:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+5 +e, 0);
 47669   012A8A  503D               	movf	addEvent@e^(0+1280),w,c
 47670   012A8C  6E32               	movwf	??_addEvent^(0+1280),c
 47671   012A8E  6A33               	clrf	(??_addEvent+1)^(0+1280),c
 47672   012A90  6A34               	clrf	(??_addEvent+2)^(0+1280),c
 47673   012A92  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 47674   012A94  0D12               	mullw	18
 47675   012A96  C4F3 F535          	movff	prodl,??_addEvent+3
 47676   012A9A  C4F4 F536          	movff	prodh,??_addEvent+4
 47677   012A9E  6A37               	clrf	(??_addEvent+5)^(0+1280),c
 47678   012AA0  5032               	movf	??_addEvent^(0+1280),w,c
 47679   012AA2  2435               	addwf	(??_addEvent+3)^(0+1280),w,c
 47680   012AA4  6E38               	movwf	(??_addEvent+6)^(0+1280),c
 47681   012AA6  5033               	movf	(??_addEvent+1)^(0+1280),w,c
 47682   012AA8  2036               	addwfc	(??_addEvent+4)^(0+1280),w,c
 47683   012AAA  6E39               	movwf	(??_addEvent+7)^(0+1280),c
 47684   012AAC  5034               	movf	(??_addEvent+2)^(0+1280),w,c
 47685   012AAE  2037               	addwfc	(??_addEvent+5)^(0+1280),w,c
 47686   012AB0  6E3A               	movwf	(??_addEvent+8)^(0+1280),c
 47687   012AB2  0E05               	movlw	5
 47688   012AB4  2438               	addwf	(??_addEvent+6)^(0+1280),w,c
 47689   012AB6  6E0E               	movwf	writeNVM@index^(0+1280),c
 47690   012AB8  0EE8               	movlw	232
 47691   012ABA  2039               	addwfc	(??_addEvent+7)^(0+1280),w,c
 47692   012ABC  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 47693   012ABE  0E01               	movlw	1
 47694   012AC0  203A               	addwfc	(??_addEvent+8)^(0+1280),w,c
 47695   012AC2  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 47696   012AC4  0E00               	movlw	0
 47697   012AC6  6E11               	movwf	writeNVM@value^(0+1280),c
 47698   012AC8  0E01               	movlw	1
 47699   012ACA  EC71  F0AD         	call	_writeNVM
 47700                           
 47701                           ;../../VLCBlib_PIC/event_teach_simple.c: 778:                 }
 47702   012ACE  2A3D               	incf	addEvent@e^(0+1280),f,c
 47703   012AD0  0E0C               	movlw	12
 47704   012AD2  643D               	cpfsgt	addEvent@e^(0+1280),c
 47705   012AD4  D7DA               	goto	l8721
 47706                           
 47707                           ;../../VLCBlib_PIC/event_teach_simple.c: 779:                 errno = 0;
 47708   012AD6  0105               	movlb	5	; () banked
 47709   012AD8  6B9E               	clrf	_errno& (0+255),b
 47710                           
 47711                           ;../../VLCBlib_PIC/event_teach_simple.c: 780:                 break;
 47712   012ADA  D002               	goto	l8731
 47713   012ADC                     l8727:
 47714                           
 47715                           ;../../VLCBlib_PIC/event_teach_simple.c: 782:         }
 47716   012ADC  2A3E               	incf	addEvent@tableIndex^(0+1280),f,c
 47717   012ADE  D743               	goto	l8699
 47718   012AE0                     l8731:
 47719                           
 47720                           ;../../VLCBlib_PIC/event_teach_simple.c: 783:         if (errno) {
 47721   012AE0  0105               	movlb	5	; () banked
 47722   012AE2  519E               	movf	_errno& (0+255),w,b
 47723   012AE4  B4D8               	btfsc	status,2,c
 47724   012AE6  D002               	goto	l8737
 47725   012AE8                     u6400:
 47726                           
 47727                           ; BSR set to: 5
 47728                           ;../../VLCBlib_PIC/event_teach_simple.c: 784:             return 0xff;
 47729   012AE8  0EFF               	movlw	255
 47730   012AEA  0012               	return	
 47731   012AEC                     l8737:
 47732                           
 47733                           ;../../VLCBlib_PIC/event_teach_simple.c: 788:     if (writeEv(tableIndex, evNum, evVal))
      +                           {
 47734   012AEC  C52F  F515         	movff	addEvent@evNum,writeEv@evNum
 47735   012AF0  C530  F516         	movff	addEvent@evVal,writeEv@evVal
 47736   012AF4  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 47737   012AF6  EC13  F0AB         	call	_writeEv
 47738   012AFA  0900               	iorlw	0
 47739   012AFC  B4D8               	btfsc	status,2,c
 47740   012AFE  D004               	goto	l8745
 47741                           
 47742                           ;../../VLCBlib_PIC/event_teach_simple.c: 790:         errno = CMDERR_INV_EV_IDX;
 47743   012B00  0E06               	movlw	6
 47744   012B02  0105               	movlb	5	; () banked
 47745   012B04  6F9E               	movwf	_errno& (0+255),b
 47746   012B06  D7F0               	goto	u6400
 47747   012B08                     l8745:
 47748                           
 47749                           ;../../VLCBlib_PIC/event_teach_simple.c: 794:     flushFlashBlock();
 47750   012B08  ECCC  F0AB         	call	_flushFlashBlock	;wreg free
 47751                           
 47752                           ;../../VLCBlib_PIC/event_teach_simple.c: 796:     rebuildHashtable();
 47753   012B0C  ECC0  F0A0         	call	_rebuildHashtable	;wreg free
 47754                           
 47755                           ;../../VLCBlib_PIC/event_teach_simple.c: 798:     return tableIndex;
 47756   012B10  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 47757   012B12  0012               	return		;funcret
 47758   012B14                     __end_of_addEvent:
 47759                           	callstack 0
 47760                           
 47761 ;; *************** function _writeEv *****************
 47762 ;; Defined at:
 47763 ;;		line 845 in file "../../VLCBlib_PIC/event_teach_simple.c"
 47764 ;; Parameters:    Size  Location     Type
 47765 ;;  tableIndex      1    wreg     unsigned char 
 47766 ;;  evNum           1   20[COMRAM] unsigned char 
 47767 ;;  evVal           1   21[COMRAM] unsigned char 
 47768 ;; Auto vars:     Size  Location     Type
 47769 ;;  tableIndex      1   31[COMRAM] unsigned char 
 47770 ;; Return value:  Size  Location     Type
 47771 ;;                  1    wreg      unsigned char 
 47772 ;; Registers used:
 47773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47774 ;; Tracked objects:
 47775 ;;		On entry : 0/0
 47776 ;;		On exit  : 0/0
 47777 ;;		Unchanged: 0/0
 47778 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 47779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47781 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47782 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47783 ;;Total ram usage:       12 bytes
 47784 ;; Hardware stack levels used: 1
 47785 ;; Hardware stack levels required when called: 6
 47786 ;; This function calls:
 47787 ;;		_writeNVM
 47788 ;; This function is called by:
 47789 ;;		_APP_addEvent
 47790 ;;		_addEvent
 47791 ;; This function uses a non-reentrant model
 47792 ;;
 47793                           
 47794                           	psect	text145
 47795   015626                     __ptext145:
 47796                           	callstack 0
 47797   015626                     _writeEv:
 47798                           	callstack 116
 47799                           
 47800                           ;incstack = 0
 47801                           ;writeEv@tableIndex stored from wreg
 47802   015626  6E20               	movwf	writeEv@tableIndex^(0+1280),c
 47803                           
 47804                           ;../../VLCBlib_PIC/event_teach_simple.c: 846:     if (evNum >= 13) {
 47805   015628  0E0C               	movlw	12
 47806   01562A  6415               	cpfsgt	writeEv@evNum^(0+1280),c
 47807   01562C  D002               	goto	l8649
 47808                           
 47809                           ;../../VLCBlib_PIC/event_teach_simple.c: 847:         return CMDERR_INV_EV_IDX;
 47810   01562E  0E06               	movlw	6
 47811   015630  0012               	return	
 47812   015632                     l8649:
 47813                           
 47814                           ;../../VLCBlib_PIC/event_teach_simple.c: 849:     if (tableIndex >= 254) {
 47815   015632  0EFD               	movlw	253
 47816   015634  6420               	cpfsgt	writeEv@tableIndex^(0+1280),c
 47817   015636  D002               	goto	l8655
 47818                           
 47819                           ;../../VLCBlib_PIC/event_teach_simple.c: 850:         return CMDERR_INV_EN_IDX;
 47820   015638  0E08               	movlw	8
 47821   01563A  0012               	return	
 47822   01563C                     l8655:
 47823                           
 47824                           ;../../VLCBlib_PIC/event_teach_simple.c: 854:     writeNVM(FLASH_NVM_TYPE, 0x1E800 + (si
      +                          zeof(Event) + 1 + 13)*tableIndex+5 +evNum, evVal);
 47825   01563C  5015               	movf	writeEv@evNum^(0+1280),w,c
 47826   01563E  6E17               	movwf	??_writeEv^(0+1280),c
 47827   015640  6A18               	clrf	(??_writeEv+1)^(0+1280),c
 47828   015642  6A19               	clrf	(??_writeEv+2)^(0+1280),c
 47829   015644  5020               	movf	writeEv@tableIndex^(0+1280),w,c
 47830   015646  0D12               	mullw	18
 47831   015648  C4F3 F51A          	movff	prodl,??_writeEv+3
 47832   01564C  C4F4 F51B          	movff	prodh,??_writeEv+4
 47833   015650  6A1C               	clrf	(??_writeEv+5)^(0+1280),c
 47834   015652  5017               	movf	??_writeEv^(0+1280),w,c
 47835   015654  241A               	addwf	(??_writeEv+3)^(0+1280),w,c
 47836   015656  6E1D               	movwf	(??_writeEv+6)^(0+1280),c
 47837   015658  5018               	movf	(??_writeEv+1)^(0+1280),w,c
 47838   01565A  201B               	addwfc	(??_writeEv+4)^(0+1280),w,c
 47839   01565C  6E1E               	movwf	(??_writeEv+7)^(0+1280),c
 47840   01565E  5019               	movf	(??_writeEv+2)^(0+1280),w,c
 47841   015660  201C               	addwfc	(??_writeEv+5)^(0+1280),w,c
 47842   015662  6E1F               	movwf	(??_writeEv+8)^(0+1280),c
 47843   015664  0E05               	movlw	5
 47844   015666  241D               	addwf	(??_writeEv+6)^(0+1280),w,c
 47845   015668  6E0E               	movwf	writeNVM@index^(0+1280),c
 47846   01566A  0EE8               	movlw	232
 47847   01566C  201E               	addwfc	(??_writeEv+7)^(0+1280),w,c
 47848   01566E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 47849   015670  0E01               	movlw	1
 47850   015672  201F               	addwfc	(??_writeEv+8)^(0+1280),w,c
 47851   015674  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 47852   015676  C516  F511         	movff	writeEv@evVal,writeNVM@value
 47853   01567A  0E01               	movlw	1
 47854   01567C  EC71  F0AD         	call	_writeNVM
 47855                           
 47856                           ;../../VLCBlib_PIC/event_teach_simple.c: 855:     return 0;
 47857   015680  0E00               	movlw	0
 47858   015682  0012               	return		;funcret
 47859   015684                     __end_of_writeEv:
 47860                           	callstack 0
 47861                           
 47862 ;; *************** function _writeNVM *****************
 47863 ;; Defined at:
 47864 ;;		line 553 in file "../../VLCBlib_PIC/nvm.c"
 47865 ;; Parameters:    Size  Location     Type
 47866 ;;  type            1    wreg     enum E23276
 47867 ;;  index           3   13[COMRAM] unsigned um
 47868 ;;  value           1   16[COMRAM] unsigned char 
 47869 ;; Auto vars:     Size  Location     Type
 47870 ;;  type            1   19[COMRAM] enum E23276
 47871 ;; Return value:  Size  Location     Type
 47872 ;;                  1    wreg      unsigned char 
 47873 ;; Registers used:
 47874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 47875 ;; Tracked objects:
 47876 ;;		On entry : 0/0
 47877 ;;		On exit  : 0/0
 47878 ;;		Unchanged: 0/0
 47879 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 47880 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47882 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47883 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47884 ;;Total ram usage:        7 bytes
 47885 ;; Hardware stack levels used: 1
 47886 ;; Hardware stack levels required when called: 5
 47887 ;; This function calls:
 47888 ;;		_EEPROM_Write
 47889 ;;		_FLASH_Write
 47890 ;; This function is called by:
 47891 ;;		_APP_factoryReset
 47892 ;;		_APP_addEvent
 47893 ;;		_bootProcessMessage
 47894 ;;		_canFactoryReset
 47895 ;;		_setNewCanId
 47896 ;;		_removeTableEntry
 47897 ;;		_addEvent
 47898 ;;		_writeEv
 47899 ;;		_mnsFactoryReset
 47900 ;;		_mnsProcessMessage
 47901 ;;		_mnsPoll
 47902 ;;		_nvFactoryReset
 47903 ;;		_setNV
 47904 ;;		_factoryReset
 47905 ;;		_saveNV
 47906 ;; This function uses a non-reentrant model
 47907 ;;
 47908                           
 47909                           	psect	text146
 47910   015AE2                     __ptext146:
 47911                           	callstack 0
 47912   015AE2                     _writeNVM:
 47913                           	callstack 116
 47914                           
 47915                           ;incstack = 0
 47916                           ;writeNVM@type stored from wreg
 47917   015AE2  6E14               	movwf	writeNVM@type^(0+1280),c
 47918                           
 47919                           ;../../VLCBlib_PIC/nvm.c: 554:     switch(type) {
 47920   015AE4  D016               	goto	l8275
 47921   015AE6                     l8265:
 47922                           
 47923                           ;../../VLCBlib_PIC/nvm.c: 556:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 47924   015AE6  C50E  F509         	movff	writeNVM@index,EEPROM_Write@index
 47925   015AEA  C50F  F50A         	movff	writeNVM@index+1,EEPROM_Write@index+1
 47926   015AEE  C510  F50B         	movff	writeNVM@index+2,EEPROM_Write@index+2
 47927   015AF2  C511  F50C         	movff	writeNVM@value,EEPROM_Write@value
 47928   015AF6  EC98  F0AD         	call	_EEPROM_Write	;wreg free
 47929   015AFA  0012               	return	
 47930   015AFC                     l8269:
 47931                           
 47932                           ;../../VLCBlib_PIC/nvm.c: 558:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 47933   015AFC  C50E  F506         	movff	writeNVM@index,FLASH_Write@index
 47934   015B00  C50F  F507         	movff	writeNVM@index+1,FLASH_Write@index+1
 47935   015B04  C510  F508         	movff	writeNVM@index+2,FLASH_Write@index+2
 47936   015B08  C511  F509         	movff	writeNVM@value,FLASH_Write@value
 47937   015B0C  ECB5  F09E         	call	_FLASH_Write	;wreg free
 47938   015B10  0012               	return	
 47939   015B12                     l8275:
 47940   015B12  5014               	movf	writeNVM@type^(0+1280),w,c
 47941   015B14  6E12               	movwf	??_writeNVM^(0+1280),c
 47942   015B16  6A13               	clrf	(??_writeNVM+1)^(0+1280),c
 47943                           
 47944                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 47945                           ; Switch size 1, requested type "simple"
 47946                           ; Number of cases is 1, Range of values is 0 to 0
 47947                           ; switch strategies available:
 47948                           ; Name         Instructions Cycles
 47949                           ; simple_byte            4     3 (average)
 47950                           ;	Chosen strategy is simple_byte
 47951   015B18  5013               	movf	(??_writeNVM+1)^(0+1280),w,c
 47952   015B1A  0A00               	xorlw	0	; case 0
 47953   015B1C  A4D8               	btfss	status,2,c
 47954   015B1E  0012               	return	
 47955                           
 47956                           ; Switch size 1, requested type "simple"
 47957                           ; Number of cases is 2, Range of values is 0 to 1
 47958                           ; switch strategies available:
 47959                           ; Name         Instructions Cycles
 47960                           ; simple_byte            7     4 (average)
 47961                           ;	Chosen strategy is simple_byte
 47962   015B20  5012               	movf	??_writeNVM^(0+1280),w,c
 47963   015B22  0A00               	xorlw	0	; case 0
 47964   015B24  B4D8               	btfsc	status,2,c
 47965   015B26  D7DF               	goto	l8265
 47966   015B28  0A01               	xorlw	1	; case 1
 47967   015B2A  A4D8               	btfss	status,2,c
 47968   015B2C  0012               	return	
 47969   015B2E  D7E6               	goto	l8269
 47970   015B30                     __end_of_writeNVM:
 47971                           	callstack 0
 47972                           
 47973 ;; *************** function _FLASH_Write *****************
 47974 ;; Defined at:
 47975 ;;		line 507 in file "../../VLCBlib_PIC/nvm.c"
 47976 ;; Parameters:    Size  Location     Type
 47977 ;;  index           3    5[COMRAM] unsigned um
 47978 ;;  value           1    8[COMRAM] unsigned char 
 47979 ;; Auto vars:     Size  Location     Type
 47980 ;;  oldValue        1    0        unsigned char 
 47981 ;; Return value:  Size  Location     Type
 47982 ;;                  1    wreg      unsigned char 
 47983 ;; Registers used:
 47984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 47985 ;; Tracked objects:
 47986 ;;		On entry : 0/0
 47987 ;;		On exit  : 0/0
 47988 ;;		Unchanged: 0/0
 47989 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 47990 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47992 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47993 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47994 ;;Total ram usage:        8 bytes
 47995 ;; Hardware stack levels used: 1
 47996 ;; Hardware stack levels required when called: 4
 47997 ;; This function calls:
 47998 ;;		_eraseFlashBlock
 47999 ;;		_flushFlashBlock
 48000 ;;		_loadFlashBlock
 48001 ;; This function is called by:
 48002 ;;		_writeNVM
 48003 ;; This function uses a non-reentrant model
 48004 ;;
 48005                           
 48006                           	psect	text147
 48007   013D6A                     __ptext147:
 48008                           	callstack 0
 48009   013D6A                     _FLASH_Write:
 48010                           	callstack 116
 48011                           
 48012                           ;../../VLCBlib_PIC/nvm.c: 508:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 523:     i
      +                          f ((index&(~((flash_address_t)(256U)-1))) != flashBlock) {
 48013                           
 48014                           ;incstack = 0
 48015   013D6A  0E00               	movlw	0
 48016   013D6C  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 48017   013D6E  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 48018   013D70  0EFF               	movlw	255
 48019   013D72  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 48020   013D74  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 48021   013D76  0EFF               	movlw	255
 48022   013D78  1408               	andwf	(FLASH_Write@index+2)^(0+1280),w,c
 48023   013D7A  6E0C               	movwf	(??_FLASH_Write+2)^(0+1280),c
 48024   013D7C  0105               	movlb	5	; () banked
 48025   013D7E  5177               	movf	_flashBlock& (0+255),w,b
 48026   013D80  180A               	xorwf	??_FLASH_Write^(0+1280),w,c
 48027   013D82  E107               	bnz	u5790
 48028   013D84  5178               	movf	(_flashBlock+1)& (0+255),w,b
 48029   013D86  180B               	xorwf	(??_FLASH_Write+1)^(0+1280),w,c
 48030   013D88  E104               	bnz	u5790
 48031   013D8A  5179               	movf	(_flashBlock+2)& (0+255),w,b
 48032   013D8C  180C               	xorwf	(??_FLASH_Write+2)^(0+1280),w,c
 48033   013D8E  B4D8               	btfsc	status,2,c
 48034   013D90  D019               	goto	l8251
 48035   013D92                     u5790:
 48036                           
 48037                           ; BSR set to: 5
 48038                           ;../../VLCBlib_PIC/nvm.c: 524:         if (flashBlock != 0) {
 48039   013D92  5177               	movf	_flashBlock& (0+255),w,b
 48040   013D94  1178               	iorwf	(_flashBlock+1)& (0+255),w,b
 48041   013D96  1179               	iorwf	(_flashBlock+2)& (0+255),w,b
 48042   013D98  B4D8               	btfsc	status,2,c
 48043   013D9A  D008               	goto	l8247
 48044                           
 48045                           ; BSR set to: 5
 48046                           ;../../VLCBlib_PIC/nvm.c: 526:             if (flashFlags.eraseNeeded) {
 48047   013D9C  A38A               	btfss	_flashFlags& (0+255),1,b
 48048   013D9E  D004               	goto	l1946
 48049                           
 48050                           ; BSR set to: 5
 48051                           ;../../VLCBlib_PIC/nvm.c: 527:                 eraseFlashBlock();
 48052   013DA0  EC71  F0AB         	call	_eraseFlashBlock	;wreg free
 48053                           
 48054                           ;../../VLCBlib_PIC/nvm.c: 528:                 flashFlags.eraseNeeded = 0;
 48055   013DA4  0105               	movlb	5	; () banked
 48056   013DA6  938A               	bcf	_flashFlags& (0+255),1,b
 48057   013DA8                     l1946:
 48058                           
 48059                           ; BSR set to: 5
 48060                           ;../../VLCBlib_PIC/nvm.c: 531:             flushFlashBlock();
 48061   013DA8  ECCC  F0AB         	call	_flushFlashBlock	;wreg free
 48062   013DAC                     l8247:
 48063                           
 48064                           ;../../VLCBlib_PIC/nvm.c: 535:         flashBlock = (index&(~((flash_address_t)(256U)-1)
      +                          ));
 48065   013DAC  0E00               	movlw	0
 48066   013DAE  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 48067   013DB0  0105               	movlb	5	; () banked
 48068   013DB2  6F77               	movwf	_flashBlock& (0+255),b
 48069   013DB4  0EFF               	movlw	255
 48070   013DB6  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 48071   013DB8  6F78               	movwf	(_flashBlock+1)& (0+255),b
 48072   013DBA  0EFF               	movlw	255
 48073   013DBC  1408               	andwf	(FLASH_Write@index+2)^(0+1280),w,c
 48074   013DBE  6F79               	movwf	(_flashBlock+2)& (0+255),b
 48075                           
 48076                           ; BSR set to: 5
 48077                           ;../../VLCBlib_PIC/nvm.c: 536:         loadFlashBlock();
 48078   013DC0  ECB0  F0AE         	call	_loadFlashBlock	;wreg free
 48079   013DC4                     l8251:
 48080                           
 48081                           ;../../VLCBlib_PIC/nvm.c: 538:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&((256U)-1))])?1:0;
 48082   013DC4  0EFF               	movlw	255
 48083   013DC6  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 48084   013DC8  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 48085   013DCA  0E00               	movlw	0
 48086   013DCC  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 48087   013DCE  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 48088   013DD0  0E00               	movlw	0
 48089   013DD2  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 48090   013DD4  6ED9               	movwf	fsr2l,c
 48091   013DD6  0E37               	movlw	55
 48092   013DD8  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 48093   013DDA  6EDA               	movwf	fsr2h,c
 48094   013DDC  50DF               	movf	indf2,w,c
 48095   013DDE  0AFF               	xorlw	255
 48096   013DE0  1409               	andwf	FLASH_Write@value^(0+1280),w,c
 48097   013DE2  0900               	iorlw	0
 48098   013DE4  B4D8               	btfsc	status,2,c
 48099   013DE6  D003               	goto	u5820
 48100   013DE8  6A0C               	clrf	(??_FLASH_Write+2)^(0+1280),c
 48101   013DEA  2A0C               	incf	(??_FLASH_Write+2)^(0+1280),f,c
 48102   013DEC  D001               	goto	u5838
 48103   013DEE                     u5820:
 48104   013DEE  6A0C               	clrf	(??_FLASH_Write+2)^(0+1280),c
 48105   013DF0                     u5838:
 48106   013DF0  0105               	movlb	5	; () banked
 48107   013DF2  318A               	rrcf	_flashFlags& (0+255),w,b
 48108   013DF4  0B01               	andlw	1
 48109   013DF6  6E0D               	movwf	(??_FLASH_Write+3)^(0+1280),c
 48110   013DF8  500C               	movf	(??_FLASH_Write+2)^(0+1280),w,c
 48111   013DFA  120D               	iorwf	(??_FLASH_Write+3)^(0+1280),f,c
 48112   013DFC  360D               	rlcf	(??_FLASH_Write+3)^(0+1280),f,c
 48113   013DFE  518A               	movf	_flashFlags& (0+255),w,b
 48114   013E00  180D               	xorwf	(??_FLASH_Write+3)^(0+1280),w,c
 48115   013E02  0BFD               	andlw	-3
 48116   013E04  180D               	xorwf	(??_FLASH_Write+3)^(0+1280),w,c
 48117   013E06  6F8A               	movwf	_flashFlags& (0+255),b
 48118                           
 48119                           ; BSR set to: 5
 48120                           ;../../VLCBlib_PIC/nvm.c: 539:     if (flashBuffer[(index&((256U)-1))] != value) {
 48121   013E08  0EFF               	movlw	255
 48122   013E0A  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 48123   013E0C  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 48124   013E0E  0E00               	movlw	0
 48125   013E10  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 48126   013E12  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 48127   013E14  0E00               	movlw	0
 48128   013E16  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 48129   013E18  6ED9               	movwf	fsr2l,c
 48130   013E1A  0E37               	movlw	55
 48131   013E1C  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 48132   013E1E  6EDA               	movwf	fsr2h,c
 48133   013E20  5009               	movf	FLASH_Write@value^(0+1280),w,c
 48134   013E22  18DE               	xorwf	postinc2,w,c
 48135   013E24  B4D8               	btfsc	status,2,c
 48136   013E26  D00F               	goto	l8259
 48137                           
 48138                           ; BSR set to: 5
 48139                           ;../../VLCBlib_PIC/nvm.c: 540:         flashFlags.writeNeeded = 1;
 48140   013E28  818A               	bsf	_flashFlags& (0+255),0,b
 48141                           
 48142                           ; BSR set to: 5
 48143                           ;../../VLCBlib_PIC/nvm.c: 541:         flashBuffer[(index&((256U)-1))] = value;
 48144   013E2A  0EFF               	movlw	255
 48145   013E2C  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 48146   013E2E  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 48147   013E30  0E00               	movlw	0
 48148   013E32  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 48149   013E34  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 48150   013E36  0E00               	movlw	0
 48151   013E38  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 48152   013E3A  6ED9               	movwf	fsr2l,c
 48153   013E3C  0E37               	movlw	55
 48154   013E3E  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 48155   013E40  6EDA               	movwf	fsr2h,c
 48156   013E42  C509  F4DF         	movff	FLASH_Write@value,indf2
 48157   013E46                     l8259:
 48158                           
 48159                           ; BSR set to: 5
 48160                           ;../../VLCBlib_PIC/nvm.c: 543:     return GRSP_OK;
 48161   013E46  0E00               	movlw	0
 48162                           
 48163                           ; BSR set to: 5
 48164   013E48  0012               	return		;funcret
 48165   013E4A                     __end_of_FLASH_Write:
 48166                           	callstack 0
 48167                           
 48168 ;; *************** function _loadFlashBlock *****************
 48169 ;; Defined at:
 48170 ;;		line 469 in file "../../VLCBlib_PIC/nvm.c"
 48171 ;; Parameters:    Size  Location     Type
 48172 ;;		None
 48173 ;; Auto vars:     Size  Location     Type
 48174 ;;		None
 48175 ;; Return value:  Size  Location     Type
 48176 ;;                  1    wreg      void 
 48177 ;; Registers used:
 48178 ;;		wreg, status,2
 48179 ;; Tracked objects:
 48180 ;;		On entry : 0/0
 48181 ;;		On exit  : 0/0
 48182 ;;		Unchanged: 0/0
 48183 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48186 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48187 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48188 ;;Total ram usage:        3 bytes
 48189 ;; Hardware stack levels used: 1
 48190 ;; Hardware stack levels required when called: 1
 48191 ;; This function calls:
 48192 ;;		Nothing
 48193 ;; This function is called by:
 48194 ;;		_FLASH_Write
 48195 ;; This function uses a non-reentrant model
 48196 ;;
 48197                           
 48198                           	psect	text148
 48199   015D60                     __ptext148:
 48200                           	callstack 0
 48201   015D60                     _loadFlashBlock:
 48202                           	callstack 118
 48203                           
 48204                           ;../../VLCBlib_PIC/nvm.c: 484:     while (NVMCON0bits.GO)
 48205                           
 48206                           ;../../VLCBlib_PIC/nvm.c: 485:         ;
 48207                           
 48208                           ; BSR set to: 5
 48209                           ;incstack = 0
 48210   015D60  0100               	movlb	0	; () banked
 48211   015D62  B140               	btfsc	64,0,b	;volatile
 48212   015D64  D7FD               	goto	__ptext148
 48213                           
 48214                           ; BSR set to: 0
 48215                           ;../../VLCBlib_PIC/nvm.c: 487:     NVMADRU = (uint8_t) (flashBlock >> 16);
 48216   015D66  C579  F045         	movff	_flashBlock+2,69	;volatile
 48217                           
 48218                           ; BSR set to: 0
 48219                           ;../../VLCBlib_PIC/nvm.c: 488:     NVMADRH = (uint8_t) (flashBlock >> 8);
 48220   015D6A  C577  F501         	movff	_flashBlock,??_loadFlashBlock
 48221   015D6E  C578  F502         	movff	_flashBlock+1,??_loadFlashBlock+1
 48222   015D72  C579  F503         	movff	_flashBlock+2,??_loadFlashBlock+2
 48223   015D76  C502  F501         	movff	??_loadFlashBlock+1,??_loadFlashBlock
 48224   015D7A  C503  F502         	movff	??_loadFlashBlock+2,??_loadFlashBlock+1
 48225   015D7E  6A03               	clrf	(??_loadFlashBlock+2)^(0+1280),c
 48226   015D80  5001               	movf	??_loadFlashBlock^(0+1280),w,c
 48227   015D82  6F44               	movwf	68,b	;volatile
 48228                           
 48229                           ; BSR set to: 0
 48230                           ;../../VLCBlib_PIC/nvm.c: 489:     NVMADRL = (uint8_t) flashBlock;
 48231   015D84  C577  F043         	movff	_flashBlock,67	;volatile
 48232                           
 48233                           ;../../VLCBlib_PIC/nvm.c: 490:     NVMCON1bits.NVMCMD = 0x02;
 48234   015D88  5141               	movf	65,w,b	;volsfr
 48235   015D8A  0BF8               	andlw	-8
 48236   015D8C  0902               	iorlw	2
 48237   015D8E  6F41               	movwf	65,b	;volsfr
 48238                           
 48239                           ; BSR set to: 0
 48240                           ;../../VLCBlib_PIC/nvm.c: 491:     NVMCON0bits.GO = 1;
 48241   015D90  8140               	bsf	64,0,b	;volatile
 48242   015D92                     l1938:
 48243                           
 48244                           ; BSR set to: 0
 48245                           ;../../VLCBlib_PIC/nvm.c: 492:     while (NVMCON0bits.GO)
 48246   015D92  B140               	btfsc	64,0,b	;volatile
 48247   015D94  D7FE               	goto	l1938
 48248                           
 48249                           ; BSR set to: 0
 48250                           ;../../VLCBlib_PIC/nvm.c: 494:     NVMCON1bits.NVMCMD = 0x07;
 48251   015D96  0E07               	movlw	7
 48252   015D98  1341               	iorwf	65,f,b	;volsfr
 48253                           
 48254                           ; BSR set to: 0
 48255                           ;../../VLCBlib_PIC/nvm.c: 496:     flashFlags.asByte = 0;
 48256   015D9A  0105               	movlb	5	; () banked
 48257   015D9C  6B8A               	clrf	_flashFlags& (0+255),b
 48258                           
 48259                           ; BSR set to: 5
 48260   015D9E  0012               	return		;funcret
 48261   015DA0                     __end_of_loadFlashBlock:
 48262                           	callstack 0
 48263                           
 48264 ;; *************** function _flushFlashBlock *****************
 48265 ;; Defined at:
 48266 ;;		line 395 in file "../../VLCBlib_PIC/nvm.c"
 48267 ;; Parameters:    Size  Location     Type
 48268 ;;		None
 48269 ;; Auto vars:     Size  Location     Type
 48270 ;;  interruptEna    1    4[COMRAM] unsigned char 
 48271 ;; Return value:  Size  Location     Type
 48272 ;;                  1    wreg      void 
 48273 ;; Registers used:
 48274 ;;		wreg, status,2, cstack
 48275 ;; Tracked objects:
 48276 ;;		On entry : 0/0
 48277 ;;		On exit  : 0/0
 48278 ;;		Unchanged: 0/0
 48279 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48281 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48283 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48284 ;;Total ram usage:        1 bytes
 48285 ;; Hardware stack levels used: 1
 48286 ;; Hardware stack levels required when called: 3
 48287 ;; This function calls:
 48288 ;;		_APP_isSuitableTimeToWriteFlash
 48289 ;;		_eraseFlashBlock
 48290 ;; This function is called by:
 48291 ;;		_APP_factoryReset
 48292 ;;		_removeTableEntry
 48293 ;;		_addEvent
 48294 ;;		_FLASH_Write
 48295 ;;		_poll
 48296 ;; This function uses a non-reentrant model
 48297 ;;
 48298                           
 48299                           	psect	text149
 48300   015798                     __ptext149:
 48301                           	callstack 0
 48302   015798                     _flushFlashBlock:
 48303                           	callstack 116
 48304                           
 48305                           ;../../VLCBlib_PIC/nvm.c: 396:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 40
      +                          4:     if (! flashFlags.writeNeeded) return;
 48306                           
 48307                           ; BSR set to: 5
 48308                           ;incstack = 0
 48309   015798  0105               	movlb	5	; () banked
 48310   01579A  A18A               	btfss	_flashFlags& (0+255),0,b
 48311   01579C  0012               	return	
 48312   01579E                     l8075:
 48313                           
 48314                           ;../../VLCBlib_PIC/nvm.c: 407:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 48315   01579E  EC28  F0B3         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 48316   0157A2  0900               	iorlw	0
 48317   0157A4  B4D8               	btfsc	status,2,c
 48318   0157A6  D7FB               	goto	l8075
 48319                           
 48320                           ;../../VLCBlib_PIC/nvm.c: 410:     if (flashFlags.eraseNeeded) {
 48321   0157A8  0105               	movlb	5	; () banked
 48322   0157AA  B38A               	btfsc	_flashFlags& (0+255),1,b
 48323                           
 48324                           ; BSR set to: 5
 48325                           ;../../VLCBlib_PIC/nvm.c: 411:         eraseFlashBlock();
 48326   0157AC  EC71  F0AB         	call	_eraseFlashBlock	;wreg free
 48327                           
 48328                           ;../../VLCBlib_PIC/nvm.c: 414:     interruptEnabled = (INTCON0bits.GIE);
 48329   0157B0  0E00               	movlw	0
 48330   0157B2  BED6               	btfsc	214,7,c	;volatile
 48331   0157B4  0E01               	movlw	1
 48332   0157B6  6E05               	movwf	flushFlashBlock@interruptEnabled^(0+1280),c
 48333                           
 48334                           ;../../VLCBlib_PIC/nvm.c: 415:     {INTCON0bits.GIE = 0;};
 48335   0157B8  9ED6               	bcf	214,7,c	;volatile
 48336   0157BA                     l1926:
 48337                           
 48338                           ;../../VLCBlib_PIC/nvm.c: 441:     while (NVMCON0bits.GO)
 48339   0157BA  0100               	movlb	0	; () banked
 48340   0157BC  B140               	btfsc	64,0,b	;volatile
 48341   0157BE  D7FD               	goto	l1926
 48342                           
 48343                           ; BSR set to: 0
 48344                           ;../../VLCBlib_PIC/nvm.c: 447:     NVMADR = flashBlock;
 48345   0157C0  C577  F043         	movff	_flashBlock,67	;volatile
 48346   0157C4  C578  F044         	movff	_flashBlock+1,68	;volatile
 48347   0157C8  C579  F045         	movff	_flashBlock+2,69	;volatile
 48348                           
 48349                           ; BSR set to: 0
 48350                           ;../../VLCBlib_PIC/nvm.c: 449:     NVMCON1bits.NVMCMD = 0x05;
 48351   0157CC  5141               	movf	65,w,b	;volsfr
 48352   0157CE  0BF8               	andlw	-8
 48353   0157D0  0905               	iorlw	5
 48354   0157D2  6F41               	movwf	65,b	;volsfr
 48355                           
 48356                           ;../../VLCBlib_PIC/nvm.c: 451:     NVMLOCK = 0x55;
 48357   0157D4  0E55               	movlw	85
 48358   0157D6  6F42               	movwf	66,b	;volatile
 48359                           
 48360                           ;../../VLCBlib_PIC/nvm.c: 452:     NVMLOCK = 0xAA;
 48361   0157D8  0EAA               	movlw	170
 48362   0157DA  6F42               	movwf	66,b	;volatile
 48363                           
 48364                           ; BSR set to: 0
 48365                           ;../../VLCBlib_PIC/nvm.c: 453:     NVMCON0bits.GO = 1;
 48366   0157DC  8140               	bsf	64,0,b	;volatile
 48367   0157DE                     l1929:
 48368                           
 48369                           ; BSR set to: 0
 48370                           ;../../VLCBlib_PIC/nvm.c: 454:     while (NVMCON0bits.GO)
 48371   0157DE  B140               	btfsc	64,0,b	;volatile
 48372   0157E0  D7FE               	goto	l1929
 48373                           
 48374                           ; BSR set to: 0
 48375                           ;../../VLCBlib_PIC/nvm.c: 457:     NVMCON1bits.NVMCMD = 0x07;
 48376   0157E2  0E07               	movlw	7
 48377   0157E4  1341               	iorwf	65,f,b	;volsfr
 48378                           
 48379                           ;../../VLCBlib_PIC/nvm.c: 460:     if (interruptEnabled) {
 48380   0157E6  5005               	movf	flushFlashBlock@interruptEnabled^(0+1280),w,c
 48381   0157E8  A4D8               	btfss	status,2,c
 48382                           
 48383                           ; BSR set to: 0
 48384                           ;../../VLCBlib_PIC/nvm.c: 461:         {INTCON0bits.GIE = 1;};
 48385   0157EA  8ED6               	bsf	214,7,c	;volatile
 48386                           
 48387                           ; BSR set to: 0
 48388                           ;../../VLCBlib_PIC/nvm.c: 463:     flashFlags.asByte = 0;
 48389                           
 48390                           ;../../VLCBlib_PIC/nvm.c: 462:     }
 48391   0157EC  0105               	movlb	5	; () banked
 48392   0157EE  6B8A               	clrf	_flashFlags& (0+255),b
 48393                           
 48394                           ; BSR set to: 5
 48395   0157F0  0012               	return		;funcret
 48396   0157F2                     __end_of_flushFlashBlock:
 48397                           	callstack 0
 48398                           
 48399 ;; *************** function _eraseFlashBlock *****************
 48400 ;; Defined at:
 48401 ;;		line 344 in file "../../VLCBlib_PIC/nvm.c"
 48402 ;; Parameters:    Size  Location     Type
 48403 ;;		None
 48404 ;; Auto vars:     Size  Location     Type
 48405 ;;  interruptEna    1    3[COMRAM] unsigned char 
 48406 ;; Return value:  Size  Location     Type
 48407 ;;                  1    wreg      void 
 48408 ;; Registers used:
 48409 ;;		wreg, status,2, cstack
 48410 ;; Tracked objects:
 48411 ;;		On entry : 0/0
 48412 ;;		On exit  : 0/0
 48413 ;;		Unchanged: 0/0
 48414 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48417 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48418 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48419 ;;Total ram usage:        4 bytes
 48420 ;; Hardware stack levels used: 1
 48421 ;; Hardware stack levels required when called: 2
 48422 ;; This function calls:
 48423 ;;		_APP_isSuitableTimeToWriteFlash
 48424 ;; This function is called by:
 48425 ;;		_flushFlashBlock
 48426 ;;		_FLASH_Write
 48427 ;; This function uses a non-reentrant model
 48428 ;;
 48429                           
 48430                           	psect	text150
 48431   0156E2                     __ptext150:
 48432                           	callstack 0
 48433   0156E2                     _eraseFlashBlock:
 48434                           	callstack 116
 48435                           
 48436                           ;../../VLCBlib_PIC/nvm.c: 348:     while (! APP_isSuitableTimeToWriteFlash())
 48437                           
 48438                           ;../../VLCBlib_PIC/nvm.c: 345:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 34
      +                          8:     while (! APP_isSuitableTimeToWriteFlash())
 48439                           
 48440                           ; BSR set to: 5
 48441                           ;incstack = 0
 48442   0156E2  EC28  F0B3         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 48443   0156E6  0900               	iorlw	0
 48444   0156E8  B4D8               	btfsc	status,2,c
 48445   0156EA  D7FB               	goto	__ptext150
 48446                           
 48447                           ;../../VLCBlib_PIC/nvm.c: 351:     interruptEnabled = (INTCON0bits.GIE);
 48448   0156EC  0E00               	movlw	0
 48449   0156EE  BED6               	btfsc	214,7,c	;volatile
 48450   0156F0  0E01               	movlw	1
 48451   0156F2  6E04               	movwf	eraseFlashBlock@interruptEnabled^(0+1280),c
 48452   0156F4                     l1910:
 48453                           
 48454                           ;../../VLCBlib_PIC/nvm.c: 369:     while (NVMCON0bits.GO)
 48455   0156F4  0100               	movlb	0	; () banked
 48456   0156F6  B140               	btfsc	64,0,b	;volatile
 48457   0156F8  D7FD               	goto	l1910
 48458                           
 48459                           ; BSR set to: 0
 48460                           ;../../VLCBlib_PIC/nvm.c: 372:     NVMADRU = (uint8_t) (flashBlock >> 16);
 48461   0156FA  C579  F045         	movff	_flashBlock+2,69	;volatile
 48462                           
 48463                           ; BSR set to: 0
 48464                           ;../../VLCBlib_PIC/nvm.c: 373:     NVMADRH = (uint8_t) (flashBlock >> 8);
 48465   0156FE  C577  F501         	movff	_flashBlock,??_eraseFlashBlock
 48466   015702  C578  F502         	movff	_flashBlock+1,??_eraseFlashBlock+1
 48467   015706  C579  F503         	movff	_flashBlock+2,??_eraseFlashBlock+2
 48468   01570A  C502  F501         	movff	??_eraseFlashBlock+1,??_eraseFlashBlock
 48469   01570E  C503  F502         	movff	??_eraseFlashBlock+2,??_eraseFlashBlock+1
 48470   015712  6A03               	clrf	(??_eraseFlashBlock+2)^(0+1280),c
 48471   015714  5001               	movf	??_eraseFlashBlock^(0+1280),w,c
 48472   015716  6F44               	movwf	68,b	;volatile
 48473                           
 48474                           ;../../VLCBlib_PIC/nvm.c: 375:     NVMCON1bits.NVMCMD = 0x06;
 48475   015718  5141               	movf	65,w,b	;volsfr
 48476   01571A  0BF8               	andlw	-8
 48477   01571C  0906               	iorlw	6
 48478   01571E  6F41               	movwf	65,b	;volsfr
 48479                           
 48480                           ; BSR set to: 0
 48481                           ;../../VLCBlib_PIC/nvm.c: 376:     {INTCON0bits.GIE = 0;};
 48482   015720  9ED6               	bcf	214,7,c	;volatile
 48483                           
 48484                           ;../../VLCBlib_PIC/nvm.c: 378:     NVMLOCK = 0x55;
 48485   015722  0E55               	movlw	85
 48486   015724  6F42               	movwf	66,b	;volatile
 48487                           
 48488                           ;../../VLCBlib_PIC/nvm.c: 379:     NVMLOCK = 0xAA;
 48489   015726  0EAA               	movlw	170
 48490   015728  6F42               	movwf	66,b	;volatile
 48491                           
 48492                           ; BSR set to: 0
 48493                           ;../../VLCBlib_PIC/nvm.c: 380:     NVMCON0bits.GO = 1;
 48494   01572A  8140               	bsf	64,0,b	;volatile
 48495   01572C                     l1913:
 48496                           
 48497                           ; BSR set to: 0
 48498                           ;../../VLCBlib_PIC/nvm.c: 381:     while (NVMCON0bits.GO)
 48499   01572C  B140               	btfsc	64,0,b	;volatile
 48500   01572E  D7FE               	goto	l1913
 48501                           
 48502                           ; BSR set to: 0
 48503                           ;../../VLCBlib_PIC/nvm.c: 383:     NVMCON1bits.NVMCMD = 0x07;
 48504   015730  0E07               	movlw	7
 48505   015732  1341               	iorwf	65,f,b	;volsfr
 48506                           
 48507                           ;../../VLCBlib_PIC/nvm.c: 385:     if (interruptEnabled) {
 48508   015734  5004               	movf	eraseFlashBlock@interruptEnabled^(0+1280),w,c
 48509   015736  B4D8               	btfsc	status,2,c
 48510   015738  0012               	return	
 48511                           
 48512                           ; BSR set to: 0
 48513                           ;../../VLCBlib_PIC/nvm.c: 386:         {INTCON0bits.GIE = 1;};
 48514   01573A  8ED6               	bsf	214,7,c	;volatile
 48515                           
 48516                           ; BSR set to: 0
 48517   01573C  0012               	return		;funcret
 48518   01573E                     __end_of_eraseFlashBlock:
 48519                           	callstack 0
 48520                           
 48521 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 48522 ;; Defined at:
 48523 ;;		line 271 in file "../main.c"
 48524 ;; Parameters:    Size  Location     Type
 48525 ;;		None
 48526 ;; Auto vars:     Size  Location     Type
 48527 ;;		None
 48528 ;; Return value:  Size  Location     Type
 48529 ;;                  1    wreg      enum E23230
 48530 ;; Registers used:
 48531 ;;		wreg
 48532 ;; Tracked objects:
 48533 ;;		On entry : 0/0
 48534 ;;		On exit  : 0/0
 48535 ;;		Unchanged: 0/0
 48536 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48541 ;;Total ram usage:        0 bytes
 48542 ;; Hardware stack levels used: 1
 48543 ;; Hardware stack levels required when called: 1
 48544 ;; This function calls:
 48545 ;;		Nothing
 48546 ;; This function is called by:
 48547 ;;		_eraseFlashBlock
 48548 ;;		_flushFlashBlock
 48549 ;; This function uses a non-reentrant model
 48550 ;;
 48551                           
 48552                           	psect	text151
 48553   016650                     __ptext151:
 48554                           	callstack 0
 48555   016650                     _APP_isSuitableTimeToWriteFlash:
 48556                           	callstack 116
 48557                           
 48558                           ;../main.c: 272:     return GOOD_TIME;
 48559                           
 48560                           ; BSR set to: 0
 48561                           ;incstack = 0
 48562   016650  0E01               	movlw	1
 48563   016652  0012               	return		;funcret
 48564   016654                     __end_of_APP_isSuitableTimeToWriteFlash:
 48565                           	callstack 0
 48566                           
 48567 ;; *************** function _EEPROM_Write *****************
 48568 ;; Defined at:
 48569 ;;		line 218 in file "../../VLCBlib_PIC/nvm.c"
 48570 ;; Parameters:    Size  Location     Type
 48571 ;;  index           3    8[COMRAM] unsigned um
 48572 ;;  value           1   11[COMRAM] unsigned char 
 48573 ;; Auto vars:     Size  Location     Type
 48574 ;;  interruptEna    1    0        unsigned char 
 48575 ;; Return value:  Size  Location     Type
 48576 ;;                  1    wreg      unsigned char 
 48577 ;; Registers used:
 48578 ;;		wreg, status,2, status,0, cstack
 48579 ;; Tracked objects:
 48580 ;;		On entry : 0/0
 48581 ;;		On exit  : 0/0
 48582 ;;		Unchanged: 0/0
 48583 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48584 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48587 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48588 ;;Total ram usage:        4 bytes
 48589 ;; Hardware stack levels used: 1
 48590 ;; Hardware stack levels required when called: 2
 48591 ;; This function calls:
 48592 ;;		_EEPROM_Read
 48593 ;;		_EEPROM_WriteNoVerify
 48594 ;;		_updateModuleErrorStatus
 48595 ;; This function is called by:
 48596 ;;		_writeNVM
 48597 ;; This function uses a non-reentrant model
 48598 ;;
 48599                           
 48600                           	psect	text152
 48601   015B30                     __ptext152:
 48602                           	callstack 0
 48603   015B30                     _EEPROM_Write:
 48604                           	callstack 118
 48605                           
 48606                           ;incstack = 0
 48607   015B30  50D6               	movf	214,w,c	;volatile
 48608   015B32                     l8221:
 48609                           
 48610                           ;../../VLCBlib_PIC/nvm.c: 223:         EEPROM_WriteNoVerify(index, value);
 48611   015B32  C509  F501         	movff	EEPROM_Write@index,EEPROM_WriteNoVerify@index
 48612   015B36  C50A  F502         	movff	EEPROM_Write@index+1,EEPROM_WriteNoVerify@index+1
 48613   015B3A  C50B  F503         	movff	EEPROM_Write@index+2,EEPROM_WriteNoVerify@index+2
 48614   015B3E  C50C  F504         	movff	EEPROM_Write@value,EEPROM_WriteNoVerify@value
 48615   015B42  ECF8  F0AC         	call	_EEPROM_WriteNoVerify	;wreg free
 48616                           
 48617                           ;../../VLCBlib_PIC/nvm.c: 226:         if (EEPROM_Read(index) == value) {
 48618   015B46  C509  F501         	movff	EEPROM_Write@index,EEPROM_Read@index
 48619   015B4A  C50A  F502         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 48620   015B4E  C50B  F503         	movff	EEPROM_Write@index+2,EEPROM_Read@index+2
 48621   015B52  EC66  F0AF         	call	_EEPROM_Read	;wreg free
 48622   015B56  180C               	xorwf	EEPROM_Write@value^(0+1280),w,c
 48623   015B58  B4D8               	btfsc	status,2,c
 48624   015B5A  D006               	goto	l8231
 48625                           
 48626                           ;../../VLCBlib_PIC/nvm.c: 230:         mnsDiagnostics[0x04].asUint++;
 48627   015B5C  0105               	movlb	5	; () banked
 48628   015B5E  4BAA               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 48629   015B60  2BAB               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 48630                           
 48631                           ; BSR set to: 5
 48632                           ;../../VLCBlib_PIC/nvm.c: 231:         updateModuleErrorStatus();
 48633   015B62  ECFB  F0B2         	call	_updateModuleErrorStatus	;wreg free
 48634                           
 48635                           ;../../VLCBlib_PIC/nvm.c: 233:     } while (1);
 48636   015B66  D7E5               	goto	l8221
 48637   015B68                     l8231:
 48638                           
 48639                           ;../../VLCBlib_PIC/nvm.c: 236:     NVMCON1bits.NVMCMD = 0x07;
 48640   015B68  0E07               	movlw	7
 48641   015B6A  0100               	movlb	0	; () banked
 48642   015B6C  1341               	iorwf	65,f,b	;volsfr
 48643                           
 48644                           ;../../VLCBlib_PIC/nvm.c: 237:     NVMADR = 0;
 48645   015B6E  0E00               	movlw	0
 48646   015B70  6F43               	movwf	67,b	;volatile
 48647   015B72  0E00               	movlw	0
 48648   015B74  6F44               	movwf	68,b	;volatile
 48649   015B76  0E00               	movlw	0
 48650   015B78  6F45               	movwf	69,b	;volatile
 48651                           
 48652                           ; BSR set to: 0
 48653                           ;../../VLCBlib_PIC/nvm.c: 239:     return GRSP_OK;
 48654   015B7A  0E00               	movlw	0
 48655                           
 48656                           ; BSR set to: 0
 48657   015B7C  0012               	return		;funcret
 48658   015B7E                     __end_of_EEPROM_Write:
 48659                           	callstack 0
 48660                           
 48661 ;; *************** function _updateModuleErrorStatus *****************
 48662 ;; Defined at:
 48663 ;;		line 637 in file "../../VLCBlib_PIC/mns.c"
 48664 ;; Parameters:    Size  Location     Type
 48665 ;;		None
 48666 ;; Auto vars:     Size  Location     Type
 48667 ;;		None
 48668 ;; Return value:  Size  Location     Type
 48669 ;;                  1    wreg      void 
 48670 ;; Registers used:
 48671 ;;		wreg, status,2, status,0
 48672 ;; Tracked objects:
 48673 ;;		On entry : 0/0
 48674 ;;		On exit  : 0/0
 48675 ;;		Unchanged: 0/0
 48676 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48681 ;;Total ram usage:        0 bytes
 48682 ;; Hardware stack levels used: 1
 48683 ;; Hardware stack levels required when called: 1
 48684 ;; This function calls:
 48685 ;;		Nothing
 48686 ;; This function is called by:
 48687 ;;		_canSendMessage
 48688 ;;		_processEnumeration
 48689 ;;		_EEPROM_Write
 48690 ;; This function uses a non-reentrant model
 48691 ;;
 48692                           
 48693                           	psect	text153
 48694   0165F6                     __ptext153:
 48695                           	callstack 0
 48696   0165F6                     _updateModuleErrorStatus:
 48697                           	callstack 119
 48698                           
 48699                           ;../../VLCBlib_PIC/mns.c: 638:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 48700                           
 48701                           ; BSR set to: 0
 48702                           ;incstack = 0
 48703   0165F6  0105               	movlb	5	; () banked
 48704   0165F8  29A4               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 48705   0165FA  B4D8               	btfsc	status,2,c
 48706   0165FC  0012               	return	
 48707                           
 48708                           ; BSR set to: 5
 48709                           ;../../VLCBlib_PIC/mns.c: 639:         mnsDiagnostics[0x01].asBytes.lo++;
 48710   0165FE  2BA4               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 48711                           
 48712                           ; BSR set to: 5
 48713   016600  0012               	return		;funcret
 48714   016602                     __end_of_updateModuleErrorStatus:
 48715                           	callstack 0
 48716                           
 48717 ;; *************** function _EEPROM_WriteNoVerify *****************
 48718 ;; Defined at:
 48719 ;;		line 248 in file "../../VLCBlib_PIC/nvm.c"
 48720 ;; Parameters:    Size  Location     Type
 48721 ;;  index           3    0[COMRAM] unsigned um
 48722 ;;  value           1    3[COMRAM] unsigned char 
 48723 ;; Auto vars:     Size  Location     Type
 48724 ;;  interruptEna    1    7[COMRAM] unsigned char 
 48725 ;; Return value:  Size  Location     Type
 48726 ;;                  1    wreg      unsigned char 
 48727 ;; Registers used:
 48728 ;;		wreg, status,2
 48729 ;; Tracked objects:
 48730 ;;		On entry : 0/0
 48731 ;;		On exit  : 0/0
 48732 ;;		Unchanged: 0/0
 48733 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48734 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48735 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48736 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48737 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48738 ;;Total ram usage:        8 bytes
 48739 ;; Hardware stack levels used: 1
 48740 ;; Hardware stack levels required when called: 1
 48741 ;; This function calls:
 48742 ;;		Nothing
 48743 ;; This function is called by:
 48744 ;;		_inputScan
 48745 ;;		_setLedState
 48746 ;;		_EEPROM_Write
 48747 ;; This function uses a non-reentrant model
 48748 ;;
 48749                           
 48750                           	psect	text154
 48751   0159F0                     __ptext154:
 48752                           	callstack 0
 48753   0159F0                     _EEPROM_WriteNoVerify:
 48754                           	callstack 118
 48755                           
 48756                           ;../../VLCBlib_PIC/nvm.c: 249:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 25
      +                          0:     interruptEnabled = (INTCON0bits.GIE);
 48757                           
 48758                           ; BSR set to: 5
 48759                           ;incstack = 0
 48760   0159F0  0E00               	movlw	0
 48761   0159F2  BED6               	btfsc	214,7,c	;volatile
 48762   0159F4  0E01               	movlw	1
 48763   0159F6  6E08               	movwf	EEPROM_WriteNoVerify@interruptEnabled^(0+1280),c
 48764   0159F8                     l1895:
 48765                           
 48766                           ;../../VLCBlib_PIC/nvm.c: 276:     while (NVMCON0bits.GO)
 48767   0159F8  0100               	movlb	0	; () banked
 48768   0159FA  B140               	btfsc	64,0,b	;volatile
 48769   0159FC  D7FD               	goto	l1895
 48770                           
 48771                           ; BSR set to: 0
 48772                           ;../../VLCBlib_PIC/nvm.c: 279:     NVMADRU = 0x38;
 48773   0159FE  0E38               	movlw	56
 48774   015A00  6F45               	movwf	69,b	;volatile
 48775                           
 48776                           ;../../VLCBlib_PIC/nvm.c: 280:     NVMADRH = (uint8_t) (index >> 8);
 48777   015A02  C501  F505         	movff	EEPROM_WriteNoVerify@index,??_EEPROM_WriteNoVerify
 48778   015A06  C502  F506         	movff	EEPROM_WriteNoVerify@index+1,??_EEPROM_WriteNoVerify+1
 48779   015A0A  C503  F507         	movff	EEPROM_WriteNoVerify@index+2,??_EEPROM_WriteNoVerify+2
 48780   015A0E  C506  F505         	movff	??_EEPROM_WriteNoVerify+1,??_EEPROM_WriteNoVerify
 48781   015A12  C507  F506         	movff	??_EEPROM_WriteNoVerify+2,??_EEPROM_WriteNoVerify+1
 48782   015A16  6A07               	clrf	(??_EEPROM_WriteNoVerify+2)^(0+1280),c
 48783   015A18  5005               	movf	??_EEPROM_WriteNoVerify^(0+1280),w,c
 48784   015A1A  6F44               	movwf	68,b	;volatile
 48785                           
 48786                           ; BSR set to: 0
 48787                           ;../../VLCBlib_PIC/nvm.c: 281:     NVMADRL = (uint8_t) index;
 48788   015A1C  C501  F043         	movff	EEPROM_WriteNoVerify@index,67	;volatile
 48789                           
 48790                           ; BSR set to: 0
 48791                           ;../../VLCBlib_PIC/nvm.c: 284:     NVMDATL = value;
 48792   015A20  C504  F046         	movff	EEPROM_WriteNoVerify@value,70	;volatile
 48793                           
 48794                           ;../../VLCBlib_PIC/nvm.c: 287:     NVMCON1bits.NVMCMD = 0x03;
 48795   015A24  5141               	movf	65,w,b	;volsfr
 48796   015A26  0BF8               	andlw	-8
 48797   015A28  0903               	iorlw	3
 48798   015A2A  6F41               	movwf	65,b	;volsfr
 48799                           
 48800                           ; BSR set to: 0
 48801                           ;../../VLCBlib_PIC/nvm.c: 290:     {INTCON0bits.GIE = 0;};
 48802   015A2C  9ED6               	bcf	214,7,c	;volatile
 48803                           
 48804                           ;../../VLCBlib_PIC/nvm.c: 293:     NVMLOCK = 0x55;
 48805   015A2E  0E55               	movlw	85
 48806   015A30  6F42               	movwf	66,b	;volatile
 48807                           
 48808                           ;../../VLCBlib_PIC/nvm.c: 294:     NVMLOCK = 0xAA;
 48809   015A32  0EAA               	movlw	170
 48810   015A34  6F42               	movwf	66,b	;volatile
 48811                           
 48812                           ; BSR set to: 0
 48813                           ;../../VLCBlib_PIC/nvm.c: 297:     NVMCON0bits.GO = 1;
 48814   015A36  8140               	bsf	64,0,b	;volatile
 48815                           
 48816                           ;../../VLCBlib_PIC/nvm.c: 299:     if (interruptEnabled) {
 48817   015A38  5008               	movf	EEPROM_WriteNoVerify@interruptEnabled^(0+1280),w,c
 48818   015A3A  B4D8               	btfsc	status,2,c
 48819   015A3C  0012               	return	
 48820                           
 48821                           ; BSR set to: 0
 48822                           ;../../VLCBlib_PIC/nvm.c: 301:         {INTCON0bits.GIE = 1;};
 48823   015A3E  8ED6               	bsf	214,7,c	;volatile
 48824                           
 48825                           ; BSR set to: 0
 48826   015A40  0012               	return		;funcret
 48827   015A42                     __end_of_EEPROM_WriteNoVerify:
 48828                           	callstack 0
 48829                           
 48830 ;; *************** function _rebuildHashtable *****************
 48831 ;; Defined at:
 48832 ;;		line 1007 in file "../../VLCBlib_PIC/event_teach_simple.c"
 48833 ;; Parameters:    Size  Location     Type
 48834 ;;		None
 48835 ;; Auto vars:     Size  Location     Type
 48836 ;;  ev              2    0        short 
 48837 ;;  a               2    0        int 
 48838 ;;  chainIdx        1   34[COMRAM] unsigned char 
 48839 ;;  tableIndex      1   33[COMRAM] unsigned char 
 48840 ;;  hash            1   32[COMRAM] unsigned char 
 48841 ;; Return value:  Size  Location     Type
 48842 ;;                  1    wreg      void 
 48843 ;; Registers used:
 48844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48845 ;; Tracked objects:
 48846 ;;		On entry : 0/0
 48847 ;;		On exit  : 0/0
 48848 ;;		Unchanged: 0/0
 48849 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48851 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48852 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48853 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48854 ;;Total ram usage:        6 bytes
 48855 ;; Hardware stack levels used: 1
 48856 ;; Hardware stack levels required when called: 4
 48857 ;; This function calls:
 48858 ;;		_getEN
 48859 ;;		_getHash
 48860 ;;		_getNN
 48861 ;; This function is called by:
 48862 ;;		_teachPowerUp
 48863 ;;		_clearAllEvents
 48864 ;;		_removeTableEntry
 48865 ;;		_addEvent
 48866 ;;		_mnsProcessMessage
 48867 ;; This function uses a non-reentrant model
 48868 ;;
 48869                           
 48870                           	psect	text155
 48871   014180                     __ptext155:
 48872                           	callstack 0
 48873   014180                     _rebuildHashtable:
 48874                           	callstack 120
 48875                           
 48876                           ;../../VLCBlib_PIC/event_teach_simple.c: 1009:     uint8_t hash;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 1010:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach_simple.c: 101
      +                          1:     uint8_t tableIndex;;../../VLCBlib_PIC/event_teach_simple.c: 1012:     int a;;../.
      +                          ./VLCBlib_PIC/event_teach_simple.c: 1014:     for (hash=0; hash<32; hash++) {
 48877                           
 48878                           ; BSR set to: 0
 48879                           ;incstack = 0
 48880   014180  6A21               	clrf	rebuildHashtable@hash^(0+1280),c
 48881   014182                     l1408:
 48882                           
 48883                           ;../../VLCBlib_PIC/event_teach_simple.c: 1015:         for (chainIdx=0; chainIdx < 20; c
      +                          hainIdx++) {
 48884   014182  6A23               	clrf	rebuildHashtable@chainIdx^(0+1280),c
 48885   014184                     l8395:
 48886                           
 48887                           ;../../VLCBlib_PIC/event_teach_simple.c: 1016:             eventChains[hash][chainIdx] =
      +                           0xff;
 48888   014184  5021               	movf	rebuildHashtable@hash^(0+1280),w,c
 48889   014186  0D14               	mullw	20
 48890   014188  0E8C               	movlw	low _eventChains
 48891   01418A  24F3               	addwf	243,w,c
 48892   01418C  6E1E               	movwf	??_rebuildHashtable^(0+1280),c
 48893   01418E  0E07               	movlw	high _eventChains
 48894   014190  20F4               	addwfc	prodh,w,c
 48895   014192  6E1F               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 48896   014194  5023               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 48897   014196  241E               	addwf	??_rebuildHashtable^(0+1280),w,c
 48898   014198  6ED9               	movwf	fsr2l,c
 48899   01419A  0E00               	movlw	0
 48900   01419C  201F               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 48901   01419E  6EDA               	movwf	fsr2h,c
 48902   0141A0  0EFF               	movlw	255
 48903   0141A2  6EDF               	movwf	indf2,c
 48904                           
 48905                           ;../../VLCBlib_PIC/event_teach_simple.c: 1017:         }
 48906   0141A4  2A23               	incf	rebuildHashtable@chainIdx^(0+1280),f,c
 48907   0141A6  0E13               	movlw	19
 48908   0141A8  6423               	cpfsgt	rebuildHashtable@chainIdx^(0+1280),c
 48909   0141AA  D7EC               	goto	l8395
 48910                           
 48911                           ;../../VLCBlib_PIC/event_teach_simple.c: 1018:     }
 48912   0141AC  2A21               	incf	rebuildHashtable@hash^(0+1280),f,c
 48913   0141AE  0E1F               	movlw	31
 48914   0141B0  6421               	cpfsgt	rebuildHashtable@hash^(0+1280),c
 48915   0141B2  D7E7               	goto	l1408
 48916                           
 48917                           ;../../VLCBlib_PIC/event_teach_simple.c: 1020:     for (tableIndex=0; tableIndex<254; ta
      +                          bleIndex++) {
 48918   0141B4  6A22               	clrf	rebuildHashtable@tableIndex^(0+1280),c
 48919   0141B6                     l8409:
 48920                           
 48921                           ;../../VLCBlib_PIC/event_teach_simple.c: 1021:         if (getEN(tableIndex) != 0) {
 48922   0141B6  5022               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 48923   0141B8  EC70  F0A8         	call	_getEN
 48924   0141BC  500D               	movf	?_getEN^(0+1280),w,c
 48925   0141BE  100E               	iorwf	(?_getEN+1)^(0+1280),w,c
 48926   0141C0  B4D8               	btfsc	status,2,c
 48927   0141C2  D038               	goto	u6040
 48928                           
 48929                           ;../../VLCBlib_PIC/event_teach_simple.c: 1022:             int16_t ev;;../../VLCBlib_PIC
      +                          /event_teach_simple.c: 1025:             hash = getHash(getNN(tableIndex), getEN(tableIn
      +                          dex));
 48930   0141C4  5022               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 48931   0141C6  EC7C  F0A1         	call	_getNN
 48932   0141CA  C50D  F518         	movff	?_getNN,getHash@nn
 48933   0141CE  C50E  F519         	movff	?_getNN+1,getHash@nn+1
 48934   0141D2  5022               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 48935   0141D4  EC70  F0A8         	call	_getEN
 48936   0141D8  C50D  F51A         	movff	?_getEN,getHash@en
 48937   0141DC  C50E  F51B         	movff	?_getEN+1,getHash@en+1
 48938   0141E0  EC4C  F0B2         	call	_getHash	;wreg free
 48939   0141E4  6E21               	movwf	rebuildHashtable@hash^(0+1280),c
 48940                           
 48941                           ;../../VLCBlib_PIC/event_teach_simple.c: 1026:             for (chainIdx=0; chainIdx<20;
      +                           chainIdx++) {
 48942   0141E6  6A23               	clrf	rebuildHashtable@chainIdx^(0+1280),c
 48943   0141E8                     l8419:
 48944                           
 48945                           ;../../VLCBlib_PIC/event_teach_simple.c: 1027:                 if (eventChains[hash][cha
      +                          inIdx] == 0xff) {
 48946   0141E8  5021               	movf	rebuildHashtable@hash^(0+1280),w,c
 48947   0141EA  0D14               	mullw	20
 48948   0141EC  0E8C               	movlw	low _eventChains
 48949   0141EE  24F3               	addwf	243,w,c
 48950   0141F0  6E1E               	movwf	??_rebuildHashtable^(0+1280),c
 48951   0141F2  0E07               	movlw	high _eventChains
 48952   0141F4  20F4               	addwfc	prodh,w,c
 48953   0141F6  6E1F               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 48954   0141F8  5023               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 48955   0141FA  241E               	addwf	??_rebuildHashtable^(0+1280),w,c
 48956   0141FC  6ED9               	movwf	fsr2l,c
 48957   0141FE  0E00               	movlw	0
 48958   014200  201F               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 48959   014202  6EDA               	movwf	fsr2h,c
 48960   014204  28DE               	incf	postinc2,w,c
 48961   014206  A4D8               	btfss	status,2,c
 48962   014208  D011               	goto	l8423
 48963                           
 48964                           ;../../VLCBlib_PIC/event_teach_simple.c: 1029:                     eventChains[hash][cha
      +                          inIdx] = tableIndex;
 48965   01420A  5021               	movf	rebuildHashtable@hash^(0+1280),w,c
 48966   01420C  0D14               	mullw	20
 48967   01420E  0E8C               	movlw	low _eventChains
 48968   014210  24F3               	addwf	243,w,c
 48969   014212  6E1E               	movwf	??_rebuildHashtable^(0+1280),c
 48970   014214  0E07               	movlw	high _eventChains
 48971   014216  20F4               	addwfc	prodh,w,c
 48972   014218  6E1F               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 48973   01421A  5023               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 48974   01421C  241E               	addwf	??_rebuildHashtable^(0+1280),w,c
 48975   01421E  6ED9               	movwf	fsr2l,c
 48976   014220  0E00               	movlw	0
 48977   014222  201F               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 48978   014224  6EDA               	movwf	fsr2h,c
 48979   014226  C522  F4DF         	movff	rebuildHashtable@tableIndex,indf2
 48980                           
 48981                           ;../../VLCBlib_PIC/event_teach_simple.c: 1030:                     break;
 48982   01422A  D004               	goto	u6040
 48983   01422C                     l8423:
 48984                           
 48985                           ;../../VLCBlib_PIC/event_teach_simple.c: 1032:             }
 48986   01422C  2A23               	incf	rebuildHashtable@chainIdx^(0+1280),f,c
 48987   01422E  0E13               	movlw	19
 48988   014230  6423               	cpfsgt	rebuildHashtable@chainIdx^(0+1280),c
 48989   014232  D7DA               	goto	l8419
 48990   014234                     u6040:
 48991                           
 48992                           ;../../VLCBlib_PIC/event_teach_simple.c: 1034:     }
 48993   014234  2A22               	incf	rebuildHashtable@tableIndex^(0+1280),f,c
 48994   014236  0EFD               	movlw	253
 48995   014238  6422               	cpfsgt	rebuildHashtable@tableIndex^(0+1280),c
 48996   01423A  D7BD               	goto	l8409
 48997   01423C  0012               	return	
 48998   01423E                     __end_of_rebuildHashtable:
 48999                           	callstack 0
 49000                           
 49001 ;; *************** function _findEvent *****************
 49002 ;; Defined at:
 49003 ;;		line 808 in file "../../VLCBlib_PIC/event_teach_simple.c"
 49004 ;; Parameters:    Size  Location     Type
 49005 ;;  nodeNumber      2   29[COMRAM] unsigned short 
 49006 ;;  eventNumber     2   31[COMRAM] unsigned short 
 49007 ;; Auto vars:     Size  Location     Type
 49008 ;;  en              2   37[COMRAM] unsigned short 
 49009 ;;  nn              2   35[COMRAM] unsigned short 
 49010 ;;  tableIndex      1   41[COMRAM] unsigned char 
 49011 ;;  chainIdx        1   40[COMRAM] unsigned char 
 49012 ;;  hash            1   39[COMRAM] unsigned char 
 49013 ;; Return value:  Size  Location     Type
 49014 ;;                  1    wreg      unsigned char 
 49015 ;; Registers used:
 49016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49017 ;; Tracked objects:
 49018 ;;		On entry : 0/0
 49019 ;;		On exit  : 0/0
 49020 ;;		Unchanged: 0/0
 49021 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 49022 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49023 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49024 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49025 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49026 ;;Total ram usage:       13 bytes
 49027 ;; Hardware stack levels used: 1
 49028 ;; Hardware stack levels required when called: 4
 49029 ;; This function calls:
 49030 ;;		_getEN
 49031 ;;		_getHash
 49032 ;;		_getNN
 49033 ;; This function is called by:
 49034 ;;		_APP_preProcessMessage
 49035 ;;		_APP_addEvent
 49036 ;;		_consumerProcessMessage
 49037 ;;		_doReqev
 49038 ;;		_removeEvent
 49039 ;;		_addEvent
 49040 ;;		_producerProcessMessage
 49041 ;; This function uses a non-reentrant model
 49042 ;;
 49043                           
 49044                           	psect	text156
 49045   01489E                     __ptext156:
 49046                           	callstack 0
 49047   01489E                     _findEvent:
 49048                           	callstack 119
 49049                           
 49050                           ;../../VLCBlib_PIC/event_teach_simple.c: 810:     uint8_t hash = getHash(nodeNumber, eve
      +                          ntNumber);
 49051                           
 49052                           ;incstack = 0
 49053   01489E  C51E  F518         	movff	findEvent@nodeNumber,getHash@nn
 49054   0148A2  C51F  F519         	movff	findEvent@nodeNumber+1,getHash@nn+1
 49055   0148A6  C520  F51A         	movff	findEvent@eventNumber,getHash@en
 49056   0148AA  C521  F51B         	movff	findEvent@eventNumber+1,getHash@en+1
 49057   0148AE  EC4C  F0B2         	call	_getHash	;wreg free
 49058   0148B2  6E28               	movwf	findEvent@hash^(0+1280),c
 49059                           
 49060                           ;../../VLCBlib_PIC/event_teach_simple.c: 811:     uint8_t chainIdx;;../../VLCBlib_PIC/ev
      +                          ent_teach_simple.c: 812:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 49061   0148B4  6A29               	clrf	findEvent@chainIdx^(0+1280),c
 49062   0148B6                     l8617:
 49063                           
 49064                           ;../../VLCBlib_PIC/event_teach_simple.c: 813:         uint8_t tableIndex = eventChains[h
      +                          ash][chainIdx];
 49065   0148B6  5028               	movf	findEvent@hash^(0+1280),w,c
 49066   0148B8  0D14               	mullw	20
 49067   0148BA  0E8C               	movlw	low _eventChains
 49068   0148BC  24F3               	addwf	243,w,c
 49069   0148BE  6E22               	movwf	??_findEvent^(0+1280),c
 49070   0148C0  0E07               	movlw	high _eventChains
 49071   0148C2  20F4               	addwfc	prodh,w,c
 49072   0148C4  6E23               	movwf	(??_findEvent+1)^(0+1280),c
 49073   0148C6  5029               	movf	findEvent@chainIdx^(0+1280),w,c
 49074   0148C8  2422               	addwf	??_findEvent^(0+1280),w,c
 49075   0148CA  6ED9               	movwf	fsr2l,c
 49076   0148CC  0E00               	movlw	0
 49077   0148CE  2023               	addwfc	(??_findEvent+1)^(0+1280),w,c
 49078   0148D0  6EDA               	movwf	fsr2h,c
 49079   0148D2  50DF               	movf	indf2,w,c
 49080   0148D4  6E2A               	movwf	findEvent@tableIndex^(0+1280),c
 49081                           
 49082                           ;../../VLCBlib_PIC/event_teach_simple.c: 814:         uint16_t nn, en;;../../VLCBlib_PIC
      +                          /event_teach_simple.c: 815:         if (tableIndex == 0xff) return 0xff;
 49083   0148D6  282A               	incf	findEvent@tableIndex^(0+1280),w,c
 49084   0148D8  A4D8               	btfss	status,2,c
 49085   0148DA  D002               	goto	l8625
 49086   0148DC                     u6240:
 49087   0148DC  0EFF               	movlw	255
 49088   0148DE  0012               	return	
 49089   0148E0                     l8625:
 49090                           
 49091                           ;../../VLCBlib_PIC/event_teach_simple.c: 816:         nn = getNN(tableIndex);
 49092   0148E0  502A               	movf	findEvent@tableIndex^(0+1280),w,c
 49093   0148E2  EC7C  F0A1         	call	_getNN
 49094   0148E6  C50D  F524         	movff	?_getNN,findEvent@nn
 49095   0148EA  C50E  F525         	movff	?_getNN+1,findEvent@nn+1
 49096                           
 49097                           ;../../VLCBlib_PIC/event_teach_simple.c: 817:         en = getEN(tableIndex);
 49098   0148EE  502A               	movf	findEvent@tableIndex^(0+1280),w,c
 49099   0148F0  EC70  F0A8         	call	_getEN
 49100   0148F4  C50D  F526         	movff	?_getEN,findEvent@en
 49101   0148F8  C50E  F527         	movff	?_getEN+1,findEvent@en+1
 49102                           
 49103                           ;../../VLCBlib_PIC/event_teach_simple.c: 818:         if ((nn == nodeNumber) && (en == e
      +                          ventNumber)) {
 49104   0148FC  501E               	movf	findEvent@nodeNumber^(0+1280),w,c
 49105   0148FE  1824               	xorwf	findEvent@nn^(0+1280),w,c
 49106   014900  E10D               	bnz	l8635
 49107   014902  501F               	movf	(findEvent@nodeNumber+1)^(0+1280),w,c
 49108   014904  1825               	xorwf	(findEvent@nn+1)^(0+1280),w,c
 49109   014906  A4D8               	btfss	status,2,c
 49110   014908  D009               	goto	l8635
 49111   01490A  5020               	movf	findEvent@eventNumber^(0+1280),w,c
 49112   01490C  1826               	xorwf	findEvent@en^(0+1280),w,c
 49113   01490E  E106               	bnz	l8635
 49114   014910  5021               	movf	(findEvent@eventNumber+1)^(0+1280),w,c
 49115   014912  1827               	xorwf	(findEvent@en+1)^(0+1280),w,c
 49116   014914  A4D8               	btfss	status,2,c
 49117   014916  D002               	goto	l8635
 49118                           
 49119                           ;../../VLCBlib_PIC/event_teach_simple.c: 819:             return tableIndex;
 49120   014918  502A               	movf	findEvent@tableIndex^(0+1280),w,c
 49121   01491A  0012               	return	
 49122   01491C                     l8635:
 49123                           
 49124                           ;../../VLCBlib_PIC/event_teach_simple.c: 821:     }
 49125   01491C  2A29               	incf	findEvent@chainIdx^(0+1280),f,c
 49126   01491E  0E13               	movlw	19
 49127   014920  6429               	cpfsgt	findEvent@chainIdx^(0+1280),c
 49128   014922  D7C9               	goto	l8617
 49129   014924  D7DB               	goto	u6240
 49130   014926                     __end_of_findEvent:
 49131                           	callstack 0
 49132                           
 49133 ;; *************** function _getNN *****************
 49134 ;; Defined at:
 49135 ;;		line 915 in file "../../VLCBlib_PIC/event_teach_simple.c"
 49136 ;; Parameters:    Size  Location     Type
 49137 ;;  tableIndex      1    wreg     unsigned char 
 49138 ;; Auto vars:     Size  Location     Type
 49139 ;;  tableIndex      1   22[COMRAM] unsigned char 
 49140 ;;  lo              2   19[COMRAM] unsigned short 
 49141 ;;  hi              2   17[COMRAM] unsigned short 
 49142 ;;  flags           1   21[COMRAM] unsigned char 
 49143 ;; Return value:  Size  Location     Type
 49144 ;;                  2   12[COMRAM] unsigned short 
 49145 ;; Registers used:
 49146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49147 ;; Tracked objects:
 49148 ;;		On entry : 0/0
 49149 ;;		On exit  : 0/0
 49150 ;;		Unchanged: 0/0
 49151 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 49152 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49153 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49154 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49155 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49156 ;;Total ram usage:       11 bytes
 49157 ;; Hardware stack levels used: 1
 49158 ;; Hardware stack levels required when called: 3
 49159 ;; This function calls:
 49160 ;;		_readNVM
 49161 ;; This function is called by:
 49162 ;;		_canpanSendProducedEvent
 49163 ;;		_nerdCallback
 49164 ;;		_doNenrd
 49165 ;;		_reqevCallback
 49166 ;;		_findEvent
 49167 ;;		_rebuildHashtable
 49168 ;; This function uses a non-reentrant model
 49169 ;;
 49170                           
 49171                           	psect	text157
 49172   0142F8                     __ptext157:
 49173                           	callstack 0
 49174   0142F8                     _getNN:
 49175                           	callstack 120
 49176                           
 49177                           ;incstack = 0
 49178                           ;getNN@tableIndex stored from wreg
 49179   0142F8  6E17               	movwf	getNN@tableIndex^(0+1280),c
 49180                           
 49181                           ;../../VLCBlib_PIC/event_teach_simple.c: 916:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_simple.c: 917:     uint16_t lo;;../../VLCBlib_PIC/event_teach_simple.c: 918:     ui
      +                          nt8_t flags;;../../VLCBlib_PIC/event_teach_simple.c: 919:     if (tableIndex >= 254) {
 49182   0142FA  0EFD               	movlw	253
 49183   0142FC  6417               	cpfsgt	getNN@tableIndex^(0+1280),c
 49184   0142FE  D005               	goto	l8179
 49185                           
 49186                           ;../../VLCBlib_PIC/event_teach_simple.c: 920:         return CMDERR_INV_EN_IDX;
 49187   014300  0E00               	movlw	0
 49188   014302  6E0E               	movwf	(?_getNN+1)^(0+1280),c
 49189   014304  0E08               	movlw	8
 49190   014306  6E0D               	movwf	?_getNN^(0+1280),c
 49191   014308  0012               	return	
 49192   01430A                     l8179:
 49193                           
 49194                           ;../../VLCBlib_PIC/event_teach_simple.c: 923:     flags = (uint8_t)readNVM(FLASH_NVM_TYP
      +                          E, 0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+4);
 49195   01430A  5017               	movf	getNN@tableIndex^(0+1280),w,c
 49196   01430C  0D12               	mullw	18
 49197   01430E  C4F3 F50F          	movff	prodl,??_getNN
 49198   014312  C4F4 F510          	movff	prodh,??_getNN+1
 49199   014316  6A11               	clrf	(??_getNN+2)^(0+1280),c
 49200   014318  0E04               	movlw	4
 49201   01431A  240F               	addwf	??_getNN^(0+1280),w,c
 49202   01431C  6E07               	movwf	readNVM@index^(0+1280),c
 49203   01431E  0EE8               	movlw	232
 49204   014320  2010               	addwfc	(??_getNN+1)^(0+1280),w,c
 49205   014322  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 49206   014324  0E01               	movlw	1
 49207   014326  2011               	addwfc	(??_getNN+2)^(0+1280),w,c
 49208   014328  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 49209   01432A  0E01               	movlw	1
 49210   01432C  EC42  F0AB         	call	_readNVM
 49211   014330  5007               	movf	?_readNVM^(0+1280),w,c
 49212   014332  6E16               	movwf	getNN@flags^(0+1280),c
 49213                           
 49214                           ;../../VLCBlib_PIC/event_teach_simple.c: 924:     if (flags & 1) {
 49215   014334  A016               	btfss	getNN@flags^(0+1280),0,c
 49216   014336  D005               	goto	l8185
 49217                           
 49218                           ;../../VLCBlib_PIC/event_teach_simple.c: 925:         return nn.word;
 49219   014338  C55E  F50D         	movff	_nn,?_getNN
 49220   01433C  C55F  F50E         	movff	_nn+1,?_getNN+1
 49221   014340  0012               	return	
 49222   014342                     l8185:
 49223                           
 49224                           ;../../VLCBlib_PIC/event_teach_simple.c: 927:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+1);
 49225   014342  5017               	movf	getNN@tableIndex^(0+1280),w,c
 49226   014344  0D12               	mullw	18
 49227   014346  C4F3 F50F          	movff	prodl,??_getNN
 49228   01434A  C4F4 F510          	movff	prodh,??_getNN+1
 49229   01434E  6A11               	clrf	(??_getNN+2)^(0+1280),c
 49230   014350  0E01               	movlw	1
 49231   014352  240F               	addwf	??_getNN^(0+1280),w,c
 49232   014354  6E07               	movwf	readNVM@index^(0+1280),c
 49233   014356  0EE8               	movlw	232
 49234   014358  2010               	addwfc	(??_getNN+1)^(0+1280),w,c
 49235   01435A  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 49236   01435C  0E01               	movlw	1
 49237   01435E  2011               	addwfc	(??_getNN+2)^(0+1280),w,c
 49238   014360  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 49239   014362  0E01               	movlw	1
 49240   014364  EC42  F0AB         	call	_readNVM
 49241   014368  5007               	movf	?_readNVM^(0+1280),w,c
 49242   01436A  6E14               	movwf	getNN@lo^(0+1280),c
 49243   01436C  6A15               	clrf	(getNN@lo+1)^(0+1280),c
 49244                           
 49245                           ;../../VLCBlib_PIC/event_teach_simple.c: 928:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+0);
 49246   01436E  5017               	movf	getNN@tableIndex^(0+1280),w,c
 49247   014370  0D12               	mullw	18
 49248   014372  C4F3 F50F          	movff	prodl,??_getNN
 49249   014376  C4F4 F510          	movff	prodh,??_getNN+1
 49250   01437A  6A11               	clrf	(??_getNN+2)^(0+1280),c
 49251   01437C  0E00               	movlw	0
 49252   01437E  240F               	addwf	??_getNN^(0+1280),w,c
 49253   014380  6E07               	movwf	readNVM@index^(0+1280),c
 49254   014382  0EE8               	movlw	232
 49255   014384  2010               	addwfc	(??_getNN+1)^(0+1280),w,c
 49256   014386  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 49257   014388  0E01               	movlw	1
 49258   01438A  2011               	addwfc	(??_getNN+2)^(0+1280),w,c
 49259   01438C  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 49260   01438E  0E01               	movlw	1
 49261   014390  EC42  F0AB         	call	_readNVM
 49262   014394  5007               	movf	?_readNVM^(0+1280),w,c
 49263   014396  6E12               	movwf	getNN@hi^(0+1280),c
 49264   014398  6A13               	clrf	(getNN@hi+1)^(0+1280),c
 49265                           
 49266                           ;../../VLCBlib_PIC/event_teach_simple.c: 929:     return lo | (hi << 8);
 49267   01439A  5012               	movf	getNN@hi^(0+1280),w,c
 49268   01439C  6E10               	movwf	(??_getNN+1)^(0+1280),c
 49269   01439E  6A0F               	clrf	??_getNN^(0+1280),c
 49270   0143A0  5014               	movf	getNN@lo^(0+1280),w,c
 49271   0143A2  100F               	iorwf	??_getNN^(0+1280),w,c
 49272   0143A4  6E0D               	movwf	?_getNN^(0+1280),c
 49273   0143A6  5015               	movf	(getNN@lo+1)^(0+1280),w,c
 49274   0143A8  1010               	iorwf	(??_getNN+1)^(0+1280),w,c
 49275   0143AA  6E0E               	movwf	(?_getNN+1)^(0+1280),c
 49276   0143AC  0012               	return		;funcret
 49277   0143AE                     __end_of_getNN:
 49278                           	callstack 0
 49279                           
 49280 ;; *************** function _getHash *****************
 49281 ;; Defined at:
 49282 ;;		line 993 in file "../../VLCBlib_PIC/event_teach_simple.c"
 49283 ;; Parameters:    Size  Location     Type
 49284 ;;  nn              2   23[COMRAM] unsigned short 
 49285 ;;  en              2   25[COMRAM] unsigned short 
 49286 ;; Auto vars:     Size  Location     Type
 49287 ;;  hash            1   28[COMRAM] unsigned char 
 49288 ;; Return value:  Size  Location     Type
 49289 ;;                  1    wreg      unsigned char 
 49290 ;; Registers used:
 49291 ;;		wreg, status,2, status,0, prodl, prodh
 49292 ;; Tracked objects:
 49293 ;;		On entry : 0/0
 49294 ;;		On exit  : 0/0
 49295 ;;		Unchanged: 0/0
 49296 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 49297 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49299 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49300 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49301 ;;Total ram usage:        6 bytes
 49302 ;; Hardware stack levels used: 1
 49303 ;; Hardware stack levels required when called: 1
 49304 ;; This function calls:
 49305 ;;		Nothing
 49306 ;; This function is called by:
 49307 ;;		_findEvent
 49308 ;;		_rebuildHashtable
 49309 ;; This function uses a non-reentrant model
 49310 ;;
 49311                           
 49312                           	psect	text158
 49313   016498                     __ptext158:
 49314                           	callstack 0
 49315   016498                     _getHash:
 49316                           	callstack 122
 49317                           
 49318                           ;../../VLCBlib_PIC/event_teach_simple.c: 994:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_simple.c: 996:     hash = (uint8_t)(nn ^ (nn >> 8U));
 49319                           
 49320                           ;incstack = 0
 49321   016498  5019               	movf	(getHash@nn+1)^(0+1280),w,c
 49322   01649A  1818               	xorwf	getHash@nn^(0+1280),w,c
 49323   01649C  6E1D               	movwf	getHash@hash^(0+1280),c
 49324                           
 49325                           ;../../VLCBlib_PIC/event_teach_simple.c: 997:     hash = (uint8_t)(7U*hash + (en ^ (en>>
      +                          8U)));
 49326   01649E  501B               	movf	(getHash@en+1)^(0+1280),w,c
 49327   0164A0  181A               	xorwf	getHash@en^(0+1280),w,c
 49328   0164A2  6E1C               	movwf	??_getHash^(0+1280),c
 49329   0164A4  501D               	movf	getHash@hash^(0+1280),w,c
 49330   0164A6  0D07               	mullw	7
 49331   0164A8  50F3               	movf	243,w,c
 49332   0164AA  241C               	addwf	??_getHash^(0+1280),w,c
 49333   0164AC  6E1D               	movwf	getHash@hash^(0+1280),c
 49334                           
 49335                           ;../../VLCBlib_PIC/event_teach_simple.c: 999:     hash %= 32;
 49336   0164AE  0E1F               	movlw	31
 49337   0164B0  161D               	andwf	getHash@hash^(0+1280),f,c
 49338                           
 49339                           ;../../VLCBlib_PIC/event_teach_simple.c: 1000:     return hash;
 49340   0164B2  501D               	movf	getHash@hash^(0+1280),w,c
 49341   0164B4  0012               	return		;funcret
 49342   0164B6                     __end_of_getHash:
 49343                           	callstack 0
 49344                           
 49345 ;; *************** function _getEN *****************
 49346 ;; Defined at:
 49347 ;;		line 939 in file "../../VLCBlib_PIC/event_teach_simple.c"
 49348 ;; Parameters:    Size  Location     Type
 49349 ;;  tableIndex      1    wreg     unsigned char 
 49350 ;; Auto vars:     Size  Location     Type
 49351 ;;  tableIndex      1   21[COMRAM] unsigned char 
 49352 ;;  lo              2   19[COMRAM] unsigned short 
 49353 ;;  hi              2   17[COMRAM] unsigned short 
 49354 ;; Return value:  Size  Location     Type
 49355 ;;                  2   12[COMRAM] unsigned short 
 49356 ;; Registers used:
 49357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49358 ;; Tracked objects:
 49359 ;;		On entry : 0/0
 49360 ;;		On exit  : 0/0
 49361 ;;		Unchanged: 0/0
 49362 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 49363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49364 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49365 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49366 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49367 ;;Total ram usage:       10 bytes
 49368 ;; Hardware stack levels used: 1
 49369 ;; Hardware stack levels required when called: 3
 49370 ;; This function calls:
 49371 ;;		_readNVM
 49372 ;; This function is called by:
 49373 ;;		_canpanSendProducedEvent
 49374 ;;		_doNnevn
 49375 ;;		_nerdCallback
 49376 ;;		_doNenrd
 49377 ;;		_doRqevn
 49378 ;;		_reqevCallback
 49379 ;;		_addEvent
 49380 ;;		_findEvent
 49381 ;;		_rebuildHashtable
 49382 ;; This function uses a non-reentrant model
 49383 ;;
 49384                           
 49385                           	psect	text159
 49386   0150E0                     __ptext159:
 49387                           	callstack 0
 49388   0150E0                     _getEN:
 49389                           	callstack 120
 49390                           
 49391                           ;incstack = 0
 49392                           ;getEN@tableIndex stored from wreg
 49393   0150E0  6E16               	movwf	getEN@tableIndex^(0+1280),c
 49394                           
 49395                           ;../../VLCBlib_PIC/event_teach_simple.c: 940:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_simple.c: 941:     uint16_t lo;;../../VLCBlib_PIC/event_teach_simple.c: 943:     lo
      +                           = (uint8_t)readNVM(FLASH_NVM_TYPE, 0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+3);
 49396   0150E2  5016               	movf	getEN@tableIndex^(0+1280),w,c
 49397   0150E4  0D12               	mullw	18
 49398   0150E6  C4F3 F50F          	movff	prodl,??_getEN
 49399   0150EA  C4F4 F510          	movff	prodh,??_getEN+1
 49400   0150EE  6A11               	clrf	(??_getEN+2)^(0+1280),c
 49401   0150F0  0E03               	movlw	3
 49402   0150F2  240F               	addwf	??_getEN^(0+1280),w,c
 49403   0150F4  6E07               	movwf	readNVM@index^(0+1280),c
 49404   0150F6  0EE8               	movlw	232
 49405   0150F8  2010               	addwfc	(??_getEN+1)^(0+1280),w,c
 49406   0150FA  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 49407   0150FC  0E01               	movlw	1
 49408   0150FE  2011               	addwfc	(??_getEN+2)^(0+1280),w,c
 49409   015100  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 49410   015102  0E01               	movlw	1
 49411   015104  EC42  F0AB         	call	_readNVM
 49412   015108  5007               	movf	?_readNVM^(0+1280),w,c
 49413   01510A  6E14               	movwf	getEN@lo^(0+1280),c
 49414   01510C  6A15               	clrf	(getEN@lo+1)^(0+1280),c
 49415                           
 49416                           ;../../VLCBlib_PIC/event_teach_simple.c: 944:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+2);
 49417   01510E  5016               	movf	getEN@tableIndex^(0+1280),w,c
 49418   015110  0D12               	mullw	18
 49419   015112  C4F3 F50F          	movff	prodl,??_getEN
 49420   015116  C4F4 F510          	movff	prodh,??_getEN+1
 49421   01511A  6A11               	clrf	(??_getEN+2)^(0+1280),c
 49422   01511C  0E02               	movlw	2
 49423   01511E  240F               	addwf	??_getEN^(0+1280),w,c
 49424   015120  6E07               	movwf	readNVM@index^(0+1280),c
 49425   015122  0EE8               	movlw	232
 49426   015124  2010               	addwfc	(??_getEN+1)^(0+1280),w,c
 49427   015126  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 49428   015128  0E01               	movlw	1
 49429   01512A  2011               	addwfc	(??_getEN+2)^(0+1280),w,c
 49430   01512C  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 49431   01512E  0E01               	movlw	1
 49432   015130  EC42  F0AB         	call	_readNVM
 49433   015134  5007               	movf	?_readNVM^(0+1280),w,c
 49434   015136  6E12               	movwf	getEN@hi^(0+1280),c
 49435   015138  6A13               	clrf	(getEN@hi+1)^(0+1280),c
 49436                           
 49437                           ;../../VLCBlib_PIC/event_teach_simple.c: 945:     return lo | (hi << 8);
 49438   01513A  5012               	movf	getEN@hi^(0+1280),w,c
 49439   01513C  6E10               	movwf	(??_getEN+1)^(0+1280),c
 49440   01513E  6A0F               	clrf	??_getEN^(0+1280),c
 49441   015140  5014               	movf	getEN@lo^(0+1280),w,c
 49442   015142  100F               	iorwf	??_getEN^(0+1280),w,c
 49443   015144  6E0D               	movwf	?_getEN^(0+1280),c
 49444   015146  5015               	movf	(getEN@lo+1)^(0+1280),w,c
 49445   015148  1010               	iorwf	(??_getEN+1)^(0+1280),w,c
 49446   01514A  6E0E               	movwf	(?_getEN+1)^(0+1280),c
 49447   01514C  0012               	return		;funcret
 49448   01514E                     __end_of_getEN:
 49449                           	callstack 0
 49450                           
 49451 ;; *************** function _readNVM *****************
 49452 ;; Defined at:
 49453 ;;		line 570 in file "../../VLCBlib_PIC/nvm.c"
 49454 ;; Parameters:    Size  Location     Type
 49455 ;;  type            1    wreg     enum E23276
 49456 ;;  index           3    6[COMRAM] unsigned um
 49457 ;; Auto vars:     Size  Location     Type
 49458 ;;  type            1   11[COMRAM] enum E23276
 49459 ;; Return value:  Size  Location     Type
 49460 ;;                  2    6[COMRAM] short 
 49461 ;; Registers used:
 49462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 49463 ;; Tracked objects:
 49464 ;;		On entry : 0/0
 49465 ;;		On exit  : 0/0
 49466 ;;		Unchanged: 0/0
 49467 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 49468 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49470 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49471 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49472 ;;Total ram usage:        6 bytes
 49473 ;; Hardware stack levels used: 1
 49474 ;; Hardware stack levels required when called: 2
 49475 ;; This function calls:
 49476 ;;		_EEPROM_Read
 49477 ;;		_FLASH_Read
 49478 ;; This function is called by:
 49479 ;;		_initInputs
 49480 ;;		_initLeds
 49481 ;;		_bootPowerUp
 49482 ;;		_canPowerUp
 49483 ;;		_getEv
 49484 ;;		_getEVs
 49485 ;;		_getNN
 49486 ;;		_getEN
 49487 ;;		_mnsPowerUp
 49488 ;;		_loadNvCache
 49489 ;;		_main
 49490 ;; This function uses a non-reentrant model
 49491 ;;
 49492                           
 49493                           	psect	text160
 49494   015684                     __ptext160:
 49495                           	callstack 0
 49496   015684                     _readNVM:
 49497                           	callstack 122
 49498                           
 49499                           ;incstack = 0
 49500                           ;readNVM@type stored from wreg
 49501   015684  6E0C               	movwf	readNVM@type^(0+1280),c
 49502                           
 49503                           ;../../VLCBlib_PIC/nvm.c: 571:     switch(type) {
 49504   015686  D01E               	goto	l8107
 49505   015688                     l8093:
 49506                           
 49507                           ;../../VLCBlib_PIC/nvm.c: 573:             return EEPROM_Read((uint16_t)index);
 49508   015688  C507  F501         	movff	readNVM@index,EEPROM_Read@index
 49509   01568C  C508  F502         	movff	readNVM@index+1,EEPROM_Read@index+1
 49510   015690  6A03               	clrf	(EEPROM_Read@index+2)^(0+1280),c
 49511   015692  EC66  F0AF         	call	_EEPROM_Read	;wreg free
 49512   015696  6E0A               	movwf	??_readNVM^(0+1280),c
 49513   015698  500A               	movf	??_readNVM^(0+1280),w,c
 49514   01569A  6E07               	movwf	?_readNVM^(0+1280),c
 49515   01569C  6A08               	clrf	(?_readNVM+1)^(0+1280),c
 49516   01569E  0012               	return	
 49517   0156A0                     l8097:
 49518                           
 49519                           ;../../VLCBlib_PIC/nvm.c: 579:             return FLASH_Read(index);
 49520   0156A0  C507  F501         	movff	readNVM@index,FLASH_Read@address
 49521   0156A4  C508  F502         	movff	readNVM@index+1,FLASH_Read@address+1
 49522   0156A8  C509  F503         	movff	readNVM@index+2,FLASH_Read@address+2
 49523   0156AC  ECDD  F0A8         	call	_FLASH_Read	;wreg free
 49524   0156B0  6E0A               	movwf	??_readNVM^(0+1280),c
 49525   0156B2  500A               	movf	??_readNVM^(0+1280),w,c
 49526   0156B4  6E07               	movwf	?_readNVM^(0+1280),c
 49527   0156B6  6A08               	clrf	(?_readNVM+1)^(0+1280),c
 49528   0156B8  0012               	return	
 49529   0156BA                     l8101:
 49530                           
 49531                           ;../../VLCBlib_PIC/nvm.c: 582:             return -GRSP_UNKNOWN_NVM_TYPE;
 49532   0156BA  0EFF               	movlw	255
 49533   0156BC  6E08               	movwf	(?_readNVM+1)^(0+1280),c
 49534   0156BE  0E02               	movlw	2
 49535   0156C0  6E07               	movwf	?_readNVM^(0+1280),c
 49536   0156C2  0012               	return	
 49537   0156C4                     l8107:
 49538   0156C4  500C               	movf	readNVM@type^(0+1280),w,c
 49539   0156C6  6E0A               	movwf	??_readNVM^(0+1280),c
 49540   0156C8  6A0B               	clrf	(??_readNVM+1)^(0+1280),c
 49541                           
 49542                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 49543                           ; Switch size 1, requested type "simple"
 49544                           ; Number of cases is 1, Range of values is 0 to 0
 49545                           ; switch strategies available:
 49546                           ; Name         Instructions Cycles
 49547                           ; simple_byte            4     3 (average)
 49548                           ;	Chosen strategy is simple_byte
 49549   0156CA  500B               	movf	(??_readNVM+1)^(0+1280),w,c
 49550   0156CC  0A00               	xorlw	0	; case 0
 49551   0156CE  A4D8               	btfss	status,2,c
 49552   0156D0  D7F4               	goto	l8101
 49553                           
 49554                           ; Switch size 1, requested type "simple"
 49555                           ; Number of cases is 2, Range of values is 0 to 1
 49556                           ; switch strategies available:
 49557                           ; Name         Instructions Cycles
 49558                           ; simple_byte            7     4 (average)
 49559                           ;	Chosen strategy is simple_byte
 49560   0156D2  500A               	movf	??_readNVM^(0+1280),w,c
 49561   0156D4  0A00               	xorlw	0	; case 0
 49562   0156D6  B4D8               	btfsc	status,2,c
 49563   0156D8  D7D7               	goto	l8093
 49564   0156DA  0A01               	xorlw	1	; case 1
 49565   0156DC  B4D8               	btfsc	status,2,c
 49566   0156DE  D7E0               	goto	l8097
 49567   0156E0  D7EC               	goto	l8101
 49568   0156E2                     __end_of_readNVM:
 49569                           	callstack 0
 49570                           
 49571 ;; *************** function _FLASH_Read *****************
 49572 ;; Defined at:
 49573 ;;		line 315 in file "../../VLCBlib_PIC/nvm.c"
 49574 ;; Parameters:    Size  Location     Type
 49575 ;;  address         3    0[COMRAM] unsigned um
 49576 ;; Auto vars:     Size  Location     Type
 49577 ;;		None
 49578 ;; Return value:  Size  Location     Type
 49579 ;;                  1    wreg      unsigned char 
 49580 ;; Registers used:
 49581 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49582 ;; Tracked objects:
 49583 ;;		On entry : 0/0
 49584 ;;		On exit  : 0/0
 49585 ;;		Unchanged: 0/0
 49586 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 49587 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49589 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49590 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49591 ;;Total ram usage:        6 bytes
 49592 ;; Hardware stack levels used: 1
 49593 ;; Hardware stack levels required when called: 1
 49594 ;; This function calls:
 49595 ;;		Nothing
 49596 ;; This function is called by:
 49597 ;;		_readNVM
 49598 ;; This function uses a non-reentrant model
 49599 ;;
 49600                           
 49601                           	psect	text161
 49602   0151BA                     __ptext161:
 49603                           	callstack 0
 49604   0151BA                     _FLASH_Read:
 49605                           	callstack 122
 49606                           
 49607                           ;../../VLCBlib_PIC/nvm.c: 317:     if ((address&(~((flash_address_t)(256U)-1))) == flash
      +                          Block) {
 49608                           
 49609                           ;incstack = 0
 49610   0151BA  0E00               	movlw	0
 49611   0151BC  1401               	andwf	FLASH_Read@address^(0+1280),w,c
 49612   0151BE  6E04               	movwf	??_FLASH_Read^(0+1280),c
 49613   0151C0  0EFF               	movlw	255
 49614   0151C2  1402               	andwf	(FLASH_Read@address+1)^(0+1280),w,c
 49615   0151C4  6E05               	movwf	(??_FLASH_Read+1)^(0+1280),c
 49616   0151C6  0EFF               	movlw	255
 49617   0151C8  1403               	andwf	(FLASH_Read@address+2)^(0+1280),w,c
 49618   0151CA  6E06               	movwf	(??_FLASH_Read+2)^(0+1280),c
 49619   0151CC  0105               	movlb	5	; () banked
 49620   0151CE  5177               	movf	_flashBlock& (0+255),w,b
 49621   0151D0  1804               	xorwf	??_FLASH_Read^(0+1280),w,c
 49622   0151D2  E115               	bnz	l1902
 49623   0151D4  5178               	movf	(_flashBlock+1)& (0+255),w,b
 49624   0151D6  1805               	xorwf	(??_FLASH_Read+1)^(0+1280),w,c
 49625   0151D8  E112               	bnz	l1902
 49626   0151DA  5179               	movf	(_flashBlock+2)& (0+255),w,b
 49627   0151DC  1806               	xorwf	(??_FLASH_Read+2)^(0+1280),w,c
 49628   0151DE  A4D8               	btfss	status,2,c
 49629   0151E0  D00E               	goto	l1902
 49630                           
 49631                           ; BSR set to: 5
 49632                           ;../../VLCBlib_PIC/nvm.c: 319:         return flashBuffer[(address&((256U)-1))];
 49633   0151E2  0EFF               	movlw	255
 49634   0151E4  1401               	andwf	FLASH_Read@address^(0+1280),w,c
 49635   0151E6  6E04               	movwf	??_FLASH_Read^(0+1280),c
 49636   0151E8  0E00               	movlw	0
 49637   0151EA  1402               	andwf	(FLASH_Read@address+1)^(0+1280),w,c
 49638   0151EC  6E05               	movwf	(??_FLASH_Read+1)^(0+1280),c
 49639   0151EE  0E00               	movlw	0
 49640   0151F0  2404               	addwf	??_FLASH_Read^(0+1280),w,c
 49641   0151F2  6ED9               	movwf	fsr2l,c
 49642   0151F4  0E37               	movlw	55
 49643   0151F6  2005               	addwfc	(??_FLASH_Read+1)^(0+1280),w,c
 49644   0151F8  6EDA               	movwf	fsr2h,c
 49645   0151FA  50DF               	movf	indf2,w,c
 49646   0151FC  0012               	return	
 49647   0151FE                     l1902:
 49648                           
 49649                           ; BSR set to: 5
 49650                           ;../../VLCBlib_PIC/nvm.c: 329:         TBLPTRU = (uint8_t) (address >> 16);
 49651   0151FE  C503  F4F8         	movff	FLASH_Read@address+2,tblptru	;volatile
 49652                           
 49653                           ; BSR set to: 5
 49654                           ;../../VLCBlib_PIC/nvm.c: 330:         TBLPTRH = (uint8_t) (address >> 8);
 49655   015202  C501  F504         	movff	FLASH_Read@address,??_FLASH_Read
 49656   015206  C502  F505         	movff	FLASH_Read@address+1,??_FLASH_Read+1
 49657   01520A  C503  F506         	movff	FLASH_Read@address+2,??_FLASH_Read+2
 49658   01520E  C505  F504         	movff	??_FLASH_Read+1,??_FLASH_Read
 49659   015212  C506  F505         	movff	??_FLASH_Read+2,??_FLASH_Read+1
 49660   015216  6A06               	clrf	(??_FLASH_Read+2)^(0+1280),c
 49661   015218  5004               	movf	??_FLASH_Read^(0+1280),w,c
 49662   01521A  6EF7               	movwf	247,c	;volatile
 49663                           
 49664                           ; BSR set to: 5
 49665                           ;../../VLCBlib_PIC/nvm.c: 331:         TBLPTRL = (uint8_t) address;
 49666   01521C  C501  F4F6         	movff	FLASH_Read@address,tblptrl	;volatile
 49667   015220  0008               	tblrd		*	;# 
 49668                           
 49669                           ;../../VLCBlib_PIC/nvm.c: 335:         return TABLAT;
 49670   015222  50F5               	movf	245,w,c	;volatile
 49671   015224  0012               	return		;funcret
 49672   015226                     __end_of_FLASH_Read:
 49673                           	callstack 0
 49674                           
 49675 ;; *************** function _EEPROM_Read *****************
 49676 ;; Defined at:
 49677 ;;		line 171 in file "../../VLCBlib_PIC/nvm.c"
 49678 ;; Parameters:    Size  Location     Type
 49679 ;;  index           3    0[COMRAM] unsigned um
 49680 ;; Auto vars:     Size  Location     Type
 49681 ;;		None
 49682 ;; Return value:  Size  Location     Type
 49683 ;;                  1    wreg      unsigned char 
 49684 ;; Registers used:
 49685 ;;		wreg, status,2
 49686 ;; Tracked objects:
 49687 ;;		On entry : 0/0
 49688 ;;		On exit  : 0/0
 49689 ;;		Unchanged: 0/0
 49690 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 49691 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49693 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49694 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49695 ;;Total ram usage:        6 bytes
 49696 ;; Hardware stack levels used: 1
 49697 ;; Hardware stack levels required when called: 1
 49698 ;; This function calls:
 49699 ;;		Nothing
 49700 ;; This function is called by:
 49701 ;;		_EEPROM_Write
 49702 ;;		_readNVM
 49703 ;; This function uses a non-reentrant model
 49704 ;;
 49705                           
 49706                           	psect	text162
 49707   015ECC                     __ptext162:
 49708                           	callstack 0
 49709   015ECC                     _EEPROM_Read:
 49710                           	callstack 122
 49711                           
 49712                           ;../../VLCBlib_PIC/nvm.c: 191:     while (NVMCON0bits.GO)
 49713                           
 49714                           ;../../VLCBlib_PIC/nvm.c: 192:         ;
 49715                           
 49716                           ;incstack = 0
 49717   015ECC  0100               	movlb	0	; () banked
 49718   015ECE  B140               	btfsc	64,0,b	;volatile
 49719   015ED0  D7FD               	goto	__ptext162
 49720                           
 49721                           ; BSR set to: 0
 49722                           ;../../VLCBlib_PIC/nvm.c: 194:     NVMADRU = 0x38;
 49723   015ED2  0E38               	movlw	56
 49724   015ED4  6F45               	movwf	69,b	;volatile
 49725                           
 49726                           ;../../VLCBlib_PIC/nvm.c: 195:     NVMADRH = (uint8_t) (index >> 8);
 49727   015ED6  C501  F504         	movff	EEPROM_Read@index,??_EEPROM_Read
 49728   015EDA  C502  F505         	movff	EEPROM_Read@index+1,??_EEPROM_Read+1
 49729   015EDE  C503  F506         	movff	EEPROM_Read@index+2,??_EEPROM_Read+2
 49730   015EE2  C505  F504         	movff	??_EEPROM_Read+1,??_EEPROM_Read
 49731   015EE6  C506  F505         	movff	??_EEPROM_Read+2,??_EEPROM_Read+1
 49732   015EEA  6A06               	clrf	(??_EEPROM_Read+2)^(0+1280),c
 49733   015EEC  5004               	movf	??_EEPROM_Read^(0+1280),w,c
 49734   015EEE  6F44               	movwf	68,b	;volatile
 49735                           
 49736                           ; BSR set to: 0
 49737                           ;../../VLCBlib_PIC/nvm.c: 196:     NVMADRL = (uint8_t) index;
 49738   015EF0  C501  F043         	movff	EEPROM_Read@index,67	;volatile
 49739                           
 49740                           ;../../VLCBlib_PIC/nvm.c: 199:     NVMCON1bits.NVMCMD = 0x00;
 49741   015EF4  0EF8               	movlw	-8
 49742   015EF6  1741               	andwf	65,f,b	;volsfr
 49743                           
 49744                           ; BSR set to: 0
 49745                           ;../../VLCBlib_PIC/nvm.c: 202:     NVMCON0bits.GO = 1;
 49746   015EF8  8140               	bsf	64,0,b	;volatile
 49747   015EFA                     l1883:
 49748                           
 49749                           ; BSR set to: 0
 49750                           ;../../VLCBlib_PIC/nvm.c: 203:     while (NVMCON0bits.GO)
 49751   015EFA  B140               	btfsc	64,0,b	;volatile
 49752   015EFC  D7FE               	goto	l1883
 49753                           
 49754                           ; BSR set to: 0
 49755                           ;../../VLCBlib_PIC/nvm.c: 207:     NVMCON1bits.NVMCMD = 0x07;
 49756   015EFE  0E07               	movlw	7
 49757   015F00  1341               	iorwf	65,f,b	;volsfr
 49758                           
 49759                           ;../../VLCBlib_PIC/nvm.c: 208:     return NVMDATL;
 49760   015F02  5146               	movf	70,w,b	;volatile
 49761                           
 49762                           ; BSR set to: 0
 49763   015F04  0012               	return		;funcret
 49764   015F06                     __end_of_EEPROM_Read:
 49765                           	callstack 0
 49766                           
 49767 ;; *************** function _receiveOverrun *****************
 49768 ;; Defined at:
 49769 ;;		line 368 in file "../../VLCBlib_PIC/can18_can_2.c"
 49770 ;; Parameters:    Size  Location     Type
 49771 ;;		None
 49772 ;; Auto vars:     Size  Location     Type
 49773 ;;		None
 49774 ;; Return value:  Size  Location     Type
 49775 ;;                  1    wreg      void 
 49776 ;; Registers used:
 49777 ;;		status,2, status,0
 49778 ;; Tracked objects:
 49779 ;;		On entry : 0/0
 49780 ;;		On exit  : 0/0
 49781 ;;		Unchanged: 0/0
 49782 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 49783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49787 ;;Total ram usage:        0 bytes
 49788 ;; Hardware stack levels used: 1
 49789 ;; This function calls:
 49790 ;;		Nothing
 49791 ;; This function is called by:
 49792 ;;		Interrupt level 2
 49793 ;; This function uses a non-reentrant model
 49794 ;;
 49795                           
 49796                           	psect	text163
 49797   016478                     __ptext163:
 49798                           	callstack 0
 49799   016478                     _receiveOverrun:
 49800                           	callstack 113
 49801                           
 49802                           ;../../VLCBlib_PIC/can18_can_2.c: 369:     if (C1FIFOSTA3Lbits.RXOVIF == 1) {
 49803                           
 49804                           ; BSR set to: 0
 49805                           ;incstack = 0
 49806   016478  0101               	movlb	1	; () banked
 49807   01647A  A778               	btfss	120,3,b	;volatile
 49808   01647C  D005               	goto	i2l12451
 49809                           
 49810                           ; BSR set to: 1
 49811                           ;../../VLCBlib_PIC/can18_can_2.c: 371:         canDiagnostics[0x08].asUint++;
 49812   01647E  0106               	movlb	6	; () banked
 49813   016480  4BB2               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 49814   016482  2BB3               	incf	(_canDiagnostics+17)& (0+255),f,b
 49815                           
 49816                           ; BSR set to: 6
 49817                           ;../../VLCBlib_PIC/can18_can_2.c: 373:         C1FIFOSTA3Lbits.RXOVIF = 0;
 49818   016484  0101               	movlb	1	; () banked
 49819   016486  9778               	bcf	120,3,b	;volatile
 49820   016488                     i2l12451:
 49821                           
 49822                           ; BSR set to: 1
 49823                           ;../../VLCBlib_PIC/can18_can_2.c: 375:     if (C1INTHbits.IVMIF == 1) {
 49824   016488  AF1D               	btfss	29,7,b	;volatile
 49825   01648A  0011               	retfie		f
 49826                           
 49827                           ; BSR set to: 1
 49828                           ;../../VLCBlib_PIC/can18_can_2.c: 377:         canDiagnostics[0x01].asUint++;
 49829   01648C  0106               	movlb	6	; () banked
 49830   01648E  4BA4               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 49831   016490  2BA5               	incf	(_canDiagnostics+3)& (0+255),f,b
 49832                           
 49833                           ; BSR set to: 6
 49834                           ;../../VLCBlib_PIC/can18_can_2.c: 379:         C1INTHbits.IVMIF = 0;
 49835   016492  0101               	movlb	1	; () banked
 49836   016494  9F1D               	bcf	29,7,b	;volatile
 49837                           
 49838                           ; BSR set to: 1
 49839   016496  0011               	retfie		f
 49840   016498                     __end_of_receiveOverrun:
 49841                           	callstack 0
 49842                           
 49843 ;; *************** function _TMR0_ISR *****************
 49844 ;; Defined at:
 49845 ;;		line 201 in file "../../VLCBlib_PIC/ticktime.c"
 49846 ;; Parameters:    Size  Location     Type
 49847 ;;		None
 49848 ;; Auto vars:     Size  Location     Type
 49849 ;;		None
 49850 ;; Return value:  Size  Location     Type
 49851 ;;                  1    wreg      void 
 49852 ;; Registers used:
 49853 ;;		wreg, status,2, status,0
 49854 ;; Tracked objects:
 49855 ;;		On entry : 0/0
 49856 ;;		On exit  : 0/0
 49857 ;;		Unchanged: 0/0
 49858 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 49859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49863 ;;Total ram usage:        0 bytes
 49864 ;; Hardware stack levels used: 1
 49865 ;; This function calls:
 49866 ;;		Nothing
 49867 ;; This function is called by:
 49868 ;;		Interrupt level 2
 49869 ;; This function uses a non-reentrant model
 49870 ;;
 49871                           
 49872                           	psect	text164
 49873   0165C4                     __ptext164:
 49874                           	callstack 0
 49875   0165C4                     _TMR0_ISR:
 49876                           	callstack 113
 49877                           
 49878                           ;../../VLCBlib_PIC/ticktime.c: 205:     if(TMR0IF) {
 49879                           
 49880                           ; BSR set to: 1
 49881                           ;incstack = 0
 49882   0165C4  AEB1               	btfss	1201,7,c	;volatile
 49883   0165C6  0011               	retfie		f
 49884                           
 49885                           ;../../VLCBlib_PIC/ticktime.c: 207:         TMR0IF = 0;
 49886   0165C8  9EB1               	bcf	1201,7,c	;volatile
 49887                           
 49888                           ;../../VLCBlib_PIC/ticktime.c: 208:         timerExtension1++;
 49889   0165CA  0105               	movlb	5	; () banked
 49890   0165CC  2B89               	incf	_timerExtension1& (0+255),f,b	;volatile
 49891                           
 49892                           ; BSR set to: 5
 49893                           ;../../VLCBlib_PIC/ticktime.c: 209:         if(timerExtension1 == 0) {
 49894   0165CE  5189               	movf	_timerExtension1& (0+255),w,b	;volatile
 49895   0165D0  A4D8               	btfss	status,2,c
 49896   0165D2  0011               	retfie		f
 49897                           
 49898                           ; BSR set to: 5
 49899                           ;../../VLCBlib_PIC/ticktime.c: 210:             timerExtension2++;
 49900   0165D4  2B88               	incf	_timerExtension2& (0+255),f,b	;volatile
 49901   0165D6  0011               	retfie		f
 49902   0165D8                     __end_of_TMR0_ISR:
 49903                           	callstack 0
 49904                           
 49905 ;; *************** function _DEFAULT_ISR *****************
 49906 ;; Defined at:
 49907 ;;		line 1364 in file "../../VLCBlib_PIC/vlcb.c"
 49908 ;; Parameters:    Size  Location     Type
 49909 ;;		None
 49910 ;; Auto vars:     Size  Location     Type
 49911 ;;		None
 49912 ;; Return value:  Size  Location     Type
 49913 ;;                  1    wreg      void 
 49914 ;; Registers used:
 49915 ;;		None
 49916 ;; Tracked objects:
 49917 ;;		On entry : 0/0
 49918 ;;		On exit  : 0/0
 49919 ;;		Unchanged: 0/0
 49920 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 49921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49925 ;;Total ram usage:        0 bytes
 49926 ;; Hardware stack levels used: 1
 49927 ;; This function calls:
 49928 ;;		Nothing
 49929 ;; This function is called by:
 49930 ;;		Interrupt level 2
 49931 ;; This function uses a non-reentrant model
 49932 ;;
 49933                           
 49934                           	psect	text165
 49935   016658                     __ptext165:
 49936                           	callstack 0
 49937   016658                     _DEFAULT_ISR:
 49938                           	callstack 113
 49939                           
 49940                           ;incstack = 0
 49941   016658  0011               	retfie		f
 49942   01665A                     __end_of_DEFAULT_ISR:
 49943                           	callstack 0
 49944                           
 49945                           ;
 49946                           ; H/W Interrupt Vector Table @ 0x900
 49947                           ;
 49948                           
 49949                           	psect	ivt0x900
 49950   000900                     __pivt0x900:
 49951                           	callstack 0
 49952   000900                     ivt0x900_base:
 49953                           	callstack 0
 49954                           
 49955                           ; Vector 0 : SWINT
 49956   000900  5996               	dw	_DEFAULT_ISR shr (0+2)
 49957                           
 49958                           ; Vector 1 : HLVD
 49959   000902  5996               	dw	_DEFAULT_ISR shr (0+2)
 49960                           
 49961                           ; Vector 2 : OSF
 49962   000904  5996               	dw	_DEFAULT_ISR shr (0+2)
 49963                           
 49964                           ; Vector 3 : CSW
 49965   000906  5996               	dw	_DEFAULT_ISR shr (0+2)
 49966                           
 49967                           ; Vector 4 : TU16A
 49968   000908  5996               	dw	_DEFAULT_ISR shr (0+2)
 49969                           
 49970                           ; Vector 5 : CLC1
 49971   00090A  5996               	dw	_DEFAULT_ISR shr (0+2)
 49972                           
 49973                           ; Vector 6 : CAN
 49974   00090C  591E               	dw	_receiveOverrun shr (0+2)
 49975                           
 49976                           ; Vector 7 : IOC
 49977   00090E  5996               	dw	_DEFAULT_ISR shr (0+2)
 49978                           
 49979                           ; Vector 8 : INT0
 49980   000910  5996               	dw	_DEFAULT_ISR shr (0+2)
 49981                           
 49982                           ; Vector 9 : ZCD
 49983   000912  5996               	dw	_DEFAULT_ISR shr (0+2)
 49984                           
 49985                           ; Vector 10 : AD
 49986   000914  5996               	dw	_DEFAULT_ISR shr (0+2)
 49987                           
 49988                           ; Vector 11 : ACT
 49989   000916  5996               	dw	_DEFAULT_ISR shr (0+2)
 49990                           
 49991                           ; Vector 12 : CM1
 49992   000918  5996               	dw	_DEFAULT_ISR shr (0+2)
 49993                           
 49994                           ; Vector 13 : SMT1
 49995   00091A  5996               	dw	_DEFAULT_ISR shr (0+2)
 49996                           
 49997                           ; Vector 14 : SMT1PRA
 49998   00091C  5996               	dw	_DEFAULT_ISR shr (0+2)
 49999                           
 50000                           ; Vector 15 : SMT1PWA
 50001   00091E  5996               	dw	_DEFAULT_ISR shr (0+2)
 50002                           
 50003                           ; Vector 16 : ADCH1
 50004   000920  5996               	dw	_DEFAULT_ISR shr (0+2)
 50005                           
 50006                           ; Vector 17 : ADCH2
 50007   000922  5996               	dw	_DEFAULT_ISR shr (0+2)
 50008                           
 50009                           ; Vector 18 : ADCH3
 50010   000924  5996               	dw	_DEFAULT_ISR shr (0+2)
 50011                           
 50012                           ; Vector 19 : ADCH4
 50013   000926  5996               	dw	_DEFAULT_ISR shr (0+2)
 50014                           
 50015                           ; Vector 20 : DMA1SCNT
 50016   000928  5996               	dw	_DEFAULT_ISR shr (0+2)
 50017                           
 50018                           ; Vector 21 : DMA1DCNT
 50019   00092A  5996               	dw	_DEFAULT_ISR shr (0+2)
 50020                           
 50021                           ; Vector 22 : DMA1OR
 50022   00092C  5996               	dw	_DEFAULT_ISR shr (0+2)
 50023                           
 50024                           ; Vector 23 : DMA1A
 50025   00092E  5996               	dw	_DEFAULT_ISR shr (0+2)
 50026                           
 50027                           ; Vector 24 : SPI1RX
 50028   000930  5996               	dw	_DEFAULT_ISR shr (0+2)
 50029                           
 50030                           ; Vector 25 : SPI1TX
 50031   000932  5996               	dw	_DEFAULT_ISR shr (0+2)
 50032                           
 50033                           ; Vector 26 : SPI1
 50034   000934  5996               	dw	_DEFAULT_ISR shr (0+2)
 50035                           
 50036                           ; Vector 27 : TMR2
 50037   000936  5996               	dw	_DEFAULT_ISR shr (0+2)
 50038                           
 50039                           ; Vector 28 : TMR1
 50040   000938  5996               	dw	_DEFAULT_ISR shr (0+2)
 50041                           
 50042                           ; Vector 29 : TMR1G
 50043   00093A  5996               	dw	_DEFAULT_ISR shr (0+2)
 50044                           
 50045                           ; Vector 30 : CCP1
 50046   00093C  5996               	dw	_DEFAULT_ISR shr (0+2)
 50047                           
 50048                           ; Vector 31 : TMR0
 50049   00093E  5971               	dw	_TMR0_ISR shr (0+2)
 50050                           
 50051                           ; Vector 32 : U1RX
 50052   000940  5996               	dw	_DEFAULT_ISR shr (0+2)
 50053                           
 50054                           ; Vector 33 : U1TX
 50055   000942  5996               	dw	_DEFAULT_ISR shr (0+2)
 50056                           
 50057                           ; Vector 34 : U1E
 50058   000944  5996               	dw	_DEFAULT_ISR shr (0+2)
 50059                           
 50060                           ; Vector 35 : U1
 50061   000946  5996               	dw	_DEFAULT_ISR shr (0+2)
 50062                           
 50063                           ; Vector 36 : CANRX
 50064   000948  5996               	dw	_DEFAULT_ISR shr (0+2)
 50065                           
 50066                           ; Vector 37 : CANTX
 50067   00094A  5996               	dw	_DEFAULT_ISR shr (0+2)
 50068                           
 50069                           ; Vector 38 : PWM1PR
 50070   00094C  5996               	dw	_DEFAULT_ISR shr (0+2)
 50071                           
 50072                           ; Vector 39 : PWM1
 50073   00094E  5996               	dw	_DEFAULT_ISR shr (0+2)
 50074                           
 50075                           ; Vector 40 : SPI2RX
 50076   000950  5996               	dw	_DEFAULT_ISR shr (0+2)
 50077                           
 50078                           ; Vector 41 : SPI2TX
 50079   000952  5996               	dw	_DEFAULT_ISR shr (0+2)
 50080                           
 50081                           ; Vector 42 : SPI2
 50082   000954  5996               	dw	_DEFAULT_ISR shr (0+2)
 50083                           
 50084                           ; Vector 43 : TU16B
 50085   000956  5996               	dw	_DEFAULT_ISR shr (0+2)
 50086                           
 50087                           ; Vector 44 : TMR3
 50088   000958  5996               	dw	_DEFAULT_ISR shr (0+2)
 50089                           
 50090                           ; Vector 45 : TMR3G
 50091   00095A  5996               	dw	_DEFAULT_ISR shr (0+2)
 50092                           
 50093                           ; Vector 46 : PWM2PR
 50094   00095C  5996               	dw	_DEFAULT_ISR shr (0+2)
 50095                           
 50096                           ; Vector 47 : PWM2
 50097   00095E  5996               	dw	_DEFAULT_ISR shr (0+2)
 50098                           
 50099                           ; Vector 48 : INT1
 50100   000960  5996               	dw	_DEFAULT_ISR shr (0+2)
 50101                           
 50102                           ; Vector 49 : CLC2
 50103   000962  5996               	dw	_DEFAULT_ISR shr (0+2)
 50104                           
 50105                           ; Vector 50 : CWG1
 50106   000964  5996               	dw	_DEFAULT_ISR shr (0+2)
 50107                           
 50108                           ; Vector 51 : NCO1
 50109   000966  5996               	dw	_DEFAULT_ISR shr (0+2)
 50110                           
 50111                           ; Vector 52 : DMA2SCNT
 50112   000968  5996               	dw	_DEFAULT_ISR shr (0+2)
 50113                           
 50114                           ; Vector 53 : DMA2DCNT
 50115   00096A  5996               	dw	_DEFAULT_ISR shr (0+2)
 50116                           
 50117                           ; Vector 54 : DMA2OR
 50118   00096C  5996               	dw	_DEFAULT_ISR shr (0+2)
 50119                           
 50120                           ; Vector 55 : DMA2A
 50121   00096E  5996               	dw	_DEFAULT_ISR shr (0+2)
 50122                           
 50123                           ; Vector 56 : I2C1RX
 50124   000970  5996               	dw	_DEFAULT_ISR shr (0+2)
 50125                           
 50126                           ; Vector 57 : I2C1TX
 50127   000972  5996               	dw	_DEFAULT_ISR shr (0+2)
 50128                           
 50129                           ; Vector 58 : I2C1
 50130   000974  5996               	dw	_DEFAULT_ISR shr (0+2)
 50131                           
 50132                           ; Vector 59 : I2C1E
 50133   000976  5996               	dw	_DEFAULT_ISR shr (0+2)
 50134                           
 50135                           ; Vector 60 : Undefined
 50136   000978  0280               	dw	ivt0x900_undefint shr (0+2)
 50137                           
 50138                           ; Vector 61 : CLC3
 50139   00097A  5996               	dw	_DEFAULT_ISR shr (0+2)
 50140                           
 50141                           ; Vector 62 : PWM3PR
 50142   00097C  5996               	dw	_DEFAULT_ISR shr (0+2)
 50143                           
 50144                           ; Vector 63 : PWM3
 50145   00097E  5996               	dw	_DEFAULT_ISR shr (0+2)
 50146                           
 50147                           ; Vector 64 : U2RX
 50148   000980  5996               	dw	_DEFAULT_ISR shr (0+2)
 50149                           
 50150                           ; Vector 65 : U2TX
 50151   000982  5996               	dw	_DEFAULT_ISR shr (0+2)
 50152                           
 50153                           ; Vector 66 : U2E
 50154   000984  5996               	dw	_DEFAULT_ISR shr (0+2)
 50155                           
 50156                           ; Vector 67 : U2
 50157   000986  5996               	dw	_DEFAULT_ISR shr (0+2)
 50158                           
 50159                           ; Vector 68 : TMR5
 50160   000988  5996               	dw	_DEFAULT_ISR shr (0+2)
 50161                           
 50162                           ; Vector 69 : TMR5G
 50163   00098A  5996               	dw	_DEFAULT_ISR shr (0+2)
 50164                           
 50165                           ; Vector 70 : CCP2
 50166   00098C  5996               	dw	_DEFAULT_ISR shr (0+2)
 50167                           
 50168                           ; Vector 71 : SCAN
 50169   00098E  5996               	dw	_DEFAULT_ISR shr (0+2)
 50170                           
 50171                           ; Vector 72 : U3RX
 50172   000990  5996               	dw	_DEFAULT_ISR shr (0+2)
 50173                           
 50174                           ; Vector 73 : U3TX
 50175   000992  5996               	dw	_DEFAULT_ISR shr (0+2)
 50176                           
 50177                           ; Vector 74 : U3E
 50178   000994  5996               	dw	_DEFAULT_ISR shr (0+2)
 50179                           
 50180                           ; Vector 75 : U3
 50181   000996  5996               	dw	_DEFAULT_ISR shr (0+2)
 50182                           
 50183                           ; Vector 76 : Undefined
 50184   000998  0280               	dw	ivt0x900_undefint shr (0+2)
 50185                           
 50186                           ; Vector 77 : CLC4
 50187   00099A  5996               	dw	_DEFAULT_ISR shr (0+2)
 50188                           
 50189                           ; Vector 78 : PWM4PR
 50190   00099C  5996               	dw	_DEFAULT_ISR shr (0+2)
 50191                           
 50192                           ; Vector 79 : PWM4
 50193   00099E  5996               	dw	_DEFAULT_ISR shr (0+2)
 50194                           
 50195                           ; Vector 80 : INT2
 50196   0009A0  5996               	dw	_DEFAULT_ISR shr (0+2)
 50197                           
 50198                           ; Vector 81 : CLC5
 50199   0009A2  5996               	dw	_DEFAULT_ISR shr (0+2)
 50200                           
 50201                           ; Vector 82 : CWG2
 50202   0009A4  5996               	dw	_DEFAULT_ISR shr (0+2)
 50203                           
 50204                           ; Vector 83 : NCO2
 50205   0009A6  5996               	dw	_DEFAULT_ISR shr (0+2)
 50206                           
 50207                           ; Vector 84 : DMA3SCNT
 50208   0009A8  5996               	dw	_DEFAULT_ISR shr (0+2)
 50209                           
 50210                           ; Vector 85 : DMA3DCNT
 50211   0009AA  5996               	dw	_DEFAULT_ISR shr (0+2)
 50212                           
 50213                           ; Vector 86 : DMA3OR
 50214   0009AC  5996               	dw	_DEFAULT_ISR shr (0+2)
 50215                           
 50216                           ; Vector 87 : DMA3A
 50217   0009AE  5996               	dw	_DEFAULT_ISR shr (0+2)
 50218                           
 50219                           ; Vector 88 : CCP3
 50220   0009B0  5996               	dw	_DEFAULT_ISR shr (0+2)
 50221                           
 50222                           ; Vector 89 : CLC6
 50223   0009B2  5996               	dw	_DEFAULT_ISR shr (0+2)
 50224                           
 50225                           ; Vector 90 : CWG3
 50226   0009B4  5996               	dw	_DEFAULT_ISR shr (0+2)
 50227                           
 50228                           ; Vector 91 : TMR4
 50229   0009B6  5996               	dw	_DEFAULT_ISR shr (0+2)
 50230                           
 50231                           ; Vector 92 : DMA4SCNT
 50232   0009B8  5996               	dw	_DEFAULT_ISR shr (0+2)
 50233                           
 50234                           ; Vector 93 : DMA4DCNT
 50235   0009BA  5996               	dw	_DEFAULT_ISR shr (0+2)
 50236                           
 50237                           ; Vector 94 : DMA4OR
 50238   0009BC  5996               	dw	_DEFAULT_ISR shr (0+2)
 50239                           
 50240                           ; Vector 95 : DMA4A
 50241   0009BE  5996               	dw	_DEFAULT_ISR shr (0+2)
 50242                           
 50243                           ; Vector 96 : U4RX
 50244   0009C0  5996               	dw	_DEFAULT_ISR shr (0+2)
 50245                           
 50246                           ; Vector 97 : U4TX
 50247   0009C2  5996               	dw	_DEFAULT_ISR shr (0+2)
 50248                           
 50249                           ; Vector 98 : U4E
 50250   0009C4  5996               	dw	_DEFAULT_ISR shr (0+2)
 50251                           
 50252                           ; Vector 99 : U4
 50253   0009C6  5996               	dw	_DEFAULT_ISR shr (0+2)
 50254                           
 50255                           ; Vector 100 : DMA5SCNT
 50256   0009C8  5996               	dw	_DEFAULT_ISR shr (0+2)
 50257                           
 50258                           ; Vector 101 : DMA5DCNT
 50259   0009CA  5996               	dw	_DEFAULT_ISR shr (0+2)
 50260                           
 50261                           ; Vector 102 : DMA5OR
 50262   0009CC  5996               	dw	_DEFAULT_ISR shr (0+2)
 50263                           
 50264                           ; Vector 103 : DMA5A
 50265   0009CE  5996               	dw	_DEFAULT_ISR shr (0+2)
 50266                           
 50267                           ; Vector 104 : U5RX
 50268   0009D0  5996               	dw	_DEFAULT_ISR shr (0+2)
 50269                           
 50270                           ; Vector 105 : U5TX
 50271   0009D2  5996               	dw	_DEFAULT_ISR shr (0+2)
 50272                           
 50273                           ; Vector 106 : U5E
 50274   0009D4  5996               	dw	_DEFAULT_ISR shr (0+2)
 50275                           
 50276                           ; Vector 107 : U5
 50277   0009D6  5996               	dw	_DEFAULT_ISR shr (0+2)
 50278                           
 50279                           ; Vector 108 : DMA6SCNT
 50280   0009D8  5996               	dw	_DEFAULT_ISR shr (0+2)
 50281                           
 50282                           ; Vector 109 : DMA6DCNT
 50283   0009DA  5996               	dw	_DEFAULT_ISR shr (0+2)
 50284                           
 50285                           ; Vector 110 : DMA6OR
 50286   0009DC  5996               	dw	_DEFAULT_ISR shr (0+2)
 50287                           
 50288                           ; Vector 111 : DMA6A
 50289   0009DE  5996               	dw	_DEFAULT_ISR shr (0+2)
 50290                           
 50291                           ; Vector 112 : Undefined
 50292   0009E0  0280               	dw	ivt0x900_undefint shr (0+2)
 50293                           
 50294                           ; Vector 113 : CLC7
 50295   0009E2  5996               	dw	_DEFAULT_ISR shr (0+2)
 50296                           
 50297                           ; Vector 114 : CM2
 50298   0009E4  5996               	dw	_DEFAULT_ISR shr (0+2)
 50299                           
 50300                           ; Vector 115 : NCO3
 50301   0009E6  5996               	dw	_DEFAULT_ISR shr (0+2)
 50302                           
 50303                           ; Vector 116 : DMA7SCNT
 50304   0009E8  5996               	dw	_DEFAULT_ISR shr (0+2)
 50305                           
 50306                           ; Vector 117 : DMA7DCNT
 50307   0009EA  5996               	dw	_DEFAULT_ISR shr (0+2)
 50308                           
 50309                           ; Vector 118 : DMA7OR
 50310   0009EC  5996               	dw	_DEFAULT_ISR shr (0+2)
 50311                           
 50312                           ; Vector 119 : DMA7A
 50313   0009EE  5996               	dw	_DEFAULT_ISR shr (0+2)
 50314                           
 50315                           ; Vector 120 : NVM
 50316   0009F0  5996               	dw	_DEFAULT_ISR shr (0+2)
 50317                           
 50318                           ; Vector 121 : CLC8
 50319   0009F2  5996               	dw	_DEFAULT_ISR shr (0+2)
 50320                           
 50321                           ; Vector 122 : CRC
 50322   0009F4  5996               	dw	_DEFAULT_ISR shr (0+2)
 50323                           
 50324                           ; Vector 123 : TMR6
 50325   0009F6  5996               	dw	_DEFAULT_ISR shr (0+2)
 50326                           
 50327                           ; Vector 124 : DMA8SCNT
 50328   0009F8  5996               	dw	_DEFAULT_ISR shr (0+2)
 50329                           
 50330                           ; Vector 125 : DMA8DCNT
 50331   0009FA  5996               	dw	_DEFAULT_ISR shr (0+2)
 50332                           
 50333                           ; Vector 126 : DMA8OR
 50334   0009FC  5996               	dw	_DEFAULT_ISR shr (0+2)
 50335                           
 50336                           ; Vector 127 : DMA8A
 50337   0009FE  5996               	dw	_DEFAULT_ISR shr (0+2)
 50338   000A00                     ivt0x900_undefint:
 50339                           	callstack 0
 50340   000A00  00FF               	reset	
 50341                           
 50342                           	psect	rparam
 50343   000001                     ___rparam_used  equ	1
 50344   000000                     ___param_bank   equ	0
 50345   000000                     __Lparam        equ	__Lrparam
 50346   000000                     __Hparam        equ	__Hrparam
 50347                           
 50348                           	psect	config
 50349                           
 50350                           ;Config register CONFIG1 @ 0x300000
 50351                           ;	External Oscillator Selection
 50352                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz
 50353                           ;	Reset Oscillator Selection
 50354                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
 50355   300000                     	org	3145728
 50356   300000  FA                 	db	250
 50357                           
 50358                           ;Config register CONFIG2 @ 0x300001
 50359                           ;	Clock out Enable bit
 50360                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 50361                           ;	PRLOCKED One-Way Set Enable bit
 50362                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 50363                           ;	Clock Switch Enable bit
 50364                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 50365                           ;	JTAG Enable bit
 50366                           ;	JTAGEN = OFF, Disable JTAG Boundary Scan mode, JTAG pins revert to user functions
 50367                           ;	Fail-Safe Clock Monitor Enable bit
 50368                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 50369                           ;	Fail-Safe Clock Monitor -Primary XTAL Enable bit
 50370                           ;	FCMENP = ON, FSCM timer will set FSCMP bit and OSFIF interrupt on Primary XTAL failure
 50371                           ;	Fail-Safe Clock Monitor -Secondary XTAL Enable bit
 50372                           ;	FCMENS = ON, FSCM timer will set FSCMS bit and OSFIF interrupt on Secondary XTAL failu
      +                          re
 50373   300001                     	org	3145729
 50374   300001  EF                 	db	239
 50375                           
 50376                           ;Config register CONFIG3 @ 0x300002
 50377                           ;	MCLR Enable bit
 50378                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 50379                           ;	Power-up timer selection bits
 50380                           ;	PWRTS = PWRT_64, PWRT set at 64ms
 50381                           ;	Multi-vector enable bit
 50382                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 50383                           ;	IVTLOCK bit One-way set enable bit
 50384                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 50385                           ;	Low Power BOR Enable bit
 50386                           ;	LPBOREN = OFF, Low-Power BOR disabled
 50387                           ;	Brown-out Reset Enable bits
 50388                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 50389   300002                     	org	3145730
 50390   300002  FD                 	db	253
 50391                           
 50392                           ;Config register CONFIG4 @ 0x300003
 50393                           ;	Brown-out Reset Voltage Selection bits
 50394                           ;	BORV = VBOR_2P7, Brown-out Reset Voltage (VBOR) set to 2.7V
 50395                           ;	ZCD Disable bit
 50396                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 50397                           ;	PPSLOCK bit One-Way Set Enable bit
 50398                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 50399                           ;	Stack Full/Underflow Reset Enable bit
 50400                           ;	STVREN = ON, Stack full/underflow will cause Reset
 50401                           ;	Low Voltage Programming Enable bit
 50402                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 50403                           ;	Extended Instruction Set Enable bit
 50404                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 50405   300003                     	org	3145731
 50406   300003  FD                 	db	253
 50407                           
 50408                           ;Config register CONFIG5 @ 0x300004
 50409                           ;	WDT Period selection bits
 50410                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 50411                           ;	WDT operating mode
 50412                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 50413   300004                     	org	3145732
 50414   300004  9F                 	db	159
 50415                           
 50416                           ;Config register CONFIG6 @ 0x300005
 50417                           ;	WDT Window Select bits
 50418                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 50419                           ;	WDT input clock selector
 50420                           ;	WDTCCS = SC, Software Control
 50421   300005                     	org	3145733
 50422   300005  FF                 	db	255
 50423                           
 50424                           ;Config register CONFIG7 @ 0x300006
 50425                           ;	Boot Block Size selection bits
 50426                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 50427                           ;	Boot Block enable bit
 50428                           ;	BBEN = ON, Boot block enabled
 50429                           ;	Storage Area Flash enable bit
 50430                           ;	SAFEN = OFF, SAF disabled
 50431                           ;	Background Debugger
 50432                           ;	DEBUG = 0x1, unprogrammed default
 50433   300006                     	org	3145734
 50434   300006  F7                 	db	247
 50435                           
 50436                           ;Config register CONFIG8 @ 0x300007
 50437                           ;	Boot Block Write Protection bit
 50438                           ;	WRTB = ON, Boot Block Write protected
 50439                           ;	Configuration Register Write Protection bit
 50440                           ;	WRTC = ON, Configuration registers Write protected
 50441                           ;	Data EEPROM Write Protection bit
 50442                           ;	WRTD = OFF, Data EEPROM not Write protected
 50443                           ;	SAF Write protection bit
 50444                           ;	WRTSAF = OFF, SAF not Write Protected
 50445                           ;	Application Block write protection bit
 50446                           ;	WRTAPP = OFF, Application Block not write protected
 50447   300007                     	org	3145735
 50448   300007  FC                 	db	252
 50449                           
 50450                           ;Config register CONFIG9 @ 0x300008
 50451                           ;	CRC on boot output pin selection
 50452                           ;	BOOTPINSEL = RC5, CRC on boot output pin is RC5
 50453                           ;	CRC on boot output pin enable bit
 50454                           ;	BPEN = OFF, CRC on boot output pin disabled
 50455                           ;	CRC on boot output pin open drain bit
 50456                           ;	ODCON = OFF, Pin drives both high-going and low-going signals
 50457   300008                     	org	3145736
 50458   300008  FF                 	db	255
 50459                           
 50460                           ;Config register CONFIG10 @ 0x300009
 50461                           ;	PFM and Data EEPROM Code Protection bit
 50462                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 50463   300009                     	org	3145737
 50464   300009  FF                 	db	255
 50465                           
 50466                           ;Config register CONFIG11 @ 0x30000A
 50467                           ;	CRC on boot scan enable for boot area
 50468                           ;	BOOTSCEN = OFF, CRC on boot will not include the boot area of program memory in its ca
      +                          lculation
 50469                           ;	CRC on boot Continue on Error for boot areas bit
 50470                           ;	BOOTCOE = HALT, CRC on boot will stop device if error is detected in boot areas
 50471                           ;	CRC on boot application code scan enable
 50472                           ;	APPSCEN = OFF, CRC on boot will not include the application area of program memory in 
      +                          its calculation
 50473                           ;	CRC on boot SAF area scan enable
 50474                           ;	SAFSCEN = OFF, CRC on boot will not include the SAF area of program memory in its calc
      +                          ulation
 50475                           ;	CRC on boot Data EEPROM scan enable
 50476                           ;	DATASCEN = OFF, CRC on boot will not include data EEPROM in its calculation
 50477                           ;	CRC on boot Config fuses scan enable
 50478                           ;	CFGSCEN = OFF, CRC on boot will not include the configuration fuses in its calculation
 50479                           ;	CRC on boot Continue on Error for non-boot areas bit
 50480                           ;	COE = HALT, CRC on boot will stop device if error is detected in non-boot areas
 50481                           ;	Boot on CRC Enable bit
 50482                           ;	BOOTPOR = OFF, CRC on boot will not run
 50483   30000A                     	org	3145738
 50484   30000A  FF                 	db	255
 50485                           
 50486                           ;Config register CONFIG12 @ 0x30000B
 50487                           ;	Boot Sector Polynomial for CRC on boot bits 31-24
 50488                           ;	BCRCPOLT = hFF, Bits 31:24 of BCRCPOL are 0xFF
 50489   30000B                     	org	3145739
 50490   30000B  FF                 	db	255
 50491                           
 50492                           ;Config register CONFIG13 @ 0x30000C
 50493                           ;	Boot Sector Polynomial for CRC on boot bits 23-16
 50494                           ;	BCRCPOLU = hFF, Bits 23:16 of BCRCPOL are 0xFF
 50495   30000C                     	org	3145740
 50496   30000C  FF                 	db	255
 50497                           
 50498                           ;Config register CONFIG14 @ 0x30000D
 50499                           ;	Boot Sector Polynomial for CRC on boot bits 15-8
 50500                           ;	BCRCPOLH = hFF, Bits 15:8 of BCRCPOL are 0xFF
 50501   30000D                     	org	3145741
 50502   30000D  FF                 	db	255
 50503                           
 50504                           ;Config register CONFIG15 @ 0x30000E
 50505                           ;	Boot Sector Polynomial for CRC on boot bits 7-0
 50506                           ;	BCRCPOLL = hFF, Bits 7:0 of BCRCPOL are 0xFF
 50507   30000E                     	org	3145742
 50508   30000E  FF                 	db	255
 50509                           
 50510                           ;Config register CONFIG16 @ 0x30000F
 50511                           ;	Boot Sector Seed for CRC on boot bits 31-24
 50512                           ;	BCRCSEEDT = hFF, Bits 31:24 of BCRCSEED are 0xFF
 50513   30000F                     	org	3145743
 50514   30000F  FF                 	db	255
 50515                           
 50516                           ;Config register CONFIG17 @ 0x300010
 50517                           ;	Boot Sector Seed for CRC on boot bits 23-16
 50518                           ;	BCRCSEEDU = hFF, Bits 23:16 of BCRCSEED are 0xFF
 50519   300010                     	org	3145744
 50520   300010  FF                 	db	255
 50521                           
 50522                           ;Config register CONFIG18 @ 0x300011
 50523                           ;	Boot Sector Seed for CRC on boot bits 15-8
 50524                           ;	BCRCSEEDH = hFF, Bits 15:8 of BCRCSEED are 0xFF
 50525   300011                     	org	3145745
 50526   300011  FF                 	db	255
 50527                           
 50528                           ;Config register CONFIG19 @ 0x300012
 50529                           ;	Boot Sector Seed for CRC on boot bits 7-0
 50530                           ;	BCRCSEEDL = hFF, Bits 7:0 of BCRCSEED are 0xFF
 50531   300012                     	org	3145746
 50532   300012  FF                 	db	255
 50533                           
 50534                           ;Config register CONFIG20 @ 0x300013
 50535                           ;	Boot Sector Expected Result for CRC on boot bits 31-24
 50536                           ;	BCRCEREST = hFF, Bits 31:24 of BCRCERES are 0xFF
 50537   300013                     	org	3145747
 50538   300013  FF                 	db	255
 50539                           
 50540                           ;Config register CONFIG21 @ 0x300014
 50541                           ;	Boot Sector Expected Result for CRC on boot bits 23-16
 50542                           ;	BCRCERESU = hFF, Bits 23:16 of BCRCERES are 0xFF
 50543   300014                     	org	3145748
 50544   300014  FF                 	db	255
 50545                           
 50546                           ;Config register CONFIG22 @ 0x300015
 50547                           ;	Boot Sector Expected Result for CRC on boot bits 15-8
 50548                           ;	BCRCERESH = hFF, Bits 15:8 of BCRCERES are 0xFF
 50549   300015                     	org	3145749
 50550   300015  FF                 	db	255
 50551                           
 50552                           ;Config register CONFIG23 @ 0x300016
 50553                           ;	Boot Sector Expected Result for CRC on boot bits 7-0
 50554                           ;	BCRCERESL = hFF, Bits 7:0 of BCRCERES are 0xFF
 50555   300016                     	org	3145750
 50556   300016  FF                 	db	255
 50557                           
 50558                           ;Config register CONFIG24 @ 0x300017
 50559                           ;	Non-Boot Sector Polynomial for CRC on boot bits 31-24
 50560                           ;	CRCPOLT = hFF, Bits 31:24 of CRCPOL are 0xFF
 50561   300017                     	org	3145751
 50562   300017  FF                 	db	255
 50563                           
 50564                           ;Config register CONFIG25 @ 0x300018
 50565                           ;	Non-Boot Sector Polynomial for CRC on boot bits 23-16
 50566                           ;	CRCPOLU = hFF, Bits 23:16 of CRCPOL are 0xFF
 50567   300018                     	org	3145752
 50568   300018  FF                 	db	255
 50569                           
 50570                           ;Config register CONFIG26 @ 0x300019
 50571                           ;	Non-Boot Sector Polynomial for CRC on boot bits 15-8
 50572                           ;	CRCPOLH = hFF, Bits 15:8 of CRCPOL are 0xFF
 50573   300019                     	org	3145753
 50574   300019  FF                 	db	255
 50575                           
 50576                           ;Config register CONFIG27 @ 0x30001A
 50577                           ;	Non-Boot Sector Polynomial for CRC on boot bits 7-0
 50578                           ;	CRCPOLL = hFF, Bits 7:0 of CRCPOL are 0xFF
 50579   30001A                     	org	3145754
 50580   30001A  FF                 	db	255
 50581                           
 50582                           ;Config register CONFIG28 @ 0x30001B
 50583                           ;	Non-Boot Sector Seed for CRC on boot bits 31-24
 50584                           ;	CRCSEEDT = hFF, Bits 31:24 of CRCSEED are 0xFF
 50585   30001B                     	org	3145755
 50586   30001B  FF                 	db	255
 50587                           
 50588                           ;Config register CONFIG29 @ 0x30001C
 50589                           ;	Non-Boot Sector Seed for CRC on boot bits 23-16
 50590                           ;	CRCSEEDU = hFF, Bits 23:16 of CRCSEED are 0xFF
 50591   30001C                     	org	3145756
 50592   30001C  FF                 	db	255
 50593                           
 50594                           ;Config register CONFIG30 @ 0x30001D
 50595                           ;	Non-Boot Sector Seed for CRC on boot bits 15-8
 50596                           ;	CRCSEEDH = hFF, Bits 15:8 of CRCSEED are 0xFF
 50597   30001D                     	org	3145757
 50598   30001D  FF                 	db	255
 50599                           
 50600                           ;Config register CONFIG31 @ 0x30001E
 50601                           ;	Non-Boot Sector Seed for CRC on boot bits 7-0
 50602                           ;	CRCSEEDL = hFF, Bits 7:0 of CRCSEED are 0xFF
 50603   30001E                     	org	3145758
 50604   30001E  FF                 	db	255
 50605                           
 50606                           ;Config register CONFIG32 @ 0x30001F
 50607                           ;	Non-Boot Sector Expected Result for CRC on boot bits 31-24
 50608                           ;	CRCEREST = hFF, Bits 31:24 of CRCERES are 0xFF
 50609   30001F                     	org	3145759
 50610   30001F  FF                 	db	255
 50611                           
 50612                           ;Config register CONFIG33 @ 0x300020
 50613                           ;	Non-Boot Sector Expected Result for CRC on boot bits 23-16
 50614                           ;	CRCERESU = hFF, Bits 23:16 of CRCERES are 0xFF
 50615   300020                     	org	3145760
 50616   300020  FF                 	db	255
 50617                           
 50618                           ;Config register CONFIG34 @ 0x300021
 50619                           ;	Non-Boot Sector Expected Result for CRC on boot bits 15-8
 50620                           ;	CRCERESH = hFF, Bits 15:8 of CRCERES are 0xFF
 50621   300021                     	org	3145761
 50622   300021  FF                 	db	255
 50623                           
 50624                           ;Config register CONFIG35 @ 0x300022
 50625                           ;	Non-Boot Sector Expected Result for CRC on boot bits 7-0
 50626                           ;	CRCERESL = hFF, Bits 7:0 of CRCERES are 0xFF
 50627   300022                     	org	3145762
 50628   300022  FF                 	db	255
 50629                           tosu	equ	0x4FF
 50630                           tosh	equ	0x4FE
 50631                           tosl	equ	0x4FD
 50632                           stkptr	equ	0x4FC
 50633                           pclatu	equ	0x4FB
 50634                           pclath	equ	0x4FA
 50635                           pcl	equ	0x4F9
 50636                           tblptru	equ	0x4F8
 50637                           tblptrh	equ	0x4F7
 50638                           tblptrl	equ	0x4F6
 50639                           tablat	equ	0x4F5
 50640                           prodh	equ	0x4F4
 50641                           prodl	equ	0x4F3
 50642                           indf0	equ	0x4EF
 50643                           postinc0	equ	0x4EE
 50644                           postdec0	equ	0x4ED
 50645                           preinc0	equ	0x4EC
 50646                           plusw0	equ	0x4EB
 50647                           fsr0h	equ	0x4EA
 50648                           fsr0l	equ	0x4E9
 50649                           wreg	equ	0x4E8
 50650                           indf1	equ	0x4E7
 50651                           postinc1	equ	0x4E6
 50652                           postdec1	equ	0x4E5
 50653                           preinc1	equ	0x4E4
 50654                           plusw1	equ	0x4E3
 50655                           fsr1h	equ	0x4E2
 50656                           fsr1l	equ	0x4E1
 50657                           bsr	equ	0x4E0
 50658                           indf2	equ	0x4DF
 50659                           postinc2	equ	0x4DE
 50660                           postdec2	equ	0x4DD
 50661                           preinc2	equ	0x4DC
 50662                           plusw2	equ	0x4DB
 50663                           fsr2h	equ	0x4DA
 50664                           fsr2l	equ	0x4D9
 50665                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    454
    Data        2
    BSS         1096
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK5           160     50     157
    BANK6           256      0     209
    BANK7           256      0     140
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0
    BANK37          256      0       0
    BANK38          256      0       0
    BANK39          256      0       0
    BANK40          256      0       0
    BANK41          256      0       0
    BANK42          256      0       0
    BANK43          256      0       0
    BANK44          256      0       0
    BANK45          256      0       0
    BANK46          256      0       0
    BANK47          256      0       0
    BANK48          256      0       0
    BANK49          256      0       0
    BANK50          256      0       0
    BANK51          256      0       0
    BANK52          256      0       0
    BANK53          256      0       0
    BANK54          256      0       0

Pointer List with Targets:

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    APP_processConsumedEvent@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    bootService$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    bootService$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK7[72]), NULL(NULL[0]), 

    canReceiveMessage@rxFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK7[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK6[9]), 

    canSendMessage@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    canService$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    canService$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E23397 size(3) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E23401 size(3) Largest target is 1
		 -> canSendMessage(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    consumerEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    consumerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    eventCoeService$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventCoeService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventCoeService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventCoeService$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    eventCoeService$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventCoeService$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    eventConsumerService$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventConsumerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventConsumerService$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    eventConsumerService$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventConsumerService$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    eventProducerService$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventProducerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventProducerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventProducerService$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    eventProducerService$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventProducerService$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    eventTeachService$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    flashBuffer	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    getNextWriteMessage@q	PTR struct MessageQueue size(2) Largest target is 6
		 -> rxQueue(BANK5[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK7[72]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 72
		 -> rxBuffers(BANK7[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 72
		 -> rxBuffers(BANK7[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> producerDiagnostics(BANK5[4]), teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    mnsService$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    mnsService$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> producerDiagnostics(BANK5[4]), teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    nvService$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    nvService$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK7[72]), 

    pop@q	PTR struct MessageQueue size(2) Largest target is 6
		 -> rxQueue(BANK5[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK7[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK7[72]), 

    prepareSelfEnumResponse@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    producerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    push@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK7[72]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK7[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK7[72]), 

    S201$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    S201Service$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S201Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    S201Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    S201Service$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    S201Service$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    S201Service$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    S2184MessageQueue$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK7[72]), 

    S329$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK6[9]), 

    S329$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    S329Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E23397 size(3) Largest target is 1
		 -> canReceiveMessage(), 

    S329Transport$sendMessage	PTR FTN(PTR struct Message,)enum E23401 size(3) Largest target is 1
		 -> canSendMessage(), 

    sendRTR@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    services	const PTR const struct Service[8] size(2) Largest target is 20
		 -> bootService(CODE[20]), canService(CODE[20]), eventCoeService(CODE[20]), eventConsumerService(CODE[20]), 
		 -> eventProducerService(CODE[20]), eventTeachService(CODE[20]), mnsService(CODE[20]), nvService(CODE[20]), 

    services$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    services$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> producerDiagnostics(BANK5[4]), teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__consumerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> producerDiagnostics(BANK5[4]), teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 20
		 -> bootService(CODE[20]), canService(CODE[20]), eventCoeService(CODE[20]), eventConsumerService(CODE[20]), 
		 -> eventProducerService(CODE[20]), eventTeachService(CODE[20]), mnsService(CODE[20]), nvService(CODE[20]), 
		 -> NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK7[72]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> producerDiagnostics(BANK5[4]), teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> producerDiagnostics(BANK5[4]), teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK7[72]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK7[72]), NULL(NULL[0]), 

    sp__producerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> producerDiagnostics(BANK5[4]), teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> producerDiagnostics(BANK5[4]), teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp_S201$7	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> producerDiagnostics(BANK5[4]), teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E23465 size(3) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E23465 size(3) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 6
		 -> canTransport(CODE[6]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E23397 size(3) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E23401 size(3) Largest target is 1
		 -> canSendMessage(), 


Critical Paths under _main in COMRAM

    _initLeds->_setLedStateNoSave
    _initInputs->_readNVM
    _initEvents->_rebuildLookupTable
    _powerUp->_teachPowerUp
    _teachPowerUp->_rebuildHashtable
    _nvPowerUp->_loadNvCache
    _loadNvCache->_readNVM
    _mnsPowerUp->_readNVM
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _bootPowerUp->_readNVM
    _poll->_APP_preProcessMessage
    _pollTimedResponse->_reqevCallback
    _sodTRCallback->_canpanSendProducedEvent
    _mnsPoll->_sendMessage5
    _canReceiveMessage->_handleSelfEnumeration
    _handleSelfEnumeration->_tickGet
    _canPoll->_processEnumeration
    _processEnumeration->_setNewCanId
    _setNewCanId->_writeNVM
    _APP_preProcessMessage->_consumerProcessMessage
    _APP_preProcessMessage->_producerProcessMessage
    _teachProcessMessage->_doEvlrn
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage5
    _doReqev->_sendMessage6
    _doNnevn->_sendMessage3
    _doNnclr->_clearAllEvents
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _rebuildLookupTable->_getEv
    _APP_GetEventIndexState->_APP_isProducedEvent
    _APP_isProducedEvent->_getEv
    _setNV->_writeNVM
    _setLEDsByMode->_showStatus
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _sendMessage2->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _canGetDiagnostic->_getNumRxBuffersInUse
    _canGetDiagnostic->_getNumTxBuffersInUse
    _sendMessage7->_sendMessage
    _isConsumedEvent->_APP_isConsumedEvent
    _APP_isConsumedEvent->_getEv
    _getEv->_readNVM
    _consumerEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _APP_processConsumedEvent->_getEVs
    _setLedState->_setLedStateNoSave
    _setLedStateNoSave->_clearLed
    _doSoD->_startTimedResponse
    _startTimedResponse->_findServiceIndex
    _loop->_inputScan
    _pollOutputs->_getNV
    _inputScan->_canpanSendProducedEvent
    _sendMessage5->_sendMessage
    _getEVs->_readNVM
    _canpanSendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_getNextWriteMessage
    _startEnumeration->_tickGet
    _doFlash->_clearLed
    _setLed->___awdiv
    _clearLed->___awdiv
    _checkPowerOnPb->_APP_testMode
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->_tickGet
    ___lmul->_getNV
    ___lldiv->_tickGet
    _factoryReset->_APP_factoryReset
    _teachFactoryReset->_clearAllEvents
    _nvFactoryReset->_writeNVM
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _factoryResetGlobalEvents->_clearAllEvents
    _APP_testMode->_addTestEvent
    _clearAllEvents->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _addTestEvent->_addEvent
    _addEvent->_findEvent
    _writeEv->_writeNVM
    _writeNVM->_FLASH_Write
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_WriteNoVerify
    _rebuildHashtable->_getHash
    _findEvent->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _readNVM->_EEPROM_Read
    _readNVM->_FLASH_Read

Critical Paths under _receiveOverrun in COMRAM

    None.

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    _main->_poll
    _poll->_APP_preProcessMessage
    _APP_preProcessMessage->_mnsProcessMessage

Critical Paths under _receiveOverrun in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _receiveOverrun in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _receiveOverrun in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _receiveOverrun in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _receiveOverrun in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _receiveOverrun in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _receiveOverrun in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _receiveOverrun in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _receiveOverrun in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _receiveOverrun in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _receiveOverrun in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _receiveOverrun in BANK16

    None.

Critical Paths under _TMR0_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _receiveOverrun in BANK17

    None.

Critical Paths under _TMR0_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _receiveOverrun in BANK18

    None.

Critical Paths under _TMR0_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _receiveOverrun in BANK19

    None.

Critical Paths under _TMR0_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _receiveOverrun in BANK20

    None.

Critical Paths under _TMR0_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _receiveOverrun in BANK21

    None.

Critical Paths under _TMR0_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _receiveOverrun in BANK22

    None.

Critical Paths under _TMR0_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _receiveOverrun in BANK23

    None.

Critical Paths under _TMR0_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _receiveOverrun in BANK24

    None.

Critical Paths under _TMR0_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _receiveOverrun in BANK25

    None.

Critical Paths under _TMR0_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _receiveOverrun in BANK26

    None.

Critical Paths under _TMR0_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _receiveOverrun in BANK27

    None.

Critical Paths under _TMR0_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _receiveOverrun in BANK28

    None.

Critical Paths under _TMR0_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _receiveOverrun in BANK29

    None.

Critical Paths under _TMR0_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _receiveOverrun in BANK30

    None.

Critical Paths under _TMR0_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _receiveOverrun in BANK31

    None.

Critical Paths under _TMR0_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _receiveOverrun in BANK32

    None.

Critical Paths under _TMR0_ISR in BANK32

    None.

Critical Paths under _DEFAULT_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _receiveOverrun in BANK33

    None.

Critical Paths under _TMR0_ISR in BANK33

    None.

Critical Paths under _DEFAULT_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _receiveOverrun in BANK34

    None.

Critical Paths under _TMR0_ISR in BANK34

    None.

Critical Paths under _DEFAULT_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _receiveOverrun in BANK35

    None.

Critical Paths under _TMR0_ISR in BANK35

    None.

Critical Paths under _DEFAULT_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _receiveOverrun in BANK36

    None.

Critical Paths under _TMR0_ISR in BANK36

    None.

Critical Paths under _DEFAULT_ISR in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _receiveOverrun in BANK37

    None.

Critical Paths under _TMR0_ISR in BANK37

    None.

Critical Paths under _DEFAULT_ISR in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _receiveOverrun in BANK38

    None.

Critical Paths under _TMR0_ISR in BANK38

    None.

Critical Paths under _DEFAULT_ISR in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _receiveOverrun in BANK39

    None.

Critical Paths under _TMR0_ISR in BANK39

    None.

Critical Paths under _DEFAULT_ISR in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _receiveOverrun in BANK40

    None.

Critical Paths under _TMR0_ISR in BANK40

    None.

Critical Paths under _DEFAULT_ISR in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _receiveOverrun in BANK41

    None.

Critical Paths under _TMR0_ISR in BANK41

    None.

Critical Paths under _DEFAULT_ISR in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _receiveOverrun in BANK42

    None.

Critical Paths under _TMR0_ISR in BANK42

    None.

Critical Paths under _DEFAULT_ISR in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _receiveOverrun in BANK43

    None.

Critical Paths under _TMR0_ISR in BANK43

    None.

Critical Paths under _DEFAULT_ISR in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _receiveOverrun in BANK44

    None.

Critical Paths under _TMR0_ISR in BANK44

    None.

Critical Paths under _DEFAULT_ISR in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _receiveOverrun in BANK45

    None.

Critical Paths under _TMR0_ISR in BANK45

    None.

Critical Paths under _DEFAULT_ISR in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _receiveOverrun in BANK46

    None.

Critical Paths under _TMR0_ISR in BANK46

    None.

Critical Paths under _DEFAULT_ISR in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _receiveOverrun in BANK47

    None.

Critical Paths under _TMR0_ISR in BANK47

    None.

Critical Paths under _DEFAULT_ISR in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _receiveOverrun in BANK48

    None.

Critical Paths under _TMR0_ISR in BANK48

    None.

Critical Paths under _DEFAULT_ISR in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _receiveOverrun in BANK49

    None.

Critical Paths under _TMR0_ISR in BANK49

    None.

Critical Paths under _DEFAULT_ISR in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _receiveOverrun in BANK50

    None.

Critical Paths under _TMR0_ISR in BANK50

    None.

Critical Paths under _DEFAULT_ISR in BANK50

    None.

Critical Paths under _main in BANK51

    None.

Critical Paths under _receiveOverrun in BANK51

    None.

Critical Paths under _TMR0_ISR in BANK51

    None.

Critical Paths under _DEFAULT_ISR in BANK51

    None.

Critical Paths under _main in BANK52

    None.

Critical Paths under _receiveOverrun in BANK52

    None.

Critical Paths under _TMR0_ISR in BANK52

    None.

Critical Paths under _DEFAULT_ISR in BANK52

    None.

Critical Paths under _main in BANK53

    None.

Critical Paths under _receiveOverrun in BANK53

    None.

Critical Paths under _TMR0_ISR in BANK53

    None.

Critical Paths under _DEFAULT_ISR in BANK53

    None.

Critical Paths under _main in BANK54

    None.

Critical Paths under _receiveOverrun in BANK54

    None.

Critical Paths under _TMR0_ISR in BANK54

    None.

Critical Paths under _DEFAULT_ISR in BANK54

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  375254
                                             47 BANK5      3     3      0
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0    2865
                              _getNV
                         _initEvents
                         _initInputs
                           _initLeds
                        _initOutputs
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initOutputs                                          1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _initLeds                                             4     4      0    1371
                                             16 COMRAM     4     4      0
                              _getNV
                            _readNVM
                  _setLedStateNoSave
 ---------------------------------------------------------------------------------
 (2) _initInputs                                           2     2      0     539
                                             12 COMRAM     2     2      0
                        _driveColumn
                              _getNV
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _initEvents                                           0     0      0     588
                 _rebuildLookupTable
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              4     4      0    4684
                                             36 COMRAM     3     3      0
                                NULL *
                        _bootPowerUp *
                         _canPowerUp *
                    _consumerPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                    _producerPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0    1399
                                             35 COMRAM     1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _producerPowerUp                                      1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0     452
                                             17 COMRAM     1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0     384
                                             12 COMRAM     5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0     737
                                             12 COMRAM     3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     211
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           4     4      0      99
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _consumerPowerUp                                      1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                          21    21      0    1039
                                             12 COMRAM     2     2      0
              _CAN1_OperationModeSet
            _prepareSelfEnumResponse
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _CAN1_OperationModeSet                                2     2      0     141
                                              0 COMRAM     2     2      0
              _CAN1_OperationModeGet
 ---------------------------------------------------------------------------------
 (4) _CAN1_OperationModeGet                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bootPowerUp                                          6     6      0     499
                                             12 COMRAM     6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0  320409
                                             32 BANK5     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
                 _bootProcessMessage *
                            _canPoll *
                  _canProcessMessage *
                  _canReceiveMessage *
             _consumerProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
             _producerProcessMessage *
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0   26137
                                             63 COMRAM     3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
                      _sodTRCallback *
 ---------------------------------------------------------------------------------
 (3) _sodTRCallback                                        5     3      2    4549
                                             48 COMRAM     4     2      2
             _APP_GetEventIndexState
            _canpanSendProducedEvent
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2    6742
                                             48 COMRAM    15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage5
                       _sendMessage6
                 _tableIndexToEvtIdx
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2    2623
                                             48 COMRAM     4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2    3509
                                             48 COMRAM     6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2    2728
                                             48 COMRAM     6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2    2808
                                             48 COMRAM     2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          7     5      2    3155
                                             48 COMRAM     6     4      2
                                NULL *
                   _canGetDiagnostic *
              _consumerGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
              _producerGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0    5905
                                             42 COMRAM     4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                   10     8      2    1290
                                             15 COMRAM    10     8      2
               _getNumRxBuffersInUse
              _handleSelfEnumeration
                             _memcpy
                                _pop
 ---------------------------------------------------------------------------------
 (3) _pop                                                 10     7      3     200
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     146
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                5     5      0     298
                                             10 COMRAM     5     5      0
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _canPoll                                              1     1      0    1749
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0    1749
                                             21 COMRAM     7     7      0
                        _setNewCanId
                   _startEnumeration
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0     913
                                             20 COMRAM     1     1      0
            _prepareSelfEnumResponse
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _prepareSelfEnumResponse                              2     2      0     133
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                               10     8      2  143421
                                             91 COMRAM     2     0      2
                                             24 BANK5      8     8      0
                                NULL *
                _APP_isProducedEvent
                 _bootProcessMessage *
                  _canProcessMessage *
             _consumerProcessMessage *
                          _findEvent
                              _getEv
                  _mnsProcessMessage *
                   _nvProcessMessage *
             _producerProcessMessage *
                 _rebuildLookupTable
                _teachProcessMessage *
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2   76181
                                             82 COMRAM     8     6      2
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4    5611
                                             47 COMRAM     5     1      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              4     4      0    2889
                                             40 COMRAM     4     4      0
                              _getEN
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doReval                                              6     5      1    6056
                                             42 COMRAM     6     5      1
                 _evtIdxToTableIndex
                   _findServiceIndex
                              _getEv
                       _sendMessage3
                       _sendMessage5
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5    9931
                                             43 COMRAM     8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (4) _numEv                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              4     4      0    2889
                                             40 COMRAM     4     4      0
                              _getEN
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0    8683
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0     298
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0    6092
                                             42 COMRAM     6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4   11165
                                             50 COMRAM     5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4    3630
                                             45 COMRAM     5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              6     0      6   16230
                                             76 COMRAM     6     0      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                        15     8      7    8689
                                             62 COMRAM    14     7      7
                           _addEvent
                          _findEvent
                             _getEVs
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _rebuildLookupTable                                   4     4      0     588
                                             24 COMRAM     4     4      0
                              _getEv
 ---------------------------------------------------------------------------------
 (2) _producerProcessMessage                               9     7      2    7613
                                             82 COMRAM     9     7      2
             _APP_GetEventIndexState
                          _findEvent
                       _sendMessage3
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _APP_GetEventIndexState                               2     2      0     959
                                             27 COMRAM     2     2      0
                _APP_isProducedEvent
                             _getEVs
 ---------------------------------------------------------------------------------
 (4) _APP_isProducedEvent                                  3     3      0     437
                                             24 COMRAM     3     3      0
                              _getEv
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2   11877
                                             82 COMRAM     6     4      2
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1    1005
                                             20 COMRAM     5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   3     1      2       2
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       2     1      1      52
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   32    30      2   30580
                                             82 COMRAM     7     5      2
                                              0 BANK5     24    24      0
                                NULL *
                        _bootEsdData *
                         _canEsdData *
                   _canGetDiagnostic *
                    _consumerEsdData *
              _consumerGetDiagnostic *
                       _factoryReset
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
                    _producerEsdData *
              _producerGetDiagnostic *
                   _rebuildHashtable
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   4     1      3      58
                                              6 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      29
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6    2463
                                             36 COMRAM     7     1      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3    2421
                                             36 COMRAM     4     1      3
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2    2361
                                             36 COMRAM     3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _producerGetDiagnostic                                4     1      3      58
                                              6 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _producerEsdData                                      1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      4     1      3      58
                                              6 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     4     1      3      58
                                              6 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         2     2      0     319
                                              5 COMRAM     1     1      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     171
                                              4 COMRAM     1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _consumerGetDiagnostic                                4     1      3      58
                                              6 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _consumerEsdData                                      1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     7     4      3     203
                                              6 COMRAM     5     2      3
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootEsdData                                          1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _consumerProcessMessage                               9     7      2   10643
                                             82 COMRAM     9     7      2
           _APP_processConsumedEvent
              _consumerEventCheckLen
                          _findEvent
                    _isConsumedEvent
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7    2491
                                             36 COMRAM     8     1      7
                                NULL (ARG) *
                        _bootEsdData (ARG) *
                         _canEsdData (ARG) *
                    _consumerEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                    _producerEsdData (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _isConsumedEvent                                      1     1      0     674
                                             27 COMRAM     1     1      0
                _APP_isConsumedEvent
 ---------------------------------------------------------------------------------
 (4) _APP_isConsumedEvent                                  3     3      0     645
                                             24 COMRAM     3     3      0
                              _getEv
 ---------------------------------------------------------------------------------
 (4) _getEv                                               12    10      2     363
                                             12 COMRAM    12    10      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _consumerEventCheckLen                                3     0      3    2846
                                             47 COMRAM     3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4    2800
                                             42 COMRAM     5     1      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _APP_processConsumedEvent                            11     9      2    2821
                                             23 COMRAM    11     9      2
                            ___awdiv
                              _doSoD
                             _getEVs
                        _setLedState
 ---------------------------------------------------------------------------------
 (4) _setLedState                                          4     3      1    1108
                                             16 COMRAM     4     3      1
               _EEPROM_WriteNoVerify
                  _setLedStateNoSave
 ---------------------------------------------------------------------------------
 (3) _setLedStateNoSave                                    4     3      1     900
                                             12 COMRAM     4     3      1
                           _clearLed
                             _setLed
 ---------------------------------------------------------------------------------
 (4) _doSoD                                                0     0      0     298
                   _findServiceIndex
                 _startTimedResponse
            _timedResponseInProgress
 ---------------------------------------------------------------------------------
 (5) _timedResponseInProgress                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   5     1      4     157
                                              4 COMRAM     5     1      4
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     141
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2    2750
                                             82 COMRAM     4     2      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2     752
                                             82 COMRAM     4     2      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2       1
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 9     9      0   12975
                                             60 COMRAM     9     9      0
                            ___lldiv
                             ___lmul
            _canpanSendProducedEvent
                            _doFlash
                              _getNV
                          _inputScan
                        _pollOutputs
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pollOutputs                                          5     5      0     200
                                              4 COMRAM     5     5      0
                              _getNV
 ---------------------------------------------------------------------------------
 (2) _inputScan                                           17    17      0    7792
                                             48 COMRAM    12    12      0
               _EEPROM_WriteNoVerify
            _canpanSendProducedEvent
                        _driveColumn
                 _findEventForSwitch
                             _getEVs
                              _getNV
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5    2640
                                             36 COMRAM     6     1      5
                  _getParameterFlags (ARG)
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
 ---------------------------------------------------------------------------------
 (3) _getNV                                                4     2      2      87
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _getEVs                                              11    11      0     397
                                             12 COMRAM    11    11      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _findEventForSwitch                                   1     1      0      58
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _driveColumn                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _canpanSendProducedEvent                              7     6      1    3456
                                             41 COMRAM     7     6      1
                              _getEN
                              _getNN
           _incrementProducerCounter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _sendMessage4                                         5     1      4    2423
                                             36 COMRAM     5     1      4
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                          9     1      8    2266
                                             27 COMRAM     9     1      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                      15    13      2    1997
                                             13 COMRAM    14    12      2
                _getNextWriteMessage
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
                               _have
                            _isEvent
                   _startEnumeration
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _startEnumeration                                     2     2      0     375
                                             10 COMRAM     2     2      0
                            _sendRTR
                            _tickGet
 ---------------------------------------------------------------------------------
 (8) _sendRTR                                              2     2      0      67
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      82
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     119
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNumTxBuffersInUse                                 6     6      0      69
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _getNumRxBuffersInUse                                 6     6      0      47
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 13    10      3     222
                                              0 COMRAM    13    10      3
 ---------------------------------------------------------------------------------
 (5) _incrementProducerCounter                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _doFlash                                              3     3      0     916
                                             12 COMRAM     3     3      0
                           _clearLed
                             _setLed
 ---------------------------------------------------------------------------------
 (4) _setLed                                               3     3      0     380
                                              8 COMRAM     3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _clearLed                                             4     4      0     380
                                              8 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0   22760
                                             66 COMRAM     1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      29
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    1041
                                             23 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    1041
                                             23 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0     533
                                             10 COMRAM     4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     322
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     100
                                              4 COMRAM    12     4      8
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     168
                                             10 COMRAM    13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (3) _factoryReset                                         3     3      0   11174
                                             47 COMRAM     3     3      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _teachFactoryReset                                    0     0      0    3682
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _nvFactoryReset                                       3     3      0     928
                                             20 COMRAM     3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _APP_nvDefault                                        1     1      0     174
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _mnsFactoryReset                                      0     0      0     664
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _canFactoryReset                                      0     0      0     664
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_factoryReset                                     1     1      0    4460
                                             46 COMRAM     1     1      0
           _factoryResetGlobalEvents
                    _flushFlashBlock
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _factoryResetGlobalEvents                             0     0      0    3682
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (2) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         1     1      0    9340
                                             65 COMRAM     1     1      0
                       _addTestEvent
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       1     1      0    3682
                                             45 COMRAM     1     1      0
                   _rebuildHashtable
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                    10    10      0    2283
                                             35 COMRAM    10    10      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _addTestEvent                                         3     3      0    5590
                                             62 COMRAM     3     3      0
                           _addEvent
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            20    13      7    5085
                                             42 COMRAM    20    13      7
                          _findEvent
                    _flushFlashBlock
                              _getEN
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _writeEv                                             12    10      2     792
                                             20 COMRAM    12    10      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _writeNVM                                             7     3      4     664
                                             13 COMRAM     7     3      4
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (7) _FLASH_Write                                          9     5      4     247
                                              5 COMRAM     8     4      4
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (8) _loadFlashBlock                                       3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) _flushFlashBlock                                      1     1      0      46
                                              4 COMRAM     1     1      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (9) _eraseFlashBlock                                      4     4      0      23
                                              0 COMRAM     4     4      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (10) _APP_isSuitableTimeToWriteFlash                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EEPROM_Write                                         5     1      4     232
                                              8 COMRAM     4     0      4
                        _EEPROM_Read
               _EEPROM_WriteNoVerify
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EEPROM_WriteNoVerify                                 8     4      4      95
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    10    10      0    1331
                                             29 COMRAM     6     6      0
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4    1256
                                             29 COMRAM    13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               11     9      2     434
                                             12 COMRAM    11     9      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     139
                                             23 COMRAM     6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               10     8      2     353
                                             12 COMRAM    10     8      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _readNVM                                              6     3      3     249
                                              6 COMRAM     6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (4) _FLASH_Read                                           6     3      3     111
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Read                                          6     3      3      46
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _receiveOverrun                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DEFAULT_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
       _addTestEvent
         _addEvent
           _findEvent
             _getEN
               _readNVM
                 _EEPROM_Read
                 _FLASH_Read
             _getHash
               _getEN (ARG)
               _getNN (ARG)
                 _readNVM
             _getNN
           _flushFlashBlock
             _APP_isSuitableTimeToWriteFlash
             _eraseFlashBlock
               _APP_isSuitableTimeToWriteFlash
           _getEN
           _rebuildHashtable
             _getEN
             _getHash
             _getNN
           _writeEv
             _writeNVM
               _APP_nvDefault (ARG)
               _EEPROM_Write (ARG)
                 _EEPROM_Read
                 _EEPROM_WriteNoVerify
                 _updateModuleErrorStatus
               _FLASH_Write (ARG)
                 _eraseFlashBlock
                 _flushFlashBlock
                 _loadFlashBlock
           _writeNVM
       _clearAllEvents
         _rebuildHashtable
         _removeTableEntry
           _flushFlashBlock
           _rebuildHashtable
           _writeNVM
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
           _clearAllEvents
         _flushFlashBlock
         _writeNVM
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
         _getNV (ARG)
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     ___lldiv
     ___lmul
     _canpanSendProducedEvent
       _getEN
       _getNN
       _incrementProducerCounter
       _sendMessage4
         _getParameter (ARG)
           _getParameterFlags
             _have
           _have
         _sendMessage (ARG)
           _canSendMessage *
             _getNextWriteMessage
             _getNumRxBuffersInUse
             _getNumTxBuffersInUse
             _have
             _isEvent
             _startEnumeration
               _sendRTR
               _tickGet
             _updateModuleErrorStatus
     _doFlash
       _clearLed
         ___awdiv
       _setLed
         ___awdiv
     _getNV
     _inputScan
       _EEPROM_WriteNoVerify
       _canpanSendProducedEvent
       _driveColumn
       _findEventForSwitch
       _getEVs
         _readNVM
       _getNV
       _sendMessage5
         _getParameterFlags (ARG)
         _sendMessage (ARG)
         _tableIndexToEvtIdx (ARG)
     _pollOutputs
       _getNV
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
       NULL(Fake) *
       _APP_isProducedEvent *
         _getEv
           _readNVM
       _bootProcessMessage *
         _writeNVM
       _canProcessMessage *
         _sendMessage5
       _consumerProcessMessage *
         _APP_processConsumedEvent
           ___awdiv
           _doSoD
             _findServiceIndex
             _startTimedResponse
               _findServiceIndex (ARG)
             _timedResponseInProgress
           _getEVs
           _setLedState
             _EEPROM_WriteNoVerify
             _setLedStateNoSave
               _clearLed
               _setLed
         _consumerEventCheckLen
           _checkLen
             _sendMessage5
         _findEvent
         _isConsumedEvent
           _APP_isConsumedEvent
             _getEv
         _sendMessage7
           NULL(Fake) (ARG) *
           _bootEsdData (ARG) *
           _canEsdData (ARG) *
           _consumerEsdData (ARG) *
           _nvGetESDdata (ARG) *
           _producerEsdData (ARG) *
           _sendMessage (ARG) *
           _tableIndexToEvtIdx (ARG) *
           _teachGetESDdata (ARG) *
       _findEvent *
       _getEv *
       _mnsProcessMessage *
         NULL(Fake) *
         _bootEsdData *
         _canEsdData *
         _canGetDiagnostic *
           _getNumRxBuffersInUse
           _getNumTxBuffersInUse
         _consumerEsdData *
         _consumerGetDiagnostic *
         _factoryReset *
         _findServiceIndex *
         _getParameter *
         _getParameterFlags *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _nvGetESDdata *
         _producerEsdData *
         _producerGetDiagnostic *
         _rebuildHashtable *
         _sendMessage2 *
           _sendMessage
         _sendMessage3 *
           _sendMessage
         _sendMessage4 *
         _sendMessage5 *
         _sendMessage6 *
           _numEv (ARG)
           _sendMessage (ARG)
         _sendMessage7 *
         _setLEDsByMode *
           _showStatus
         _startTimedResponse *
         _teachGetDiagnostic *
         _teachGetESDdata *
         _writeNVM *
       _nvProcessMessage *
         _findServiceIndex
         _getNV
         _sendMessage2
         _sendMessage3
         _sendMessage4
         _sendMessage5
         _setNV
           _APP_nvValidate
           _APP_nvValueChanged
           _writeNVM
         _startTimedResponse
       _producerProcessMessage *
         _APP_GetEventIndexState
           _APP_isProducedEvent
           _getEVs
         _findEvent
         _sendMessage3
         _sendMessage4
       _rebuildLookupTable *
         _getEv
       _teachProcessMessage *
         _doEvlrn
           _APP_addEvent
             _addEvent
             _findEvent
             _getEVs
             _writeEv
             _writeNVM
           _sendMessage2
           _sendMessage3
           _sendMessage5
         _doEvuln
           _removeEvent
             _findEvent
             _removeTableEntry
           _sendMessage2
           _sendMessage3
           _sendMessage5
         _doNenrd
           _evtIdxToTableIndex
           _getEN
           _getNN
           _sendMessage3
           _sendMessage5
         _doNerd
           _findServiceIndex
           _startTimedResponse
         _doNnclr
           _clearAllEvents
           _sendMessage2
           _sendMessage5
         _doNnevn
           _getEN
           _sendMessage3
         _doReqev
           _findEvent
           _findServiceIndex
           _getEv
           _numEv
           _sendMessage3
           _sendMessage5
           _sendMessage6
           _startTimedResponse
         _doReval
           _evtIdxToTableIndex
           _findServiceIndex
           _getEv
           _sendMessage3
           _sendMessage5
           _startTimedResponse
         _doRqevn
           _getEN
           _sendMessage3
         _sendMessage3
         _sendMessage5
         _teachCheckLen
           _checkLen
           _sendMessage5
     ___lmul *
     _bootProcessMessage *
     _canPoll *
       _processEnumeration
         _setNewCanId
           _prepareSelfEnumResponse
           _writeNVM
         _startEnumeration
         _tickGet
         _updateModuleErrorStatus
     _canProcessMessage *
     _canReceiveMessage *
       _getNumRxBuffersInUse
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
     _consumerProcessMessage *
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
       _sendMessage5
       _setLEDsByMode
       _tickGet
       _writeNVM
     _mnsProcessMessage *
     _nvProcessMessage *
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _canGetDiagnostic *
         _consumerGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _producerGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
         _getNN
         _numEv
         _sendMessage5
         _sendMessage6
         _tableIndexToEvtIdx
       _sodTRCallback *
         _APP_GetEventIndexState
         _canpanSendProducedEvent
     _producerProcessMessage *
     _showStatus *
     _teachProcessMessage *
     _tickGet *
   _powerUp
     NULL(Fake) *
     _bootPowerUp *
       _readNVM
     _canPowerUp *
       _CAN1_OperationModeSet
         _CAN1_OperationModeGet
       _prepareSelfEnumResponse
       _readNVM
       _tickGet
     _consumerPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
         _readNVM
     _producerPowerUp *
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _getNV
     _initEvents
       _rebuildLookupTable
     _initInputs
       _driveColumn
       _getNV
       _readNVM
     _initLeds
       _getNV
       _readNVM
       _setLedStateNoSave
     _initOutputs
     _tickGet

 _receiveOverrun (ROOT)

 _TMR0_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM           12799      0     640      5.0%
BITBIGSFR_1       2304      0       0      0.0%
BITBIGSFRhllll     478      0       0      0.0%
BITBANK54          256      0       0      0.0%
BANK54             256      0       0      0.0%
BITBANK53          256      0       0      0.0%
BANK53             256      0       0      0.0%
BITBANK52          256      0       0      0.0%
BANK52             256      0       0      0.0%
BITBANK51          256      0       0      0.0%
BANK51             256      0       0      0.0%
BITBANK50          256      0       0      0.0%
BANK50             256      0       0      0.0%
BITBANK49          256      0       0      0.0%
BANK49             256      0       0      0.0%
BITBANK48          256      0       0      0.0%
BANK48             256      0       0      0.0%
BITBANK47          256      0       0      0.0%
BANK47             256      0       0      0.0%
BITBANK46          256      0       0      0.0%
BANK46             256      0       0      0.0%
BITBANK45          256      0       0      0.0%
BANK45             256      0       0      0.0%
BITBANK44          256      0       0      0.0%
BANK44             256      0       0      0.0%
BITBANK43          256      0       0      0.0%
BANK43             256      0       0      0.0%
BITBANK42          256      0       0      0.0%
BANK42             256      0       0      0.0%
BITBANK41          256      0       0      0.0%
BANK41             256      0       0      0.0%
BITBANK40          256      0       0      0.0%
BANK40             256      0       0      0.0%
BITBANK39          256      0       0      0.0%
BANK39             256      0       0      0.0%
BITBANK38          256      0       0      0.0%
BANK38             256      0       0      0.0%
BITBANK37          256      0       0      0.0%
BANK37             256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0     140     54.7%
BITBANK6           256      0       0      0.0%
BANK6              256      0     209     81.6%
BITBIGSFRhllh      243      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160     50     157     98.1%
BITBIGSFRhlh       156      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     93      95    100.0%
BITBIGSFRllhh       83      0       0      0.0%
BITBIGSFRhlllh      73      0       0      0.0%
BITBIGSFRllll       64      0       0      0.0%
BITBIGSFRlllh       60      0       0      0.0%
BITBIGSFRlh         55      0       0      0.0%
BITBIGSFRllhl       43      0       0      0.0%
BITBIGSFRhh          8      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0    1241      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Apr 10 19:32:31 2025

                   nerdCallback@nodeNumber 0533                        findEvent@tableIndex 052A  
                __end_of_pollTimedResponse 4E30                     ?_handleSelfEnumeration 0501  
                         sendMessage@data1 051D                           sendMessage@data2 051E  
                         sendMessage@data3 051F                           sendMessage@data4 0520  
                         sendMessage@data5 0521                           sendMessage@data6 0522  
                         sendMessage@data7 0523                        findEvent@nodeNumber 051E  
            __end_of_producerGetDiagnostic 63A4                          inputScan@buttonNo 053C  
                            ?_APP_addEvent 053F                       _getNumRxBuffersInUse 573E  
            APP_isProducedEvent@tableIndex 0519                      _timedResponseCallback 0574  
                      _timedResponseOpcode 0591                               ___awdiv@sign 0506  
                                       _nn 055E                           ?_flushFlashBlock 0501  
                  __end_of_eraseFlashBlock 573E                                        l210 3AA2  
                                      l320 49DC                                        l162 470E  
                                      l332 1F10                                        l352 1FA0  
                                      l344 1F7E                                        l520 5510  
                                      l345 1F8E                                        l601 6366  
                                      l346 1F86                                        l355 1FC4  
                                      l187 281E                                        l179 2772  
                                      l349 1F98                                        l480 3F6A  
                                      l472 3F90                                        l481 3F6E  
                                      l473 3F5C                                        l477 3F62  
                                      l813 31CC                                        l486 3FEA  
                                      l911 1236                                        l479 3F66  
                                      l583 4162                                        l916 1248  
                                      l599 6360                                        l928 2D1C  
                                      l891 4A42                                        l895 4A6C  
                                      l991 5BF2                                        l896 4A76  
                          checkPowerOnPb@i 0543                                        l994 5C0C  
                       _enumerationResults 0661           ??_APP_isSuitableTimeToWriteFlash 0501  
          ?_APP_isSuitableTimeToWriteFlash 0501                                        _evs 0671  
                                      _pop 45B6                              _APP_nvDefault 60E2  
                        pollOutputs@offset 0508                                        prod 04F3  
                                      tosl 04FD                                        wreg 04E8  
             tableIndexToEvtIdx@tableIndex 0501                    APP_nvValueChanged@index 0501  
                             ?_driveColumn 0501                    APP_nvValueChanged@value 0501  
      __end_of_mnsTRallDiagnosticsCallback 39CC                _mnsTRallDiagnosticsCallback 38C8  
                                     l2011 21CE                                       l2003 21A4  
                                     l2005 21B2                                       l2014 2224  
                                     l2031 22D4                                       l2023 22A6  
                                     l2007 21C2                                       l2016 222A  
                                     l2040 3CA0                                       l1208 0C0C  
                                     l2025 22B2                                       l2009 21C8  
                                     l2113 5DB6                                       l1049 23F0  
                                     l2027 22C0                                       l2043 3CAA  
                                     l2029 22CA                                       l2037 3C8E  
                                     l2046 3CB4                                       l2127 4E02  
                                     l1408 4182                                       l2056 3CFA  
                                     l1611 0A12                                       l1620 0AC8  
                                     l1540 373A                                       l2332 4C4A  
                                     l2253 44D2                                       l2246 457C  
                                     l1534 36C4                                       l2334 4C4C  
                                     l2336 4C4E                                       l1385 529C  
                                     l1650 15B8                                       l1538 370E  
                                     l1539 3712                                       l1580 0388  
                                     l2437 4C26                                       l1581 03AC  
                                     l1661 1708                                       l1902 51FE  
                                     l1910 56F4                                       l2278 1B58  
                                     l1663 1728                                       l1655 1610  
                                     l1913 572C                                       l2297 6452  
                                     l1657 1640                                       l1926 57BA  
                                     l1929 57DE                                       l1938 5D92  
                                     l1946 3DA8                                       l1883 5EFA  
                           _bootloaderType 0597                                       l1895 59F8  
                                     l1994 2122                                       l1996 2126  
                                     l8101 56BA                                       l8107 56C4  
                                     l8221 5B32                                       l9021 51B2  
                                     l8231 5B68                                       l9007 6550  
                                     l8145 58A6                                       l8305 5748  
                                     l9033 4FFC                                       l9017 5158  
                                     l8075 579E                                       l8251 3DC4  
                                     l8163 58D8                                       l9131 3CEE  
                                     l9123 3CD4                                       l9203 2EC0  
                                     l8093 5688                                       l9109 3C96  
                                     l8309 5794                                       l9037 5000  
                                     l8423 422C                                       l8247 3DAC  
                                     l9151 5FE6                                       l9127 3CE0  
                                     l9119 3CC6                                       l8351 3B32  
                                     l9231 2F80                                       l9223 2F5C  
                                     l8097 56A0                                       l8185 4342  
                                     l8409 41B6                                       l8265 5AE6  
                                     l8601 65AE                                       l8337 50D4  
                                     l8329 5076                                       l8521 147C  
                                     l9217 2ED4                                       l9209 2ECE  
                                     l9305 6370                                       l9313 6572  
                                     l8179 430A                                       l8419 41E8  
                                     l8259 3E46                                       l8275 5B12  
                                     l9139 3D0A                                       l8443 1120  
                                     l9163 5EA4                                       l9251 2FDA  
                                     l9243 2FB6                                       l9235 2F92  
                                     l9059 6308                                       l9403 55AC  
                                     l8269 5AFC                                       l8357 3B7E  
                                     l8293 5622                                       l8525 148C  
                                     l8461 1214                                       l9181 5464  
                                     l9261 300A                                       l9253 2FE6  
                                     l9245 2FC2                                       l9237 2F9E  
                                     l9229 2F74                                       l9333 4A80  
                                     l9309 656E                                       l8703 296E  
                                     l8367 5952                                       l9191 5480  
                                     l9327 4A4C                                       l9335 4AA0  
                                     l9319 6576                                       l9407 55B0  
                                     l8625 48E0                                       l8617 48B6  
                                     l8721 2A8A                                       l8713 2A5E  
                                     l8537 363E                                       l8289 55D0  
                                     l8377 5978                                       l8481 1268  
                                     l9185 5472                                       l9169 5EB4  
                                     l8801 5008                                       l9265 3016  
                                     l9601 6082                                       l9329 4A5C  
                                     l9281 5C66                                       l8635 491C  
                                     l8395 4184                                       l8715 2A88  
                                     l8731 2AE0                                       l8571 4B6C  
                                     l8475 1252                                       l9259 2FFE  
                                     l9267 3030                                       l9603 608A  
                                     l9427 42CA                                       l9419 4274  
                                     l9443 4F66                                       l9515 5F7A  
                       doEvuln@eventNumber 0535                                       l8573 4B74  
                                     l8565 4B56                                       l9189 547C  
                                     l9621 37C0                                       l9613 37B8  
                                     l9605 6092                                       l9373 63FE  
                                     l9293 5C7E                                       l9533 4E6E  
                                     l9453 3474                                       ?_pop 0501  
                                     l8655 563C                                       l8727 2ADC  
                                     l8591 4BAC                                       l8583 4B94  
                                     l8559 4B46                                       l8831 5DCE  
                                     l8911 4716                                       l8649 5632  
                                     l8745 2B08                                       l8737 2AEC  
                                     l8841 60F4                                       l8809 5066  
                                     l9641 37D4                                       l9633 37CC  
                                     l9625 37C4                                       l9617 37BC  
                                     l9609 609A                                       l9481 3548  
                                     l9473 3500                                       l9545 4026  
                                     l8587 4B9E                                       l9299 636C  
                                     l9379 65EC                                       l9475 3512  
                                     l9459 34A8                                       l8853 610A  
                                     l9717 3BAA                                       l8829 5DCA  
                                     l8765 5248                                       l9653 37E2  
                                     l9645 37D8                                       l9637 37D0  
                                     l9629 37C8                                       l9709 3846  
                                     l9573 645E                                       l9389 65F0  
                                     l9813 64DE                                       l9565 40A6  
                                     l9557 405E                                       l8847 6100  
                                     l8871 585E                                       l8759 5238  
                                     l9591 6422                                       l9583 6466  
                                     l9807 64DA                                       l8951 5E8E  
                                     l9559 4070                                       l9399 55A8  
                                     l8873 5866                                       l9649 37DE  
                                     l9737 63DA                                       l9577 6462  
                                     l9569 645A                                       l9825 549E  
                                     l8699 2966                                       l8779 529E  
                                     l9691 3830                                       l9683 380C  
                                     l9667 37F6                                       l9659 37F2  
                                     l9747 63B6                                       l9763 4EC6  
                                     l9843 54F8                                       l9835 54B8  
                                     l9499 5FB0                                       l9907 4874  
                                     l8893 6340                                       l8877 586E  
                                     l9757 4EB2                                       l8981 3AA4  
                                     l9925 5BFA                                       l9855 6506  
                                     l9687 381E                                       l9679 37FA  
                                     l9775 6558                                       l9927 5C08  
                                     l9793 6392                                       l9785 6560  
                                     l9953 469E                                       l9937 4670  
                                     l9873 5F3A                                       l9865 5F10  
                                     l9699 3842                                       l9779 655C  
                                     l8979 3A90                                       l9883 482E  
                                     l9949 469A                                       l9799 64D6  
                                     l9895 4858                                       l9967 46C8  
                                     l9983 3320                                       l9889 4844  
                                     l9987 3354                                       l9979 32E8  
                                     l9997 338E                                       l9989 3356  
                   __end_of_checkPowerOnPb 59F0                                       _IPR5 0367  
                                     u6040 4234                                       u6200 4B78  
                        doEvuln@nodeNumber 0533                                       u7010 2EAC  
                                     u7020 2EAE                                       u7030 2EBC  
                                     u6240 48DC                                       u6400 2AE8  
                                     u6304 5DF4                                       u6305 5DF0  
                                     u6314 5CF2                                       u6315 5CEE  
                                     u7220 5C94                                       u7064 2F0A  
                                     u8200 0B5E                                       u7065 2F06  
                                     u6530 5DC6                                       u6610 4712  
                    __end_of_sodTRCallback 5F3E                                       u5820 3DEE  
                                     u6348 4D9A                                       u6460 65E4  
                                     u7084 2F50                                       u8044 493E  
                                     u9100 5E22                                       u7085 2F4C  
                                     u8045 493A                                       u6550 60F0  
                                     u7190 5C62                                       u8070 2352  
                                     u9120 2106                                       u9210 2254  
                                     u9130 2154                                       u6650 4782  
                                     u7604 2BCC                                       u5860 55F6  
                                     u8180 0B32                                       u9060 1CFA  
                                     u7605 2BC8                                       u5838 3DF0  
                                     u5790 3D92                                       u7614 2C02  
                                     u7710 5AD0                                       u6670 5E7A  
                                     u7615 2BFE                                       u7624 2C38  
                                     u7528 3C4C                                       u9240 22AC  
                                     u6680 5E8A                                       u7640 54D8  
                                     u9080 1D9A                                       u7625 2C34  
                                     u7529 3C66                                       u5865 55EC  
                                     u9250 22B8                                       u5890 576E  
                                     u7490 37EE                                       u7650 54E8  
                                     u7708 5AB8                                       u9500 1EE0  
                                     u7670 5A9E                                       u9510 1EE2  
                                     u7910 3318                                       u5895 5764  
                                     u7728 5AD2                                       u7920 3350  
                                     u7840 5BE4                                       u7594 2B96  
                                     u7690 5AB6                                       u7770 5F30  
                                     u7595 2B92                                       u9380 4BE8  
                                     u9700 2002                                       u7940 336E  
                                     u7780 5F32                                       u9710 2004  
                                     u7790 482A                                       u7870 466C  
                                     u7688 5AA0                                       u9640 1FAE  
                                     u9810 4B2E                                       u9650 1FB0  
                                     u9474 1EB0                                       u9475 1EAC  
                                     u9820 4B30                                       u9494 1ECE  
                                     u9495 1ECA                                       u8848 0838  
                                     u9920 27F0                                       u8849 0854  
                                     u8858 08B2                                       u8938 396A  
                                     u8859 08CE                                       u8939 3986  
                                     u8868 092C                                       u8788 0550  
                                     u8980 1B7A                                       u8869 0948  
                                     u8789 0578                                       u9918 278C  
                      inputScan@tableIndex 0537                                       u9919 27A6  
                                     u9880 3FF0                                       u9864 3FD2  
                                     u9865 3FCE                                       u9970 293C  
                                     u9980 293E                                       _WPUA 0401  
                                     _WPUB 0409                                       _WPUC 0411  
                              _outputState 0641                    getNumTxBuffersInUse@i16 0505  
                                     _have 5072                                       _main 4C38  
                                     _name 0848                                       _loop 303A  
                                     _poll 182C                 __end_of_mnsTRrqnpnCallback 62E8  
                                     fsr1h 04E2                                       fsr2h 04DA  
                                     indf1 04E7                                       indf2 04DF  
                                     fsr1l 04E1                                       fsr2l 04D9  
                         ?_producerEsdData 0501                               _addTestEvent 2B14  
                        ?_removeTableEntry 0501                    ?_APP_GetEventIndexState 0501  
                                     pop@q 0501                                       prodh 04F4  
                                     prodl 04F3                                       start 0A02  
                             ?_loadNvCache 0501                               bootPowerUp@a 0510  
                             bootPowerUp@b 050D                               bootPowerUp@i 050F  
                       ??_removeTableEntry 0524                              ?_APP_testMode 0501  
                           _SPI1STATUSbits 0087                            getEN@tableIndex 0516  
                             ___param_bank 0000                             ??_APP_addEvent 0546  
                    ?_getNumRxBuffersInUse 0501                           ?_producerPowerUp 0501  
                        findServiceIndex@i 0504                       __end_of_EEPROM_Write 5B7E  
                              _uptimeTimer 0692                                      ??_pop 0504  
                                    l10001 3394                                      l10011 33B2  
                                    l10201 0B64                                      l10121 2398  
                                    l10107 2356                                      l10027 33C8  
                                    l10035 33FE                                      l10019 33BC  
                                    l10133 23B6                                      l11021 1DC8  
                                    l10061 4654                                      l10053 45E0  
                                    l10311 0DC8                                      l10207 0B6A  
                                    l10151 23FA                                      l10039 3404  
                                    l10241 0BDE                                      l10153 2478  
                                    l10129 23B2                                      l11033 1E18  
                                    l11009 1D62                                      l10081 495E  
                                    l12001 1560                                      l10331 0E3E  
                                    l10235 0BD6                                      l10139 23C6  
                                    l11203 25E6                                      l10091 4986  
                                    l10067 5C22                                      l10075 5C42  
                                    l11141 2282                                      l10413 0F72  
                                    l10333 0E44                                      l10237 0BDA  
                                    l10173 2536                                      l10501 000A  
                                    l12013 15D2                                      l11135 2258  
                                    l11127 21D4                                      l11047 1E42  
                                    l11223 270E                                      l11231 273E  
                                    l10079 492A                                      l11129 2230  
                                    l11081 212A                                      l12201 447A  
                                    l11401 1F5E                                      l10433 0FD8  
                                    l10353 0E8C                                      l10521 00A2  
                                    l10505 0034                                      l10601 0250  
                                    l11233 2766                                      l11217 268A  
                                    l11321 5558                                      l11243 5906  
                                    l10291 0D84                                      l10275 0CFE  
                                    l10259 0C88                                      l10195 0B36  
                                    l10179 2552                                      l10603 0278  
                                    l10531 00CA                                      l11219 26D2  
                                    l12051 1704                                      l11059 5E26  
                                    l11093 217E                                      l10373 0ED4  
                                    l10189 0B18                                      l10621 02B4  
                                    l10525 00A6                                      l12045 16CC  
                                    l11247 591A                                      l11087 2158  
                                    l11175 22DA                                      l11503 4AE6  
                                    l11431 1FD2                                      l10447 1068  
                                    l10711 061A                                      l10703 05F0  
                                    l10551 01A6                                      l10519 009E  
                                    l11191 2558                                      l12071 17B8  
                                    l12047 16D0                                      l12055 1722  
                                    l10471 5846                                      l10463 57FC  
                                    l12311 3E60                                      l11343 4A00  
                                    l11319 5548                                      l11281 659C  
                                    l11257 4BD8                                      l11505 4B1A  
                                    l11425 1FB2                                      l10393 0F1C  
                                    l10801 0A7E                                      l10609 0288  
                                    l10537 0150                                      l10545 016E  
                                    l12129 5A4A                                      l12217 6144  
                                    l11353 4A18                                      l11345 4A0E  
                                    l11259 4BE4                                      l11371 1EA0  
                                    l10811 0A9E                                      l10731 0772  
                                    l10571 0224                                      l10547 01A2  
                                    l11195 2578                                      l10491 4440  
                                    l10483 43E4                                      l12411 1B38  
                                    l12403 1A66                                      l11269 4C18  
                                    l11453 2056                                      l11437 1FDA  
                                    l11461 2076                                      l10717 065E  
                                    l10637 031E                                      l10629 02DE  
                                    l10565 01EE                                      l10557 01C4  
                                    l11605 2828                                      l10493 445E  
                                    l12181 4E0C                                      l11293 53CE  
                                    l12335 59BC                                      l11447 203E  
                                    l11463 2096                                      l11543 3F72  
                                    l10727 068C                                      l10823 0ACE  
                                    l10583 022C                                      l11199 257C  
                                    l11607 28A6                                      l12167 4DCA  
                                    l11703 31D8                                      l11481 20D0  
                                    l11393 1F40                                      l11553 3F9E  
                                    l12281 311A                                      l10745 0980  
                                    l10737 0954                                      l10681 04BE  
                                    l10665 03D8                                      l10657 03AE  
                                    l10577 0228                                      l12089 1814  
                                    l12177 4E06                                      l12169 4DF0  
                                    l10913 5BBE                                      l10905 5B82  
                                    l12097 60B6                                      l11467 20A8  
                                    l12275 30D4                                      l10755 09AA  
                                    l10691 04F4                                      l10923 1B7E  
                                    l12363 18FA                        rebuildLookupTable@i 051C  
                                    l12189 4524                                      l11493 4AC6  
                                    l11397 1F4E                                      l11557 3FDE  
                                    l10749 099A                                      l10677 0430  
                                    l10669 0402                                      l10589 0230  
                                    l10597 0234                                      l10941 1BE8  
                                    l12357 18A4                                      l11495 4ACE  
                                    l11399 1F56                                      l12287 3190  
                                    l10935 1BA8                                      l11671 4112  
                                    l11663 40D6                                      l11655 40D4  
                                    l11807 32B8                                      l12527 4CAE  
                                    l11489 4AB6                                      l10793 0A5E  
                                    l10785 0A3E                                      l10777 0A1E  
                                    l10769 0A16                                      l10697 05A4  
                                    l10945 1BEC                                      l11593 27F4  
                                    l11585 27AE                                      l11833 2D18  
                                    l10873 3930                                      l12369 18FE  
                                    l11499 4ADE                                      l10971 1C98  
                                    l10939 1BE2                                      l11587 27E2  
                                    l11843 2D26                                      l10859 4790  
                                    l11907 6020                                      l11931 36EA  
                                    l10981 1CC2                                      l10957 1C3C  
                                    l10893 62CA                                      l10869 392C  
                                    l11943 373E                                      l10993 1D0E  
                                    l11849 2D48                                      l11697 31D0  
                                    l11867 2D82                                      l11891 6170  
                                    l11877 2DB0                                      l10999 1D38  
                                    l11991 1530                                      l11959 3768  
                                    l11985 150C                                      l11979 14F0  
                                    l11999 155C                                      ?_have 0501  
                                    ?_main 0501                               ?_initOutputs 0501  
                      processEnumeration@i 051C                            __end_of___awdiv 4BB6  
                                    ?_loop 0501                                      ?_poll 0501  
                                    u10000 411E                            __end_of___lldiv 4C38  
                                    u10020 417E                                      u10040 3202  
                                    u10130 36BE                                      u10070 2D22  
                                    u10320 1674                                      u10410 17F2  
                                    u10250 1546                                      u10260 1590  
                                    u10350 1702                                      u10190 14CC  
                                    u10280 15BC                                      u10440 5A80  
                                    u10290 1604                                      u10380 1762  
                          ___awdiv@divisor 0503                                      u10470 4DC6  
                                    u10455 5A84                                      u10730 18E2  
                                    u10590 3102                                      u10638 3F02  
                                    u10639 3F1C                                      u10488 4DCE  
                                    u10808 1A20                                      u10489 4DEC  
                                    u10809 1A3A                                      u10880 1B42  
                                    u10768 19A0                                      u10769 19BA  
                                    u10868 1B10                                      u10869 1B2A  
                          reqevCallback@ev 053B                       __end_of_factoryReset 3C8A  
                        _initTimedResponse 6624                             ?_APP_nvDefault 0501  
                          ___awdiv@counter 0505                            __end_of_canPoll 6636  
                 __end_of_nvTRnvrdCallback 5E58                            __end_of_doFlash 4B34  
         __end_of_factoryResetGlobalEvents 6648                             _APP_nvValidate 653E  
                                    _TMR0H 0319                                      _TMR0L 0318  
                                    _PORTB 04CF                                      _PORTC 04D0  
                          __end_of_doEvlrn 42F8                            __end_of_doNenrd 4EA6  
             nvProcessMessage@valueOrError 0557                            __end_of_doEvuln 4F90  
                          __end_of_doNnclr 6140                            __end_of_doNnevn 5FE2  
                          __end_of_doReqev 3568                            __end_of_doReval 40C2  
                          __end_of_doRqevn 5FAC                            __end_of_getHash 64B6  
                      ___lmul@multiplicand 0509                         ?_initTimedResponse 0501  
                       __p_paramBlock_text 0820                              ?_leds_powerUp 0501  
                         __end_of_TMR0_ISR 65D8                            __end_of_isEvent 6456  
                                    _canId 0595                                      _doSoD 6310  
                                    _getEN 50E0                                      _getNN 42F8  
                                    _getNV 5E92                                      _getEv 5226  
                     _enumerationStartTime 0564                            __end_of_readNVM 56E2  
                                    _errno 059E                                      _setNV 4EA6  
                                    _numEv 6648                                      have@i 0504  
                    _consumerEventCheckLen 6580                                      _setup 4CB8  
                      canReceiveMessage@mp 0514                            __end_of_sendRTR 5CDC  
             __end_of_getNumTxBuffersInUse 5626                                      main@i 05F8  
                          __end_of_mnsPoll 182C                              setNV@oldValue 0518  
                   APP_preProcessMessage@m 055C                    _timedResponseInProgress 65D8  
                          __end_of_tickGet 58F6                            ?_checkPowerOnPb 0501  
                                    pclath 04FA                               _switch2Event 0600  
                                    tablat 04F5                        ??_initTimedResponse 0501  
          mnsTRallDiagnosticsCallback@step 0532            mnsTRallDiagnosticsCallback@type 0501  
                                    poll@i 05EE                                      poll@m 05EF  
           __end_of_APP_GetEventIndexState 5C98                            __end_of_powerUp 3F26  
                  reqevCallback@tableIndex 053F                                      status 04D8  
                            ?_nvGetESDdata 0501                    reqevCallback@nodeNumber 053D  
                          __end_of_writeEv 5684                   ?_updateModuleErrorStatus 0501  
               __end_of_startTimedResponse 5DDE                           ?_nvGetDiagnostic 0507  
                           ??_APP_testMode 0542               processEnumeration@enumResult 051A  
                          __initialization 5364                               __end_of_have 50E0  
                             __end_of_main 4CB8                               __end_of_name 0850  
                             __end_of_loop 3196                               __end_of_poll 1B6C  
                            ?_nerdCallback 0531                   _incrementProducerCounter 6616  
                             ?_setLedState 0511                       __end_of_getParameter 38C8  
                __end_of_initTimedResponse 662A                     __end_of_APP_nvValidate 6554  
                                   ??_have 0501                               ?_setNewCanId 0501  
                                   ??_main 055E                           ?_eraseFlashBlock 0501  
                                   ??_loop 053D                               ?_sendMessage 051C  
                                   ??_poll 05E9                      __end_of_reqevCallback 4462  
                            __activetblptr 0003                          ??_consumerEsdData 0501  
                              readNVM@type 050C                        inputScan@switchMode 0538  
                        startEnumeration@i 050C                             ??_leds_powerUp 050B  
                  APP_postProcessMessage@m 0501                 __end_of_findEventForSwitch 650A  
                 ??_APP_postProcessMessage 0503                                     _C1CONH 0101  
                                   _C1CONL 0100                                     _C1CONT 0103  
                                   _C1CONU 0102                       rebuildLookupTable@sw 051B  
                                   ?_doSoD 0501                                     ?_getEN 050D  
                                   ?_getNN 050D                                     ?_getNV 0501  
                                   ?_getEv 050D                           __end_of_addEvent 2B14  
                                   ?_setNV 0515                               _canTransport FFF9  
                                   ?_numEv 0501                           ___awdiv@dividend 0501  
                                   ?_setup 0501                        APP_nvValidate@index 0502  
                        ??_consumerPowerUp 0501                                     _ANSELA 0400  
                                   _ANSELB 0408                                     _ANSELC 0410  
                 ?_canpanSendProducedEvent 052A                        APP_nvValidate@value 0501  
                                   _RB2PPS 020B                                     _RC3PPS 0214  
                                   _RC4PPS 0215                                     _RC5PPS 0216  
                         reqevCallback@nEv 0538                                     _TABLAT 04F5  
                   _producerProcessMessage 2556                    ??_CAN1_OperationModeGet 0501  
                           ??_nvGetESDdata 0501                    ??_CAN1_OperationModeSet 0501  
                                   _NVMADR 0043                                     _TMR0IE 250F  
                                   _TMR0IF 258F                                     _TMR0IP 1B2F  
                              initInputs@i 050E                              inputScan@diff 0535  
                         __end_of_checkLen 5004                               ?_removeEvent 052E  
                           _clearAllEvents 65AC                   __end_of_APP_factoryReset 635C  
                         __end_of_clearLed 5D20                                initTicker@i 0504  
                        ?_findServiceIndex 0501                           _rebuildHashtable 4180  
                        _canProcessMessage 465E                              teachPowerUp@i 0524  
                 reqevCallback@eventNumber 0539                 __end_of_APP_nvValueChanged 6658  
                       ??_findServiceIndex 0501                         _processEnumeration 32E6  
                       ?_canProcessMessage 0553                 ??_APP_processConsumedEvent 051A  
                   ??_getNumRxBuffersInUse 0501                             teachCheckLen@m 0530  
                                   ___lmul 58F6                   __end_of_mnsGetDiagnostic 63EC  
                     consumerEsdData@index 0501                             ??_nerdCallback 0533  
                                   _canPri FF54                                  ??___awdiv 0505  
                                   _doNerd 64B6                      _APP_preProcessMessage 276A  
                                   _getEVs 5290                                  ??___lldiv 0513  
                             ?_pollOutputs 0501                            sodTRCallback@sv 0533  
                         __end_of_initLeds 5566                              _nvDiagnostics 05B0  
                                ??_canPoll 051D                                     _column 059D  
                                ??_doFlash 050D                            getParameter@idx 0506  
                                   _memcpy 5C10                                  ??_doEvlrn 0553  
                                ??_doNenrd 052B                                  ??_doEvuln 0537  
                                ??_doNnclr 052F                                     clear_0 5384  
                                   clear_1 5396                                     clear_2 53A2  
                                ??_doNnevn 0529                                     clear_3 53AE  
                                ??_doReqev 0531                                  ??_doReval 052C  
                                   _setLed 5DDE                           ___awdiv@quotient 0507  
                                ??_doRqevn 0529                        ?_processEnumeration 0501  
                                   have@id 0503                                  ??_getHash 051C  
                          ??_APP_nvDefault 0501                        ??_canProcessMessage 0555  
                                   isa$std 0001                            ?_APP_nvValidate 0501  
                                   main@t1 05F9                                     main@t2 05FA  
                                ??_isEvent 0501                    APP_preProcessMessage@ev 05E4  
              producerProcessMessage@index 055B                                  ??_readNVM 050A  
                 nerdCallback@serviceIndex 0531                          _canReceiveMessage 2CE0  
               __end_of_teachGetDiagnostic 6434                           _nvProcessMessage 1B6C  
                                ??_sendRTR 0501                                  ??_mnsPoll 052B  
                                   pop@ret 0509                          ??_mnsFactoryReset 0515  
                             ivt0x900_base 0900                               __mediumconst FE38  
       APP_processConsumedEvent@tableIndex 051D                                  ??_tickGet 0505  
                         __end_of_services FF49                         _tableIndexToEvtIdx 662A  
              findServiceIndex@serviceType 0503                                     tblptrh 04F7  
                                   tblptrl 04F6                          doEvlrn@nodeNumber 054D  
                                   tblptru 04F8                               ??_FLASH_Read 0504  
                ??_timedResponseInProgress 0501                          nvProcessMessage@m 0553  
                   ?_consumerEventCheckLen 0530                         ?_canReceiveMessage 0510  
                                ??_powerUp 0525                     getParameterFlags@flags 0505  
        mnsTRserviceDiscoveryCallback@step 0532          mnsTRserviceDiscoveryCallback@type 0501  
                  consumerProcessMessage@m 0553                       __end_of_APP_addEvent 3AC6  
                                ??_writeEv 0517                               __p_name_text 0848  
                      addEvent@eventNumber 052D               nvTRnvrdCallback@valueOrError 0533  
                         __end_of_writeNVM 5B30                        ?_tableIndexToEvtIdx 0501  
                   __end_of_clearAllEvents 65C2                      mnsGetDiagnostic@index 050A  
                     ??_processEnumeration 0516                           ??_receiveOverrun 0501  
                               __accesstop 0560                    __end_of__initialization 53C6  
                __end_of_canProcessMessage 46F2              __end_of_consumerGetDiagnostic 6410  
                      ??_canReceiveMessage 0512                          EEPROM_Write@index 0509  
                           nvGetESDdata@id 0501                          EEPROM_Write@value 050C  
                            doEvuln@result 0537                       APP_addEvent@switchNo 054B  
                            ___rparam_used 0001                         teachCheckLen@learn 0533  
                               _eeBootFlag 0583                    ??_handleSelfEnumeration 050B  
                ?_factoryResetGlobalEvents 0501                              ?_teachPowerUp 0501  
                         FLASH_Write@index 0506                          _getParameterFlags 5D20  
                         FLASH_Write@value 0509                             __pcstackCOMRAM 0501  
mnsTRserviceDiscoveryCallback@serviceIndex 0531                               __pidataBANK5 6654  
                               _canEsdData 656A                         ?_getParameterFlags 0501  
                            __end_of_doSoD 6336           APP_GetEventIndexState@tableIndex 051C  
                                ?_TMR0_ISR 0501                              __end_of_getEN 514E  
                            __end_of_getNN 43AE                              __end_of_getNV 5ECC  
                            __end_of_getEv 5290                         __end_of_FLASH_Read 5226  
                            __end_of_setNV 4F1C                              __end_of_numEv 664C  
                            __end_of_setup 4D36                       ??_tableIndexToEvtIdx 0501  
                     _getNumTxBuffersInUse 55C6                         APP_factoryReset@sw 052F  
                __end_of_canReceiveMessage 2E96               nvTRnvrdCallback@serviceIndex 0531  
               __end_of_bootProcessMessage 489E                 consumerGetDiagnostic@index 050A  
                      ??_getParameterFlags 0505                                 _canService FFE5  
                        ??_isConsumedEvent 051C                                 addEvent@en 053B  
                               _canPowerUp 3196                    producerProcessMessage@m 0553  
                              inputScan@sv 053A                  reqevCallback@serviceIndex 0531  
                     __end_of_APP_testMode 65AC                 rebuildHashtable@tableIndex 0522  
                                  ??_doSoD 050A                                    ??_getEN 050F  
                                  ??_getNN 050F                                    ??_getNV 0503  
                                  ??_getEv 050F                                    ??_setNV 0516  
                            ?_sendMessage2 0525                              ?_sendMessage3 0525  
                            ?_sendMessage4 0525                              ?_sendMessage5 0525  
                            ?_sendMessage6 0525                              ?_sendMessage7 0525  
                                  ??_numEv 0501                      _setupModePreviousMode 058D  
                                  ??_setup 051D                               canEsdData@id 0501  
                             readNVM@index 0507                   mnsProcessMessage@newMode 0559  
                        initTicker@divider 0503                               _EEPROM_Write 5B30  
                               __pbssBANK5 0560                                 __pbssBANK6 0600  
                               __pbssBANK7 0700                               loadNvCache@i 0511  
                        _setLedStateNoSave 584A                            ?_clearAllEvents 0501  
               startTimedResponse@callback 0506                            canSendMessage@m 0518  
                      setNewCanId@newCanId 0515                         ?_setLedStateNoSave 050D  
                __end_of_getParameterFlags 5D60                             _loadFlashBlock 5D60  
                             _factoryReset 3BA8                             ??_teachPowerUp 0524  
                            _setLEDsByMode 6080                                    IVTBASEH 045E  
                                  IVTBASEL 045D                                    IVTBASEU 045F  
                            addEvent@evVal 0530                              addEvent@evNum 052F  
                               __pivt0x900 0900                             _canDiagnostics 06A2  
          __end_of_timedResponseInProgress 65E8                                mnsPowerUp@i 050D  
                       mnsProcessMessage@d 0557                         mnsProcessMessage@i 0555  
                       mnsProcessMessage@m 0553                       __end_of_leds_powerUp 61C4  
                               _bl_version FF49                     ?_APP_preProcessMessage 055C  
                                  ?___lmul 0505                        ??_setLedStateNoSave 050E  
                        _bootloaderVersion 0596                                 ??_TMR0_ISR 0501  
                                  ?_doNerd 0501                                    _C1TRECU 0136  
                                  ?_getEVs 0501                                    _C1TXQUA 0158  
                                _C1FIFOUA1 0164                                  _C1FIFOUA2 0170  
                                _C1FIFOUA3 017C                      ?_getNumTxBuffersInUse 0501  
                                  ?_memcpy 0501                              _C1BDIAG0Hbits 0139  
                                ?_addEvent 052B                         _mnsTRrqnpnCallback 62C0  
                           ___lmul@product 050D                              _C1BDIAG0Lbits 0138  
                                  ?_setLed 0501                                  _C1NBTCFGH 0105  
                                _C1NBTCFGL 0104                                  _C1NBTCFGT 0107  
                                _C1NBTCFGU 0106                      _producerGetDiagnostic 6380  
                     __end_of_nvGetESDdata 656A                           _canGetDiagnostic 4A30  
                               _flashBlock 0577                                 _flashFlags 058A  
                            ??_DEFAULT_ISR 0501                                    i2l12451 6488  
                                ?_checkLen 052B                          ?_nvTRnvrdCallback 0531  
                        reqevCallback@step 0532                        ?_mnsTRrqnpnCallback 0531  
                         ??_checkPowerOnPb 0543                                  ?_clearLed 0501  
                               _brightness 059A                                    _IVTLOCK 0459  
                                  _TBLPTRH 04F7                                    _TBLPTRL 04F6  
                                  _SPI1CLK 008C                                    _TBLPTRU 04F8  
                                _C1TXQCONH 0151                                  _C1TXQCONL 0150  
          flushFlashBlock@interruptEnabled 0505                                  _C1TXQCONT 0153  
                                _C1TXQCONU 0152                                    _NVMADRH 0044  
                                  _NVMADRL 0043                                    _SPI1TXB 0081  
                                  _NVMADRU 0045                                    _NVMDATL 0046  
                       ??_nvTRnvrdCallback 0533                                _C1FIFOCON1H 015D  
                              _C1FIFOCON2H 0169                                _C1FIFOCON1L 015C  
                              _C1FIFOCON3H 0175                                _C1FIFOCON2L 0168  
                              _C1FIFOCON3L 0174                                _C1FIFOCON1T 015F  
                              _C1FIFOCON1U 015E                                _C1FIFOCON2T 016B  
                              _C1FIFOCON2U 016A                                _C1FIFOCON3T 0177  
                              _C1FIFOCON3U 0176                                    _NVMLOCK 0042  
                           ??_sendMessage2 0527                             ??_sendMessage3 0528  
                           ??_sendMessage4 0529                             ??_sendMessage5 052A  
                           ??_sendMessage6 052B                             ??_sendMessage7 052C  
                         _teachDiagnostics 05C5                  __end_of_setLedStateNoSave 58A0  
                     __end_of_nerdCallback 584A                             inputScan@onOff 053B  
                isConsumedEvent@eventIndex 051C                             checkLen@needed 052D  
                             _getParameter 37B4                                  ?_initLeds 0501  
                   __end_of_loadFlashBlock 5DA0                             _outputPollTime 069A  
                          _timerExtension1 0589                            _timerExtension2 0588  
             __end_of_eventConsumerService FF95                             ?_setLEDsByMode 0501  
                   mnsTRrqnpnCallback@step 0532                     mnsTRrqnpnCallback@type 0501  
           canReceiveMessage@incomingCanId 0513                        _consumerDiagnostics 05B6  
               ??_incrementProducerCounter 0501                                poll@handled 05ED  
                     ??_mnsTRrqnpnCallback 0533                          __end_of_findEvent 4926  
                                  __Hparam 0000                consumerEventCheckLen@needed 0532  
                                  __Lparam 0000                            _consumerEsdData 65E8  
                   _APP_postProcessMessage 664C                                 _initEvents 661E  
           APP_GetEventIndexState@switchNo 051D                         pbDownTimer@timeout 051C  
                               _initInputs 49AC                                ?_canEsdData 0501  
                        __end_of_pbUpTimer 450C                           pbUpTimer@timeout 051C  
                               _initTicker 5A42                                    ___awdiv 4B34  
                               _initRomOps 6526                                    ___lldiv 4BB6  
                                  _canPoll 6630                                    _doFlash 4AB2  
                               ??_addEvent 0532                                    _doEvlrn 423E  
                               _paramBlock 0820                                    _doNenrd 4E30  
                       canProcessMessage@m 0553                                    _doEvuln 4F1C  
                                  _doNnclr 6112                                    _doNnevn 5FAC  
                                  _doReqev 342A                                    _doReval 4002  
                                  __pcinit 5364                               initOutputs@i 0501  
                            _teachCheckLen 5566                                    _doRqevn 5F76  
                        __end_of_leds_poll 2328                         _startTimedResponse 5DA0  
                                  __ramtop 4000                                    _getHash 6498  
                   setLedStateNoSave@ledNo 0510                                  ?_writeNVM 050E  
                       doEvlrn@eventNumber 054F                                    __ptext0 4C38  
                                  __ptext1 4CB8                                    __ptext2 53CC  
                                  __ptext3 5502                                    __ptext4 49AC  
                                  __ptext5 661E                                    __ptext6 3E4A  
                                  __ptext7 6140                                    __ptext8 60B2  
                                  __ptext9 36A0                            _consumerPowerUp 616C  
                                  _isEvent 6434                                    _pbTimer 0560  
                       APP_nvDefault@index 0501                     setLedStateNoSave@state 050D  
                          getEv@tableIndex 0518                           _EnumerationState 0593  
                        ??_canFactoryReset 0515                          _mnsProcessMessage 0000  
                                  _nvCache 0700                                 _mode_flags 059F  
                              ?_canPowerUp 0501                                    _readNVM 5684  
                      _APP_isProducedEvent 5E58                  startEnumeration@txWaiting 050B  
                               getNN@flags 0516                             _nvFactoryReset 5FE2  
                                  getEN@hi 0512                                    getEN@lo 0514  
                        ??_teachGetESDdata 0501                   __end_of_rebuildHashtable 423E  
                               ??_checkLen 052F                                    getNN@hi 0512  
                                  getNN@lo 0514                                 _mode_state 0590  
                       doReqev@eventNumber 052E                                    _sendRTR 5C98  
                                  _mnsPoll 1492                         ?_mnsProcessMessage 0553  
                                  _tickGet 58A0                               _flashCounter 057A  
                               ??_clearLed 0509                          doNenrd@tableIndex 0530  
                      ?_startTimedResponse 0505                               _isEvent$6167 0501  
                               clearLed@no 050C                                 getNV@index 0504  
                                  _rxQueue 05BC                          doNenrd@nodeNumber 052B  
                 ??_consumerProcessMessage 0555                                    _powerUp 3E4A  
                        __end_of_inputScan 20D6                      canReceiveMessage@temp 0516  
                  ?_producerProcessMessage 0553                                    _started 05A0  
                       doRqevn@eventNumber 0529                                 _mnsService FFD1  
                        __end_of_nvService FFD1                                 _mnsPowerUp 36A0  
                        __end_of_nvPowerUp 60E2                   APP_preProcessMessage@enn 05E5  
                      __end_of_DEFAULT_ISR 665A                                    _writeEv 5626  
                     end_of_initialization 53C6                        ??_mnsProcessMessage 05C9  
                             writeNVM@type 0514                                 getEv@evNum 050D  
         prepareSelfEnumResponse@txFifoObj 0501                           producerPowerUp@i 0501  
                                  memcpy@d 0507                                    memcpy@n 0505  
                                  memcpy@s 0509                 APP_nvValueChanged@oldValue 0502  
                               ??_initLeds 0511                              ??_EEPROM_Read 0504  
                          ?_loadFlashBlock 0501                           APP_addEvent@leds 0549  
                     ?_APP_isProducedEvent 0501              __end_of_CAN1_OperationModeGet 660C  
            __end_of_CAN1_OperationModeSet 5C10                          ?_APP_factoryReset 0501  
                         _startEnumeration 594C                         _findEventForSwitch 64EE  
                          ___lldiv@divisor 050F                               writeEv@evVal 0516  
                 __end_of_nvProcessMessage 1E72                               writeEv@evNum 0515  
                          ___lldiv@counter 0517                       ??_startTimedResponse 0509  
                  pollTimedResponse@result 0542                         ??_APP_factoryReset 052F  
          eraseFlashBlock@interruptEnabled 0504                           setLedState@ledNo 0514  
                                _SPI1TCNTH 0083                                  _SPI1TCNTL 0082  
                         ??_APP_nvValidate 0502                              ??_FLASH_Write 050A  
                     nvGetDiagnostic@index 050A                                    postdec1 04E5  
                                  postdec2 04DD                     ??_getNumTxBuffersInUse 0501  
                                  postinc0 04EE                                    postinc1 04E6  
                                  postinc2 04DE                           setLedState@state 0511  
                          _mnsFactoryReset 52FA                          ?_mnsGetDiagnostic 0507  
     EEPROM_WriteNoVerify@interruptEnabled 0508                        ?_findEventForSwitch 0501  
                  _prepareSelfEnumResponse 514E                               _APP_addEvent 39CC  
                   ?_producerGetDiagnostic 0507                             ?_teachCheckLen 0530  
                             doFlash@ledNo 050F                  __end_of_mnsProcessMessage 0B16  
                       doNnevn@eventNumber 0529                                 _tmpMessage 06C8  
                       ??_mnsGetDiagnostic 050A             startTimedResponse@serviceIndex 0505  
                   __end_of_nvFactoryReset 6018                                 ??_writeNVM 0512  
                               _showStatus 3C8A                                  _PORTAbits 04CE  
                           loop@tableIndex 0545                                 _previousNN 057E  
                  ??_consumerEventCheckLen 0533                         _APP_nvValueChanged 6656  
                _timedResponseServiceIndex 0587                                 _priorities FE39  
                            ??_pbDownTimer 0518                            sendMessage2@opc 0527  
                     __end_of_teachPowerUp 604C                            sendMessage3@opc 0528  
                          sendMessage4@opc 0529                            sendMessage5@opc 052A  
                          sendMessage6@opc 052B                            sendMessage7@opc 052C  
                        _eventTeachService FF95             __end_of_producerProcessMessage 276A  
                                _TRISAbits 04C6                                  _TRISBbits 04C7  
                                _TRISCbits 04C8                         _timedResponseDelay 0582  
                   _mnsProcessMessage$4895 0556                                showStatus@s 0503  
                          loadNvCache@temp 050F                       ??_findEventForSwitch 0501  
                      ?_APP_nvValueChanged 0501                              ??_bootEsdData 0501  
                               isEvent@opc 0502                            ??_setLEDsByMode 0504  
                            _sodTRCallback 5F06                        teachCheckLen@needed 0532  
                  __end_of_consumerEsdData 65F6            ??_mnsTRserviceDiscoveryCallback 0533  
                        ??_flushFlashBlock 0505                      ??_APP_isProducedEvent 0519  
                       _teachGetDiagnostic 6410                          _heartbeatSequence 058B  
                      _teachProcessMessage 0B16     canpanSendProducedEvent@producedEventEN 052D  
   canpanSendProducedEvent@producedEventNN 052F                         canSendMessage@temp 0516  
                        removeTableEntry@i 052C                              ??_bootPowerUp 050D  
                             _APP_testMode 6596                            _isConsumedEvent 660C  
            __end_of_handleSelfEnumeration 49AC                                ?_initEvents 0501  
                      __end_of_EEPROM_Read 5F06                    __end_of_consumerPowerUp 6198  
                      ?_teachGetDiagnostic 0507                                ?_initInputs 0501  
                        _canTransmitFailed 0594                                ?_initTicker 0501  
                              ?_initRomOps 0501                       ??_APP_nvValueChanged 0503  
                    APP_isProducedEvent@ev 051A                       __end_of_sendMessage2 6242  
                     __end_of_sendMessage3 6218                       __end_of_sendMessage4 62C0  
                     __end_of_sendMessage5 6296                       __end_of_sendMessage6 61EE  
                     __end_of_sendMessage7 626C                             __end_of___lmul 594C  
                           __end_of_canPri FF59                             __end_of_doNerd 64D2  
               removeTableEntry@tableIndex 052D                             __end_of_getEVs 52FA  
                          ?_nvFactoryReset 0501                           _removeTableEntry 3568  
                           __end_of_memcpy 5C54                         canReceiveMessage@m 0510  
                           __end_of_setLed 5E1C                       ?_teachProcessMessage 0553  
                __end_of_eventTeachService FFA9                        __end_of_FLASH_Write 3E4A  
                consumerProcessMessage@enn 0558                      __end_of_APP_nvDefault 6112  
                consumerProcessMessage@ret 055A                       _eventConsumerService FF81  
                           _canSendMessage 10D4                          ??_producerEsdData 0501  
                              _DEFAULT_ISR 6658                               _name_absaddr 0848  
                      start_initialization 5364                              ??_driveColumn 0501  
                         ??_clearAllEvents 052E                  ?_APP_processConsumedEvent 0518  
                 ??_APP_GetEventIndexState 051C                               _leds_powerUp 6198  
                     ??_teachGetDiagnostic 050A                                __end_of_pop 465E  
                            factoryReset@i 0532                                ?_mnsPowerUp 0501  
                      _APP_isConsumedEvent 46F2               ?_mnsTRallDiagnosticsCallback 0531  
             __end_of_EEPROM_WriteNoVerify 5A42                          ??_producerPowerUp 0501  
                           ?_sodTRCallback 0531                        __end_of_pbDownTimer 45B6  
                       _bootProcessMessage 4816                              ?_addTestEvent 0501  
                      _getNextWriteMessage 3AC6           __end_of_incrementProducerCounter 661E  
                             _nvGetESDdata 6554                   __end_of_canGetDiagnostic 4AB2  
                  ??_APP_preProcessMessage 05E1                    __end_of_mnsFactoryReset 5364  
                            ??_loadNvCache 050D                      _consumerGetDiagnostic 63EC  
                             inputScan@row 0536                        __end_of_bootEsdData 6380  
                      ?_bootProcessMessage 0553                               doEvlrn@evVal 0552  
                             doEvlrn@evNum 0551                            numEv@tableIndex 0501  
                ??_prepareSelfEnumResponse 0501                     startTimedResponse@type 0509  
               __end_of_evtIdxToTableIndex 663C                   rebuildHashtable@chainIdx 0523  
                                 ??___lmul 050D                            ??_teachCheckLen 0534  
                             doNenrd@index 052F                       ?_APP_isConsumedEvent 0501  
                                 ??_doNerd 050A                                   ??_getEVs 050D  
                      bootProcessMessage@m 0553                         addEvent@forceOwnNN 0531  
                             _nerdCallback 57F2                                __pdataBANK5 05FB  
                  _updateModuleErrorStatus 65F6                        __end_of_bootService FFBD  
                                 ??_memcpy 0507                        __end_of_bootPowerUp 4180  
                                 ??_setLed 0509                     __end_of_canSendMessage 1492  
                              ?_showStatus 0501                              ??_initOutputs 0501  
                     ?_getNextWriteMessage 0501                      ??_teachProcessMessage 0555  
                 ?_timedResponseInProgress 0501                                __pbssBIGRAM 078C  
                            _reqevCallback 43AE           APP_processConsumedEvent@polarity 0520  
                     ??_bootProcessMessage 0555                                __pbssCOMRAM 055E  
                        ??_nvGetDiagnostic 050A                           canSendMessage@mp 050E  
                            __pcstackBANK5 05C9                                 setNV@index 0519  
                               setNV@value 0515                         addEvent@tableIndex 053E  
                                addEvent@e 053D                         addEvent@nodeNumber 052B  
                               inputScan@i 0539              ??_mnsTRallDiagnosticsCallback 0533  
                 _factoryResetGlobalEvents 6642                             ??_addTestEvent 053F  
                      __end_of_driveColumn 5AE2                    __end_of_isConsumedEvent 6616  
                         ?_consumerEsdData 0501                                _EEPROM_Read 5ECC  
                       initTicker@priority 0502                    ?_APP_postProcessMessage 0501  
                        ??_eraseFlashBlock 0501                 __end_of_rebuildLookupTable 5502  
             canpanSendProducedEvent@onOff 052A                  APP_processConsumedEvent@m 0518  
                           mnsPowerUp@temp 050E                               doNnevn@count 052B  
                     teachProcessMessage@m 0553                    _canpanSendProducedEvent 5434  
                          _canFactoryReset 650A      __end_of_mnsTRserviceDiscoveryCallback 4816  
            _mnsTRserviceDiscoveryCallback 4786               mnsTRallDiagnosticsCallback@d 0535  
                               nvPowerUp@i 0512                            tickGet@IntFlag1 0506  
                          tickGet@IntFlag2 0505                     _consumerProcessMessage 2328  
                          _teachGetESDdata 6456                      ??_APP_isConsumedEvent 0519  
                             ??_canEsdData 0501                          _lastInputScanTime 056C  
                                 _C1FIFOBA 014C                              __pmediumconst FE38  
                         ?_consumerPowerUp 0501                           getEVs@tableIndex 0516  
                                 ?___awdiv 0501                                  __ptext100 3F26  
                                __ptext101 1E72                                  __ptext110 10D4  
                                __ptext102 626C                                  __ptext111 594C  
                                __ptext103 5E92                                  __ptext120 5DDE  
                                __ptext112 5C98                                  __ptext104 5290  
                                __ptext121 5CDC                                  __ptext113 6434  
                                __ptext105 64EE                                  __ptext130 58F6  
                                __ptext122 6526                                  __ptext114 5072  
                                __ptext106 5A92                                  __ptext131 4BB6  
                                __ptext123 599E                                  __ptext115 55C6  
                                __ptext107 5434                                  __ptext140 6596  
                                __ptext132 3BA8                                  __ptext124 3C8A  
                                __ptext116 573E                                  __ptext108 6296  
                                __ptext141 65AC                                  __ptext133 5FE2  
                                __ptext125 4462                                  __ptext117 3AC6  
                                __ptext109 4D36                                _FLASH_Write 3D6A  
                                __ptext150 56E2                                  __ptext142 3568  
                                __ptext134 52FA                                  __ptext126 450C  
                                __ptext118 6616                                  __ptext151 6650  
                                __ptext143 2B14                                  __ptext135 650A  
                                __ptext127 20D6                                  __ptext119 4AB2  
                                __ptext160 5684                                  __ptext152 5B30  
                                __ptext144 2942                                  __ptext136 663C  
                                __ptext128 58A0                                  __ptext161 51BA  
                                __ptext153 65F6                                  __ptext145 5626  
                                __ptext137 60E2                                  __ptext129 4B34  
                                __ptext162 5ECC                                  __ptext154 59F0  
                                __ptext146 5AE2                                  __ptext138 6336  
                                __ptext163 6478                                  __ptext155 4180  
                                __ptext147 3D6A                                  __ptext139 6642  
                                __ptext164 65C4                                  __ptext156 489E  
                                __ptext148 5D60                                  __ptext165 6658  
                                __ptext157 42F8                                  __ptext149 5798  
                                __ptext158 6498                                  __ptext159 50E0  
                                 _C1MASK0H 0191                                   _C1MASK0L 0190  
                                 _C1MASK0T 0193                                   _C1MASK0U 0192  
                                _findEvent 489E                                   ?___lldiv 050B  
                                _ledMatrix 0568                     rebuildLookupTable@swNo 0519  
                      __end_of_loadNvCache 5BC8                               doReqev@evVal 0531  
                             doReqev@evNum 0530                            getNN@tableIndex 0517  
                            ??_setLedState 0512                                   ?_canPoll 0501  
                            initLeds@ledNo 0514                               doReval@enNum 052D  
                                 ?_doFlash 0501                               doReval@evVal 052F  
                             doReval@evNum 052B                                  _flashTime 069E  
                                 ?_doEvlrn 054D                                   ?_doNenrd 0501  
                                 ?_doEvuln 0533                                   ?_doNnclr 0501  
                                 ?_doNnevn 0501                                   ?_doReqev 052C  
                                 ?_doReval 052B                          teachGetESDdata@id 0501  
                       sodTRCallback@value 0534                                  _ledStates 0621  
                            initLeds@state 0513                                   ?_doRqevn 0501  
                    ??_getNextWriteMessage 0504                                   ?_getHash 0518  
                            ??_setNewCanId 0515                                  _pbUpTimer 4462  
                          ?_canSendMessage 050E                              ??_sendMessage 0524  
                                 ?_isEvent 0501                           _findServiceIndex 5004  
                         nerdCallback@step 0532                           nerdCallback@type 0501  
                           ?_reqevCallback 0531                               ??_canPowerUp 050D  
                           _heartbeatTimer 0696                                __smallconst FE38  
                                 ?_readNVM 0507                                 _C1FLTCON0L 0180  
                 __end_of_startEnumeration 599E                                 _C1FLTOBJ0H 018D  
                               _C1FLTOBJ0L 018C                                 _C1FLTOBJ0T 018F  
                               _C1FLTOBJ0U 018E                                 _C1CONHbits 0101  
                                _leds_poll 20D6                                   ?_sendRTR 0501  
               producerGetDiagnostic@index 050A                                   ?_mnsPoll 0501  
                        ?_rebuildHashtable 0501            __end_of_prepareSelfEnumResponse 51BA  
         CAN1_OperationModeSet@requestMode 0502                                   ?_tickGet 0501  
  mnsTRallDiagnosticsCallback@serviceIndex 0531                                   _CANRXPPS 023D  
                              _pbDownTimer 450C                                 _C1CONTbits 0103  
                               _C1CONUbits 0102                                  checkLen@m 052B  
                      __end_of_initOutputs 5434                           ??_loadFlashBlock 0501  
                                 ?_powerUp 0501                         ??_rebuildHashtable 051E  
                          ??_sodTRCallback 0533                                   ?_writeEv 0515  
                               _C1INTHbits 011D                                _bootEsdData 635C  
                       __end_of_canEsdData 6580                                 _C1INTTbits 011F  
                               _C1INTUbits 011E                                _flashBuffer 05FB  
                   consumerEventCheckLen@m 0530                             doReval@evIndex 052C  
                                _inputScan 1E72             __end_of_APP_postProcessMessage 6650  
               findEventForSwitch@switchNo 0501                    getNumRxBuffersInUse@i16 0505  
                                _nvService FFBD                        consumerPowerUp@temp 0501  
                            ??_removeEvent 0532                                   _LATAbits 04BE  
                                 _LATBbits 04BF                                   _LATCbits 04C0  
                                _nvPowerUp 60B2                          findEvent@chainIdx 0529  
                              _flashToggle 0599                     ?_consumerGetDiagnostic 0507  
                                 _IPR0bits 0362                                   _PIE0bits 049E  
                     rebuildHashtable@hash 0521                           ?_mnsFactoryReset 0501  
                          APP_addEvent@oti 054C                                  _rxBuffers 0744  
                                getHash@en 051A                                  getHash@nn 0518  
                           _flashFlushTime 0686                               _SPI1CON0bits 0084  
                                 _IVTBASEH 045E                                   _IVTBASEL 045D  
                                 _IVTBASEU 045F     __end_of_APP_isSuitableTimeToWriteFlash 6654  
           _APP_isSuitableTimeToWriteFlash 6650                                _bootService FFA9  
                       __end_of_canService FFF9                               _teachPowerUp 6018  
                              _bootPowerUp 40C2                                   _PIR0bits 04AE  
                       __end_of_canPowerUp 32E6                                   _SPI1BAUD 0089  
                        ?_nvProcessMessage 0553                                   _SPI1CON0 0084  
                                 _SPI1CON1 0085                                   _SPI1CON2 0086  
                        doReqev@tableIndex 0533                    ??_producerGetDiagnostic 050A  
                           _mnsDiagnostics 05A2                  ??_updateModuleErrorStatus 0501  
                    APP_isConsumedEvent@ev 051A                           ivt0x900_undefint 0A00  
                        doReqev@nodeNumber 052C                                _pbWasPushed 058C  
                                 _TMR0_ISR 65C4                              ??_pollOutputs 0505  
                       ??_nvProcessMessage 0555                  EEPROM_WriteNoVerify@index 0501  
                               ?_findEvent 051E                  EEPROM_WriteNoVerify@value 0504  
                     _EEPROM_WriteNoVerify 59F0           consumerProcessMessage@tableIndex 055B  
                        _teachFactoryReset 663C                                 ?_pbUpTimer 0501  
                           sendMessage@len 051C                             sendMessage@opc 0524  
                        _timedResponseTime 068A                          _timedResponseStep 0584  
                        _timedResponseType 0585                                  _startTime 0570  
                         _enumerationState 0592                               doRqevn@count 052B  
                                _transport 0580              APP_processConsumedEvent@ledNo 0522  
            APP_processConsumedEvent@flags 051F                         ?_teachFactoryReset 0501  
                ?_incrementProducerCounter 0501              APP_processConsumedEvent@onOff 0521  
                                _startupNv 0598                 canReceiveMessage@rxFifoObj 0518  
                               ?_leds_poll 0501                        __end_of_setLedState 5F76  
                          _flushFlashBlock 5798              __end_of_consumerEventCheckLen 6596  
        canpanSendProducedEvent@tableIndex 052B                                _driveColumn 5A92  
                      __end_of_setNewCanId 6080                        __end_of_sendMessage 4DB4  
                          _eventCoeService FF59                        ??_teachFactoryReset 052F  
                          checkLen@service 052E                                _INTCON0bits 04D6  
                       __end_of_bl_version FF54                          ___lmul@multiplier 0505  
                             _sendMessage2 6218                               _sendMessage3 61EE  
                             _sendMessage4 6296                               _sendMessage5 626C  
                             _sendMessage6 61C4                               _sendMessage7 6242  
                  sodTRCallback@tableIndex 0532                            nvFactoryReset@i 0517  
                               ?_inputScan 0501                    __end_of_canFactoryReset 6526  
                 __end_of_removeTableEntry 36A0                           ?_isConsumedEvent 0501  
                  __end_of_teachGetESDdata 6476                                 ?_nvPowerUp 0501  
                ??_canpanSendProducedEvent 052B               __end_of_eventProducerService FF81  
                              _loadNvCache 5B7E                                   __Hrparam 0000  
                              _eventChains 078C                   evtIdxToTableIndex@evtIdx 0501  
          APP_processConsumedEvent@ledMode 051E                    APP_addEvent@eventNumber 0541  
                                memcpy@tmp 050B                      _CAN1_OperationModeGet 6602  
                                 __Lrparam 0000                      _CAN1_OperationModeSet 5BC8  
                   _APP_GetEventIndexState 5C54                          doReval@tableIndex 052E  
                             ??_initEvents 051D                            _producerEsdData 64D2  
                             ??_initInputs 050D                           ??_nvFactoryReset 0515  
                             ??_initTicker 0501                        __end_of_removeEvent 6310  
                             ??_initRomOps 0501                     removeEvent@eventNumber 0530  
         __end_of_APP_processConsumedEvent 303A                  __end_of_teachFactoryReset 6642  
                    ?_EEPROM_WriteNoVerify 0501                             APP_testMode@sw 0542  
                                 _addEvent 2942             ?_mnsTRserviceDiscoveryCallback 0531  
                          ??_reqevCallback 0533                       __end_of_addTestEvent 2CE0  
                              _initOutputs 53CC                            _producerPowerUp 6140  
                       doNenrd@eventNumber 052D                        __end_of_pollOutputs 4002  
                             ?_DEFAULT_ISR 0501                                   _checkLen 4F90  
            APP_preProcessMessage@switchNo 05E7                                _buttonState 067E  
                               _T0CON0bits 031A                                 _T0CON1bits 031B  
                              _current_row 059C                        _producerDiagnostics 05C1  
                                 _cathodes 059B                                   _clearLed 5CDC  
          __end_of_updateModuleErrorStatus 6602                                 _FLASH_Read 51BA  
                    getNextWriteMessage@wr 050D                                   __ptext10 616C  
                                 __ptext11 3196                                   __ptext20 182C  
                                 __ptext12 40C2                                   __ptext21 4DB4  
                                 __ptext13 6018                                   __ptext30 6630  
                                 __ptext22 5E1C                                   __ptext14 5B7E  
                                 __ptext31 1492                                   __ptext23 4786  
                                 __ptext15 6198                                   __ptext40 2556  
                                 __ptext32 2CE0                                   __ptext24 38C8  
                                 __ptext16 6624                                   __ptext41 1B6C  
                                 __ptext33 45B6                                   __ptext25 62C0  
                                 __ptext17 5A42                                   __ptext50 342A  
                                 __ptext42 0000                                   __ptext34 5C10  
                                 __ptext26 43AE                                   __ptext18 5BC8  
                                 __ptext51 6648                                   __ptext43 2328  
                                 __ptext35 4926                                   __ptext27 57F2  
                                 __ptext19 6602                                   __ptext60 39CC  
                                 __ptext52 5FAC                                   __ptext44 465E  
                                 __ptext36 32E6                                   __ptext28 5F06  
                                 __ptext61 549C                                   __ptext53 6112  
                                 __ptext45 4816                                   __ptext37 604C  
                                 __ptext29 662A                                   __ptext70 656A  
                                 __ptext62 5C54                                   __ptext54 64B6  
                                 __ptext46 0B16                                   __ptext38 514E  
                                 __ptext71 635C                                   __ptext63 5E58  
                                 __ptext55 4E30                                   __ptext47 5566  
                                 __ptext39 276A                                   __ptext80 61C4  
                                 __ptext72 6456                                   __ptext64 4EA6  
                                 __ptext56 6636                                   __ptext48 5F76  
                                 __ptext81 61EE                                   __ptext73 6380  
                                 __ptext65 6656                                   __ptext57 4F1C  
                                 __ptext49 4002                                   __ptext90 4F90  
                                 __ptext82 6218                                   __ptext74 63A4  
                                 __ptext66 653E                                   __ptext58 62E8  
                                 __ptext91 2E96                                   __ptext83 37B4  
                                 __ptext75 63C8                                   __ptext67 64D2  
                                 __ptext59 423E                                   __ptext92 5F3E  
                                 __ptext84 5D20                                   __ptext76 63EC  
                                 __ptext68 6554                                   __ptext93 584A  
                                 __ptext85 6242                                   __ptext77 4A30  
                                 __ptext69 65E8                                   __ptext94 6310  
                                 __ptext86 660C                                   __ptext78 6410  
                                 __ptext95 65D8                                   __ptext87 46F2  
                                 __ptext79 6080                                   __ptext96 5DA0  
                                 __ptext88 5226                                   __ptext97 5004  
                                 __ptext89 6580                                   __ptext98 664C  
                                 __ptext99 303A               __end_of_getNumRxBuffersInUse 5798  
              __end_of_APP_isProducedEvent 5E92                               ??_mnsPowerUp 050D  
                                 _ledTimer 068E                                   _ledState 057C  
                        sodTRCallback@type 0501                              ?_EEPROM_Write 0509  
                       __end_of_initEvents 6624                CAN1_OperationModeSet@status 0501  
                       __end_of_initInputs 4A30                                _OSCCON1bits 00AD  
                       __end_of_initTicker 5A92                         __end_of_initRomOps 653E  
                                 _initLeds 5502                                   doNnevn@i 052C  
                       __end_of_paramBlock 0840                             canPowerUp@temp 050D  
                    __end_of_setLEDsByMode 60B2                              ?_factoryReset 0501  
                         _nvTRnvrdCallback 5E1C                              findEvent@hash 0528  
                                 doRqevn@i 052C                          ?_canGetDiagnostic 0507  
                              getEVs@evIdx 0517                                _IVTLOCKbits 0459  
            __end_of_APP_preProcessMessage 2942                         ??_canGetDiagnostic 050A  
                                 isa$xinst 0000                                   _services FF39  
                           _receiveOverrun 6478                   clearAllEvents@tableIndex 052E  
                          _nvGetDiagnostic 63A4                                ??_findEvent 0522  
                    _handleSelfEnumeration 4926                                _setLedState 5F3E  
                  canSendMessage@txFifoObj 051A                         __end_of_mnsService FFE5  
                  __end_of_flushFlashBlock 57F2                          writeEv@tableIndex 0520  
                       __end_of_mnsPowerUp 37B4                               ??_showStatus 0501  
                              ??_pbUpTimer 0518                                   _writeNVM 5AE2  
                         sendRTR@txFifoObj 0501                 processEnumeration@newCanId 051B  
                   APP_addEvent@forceOwnNN 0545            __end_of_canpanSendProducedEvent 549C  
                              _setNewCanId 604C                                _sendMessage 4D36  
                  __end_of_eventCoeService FF6D         handleSelfEnumeration@receivedCanId 050F  
                            writeNVM@index 050E                              writeNVM@value 0511  
                              ??_leds_poll 050B                 ??_factoryResetGlobalEvents 052F  
                       _evtIdxToTableIndex 6636                             _inputScan$1239 0533  
                    canGetDiagnostic@index 050B                                _NVMCON0bits 0040  
                              _NVMCON1bits 0041                                   memcpy@d1 0501  
                                 memcpy@s1 0503                            _eraseFlashBlock 56E2  
                        APP_addEvent@evVal 0544                          APP_addEvent@evNum 0543  
                  teachGetDiagnostic@index 050A                             ??_EEPROM_Write 050D  
                             pollOutputs@i 0509                 __end_of_processEnumeration 342A  
                              getHash@hash 051D                            _C1FIFOCON1Hbits 015D  
                                 intlevel2 0000                        ?_evtIdxToTableIndex 0501  
                          _C1FIFOCON3Hbits 0175                                   setLed@no 050B  
                            ?_getParameter 0501                 canpanSendProducedEvent@opc 052C  
                              ??_inputScan 0531                       getNextWriteMessage@q 0501  
                        initInputs@startNv 050D                           ?_canFactoryReset 0501  
                   APP_addEvent@tableIndex 054A                               ?_EEPROM_Read 0501  
                         ___lldiv@dividend 050B                             ??_factoryReset 0530  
                  __end_of_producerEsdData 64EE                                ??_nvPowerUp 0512  
                    removeEvent@tableIndex 0532                           ?_teachGetESDdata 0501  
                 __end_of_findServiceIndex 5072                                _removeEvent 62E8  
                   APP_addEvent@nodeNumber 053F                    ?_consumerProcessMessage 0553  
                       __end_of_showStatus 3D6A             mnsTRrqnpnCallback@serviceIndex 0531  
                    removeEvent@nodeNumber 052E                     ?_CAN1_OperationModeGet 0501  
                   ?_CAN1_OperationModeSet 0501                         _paramBlock_absaddr 0820  
                   __end_of_receiveOverrun 6498                         __end_of_priorities FF39  
                         ??_canSendMessage 0510                __end_of_teachProcessMessage 10D4  
               __end_of_tableIndexToEvtIdx 6630                  sodTRCallback@serviceIndex 0531  
                     __end_of_canTransport FFFF                               ?_FLASH_Write 0506  
                  __end_of_producerPowerUp 616C                         tickGet@currentTime 0507  
                   ??_EEPROM_WriteNoVerify 0505                                   powerUp@i 0527  
                               _SPI1TWIDTH 0088                                _pollOutputs 3F26  
                     ??_evtIdxToTableIndex 0501                          _pollTimedResponse 4DB4  
                    __end_of_teachCheckLen 55C6                   ??_producerProcessMessage 0555  
                       _rebuildLookupTable 549C                         ?_pollTimedResponse 0501  
                 _APP_processConsumedEvent 2E96                          FLASH_Read@address 0501  
                         _APP_factoryReset 6336                    nerdCallback@eventNumber 0535  
            APP_isConsumedEvent@tableIndex 0519                           ___lldiv@quotient 0513  
                     producerEsdData@index 0501                       _eventProducerService FF6D  
                        ?_startEnumeration 0501                               ?_pbDownTimer 0501  
                              findEvent@en 0526                                findEvent@nn 0524  
                      ?_rebuildLookupTable 0501                       findEvent@eventNumber 0520  
                              ?_FLASH_Read 0501                              bootEsdData@id 0501  
                      ??_pollTimedResponse 0540            APP_preProcessMessage@tableIndex 05E8  
                         _mnsGetDiagnostic 63C8                         ??_startEnumeration 050B  
             _timedResponseAllServicesFlag 0586                            _C1FIFOSTA2Hbits 016D  
                  ??_consumerGetDiagnostic 050A                            _C1FIFOSTA1Lbits 0160  
                          _C1FIFOSTA3Hbits 0179                             ??_getParameter 0506  
                          _C1FIFOSTA2Lbits 016C                               ?_bootEsdData 0501  
                          _C1FIFOSTA3Lbits 0178                          sendMessage2@data1 0525  
                        sendMessage2@data2 0526                          sendMessage3@data1 0525  
                        sendMessage3@data2 0526                          sendMessage3@data3 0527  
                        sendMessage4@data1 0525                          sendMessage4@data2 0526  
                        sendMessage4@data3 0527                          sendMessage4@data4 0528  
                        sendMessage5@data1 0525                          sendMessage5@data2 0526  
                        sendMessage5@data3 0527                          sendMessage5@data4 0528  
                        sendMessage5@data5 0529                             addTestEvent@sw 0541  
                        sendMessage6@data1 0525                          sendMessage6@data2 0526  
                        sendMessage6@data3 0527                          sendMessage6@data4 0528  
                        sendMessage6@data5 0529                          sendMessage6@data6 052A  
                         bootPowerUp@found 050E                            _last_mode_flags 058E  
                        sendMessage7@data1 0525                          sendMessage7@data2 0526  
                        sendMessage7@data3 0527                          sendMessage7@data4 0528  
                        sendMessage7@data5 0529                          sendMessage7@data6 052A  
                        sendMessage7@data7 052B             __end_of_consumerProcessMessage 2556  
                           _checkPowerOnPb 599E                           EEPROM_Read@index 0501  
                 ?_prepareSelfEnumResponse 0501                            _last_mode_state 058F  
              __end_of_APP_isConsumedEvent 4786                    __end_of_nvGetDiagnostic 63C8  
                          _canpanScanReady 05A1                               ?_bootPowerUp 0501  
                     ??_rebuildLookupTable 0519                            ?_receiveOverrun 0501  
                     nvTRnvrdCallback@step 0532                       nvTRnvrdCallback@type 0501  
              __end_of_getNextWriteMessage 3BA8  
