

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri May 16 17:22:28 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F27Q83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,space=0,delta=1
     6                           	psect	idataBANK5,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,space=0,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,space=0,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=2
    57                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,space=0,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,space=0,delta=1
   135                           	psect	text115,global,reloc=2,class=CODE,space=0,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,space=0,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,space=0,delta=1
   138                           	psect	text118,global,reloc=2,class=CODE,space=0,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,space=0,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,space=0,delta=1
   141                           	psect	text121,global,reloc=2,class=CODE,space=0,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,space=0,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,space=0,delta=1
   144                           	psect	text124,global,reloc=2,class=CODE,space=0,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,space=0,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,space=0,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,space=0,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,space=0,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,space=0,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,space=0,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,space=0,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,space=0,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,space=0,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,space=0,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,space=0,delta=1,group=1
   156                           	psect	text136,global,reloc=2,class=CODE,space=0,delta=1,group=1
   157                           	psect	text137,global,reloc=2,class=CODE,space=0,delta=1,group=1
   158                           	psect	text138,global,reloc=2,class=CODE,space=0,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,space=0,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,space=0,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,space=0,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,space=0,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,space=0,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,space=0,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,space=0,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,space=0,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,space=0,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,space=0,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,space=0,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,space=0,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,space=0,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,space=0,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,space=0,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,space=0,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,space=0,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,space=0,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,space=0,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,space=0,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,space=0,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,space=0,delta=1
   181                           	psect	text161,global,reloc=2,class=CODE,space=0,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,space=0,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,space=0,delta=1
   184                           	psect	text164,global,reloc=2,class=CODE,space=0,delta=1
   185                           	psect	text165,global,reloc=2,class=CODE,space=0,delta=1
   186                           	psect	text166,global,reloc=2,class=CODE,space=0,delta=1
   187                           	psect	text167,global,reloc=2,class=CODE,space=0,delta=1
   188                           	psect	text168,global,reloc=2,class=CODE,space=0,delta=1
   189                           	psect	text169,global,reloc=4,class=CODE,space=0,delta=1
   190                           	psect	text170,global,reloc=4,class=CODE,space=0,delta=1
   191                           	psect	text171,global,reloc=4,class=CODE,space=0,delta=1
   192                           	psect	ivt0x900,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   193                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   194                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   195                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   196   000000                     
   197                           ; Generated 24/03/2025 GMT
   198                           ; 
   199                           ; Copyright © 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
   200                           ; All rights reserved.
   201                           ; 
   202                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   203                           ; 
   204                           ; Redistribution and use in source and binary forms, with or without modification, are
   205                           ; permitted provided that the following conditions are met:
   206                           ; 
   207                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   208                           ;        conditions and the following disclaimer.
   209                           ; 
   210                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   211                           ;        of conditions and the following disclaimer in the documentation and/or other
   212                           ;        materials provided with the distribution. Publication is not required when
   213                           ;        this file is used in an embedded application.
   214                           ; 
   215                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   216                           ;        software without specific prior written permission.
   217                           ; 
   218                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   219                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   220                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   221                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   222                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   223                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   224                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   225                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   226                           ; 
   227                           ; 
   228                           ; Code-generator required, PIC18F27Q83 Definitions
   229                           ; 
   230                           ; SFR Addresses
   231   0004E0                     bsr             equ	1248
   232   0004E9                     fsr0            equ	1257
   233   0004EA                     fsr0h           equ	1258
   234   0004E9                     fsr0l           equ	1257
   235   0004E1                     fsr1            equ	1249
   236   0004E2                     fsr1h           equ	1250
   237   0004E1                     fsr1l           equ	1249
   238   0004D9                     fsr2            equ	1241
   239   0004DA                     fsr2h           equ	1242
   240   0004D9                     fsr2l           equ	1241
   241   0004EF                     indf0           equ	1263
   242   0004E7                     indf1           equ	1255
   243   0004DF                     indf2           equ	1247
   244   0004D6                     intcon          equ	1238
   245   000041                     nvmcon          equ	65
   246   0004F9                     pcl             equ	1273
   247   0004FA                     pclath          equ	1274
   248   0004FB                     pclatu          equ	1275
   249   0004EB                     plusw0          equ	1259
   250   0004E3                     plusw1          equ	1251
   251   0004DB                     plusw2          equ	1243
   252   0004ED                     postdec0        equ	1261
   253   0004E5                     postdec1        equ	1253
   254   0004DD                     postdec2        equ	1245
   255   0004EE                     postinc0        equ	1262
   256   0004E6                     postinc1        equ	1254
   257   0004DE                     postinc2        equ	1246
   258   0004EC                     preinc0         equ	1260
   259   0004E4                     preinc1         equ	1252
   260   0004DC                     preinc2         equ	1244
   261   0004F3                     prod            equ	1267
   262   0004F4                     prodh           equ	1268
   263   0004F3                     prodl           equ	1267
   264   0004D8                     status          equ	1240
   265   0004F5                     tablat          equ	1269
   266   0004F6                     tblptr          equ	1270
   267   0004F7                     tblptrh         equ	1271
   268   0004F6                     tblptrl         equ	1270
   269   0004F8                     tblptru         equ	1272
   270   0004FD                     tosl            equ	1277
   271   0004E8                     wreg            equ	1256
   272   000038                     BOOTREG         equ	56	;# 
   273   000039                     CLKRCON         equ	57	;# 
   274   00003A                     CLKRCLK         equ	58	;# 
   275   000040                     NVMCON0         equ	64	;# 
   276   000041                     NVMCON1         equ	65	;# 
   277   000042                     NVMLOCK         equ	66	;# 
   278   000043                     NVMADR          equ	67	;# 
   279   000043                     NVMADRL         equ	67	;# 
   280   000044                     NVMADRH         equ	68	;# 
   281   000045                     NVMADRU         equ	69	;# 
   282   000046                     NVMDAT          equ	70	;# 
   283   000046                     NVMDATL         equ	70	;# 
   284   000047                     NVMDATH         equ	71	;# 
   285   000048                     VREGCON         equ	72	;# 
   286   000049                     BORCON          equ	73	;# 
   287   00004A                     HLVDCON0        equ	74	;# 
   288   00004B                     HLVDCON1        equ	75	;# 
   289   00004C                     ZCDCON          equ	76	;# 
   290   000060                     PMD0            equ	96	;# 
   291   000061                     PMD1            equ	97	;# 
   292   000062                     PMD2            equ	98	;# 
   293   000063                     PMD3            equ	99	;# 
   294   000064                     PMD4            equ	100	;# 
   295   000065                     PMD5            equ	101	;# 
   296   000066                     PMD6            equ	102	;# 
   297   000067                     PMD7            equ	103	;# 
   298   000068                     PMD8            equ	104	;# 
   299   00006A                     MD1CON0         equ	106	;# 
   300   00006B                     MD1CON1         equ	107	;# 
   301   00006C                     MD1SRC          equ	108	;# 
   302   00006D                     MD1CARL         equ	109	;# 
   303   00006E                     MD1CARH         equ	110	;# 
   304   00006F                     CMOUT           equ	111	;# 
   305   000070                     CM1CON0         equ	112	;# 
   306   000071                     CM1CON1         equ	113	;# 
   307   000072                     CM1NCH          equ	114	;# 
   308   000073                     CM1PCH          equ	115	;# 
   309   000074                     CM2CON0         equ	116	;# 
   310   000075                     CM2CON1         equ	117	;# 
   311   000076                     CM2NCH          equ	118	;# 
   312   000077                     CM2PCH          equ	119	;# 
   313   000078                     WDTCON0         equ	120	;# 
   314   000079                     WDTCON1         equ	121	;# 
   315   00007A                     WDTPSL          equ	122	;# 
   316   00007B                     WDTPSH          equ	123	;# 
   317   00007C                     WDTTMR          equ	124	;# 
   318   00007D                     DAC1DAT         equ	125	;# 
   319   00007D                     DAC1DATL        equ	125	;# 
   320   00007F                     DAC1CON         equ	127	;# 
   321   000080                     SPI1RXB         equ	128	;# 
   322   000081                     SPI1TXB         equ	129	;# 
   323   000082                     SPI1TCNT        equ	130	;# 
   324   000082                     SPI1TCNTL       equ	130	;# 
   325   000083                     SPI1TCNTH       equ	131	;# 
   326   000084                     SPI1CON0        equ	132	;# 
   327   000085                     SPI1CON1        equ	133	;# 
   328   000086                     SPI1CON2        equ	134	;# 
   329   000087                     SPI1STATUS      equ	135	;# 
   330   000088                     SPI1TWIDTH      equ	136	;# 
   331   000089                     SPI1BAUD        equ	137	;# 
   332   00008A                     SPI1INTF        equ	138	;# 
   333   00008B                     SPI1INTE        equ	139	;# 
   334   00008C                     SPI1CLK         equ	140	;# 
   335   00008D                     SPI2RXB         equ	141	;# 
   336   00008E                     SPI2TXB         equ	142	;# 
   337   00008F                     SPI2TCNT        equ	143	;# 
   338   00008F                     SPI2TCNTL       equ	143	;# 
   339   000090                     SPI2TCNTH       equ	144	;# 
   340   000091                     SPI2CON0        equ	145	;# 
   341   000092                     SPI2CON1        equ	146	;# 
   342   000093                     SPI2CON2        equ	147	;# 
   343   000094                     SPI2STATUS      equ	148	;# 
   344   000095                     SPI2TWIDTH      equ	149	;# 
   345   000096                     SPI2BAUD        equ	150	;# 
   346   000097                     SPI2INTF        equ	151	;# 
   347   000098                     SPI2INTE        equ	152	;# 
   348   000099                     SPI2CLK         equ	153	;# 
   349   0000AC                     ACTCON          equ	172	;# 
   350   0000AD                     OSCCON1         equ	173	;# 
   351   0000AE                     OSCCON2         equ	174	;# 
   352   0000AF                     OSCCON3         equ	175	;# 
   353   0000B0                     OSCTUNE         equ	176	;# 
   354   0000B1                     OSCFRQ          equ	177	;# 
   355   0000B1                     OSCFREQ         equ	177	;# 
   356   0000B2                     OSCSTAT         equ	178	;# 
   357   0000B2                     OSCSTAT1        equ	178	;# 
   358   0000B3                     OSCEN           equ	179	;# 
   359   0000B4                     PRLOCK          equ	180	;# 
   360   0000B5                     SCANPR          equ	181	;# 
   361   0000B6                     DMA1PR          equ	182	;# 
   362   0000B7                     DMA2PR          equ	183	;# 
   363   0000B8                     DMA3PR          equ	184	;# 
   364   0000B9                     DMA4PR          equ	185	;# 
   365   0000BA                     DMA5PR          equ	186	;# 
   366   0000BB                     DMA6PR          equ	187	;# 
   367   0000BC                     DMA7PR          equ	188	;# 
   368   0000BD                     DMA8PR          equ	189	;# 
   369   0000BE                     MAINPR          equ	190	;# 
   370   0000BF                     ISRPR           equ	191	;# 
   371   0000D4                     CLCDATA         equ	212	;# 
   372   0000D5                     CLCSELECT       equ	213	;# 
   373   0000D6                     CLCnCON         equ	214	;# 
   374   0000D7                     CLCnPOL         equ	215	;# 
   375   0000D8                     CLCnSEL0        equ	216	;# 
   376   0000D9                     CLCnSEL1        equ	217	;# 
   377   0000DA                     CLCnSEL2        equ	218	;# 
   378   0000DB                     CLCnSEL3        equ	219	;# 
   379   0000DC                     CLCnGLS0        equ	220	;# 
   380   0000DD                     CLCnGLS1        equ	221	;# 
   381   0000DE                     CLCnGLS2        equ	222	;# 
   382   0000DF                     CLCnGLS3        equ	223	;# 
   383   0000E8                     DMASELECT       equ	232	;# 
   384   0000E9                     DMAnBUF         equ	233	;# 
   385   0000EA                     DMAnDCNT        equ	234	;# 
   386   0000EA                     DMAnDCNTL       equ	234	;# 
   387   0000EB                     DMAnDCNTH       equ	235	;# 
   388   0000EC                     DMAnDPTR        equ	236	;# 
   389   0000EC                     DMAnDPTRL       equ	236	;# 
   390   0000ED                     DMAnDPTRH       equ	237	;# 
   391   0000EE                     DMAnDSZ         equ	238	;# 
   392   0000EE                     DMAnDSZL        equ	238	;# 
   393   0000EF                     DMAnDSZH        equ	239	;# 
   394   0000F0                     DMAnDSA         equ	240	;# 
   395   0000F0                     DMAnDSAL        equ	240	;# 
   396   0000F1                     DMAnDSAH        equ	241	;# 
   397   0000F2                     DMAnSCNT        equ	242	;# 
   398   0000F2                     DMAnSCNTL       equ	242	;# 
   399   0000F3                     DMAnSCNTH       equ	243	;# 
   400   0000F4                     DMAnSPTR        equ	244	;# 
   401   0000F4                     DMAnSPTRL       equ	244	;# 
   402   0000F5                     DMAnSPTRH       equ	245	;# 
   403   0000F6                     DMAnSPTRU       equ	246	;# 
   404   0000F7                     DMAnSSZ         equ	247	;# 
   405   0000F7                     DMAnSSZL        equ	247	;# 
   406   0000F8                     DMAnSSZH        equ	248	;# 
   407   0000F9                     DMAnSSA         equ	249	;# 
   408   0000F9                     DMAnSSAL        equ	249	;# 
   409   0000FA                     DMAnSSAH        equ	250	;# 
   410   0000FB                     DMAnSSAU        equ	251	;# 
   411   0000FC                     DMAnCON0        equ	252	;# 
   412   0000FD                     DMAnCON1        equ	253	;# 
   413   0000FE                     DMAnAIRQ        equ	254	;# 
   414   0000FF                     DMAnSIRQ        equ	255	;# 
   415   000100                     C1CONL          equ	256	;# 
   416   000101                     C1CONH          equ	257	;# 
   417   000102                     C1CONU          equ	258	;# 
   418   000103                     C1CONT          equ	259	;# 
   419   000104                     C1NBTCFGL       equ	260	;# 
   420   000105                     C1NBTCFGH       equ	261	;# 
   421   000106                     C1NBTCFGU       equ	262	;# 
   422   000107                     C1NBTCFGT       equ	263	;# 
   423   000108                     C1DBTCFGL       equ	264	;# 
   424   000109                     C1DBTCFGH       equ	265	;# 
   425   00010A                     C1DBTCFGU       equ	266	;# 
   426   00010B                     C1DBTCFGT       equ	267	;# 
   427   00010C                     C1TDCL          equ	268	;# 
   428   00010D                     C1TDCH          equ	269	;# 
   429   00010E                     C1TDCU          equ	270	;# 
   430   000110                     C1TBC           equ	272	;# 
   431   000110                     C1TBCL          equ	272	;# 
   432   000111                     C1TBCH          equ	273	;# 
   433   000112                     C1TBCU          equ	274	;# 
   434   000113                     C1TBCT          equ	275	;# 
   435   000114                     C1TSCONL        equ	276	;# 
   436   000115                     C1TSCONH        equ	277	;# 
   437   000116                     C1TSCONU        equ	278	;# 
   438   000117                     C1TSCONT        equ	279	;# 
   439   000118                     C1VECL          equ	280	;# 
   440   000119                     C1VECH          equ	281	;# 
   441   00011A                     C1VECU          equ	282	;# 
   442   00011B                     C1VECT          equ	283	;# 
   443   00011C                     C1INTL          equ	284	;# 
   444   00011D                     C1INTH          equ	285	;# 
   445   00011E                     C1INTU          equ	286	;# 
   446   00011F                     C1INTT          equ	287	;# 
   447   000120                     C1RXIF          equ	288	;# 
   448   000120                     C1RXIFL         equ	288	;# 
   449   000121                     C1RXIFH         equ	289	;# 
   450   000122                     C1RXIFU         equ	290	;# 
   451   000123                     C1RXIFT         equ	291	;# 
   452   000124                     C1TXIF          equ	292	;# 
   453   000124                     C1TXIFL         equ	292	;# 
   454   000125                     C1TXIFH         equ	293	;# 
   455   000126                     C1TXIFU         equ	294	;# 
   456   000127                     C1TXIFT         equ	295	;# 
   457   000128                     C1RXOVIF        equ	296	;# 
   458   000128                     C1RXOVIFL       equ	296	;# 
   459   000129                     C1RXOVIFH       equ	297	;# 
   460   00012A                     C1RXOVIFU       equ	298	;# 
   461   00012B                     C1RXOVIFT       equ	299	;# 
   462   00012C                     C1TXATIF        equ	300	;# 
   463   00012C                     C1TXATIFL       equ	300	;# 
   464   00012D                     C1TXATIFH       equ	301	;# 
   465   00012E                     C1TXATIFU       equ	302	;# 
   466   00012F                     C1TXATIFT       equ	303	;# 
   467   000130                     C1TXREQ         equ	304	;# 
   468   000130                     C1TXREQL        equ	304	;# 
   469   000131                     C1TXREQH        equ	305	;# 
   470   000132                     C1TXREQU        equ	306	;# 
   471   000133                     C1TXREQT        equ	307	;# 
   472   000134                     C1TRECL         equ	308	;# 
   473   000135                     C1TRECH         equ	309	;# 
   474   000136                     C1TRECU         equ	310	;# 
   475   000137                     C1TRECT         equ	311	;# 
   476   000138                     C1BDIAG0L       equ	312	;# 
   477   000139                     C1BDIAG0H       equ	313	;# 
   478   00013C                     C1BDIAG1L       equ	316	;# 
   479   00013D                     C1BDIAG1H       equ	317	;# 
   480   00013E                     C1BDIAG1U       equ	318	;# 
   481   00013F                     C1BDIAG1T       equ	319	;# 
   482   000140                     C1TEFCONL       equ	320	;# 
   483   000141                     C1TEFCONH       equ	321	;# 
   484   000142                     C1TEFCONU       equ	322	;# 
   485   000143                     C1TEFCONT       equ	323	;# 
   486   000144                     C1TEFSTAL       equ	324	;# 
   487   000145                     C1TEFSTAH       equ	325	;# 
   488   000146                     C1TEFSTAU       equ	326	;# 
   489   000147                     C1TEFSTAT       equ	327	;# 
   490   000148                     C1TEFUA         equ	328	;# 
   491   000148                     C1TEFUAL        equ	328	;# 
   492   000149                     C1TEFUAH        equ	329	;# 
   493   00014A                     C1TEFUAU        equ	330	;# 
   494   00014B                     C1TEFUAT        equ	331	;# 
   495   00014C                     C1FIFOBA        equ	332	;# 
   496   00014C                     C1FIFOBAL       equ	332	;# 
   497   00014D                     C1FIFOBAH       equ	333	;# 
   498   00014E                     C1FIFOBAU       equ	334	;# 
   499   00014F                     C1FIFOBAT       equ	335	;# 
   500   000150                     C1TXQCONL       equ	336	;# 
   501   000151                     C1TXQCONH       equ	337	;# 
   502   000152                     C1TXQCONU       equ	338	;# 
   503   000153                     C1TXQCONT       equ	339	;# 
   504   000154                     C1TXQSTAL       equ	340	;# 
   505   000155                     C1TXQSTAH       equ	341	;# 
   506   000156                     C1TXQSTAU       equ	342	;# 
   507   000157                     C1TXQSTAT       equ	343	;# 
   508   000158                     C1TXQUA         equ	344	;# 
   509   000158                     C1TXQUAL        equ	344	;# 
   510   000159                     C1TXQUAH        equ	345	;# 
   511   00015A                     C1TXQUAU        equ	346	;# 
   512   00015B                     C1TXQUAT        equ	347	;# 
   513   00015C                     C1FIFOCON1      equ	348	;# 
   514   00015C                     C1FIFOCON1L     equ	348	;# 
   515   00015D                     C1FIFOCON1H     equ	349	;# 
   516   00015E                     C1FIFOCON1U     equ	350	;# 
   517   00015F                     C1FIFOCON1T     equ	351	;# 
   518   000160                     C1FIFOSTA1      equ	352	;# 
   519   000160                     C1FIFOSTA1L     equ	352	;# 
   520   000161                     C1FIFOSTA1H     equ	353	;# 
   521   000162                     C1FIFOSTA1U     equ	354	;# 
   522   000163                     C1FIFOSTA1T     equ	355	;# 
   523   000164                     C1FIFOUA1       equ	356	;# 
   524   000164                     C1FIFOUA1L      equ	356	;# 
   525   000165                     C1FIFOUA1H      equ	357	;# 
   526   000166                     C1FIFOUA1U      equ	358	;# 
   527   000167                     C1FIFOUA1T      equ	359	;# 
   528   000168                     C1FIFOCON2      equ	360	;# 
   529   000168                     C1FIFOCON2L     equ	360	;# 
   530   000169                     C1FIFOCON2H     equ	361	;# 
   531   00016A                     C1FIFOCON2U     equ	362	;# 
   532   00016B                     C1FIFOCON2T     equ	363	;# 
   533   00016C                     C1FIFOSTA2      equ	364	;# 
   534   00016C                     C1FIFOSTA2L     equ	364	;# 
   535   00016D                     C1FIFOSTA2H     equ	365	;# 
   536   00016E                     C1FIFOSTA2U     equ	366	;# 
   537   00016F                     C1FIFOSTA2T     equ	367	;# 
   538   000170                     C1FIFOUA2       equ	368	;# 
   539   000170                     C1FIFOUA2L      equ	368	;# 
   540   000171                     C1FIFOUA2H      equ	369	;# 
   541   000172                     C1FIFOUA2U      equ	370	;# 
   542   000173                     C1FIFOUA2T      equ	371	;# 
   543   000174                     C1FIFOCON3      equ	372	;# 
   544   000174                     C1FIFOCON3L     equ	372	;# 
   545   000175                     C1FIFOCON3H     equ	373	;# 
   546   000176                     C1FIFOCON3U     equ	374	;# 
   547   000177                     C1FIFOCON3T     equ	375	;# 
   548   000178                     C1FIFOSTA3      equ	376	;# 
   549   000178                     C1FIFOSTA3L     equ	376	;# 
   550   000179                     C1FIFOSTA3H     equ	377	;# 
   551   00017A                     C1FIFOSTA3U     equ	378	;# 
   552   00017B                     C1FIFOSTA3T     equ	379	;# 
   553   00017C                     C1FIFOUA3       equ	380	;# 
   554   00017C                     C1FIFOUA3L      equ	380	;# 
   555   00017D                     C1FIFOUA3H      equ	381	;# 
   556   00017E                     C1FIFOUA3U      equ	382	;# 
   557   00017F                     C1FIFOUA3T      equ	383	;# 
   558   000180                     C1FLTCON0L      equ	384	;# 
   559   000181                     C1FLTCON0H      equ	385	;# 
   560   000182                     C1FLTCON0U      equ	386	;# 
   561   000183                     C1FLTCON0T      equ	387	;# 
   562   000184                     C1FLTCON1L      equ	388	;# 
   563   000185                     C1FLTCON1H      equ	389	;# 
   564   000186                     C1FLTCON1U      equ	390	;# 
   565   000187                     C1FLTCON1T      equ	391	;# 
   566   000188                     C1FLTCON2L      equ	392	;# 
   567   000189                     C1FLTCON2H      equ	393	;# 
   568   00018A                     C1FLTCON2U      equ	394	;# 
   569   00018B                     C1FLTCON2T      equ	395	;# 
   570   00018C                     C1FLTOBJ0       equ	396	;# 
   571   00018C                     C1FLTOBJ0L      equ	396	;# 
   572   00018D                     C1FLTOBJ0H      equ	397	;# 
   573   00018E                     C1FLTOBJ0U      equ	398	;# 
   574   00018F                     C1FLTOBJ0T      equ	399	;# 
   575   000190                     C1MASK0         equ	400	;# 
   576   000190                     C1MASK0L        equ	400	;# 
   577   000191                     C1MASK0H        equ	401	;# 
   578   000192                     C1MASK0U        equ	402	;# 
   579   000193                     C1MASK0T        equ	403	;# 
   580   000194                     C1FLTOBJ1       equ	404	;# 
   581   000194                     C1FLTOBJ1L      equ	404	;# 
   582   000195                     C1FLTOBJ1H      equ	405	;# 
   583   000196                     C1FLTOBJ1U      equ	406	;# 
   584   000197                     C1FLTOBJ1T      equ	407	;# 
   585   000198                     C1MASK1         equ	408	;# 
   586   000198                     C1MASK1L        equ	408	;# 
   587   000199                     C1MASK1H        equ	409	;# 
   588   00019A                     C1MASK1U        equ	410	;# 
   589   00019B                     C1MASK1T        equ	411	;# 
   590   00019C                     C1FLTOBJ2       equ	412	;# 
   591   00019C                     C1FLTOBJ2L      equ	412	;# 
   592   00019D                     C1FLTOBJ2H      equ	413	;# 
   593   00019E                     C1FLTOBJ2U      equ	414	;# 
   594   00019F                     C1FLTOBJ2T      equ	415	;# 
   595   0001A0                     C1MASK2         equ	416	;# 
   596   0001A0                     C1MASK2L        equ	416	;# 
   597   0001A1                     C1MASK2H        equ	417	;# 
   598   0001A2                     C1MASK2U        equ	418	;# 
   599   0001A3                     C1MASK2T        equ	419	;# 
   600   0001A4                     C1FLTOBJ3       equ	420	;# 
   601   0001A4                     C1FLTOBJ3L      equ	420	;# 
   602   0001A5                     C1FLTOBJ3H      equ	421	;# 
   603   0001A6                     C1FLTOBJ3U      equ	422	;# 
   604   0001A7                     C1FLTOBJ3T      equ	423	;# 
   605   0001A8                     C1MASK3         equ	424	;# 
   606   0001A8                     C1MASK3L        equ	424	;# 
   607   0001A9                     C1MASK3H        equ	425	;# 
   608   0001AA                     C1MASK3U        equ	426	;# 
   609   0001AB                     C1MASK3T        equ	427	;# 
   610   0001AC                     C1FLTOBJ4       equ	428	;# 
   611   0001AC                     C1FLTOBJ4L      equ	428	;# 
   612   0001AD                     C1FLTOBJ4H      equ	429	;# 
   613   0001AE                     C1FLTOBJ4U      equ	430	;# 
   614   0001AF                     C1FLTOBJ4T      equ	431	;# 
   615   0001B0                     C1MASK4         equ	432	;# 
   616   0001B0                     C1MASK4L        equ	432	;# 
   617   0001B1                     C1MASK4H        equ	433	;# 
   618   0001B2                     C1MASK4U        equ	434	;# 
   619   0001B3                     C1MASK4T        equ	435	;# 
   620   0001B4                     C1FLTOBJ5       equ	436	;# 
   621   0001B4                     C1FLTOBJ5L      equ	436	;# 
   622   0001B5                     C1FLTOBJ5H      equ	437	;# 
   623   0001B6                     C1FLTOBJ5U      equ	438	;# 
   624   0001B7                     C1FLTOBJ5T      equ	439	;# 
   625   0001B8                     C1MASK5         equ	440	;# 
   626   0001B8                     C1MASK5L        equ	440	;# 
   627   0001B9                     C1MASK5H        equ	441	;# 
   628   0001BA                     C1MASK5U        equ	442	;# 
   629   0001BB                     C1MASK5T        equ	443	;# 
   630   0001BC                     C1FLTOBJ6       equ	444	;# 
   631   0001BC                     C1FLTOBJ6L      equ	444	;# 
   632   0001BD                     C1FLTOBJ6H      equ	445	;# 
   633   0001BE                     C1FLTOBJ6U      equ	446	;# 
   634   0001BF                     C1FLTOBJ6T      equ	447	;# 
   635   0001C0                     C1MASK6         equ	448	;# 
   636   0001C0                     C1MASK6L        equ	448	;# 
   637   0001C1                     C1MASK6H        equ	449	;# 
   638   0001C2                     C1MASK6U        equ	450	;# 
   639   0001C3                     C1MASK6T        equ	451	;# 
   640   0001C4                     C1FLTOBJ7       equ	452	;# 
   641   0001C4                     C1FLTOBJ7L      equ	452	;# 
   642   0001C5                     C1FLTOBJ7H      equ	453	;# 
   643   0001C6                     C1FLTOBJ7U      equ	454	;# 
   644   0001C7                     C1FLTOBJ7T      equ	455	;# 
   645   0001C8                     C1MASK7         equ	456	;# 
   646   0001C8                     C1MASK7L        equ	456	;# 
   647   0001C9                     C1MASK7H        equ	457	;# 
   648   0001CA                     C1MASK7U        equ	458	;# 
   649   0001CB                     C1MASK7T        equ	459	;# 
   650   0001CC                     C1FLTOBJ8       equ	460	;# 
   651   0001CC                     C1FLTOBJ8L      equ	460	;# 
   652   0001CD                     C1FLTOBJ8H      equ	461	;# 
   653   0001CE                     C1FLTOBJ8U      equ	462	;# 
   654   0001CF                     C1FLTOBJ8T      equ	463	;# 
   655   0001D0                     C1MASK8         equ	464	;# 
   656   0001D0                     C1MASK8L        equ	464	;# 
   657   0001D1                     C1MASK8H        equ	465	;# 
   658   0001D2                     C1MASK8U        equ	466	;# 
   659   0001D3                     C1MASK8T        equ	467	;# 
   660   0001D4                     C1FLTOBJ9       equ	468	;# 
   661   0001D4                     C1FLTOBJ9L      equ	468	;# 
   662   0001D5                     C1FLTOBJ9H      equ	469	;# 
   663   0001D6                     C1FLTOBJ9U      equ	470	;# 
   664   0001D7                     C1FLTOBJ9T      equ	471	;# 
   665   0001D8                     C1MASK9         equ	472	;# 
   666   0001D8                     C1MASK9L        equ	472	;# 
   667   0001D9                     C1MASK9H        equ	473	;# 
   668   0001DA                     C1MASK9U        equ	474	;# 
   669   0001DB                     C1MASK9T        equ	475	;# 
   670   0001DC                     C1FLTOBJ10      equ	476	;# 
   671   0001DC                     C1FLTOBJ10L     equ	476	;# 
   672   0001DD                     C1FLTOBJ10H     equ	477	;# 
   673   0001DE                     C1FLTOBJ10U     equ	478	;# 
   674   0001DF                     C1FLTOBJ10T     equ	479	;# 
   675   0001E0                     C1MASK10        equ	480	;# 
   676   0001E0                     C1MASK10L       equ	480	;# 
   677   0001E1                     C1MASK10H       equ	481	;# 
   678   0001E2                     C1MASK10U       equ	482	;# 
   679   0001E3                     C1MASK10T       equ	483	;# 
   680   0001E4                     C1FLTOBJ11      equ	484	;# 
   681   0001E4                     C1FLTOBJ11L     equ	484	;# 
   682   0001E5                     C1FLTOBJ11H     equ	485	;# 
   683   0001E6                     C1FLTOBJ11U     equ	486	;# 
   684   0001E7                     C1FLTOBJ11T     equ	487	;# 
   685   0001E8                     C1MASK11        equ	488	;# 
   686   0001E8                     C1MASK11L       equ	488	;# 
   687   0001E9                     C1MASK11H       equ	489	;# 
   688   0001EA                     C1MASK11U       equ	490	;# 
   689   0001EB                     C1MASK11T       equ	491	;# 
   690   000200                     PPSLOCK         equ	512	;# 
   691   000201                     RA0PPS          equ	513	;# 
   692   000202                     RA1PPS          equ	514	;# 
   693   000203                     RA2PPS          equ	515	;# 
   694   000204                     RA3PPS          equ	516	;# 
   695   000205                     RA4PPS          equ	517	;# 
   696   000206                     RA5PPS          equ	518	;# 
   697   000207                     RA6PPS          equ	519	;# 
   698   000208                     RA7PPS          equ	520	;# 
   699   000209                     RB0PPS          equ	521	;# 
   700   00020A                     RB1PPS          equ	522	;# 
   701   00020B                     RB2PPS          equ	523	;# 
   702   00020C                     RB3PPS          equ	524	;# 
   703   00020D                     RB4PPS          equ	525	;# 
   704   00020E                     RB5PPS          equ	526	;# 
   705   00020F                     RB6PPS          equ	527	;# 
   706   000210                     RB7PPS          equ	528	;# 
   707   000211                     RC0PPS          equ	529	;# 
   708   000212                     RC1PPS          equ	530	;# 
   709   000213                     RC2PPS          equ	531	;# 
   710   000214                     RC3PPS          equ	532	;# 
   711   000215                     RC4PPS          equ	533	;# 
   712   000216                     RC5PPS          equ	534	;# 
   713   000217                     RC6PPS          equ	535	;# 
   714   000218                     RC7PPS          equ	536	;# 
   715   00023D                     CANRXPPS        equ	573	;# 
   716   00023E                     INT0PPS         equ	574	;# 
   717   00023F                     INT1PPS         equ	575	;# 
   718   000240                     INT2PPS         equ	576	;# 
   719   000241                     T0CKIPPS        equ	577	;# 
   720   000242                     T1CKIPPS        equ	578	;# 
   721   000243                     T1GPPS          equ	579	;# 
   722   000244                     T3CKIPPS        equ	580	;# 
   723   000245                     T3GPPS          equ	581	;# 
   724   000246                     T5CKIPPS        equ	582	;# 
   725   000247                     T5GPPS          equ	583	;# 
   726   000248                     T2INPPS         equ	584	;# 
   727   000249                     T4INPPS         equ	585	;# 
   728   00024A                     T6INPPS         equ	586	;# 
   729   00024B                     TUIN0PPS        equ	587	;# 
   730   00024C                     TUIN1PPS        equ	588	;# 
   731   00024F                     CCP1PPS         equ	591	;# 
   732   000250                     CCP2PPS         equ	592	;# 
   733   000251                     CCP3PPS         equ	593	;# 
   734   000253                     PWM1ERSPPS      equ	595	;# 
   735   000254                     PWM2ERSPPS      equ	596	;# 
   736   000255                     PWM3ERSPPS      equ	597	;# 
   737   000256                     PWM4ERSPPS      equ	598	;# 
   738   000257                     PWMIN0PPS       equ	599	;# 
   739   000258                     PWMIN1PPS       equ	600	;# 
   740   000259                     SMT1WINPPS      equ	601	;# 
   741   00025A                     SMT1SIGPPS      equ	602	;# 
   742   00025B                     CWG1PPS         equ	603	;# 
   743   00025B                     CWG1INPPS       equ	603	;# 
   744   00025C                     CWG2PPS         equ	604	;# 
   745   00025C                     CWG2INPPS       equ	604	;# 
   746   00025D                     CWG3PPS         equ	605	;# 
   747   00025D                     CWG3INPPS       equ	605	;# 
   748   00025E                     MD1CARLPPS      equ	606	;# 
   749   00025E                     MDCARLPPS       equ	606	;# 
   750   00025F                     MD1CARHPPS      equ	607	;# 
   751   00025F                     MDCARHPPS       equ	607	;# 
   752   000260                     MD1SRCPPS       equ	608	;# 
   753   000260                     MDSRCPPS        equ	608	;# 
   754   000261                     CLCIN0PPS       equ	609	;# 
   755   000262                     CLCIN1PPS       equ	610	;# 
   756   000263                     CLCIN2PPS       equ	611	;# 
   757   000264                     CLCIN3PPS       equ	612	;# 
   758   000265                     CLCIN4PPS       equ	613	;# 
   759   000266                     CLCIN5PPS       equ	614	;# 
   760   000267                     CLCIN6PPS       equ	615	;# 
   761   000268                     CLCIN7PPS       equ	616	;# 
   762   000269                     ADACTPPS        equ	617	;# 
   763   00026A                     SPI1SCKPPS      equ	618	;# 
   764   00026B                     SPI1SDIPPS      equ	619	;# 
   765   00026C                     SPI1SSPPS       equ	620	;# 
   766   00026D                     SPI2SCKPPS      equ	621	;# 
   767   00026E                     SPI2SDIPPS      equ	622	;# 
   768   00026F                     SPI2SSPPS       equ	623	;# 
   769   000270                     I2C1SDAPPS      equ	624	;# 
   770   000271                     I2C1SCLPPS      equ	625	;# 
   771   000272                     U1RXPPS         equ	626	;# 
   772   000273                     U1CTSPPS        equ	627	;# 
   773   000274                     U2RXPPS         equ	628	;# 
   774   000275                     U2CTSPPS        equ	629	;# 
   775   000276                     U3RXPPS         equ	630	;# 
   776   000277                     U3CTSPPS        equ	631	;# 
   777   000278                     U4RXPPS         equ	632	;# 
   778   000279                     U4CTSPPS        equ	633	;# 
   779   00027A                     U5RXPPS         equ	634	;# 
   780   00027B                     U5CTSPPS        equ	635	;# 
   781   000286                     RC4I2C          equ	646	;# 
   782   000287                     RC3I2C          equ	647	;# 
   783   000288                     RB2I2C          equ	648	;# 
   784   000289                     RB1I2C          equ	649	;# 
   785   00028A                     I2C1RXB         equ	650	;# 
   786   00028B                     I2C1TXB         equ	651	;# 
   787   00028C                     I2C1CNTL        equ	652	;# 
   788   00028D                     I2C1CNTH        equ	653	;# 
   789   00028E                     I2C1ADB0        equ	654	;# 
   790   00028F                     I2C1ADB1        equ	655	;# 
   791   000290                     I2C1ADR0        equ	656	;# 
   792   000291                     I2C1ADR1        equ	657	;# 
   793   000292                     I2C1ADR2        equ	658	;# 
   794   000293                     I2C1ADR3        equ	659	;# 
   795   000294                     I2C1CON0        equ	660	;# 
   796   000295                     I2C1CON1        equ	661	;# 
   797   000296                     I2C1CON2        equ	662	;# 
   798   000297                     I2C1ERR         equ	663	;# 
   799   000298                     I2C1STAT0       equ	664	;# 
   800   000299                     I2C1STAT1       equ	665	;# 
   801   00029A                     I2C1PIR         equ	666	;# 
   802   00029B                     I2C1PIE         equ	667	;# 
   803   00029C                     I2C1BTO         equ	668	;# 
   804   00029D                     I2C1BAUD        equ	669	;# 
   805   00029E                     I2C1CLK         equ	670	;# 
   806   00029F                     I2C1BTOC        equ	671	;# 
   807   0002A1                     U1RXB           equ	673	;# 
   808   0002A1                     U1RXBL          equ	673	;# 
   809   0002A2                     U1RXCHK         equ	674	;# 
   810   0002A3                     U1TXB           equ	675	;# 
   811   0002A3                     U1TXBL          equ	675	;# 
   812   0002A4                     U1TXCHK         equ	676	;# 
   813   0002A5                     U1P1            equ	677	;# 
   814   0002A5                     U1P1L           equ	677	;# 
   815   0002A6                     U1P1H           equ	678	;# 
   816   0002A7                     U1P2            equ	679	;# 
   817   0002A7                     U1P2L           equ	679	;# 
   818   0002A8                     U1P2H           equ	680	;# 
   819   0002A9                     U1P3            equ	681	;# 
   820   0002A9                     U1P3L           equ	681	;# 
   821   0002AA                     U1P3H           equ	682	;# 
   822   0002AB                     U1CON0          equ	683	;# 
   823   0002AC                     U1CON1          equ	684	;# 
   824   0002AD                     U1CON2          equ	685	;# 
   825   0002AE                     U1BRG           equ	686	;# 
   826   0002AE                     U1BRGL          equ	686	;# 
   827   0002AF                     U1BRGH          equ	687	;# 
   828   0002B0                     U1FIFO          equ	688	;# 
   829   0002B1                     U1UIR           equ	689	;# 
   830   0002B2                     U1ERRIR         equ	690	;# 
   831   0002B3                     U1ERRIE         equ	691	;# 
   832   0002B4                     U2RXB           equ	692	;# 
   833   0002B4                     U2RXBL          equ	692	;# 
   834   0002B5                     U2RXCHK         equ	693	;# 
   835   0002B6                     U2TXB           equ	694	;# 
   836   0002B6                     U2TXBL          equ	694	;# 
   837   0002B7                     U2TXCHK         equ	695	;# 
   838   0002B8                     U2P1            equ	696	;# 
   839   0002B8                     U2P1L           equ	696	;# 
   840   0002B9                     U2P1H           equ	697	;# 
   841   0002BA                     U2P2            equ	698	;# 
   842   0002BA                     U2P2L           equ	698	;# 
   843   0002BB                     U2P2H           equ	699	;# 
   844   0002BC                     U2P3            equ	700	;# 
   845   0002BC                     U2P3L           equ	700	;# 
   846   0002BD                     U2P3H           equ	701	;# 
   847   0002BE                     U2CON0          equ	702	;# 
   848   0002BF                     U2CON1          equ	703	;# 
   849   0002C0                     U2CON2          equ	704	;# 
   850   0002C1                     U2BRG           equ	705	;# 
   851   0002C1                     U2BRGL          equ	705	;# 
   852   0002C2                     U2BRGH          equ	706	;# 
   853   0002C3                     U2FIFO          equ	707	;# 
   854   0002C4                     U2UIR           equ	708	;# 
   855   0002C5                     U2ERRIR         equ	709	;# 
   856   0002C6                     U2ERRIE         equ	710	;# 
   857   0002C7                     U3RXB           equ	711	;# 
   858   0002C7                     U3RXBL          equ	711	;# 
   859   0002C9                     U3TXB           equ	713	;# 
   860   0002C9                     U3TXBL          equ	713	;# 
   861   0002CB                     U3P1            equ	715	;# 
   862   0002CB                     U3P1L           equ	715	;# 
   863   0002CD                     U3P2            equ	717	;# 
   864   0002CD                     U3P2L           equ	717	;# 
   865   0002CF                     U3P3            equ	719	;# 
   866   0002CF                     U3P3L           equ	719	;# 
   867   0002D1                     U3CON0          equ	721	;# 
   868   0002D2                     U3CON1          equ	722	;# 
   869   0002D3                     U3CON2          equ	723	;# 
   870   0002D4                     U3BRG           equ	724	;# 
   871   0002D4                     U3BRGL          equ	724	;# 
   872   0002D5                     U3BRGH          equ	725	;# 
   873   0002D6                     U3FIFO          equ	726	;# 
   874   0002D7                     U3UIR           equ	727	;# 
   875   0002D8                     U3ERRIR         equ	728	;# 
   876   0002D9                     U3ERRIE         equ	729	;# 
   877   0002DA                     U4RXB           equ	730	;# 
   878   0002DA                     U4RXBL          equ	730	;# 
   879   0002DC                     U4TXB           equ	732	;# 
   880   0002DC                     U4TXBL          equ	732	;# 
   881   0002DE                     U4P1            equ	734	;# 
   882   0002DE                     U4P1L           equ	734	;# 
   883   0002E0                     U4P2            equ	736	;# 
   884   0002E0                     U4P2L           equ	736	;# 
   885   0002E2                     U4P3            equ	738	;# 
   886   0002E2                     U4P3L           equ	738	;# 
   887   0002E4                     U4CON0          equ	740	;# 
   888   0002E5                     U4CON1          equ	741	;# 
   889   0002E6                     U4CON2          equ	742	;# 
   890   0002E7                     U4BRG           equ	743	;# 
   891   0002E7                     U4BRGL          equ	743	;# 
   892   0002E8                     U4BRGH          equ	744	;# 
   893   0002E9                     U4FIFO          equ	745	;# 
   894   0002EA                     U4UIR           equ	746	;# 
   895   0002EB                     U4ERRIR         equ	747	;# 
   896   0002EC                     U4ERRIE         equ	748	;# 
   897   0002ED                     U5RXB           equ	749	;# 
   898   0002ED                     U5RXBL          equ	749	;# 
   899   0002EF                     U5TXB           equ	751	;# 
   900   0002EF                     U5TXBL          equ	751	;# 
   901   0002F1                     U5P1            equ	753	;# 
   902   0002F1                     U5P1L           equ	753	;# 
   903   0002F3                     U5P2            equ	755	;# 
   904   0002F3                     U5P2L           equ	755	;# 
   905   0002F5                     U5P3            equ	757	;# 
   906   0002F5                     U5P3L           equ	757	;# 
   907   0002F7                     U5CON0          equ	759	;# 
   908   0002F8                     U5CON1          equ	760	;# 
   909   0002F9                     U5CON2          equ	761	;# 
   910   0002FA                     U5BRG           equ	762	;# 
   911   0002FA                     U5BRGL          equ	762	;# 
   912   0002FB                     U5BRGH          equ	763	;# 
   913   0002FC                     U5FIFO          equ	764	;# 
   914   0002FD                     U5UIR           equ	765	;# 
   915   0002FE                     U5ERRIR         equ	766	;# 
   916   0002FF                     U5ERRIE         equ	767	;# 
   917   000300                     SMT1TMR         equ	768	;# 
   918   000300                     SMT1TMRL        equ	768	;# 
   919   000301                     SMT1TMRH        equ	769	;# 
   920   000302                     SMT1TMRU        equ	770	;# 
   921   000303                     SMT1CPR         equ	771	;# 
   922   000303                     SMT1CPRL        equ	771	;# 
   923   000304                     SMT1CPRH        equ	772	;# 
   924   000305                     SMT1CPRU        equ	773	;# 
   925   000306                     SMT1CPW         equ	774	;# 
   926   000306                     SMT1CPWL        equ	774	;# 
   927   000307                     SMT1CPWH        equ	775	;# 
   928   000308                     SMT1CPWU        equ	776	;# 
   929   000309                     SMT1PR          equ	777	;# 
   930   000309                     SMT1PRL         equ	777	;# 
   931   00030A                     SMT1PRH         equ	778	;# 
   932   00030B                     SMT1PRU         equ	779	;# 
   933   00030C                     SMT1CON0        equ	780	;# 
   934   00030D                     SMT1CON1        equ	781	;# 
   935   00030E                     SMT1STAT        equ	782	;# 
   936   00030F                     SMT1CLK         equ	783	;# 
   937   000310                     SMT1SIG         equ	784	;# 
   938   000311                     SMT1WIN         equ	785	;# 
   939   000318                     TMR0L           equ	792	;# 
   940   000318                     TMR0            equ	792	;# 
   941   000319                     TMR0H           equ	793	;# 
   942   000319                     PR0             equ	793	;# 
   943   00031A                     T0CON0          equ	794	;# 
   944   00031B                     T0CON1          equ	795	;# 
   945   00031C                     TMR1            equ	796	;# 
   946   00031C                     TMR1L           equ	796	;# 
   947   00031D                     TMR1H           equ	797	;# 
   948   00031E                     T1CON           equ	798	;# 
   949   00031E                     TMR1CON         equ	798	;# 
   950   00031F                     T1GCON          equ	799	;# 
   951   00031F                     TMR1GCON        equ	799	;# 
   952   000320                     T1GATE          equ	800	;# 
   953   000320                     TMR1GATE        equ	800	;# 
   954   000321                     T1CLK           equ	801	;# 
   955   000321                     TMR1CLK         equ	801	;# 
   956   000321                     PR1             equ	801	;# 
   957   000322                     T2TMR           equ	802	;# 
   958   000322                     TMR2            equ	802	;# 
   959   000323                     T2PR            equ	803	;# 
   960   000323                     PR2             equ	803	;# 
   961   000324                     T2CON           equ	804	;# 
   962   000325                     T2HLT           equ	805	;# 
   963   000326                     T2CLKCON        equ	806	;# 
   964   000326                     T2CLK           equ	806	;# 
   965   000327                     T2RST           equ	807	;# 
   966   000328                     TMR3            equ	808	;# 
   967   000328                     TMR3L           equ	808	;# 
   968   000329                     TMR3H           equ	809	;# 
   969   00032A                     T3CON           equ	810	;# 
   970   00032A                     TMR3CON         equ	810	;# 
   971   00032B                     T3GCON          equ	811	;# 
   972   00032B                     TMR3GCON        equ	811	;# 
   973   00032C                     T3GATE          equ	812	;# 
   974   00032C                     TMR3GATE        equ	812	;# 
   975   00032D                     T3CLK           equ	813	;# 
   976   00032D                     TMR3CLK         equ	813	;# 
   977   00032D                     PR3             equ	813	;# 
   978   00032E                     T4TMR           equ	814	;# 
   979   00032E                     TMR4            equ	814	;# 
   980   00032F                     T4PR            equ	815	;# 
   981   00032F                     PR4             equ	815	;# 
   982   000330                     T4CON           equ	816	;# 
   983   000331                     T4HLT           equ	817	;# 
   984   000332                     T4CLKCON        equ	818	;# 
   985   000332                     T4CLK           equ	818	;# 
   986   000333                     T4RST           equ	819	;# 
   987   000334                     TMR5            equ	820	;# 
   988   000334                     TMR5L           equ	820	;# 
   989   000335                     TMR5H           equ	821	;# 
   990   000336                     T5CON           equ	822	;# 
   991   000336                     TMR5CON         equ	822	;# 
   992   000337                     T5GCON          equ	823	;# 
   993   000337                     TMR5GCON        equ	823	;# 
   994   000338                     T5GATE          equ	824	;# 
   995   000338                     TMR5GATE        equ	824	;# 
   996   000339                     T5CLK           equ	825	;# 
   997   000339                     TMR5CLK         equ	825	;# 
   998   000339                     PR5             equ	825	;# 
   999   00033A                     T6TMR           equ	826	;# 
  1000   00033A                     TMR6            equ	826	;# 
  1001   00033B                     T6PR            equ	827	;# 
  1002   00033B                     PR6             equ	827	;# 
  1003   00033C                     T6CON           equ	828	;# 
  1004   00033D                     T6HLT           equ	829	;# 
  1005   00033E                     T6CLKCON        equ	830	;# 
  1006   00033E                     T6CLK           equ	830	;# 
  1007   00033F                     T6RST           equ	831	;# 
  1008   000340                     CCPR1           equ	832	;# 
  1009   000340                     CCPR1L          equ	832	;# 
  1010   000341                     CCPR1H          equ	833	;# 
  1011   000342                     CCP1CON         equ	834	;# 
  1012   000343                     CCP1CAP         equ	835	;# 
  1013   000344                     CCPR2           equ	836	;# 
  1014   000344                     CCPR2L          equ	836	;# 
  1015   000345                     CCPR2H          equ	837	;# 
  1016   000346                     CCP2CON         equ	838	;# 
  1017   000347                     CCP2CAP         equ	839	;# 
  1018   000348                     CCPR3           equ	840	;# 
  1019   000348                     CCPR3L          equ	840	;# 
  1020   000349                     CCPR3H          equ	841	;# 
  1021   00034A                     CCP3CON         equ	842	;# 
  1022   00034B                     CCP3CAP         equ	843	;# 
  1023   00034C                     CCPTMRS0        equ	844	;# 
  1024   00034F                     CRCDATA         equ	847	;# 
  1025   00034F                     CRCDATAL        equ	847	;# 
  1026   000350                     CRCDATAH        equ	848	;# 
  1027   000351                     CRCDATAU        equ	849	;# 
  1028   000352                     CRCDATAT        equ	850	;# 
  1029   000353                     CRCOUT          equ	851	;# 
  1030   000353                     CRCSHFT         equ	851	;# 
  1031   000353                     CRCXOR          equ	851	;# 
  1032   000353                     CRCOUTL         equ	851	;# 
  1033   000353                     CRCSHFTL        equ	851	;# 
  1034   000353                     CRCSHIFTL       equ	851	;# 
  1035   000353                     CRCXORL         equ	851	;# 
  1036   000354                     CRCOUTH         equ	852	;# 
  1037   000354                     CRCSHFTH        equ	852	;# 
  1038   000354                     CRCSHIFTH       equ	852	;# 
  1039   000354                     CRCXORH         equ	852	;# 
  1040   000355                     CRCOUTU         equ	853	;# 
  1041   000355                     CRCSHFTU        equ	853	;# 
  1042   000355                     CRCSHIFTU       equ	853	;# 
  1043   000355                     CRCXORU         equ	853	;# 
  1044   000356                     CRCOUTT         equ	854	;# 
  1045   000356                     CRCSHFTT        equ	854	;# 
  1046   000356                     CRCSHIFTT       equ	854	;# 
  1047   000356                     CRCXORT         equ	854	;# 
  1048   000357                     CRCCON0         equ	855	;# 
  1049   000358                     CRCCON1         equ	856	;# 
  1050   000359                     CRCCON2         equ	857	;# 
  1051   00035A                     SCANLADR        equ	858	;# 
  1052   00035A                     SCANLADRL       equ	858	;# 
  1053   00035B                     SCANLADRH       equ	859	;# 
  1054   00035C                     SCANLADRU       equ	860	;# 
  1055   00035D                     SCANHADR        equ	861	;# 
  1056   00035D                     SCANHADRL       equ	861	;# 
  1057   00035E                     SCANHADRH       equ	862	;# 
  1058   00035F                     SCANHADRU       equ	863	;# 
  1059   000360                     SCANCON0        equ	864	;# 
  1060   000361                     SCANTRIG        equ	865	;# 
  1061   000362                     IPR0            equ	866	;# 
  1062   000363                     IPR1            equ	867	;# 
  1063   000364                     IPR2            equ	868	;# 
  1064   000365                     IPR3            equ	869	;# 
  1065   000366                     IPR4            equ	870	;# 
  1066   000367                     IPR5            equ	871	;# 
  1067   000368                     IPR6            equ	872	;# 
  1068   000369                     IPR7            equ	873	;# 
  1069   00036A                     IPR8            equ	874	;# 
  1070   00036B                     IPR9            equ	875	;# 
  1071   00036C                     IPR10           equ	876	;# 
  1072   00036D                     IPR11           equ	877	;# 
  1073   00036E                     IPR12           equ	878	;# 
  1074   00036F                     IPR13           equ	879	;# 
  1075   000370                     IPR14           equ	880	;# 
  1076   000371                     IPR15           equ	881	;# 
  1077   000373                     STATUS_CSHAD    equ	883	;# 
  1078   000374                     WREG_CSHAD      equ	884	;# 
  1079   000375                     BSR_CSHAD       equ	885	;# 
  1080   000376                     SHADCON         equ	886	;# 
  1081   000377                     STATUS_SHAD     equ	887	;# 
  1082   000378                     WREG_SHAD       equ	888	;# 
  1083   000379                     BSR_SHAD        equ	889	;# 
  1084   00037A                     PCLATH_SHAD     equ	890	;# 
  1085   00037B                     PCLATU_SHAD     equ	891	;# 
  1086   00037C                     FSR0SH          equ	892	;# 
  1087   00037C                     FSR0L_SHAD      equ	892	;# 
  1088   00037D                     FSR0H_SHAD      equ	893	;# 
  1089   00037E                     FSR1SH          equ	894	;# 
  1090   00037E                     FSR1L_SHAD      equ	894	;# 
  1091   00037F                     FSR1H_SHAD      equ	895	;# 
  1092   000380                     FSR2SH          equ	896	;# 
  1093   000380                     FSR2L_SHAD      equ	896	;# 
  1094   000381                     FSR2H_SHAD      equ	897	;# 
  1095   000382                     PRODSH          equ	898	;# 
  1096   000382                     PRODL_SHAD      equ	898	;# 
  1097   000383                     PRODH_SHAD      equ	899	;# 
  1098   000387                     TU16ACON0       equ	903	;# 
  1099   000388                     TU16ACON1       equ	904	;# 
  1100   000389                     TU16AHLT        equ	905	;# 
  1101   00038A                     TU16APS         equ	906	;# 
  1102   00038B                     TU16ATMR        equ	907	;# 
  1103   00038B                     TU16ACR         equ	907	;# 
  1104   00038B                     TU16ATMRL       equ	907	;# 
  1105   00038B                     TU16ACRL        equ	907	;# 
  1106   00038C                     TU16ATMRH       equ	908	;# 
  1107   00038C                     TU16ACRH        equ	908	;# 
  1108   00038D                     TU16APR         equ	909	;# 
  1109   00038D                     TU16APRL        equ	909	;# 
  1110   00038E                     TU16APRH        equ	910	;# 
  1111   00038F                     TU16ACLK        equ	911	;# 
  1112   000390                     TU16AERS        equ	912	;# 
  1113   000393                     TU16BCON0       equ	915	;# 
  1114   000394                     TU16BCON1       equ	916	;# 
  1115   000395                     TU16BHLT        equ	917	;# 
  1116   000396                     TU16BPS         equ	918	;# 
  1117   000397                     TU16BTMR        equ	919	;# 
  1118   000397                     TU16BCR         equ	919	;# 
  1119   000397                     TU16BTMRL       equ	919	;# 
  1120   000397                     TU16BCRL        equ	919	;# 
  1121   000398                     TU16BTMRH       equ	920	;# 
  1122   000398                     TU16BCRH        equ	920	;# 
  1123   000399                     TU16BPR         equ	921	;# 
  1124   000399                     TU16BPRL        equ	921	;# 
  1125   00039A                     TU16BPRH        equ	922	;# 
  1126   00039B                     TU16BCLK        equ	923	;# 
  1127   00039C                     TU16BERS        equ	924	;# 
  1128   0003BB                     TUCHAIN         equ	955	;# 
  1129   0003BC                     CWG1CLK         equ	956	;# 
  1130   0003BC                     CWG1CLKCON      equ	956	;# 
  1131   0003BD                     CWG1ISM         equ	957	;# 
  1132   0003BE                     CWG1DBR         equ	958	;# 
  1133   0003BF                     CWG1DBF         equ	959	;# 
  1134   0003C0                     CWG1CON0        equ	960	;# 
  1135   0003C1                     CWG1CON1        equ	961	;# 
  1136   0003C2                     CWG1AS0         equ	962	;# 
  1137   0003C3                     CWG1AS1         equ	963	;# 
  1138   0003C4                     CWG1STR         equ	964	;# 
  1139   0003C5                     CWG2CLK         equ	965	;# 
  1140   0003C5                     CWG2CLKCON      equ	965	;# 
  1141   0003C6                     CWG2ISM         equ	966	;# 
  1142   0003C7                     CWG2DBR         equ	967	;# 
  1143   0003C8                     CWG2DBF         equ	968	;# 
  1144   0003C9                     CWG2CON0        equ	969	;# 
  1145   0003CA                     CWG2CON1        equ	970	;# 
  1146   0003CB                     CWG2AS0         equ	971	;# 
  1147   0003CC                     CWG2AS1         equ	972	;# 
  1148   0003CD                     CWG2STR         equ	973	;# 
  1149   0003CE                     CWG3CLK         equ	974	;# 
  1150   0003CE                     CWG3CLKCON      equ	974	;# 
  1151   0003CF                     CWG3ISM         equ	975	;# 
  1152   0003D0                     CWG3DBR         equ	976	;# 
  1153   0003D1                     CWG3DBF         equ	977	;# 
  1154   0003D2                     CWG3CON0        equ	978	;# 
  1155   0003D3                     CWG3CON1        equ	979	;# 
  1156   0003D4                     CWG3AS0         equ	980	;# 
  1157   0003D5                     CWG3AS1         equ	981	;# 
  1158   0003D6                     CWG3STR         equ	982	;# 
  1159   0003D7                     FVRCON          equ	983	;# 
  1160   0003D8                     ADCPCON         equ	984	;# 
  1161   0003D8                     ADCP            equ	984	;# 
  1162   0003D9                     ADLTH           equ	985	;# 
  1163   0003D9                     ADLTHL          equ	985	;# 
  1164   0003DA                     ADLTHH          equ	986	;# 
  1165   0003DB                     ADUTH           equ	987	;# 
  1166   0003DB                     ADUTHL          equ	987	;# 
  1167   0003DC                     ADUTHH          equ	988	;# 
  1168   0003DD                     ADERR           equ	989	;# 
  1169   0003DD                     ADERRL          equ	989	;# 
  1170   0003DE                     ADERRH          equ	990	;# 
  1171   0003DF                     ADSTPT          equ	991	;# 
  1172   0003DF                     ADSTPTL         equ	991	;# 
  1173   0003E0                     ADSTPTH         equ	992	;# 
  1174   0003E1                     ADFLTR          equ	993	;# 
  1175   0003E1                     ADFLTRL         equ	993	;# 
  1176   0003E2                     ADFLTRH         equ	994	;# 
  1177   0003E3                     ADACC           equ	995	;# 
  1178   0003E3                     ADACCL          equ	995	;# 
  1179   0003E4                     ADACCH          equ	996	;# 
  1180   0003E5                     ADACCU          equ	997	;# 
  1181   0003E6                     ADCNT           equ	998	;# 
  1182   0003E7                     ADRPT           equ	999	;# 
  1183   0003E8                     ADPREV          equ	1000	;# 
  1184   0003E8                     ADPREVL         equ	1000	;# 
  1185   0003E9                     ADPREVH         equ	1001	;# 
  1186   0003EA                     ADRES           equ	1002	;# 
  1187   0003EA                     ADRESL          equ	1002	;# 
  1188   0003EB                     ADRESH          equ	1003	;# 
  1189   0003EC                     ADPCH           equ	1004	;# 
  1190   0003EE                     ADACQ           equ	1006	;# 
  1191   0003EE                     ADACQL          equ	1006	;# 
  1192   0003EF                     ADACQH          equ	1007	;# 
  1193   0003F0                     ADCAP           equ	1008	;# 
  1194   0003F1                     ADPRE           equ	1009	;# 
  1195   0003F1                     ADPREL          equ	1009	;# 
  1196   0003F2                     ADPREH          equ	1010	;# 
  1197   0003F3                     ADCON0          equ	1011	;# 
  1198   0003F4                     ADCON1          equ	1012	;# 
  1199   0003F5                     ADCON2          equ	1013	;# 
  1200   0003F6                     ADCON3          equ	1014	;# 
  1201   0003F7                     ADSTAT          equ	1015	;# 
  1202   0003F8                     ADREF           equ	1016	;# 
  1203   0003F9                     ADACT           equ	1017	;# 
  1204   0003FA                     ADCLK           equ	1018	;# 
  1205   0003FB                     ADCTX           equ	1019	;# 
  1206   0003FC                     ADCSEL1         equ	1020	;# 
  1207   0003FD                     ADCSEL2         equ	1021	;# 
  1208   0003FE                     ADCSEL3         equ	1022	;# 
  1209   0003FF                     ADCSEL4         equ	1023	;# 
  1210   000400                     ANSELA          equ	1024	;# 
  1211   000401                     WPUA            equ	1025	;# 
  1212   000402                     ODCONA          equ	1026	;# 
  1213   000403                     SLRCONA         equ	1027	;# 
  1214   000404                     INLVLA          equ	1028	;# 
  1215   000405                     IOCAP           equ	1029	;# 
  1216   000406                     IOCAN           equ	1030	;# 
  1217   000407                     IOCAF           equ	1031	;# 
  1218   000408                     ANSELB          equ	1032	;# 
  1219   000409                     WPUB            equ	1033	;# 
  1220   00040A                     ODCONB          equ	1034	;# 
  1221   00040B                     SLRCONB         equ	1035	;# 
  1222   00040C                     INLVLB          equ	1036	;# 
  1223   00040D                     IOCBP           equ	1037	;# 
  1224   00040E                     IOCBN           equ	1038	;# 
  1225   00040F                     IOCBF           equ	1039	;# 
  1226   000410                     ANSELC          equ	1040	;# 
  1227   000411                     WPUC            equ	1041	;# 
  1228   000412                     ODCONC          equ	1042	;# 
  1229   000413                     SLRCONC         equ	1043	;# 
  1230   000414                     INLVLC          equ	1044	;# 
  1231   000415                     IOCCP           equ	1045	;# 
  1232   000416                     IOCCN           equ	1046	;# 
  1233   000417                     IOCCF           equ	1047	;# 
  1234   000421                     WPUE            equ	1057	;# 
  1235   000424                     INLVLE          equ	1060	;# 
  1236   000425                     IOCEP           equ	1061	;# 
  1237   000426                     IOCEN           equ	1062	;# 
  1238   000427                     IOCEF           equ	1063	;# 
  1239   000440                     NCO1ACC         equ	1088	;# 
  1240   000440                     NCO1ACCL        equ	1088	;# 
  1241   000441                     NCO1ACCH        equ	1089	;# 
  1242   000442                     NCO1ACCU        equ	1090	;# 
  1243   000443                     NCO1INC         equ	1091	;# 
  1244   000443                     NCO1INCL        equ	1091	;# 
  1245   000444                     NCO1INCH        equ	1092	;# 
  1246   000445                     NCO1INCU        equ	1093	;# 
  1247   000446                     NCO1CON         equ	1094	;# 
  1248   000447                     NCO1CLK         equ	1095	;# 
  1249   000448                     NCO2ACC         equ	1096	;# 
  1250   000448                     NCO2ACCL        equ	1096	;# 
  1251   000449                     NCO2ACCH        equ	1097	;# 
  1252   00044A                     NCO2ACCU        equ	1098	;# 
  1253   00044B                     NCO2INC         equ	1099	;# 
  1254   00044B                     NCO2INCL        equ	1099	;# 
  1255   00044C                     NCO2INCH        equ	1100	;# 
  1256   00044D                     NCO2INCU        equ	1101	;# 
  1257   00044E                     NCO2CON         equ	1102	;# 
  1258   00044F                     NCO2CLK         equ	1103	;# 
  1259   000450                     NCO3ACC         equ	1104	;# 
  1260   000450                     NCO3ACCL        equ	1104	;# 
  1261   000451                     NCO3ACCH        equ	1105	;# 
  1262   000452                     NCO3ACCU        equ	1106	;# 
  1263   000453                     NCO3INC         equ	1107	;# 
  1264   000453                     NCO3INCL        equ	1107	;# 
  1265   000454                     NCO3INCH        equ	1108	;# 
  1266   000455                     NCO3INCU        equ	1109	;# 
  1267   000456                     NCO3CON         equ	1110	;# 
  1268   000457                     NCO3CLK         equ	1111	;# 
  1269   000458                     FSCMCON         equ	1112	;# 
  1270   000459                     IVTLOCK         equ	1113	;# 
  1271   00045A                     IVTAD           equ	1114	;# 
  1272   00045A                     IVTADL          equ	1114	;# 
  1273   00045B                     IVTADH          equ	1115	;# 
  1274   00045C                     IVTADU          equ	1116	;# 
  1275   00045D                     IVTBASE         equ	1117	;# 
  1276   00045D                     IVTBASEL        equ	1117	;# 
  1277   00045E                     IVTBASEH        equ	1118	;# 
  1278   00045F                     IVTBASEU        equ	1119	;# 
  1279   000460                     PWM1ERS         equ	1120	;# 
  1280   000461                     PWM1CLK         equ	1121	;# 
  1281   000462                     PWM1LDS         equ	1122	;# 
  1282   000463                     PWM1PR          equ	1123	;# 
  1283   000463                     PWM1PRL         equ	1123	;# 
  1284   000464                     PWM1PRH         equ	1124	;# 
  1285   000465                     PWM1CPRE        equ	1125	;# 
  1286   000466                     PWM1PIPOS       equ	1126	;# 
  1287   000467                     PWM1GIR         equ	1127	;# 
  1288   000468                     PWM1GIE         equ	1128	;# 
  1289   000469                     PWM1CON         equ	1129	;# 
  1290   00046A                     PWM1S1CFG       equ	1130	;# 
  1291   00046B                     PWM1S1P1        equ	1131	;# 
  1292   00046B                     PWM1S1P1L       equ	1131	;# 
  1293   00046C                     PWM1S1P1H       equ	1132	;# 
  1294   00046D                     PWM1S1P2        equ	1133	;# 
  1295   00046D                     PWM1S1P2L       equ	1133	;# 
  1296   00046E                     PWM1S1P2H       equ	1134	;# 
  1297   00046F                     PWM2ERS         equ	1135	;# 
  1298   000470                     PWM2CLK         equ	1136	;# 
  1299   000471                     PWM2LDS         equ	1137	;# 
  1300   000472                     PWM2PR          equ	1138	;# 
  1301   000472                     PWM2PRL         equ	1138	;# 
  1302   000473                     PWM2PRH         equ	1139	;# 
  1303   000474                     PWM2CPRE        equ	1140	;# 
  1304   000475                     PWM2PIPOS       equ	1141	;# 
  1305   000476                     PWM2GIR         equ	1142	;# 
  1306   000477                     PWM2GIE         equ	1143	;# 
  1307   000478                     PWM2CON         equ	1144	;# 
  1308   000479                     PWM2S1CFG       equ	1145	;# 
  1309   00047A                     PWM2S1P1        equ	1146	;# 
  1310   00047A                     PWM2S1P1L       equ	1146	;# 
  1311   00047B                     PWM2S1P1H       equ	1147	;# 
  1312   00047C                     PWM2S1P2        equ	1148	;# 
  1313   00047C                     PWM2S1P2L       equ	1148	;# 
  1314   00047D                     PWM2S1P2H       equ	1149	;# 
  1315   00047E                     PWM3ERS         equ	1150	;# 
  1316   00047F                     PWM3CLK         equ	1151	;# 
  1317   000480                     PWM3LDS         equ	1152	;# 
  1318   000481                     PWM3PR          equ	1153	;# 
  1319   000481                     PWM3PRL         equ	1153	;# 
  1320   000482                     PWM3PRH         equ	1154	;# 
  1321   000483                     PWM3CPRE        equ	1155	;# 
  1322   000484                     PWM3PIPOS       equ	1156	;# 
  1323   000485                     PWM3GIR         equ	1157	;# 
  1324   000486                     PWM3GIE         equ	1158	;# 
  1325   000487                     PWM3CON         equ	1159	;# 
  1326   000488                     PWM3S1CFG       equ	1160	;# 
  1327   000489                     PWM3S1P1        equ	1161	;# 
  1328   000489                     PWM3S1P1L       equ	1161	;# 
  1329   00048A                     PWM3S1P1H       equ	1162	;# 
  1330   00048B                     PWM3S1P2        equ	1163	;# 
  1331   00048B                     PWM3S1P2L       equ	1163	;# 
  1332   00048C                     PWM3S1P2H       equ	1164	;# 
  1333   00048D                     PWM4ERS         equ	1165	;# 
  1334   00048E                     PWM4CLK         equ	1166	;# 
  1335   00048F                     PWM4LDS         equ	1167	;# 
  1336   000490                     PWM4PR          equ	1168	;# 
  1337   000490                     PWM4PRL         equ	1168	;# 
  1338   000491                     PWM4PRH         equ	1169	;# 
  1339   000492                     PWM4CPRE        equ	1170	;# 
  1340   000493                     PWM4PIPOS       equ	1171	;# 
  1341   000494                     PWM4GIR         equ	1172	;# 
  1342   000495                     PWM4GIE         equ	1173	;# 
  1343   000496                     PWM4CON         equ	1174	;# 
  1344   000497                     PWM4S1CFG       equ	1175	;# 
  1345   000498                     PWM4S1P1        equ	1176	;# 
  1346   000498                     PWM4S1P1L       equ	1176	;# 
  1347   000499                     PWM4S1P1H       equ	1177	;# 
  1348   00049A                     PWM4S1P2        equ	1178	;# 
  1349   00049A                     PWM4S1P2L       equ	1178	;# 
  1350   00049B                     PWM4S1P2H       equ	1179	;# 
  1351   00049C                     PWMLOAD         equ	1180	;# 
  1352   00049D                     PWMEN           equ	1181	;# 
  1353   00049E                     PIE0            equ	1182	;# 
  1354   00049F                     PIE1            equ	1183	;# 
  1355   0004A0                     PIE2            equ	1184	;# 
  1356   0004A1                     PIE3            equ	1185	;# 
  1357   0004A2                     PIE4            equ	1186	;# 
  1358   0004A3                     PIE5            equ	1187	;# 
  1359   0004A4                     PIE6            equ	1188	;# 
  1360   0004A5                     PIE7            equ	1189	;# 
  1361   0004A6                     PIE8            equ	1190	;# 
  1362   0004A7                     PIE9            equ	1191	;# 
  1363   0004A8                     PIE10           equ	1192	;# 
  1364   0004A9                     PIE11           equ	1193	;# 
  1365   0004AA                     PIE12           equ	1194	;# 
  1366   0004AB                     PIE13           equ	1195	;# 
  1367   0004AC                     PIE14           equ	1196	;# 
  1368   0004AD                     PIE15           equ	1197	;# 
  1369   0004AE                     PIR0            equ	1198	;# 
  1370   0004AF                     PIR1            equ	1199	;# 
  1371   0004B0                     PIR2            equ	1200	;# 
  1372   0004B1                     PIR3            equ	1201	;# 
  1373   0004B2                     PIR4            equ	1202	;# 
  1374   0004B3                     PIR5            equ	1203	;# 
  1375   0004B4                     PIR6            equ	1204	;# 
  1376   0004B5                     PIR7            equ	1205	;# 
  1377   0004B6                     PIR8            equ	1206	;# 
  1378   0004B7                     PIR9            equ	1207	;# 
  1379   0004B8                     PIR10           equ	1208	;# 
  1380   0004B9                     PIR11           equ	1209	;# 
  1381   0004BA                     PIR12           equ	1210	;# 
  1382   0004BB                     PIR13           equ	1211	;# 
  1383   0004BC                     PIR14           equ	1212	;# 
  1384   0004BD                     PIR15           equ	1213	;# 
  1385   0004BE                     LATA            equ	1214	;# 
  1386   0004BF                     LATB            equ	1215	;# 
  1387   0004C0                     LATC            equ	1216	;# 
  1388   0004C6                     TRISA           equ	1222	;# 
  1389   0004C7                     TRISB           equ	1223	;# 
  1390   0004C8                     TRISC           equ	1224	;# 
  1391   0004CA                     TRISE           equ	1226	;# 
  1392   0004CE                     PORTA           equ	1230	;# 
  1393   0004CF                     PORTB           equ	1231	;# 
  1394   0004D0                     PORTC           equ	1232	;# 
  1395   0004D2                     PORTE           equ	1234	;# 
  1396   0004D6                     INTCON0         equ	1238	;# 
  1397   0004D7                     INTCON1         equ	1239	;# 
  1398   0004D8                     STATUS          equ	1240	;# 
  1399   0004D9                     FSR2            equ	1241	;# 
  1400   0004D9                     FSR2L           equ	1241	;# 
  1401   0004DA                     FSR2H           equ	1242	;# 
  1402   0004DB                     PLUSW2          equ	1243	;# 
  1403   0004DC                     PREINC2         equ	1244	;# 
  1404   0004DD                     POSTDEC2        equ	1245	;# 
  1405   0004DE                     POSTINC2        equ	1246	;# 
  1406   0004DF                     INDF2           equ	1247	;# 
  1407   0004E0                     BSR             equ	1248	;# 
  1408   0004E1                     FSR1            equ	1249	;# 
  1409   0004E1                     FSR1L           equ	1249	;# 
  1410   0004E2                     FSR1H           equ	1250	;# 
  1411   0004E3                     PLUSW1          equ	1251	;# 
  1412   0004E4                     PREINC1         equ	1252	;# 
  1413   0004E5                     POSTDEC1        equ	1253	;# 
  1414   0004E6                     POSTINC1        equ	1254	;# 
  1415   0004E7                     INDF1           equ	1255	;# 
  1416   0004E8                     WREG            equ	1256	;# 
  1417   0004E9                     FSR0            equ	1257	;# 
  1418   0004E9                     FSR0L           equ	1257	;# 
  1419   0004EA                     FSR0H           equ	1258	;# 
  1420   0004EB                     PLUSW0          equ	1259	;# 
  1421   0004EC                     PREINC0         equ	1260	;# 
  1422   0004ED                     POSTDEC0        equ	1261	;# 
  1423   0004EE                     POSTINC0        equ	1262	;# 
  1424   0004EF                     INDF0           equ	1263	;# 
  1425   0004F0                     PCON0           equ	1264	;# 
  1426   0004F1                     PCON1           equ	1265	;# 
  1427   0004F2                     CPUDOZE         equ	1266	;# 
  1428   0004F3                     PROD            equ	1267	;# 
  1429   0004F3                     PRODL           equ	1267	;# 
  1430   0004F4                     PRODH           equ	1268	;# 
  1431   0004F5                     TABLAT          equ	1269	;# 
  1432   0004F6                     TBLPTR          equ	1270	;# 
  1433   0004F6                     TBLPTRL         equ	1270	;# 
  1434   0004F7                     TBLPTRH         equ	1271	;# 
  1435   0004F8                     TBLPTRU         equ	1272	;# 
  1436   0004F9                     PCLAT           equ	1273	;# 
  1437   0004F9                     PCL             equ	1273	;# 
  1438   0004FA                     PCLATH          equ	1274	;# 
  1439   0004FB                     PCLATU          equ	1275	;# 
  1440   0004FC                     STKPTR          equ	1276	;# 
  1441   0004FD                     TOS             equ	1277	;# 
  1442   0004FD                     TOSL            equ	1277	;# 
  1443   0004FE                     TOSH            equ	1278	;# 
  1444   0004FF                     TOSU            equ	1279	;# 
  1445   000038                     BOOTREG         equ	56	;# 
  1446   000039                     CLKRCON         equ	57	;# 
  1447   00003A                     CLKRCLK         equ	58	;# 
  1448   000040                     NVMCON0         equ	64	;# 
  1449   000041                     NVMCON1         equ	65	;# 
  1450   000042                     NVMLOCK         equ	66	;# 
  1451   000043                     NVMADR          equ	67	;# 
  1452   000043                     NVMADRL         equ	67	;# 
  1453   000044                     NVMADRH         equ	68	;# 
  1454   000045                     NVMADRU         equ	69	;# 
  1455   000046                     NVMDAT          equ	70	;# 
  1456   000046                     NVMDATL         equ	70	;# 
  1457   000047                     NVMDATH         equ	71	;# 
  1458   000048                     VREGCON         equ	72	;# 
  1459   000049                     BORCON          equ	73	;# 
  1460   00004A                     HLVDCON0        equ	74	;# 
  1461   00004B                     HLVDCON1        equ	75	;# 
  1462   00004C                     ZCDCON          equ	76	;# 
  1463   000060                     PMD0            equ	96	;# 
  1464   000061                     PMD1            equ	97	;# 
  1465   000062                     PMD2            equ	98	;# 
  1466   000063                     PMD3            equ	99	;# 
  1467   000064                     PMD4            equ	100	;# 
  1468   000065                     PMD5            equ	101	;# 
  1469   000066                     PMD6            equ	102	;# 
  1470   000067                     PMD7            equ	103	;# 
  1471   000068                     PMD8            equ	104	;# 
  1472   00006A                     MD1CON0         equ	106	;# 
  1473   00006B                     MD1CON1         equ	107	;# 
  1474   00006C                     MD1SRC          equ	108	;# 
  1475   00006D                     MD1CARL         equ	109	;# 
  1476   00006E                     MD1CARH         equ	110	;# 
  1477   00006F                     CMOUT           equ	111	;# 
  1478   000070                     CM1CON0         equ	112	;# 
  1479   000071                     CM1CON1         equ	113	;# 
  1480   000072                     CM1NCH          equ	114	;# 
  1481   000073                     CM1PCH          equ	115	;# 
  1482   000074                     CM2CON0         equ	116	;# 
  1483   000075                     CM2CON1         equ	117	;# 
  1484   000076                     CM2NCH          equ	118	;# 
  1485   000077                     CM2PCH          equ	119	;# 
  1486   000078                     WDTCON0         equ	120	;# 
  1487   000079                     WDTCON1         equ	121	;# 
  1488   00007A                     WDTPSL          equ	122	;# 
  1489   00007B                     WDTPSH          equ	123	;# 
  1490   00007C                     WDTTMR          equ	124	;# 
  1491   00007D                     DAC1DAT         equ	125	;# 
  1492   00007D                     DAC1DATL        equ	125	;# 
  1493   00007F                     DAC1CON         equ	127	;# 
  1494   000080                     SPI1RXB         equ	128	;# 
  1495   000081                     SPI1TXB         equ	129	;# 
  1496   000082                     SPI1TCNT        equ	130	;# 
  1497   000082                     SPI1TCNTL       equ	130	;# 
  1498   000083                     SPI1TCNTH       equ	131	;# 
  1499   000084                     SPI1CON0        equ	132	;# 
  1500   000085                     SPI1CON1        equ	133	;# 
  1501   000086                     SPI1CON2        equ	134	;# 
  1502   000087                     SPI1STATUS      equ	135	;# 
  1503   000088                     SPI1TWIDTH      equ	136	;# 
  1504   000089                     SPI1BAUD        equ	137	;# 
  1505   00008A                     SPI1INTF        equ	138	;# 
  1506   00008B                     SPI1INTE        equ	139	;# 
  1507   00008C                     SPI1CLK         equ	140	;# 
  1508   00008D                     SPI2RXB         equ	141	;# 
  1509   00008E                     SPI2TXB         equ	142	;# 
  1510   00008F                     SPI2TCNT        equ	143	;# 
  1511   00008F                     SPI2TCNTL       equ	143	;# 
  1512   000090                     SPI2TCNTH       equ	144	;# 
  1513   000091                     SPI2CON0        equ	145	;# 
  1514   000092                     SPI2CON1        equ	146	;# 
  1515   000093                     SPI2CON2        equ	147	;# 
  1516   000094                     SPI2STATUS      equ	148	;# 
  1517   000095                     SPI2TWIDTH      equ	149	;# 
  1518   000096                     SPI2BAUD        equ	150	;# 
  1519   000097                     SPI2INTF        equ	151	;# 
  1520   000098                     SPI2INTE        equ	152	;# 
  1521   000099                     SPI2CLK         equ	153	;# 
  1522   0000AC                     ACTCON          equ	172	;# 
  1523   0000AD                     OSCCON1         equ	173	;# 
  1524   0000AE                     OSCCON2         equ	174	;# 
  1525   0000AF                     OSCCON3         equ	175	;# 
  1526   0000B0                     OSCTUNE         equ	176	;# 
  1527   0000B1                     OSCFRQ          equ	177	;# 
  1528   0000B1                     OSCFREQ         equ	177	;# 
  1529   0000B2                     OSCSTAT         equ	178	;# 
  1530   0000B2                     OSCSTAT1        equ	178	;# 
  1531   0000B3                     OSCEN           equ	179	;# 
  1532   0000B4                     PRLOCK          equ	180	;# 
  1533   0000B5                     SCANPR          equ	181	;# 
  1534   0000B6                     DMA1PR          equ	182	;# 
  1535   0000B7                     DMA2PR          equ	183	;# 
  1536   0000B8                     DMA3PR          equ	184	;# 
  1537   0000B9                     DMA4PR          equ	185	;# 
  1538   0000BA                     DMA5PR          equ	186	;# 
  1539   0000BB                     DMA6PR          equ	187	;# 
  1540   0000BC                     DMA7PR          equ	188	;# 
  1541   0000BD                     DMA8PR          equ	189	;# 
  1542   0000BE                     MAINPR          equ	190	;# 
  1543   0000BF                     ISRPR           equ	191	;# 
  1544   0000D4                     CLCDATA         equ	212	;# 
  1545   0000D5                     CLCSELECT       equ	213	;# 
  1546   0000D6                     CLCnCON         equ	214	;# 
  1547   0000D7                     CLCnPOL         equ	215	;# 
  1548   0000D8                     CLCnSEL0        equ	216	;# 
  1549   0000D9                     CLCnSEL1        equ	217	;# 
  1550   0000DA                     CLCnSEL2        equ	218	;# 
  1551   0000DB                     CLCnSEL3        equ	219	;# 
  1552   0000DC                     CLCnGLS0        equ	220	;# 
  1553   0000DD                     CLCnGLS1        equ	221	;# 
  1554   0000DE                     CLCnGLS2        equ	222	;# 
  1555   0000DF                     CLCnGLS3        equ	223	;# 
  1556   0000E8                     DMASELECT       equ	232	;# 
  1557   0000E9                     DMAnBUF         equ	233	;# 
  1558   0000EA                     DMAnDCNT        equ	234	;# 
  1559   0000EA                     DMAnDCNTL       equ	234	;# 
  1560   0000EB                     DMAnDCNTH       equ	235	;# 
  1561   0000EC                     DMAnDPTR        equ	236	;# 
  1562   0000EC                     DMAnDPTRL       equ	236	;# 
  1563   0000ED                     DMAnDPTRH       equ	237	;# 
  1564   0000EE                     DMAnDSZ         equ	238	;# 
  1565   0000EE                     DMAnDSZL        equ	238	;# 
  1566   0000EF                     DMAnDSZH        equ	239	;# 
  1567   0000F0                     DMAnDSA         equ	240	;# 
  1568   0000F0                     DMAnDSAL        equ	240	;# 
  1569   0000F1                     DMAnDSAH        equ	241	;# 
  1570   0000F2                     DMAnSCNT        equ	242	;# 
  1571   0000F2                     DMAnSCNTL       equ	242	;# 
  1572   0000F3                     DMAnSCNTH       equ	243	;# 
  1573   0000F4                     DMAnSPTR        equ	244	;# 
  1574   0000F4                     DMAnSPTRL       equ	244	;# 
  1575   0000F5                     DMAnSPTRH       equ	245	;# 
  1576   0000F6                     DMAnSPTRU       equ	246	;# 
  1577   0000F7                     DMAnSSZ         equ	247	;# 
  1578   0000F7                     DMAnSSZL        equ	247	;# 
  1579   0000F8                     DMAnSSZH        equ	248	;# 
  1580   0000F9                     DMAnSSA         equ	249	;# 
  1581   0000F9                     DMAnSSAL        equ	249	;# 
  1582   0000FA                     DMAnSSAH        equ	250	;# 
  1583   0000FB                     DMAnSSAU        equ	251	;# 
  1584   0000FC                     DMAnCON0        equ	252	;# 
  1585   0000FD                     DMAnCON1        equ	253	;# 
  1586   0000FE                     DMAnAIRQ        equ	254	;# 
  1587   0000FF                     DMAnSIRQ        equ	255	;# 
  1588   000100                     C1CONL          equ	256	;# 
  1589   000101                     C1CONH          equ	257	;# 
  1590   000102                     C1CONU          equ	258	;# 
  1591   000103                     C1CONT          equ	259	;# 
  1592   000104                     C1NBTCFGL       equ	260	;# 
  1593   000105                     C1NBTCFGH       equ	261	;# 
  1594   000106                     C1NBTCFGU       equ	262	;# 
  1595   000107                     C1NBTCFGT       equ	263	;# 
  1596   000108                     C1DBTCFGL       equ	264	;# 
  1597   000109                     C1DBTCFGH       equ	265	;# 
  1598   00010A                     C1DBTCFGU       equ	266	;# 
  1599   00010B                     C1DBTCFGT       equ	267	;# 
  1600   00010C                     C1TDCL          equ	268	;# 
  1601   00010D                     C1TDCH          equ	269	;# 
  1602   00010E                     C1TDCU          equ	270	;# 
  1603   000110                     C1TBC           equ	272	;# 
  1604   000110                     C1TBCL          equ	272	;# 
  1605   000111                     C1TBCH          equ	273	;# 
  1606   000112                     C1TBCU          equ	274	;# 
  1607   000113                     C1TBCT          equ	275	;# 
  1608   000114                     C1TSCONL        equ	276	;# 
  1609   000115                     C1TSCONH        equ	277	;# 
  1610   000116                     C1TSCONU        equ	278	;# 
  1611   000117                     C1TSCONT        equ	279	;# 
  1612   000118                     C1VECL          equ	280	;# 
  1613   000119                     C1VECH          equ	281	;# 
  1614   00011A                     C1VECU          equ	282	;# 
  1615   00011B                     C1VECT          equ	283	;# 
  1616   00011C                     C1INTL          equ	284	;# 
  1617   00011D                     C1INTH          equ	285	;# 
  1618   00011E                     C1INTU          equ	286	;# 
  1619   00011F                     C1INTT          equ	287	;# 
  1620   000120                     C1RXIF          equ	288	;# 
  1621   000120                     C1RXIFL         equ	288	;# 
  1622   000121                     C1RXIFH         equ	289	;# 
  1623   000122                     C1RXIFU         equ	290	;# 
  1624   000123                     C1RXIFT         equ	291	;# 
  1625   000124                     C1TXIF          equ	292	;# 
  1626   000124                     C1TXIFL         equ	292	;# 
  1627   000125                     C1TXIFH         equ	293	;# 
  1628   000126                     C1TXIFU         equ	294	;# 
  1629   000127                     C1TXIFT         equ	295	;# 
  1630   000128                     C1RXOVIF        equ	296	;# 
  1631   000128                     C1RXOVIFL       equ	296	;# 
  1632   000129                     C1RXOVIFH       equ	297	;# 
  1633   00012A                     C1RXOVIFU       equ	298	;# 
  1634   00012B                     C1RXOVIFT       equ	299	;# 
  1635   00012C                     C1TXATIF        equ	300	;# 
  1636   00012C                     C1TXATIFL       equ	300	;# 
  1637   00012D                     C1TXATIFH       equ	301	;# 
  1638   00012E                     C1TXATIFU       equ	302	;# 
  1639   00012F                     C1TXATIFT       equ	303	;# 
  1640   000130                     C1TXREQ         equ	304	;# 
  1641   000130                     C1TXREQL        equ	304	;# 
  1642   000131                     C1TXREQH        equ	305	;# 
  1643   000132                     C1TXREQU        equ	306	;# 
  1644   000133                     C1TXREQT        equ	307	;# 
  1645   000134                     C1TRECL         equ	308	;# 
  1646   000135                     C1TRECH         equ	309	;# 
  1647   000136                     C1TRECU         equ	310	;# 
  1648   000137                     C1TRECT         equ	311	;# 
  1649   000138                     C1BDIAG0L       equ	312	;# 
  1650   000139                     C1BDIAG0H       equ	313	;# 
  1651   00013C                     C1BDIAG1L       equ	316	;# 
  1652   00013D                     C1BDIAG1H       equ	317	;# 
  1653   00013E                     C1BDIAG1U       equ	318	;# 
  1654   00013F                     C1BDIAG1T       equ	319	;# 
  1655   000140                     C1TEFCONL       equ	320	;# 
  1656   000141                     C1TEFCONH       equ	321	;# 
  1657   000142                     C1TEFCONU       equ	322	;# 
  1658   000143                     C1TEFCONT       equ	323	;# 
  1659   000144                     C1TEFSTAL       equ	324	;# 
  1660   000145                     C1TEFSTAH       equ	325	;# 
  1661   000146                     C1TEFSTAU       equ	326	;# 
  1662   000147                     C1TEFSTAT       equ	327	;# 
  1663   000148                     C1TEFUA         equ	328	;# 
  1664   000148                     C1TEFUAL        equ	328	;# 
  1665   000149                     C1TEFUAH        equ	329	;# 
  1666   00014A                     C1TEFUAU        equ	330	;# 
  1667   00014B                     C1TEFUAT        equ	331	;# 
  1668   00014C                     C1FIFOBA        equ	332	;# 
  1669   00014C                     C1FIFOBAL       equ	332	;# 
  1670   00014D                     C1FIFOBAH       equ	333	;# 
  1671   00014E                     C1FIFOBAU       equ	334	;# 
  1672   00014F                     C1FIFOBAT       equ	335	;# 
  1673   000150                     C1TXQCONL       equ	336	;# 
  1674   000151                     C1TXQCONH       equ	337	;# 
  1675   000152                     C1TXQCONU       equ	338	;# 
  1676   000153                     C1TXQCONT       equ	339	;# 
  1677   000154                     C1TXQSTAL       equ	340	;# 
  1678   000155                     C1TXQSTAH       equ	341	;# 
  1679   000156                     C1TXQSTAU       equ	342	;# 
  1680   000157                     C1TXQSTAT       equ	343	;# 
  1681   000158                     C1TXQUA         equ	344	;# 
  1682   000158                     C1TXQUAL        equ	344	;# 
  1683   000159                     C1TXQUAH        equ	345	;# 
  1684   00015A                     C1TXQUAU        equ	346	;# 
  1685   00015B                     C1TXQUAT        equ	347	;# 
  1686   00015C                     C1FIFOCON1      equ	348	;# 
  1687   00015C                     C1FIFOCON1L     equ	348	;# 
  1688   00015D                     C1FIFOCON1H     equ	349	;# 
  1689   00015E                     C1FIFOCON1U     equ	350	;# 
  1690   00015F                     C1FIFOCON1T     equ	351	;# 
  1691   000160                     C1FIFOSTA1      equ	352	;# 
  1692   000160                     C1FIFOSTA1L     equ	352	;# 
  1693   000161                     C1FIFOSTA1H     equ	353	;# 
  1694   000162                     C1FIFOSTA1U     equ	354	;# 
  1695   000163                     C1FIFOSTA1T     equ	355	;# 
  1696   000164                     C1FIFOUA1       equ	356	;# 
  1697   000164                     C1FIFOUA1L      equ	356	;# 
  1698   000165                     C1FIFOUA1H      equ	357	;# 
  1699   000166                     C1FIFOUA1U      equ	358	;# 
  1700   000167                     C1FIFOUA1T      equ	359	;# 
  1701   000168                     C1FIFOCON2      equ	360	;# 
  1702   000168                     C1FIFOCON2L     equ	360	;# 
  1703   000169                     C1FIFOCON2H     equ	361	;# 
  1704   00016A                     C1FIFOCON2U     equ	362	;# 
  1705   00016B                     C1FIFOCON2T     equ	363	;# 
  1706   00016C                     C1FIFOSTA2      equ	364	;# 
  1707   00016C                     C1FIFOSTA2L     equ	364	;# 
  1708   00016D                     C1FIFOSTA2H     equ	365	;# 
  1709   00016E                     C1FIFOSTA2U     equ	366	;# 
  1710   00016F                     C1FIFOSTA2T     equ	367	;# 
  1711   000170                     C1FIFOUA2       equ	368	;# 
  1712   000170                     C1FIFOUA2L      equ	368	;# 
  1713   000171                     C1FIFOUA2H      equ	369	;# 
  1714   000172                     C1FIFOUA2U      equ	370	;# 
  1715   000173                     C1FIFOUA2T      equ	371	;# 
  1716   000174                     C1FIFOCON3      equ	372	;# 
  1717   000174                     C1FIFOCON3L     equ	372	;# 
  1718   000175                     C1FIFOCON3H     equ	373	;# 
  1719   000176                     C1FIFOCON3U     equ	374	;# 
  1720   000177                     C1FIFOCON3T     equ	375	;# 
  1721   000178                     C1FIFOSTA3      equ	376	;# 
  1722   000178                     C1FIFOSTA3L     equ	376	;# 
  1723   000179                     C1FIFOSTA3H     equ	377	;# 
  1724   00017A                     C1FIFOSTA3U     equ	378	;# 
  1725   00017B                     C1FIFOSTA3T     equ	379	;# 
  1726   00017C                     C1FIFOUA3       equ	380	;# 
  1727   00017C                     C1FIFOUA3L      equ	380	;# 
  1728   00017D                     C1FIFOUA3H      equ	381	;# 
  1729   00017E                     C1FIFOUA3U      equ	382	;# 
  1730   00017F                     C1FIFOUA3T      equ	383	;# 
  1731   000180                     C1FLTCON0L      equ	384	;# 
  1732   000181                     C1FLTCON0H      equ	385	;# 
  1733   000182                     C1FLTCON0U      equ	386	;# 
  1734   000183                     C1FLTCON0T      equ	387	;# 
  1735   000184                     C1FLTCON1L      equ	388	;# 
  1736   000185                     C1FLTCON1H      equ	389	;# 
  1737   000186                     C1FLTCON1U      equ	390	;# 
  1738   000187                     C1FLTCON1T      equ	391	;# 
  1739   000188                     C1FLTCON2L      equ	392	;# 
  1740   000189                     C1FLTCON2H      equ	393	;# 
  1741   00018A                     C1FLTCON2U      equ	394	;# 
  1742   00018B                     C1FLTCON2T      equ	395	;# 
  1743   00018C                     C1FLTOBJ0       equ	396	;# 
  1744   00018C                     C1FLTOBJ0L      equ	396	;# 
  1745   00018D                     C1FLTOBJ0H      equ	397	;# 
  1746   00018E                     C1FLTOBJ0U      equ	398	;# 
  1747   00018F                     C1FLTOBJ0T      equ	399	;# 
  1748   000190                     C1MASK0         equ	400	;# 
  1749   000190                     C1MASK0L        equ	400	;# 
  1750   000191                     C1MASK0H        equ	401	;# 
  1751   000192                     C1MASK0U        equ	402	;# 
  1752   000193                     C1MASK0T        equ	403	;# 
  1753   000194                     C1FLTOBJ1       equ	404	;# 
  1754   000194                     C1FLTOBJ1L      equ	404	;# 
  1755   000195                     C1FLTOBJ1H      equ	405	;# 
  1756   000196                     C1FLTOBJ1U      equ	406	;# 
  1757   000197                     C1FLTOBJ1T      equ	407	;# 
  1758   000198                     C1MASK1         equ	408	;# 
  1759   000198                     C1MASK1L        equ	408	;# 
  1760   000199                     C1MASK1H        equ	409	;# 
  1761   00019A                     C1MASK1U        equ	410	;# 
  1762   00019B                     C1MASK1T        equ	411	;# 
  1763   00019C                     C1FLTOBJ2       equ	412	;# 
  1764   00019C                     C1FLTOBJ2L      equ	412	;# 
  1765   00019D                     C1FLTOBJ2H      equ	413	;# 
  1766   00019E                     C1FLTOBJ2U      equ	414	;# 
  1767   00019F                     C1FLTOBJ2T      equ	415	;# 
  1768   0001A0                     C1MASK2         equ	416	;# 
  1769   0001A0                     C1MASK2L        equ	416	;# 
  1770   0001A1                     C1MASK2H        equ	417	;# 
  1771   0001A2                     C1MASK2U        equ	418	;# 
  1772   0001A3                     C1MASK2T        equ	419	;# 
  1773   0001A4                     C1FLTOBJ3       equ	420	;# 
  1774   0001A4                     C1FLTOBJ3L      equ	420	;# 
  1775   0001A5                     C1FLTOBJ3H      equ	421	;# 
  1776   0001A6                     C1FLTOBJ3U      equ	422	;# 
  1777   0001A7                     C1FLTOBJ3T      equ	423	;# 
  1778   0001A8                     C1MASK3         equ	424	;# 
  1779   0001A8                     C1MASK3L        equ	424	;# 
  1780   0001A9                     C1MASK3H        equ	425	;# 
  1781   0001AA                     C1MASK3U        equ	426	;# 
  1782   0001AB                     C1MASK3T        equ	427	;# 
  1783   0001AC                     C1FLTOBJ4       equ	428	;# 
  1784   0001AC                     C1FLTOBJ4L      equ	428	;# 
  1785   0001AD                     C1FLTOBJ4H      equ	429	;# 
  1786   0001AE                     C1FLTOBJ4U      equ	430	;# 
  1787   0001AF                     C1FLTOBJ4T      equ	431	;# 
  1788   0001B0                     C1MASK4         equ	432	;# 
  1789   0001B0                     C1MASK4L        equ	432	;# 
  1790   0001B1                     C1MASK4H        equ	433	;# 
  1791   0001B2                     C1MASK4U        equ	434	;# 
  1792   0001B3                     C1MASK4T        equ	435	;# 
  1793   0001B4                     C1FLTOBJ5       equ	436	;# 
  1794   0001B4                     C1FLTOBJ5L      equ	436	;# 
  1795   0001B5                     C1FLTOBJ5H      equ	437	;# 
  1796   0001B6                     C1FLTOBJ5U      equ	438	;# 
  1797   0001B7                     C1FLTOBJ5T      equ	439	;# 
  1798   0001B8                     C1MASK5         equ	440	;# 
  1799   0001B8                     C1MASK5L        equ	440	;# 
  1800   0001B9                     C1MASK5H        equ	441	;# 
  1801   0001BA                     C1MASK5U        equ	442	;# 
  1802   0001BB                     C1MASK5T        equ	443	;# 
  1803   0001BC                     C1FLTOBJ6       equ	444	;# 
  1804   0001BC                     C1FLTOBJ6L      equ	444	;# 
  1805   0001BD                     C1FLTOBJ6H      equ	445	;# 
  1806   0001BE                     C1FLTOBJ6U      equ	446	;# 
  1807   0001BF                     C1FLTOBJ6T      equ	447	;# 
  1808   0001C0                     C1MASK6         equ	448	;# 
  1809   0001C0                     C1MASK6L        equ	448	;# 
  1810   0001C1                     C1MASK6H        equ	449	;# 
  1811   0001C2                     C1MASK6U        equ	450	;# 
  1812   0001C3                     C1MASK6T        equ	451	;# 
  1813   0001C4                     C1FLTOBJ7       equ	452	;# 
  1814   0001C4                     C1FLTOBJ7L      equ	452	;# 
  1815   0001C5                     C1FLTOBJ7H      equ	453	;# 
  1816   0001C6                     C1FLTOBJ7U      equ	454	;# 
  1817   0001C7                     C1FLTOBJ7T      equ	455	;# 
  1818   0001C8                     C1MASK7         equ	456	;# 
  1819   0001C8                     C1MASK7L        equ	456	;# 
  1820   0001C9                     C1MASK7H        equ	457	;# 
  1821   0001CA                     C1MASK7U        equ	458	;# 
  1822   0001CB                     C1MASK7T        equ	459	;# 
  1823   0001CC                     C1FLTOBJ8       equ	460	;# 
  1824   0001CC                     C1FLTOBJ8L      equ	460	;# 
  1825   0001CD                     C1FLTOBJ8H      equ	461	;# 
  1826   0001CE                     C1FLTOBJ8U      equ	462	;# 
  1827   0001CF                     C1FLTOBJ8T      equ	463	;# 
  1828   0001D0                     C1MASK8         equ	464	;# 
  1829   0001D0                     C1MASK8L        equ	464	;# 
  1830   0001D1                     C1MASK8H        equ	465	;# 
  1831   0001D2                     C1MASK8U        equ	466	;# 
  1832   0001D3                     C1MASK8T        equ	467	;# 
  1833   0001D4                     C1FLTOBJ9       equ	468	;# 
  1834   0001D4                     C1FLTOBJ9L      equ	468	;# 
  1835   0001D5                     C1FLTOBJ9H      equ	469	;# 
  1836   0001D6                     C1FLTOBJ9U      equ	470	;# 
  1837   0001D7                     C1FLTOBJ9T      equ	471	;# 
  1838   0001D8                     C1MASK9         equ	472	;# 
  1839   0001D8                     C1MASK9L        equ	472	;# 
  1840   0001D9                     C1MASK9H        equ	473	;# 
  1841   0001DA                     C1MASK9U        equ	474	;# 
  1842   0001DB                     C1MASK9T        equ	475	;# 
  1843   0001DC                     C1FLTOBJ10      equ	476	;# 
  1844   0001DC                     C1FLTOBJ10L     equ	476	;# 
  1845   0001DD                     C1FLTOBJ10H     equ	477	;# 
  1846   0001DE                     C1FLTOBJ10U     equ	478	;# 
  1847   0001DF                     C1FLTOBJ10T     equ	479	;# 
  1848   0001E0                     C1MASK10        equ	480	;# 
  1849   0001E0                     C1MASK10L       equ	480	;# 
  1850   0001E1                     C1MASK10H       equ	481	;# 
  1851   0001E2                     C1MASK10U       equ	482	;# 
  1852   0001E3                     C1MASK10T       equ	483	;# 
  1853   0001E4                     C1FLTOBJ11      equ	484	;# 
  1854   0001E4                     C1FLTOBJ11L     equ	484	;# 
  1855   0001E5                     C1FLTOBJ11H     equ	485	;# 
  1856   0001E6                     C1FLTOBJ11U     equ	486	;# 
  1857   0001E7                     C1FLTOBJ11T     equ	487	;# 
  1858   0001E8                     C1MASK11        equ	488	;# 
  1859   0001E8                     C1MASK11L       equ	488	;# 
  1860   0001E9                     C1MASK11H       equ	489	;# 
  1861   0001EA                     C1MASK11U       equ	490	;# 
  1862   0001EB                     C1MASK11T       equ	491	;# 
  1863   000200                     PPSLOCK         equ	512	;# 
  1864   000201                     RA0PPS          equ	513	;# 
  1865   000202                     RA1PPS          equ	514	;# 
  1866   000203                     RA2PPS          equ	515	;# 
  1867   000204                     RA3PPS          equ	516	;# 
  1868   000205                     RA4PPS          equ	517	;# 
  1869   000206                     RA5PPS          equ	518	;# 
  1870   000207                     RA6PPS          equ	519	;# 
  1871   000208                     RA7PPS          equ	520	;# 
  1872   000209                     RB0PPS          equ	521	;# 
  1873   00020A                     RB1PPS          equ	522	;# 
  1874   00020B                     RB2PPS          equ	523	;# 
  1875   00020C                     RB3PPS          equ	524	;# 
  1876   00020D                     RB4PPS          equ	525	;# 
  1877   00020E                     RB5PPS          equ	526	;# 
  1878   00020F                     RB6PPS          equ	527	;# 
  1879   000210                     RB7PPS          equ	528	;# 
  1880   000211                     RC0PPS          equ	529	;# 
  1881   000212                     RC1PPS          equ	530	;# 
  1882   000213                     RC2PPS          equ	531	;# 
  1883   000214                     RC3PPS          equ	532	;# 
  1884   000215                     RC4PPS          equ	533	;# 
  1885   000216                     RC5PPS          equ	534	;# 
  1886   000217                     RC6PPS          equ	535	;# 
  1887   000218                     RC7PPS          equ	536	;# 
  1888   00023D                     CANRXPPS        equ	573	;# 
  1889   00023E                     INT0PPS         equ	574	;# 
  1890   00023F                     INT1PPS         equ	575	;# 
  1891   000240                     INT2PPS         equ	576	;# 
  1892   000241                     T0CKIPPS        equ	577	;# 
  1893   000242                     T1CKIPPS        equ	578	;# 
  1894   000243                     T1GPPS          equ	579	;# 
  1895   000244                     T3CKIPPS        equ	580	;# 
  1896   000245                     T3GPPS          equ	581	;# 
  1897   000246                     T5CKIPPS        equ	582	;# 
  1898   000247                     T5GPPS          equ	583	;# 
  1899   000248                     T2INPPS         equ	584	;# 
  1900   000249                     T4INPPS         equ	585	;# 
  1901   00024A                     T6INPPS         equ	586	;# 
  1902   00024B                     TUIN0PPS        equ	587	;# 
  1903   00024C                     TUIN1PPS        equ	588	;# 
  1904   00024F                     CCP1PPS         equ	591	;# 
  1905   000250                     CCP2PPS         equ	592	;# 
  1906   000251                     CCP3PPS         equ	593	;# 
  1907   000253                     PWM1ERSPPS      equ	595	;# 
  1908   000254                     PWM2ERSPPS      equ	596	;# 
  1909   000255                     PWM3ERSPPS      equ	597	;# 
  1910   000256                     PWM4ERSPPS      equ	598	;# 
  1911   000257                     PWMIN0PPS       equ	599	;# 
  1912   000258                     PWMIN1PPS       equ	600	;# 
  1913   000259                     SMT1WINPPS      equ	601	;# 
  1914   00025A                     SMT1SIGPPS      equ	602	;# 
  1915   00025B                     CWG1PPS         equ	603	;# 
  1916   00025B                     CWG1INPPS       equ	603	;# 
  1917   00025C                     CWG2PPS         equ	604	;# 
  1918   00025C                     CWG2INPPS       equ	604	;# 
  1919   00025D                     CWG3PPS         equ	605	;# 
  1920   00025D                     CWG3INPPS       equ	605	;# 
  1921   00025E                     MD1CARLPPS      equ	606	;# 
  1922   00025E                     MDCARLPPS       equ	606	;# 
  1923   00025F                     MD1CARHPPS      equ	607	;# 
  1924   00025F                     MDCARHPPS       equ	607	;# 
  1925   000260                     MD1SRCPPS       equ	608	;# 
  1926   000260                     MDSRCPPS        equ	608	;# 
  1927   000261                     CLCIN0PPS       equ	609	;# 
  1928   000262                     CLCIN1PPS       equ	610	;# 
  1929   000263                     CLCIN2PPS       equ	611	;# 
  1930   000264                     CLCIN3PPS       equ	612	;# 
  1931   000265                     CLCIN4PPS       equ	613	;# 
  1932   000266                     CLCIN5PPS       equ	614	;# 
  1933   000267                     CLCIN6PPS       equ	615	;# 
  1934   000268                     CLCIN7PPS       equ	616	;# 
  1935   000269                     ADACTPPS        equ	617	;# 
  1936   00026A                     SPI1SCKPPS      equ	618	;# 
  1937   00026B                     SPI1SDIPPS      equ	619	;# 
  1938   00026C                     SPI1SSPPS       equ	620	;# 
  1939   00026D                     SPI2SCKPPS      equ	621	;# 
  1940   00026E                     SPI2SDIPPS      equ	622	;# 
  1941   00026F                     SPI2SSPPS       equ	623	;# 
  1942   000270                     I2C1SDAPPS      equ	624	;# 
  1943   000271                     I2C1SCLPPS      equ	625	;# 
  1944   000272                     U1RXPPS         equ	626	;# 
  1945   000273                     U1CTSPPS        equ	627	;# 
  1946   000274                     U2RXPPS         equ	628	;# 
  1947   000275                     U2CTSPPS        equ	629	;# 
  1948   000276                     U3RXPPS         equ	630	;# 
  1949   000277                     U3CTSPPS        equ	631	;# 
  1950   000278                     U4RXPPS         equ	632	;# 
  1951   000279                     U4CTSPPS        equ	633	;# 
  1952   00027A                     U5RXPPS         equ	634	;# 
  1953   00027B                     U5CTSPPS        equ	635	;# 
  1954   000286                     RC4I2C          equ	646	;# 
  1955   000287                     RC3I2C          equ	647	;# 
  1956   000288                     RB2I2C          equ	648	;# 
  1957   000289                     RB1I2C          equ	649	;# 
  1958   00028A                     I2C1RXB         equ	650	;# 
  1959   00028B                     I2C1TXB         equ	651	;# 
  1960   00028C                     I2C1CNTL        equ	652	;# 
  1961   00028D                     I2C1CNTH        equ	653	;# 
  1962   00028E                     I2C1ADB0        equ	654	;# 
  1963   00028F                     I2C1ADB1        equ	655	;# 
  1964   000290                     I2C1ADR0        equ	656	;# 
  1965   000291                     I2C1ADR1        equ	657	;# 
  1966   000292                     I2C1ADR2        equ	658	;# 
  1967   000293                     I2C1ADR3        equ	659	;# 
  1968   000294                     I2C1CON0        equ	660	;# 
  1969   000295                     I2C1CON1        equ	661	;# 
  1970   000296                     I2C1CON2        equ	662	;# 
  1971   000297                     I2C1ERR         equ	663	;# 
  1972   000298                     I2C1STAT0       equ	664	;# 
  1973   000299                     I2C1STAT1       equ	665	;# 
  1974   00029A                     I2C1PIR         equ	666	;# 
  1975   00029B                     I2C1PIE         equ	667	;# 
  1976   00029C                     I2C1BTO         equ	668	;# 
  1977   00029D                     I2C1BAUD        equ	669	;# 
  1978   00029E                     I2C1CLK         equ	670	;# 
  1979   00029F                     I2C1BTOC        equ	671	;# 
  1980   0002A1                     U1RXB           equ	673	;# 
  1981   0002A1                     U1RXBL          equ	673	;# 
  1982   0002A2                     U1RXCHK         equ	674	;# 
  1983   0002A3                     U1TXB           equ	675	;# 
  1984   0002A3                     U1TXBL          equ	675	;# 
  1985   0002A4                     U1TXCHK         equ	676	;# 
  1986   0002A5                     U1P1            equ	677	;# 
  1987   0002A5                     U1P1L           equ	677	;# 
  1988   0002A6                     U1P1H           equ	678	;# 
  1989   0002A7                     U1P2            equ	679	;# 
  1990   0002A7                     U1P2L           equ	679	;# 
  1991   0002A8                     U1P2H           equ	680	;# 
  1992   0002A9                     U1P3            equ	681	;# 
  1993   0002A9                     U1P3L           equ	681	;# 
  1994   0002AA                     U1P3H           equ	682	;# 
  1995   0002AB                     U1CON0          equ	683	;# 
  1996   0002AC                     U1CON1          equ	684	;# 
  1997   0002AD                     U1CON2          equ	685	;# 
  1998   0002AE                     U1BRG           equ	686	;# 
  1999   0002AE                     U1BRGL          equ	686	;# 
  2000   0002AF                     U1BRGH          equ	687	;# 
  2001   0002B0                     U1FIFO          equ	688	;# 
  2002   0002B1                     U1UIR           equ	689	;# 
  2003   0002B2                     U1ERRIR         equ	690	;# 
  2004   0002B3                     U1ERRIE         equ	691	;# 
  2005   0002B4                     U2RXB           equ	692	;# 
  2006   0002B4                     U2RXBL          equ	692	;# 
  2007   0002B5                     U2RXCHK         equ	693	;# 
  2008   0002B6                     U2TXB           equ	694	;# 
  2009   0002B6                     U2TXBL          equ	694	;# 
  2010   0002B7                     U2TXCHK         equ	695	;# 
  2011   0002B8                     U2P1            equ	696	;# 
  2012   0002B8                     U2P1L           equ	696	;# 
  2013   0002B9                     U2P1H           equ	697	;# 
  2014   0002BA                     U2P2            equ	698	;# 
  2015   0002BA                     U2P2L           equ	698	;# 
  2016   0002BB                     U2P2H           equ	699	;# 
  2017   0002BC                     U2P3            equ	700	;# 
  2018   0002BC                     U2P3L           equ	700	;# 
  2019   0002BD                     U2P3H           equ	701	;# 
  2020   0002BE                     U2CON0          equ	702	;# 
  2021   0002BF                     U2CON1          equ	703	;# 
  2022   0002C0                     U2CON2          equ	704	;# 
  2023   0002C1                     U2BRG           equ	705	;# 
  2024   0002C1                     U2BRGL          equ	705	;# 
  2025   0002C2                     U2BRGH          equ	706	;# 
  2026   0002C3                     U2FIFO          equ	707	;# 
  2027   0002C4                     U2UIR           equ	708	;# 
  2028   0002C5                     U2ERRIR         equ	709	;# 
  2029   0002C6                     U2ERRIE         equ	710	;# 
  2030   0002C7                     U3RXB           equ	711	;# 
  2031   0002C7                     U3RXBL          equ	711	;# 
  2032   0002C9                     U3TXB           equ	713	;# 
  2033   0002C9                     U3TXBL          equ	713	;# 
  2034   0002CB                     U3P1            equ	715	;# 
  2035   0002CB                     U3P1L           equ	715	;# 
  2036   0002CD                     U3P2            equ	717	;# 
  2037   0002CD                     U3P2L           equ	717	;# 
  2038   0002CF                     U3P3            equ	719	;# 
  2039   0002CF                     U3P3L           equ	719	;# 
  2040   0002D1                     U3CON0          equ	721	;# 
  2041   0002D2                     U3CON1          equ	722	;# 
  2042   0002D3                     U3CON2          equ	723	;# 
  2043   0002D4                     U3BRG           equ	724	;# 
  2044   0002D4                     U3BRGL          equ	724	;# 
  2045   0002D5                     U3BRGH          equ	725	;# 
  2046   0002D6                     U3FIFO          equ	726	;# 
  2047   0002D7                     U3UIR           equ	727	;# 
  2048   0002D8                     U3ERRIR         equ	728	;# 
  2049   0002D9                     U3ERRIE         equ	729	;# 
  2050   0002DA                     U4RXB           equ	730	;# 
  2051   0002DA                     U4RXBL          equ	730	;# 
  2052   0002DC                     U4TXB           equ	732	;# 
  2053   0002DC                     U4TXBL          equ	732	;# 
  2054   0002DE                     U4P1            equ	734	;# 
  2055   0002DE                     U4P1L           equ	734	;# 
  2056   0002E0                     U4P2            equ	736	;# 
  2057   0002E0                     U4P2L           equ	736	;# 
  2058   0002E2                     U4P3            equ	738	;# 
  2059   0002E2                     U4P3L           equ	738	;# 
  2060   0002E4                     U4CON0          equ	740	;# 
  2061   0002E5                     U4CON1          equ	741	;# 
  2062   0002E6                     U4CON2          equ	742	;# 
  2063   0002E7                     U4BRG           equ	743	;# 
  2064   0002E7                     U4BRGL          equ	743	;# 
  2065   0002E8                     U4BRGH          equ	744	;# 
  2066   0002E9                     U4FIFO          equ	745	;# 
  2067   0002EA                     U4UIR           equ	746	;# 
  2068   0002EB                     U4ERRIR         equ	747	;# 
  2069   0002EC                     U4ERRIE         equ	748	;# 
  2070   0002ED                     U5RXB           equ	749	;# 
  2071   0002ED                     U5RXBL          equ	749	;# 
  2072   0002EF                     U5TXB           equ	751	;# 
  2073   0002EF                     U5TXBL          equ	751	;# 
  2074   0002F1                     U5P1            equ	753	;# 
  2075   0002F1                     U5P1L           equ	753	;# 
  2076   0002F3                     U5P2            equ	755	;# 
  2077   0002F3                     U5P2L           equ	755	;# 
  2078   0002F5                     U5P3            equ	757	;# 
  2079   0002F5                     U5P3L           equ	757	;# 
  2080   0002F7                     U5CON0          equ	759	;# 
  2081   0002F8                     U5CON1          equ	760	;# 
  2082   0002F9                     U5CON2          equ	761	;# 
  2083   0002FA                     U5BRG           equ	762	;# 
  2084   0002FA                     U5BRGL          equ	762	;# 
  2085   0002FB                     U5BRGH          equ	763	;# 
  2086   0002FC                     U5FIFO          equ	764	;# 
  2087   0002FD                     U5UIR           equ	765	;# 
  2088   0002FE                     U5ERRIR         equ	766	;# 
  2089   0002FF                     U5ERRIE         equ	767	;# 
  2090   000300                     SMT1TMR         equ	768	;# 
  2091   000300                     SMT1TMRL        equ	768	;# 
  2092   000301                     SMT1TMRH        equ	769	;# 
  2093   000302                     SMT1TMRU        equ	770	;# 
  2094   000303                     SMT1CPR         equ	771	;# 
  2095   000303                     SMT1CPRL        equ	771	;# 
  2096   000304                     SMT1CPRH        equ	772	;# 
  2097   000305                     SMT1CPRU        equ	773	;# 
  2098   000306                     SMT1CPW         equ	774	;# 
  2099   000306                     SMT1CPWL        equ	774	;# 
  2100   000307                     SMT1CPWH        equ	775	;# 
  2101   000308                     SMT1CPWU        equ	776	;# 
  2102   000309                     SMT1PR          equ	777	;# 
  2103   000309                     SMT1PRL         equ	777	;# 
  2104   00030A                     SMT1PRH         equ	778	;# 
  2105   00030B                     SMT1PRU         equ	779	;# 
  2106   00030C                     SMT1CON0        equ	780	;# 
  2107   00030D                     SMT1CON1        equ	781	;# 
  2108   00030E                     SMT1STAT        equ	782	;# 
  2109   00030F                     SMT1CLK         equ	783	;# 
  2110   000310                     SMT1SIG         equ	784	;# 
  2111   000311                     SMT1WIN         equ	785	;# 
  2112   000318                     TMR0L           equ	792	;# 
  2113   000318                     TMR0            equ	792	;# 
  2114   000319                     TMR0H           equ	793	;# 
  2115   000319                     PR0             equ	793	;# 
  2116   00031A                     T0CON0          equ	794	;# 
  2117   00031B                     T0CON1          equ	795	;# 
  2118   00031C                     TMR1            equ	796	;# 
  2119   00031C                     TMR1L           equ	796	;# 
  2120   00031D                     TMR1H           equ	797	;# 
  2121   00031E                     T1CON           equ	798	;# 
  2122   00031E                     TMR1CON         equ	798	;# 
  2123   00031F                     T1GCON          equ	799	;# 
  2124   00031F                     TMR1GCON        equ	799	;# 
  2125   000320                     T1GATE          equ	800	;# 
  2126   000320                     TMR1GATE        equ	800	;# 
  2127   000321                     T1CLK           equ	801	;# 
  2128   000321                     TMR1CLK         equ	801	;# 
  2129   000321                     PR1             equ	801	;# 
  2130   000322                     T2TMR           equ	802	;# 
  2131   000322                     TMR2            equ	802	;# 
  2132   000323                     T2PR            equ	803	;# 
  2133   000323                     PR2             equ	803	;# 
  2134   000324                     T2CON           equ	804	;# 
  2135   000325                     T2HLT           equ	805	;# 
  2136   000326                     T2CLKCON        equ	806	;# 
  2137   000326                     T2CLK           equ	806	;# 
  2138   000327                     T2RST           equ	807	;# 
  2139   000328                     TMR3            equ	808	;# 
  2140   000328                     TMR3L           equ	808	;# 
  2141   000329                     TMR3H           equ	809	;# 
  2142   00032A                     T3CON           equ	810	;# 
  2143   00032A                     TMR3CON         equ	810	;# 
  2144   00032B                     T3GCON          equ	811	;# 
  2145   00032B                     TMR3GCON        equ	811	;# 
  2146   00032C                     T3GATE          equ	812	;# 
  2147   00032C                     TMR3GATE        equ	812	;# 
  2148   00032D                     T3CLK           equ	813	;# 
  2149   00032D                     TMR3CLK         equ	813	;# 
  2150   00032D                     PR3             equ	813	;# 
  2151   00032E                     T4TMR           equ	814	;# 
  2152   00032E                     TMR4            equ	814	;# 
  2153   00032F                     T4PR            equ	815	;# 
  2154   00032F                     PR4             equ	815	;# 
  2155   000330                     T4CON           equ	816	;# 
  2156   000331                     T4HLT           equ	817	;# 
  2157   000332                     T4CLKCON        equ	818	;# 
  2158   000332                     T4CLK           equ	818	;# 
  2159   000333                     T4RST           equ	819	;# 
  2160   000334                     TMR5            equ	820	;# 
  2161   000334                     TMR5L           equ	820	;# 
  2162   000335                     TMR5H           equ	821	;# 
  2163   000336                     T5CON           equ	822	;# 
  2164   000336                     TMR5CON         equ	822	;# 
  2165   000337                     T5GCON          equ	823	;# 
  2166   000337                     TMR5GCON        equ	823	;# 
  2167   000338                     T5GATE          equ	824	;# 
  2168   000338                     TMR5GATE        equ	824	;# 
  2169   000339                     T5CLK           equ	825	;# 
  2170   000339                     TMR5CLK         equ	825	;# 
  2171   000339                     PR5             equ	825	;# 
  2172   00033A                     T6TMR           equ	826	;# 
  2173   00033A                     TMR6            equ	826	;# 
  2174   00033B                     T6PR            equ	827	;# 
  2175   00033B                     PR6             equ	827	;# 
  2176   00033C                     T6CON           equ	828	;# 
  2177   00033D                     T6HLT           equ	829	;# 
  2178   00033E                     T6CLKCON        equ	830	;# 
  2179   00033E                     T6CLK           equ	830	;# 
  2180   00033F                     T6RST           equ	831	;# 
  2181   000340                     CCPR1           equ	832	;# 
  2182   000340                     CCPR1L          equ	832	;# 
  2183   000341                     CCPR1H          equ	833	;# 
  2184   000342                     CCP1CON         equ	834	;# 
  2185   000343                     CCP1CAP         equ	835	;# 
  2186   000344                     CCPR2           equ	836	;# 
  2187   000344                     CCPR2L          equ	836	;# 
  2188   000345                     CCPR2H          equ	837	;# 
  2189   000346                     CCP2CON         equ	838	;# 
  2190   000347                     CCP2CAP         equ	839	;# 
  2191   000348                     CCPR3           equ	840	;# 
  2192   000348                     CCPR3L          equ	840	;# 
  2193   000349                     CCPR3H          equ	841	;# 
  2194   00034A                     CCP3CON         equ	842	;# 
  2195   00034B                     CCP3CAP         equ	843	;# 
  2196   00034C                     CCPTMRS0        equ	844	;# 
  2197   00034F                     CRCDATA         equ	847	;# 
  2198   00034F                     CRCDATAL        equ	847	;# 
  2199   000350                     CRCDATAH        equ	848	;# 
  2200   000351                     CRCDATAU        equ	849	;# 
  2201   000352                     CRCDATAT        equ	850	;# 
  2202   000353                     CRCOUT          equ	851	;# 
  2203   000353                     CRCSHFT         equ	851	;# 
  2204   000353                     CRCXOR          equ	851	;# 
  2205   000353                     CRCOUTL         equ	851	;# 
  2206   000353                     CRCSHFTL        equ	851	;# 
  2207   000353                     CRCSHIFTL       equ	851	;# 
  2208   000353                     CRCXORL         equ	851	;# 
  2209   000354                     CRCOUTH         equ	852	;# 
  2210   000354                     CRCSHFTH        equ	852	;# 
  2211   000354                     CRCSHIFTH       equ	852	;# 
  2212   000354                     CRCXORH         equ	852	;# 
  2213   000355                     CRCOUTU         equ	853	;# 
  2214   000355                     CRCSHFTU        equ	853	;# 
  2215   000355                     CRCSHIFTU       equ	853	;# 
  2216   000355                     CRCXORU         equ	853	;# 
  2217   000356                     CRCOUTT         equ	854	;# 
  2218   000356                     CRCSHFTT        equ	854	;# 
  2219   000356                     CRCSHIFTT       equ	854	;# 
  2220   000356                     CRCXORT         equ	854	;# 
  2221   000357                     CRCCON0         equ	855	;# 
  2222   000358                     CRCCON1         equ	856	;# 
  2223   000359                     CRCCON2         equ	857	;# 
  2224   00035A                     SCANLADR        equ	858	;# 
  2225   00035A                     SCANLADRL       equ	858	;# 
  2226   00035B                     SCANLADRH       equ	859	;# 
  2227   00035C                     SCANLADRU       equ	860	;# 
  2228   00035D                     SCANHADR        equ	861	;# 
  2229   00035D                     SCANHADRL       equ	861	;# 
  2230   00035E                     SCANHADRH       equ	862	;# 
  2231   00035F                     SCANHADRU       equ	863	;# 
  2232   000360                     SCANCON0        equ	864	;# 
  2233   000361                     SCANTRIG        equ	865	;# 
  2234   000362                     IPR0            equ	866	;# 
  2235   000363                     IPR1            equ	867	;# 
  2236   000364                     IPR2            equ	868	;# 
  2237   000365                     IPR3            equ	869	;# 
  2238   000366                     IPR4            equ	870	;# 
  2239   000367                     IPR5            equ	871	;# 
  2240   000368                     IPR6            equ	872	;# 
  2241   000369                     IPR7            equ	873	;# 
  2242   00036A                     IPR8            equ	874	;# 
  2243   00036B                     IPR9            equ	875	;# 
  2244   00036C                     IPR10           equ	876	;# 
  2245   00036D                     IPR11           equ	877	;# 
  2246   00036E                     IPR12           equ	878	;# 
  2247   00036F                     IPR13           equ	879	;# 
  2248   000370                     IPR14           equ	880	;# 
  2249   000371                     IPR15           equ	881	;# 
  2250   000373                     STATUS_CSHAD    equ	883	;# 
  2251   000374                     WREG_CSHAD      equ	884	;# 
  2252   000375                     BSR_CSHAD       equ	885	;# 
  2253   000376                     SHADCON         equ	886	;# 
  2254   000377                     STATUS_SHAD     equ	887	;# 
  2255   000378                     WREG_SHAD       equ	888	;# 
  2256   000379                     BSR_SHAD        equ	889	;# 
  2257   00037A                     PCLATH_SHAD     equ	890	;# 
  2258   00037B                     PCLATU_SHAD     equ	891	;# 
  2259   00037C                     FSR0SH          equ	892	;# 
  2260   00037C                     FSR0L_SHAD      equ	892	;# 
  2261   00037D                     FSR0H_SHAD      equ	893	;# 
  2262   00037E                     FSR1SH          equ	894	;# 
  2263   00037E                     FSR1L_SHAD      equ	894	;# 
  2264   00037F                     FSR1H_SHAD      equ	895	;# 
  2265   000380                     FSR2SH          equ	896	;# 
  2266   000380                     FSR2L_SHAD      equ	896	;# 
  2267   000381                     FSR2H_SHAD      equ	897	;# 
  2268   000382                     PRODSH          equ	898	;# 
  2269   000382                     PRODL_SHAD      equ	898	;# 
  2270   000383                     PRODH_SHAD      equ	899	;# 
  2271   000387                     TU16ACON0       equ	903	;# 
  2272   000388                     TU16ACON1       equ	904	;# 
  2273   000389                     TU16AHLT        equ	905	;# 
  2274   00038A                     TU16APS         equ	906	;# 
  2275   00038B                     TU16ATMR        equ	907	;# 
  2276   00038B                     TU16ACR         equ	907	;# 
  2277   00038B                     TU16ATMRL       equ	907	;# 
  2278   00038B                     TU16ACRL        equ	907	;# 
  2279   00038C                     TU16ATMRH       equ	908	;# 
  2280   00038C                     TU16ACRH        equ	908	;# 
  2281   00038D                     TU16APR         equ	909	;# 
  2282   00038D                     TU16APRL        equ	909	;# 
  2283   00038E                     TU16APRH        equ	910	;# 
  2284   00038F                     TU16ACLK        equ	911	;# 
  2285   000390                     TU16AERS        equ	912	;# 
  2286   000393                     TU16BCON0       equ	915	;# 
  2287   000394                     TU16BCON1       equ	916	;# 
  2288   000395                     TU16BHLT        equ	917	;# 
  2289   000396                     TU16BPS         equ	918	;# 
  2290   000397                     TU16BTMR        equ	919	;# 
  2291   000397                     TU16BCR         equ	919	;# 
  2292   000397                     TU16BTMRL       equ	919	;# 
  2293   000397                     TU16BCRL        equ	919	;# 
  2294   000398                     TU16BTMRH       equ	920	;# 
  2295   000398                     TU16BCRH        equ	920	;# 
  2296   000399                     TU16BPR         equ	921	;# 
  2297   000399                     TU16BPRL        equ	921	;# 
  2298   00039A                     TU16BPRH        equ	922	;# 
  2299   00039B                     TU16BCLK        equ	923	;# 
  2300   00039C                     TU16BERS        equ	924	;# 
  2301   0003BB                     TUCHAIN         equ	955	;# 
  2302   0003BC                     CWG1CLK         equ	956	;# 
  2303   0003BC                     CWG1CLKCON      equ	956	;# 
  2304   0003BD                     CWG1ISM         equ	957	;# 
  2305   0003BE                     CWG1DBR         equ	958	;# 
  2306   0003BF                     CWG1DBF         equ	959	;# 
  2307   0003C0                     CWG1CON0        equ	960	;# 
  2308   0003C1                     CWG1CON1        equ	961	;# 
  2309   0003C2                     CWG1AS0         equ	962	;# 
  2310   0003C3                     CWG1AS1         equ	963	;# 
  2311   0003C4                     CWG1STR         equ	964	;# 
  2312   0003C5                     CWG2CLK         equ	965	;# 
  2313   0003C5                     CWG2CLKCON      equ	965	;# 
  2314   0003C6                     CWG2ISM         equ	966	;# 
  2315   0003C7                     CWG2DBR         equ	967	;# 
  2316   0003C8                     CWG2DBF         equ	968	;# 
  2317   0003C9                     CWG2CON0        equ	969	;# 
  2318   0003CA                     CWG2CON1        equ	970	;# 
  2319   0003CB                     CWG2AS0         equ	971	;# 
  2320   0003CC                     CWG2AS1         equ	972	;# 
  2321   0003CD                     CWG2STR         equ	973	;# 
  2322   0003CE                     CWG3CLK         equ	974	;# 
  2323   0003CE                     CWG3CLKCON      equ	974	;# 
  2324   0003CF                     CWG3ISM         equ	975	;# 
  2325   0003D0                     CWG3DBR         equ	976	;# 
  2326   0003D1                     CWG3DBF         equ	977	;# 
  2327   0003D2                     CWG3CON0        equ	978	;# 
  2328   0003D3                     CWG3CON1        equ	979	;# 
  2329   0003D4                     CWG3AS0         equ	980	;# 
  2330   0003D5                     CWG3AS1         equ	981	;# 
  2331   0003D6                     CWG3STR         equ	982	;# 
  2332   0003D7                     FVRCON          equ	983	;# 
  2333   0003D8                     ADCPCON         equ	984	;# 
  2334   0003D8                     ADCP            equ	984	;# 
  2335   0003D9                     ADLTH           equ	985	;# 
  2336   0003D9                     ADLTHL          equ	985	;# 
  2337   0003DA                     ADLTHH          equ	986	;# 
  2338   0003DB                     ADUTH           equ	987	;# 
  2339   0003DB                     ADUTHL          equ	987	;# 
  2340   0003DC                     ADUTHH          equ	988	;# 
  2341   0003DD                     ADERR           equ	989	;# 
  2342   0003DD                     ADERRL          equ	989	;# 
  2343   0003DE                     ADERRH          equ	990	;# 
  2344   0003DF                     ADSTPT          equ	991	;# 
  2345   0003DF                     ADSTPTL         equ	991	;# 
  2346   0003E0                     ADSTPTH         equ	992	;# 
  2347   0003E1                     ADFLTR          equ	993	;# 
  2348   0003E1                     ADFLTRL         equ	993	;# 
  2349   0003E2                     ADFLTRH         equ	994	;# 
  2350   0003E3                     ADACC           equ	995	;# 
  2351   0003E3                     ADACCL          equ	995	;# 
  2352   0003E4                     ADACCH          equ	996	;# 
  2353   0003E5                     ADACCU          equ	997	;# 
  2354   0003E6                     ADCNT           equ	998	;# 
  2355   0003E7                     ADRPT           equ	999	;# 
  2356   0003E8                     ADPREV          equ	1000	;# 
  2357   0003E8                     ADPREVL         equ	1000	;# 
  2358   0003E9                     ADPREVH         equ	1001	;# 
  2359   0003EA                     ADRES           equ	1002	;# 
  2360   0003EA                     ADRESL          equ	1002	;# 
  2361   0003EB                     ADRESH          equ	1003	;# 
  2362   0003EC                     ADPCH           equ	1004	;# 
  2363   0003EE                     ADACQ           equ	1006	;# 
  2364   0003EE                     ADACQL          equ	1006	;# 
  2365   0003EF                     ADACQH          equ	1007	;# 
  2366   0003F0                     ADCAP           equ	1008	;# 
  2367   0003F1                     ADPRE           equ	1009	;# 
  2368   0003F1                     ADPREL          equ	1009	;# 
  2369   0003F2                     ADPREH          equ	1010	;# 
  2370   0003F3                     ADCON0          equ	1011	;# 
  2371   0003F4                     ADCON1          equ	1012	;# 
  2372   0003F5                     ADCON2          equ	1013	;# 
  2373   0003F6                     ADCON3          equ	1014	;# 
  2374   0003F7                     ADSTAT          equ	1015	;# 
  2375   0003F8                     ADREF           equ	1016	;# 
  2376   0003F9                     ADACT           equ	1017	;# 
  2377   0003FA                     ADCLK           equ	1018	;# 
  2378   0003FB                     ADCTX           equ	1019	;# 
  2379   0003FC                     ADCSEL1         equ	1020	;# 
  2380   0003FD                     ADCSEL2         equ	1021	;# 
  2381   0003FE                     ADCSEL3         equ	1022	;# 
  2382   0003FF                     ADCSEL4         equ	1023	;# 
  2383   000400                     ANSELA          equ	1024	;# 
  2384   000401                     WPUA            equ	1025	;# 
  2385   000402                     ODCONA          equ	1026	;# 
  2386   000403                     SLRCONA         equ	1027	;# 
  2387   000404                     INLVLA          equ	1028	;# 
  2388   000405                     IOCAP           equ	1029	;# 
  2389   000406                     IOCAN           equ	1030	;# 
  2390   000407                     IOCAF           equ	1031	;# 
  2391   000408                     ANSELB          equ	1032	;# 
  2392   000409                     WPUB            equ	1033	;# 
  2393   00040A                     ODCONB          equ	1034	;# 
  2394   00040B                     SLRCONB         equ	1035	;# 
  2395   00040C                     INLVLB          equ	1036	;# 
  2396   00040D                     IOCBP           equ	1037	;# 
  2397   00040E                     IOCBN           equ	1038	;# 
  2398   00040F                     IOCBF           equ	1039	;# 
  2399   000410                     ANSELC          equ	1040	;# 
  2400   000411                     WPUC            equ	1041	;# 
  2401   000412                     ODCONC          equ	1042	;# 
  2402   000413                     SLRCONC         equ	1043	;# 
  2403   000414                     INLVLC          equ	1044	;# 
  2404   000415                     IOCCP           equ	1045	;# 
  2405   000416                     IOCCN           equ	1046	;# 
  2406   000417                     IOCCF           equ	1047	;# 
  2407   000421                     WPUE            equ	1057	;# 
  2408   000424                     INLVLE          equ	1060	;# 
  2409   000425                     IOCEP           equ	1061	;# 
  2410   000426                     IOCEN           equ	1062	;# 
  2411   000427                     IOCEF           equ	1063	;# 
  2412   000440                     NCO1ACC         equ	1088	;# 
  2413   000440                     NCO1ACCL        equ	1088	;# 
  2414   000441                     NCO1ACCH        equ	1089	;# 
  2415   000442                     NCO1ACCU        equ	1090	;# 
  2416   000443                     NCO1INC         equ	1091	;# 
  2417   000443                     NCO1INCL        equ	1091	;# 
  2418   000444                     NCO1INCH        equ	1092	;# 
  2419   000445                     NCO1INCU        equ	1093	;# 
  2420   000446                     NCO1CON         equ	1094	;# 
  2421   000447                     NCO1CLK         equ	1095	;# 
  2422   000448                     NCO2ACC         equ	1096	;# 
  2423   000448                     NCO2ACCL        equ	1096	;# 
  2424   000449                     NCO2ACCH        equ	1097	;# 
  2425   00044A                     NCO2ACCU        equ	1098	;# 
  2426   00044B                     NCO2INC         equ	1099	;# 
  2427   00044B                     NCO2INCL        equ	1099	;# 
  2428   00044C                     NCO2INCH        equ	1100	;# 
  2429   00044D                     NCO2INCU        equ	1101	;# 
  2430   00044E                     NCO2CON         equ	1102	;# 
  2431   00044F                     NCO2CLK         equ	1103	;# 
  2432   000450                     NCO3ACC         equ	1104	;# 
  2433   000450                     NCO3ACCL        equ	1104	;# 
  2434   000451                     NCO3ACCH        equ	1105	;# 
  2435   000452                     NCO3ACCU        equ	1106	;# 
  2436   000453                     NCO3INC         equ	1107	;# 
  2437   000453                     NCO3INCL        equ	1107	;# 
  2438   000454                     NCO3INCH        equ	1108	;# 
  2439   000455                     NCO3INCU        equ	1109	;# 
  2440   000456                     NCO3CON         equ	1110	;# 
  2441   000457                     NCO3CLK         equ	1111	;# 
  2442   000458                     FSCMCON         equ	1112	;# 
  2443   000459                     IVTLOCK         equ	1113	;# 
  2444   00045A                     IVTAD           equ	1114	;# 
  2445   00045A                     IVTADL          equ	1114	;# 
  2446   00045B                     IVTADH          equ	1115	;# 
  2447   00045C                     IVTADU          equ	1116	;# 
  2448   00045D                     IVTBASE         equ	1117	;# 
  2449   00045D                     IVTBASEL        equ	1117	;# 
  2450   00045E                     IVTBASEH        equ	1118	;# 
  2451   00045F                     IVTBASEU        equ	1119	;# 
  2452   000460                     PWM1ERS         equ	1120	;# 
  2453   000461                     PWM1CLK         equ	1121	;# 
  2454   000462                     PWM1LDS         equ	1122	;# 
  2455   000463                     PWM1PR          equ	1123	;# 
  2456   000463                     PWM1PRL         equ	1123	;# 
  2457   000464                     PWM1PRH         equ	1124	;# 
  2458   000465                     PWM1CPRE        equ	1125	;# 
  2459   000466                     PWM1PIPOS       equ	1126	;# 
  2460   000467                     PWM1GIR         equ	1127	;# 
  2461   000468                     PWM1GIE         equ	1128	;# 
  2462   000469                     PWM1CON         equ	1129	;# 
  2463   00046A                     PWM1S1CFG       equ	1130	;# 
  2464   00046B                     PWM1S1P1        equ	1131	;# 
  2465   00046B                     PWM1S1P1L       equ	1131	;# 
  2466   00046C                     PWM1S1P1H       equ	1132	;# 
  2467   00046D                     PWM1S1P2        equ	1133	;# 
  2468   00046D                     PWM1S1P2L       equ	1133	;# 
  2469   00046E                     PWM1S1P2H       equ	1134	;# 
  2470   00046F                     PWM2ERS         equ	1135	;# 
  2471   000470                     PWM2CLK         equ	1136	;# 
  2472   000471                     PWM2LDS         equ	1137	;# 
  2473   000472                     PWM2PR          equ	1138	;# 
  2474   000472                     PWM2PRL         equ	1138	;# 
  2475   000473                     PWM2PRH         equ	1139	;# 
  2476   000474                     PWM2CPRE        equ	1140	;# 
  2477   000475                     PWM2PIPOS       equ	1141	;# 
  2478   000476                     PWM2GIR         equ	1142	;# 
  2479   000477                     PWM2GIE         equ	1143	;# 
  2480   000478                     PWM2CON         equ	1144	;# 
  2481   000479                     PWM2S1CFG       equ	1145	;# 
  2482   00047A                     PWM2S1P1        equ	1146	;# 
  2483   00047A                     PWM2S1P1L       equ	1146	;# 
  2484   00047B                     PWM2S1P1H       equ	1147	;# 
  2485   00047C                     PWM2S1P2        equ	1148	;# 
  2486   00047C                     PWM2S1P2L       equ	1148	;# 
  2487   00047D                     PWM2S1P2H       equ	1149	;# 
  2488   00047E                     PWM3ERS         equ	1150	;# 
  2489   00047F                     PWM3CLK         equ	1151	;# 
  2490   000480                     PWM3LDS         equ	1152	;# 
  2491   000481                     PWM3PR          equ	1153	;# 
  2492   000481                     PWM3PRL         equ	1153	;# 
  2493   000482                     PWM3PRH         equ	1154	;# 
  2494   000483                     PWM3CPRE        equ	1155	;# 
  2495   000484                     PWM3PIPOS       equ	1156	;# 
  2496   000485                     PWM3GIR         equ	1157	;# 
  2497   000486                     PWM3GIE         equ	1158	;# 
  2498   000487                     PWM3CON         equ	1159	;# 
  2499   000488                     PWM3S1CFG       equ	1160	;# 
  2500   000489                     PWM3S1P1        equ	1161	;# 
  2501   000489                     PWM3S1P1L       equ	1161	;# 
  2502   00048A                     PWM3S1P1H       equ	1162	;# 
  2503   00048B                     PWM3S1P2        equ	1163	;# 
  2504   00048B                     PWM3S1P2L       equ	1163	;# 
  2505   00048C                     PWM3S1P2H       equ	1164	;# 
  2506   00048D                     PWM4ERS         equ	1165	;# 
  2507   00048E                     PWM4CLK         equ	1166	;# 
  2508   00048F                     PWM4LDS         equ	1167	;# 
  2509   000490                     PWM4PR          equ	1168	;# 
  2510   000490                     PWM4PRL         equ	1168	;# 
  2511   000491                     PWM4PRH         equ	1169	;# 
  2512   000492                     PWM4CPRE        equ	1170	;# 
  2513   000493                     PWM4PIPOS       equ	1171	;# 
  2514   000494                     PWM4GIR         equ	1172	;# 
  2515   000495                     PWM4GIE         equ	1173	;# 
  2516   000496                     PWM4CON         equ	1174	;# 
  2517   000497                     PWM4S1CFG       equ	1175	;# 
  2518   000498                     PWM4S1P1        equ	1176	;# 
  2519   000498                     PWM4S1P1L       equ	1176	;# 
  2520   000499                     PWM4S1P1H       equ	1177	;# 
  2521   00049A                     PWM4S1P2        equ	1178	;# 
  2522   00049A                     PWM4S1P2L       equ	1178	;# 
  2523   00049B                     PWM4S1P2H       equ	1179	;# 
  2524   00049C                     PWMLOAD         equ	1180	;# 
  2525   00049D                     PWMEN           equ	1181	;# 
  2526   00049E                     PIE0            equ	1182	;# 
  2527   00049F                     PIE1            equ	1183	;# 
  2528   0004A0                     PIE2            equ	1184	;# 
  2529   0004A1                     PIE3            equ	1185	;# 
  2530   0004A2                     PIE4            equ	1186	;# 
  2531   0004A3                     PIE5            equ	1187	;# 
  2532   0004A4                     PIE6            equ	1188	;# 
  2533   0004A5                     PIE7            equ	1189	;# 
  2534   0004A6                     PIE8            equ	1190	;# 
  2535   0004A7                     PIE9            equ	1191	;# 
  2536   0004A8                     PIE10           equ	1192	;# 
  2537   0004A9                     PIE11           equ	1193	;# 
  2538   0004AA                     PIE12           equ	1194	;# 
  2539   0004AB                     PIE13           equ	1195	;# 
  2540   0004AC                     PIE14           equ	1196	;# 
  2541   0004AD                     PIE15           equ	1197	;# 
  2542   0004AE                     PIR0            equ	1198	;# 
  2543   0004AF                     PIR1            equ	1199	;# 
  2544   0004B0                     PIR2            equ	1200	;# 
  2545   0004B1                     PIR3            equ	1201	;# 
  2546   0004B2                     PIR4            equ	1202	;# 
  2547   0004B3                     PIR5            equ	1203	;# 
  2548   0004B4                     PIR6            equ	1204	;# 
  2549   0004B5                     PIR7            equ	1205	;# 
  2550   0004B6                     PIR8            equ	1206	;# 
  2551   0004B7                     PIR9            equ	1207	;# 
  2552   0004B8                     PIR10           equ	1208	;# 
  2553   0004B9                     PIR11           equ	1209	;# 
  2554   0004BA                     PIR12           equ	1210	;# 
  2555   0004BB                     PIR13           equ	1211	;# 
  2556   0004BC                     PIR14           equ	1212	;# 
  2557   0004BD                     PIR15           equ	1213	;# 
  2558   0004BE                     LATA            equ	1214	;# 
  2559   0004BF                     LATB            equ	1215	;# 
  2560   0004C0                     LATC            equ	1216	;# 
  2561   0004C6                     TRISA           equ	1222	;# 
  2562   0004C7                     TRISB           equ	1223	;# 
  2563   0004C8                     TRISC           equ	1224	;# 
  2564   0004CA                     TRISE           equ	1226	;# 
  2565   0004CE                     PORTA           equ	1230	;# 
  2566   0004CF                     PORTB           equ	1231	;# 
  2567   0004D0                     PORTC           equ	1232	;# 
  2568   0004D2                     PORTE           equ	1234	;# 
  2569   0004D6                     INTCON0         equ	1238	;# 
  2570   0004D7                     INTCON1         equ	1239	;# 
  2571   0004D8                     STATUS          equ	1240	;# 
  2572   0004D9                     FSR2            equ	1241	;# 
  2573   0004D9                     FSR2L           equ	1241	;# 
  2574   0004DA                     FSR2H           equ	1242	;# 
  2575   0004DB                     PLUSW2          equ	1243	;# 
  2576   0004DC                     PREINC2         equ	1244	;# 
  2577   0004DD                     POSTDEC2        equ	1245	;# 
  2578   0004DE                     POSTINC2        equ	1246	;# 
  2579   0004DF                     INDF2           equ	1247	;# 
  2580   0004E0                     BSR             equ	1248	;# 
  2581   0004E1                     FSR1            equ	1249	;# 
  2582   0004E1                     FSR1L           equ	1249	;# 
  2583   0004E2                     FSR1H           equ	1250	;# 
  2584   0004E3                     PLUSW1          equ	1251	;# 
  2585   0004E4                     PREINC1         equ	1252	;# 
  2586   0004E5                     POSTDEC1        equ	1253	;# 
  2587   0004E6                     POSTINC1        equ	1254	;# 
  2588   0004E7                     INDF1           equ	1255	;# 
  2589   0004E8                     WREG            equ	1256	;# 
  2590   0004E9                     FSR0            equ	1257	;# 
  2591   0004E9                     FSR0L           equ	1257	;# 
  2592   0004EA                     FSR0H           equ	1258	;# 
  2593   0004EB                     PLUSW0          equ	1259	;# 
  2594   0004EC                     PREINC0         equ	1260	;# 
  2595   0004ED                     POSTDEC0        equ	1261	;# 
  2596   0004EE                     POSTINC0        equ	1262	;# 
  2597   0004EF                     INDF0           equ	1263	;# 
  2598   0004F0                     PCON0           equ	1264	;# 
  2599   0004F1                     PCON1           equ	1265	;# 
  2600   0004F2                     CPUDOZE         equ	1266	;# 
  2601   0004F3                     PROD            equ	1267	;# 
  2602   0004F3                     PRODL           equ	1267	;# 
  2603   0004F4                     PRODH           equ	1268	;# 
  2604   0004F5                     TABLAT          equ	1269	;# 
  2605   0004F6                     TBLPTR          equ	1270	;# 
  2606   0004F6                     TBLPTRL         equ	1270	;# 
  2607   0004F7                     TBLPTRH         equ	1271	;# 
  2608   0004F8                     TBLPTRU         equ	1272	;# 
  2609   0004F9                     PCLAT           equ	1273	;# 
  2610   0004F9                     PCL             equ	1273	;# 
  2611   0004FA                     PCLATH          equ	1274	;# 
  2612   0004FB                     PCLATU          equ	1275	;# 
  2613   0004FC                     STKPTR          equ	1276	;# 
  2614   0004FD                     TOS             equ	1277	;# 
  2615   0004FD                     TOSL            equ	1277	;# 
  2616   0004FE                     TOSH            equ	1278	;# 
  2617   0004FF                     TOSU            equ	1279	;# 
  2618   000038                     BOOTREG         equ	56	;# 
  2619   000039                     CLKRCON         equ	57	;# 
  2620   00003A                     CLKRCLK         equ	58	;# 
  2621   000040                     NVMCON0         equ	64	;# 
  2622   000041                     NVMCON1         equ	65	;# 
  2623   000042                     NVMLOCK         equ	66	;# 
  2624   000043                     NVMADR          equ	67	;# 
  2625   000043                     NVMADRL         equ	67	;# 
  2626   000044                     NVMADRH         equ	68	;# 
  2627   000045                     NVMADRU         equ	69	;# 
  2628   000046                     NVMDAT          equ	70	;# 
  2629   000046                     NVMDATL         equ	70	;# 
  2630   000047                     NVMDATH         equ	71	;# 
  2631   000048                     VREGCON         equ	72	;# 
  2632   000049                     BORCON          equ	73	;# 
  2633   00004A                     HLVDCON0        equ	74	;# 
  2634   00004B                     HLVDCON1        equ	75	;# 
  2635   00004C                     ZCDCON          equ	76	;# 
  2636   000060                     PMD0            equ	96	;# 
  2637   000061                     PMD1            equ	97	;# 
  2638   000062                     PMD2            equ	98	;# 
  2639   000063                     PMD3            equ	99	;# 
  2640   000064                     PMD4            equ	100	;# 
  2641   000065                     PMD5            equ	101	;# 
  2642   000066                     PMD6            equ	102	;# 
  2643   000067                     PMD7            equ	103	;# 
  2644   000068                     PMD8            equ	104	;# 
  2645   00006A                     MD1CON0         equ	106	;# 
  2646   00006B                     MD1CON1         equ	107	;# 
  2647   00006C                     MD1SRC          equ	108	;# 
  2648   00006D                     MD1CARL         equ	109	;# 
  2649   00006E                     MD1CARH         equ	110	;# 
  2650   00006F                     CMOUT           equ	111	;# 
  2651   000070                     CM1CON0         equ	112	;# 
  2652   000071                     CM1CON1         equ	113	;# 
  2653   000072                     CM1NCH          equ	114	;# 
  2654   000073                     CM1PCH          equ	115	;# 
  2655   000074                     CM2CON0         equ	116	;# 
  2656   000075                     CM2CON1         equ	117	;# 
  2657   000076                     CM2NCH          equ	118	;# 
  2658   000077                     CM2PCH          equ	119	;# 
  2659   000078                     WDTCON0         equ	120	;# 
  2660   000079                     WDTCON1         equ	121	;# 
  2661   00007A                     WDTPSL          equ	122	;# 
  2662   00007B                     WDTPSH          equ	123	;# 
  2663   00007C                     WDTTMR          equ	124	;# 
  2664   00007D                     DAC1DAT         equ	125	;# 
  2665   00007D                     DAC1DATL        equ	125	;# 
  2666   00007F                     DAC1CON         equ	127	;# 
  2667   000080                     SPI1RXB         equ	128	;# 
  2668   000081                     SPI1TXB         equ	129	;# 
  2669   000082                     SPI1TCNT        equ	130	;# 
  2670   000082                     SPI1TCNTL       equ	130	;# 
  2671   000083                     SPI1TCNTH       equ	131	;# 
  2672   000084                     SPI1CON0        equ	132	;# 
  2673   000085                     SPI1CON1        equ	133	;# 
  2674   000086                     SPI1CON2        equ	134	;# 
  2675   000087                     SPI1STATUS      equ	135	;# 
  2676   000088                     SPI1TWIDTH      equ	136	;# 
  2677   000089                     SPI1BAUD        equ	137	;# 
  2678   00008A                     SPI1INTF        equ	138	;# 
  2679   00008B                     SPI1INTE        equ	139	;# 
  2680   00008C                     SPI1CLK         equ	140	;# 
  2681   00008D                     SPI2RXB         equ	141	;# 
  2682   00008E                     SPI2TXB         equ	142	;# 
  2683   00008F                     SPI2TCNT        equ	143	;# 
  2684   00008F                     SPI2TCNTL       equ	143	;# 
  2685   000090                     SPI2TCNTH       equ	144	;# 
  2686   000091                     SPI2CON0        equ	145	;# 
  2687   000092                     SPI2CON1        equ	146	;# 
  2688   000093                     SPI2CON2        equ	147	;# 
  2689   000094                     SPI2STATUS      equ	148	;# 
  2690   000095                     SPI2TWIDTH      equ	149	;# 
  2691   000096                     SPI2BAUD        equ	150	;# 
  2692   000097                     SPI2INTF        equ	151	;# 
  2693   000098                     SPI2INTE        equ	152	;# 
  2694   000099                     SPI2CLK         equ	153	;# 
  2695   0000AC                     ACTCON          equ	172	;# 
  2696   0000AD                     OSCCON1         equ	173	;# 
  2697   0000AE                     OSCCON2         equ	174	;# 
  2698   0000AF                     OSCCON3         equ	175	;# 
  2699   0000B0                     OSCTUNE         equ	176	;# 
  2700   0000B1                     OSCFRQ          equ	177	;# 
  2701   0000B1                     OSCFREQ         equ	177	;# 
  2702   0000B2                     OSCSTAT         equ	178	;# 
  2703   0000B2                     OSCSTAT1        equ	178	;# 
  2704   0000B3                     OSCEN           equ	179	;# 
  2705   0000B4                     PRLOCK          equ	180	;# 
  2706   0000B5                     SCANPR          equ	181	;# 
  2707   0000B6                     DMA1PR          equ	182	;# 
  2708   0000B7                     DMA2PR          equ	183	;# 
  2709   0000B8                     DMA3PR          equ	184	;# 
  2710   0000B9                     DMA4PR          equ	185	;# 
  2711   0000BA                     DMA5PR          equ	186	;# 
  2712   0000BB                     DMA6PR          equ	187	;# 
  2713   0000BC                     DMA7PR          equ	188	;# 
  2714   0000BD                     DMA8PR          equ	189	;# 
  2715   0000BE                     MAINPR          equ	190	;# 
  2716   0000BF                     ISRPR           equ	191	;# 
  2717   0000D4                     CLCDATA         equ	212	;# 
  2718   0000D5                     CLCSELECT       equ	213	;# 
  2719   0000D6                     CLCnCON         equ	214	;# 
  2720   0000D7                     CLCnPOL         equ	215	;# 
  2721   0000D8                     CLCnSEL0        equ	216	;# 
  2722   0000D9                     CLCnSEL1        equ	217	;# 
  2723   0000DA                     CLCnSEL2        equ	218	;# 
  2724   0000DB                     CLCnSEL3        equ	219	;# 
  2725   0000DC                     CLCnGLS0        equ	220	;# 
  2726   0000DD                     CLCnGLS1        equ	221	;# 
  2727   0000DE                     CLCnGLS2        equ	222	;# 
  2728   0000DF                     CLCnGLS3        equ	223	;# 
  2729   0000E8                     DMASELECT       equ	232	;# 
  2730   0000E9                     DMAnBUF         equ	233	;# 
  2731   0000EA                     DMAnDCNT        equ	234	;# 
  2732   0000EA                     DMAnDCNTL       equ	234	;# 
  2733   0000EB                     DMAnDCNTH       equ	235	;# 
  2734   0000EC                     DMAnDPTR        equ	236	;# 
  2735   0000EC                     DMAnDPTRL       equ	236	;# 
  2736   0000ED                     DMAnDPTRH       equ	237	;# 
  2737   0000EE                     DMAnDSZ         equ	238	;# 
  2738   0000EE                     DMAnDSZL        equ	238	;# 
  2739   0000EF                     DMAnDSZH        equ	239	;# 
  2740   0000F0                     DMAnDSA         equ	240	;# 
  2741   0000F0                     DMAnDSAL        equ	240	;# 
  2742   0000F1                     DMAnDSAH        equ	241	;# 
  2743   0000F2                     DMAnSCNT        equ	242	;# 
  2744   0000F2                     DMAnSCNTL       equ	242	;# 
  2745   0000F3                     DMAnSCNTH       equ	243	;# 
  2746   0000F4                     DMAnSPTR        equ	244	;# 
  2747   0000F4                     DMAnSPTRL       equ	244	;# 
  2748   0000F5                     DMAnSPTRH       equ	245	;# 
  2749   0000F6                     DMAnSPTRU       equ	246	;# 
  2750   0000F7                     DMAnSSZ         equ	247	;# 
  2751   0000F7                     DMAnSSZL        equ	247	;# 
  2752   0000F8                     DMAnSSZH        equ	248	;# 
  2753   0000F9                     DMAnSSA         equ	249	;# 
  2754   0000F9                     DMAnSSAL        equ	249	;# 
  2755   0000FA                     DMAnSSAH        equ	250	;# 
  2756   0000FB                     DMAnSSAU        equ	251	;# 
  2757   0000FC                     DMAnCON0        equ	252	;# 
  2758   0000FD                     DMAnCON1        equ	253	;# 
  2759   0000FE                     DMAnAIRQ        equ	254	;# 
  2760   0000FF                     DMAnSIRQ        equ	255	;# 
  2761   000100                     C1CONL          equ	256	;# 
  2762   000101                     C1CONH          equ	257	;# 
  2763   000102                     C1CONU          equ	258	;# 
  2764   000103                     C1CONT          equ	259	;# 
  2765   000104                     C1NBTCFGL       equ	260	;# 
  2766   000105                     C1NBTCFGH       equ	261	;# 
  2767   000106                     C1NBTCFGU       equ	262	;# 
  2768   000107                     C1NBTCFGT       equ	263	;# 
  2769   000108                     C1DBTCFGL       equ	264	;# 
  2770   000109                     C1DBTCFGH       equ	265	;# 
  2771   00010A                     C1DBTCFGU       equ	266	;# 
  2772   00010B                     C1DBTCFGT       equ	267	;# 
  2773   00010C                     C1TDCL          equ	268	;# 
  2774   00010D                     C1TDCH          equ	269	;# 
  2775   00010E                     C1TDCU          equ	270	;# 
  2776   000110                     C1TBC           equ	272	;# 
  2777   000110                     C1TBCL          equ	272	;# 
  2778   000111                     C1TBCH          equ	273	;# 
  2779   000112                     C1TBCU          equ	274	;# 
  2780   000113                     C1TBCT          equ	275	;# 
  2781   000114                     C1TSCONL        equ	276	;# 
  2782   000115                     C1TSCONH        equ	277	;# 
  2783   000116                     C1TSCONU        equ	278	;# 
  2784   000117                     C1TSCONT        equ	279	;# 
  2785   000118                     C1VECL          equ	280	;# 
  2786   000119                     C1VECH          equ	281	;# 
  2787   00011A                     C1VECU          equ	282	;# 
  2788   00011B                     C1VECT          equ	283	;# 
  2789   00011C                     C1INTL          equ	284	;# 
  2790   00011D                     C1INTH          equ	285	;# 
  2791   00011E                     C1INTU          equ	286	;# 
  2792   00011F                     C1INTT          equ	287	;# 
  2793   000120                     C1RXIF          equ	288	;# 
  2794   000120                     C1RXIFL         equ	288	;# 
  2795   000121                     C1RXIFH         equ	289	;# 
  2796   000122                     C1RXIFU         equ	290	;# 
  2797   000123                     C1RXIFT         equ	291	;# 
  2798   000124                     C1TXIF          equ	292	;# 
  2799   000124                     C1TXIFL         equ	292	;# 
  2800   000125                     C1TXIFH         equ	293	;# 
  2801   000126                     C1TXIFU         equ	294	;# 
  2802   000127                     C1TXIFT         equ	295	;# 
  2803   000128                     C1RXOVIF        equ	296	;# 
  2804   000128                     C1RXOVIFL       equ	296	;# 
  2805   000129                     C1RXOVIFH       equ	297	;# 
  2806   00012A                     C1RXOVIFU       equ	298	;# 
  2807   00012B                     C1RXOVIFT       equ	299	;# 
  2808   00012C                     C1TXATIF        equ	300	;# 
  2809   00012C                     C1TXATIFL       equ	300	;# 
  2810   00012D                     C1TXATIFH       equ	301	;# 
  2811   00012E                     C1TXATIFU       equ	302	;# 
  2812   00012F                     C1TXATIFT       equ	303	;# 
  2813   000130                     C1TXREQ         equ	304	;# 
  2814   000130                     C1TXREQL        equ	304	;# 
  2815   000131                     C1TXREQH        equ	305	;# 
  2816   000132                     C1TXREQU        equ	306	;# 
  2817   000133                     C1TXREQT        equ	307	;# 
  2818   000134                     C1TRECL         equ	308	;# 
  2819   000135                     C1TRECH         equ	309	;# 
  2820   000136                     C1TRECU         equ	310	;# 
  2821   000137                     C1TRECT         equ	311	;# 
  2822   000138                     C1BDIAG0L       equ	312	;# 
  2823   000139                     C1BDIAG0H       equ	313	;# 
  2824   00013C                     C1BDIAG1L       equ	316	;# 
  2825   00013D                     C1BDIAG1H       equ	317	;# 
  2826   00013E                     C1BDIAG1U       equ	318	;# 
  2827   00013F                     C1BDIAG1T       equ	319	;# 
  2828   000140                     C1TEFCONL       equ	320	;# 
  2829   000141                     C1TEFCONH       equ	321	;# 
  2830   000142                     C1TEFCONU       equ	322	;# 
  2831   000143                     C1TEFCONT       equ	323	;# 
  2832   000144                     C1TEFSTAL       equ	324	;# 
  2833   000145                     C1TEFSTAH       equ	325	;# 
  2834   000146                     C1TEFSTAU       equ	326	;# 
  2835   000147                     C1TEFSTAT       equ	327	;# 
  2836   000148                     C1TEFUA         equ	328	;# 
  2837   000148                     C1TEFUAL        equ	328	;# 
  2838   000149                     C1TEFUAH        equ	329	;# 
  2839   00014A                     C1TEFUAU        equ	330	;# 
  2840   00014B                     C1TEFUAT        equ	331	;# 
  2841   00014C                     C1FIFOBA        equ	332	;# 
  2842   00014C                     C1FIFOBAL       equ	332	;# 
  2843   00014D                     C1FIFOBAH       equ	333	;# 
  2844   00014E                     C1FIFOBAU       equ	334	;# 
  2845   00014F                     C1FIFOBAT       equ	335	;# 
  2846   000150                     C1TXQCONL       equ	336	;# 
  2847   000151                     C1TXQCONH       equ	337	;# 
  2848   000152                     C1TXQCONU       equ	338	;# 
  2849   000153                     C1TXQCONT       equ	339	;# 
  2850   000154                     C1TXQSTAL       equ	340	;# 
  2851   000155                     C1TXQSTAH       equ	341	;# 
  2852   000156                     C1TXQSTAU       equ	342	;# 
  2853   000157                     C1TXQSTAT       equ	343	;# 
  2854   000158                     C1TXQUA         equ	344	;# 
  2855   000158                     C1TXQUAL        equ	344	;# 
  2856   000159                     C1TXQUAH        equ	345	;# 
  2857   00015A                     C1TXQUAU        equ	346	;# 
  2858   00015B                     C1TXQUAT        equ	347	;# 
  2859   00015C                     C1FIFOCON1      equ	348	;# 
  2860   00015C                     C1FIFOCON1L     equ	348	;# 
  2861   00015D                     C1FIFOCON1H     equ	349	;# 
  2862   00015E                     C1FIFOCON1U     equ	350	;# 
  2863   00015F                     C1FIFOCON1T     equ	351	;# 
  2864   000160                     C1FIFOSTA1      equ	352	;# 
  2865   000160                     C1FIFOSTA1L     equ	352	;# 
  2866   000161                     C1FIFOSTA1H     equ	353	;# 
  2867   000162                     C1FIFOSTA1U     equ	354	;# 
  2868   000163                     C1FIFOSTA1T     equ	355	;# 
  2869   000164                     C1FIFOUA1       equ	356	;# 
  2870   000164                     C1FIFOUA1L      equ	356	;# 
  2871   000165                     C1FIFOUA1H      equ	357	;# 
  2872   000166                     C1FIFOUA1U      equ	358	;# 
  2873   000167                     C1FIFOUA1T      equ	359	;# 
  2874   000168                     C1FIFOCON2      equ	360	;# 
  2875   000168                     C1FIFOCON2L     equ	360	;# 
  2876   000169                     C1FIFOCON2H     equ	361	;# 
  2877   00016A                     C1FIFOCON2U     equ	362	;# 
  2878   00016B                     C1FIFOCON2T     equ	363	;# 
  2879   00016C                     C1FIFOSTA2      equ	364	;# 
  2880   00016C                     C1FIFOSTA2L     equ	364	;# 
  2881   00016D                     C1FIFOSTA2H     equ	365	;# 
  2882   00016E                     C1FIFOSTA2U     equ	366	;# 
  2883   00016F                     C1FIFOSTA2T     equ	367	;# 
  2884   000170                     C1FIFOUA2       equ	368	;# 
  2885   000170                     C1FIFOUA2L      equ	368	;# 
  2886   000171                     C1FIFOUA2H      equ	369	;# 
  2887   000172                     C1FIFOUA2U      equ	370	;# 
  2888   000173                     C1FIFOUA2T      equ	371	;# 
  2889   000174                     C1FIFOCON3      equ	372	;# 
  2890   000174                     C1FIFOCON3L     equ	372	;# 
  2891   000175                     C1FIFOCON3H     equ	373	;# 
  2892   000176                     C1FIFOCON3U     equ	374	;# 
  2893   000177                     C1FIFOCON3T     equ	375	;# 
  2894   000178                     C1FIFOSTA3      equ	376	;# 
  2895   000178                     C1FIFOSTA3L     equ	376	;# 
  2896   000179                     C1FIFOSTA3H     equ	377	;# 
  2897   00017A                     C1FIFOSTA3U     equ	378	;# 
  2898   00017B                     C1FIFOSTA3T     equ	379	;# 
  2899   00017C                     C1FIFOUA3       equ	380	;# 
  2900   00017C                     C1FIFOUA3L      equ	380	;# 
  2901   00017D                     C1FIFOUA3H      equ	381	;# 
  2902   00017E                     C1FIFOUA3U      equ	382	;# 
  2903   00017F                     C1FIFOUA3T      equ	383	;# 
  2904   000180                     C1FLTCON0L      equ	384	;# 
  2905   000181                     C1FLTCON0H      equ	385	;# 
  2906   000182                     C1FLTCON0U      equ	386	;# 
  2907   000183                     C1FLTCON0T      equ	387	;# 
  2908   000184                     C1FLTCON1L      equ	388	;# 
  2909   000185                     C1FLTCON1H      equ	389	;# 
  2910   000186                     C1FLTCON1U      equ	390	;# 
  2911   000187                     C1FLTCON1T      equ	391	;# 
  2912   000188                     C1FLTCON2L      equ	392	;# 
  2913   000189                     C1FLTCON2H      equ	393	;# 
  2914   00018A                     C1FLTCON2U      equ	394	;# 
  2915   00018B                     C1FLTCON2T      equ	395	;# 
  2916   00018C                     C1FLTOBJ0       equ	396	;# 
  2917   00018C                     C1FLTOBJ0L      equ	396	;# 
  2918   00018D                     C1FLTOBJ0H      equ	397	;# 
  2919   00018E                     C1FLTOBJ0U      equ	398	;# 
  2920   00018F                     C1FLTOBJ0T      equ	399	;# 
  2921   000190                     C1MASK0         equ	400	;# 
  2922   000190                     C1MASK0L        equ	400	;# 
  2923   000191                     C1MASK0H        equ	401	;# 
  2924   000192                     C1MASK0U        equ	402	;# 
  2925   000193                     C1MASK0T        equ	403	;# 
  2926   000194                     C1FLTOBJ1       equ	404	;# 
  2927   000194                     C1FLTOBJ1L      equ	404	;# 
  2928   000195                     C1FLTOBJ1H      equ	405	;# 
  2929   000196                     C1FLTOBJ1U      equ	406	;# 
  2930   000197                     C1FLTOBJ1T      equ	407	;# 
  2931   000198                     C1MASK1         equ	408	;# 
  2932   000198                     C1MASK1L        equ	408	;# 
  2933   000199                     C1MASK1H        equ	409	;# 
  2934   00019A                     C1MASK1U        equ	410	;# 
  2935   00019B                     C1MASK1T        equ	411	;# 
  2936   00019C                     C1FLTOBJ2       equ	412	;# 
  2937   00019C                     C1FLTOBJ2L      equ	412	;# 
  2938   00019D                     C1FLTOBJ2H      equ	413	;# 
  2939   00019E                     C1FLTOBJ2U      equ	414	;# 
  2940   00019F                     C1FLTOBJ2T      equ	415	;# 
  2941   0001A0                     C1MASK2         equ	416	;# 
  2942   0001A0                     C1MASK2L        equ	416	;# 
  2943   0001A1                     C1MASK2H        equ	417	;# 
  2944   0001A2                     C1MASK2U        equ	418	;# 
  2945   0001A3                     C1MASK2T        equ	419	;# 
  2946   0001A4                     C1FLTOBJ3       equ	420	;# 
  2947   0001A4                     C1FLTOBJ3L      equ	420	;# 
  2948   0001A5                     C1FLTOBJ3H      equ	421	;# 
  2949   0001A6                     C1FLTOBJ3U      equ	422	;# 
  2950   0001A7                     C1FLTOBJ3T      equ	423	;# 
  2951   0001A8                     C1MASK3         equ	424	;# 
  2952   0001A8                     C1MASK3L        equ	424	;# 
  2953   0001A9                     C1MASK3H        equ	425	;# 
  2954   0001AA                     C1MASK3U        equ	426	;# 
  2955   0001AB                     C1MASK3T        equ	427	;# 
  2956   0001AC                     C1FLTOBJ4       equ	428	;# 
  2957   0001AC                     C1FLTOBJ4L      equ	428	;# 
  2958   0001AD                     C1FLTOBJ4H      equ	429	;# 
  2959   0001AE                     C1FLTOBJ4U      equ	430	;# 
  2960   0001AF                     C1FLTOBJ4T      equ	431	;# 
  2961   0001B0                     C1MASK4         equ	432	;# 
  2962   0001B0                     C1MASK4L        equ	432	;# 
  2963   0001B1                     C1MASK4H        equ	433	;# 
  2964   0001B2                     C1MASK4U        equ	434	;# 
  2965   0001B3                     C1MASK4T        equ	435	;# 
  2966   0001B4                     C1FLTOBJ5       equ	436	;# 
  2967   0001B4                     C1FLTOBJ5L      equ	436	;# 
  2968   0001B5                     C1FLTOBJ5H      equ	437	;# 
  2969   0001B6                     C1FLTOBJ5U      equ	438	;# 
  2970   0001B7                     C1FLTOBJ5T      equ	439	;# 
  2971   0001B8                     C1MASK5         equ	440	;# 
  2972   0001B8                     C1MASK5L        equ	440	;# 
  2973   0001B9                     C1MASK5H        equ	441	;# 
  2974   0001BA                     C1MASK5U        equ	442	;# 
  2975   0001BB                     C1MASK5T        equ	443	;# 
  2976   0001BC                     C1FLTOBJ6       equ	444	;# 
  2977   0001BC                     C1FLTOBJ6L      equ	444	;# 
  2978   0001BD                     C1FLTOBJ6H      equ	445	;# 
  2979   0001BE                     C1FLTOBJ6U      equ	446	;# 
  2980   0001BF                     C1FLTOBJ6T      equ	447	;# 
  2981   0001C0                     C1MASK6         equ	448	;# 
  2982   0001C0                     C1MASK6L        equ	448	;# 
  2983   0001C1                     C1MASK6H        equ	449	;# 
  2984   0001C2                     C1MASK6U        equ	450	;# 
  2985   0001C3                     C1MASK6T        equ	451	;# 
  2986   0001C4                     C1FLTOBJ7       equ	452	;# 
  2987   0001C4                     C1FLTOBJ7L      equ	452	;# 
  2988   0001C5                     C1FLTOBJ7H      equ	453	;# 
  2989   0001C6                     C1FLTOBJ7U      equ	454	;# 
  2990   0001C7                     C1FLTOBJ7T      equ	455	;# 
  2991   0001C8                     C1MASK7         equ	456	;# 
  2992   0001C8                     C1MASK7L        equ	456	;# 
  2993   0001C9                     C1MASK7H        equ	457	;# 
  2994   0001CA                     C1MASK7U        equ	458	;# 
  2995   0001CB                     C1MASK7T        equ	459	;# 
  2996   0001CC                     C1FLTOBJ8       equ	460	;# 
  2997   0001CC                     C1FLTOBJ8L      equ	460	;# 
  2998   0001CD                     C1FLTOBJ8H      equ	461	;# 
  2999   0001CE                     C1FLTOBJ8U      equ	462	;# 
  3000   0001CF                     C1FLTOBJ8T      equ	463	;# 
  3001   0001D0                     C1MASK8         equ	464	;# 
  3002   0001D0                     C1MASK8L        equ	464	;# 
  3003   0001D1                     C1MASK8H        equ	465	;# 
  3004   0001D2                     C1MASK8U        equ	466	;# 
  3005   0001D3                     C1MASK8T        equ	467	;# 
  3006   0001D4                     C1FLTOBJ9       equ	468	;# 
  3007   0001D4                     C1FLTOBJ9L      equ	468	;# 
  3008   0001D5                     C1FLTOBJ9H      equ	469	;# 
  3009   0001D6                     C1FLTOBJ9U      equ	470	;# 
  3010   0001D7                     C1FLTOBJ9T      equ	471	;# 
  3011   0001D8                     C1MASK9         equ	472	;# 
  3012   0001D8                     C1MASK9L        equ	472	;# 
  3013   0001D9                     C1MASK9H        equ	473	;# 
  3014   0001DA                     C1MASK9U        equ	474	;# 
  3015   0001DB                     C1MASK9T        equ	475	;# 
  3016   0001DC                     C1FLTOBJ10      equ	476	;# 
  3017   0001DC                     C1FLTOBJ10L     equ	476	;# 
  3018   0001DD                     C1FLTOBJ10H     equ	477	;# 
  3019   0001DE                     C1FLTOBJ10U     equ	478	;# 
  3020   0001DF                     C1FLTOBJ10T     equ	479	;# 
  3021   0001E0                     C1MASK10        equ	480	;# 
  3022   0001E0                     C1MASK10L       equ	480	;# 
  3023   0001E1                     C1MASK10H       equ	481	;# 
  3024   0001E2                     C1MASK10U       equ	482	;# 
  3025   0001E3                     C1MASK10T       equ	483	;# 
  3026   0001E4                     C1FLTOBJ11      equ	484	;# 
  3027   0001E4                     C1FLTOBJ11L     equ	484	;# 
  3028   0001E5                     C1FLTOBJ11H     equ	485	;# 
  3029   0001E6                     C1FLTOBJ11U     equ	486	;# 
  3030   0001E7                     C1FLTOBJ11T     equ	487	;# 
  3031   0001E8                     C1MASK11        equ	488	;# 
  3032   0001E8                     C1MASK11L       equ	488	;# 
  3033   0001E9                     C1MASK11H       equ	489	;# 
  3034   0001EA                     C1MASK11U       equ	490	;# 
  3035   0001EB                     C1MASK11T       equ	491	;# 
  3036   000200                     PPSLOCK         equ	512	;# 
  3037   000201                     RA0PPS          equ	513	;# 
  3038   000202                     RA1PPS          equ	514	;# 
  3039   000203                     RA2PPS          equ	515	;# 
  3040   000204                     RA3PPS          equ	516	;# 
  3041   000205                     RA4PPS          equ	517	;# 
  3042   000206                     RA5PPS          equ	518	;# 
  3043   000207                     RA6PPS          equ	519	;# 
  3044   000208                     RA7PPS          equ	520	;# 
  3045   000209                     RB0PPS          equ	521	;# 
  3046   00020A                     RB1PPS          equ	522	;# 
  3047   00020B                     RB2PPS          equ	523	;# 
  3048   00020C                     RB3PPS          equ	524	;# 
  3049   00020D                     RB4PPS          equ	525	;# 
  3050   00020E                     RB5PPS          equ	526	;# 
  3051   00020F                     RB6PPS          equ	527	;# 
  3052   000210                     RB7PPS          equ	528	;# 
  3053   000211                     RC0PPS          equ	529	;# 
  3054   000212                     RC1PPS          equ	530	;# 
  3055   000213                     RC2PPS          equ	531	;# 
  3056   000214                     RC3PPS          equ	532	;# 
  3057   000215                     RC4PPS          equ	533	;# 
  3058   000216                     RC5PPS          equ	534	;# 
  3059   000217                     RC6PPS          equ	535	;# 
  3060   000218                     RC7PPS          equ	536	;# 
  3061   00023D                     CANRXPPS        equ	573	;# 
  3062   00023E                     INT0PPS         equ	574	;# 
  3063   00023F                     INT1PPS         equ	575	;# 
  3064   000240                     INT2PPS         equ	576	;# 
  3065   000241                     T0CKIPPS        equ	577	;# 
  3066   000242                     T1CKIPPS        equ	578	;# 
  3067   000243                     T1GPPS          equ	579	;# 
  3068   000244                     T3CKIPPS        equ	580	;# 
  3069   000245                     T3GPPS          equ	581	;# 
  3070   000246                     T5CKIPPS        equ	582	;# 
  3071   000247                     T5GPPS          equ	583	;# 
  3072   000248                     T2INPPS         equ	584	;# 
  3073   000249                     T4INPPS         equ	585	;# 
  3074   00024A                     T6INPPS         equ	586	;# 
  3075   00024B                     TUIN0PPS        equ	587	;# 
  3076   00024C                     TUIN1PPS        equ	588	;# 
  3077   00024F                     CCP1PPS         equ	591	;# 
  3078   000250                     CCP2PPS         equ	592	;# 
  3079   000251                     CCP3PPS         equ	593	;# 
  3080   000253                     PWM1ERSPPS      equ	595	;# 
  3081   000254                     PWM2ERSPPS      equ	596	;# 
  3082   000255                     PWM3ERSPPS      equ	597	;# 
  3083   000256                     PWM4ERSPPS      equ	598	;# 
  3084   000257                     PWMIN0PPS       equ	599	;# 
  3085   000258                     PWMIN1PPS       equ	600	;# 
  3086   000259                     SMT1WINPPS      equ	601	;# 
  3087   00025A                     SMT1SIGPPS      equ	602	;# 
  3088   00025B                     CWG1PPS         equ	603	;# 
  3089   00025B                     CWG1INPPS       equ	603	;# 
  3090   00025C                     CWG2PPS         equ	604	;# 
  3091   00025C                     CWG2INPPS       equ	604	;# 
  3092   00025D                     CWG3PPS         equ	605	;# 
  3093   00025D                     CWG3INPPS       equ	605	;# 
  3094   00025E                     MD1CARLPPS      equ	606	;# 
  3095   00025E                     MDCARLPPS       equ	606	;# 
  3096   00025F                     MD1CARHPPS      equ	607	;# 
  3097   00025F                     MDCARHPPS       equ	607	;# 
  3098   000260                     MD1SRCPPS       equ	608	;# 
  3099   000260                     MDSRCPPS        equ	608	;# 
  3100   000261                     CLCIN0PPS       equ	609	;# 
  3101   000262                     CLCIN1PPS       equ	610	;# 
  3102   000263                     CLCIN2PPS       equ	611	;# 
  3103   000264                     CLCIN3PPS       equ	612	;# 
  3104   000265                     CLCIN4PPS       equ	613	;# 
  3105   000266                     CLCIN5PPS       equ	614	;# 
  3106   000267                     CLCIN6PPS       equ	615	;# 
  3107   000268                     CLCIN7PPS       equ	616	;# 
  3108   000269                     ADACTPPS        equ	617	;# 
  3109   00026A                     SPI1SCKPPS      equ	618	;# 
  3110   00026B                     SPI1SDIPPS      equ	619	;# 
  3111   00026C                     SPI1SSPPS       equ	620	;# 
  3112   00026D                     SPI2SCKPPS      equ	621	;# 
  3113   00026E                     SPI2SDIPPS      equ	622	;# 
  3114   00026F                     SPI2SSPPS       equ	623	;# 
  3115   000270                     I2C1SDAPPS      equ	624	;# 
  3116   000271                     I2C1SCLPPS      equ	625	;# 
  3117   000272                     U1RXPPS         equ	626	;# 
  3118   000273                     U1CTSPPS        equ	627	;# 
  3119   000274                     U2RXPPS         equ	628	;# 
  3120   000275                     U2CTSPPS        equ	629	;# 
  3121   000276                     U3RXPPS         equ	630	;# 
  3122   000277                     U3CTSPPS        equ	631	;# 
  3123   000278                     U4RXPPS         equ	632	;# 
  3124   000279                     U4CTSPPS        equ	633	;# 
  3125   00027A                     U5RXPPS         equ	634	;# 
  3126   00027B                     U5CTSPPS        equ	635	;# 
  3127   000286                     RC4I2C          equ	646	;# 
  3128   000287                     RC3I2C          equ	647	;# 
  3129   000288                     RB2I2C          equ	648	;# 
  3130   000289                     RB1I2C          equ	649	;# 
  3131   00028A                     I2C1RXB         equ	650	;# 
  3132   00028B                     I2C1TXB         equ	651	;# 
  3133   00028C                     I2C1CNTL        equ	652	;# 
  3134   00028D                     I2C1CNTH        equ	653	;# 
  3135   00028E                     I2C1ADB0        equ	654	;# 
  3136   00028F                     I2C1ADB1        equ	655	;# 
  3137   000290                     I2C1ADR0        equ	656	;# 
  3138   000291                     I2C1ADR1        equ	657	;# 
  3139   000292                     I2C1ADR2        equ	658	;# 
  3140   000293                     I2C1ADR3        equ	659	;# 
  3141   000294                     I2C1CON0        equ	660	;# 
  3142   000295                     I2C1CON1        equ	661	;# 
  3143   000296                     I2C1CON2        equ	662	;# 
  3144   000297                     I2C1ERR         equ	663	;# 
  3145   000298                     I2C1STAT0       equ	664	;# 
  3146   000299                     I2C1STAT1       equ	665	;# 
  3147   00029A                     I2C1PIR         equ	666	;# 
  3148   00029B                     I2C1PIE         equ	667	;# 
  3149   00029C                     I2C1BTO         equ	668	;# 
  3150   00029D                     I2C1BAUD        equ	669	;# 
  3151   00029E                     I2C1CLK         equ	670	;# 
  3152   00029F                     I2C1BTOC        equ	671	;# 
  3153   0002A1                     U1RXB           equ	673	;# 
  3154   0002A1                     U1RXBL          equ	673	;# 
  3155   0002A2                     U1RXCHK         equ	674	;# 
  3156   0002A3                     U1TXB           equ	675	;# 
  3157   0002A3                     U1TXBL          equ	675	;# 
  3158   0002A4                     U1TXCHK         equ	676	;# 
  3159   0002A5                     U1P1            equ	677	;# 
  3160   0002A5                     U1P1L           equ	677	;# 
  3161   0002A6                     U1P1H           equ	678	;# 
  3162   0002A7                     U1P2            equ	679	;# 
  3163   0002A7                     U1P2L           equ	679	;# 
  3164   0002A8                     U1P2H           equ	680	;# 
  3165   0002A9                     U1P3            equ	681	;# 
  3166   0002A9                     U1P3L           equ	681	;# 
  3167   0002AA                     U1P3H           equ	682	;# 
  3168   0002AB                     U1CON0          equ	683	;# 
  3169   0002AC                     U1CON1          equ	684	;# 
  3170   0002AD                     U1CON2          equ	685	;# 
  3171   0002AE                     U1BRG           equ	686	;# 
  3172   0002AE                     U1BRGL          equ	686	;# 
  3173   0002AF                     U1BRGH          equ	687	;# 
  3174   0002B0                     U1FIFO          equ	688	;# 
  3175   0002B1                     U1UIR           equ	689	;# 
  3176   0002B2                     U1ERRIR         equ	690	;# 
  3177   0002B3                     U1ERRIE         equ	691	;# 
  3178   0002B4                     U2RXB           equ	692	;# 
  3179   0002B4                     U2RXBL          equ	692	;# 
  3180   0002B5                     U2RXCHK         equ	693	;# 
  3181   0002B6                     U2TXB           equ	694	;# 
  3182   0002B6                     U2TXBL          equ	694	;# 
  3183   0002B7                     U2TXCHK         equ	695	;# 
  3184   0002B8                     U2P1            equ	696	;# 
  3185   0002B8                     U2P1L           equ	696	;# 
  3186   0002B9                     U2P1H           equ	697	;# 
  3187   0002BA                     U2P2            equ	698	;# 
  3188   0002BA                     U2P2L           equ	698	;# 
  3189   0002BB                     U2P2H           equ	699	;# 
  3190   0002BC                     U2P3            equ	700	;# 
  3191   0002BC                     U2P3L           equ	700	;# 
  3192   0002BD                     U2P3H           equ	701	;# 
  3193   0002BE                     U2CON0          equ	702	;# 
  3194   0002BF                     U2CON1          equ	703	;# 
  3195   0002C0                     U2CON2          equ	704	;# 
  3196   0002C1                     U2BRG           equ	705	;# 
  3197   0002C1                     U2BRGL          equ	705	;# 
  3198   0002C2                     U2BRGH          equ	706	;# 
  3199   0002C3                     U2FIFO          equ	707	;# 
  3200   0002C4                     U2UIR           equ	708	;# 
  3201   0002C5                     U2ERRIR         equ	709	;# 
  3202   0002C6                     U2ERRIE         equ	710	;# 
  3203   0002C7                     U3RXB           equ	711	;# 
  3204   0002C7                     U3RXBL          equ	711	;# 
  3205   0002C9                     U3TXB           equ	713	;# 
  3206   0002C9                     U3TXBL          equ	713	;# 
  3207   0002CB                     U3P1            equ	715	;# 
  3208   0002CB                     U3P1L           equ	715	;# 
  3209   0002CD                     U3P2            equ	717	;# 
  3210   0002CD                     U3P2L           equ	717	;# 
  3211   0002CF                     U3P3            equ	719	;# 
  3212   0002CF                     U3P3L           equ	719	;# 
  3213   0002D1                     U3CON0          equ	721	;# 
  3214   0002D2                     U3CON1          equ	722	;# 
  3215   0002D3                     U3CON2          equ	723	;# 
  3216   0002D4                     U3BRG           equ	724	;# 
  3217   0002D4                     U3BRGL          equ	724	;# 
  3218   0002D5                     U3BRGH          equ	725	;# 
  3219   0002D6                     U3FIFO          equ	726	;# 
  3220   0002D7                     U3UIR           equ	727	;# 
  3221   0002D8                     U3ERRIR         equ	728	;# 
  3222   0002D9                     U3ERRIE         equ	729	;# 
  3223   0002DA                     U4RXB           equ	730	;# 
  3224   0002DA                     U4RXBL          equ	730	;# 
  3225   0002DC                     U4TXB           equ	732	;# 
  3226   0002DC                     U4TXBL          equ	732	;# 
  3227   0002DE                     U4P1            equ	734	;# 
  3228   0002DE                     U4P1L           equ	734	;# 
  3229   0002E0                     U4P2            equ	736	;# 
  3230   0002E0                     U4P2L           equ	736	;# 
  3231   0002E2                     U4P3            equ	738	;# 
  3232   0002E2                     U4P3L           equ	738	;# 
  3233   0002E4                     U4CON0          equ	740	;# 
  3234   0002E5                     U4CON1          equ	741	;# 
  3235   0002E6                     U4CON2          equ	742	;# 
  3236   0002E7                     U4BRG           equ	743	;# 
  3237   0002E7                     U4BRGL          equ	743	;# 
  3238   0002E8                     U4BRGH          equ	744	;# 
  3239   0002E9                     U4FIFO          equ	745	;# 
  3240   0002EA                     U4UIR           equ	746	;# 
  3241   0002EB                     U4ERRIR         equ	747	;# 
  3242   0002EC                     U4ERRIE         equ	748	;# 
  3243   0002ED                     U5RXB           equ	749	;# 
  3244   0002ED                     U5RXBL          equ	749	;# 
  3245   0002EF                     U5TXB           equ	751	;# 
  3246   0002EF                     U5TXBL          equ	751	;# 
  3247   0002F1                     U5P1            equ	753	;# 
  3248   0002F1                     U5P1L           equ	753	;# 
  3249   0002F3                     U5P2            equ	755	;# 
  3250   0002F3                     U5P2L           equ	755	;# 
  3251   0002F5                     U5P3            equ	757	;# 
  3252   0002F5                     U5P3L           equ	757	;# 
  3253   0002F7                     U5CON0          equ	759	;# 
  3254   0002F8                     U5CON1          equ	760	;# 
  3255   0002F9                     U5CON2          equ	761	;# 
  3256   0002FA                     U5BRG           equ	762	;# 
  3257   0002FA                     U5BRGL          equ	762	;# 
  3258   0002FB                     U5BRGH          equ	763	;# 
  3259   0002FC                     U5FIFO          equ	764	;# 
  3260   0002FD                     U5UIR           equ	765	;# 
  3261   0002FE                     U5ERRIR         equ	766	;# 
  3262   0002FF                     U5ERRIE         equ	767	;# 
  3263   000300                     SMT1TMR         equ	768	;# 
  3264   000300                     SMT1TMRL        equ	768	;# 
  3265   000301                     SMT1TMRH        equ	769	;# 
  3266   000302                     SMT1TMRU        equ	770	;# 
  3267   000303                     SMT1CPR         equ	771	;# 
  3268   000303                     SMT1CPRL        equ	771	;# 
  3269   000304                     SMT1CPRH        equ	772	;# 
  3270   000305                     SMT1CPRU        equ	773	;# 
  3271   000306                     SMT1CPW         equ	774	;# 
  3272   000306                     SMT1CPWL        equ	774	;# 
  3273   000307                     SMT1CPWH        equ	775	;# 
  3274   000308                     SMT1CPWU        equ	776	;# 
  3275   000309                     SMT1PR          equ	777	;# 
  3276   000309                     SMT1PRL         equ	777	;# 
  3277   00030A                     SMT1PRH         equ	778	;# 
  3278   00030B                     SMT1PRU         equ	779	;# 
  3279   00030C                     SMT1CON0        equ	780	;# 
  3280   00030D                     SMT1CON1        equ	781	;# 
  3281   00030E                     SMT1STAT        equ	782	;# 
  3282   00030F                     SMT1CLK         equ	783	;# 
  3283   000310                     SMT1SIG         equ	784	;# 
  3284   000311                     SMT1WIN         equ	785	;# 
  3285   000318                     TMR0L           equ	792	;# 
  3286   000318                     TMR0            equ	792	;# 
  3287   000319                     TMR0H           equ	793	;# 
  3288   000319                     PR0             equ	793	;# 
  3289   00031A                     T0CON0          equ	794	;# 
  3290   00031B                     T0CON1          equ	795	;# 
  3291   00031C                     TMR1            equ	796	;# 
  3292   00031C                     TMR1L           equ	796	;# 
  3293   00031D                     TMR1H           equ	797	;# 
  3294   00031E                     T1CON           equ	798	;# 
  3295   00031E                     TMR1CON         equ	798	;# 
  3296   00031F                     T1GCON          equ	799	;# 
  3297   00031F                     TMR1GCON        equ	799	;# 
  3298   000320                     T1GATE          equ	800	;# 
  3299   000320                     TMR1GATE        equ	800	;# 
  3300   000321                     T1CLK           equ	801	;# 
  3301   000321                     TMR1CLK         equ	801	;# 
  3302   000321                     PR1             equ	801	;# 
  3303   000322                     T2TMR           equ	802	;# 
  3304   000322                     TMR2            equ	802	;# 
  3305   000323                     T2PR            equ	803	;# 
  3306   000323                     PR2             equ	803	;# 
  3307   000324                     T2CON           equ	804	;# 
  3308   000325                     T2HLT           equ	805	;# 
  3309   000326                     T2CLKCON        equ	806	;# 
  3310   000326                     T2CLK           equ	806	;# 
  3311   000327                     T2RST           equ	807	;# 
  3312   000328                     TMR3            equ	808	;# 
  3313   000328                     TMR3L           equ	808	;# 
  3314   000329                     TMR3H           equ	809	;# 
  3315   00032A                     T3CON           equ	810	;# 
  3316   00032A                     TMR3CON         equ	810	;# 
  3317   00032B                     T3GCON          equ	811	;# 
  3318   00032B                     TMR3GCON        equ	811	;# 
  3319   00032C                     T3GATE          equ	812	;# 
  3320   00032C                     TMR3GATE        equ	812	;# 
  3321   00032D                     T3CLK           equ	813	;# 
  3322   00032D                     TMR3CLK         equ	813	;# 
  3323   00032D                     PR3             equ	813	;# 
  3324   00032E                     T4TMR           equ	814	;# 
  3325   00032E                     TMR4            equ	814	;# 
  3326   00032F                     T4PR            equ	815	;# 
  3327   00032F                     PR4             equ	815	;# 
  3328   000330                     T4CON           equ	816	;# 
  3329   000331                     T4HLT           equ	817	;# 
  3330   000332                     T4CLKCON        equ	818	;# 
  3331   000332                     T4CLK           equ	818	;# 
  3332   000333                     T4RST           equ	819	;# 
  3333   000334                     TMR5            equ	820	;# 
  3334   000334                     TMR5L           equ	820	;# 
  3335   000335                     TMR5H           equ	821	;# 
  3336   000336                     T5CON           equ	822	;# 
  3337   000336                     TMR5CON         equ	822	;# 
  3338   000337                     T5GCON          equ	823	;# 
  3339   000337                     TMR5GCON        equ	823	;# 
  3340   000338                     T5GATE          equ	824	;# 
  3341   000338                     TMR5GATE        equ	824	;# 
  3342   000339                     T5CLK           equ	825	;# 
  3343   000339                     TMR5CLK         equ	825	;# 
  3344   000339                     PR5             equ	825	;# 
  3345   00033A                     T6TMR           equ	826	;# 
  3346   00033A                     TMR6            equ	826	;# 
  3347   00033B                     T6PR            equ	827	;# 
  3348   00033B                     PR6             equ	827	;# 
  3349   00033C                     T6CON           equ	828	;# 
  3350   00033D                     T6HLT           equ	829	;# 
  3351   00033E                     T6CLKCON        equ	830	;# 
  3352   00033E                     T6CLK           equ	830	;# 
  3353   00033F                     T6RST           equ	831	;# 
  3354   000340                     CCPR1           equ	832	;# 
  3355   000340                     CCPR1L          equ	832	;# 
  3356   000341                     CCPR1H          equ	833	;# 
  3357   000342                     CCP1CON         equ	834	;# 
  3358   000343                     CCP1CAP         equ	835	;# 
  3359   000344                     CCPR2           equ	836	;# 
  3360   000344                     CCPR2L          equ	836	;# 
  3361   000345                     CCPR2H          equ	837	;# 
  3362   000346                     CCP2CON         equ	838	;# 
  3363   000347                     CCP2CAP         equ	839	;# 
  3364   000348                     CCPR3           equ	840	;# 
  3365   000348                     CCPR3L          equ	840	;# 
  3366   000349                     CCPR3H          equ	841	;# 
  3367   00034A                     CCP3CON         equ	842	;# 
  3368   00034B                     CCP3CAP         equ	843	;# 
  3369   00034C                     CCPTMRS0        equ	844	;# 
  3370   00034F                     CRCDATA         equ	847	;# 
  3371   00034F                     CRCDATAL        equ	847	;# 
  3372   000350                     CRCDATAH        equ	848	;# 
  3373   000351                     CRCDATAU        equ	849	;# 
  3374   000352                     CRCDATAT        equ	850	;# 
  3375   000353                     CRCOUT          equ	851	;# 
  3376   000353                     CRCSHFT         equ	851	;# 
  3377   000353                     CRCXOR          equ	851	;# 
  3378   000353                     CRCOUTL         equ	851	;# 
  3379   000353                     CRCSHFTL        equ	851	;# 
  3380   000353                     CRCSHIFTL       equ	851	;# 
  3381   000353                     CRCXORL         equ	851	;# 
  3382   000354                     CRCOUTH         equ	852	;# 
  3383   000354                     CRCSHFTH        equ	852	;# 
  3384   000354                     CRCSHIFTH       equ	852	;# 
  3385   000354                     CRCXORH         equ	852	;# 
  3386   000355                     CRCOUTU         equ	853	;# 
  3387   000355                     CRCSHFTU        equ	853	;# 
  3388   000355                     CRCSHIFTU       equ	853	;# 
  3389   000355                     CRCXORU         equ	853	;# 
  3390   000356                     CRCOUTT         equ	854	;# 
  3391   000356                     CRCSHFTT        equ	854	;# 
  3392   000356                     CRCSHIFTT       equ	854	;# 
  3393   000356                     CRCXORT         equ	854	;# 
  3394   000357                     CRCCON0         equ	855	;# 
  3395   000358                     CRCCON1         equ	856	;# 
  3396   000359                     CRCCON2         equ	857	;# 
  3397   00035A                     SCANLADR        equ	858	;# 
  3398   00035A                     SCANLADRL       equ	858	;# 
  3399   00035B                     SCANLADRH       equ	859	;# 
  3400   00035C                     SCANLADRU       equ	860	;# 
  3401   00035D                     SCANHADR        equ	861	;# 
  3402   00035D                     SCANHADRL       equ	861	;# 
  3403   00035E                     SCANHADRH       equ	862	;# 
  3404   00035F                     SCANHADRU       equ	863	;# 
  3405   000360                     SCANCON0        equ	864	;# 
  3406   000361                     SCANTRIG        equ	865	;# 
  3407   000362                     IPR0            equ	866	;# 
  3408   000363                     IPR1            equ	867	;# 
  3409   000364                     IPR2            equ	868	;# 
  3410   000365                     IPR3            equ	869	;# 
  3411   000366                     IPR4            equ	870	;# 
  3412   000367                     IPR5            equ	871	;# 
  3413   000368                     IPR6            equ	872	;# 
  3414   000369                     IPR7            equ	873	;# 
  3415   00036A                     IPR8            equ	874	;# 
  3416   00036B                     IPR9            equ	875	;# 
  3417   00036C                     IPR10           equ	876	;# 
  3418   00036D                     IPR11           equ	877	;# 
  3419   00036E                     IPR12           equ	878	;# 
  3420   00036F                     IPR13           equ	879	;# 
  3421   000370                     IPR14           equ	880	;# 
  3422   000371                     IPR15           equ	881	;# 
  3423   000373                     STATUS_CSHAD    equ	883	;# 
  3424   000374                     WREG_CSHAD      equ	884	;# 
  3425   000375                     BSR_CSHAD       equ	885	;# 
  3426   000376                     SHADCON         equ	886	;# 
  3427   000377                     STATUS_SHAD     equ	887	;# 
  3428   000378                     WREG_SHAD       equ	888	;# 
  3429   000379                     BSR_SHAD        equ	889	;# 
  3430   00037A                     PCLATH_SHAD     equ	890	;# 
  3431   00037B                     PCLATU_SHAD     equ	891	;# 
  3432   00037C                     FSR0SH          equ	892	;# 
  3433   00037C                     FSR0L_SHAD      equ	892	;# 
  3434   00037D                     FSR0H_SHAD      equ	893	;# 
  3435   00037E                     FSR1SH          equ	894	;# 
  3436   00037E                     FSR1L_SHAD      equ	894	;# 
  3437   00037F                     FSR1H_SHAD      equ	895	;# 
  3438   000380                     FSR2SH          equ	896	;# 
  3439   000380                     FSR2L_SHAD      equ	896	;# 
  3440   000381                     FSR2H_SHAD      equ	897	;# 
  3441   000382                     PRODSH          equ	898	;# 
  3442   000382                     PRODL_SHAD      equ	898	;# 
  3443   000383                     PRODH_SHAD      equ	899	;# 
  3444   000387                     TU16ACON0       equ	903	;# 
  3445   000388                     TU16ACON1       equ	904	;# 
  3446   000389                     TU16AHLT        equ	905	;# 
  3447   00038A                     TU16APS         equ	906	;# 
  3448   00038B                     TU16ATMR        equ	907	;# 
  3449   00038B                     TU16ACR         equ	907	;# 
  3450   00038B                     TU16ATMRL       equ	907	;# 
  3451   00038B                     TU16ACRL        equ	907	;# 
  3452   00038C                     TU16ATMRH       equ	908	;# 
  3453   00038C                     TU16ACRH        equ	908	;# 
  3454   00038D                     TU16APR         equ	909	;# 
  3455   00038D                     TU16APRL        equ	909	;# 
  3456   00038E                     TU16APRH        equ	910	;# 
  3457   00038F                     TU16ACLK        equ	911	;# 
  3458   000390                     TU16AERS        equ	912	;# 
  3459   000393                     TU16BCON0       equ	915	;# 
  3460   000394                     TU16BCON1       equ	916	;# 
  3461   000395                     TU16BHLT        equ	917	;# 
  3462   000396                     TU16BPS         equ	918	;# 
  3463   000397                     TU16BTMR        equ	919	;# 
  3464   000397                     TU16BCR         equ	919	;# 
  3465   000397                     TU16BTMRL       equ	919	;# 
  3466   000397                     TU16BCRL        equ	919	;# 
  3467   000398                     TU16BTMRH       equ	920	;# 
  3468   000398                     TU16BCRH        equ	920	;# 
  3469   000399                     TU16BPR         equ	921	;# 
  3470   000399                     TU16BPRL        equ	921	;# 
  3471   00039A                     TU16BPRH        equ	922	;# 
  3472   00039B                     TU16BCLK        equ	923	;# 
  3473   00039C                     TU16BERS        equ	924	;# 
  3474   0003BB                     TUCHAIN         equ	955	;# 
  3475   0003BC                     CWG1CLK         equ	956	;# 
  3476   0003BC                     CWG1CLKCON      equ	956	;# 
  3477   0003BD                     CWG1ISM         equ	957	;# 
  3478   0003BE                     CWG1DBR         equ	958	;# 
  3479   0003BF                     CWG1DBF         equ	959	;# 
  3480   0003C0                     CWG1CON0        equ	960	;# 
  3481   0003C1                     CWG1CON1        equ	961	;# 
  3482   0003C2                     CWG1AS0         equ	962	;# 
  3483   0003C3                     CWG1AS1         equ	963	;# 
  3484   0003C4                     CWG1STR         equ	964	;# 
  3485   0003C5                     CWG2CLK         equ	965	;# 
  3486   0003C5                     CWG2CLKCON      equ	965	;# 
  3487   0003C6                     CWG2ISM         equ	966	;# 
  3488   0003C7                     CWG2DBR         equ	967	;# 
  3489   0003C8                     CWG2DBF         equ	968	;# 
  3490   0003C9                     CWG2CON0        equ	969	;# 
  3491   0003CA                     CWG2CON1        equ	970	;# 
  3492   0003CB                     CWG2AS0         equ	971	;# 
  3493   0003CC                     CWG2AS1         equ	972	;# 
  3494   0003CD                     CWG2STR         equ	973	;# 
  3495   0003CE                     CWG3CLK         equ	974	;# 
  3496   0003CE                     CWG3CLKCON      equ	974	;# 
  3497   0003CF                     CWG3ISM         equ	975	;# 
  3498   0003D0                     CWG3DBR         equ	976	;# 
  3499   0003D1                     CWG3DBF         equ	977	;# 
  3500   0003D2                     CWG3CON0        equ	978	;# 
  3501   0003D3                     CWG3CON1        equ	979	;# 
  3502   0003D4                     CWG3AS0         equ	980	;# 
  3503   0003D5                     CWG3AS1         equ	981	;# 
  3504   0003D6                     CWG3STR         equ	982	;# 
  3505   0003D7                     FVRCON          equ	983	;# 
  3506   0003D8                     ADCPCON         equ	984	;# 
  3507   0003D8                     ADCP            equ	984	;# 
  3508   0003D9                     ADLTH           equ	985	;# 
  3509   0003D9                     ADLTHL          equ	985	;# 
  3510   0003DA                     ADLTHH          equ	986	;# 
  3511   0003DB                     ADUTH           equ	987	;# 
  3512   0003DB                     ADUTHL          equ	987	;# 
  3513   0003DC                     ADUTHH          equ	988	;# 
  3514   0003DD                     ADERR           equ	989	;# 
  3515   0003DD                     ADERRL          equ	989	;# 
  3516   0003DE                     ADERRH          equ	990	;# 
  3517   0003DF                     ADSTPT          equ	991	;# 
  3518   0003DF                     ADSTPTL         equ	991	;# 
  3519   0003E0                     ADSTPTH         equ	992	;# 
  3520   0003E1                     ADFLTR          equ	993	;# 
  3521   0003E1                     ADFLTRL         equ	993	;# 
  3522   0003E2                     ADFLTRH         equ	994	;# 
  3523   0003E3                     ADACC           equ	995	;# 
  3524   0003E3                     ADACCL          equ	995	;# 
  3525   0003E4                     ADACCH          equ	996	;# 
  3526   0003E5                     ADACCU          equ	997	;# 
  3527   0003E6                     ADCNT           equ	998	;# 
  3528   0003E7                     ADRPT           equ	999	;# 
  3529   0003E8                     ADPREV          equ	1000	;# 
  3530   0003E8                     ADPREVL         equ	1000	;# 
  3531   0003E9                     ADPREVH         equ	1001	;# 
  3532   0003EA                     ADRES           equ	1002	;# 
  3533   0003EA                     ADRESL          equ	1002	;# 
  3534   0003EB                     ADRESH          equ	1003	;# 
  3535   0003EC                     ADPCH           equ	1004	;# 
  3536   0003EE                     ADACQ           equ	1006	;# 
  3537   0003EE                     ADACQL          equ	1006	;# 
  3538   0003EF                     ADACQH          equ	1007	;# 
  3539   0003F0                     ADCAP           equ	1008	;# 
  3540   0003F1                     ADPRE           equ	1009	;# 
  3541   0003F1                     ADPREL          equ	1009	;# 
  3542   0003F2                     ADPREH          equ	1010	;# 
  3543   0003F3                     ADCON0          equ	1011	;# 
  3544   0003F4                     ADCON1          equ	1012	;# 
  3545   0003F5                     ADCON2          equ	1013	;# 
  3546   0003F6                     ADCON3          equ	1014	;# 
  3547   0003F7                     ADSTAT          equ	1015	;# 
  3548   0003F8                     ADREF           equ	1016	;# 
  3549   0003F9                     ADACT           equ	1017	;# 
  3550   0003FA                     ADCLK           equ	1018	;# 
  3551   0003FB                     ADCTX           equ	1019	;# 
  3552   0003FC                     ADCSEL1         equ	1020	;# 
  3553   0003FD                     ADCSEL2         equ	1021	;# 
  3554   0003FE                     ADCSEL3         equ	1022	;# 
  3555   0003FF                     ADCSEL4         equ	1023	;# 
  3556   000400                     ANSELA          equ	1024	;# 
  3557   000401                     WPUA            equ	1025	;# 
  3558   000402                     ODCONA          equ	1026	;# 
  3559   000403                     SLRCONA         equ	1027	;# 
  3560   000404                     INLVLA          equ	1028	;# 
  3561   000405                     IOCAP           equ	1029	;# 
  3562   000406                     IOCAN           equ	1030	;# 
  3563   000407                     IOCAF           equ	1031	;# 
  3564   000408                     ANSELB          equ	1032	;# 
  3565   000409                     WPUB            equ	1033	;# 
  3566   00040A                     ODCONB          equ	1034	;# 
  3567   00040B                     SLRCONB         equ	1035	;# 
  3568   00040C                     INLVLB          equ	1036	;# 
  3569   00040D                     IOCBP           equ	1037	;# 
  3570   00040E                     IOCBN           equ	1038	;# 
  3571   00040F                     IOCBF           equ	1039	;# 
  3572   000410                     ANSELC          equ	1040	;# 
  3573   000411                     WPUC            equ	1041	;# 
  3574   000412                     ODCONC          equ	1042	;# 
  3575   000413                     SLRCONC         equ	1043	;# 
  3576   000414                     INLVLC          equ	1044	;# 
  3577   000415                     IOCCP           equ	1045	;# 
  3578   000416                     IOCCN           equ	1046	;# 
  3579   000417                     IOCCF           equ	1047	;# 
  3580   000421                     WPUE            equ	1057	;# 
  3581   000424                     INLVLE          equ	1060	;# 
  3582   000425                     IOCEP           equ	1061	;# 
  3583   000426                     IOCEN           equ	1062	;# 
  3584   000427                     IOCEF           equ	1063	;# 
  3585   000440                     NCO1ACC         equ	1088	;# 
  3586   000440                     NCO1ACCL        equ	1088	;# 
  3587   000441                     NCO1ACCH        equ	1089	;# 
  3588   000442                     NCO1ACCU        equ	1090	;# 
  3589   000443                     NCO1INC         equ	1091	;# 
  3590   000443                     NCO1INCL        equ	1091	;# 
  3591   000444                     NCO1INCH        equ	1092	;# 
  3592   000445                     NCO1INCU        equ	1093	;# 
  3593   000446                     NCO1CON         equ	1094	;# 
  3594   000447                     NCO1CLK         equ	1095	;# 
  3595   000448                     NCO2ACC         equ	1096	;# 
  3596   000448                     NCO2ACCL        equ	1096	;# 
  3597   000449                     NCO2ACCH        equ	1097	;# 
  3598   00044A                     NCO2ACCU        equ	1098	;# 
  3599   00044B                     NCO2INC         equ	1099	;# 
  3600   00044B                     NCO2INCL        equ	1099	;# 
  3601   00044C                     NCO2INCH        equ	1100	;# 
  3602   00044D                     NCO2INCU        equ	1101	;# 
  3603   00044E                     NCO2CON         equ	1102	;# 
  3604   00044F                     NCO2CLK         equ	1103	;# 
  3605   000450                     NCO3ACC         equ	1104	;# 
  3606   000450                     NCO3ACCL        equ	1104	;# 
  3607   000451                     NCO3ACCH        equ	1105	;# 
  3608   000452                     NCO3ACCU        equ	1106	;# 
  3609   000453                     NCO3INC         equ	1107	;# 
  3610   000453                     NCO3INCL        equ	1107	;# 
  3611   000454                     NCO3INCH        equ	1108	;# 
  3612   000455                     NCO3INCU        equ	1109	;# 
  3613   000456                     NCO3CON         equ	1110	;# 
  3614   000457                     NCO3CLK         equ	1111	;# 
  3615   000458                     FSCMCON         equ	1112	;# 
  3616   000459                     IVTLOCK         equ	1113	;# 
  3617   00045A                     IVTAD           equ	1114	;# 
  3618   00045A                     IVTADL          equ	1114	;# 
  3619   00045B                     IVTADH          equ	1115	;# 
  3620   00045C                     IVTADU          equ	1116	;# 
  3621   00045D                     IVTBASE         equ	1117	;# 
  3622   00045D                     IVTBASEL        equ	1117	;# 
  3623   00045E                     IVTBASEH        equ	1118	;# 
  3624   00045F                     IVTBASEU        equ	1119	;# 
  3625   000460                     PWM1ERS         equ	1120	;# 
  3626   000461                     PWM1CLK         equ	1121	;# 
  3627   000462                     PWM1LDS         equ	1122	;# 
  3628   000463                     PWM1PR          equ	1123	;# 
  3629   000463                     PWM1PRL         equ	1123	;# 
  3630   000464                     PWM1PRH         equ	1124	;# 
  3631   000465                     PWM1CPRE        equ	1125	;# 
  3632   000466                     PWM1PIPOS       equ	1126	;# 
  3633   000467                     PWM1GIR         equ	1127	;# 
  3634   000468                     PWM1GIE         equ	1128	;# 
  3635   000469                     PWM1CON         equ	1129	;# 
  3636   00046A                     PWM1S1CFG       equ	1130	;# 
  3637   00046B                     PWM1S1P1        equ	1131	;# 
  3638   00046B                     PWM1S1P1L       equ	1131	;# 
  3639   00046C                     PWM1S1P1H       equ	1132	;# 
  3640   00046D                     PWM1S1P2        equ	1133	;# 
  3641   00046D                     PWM1S1P2L       equ	1133	;# 
  3642   00046E                     PWM1S1P2H       equ	1134	;# 
  3643   00046F                     PWM2ERS         equ	1135	;# 
  3644   000470                     PWM2CLK         equ	1136	;# 
  3645   000471                     PWM2LDS         equ	1137	;# 
  3646   000472                     PWM2PR          equ	1138	;# 
  3647   000472                     PWM2PRL         equ	1138	;# 
  3648   000473                     PWM2PRH         equ	1139	;# 
  3649   000474                     PWM2CPRE        equ	1140	;# 
  3650   000475                     PWM2PIPOS       equ	1141	;# 
  3651   000476                     PWM2GIR         equ	1142	;# 
  3652   000477                     PWM2GIE         equ	1143	;# 
  3653   000478                     PWM2CON         equ	1144	;# 
  3654   000479                     PWM2S1CFG       equ	1145	;# 
  3655   00047A                     PWM2S1P1        equ	1146	;# 
  3656   00047A                     PWM2S1P1L       equ	1146	;# 
  3657   00047B                     PWM2S1P1H       equ	1147	;# 
  3658   00047C                     PWM2S1P2        equ	1148	;# 
  3659   00047C                     PWM2S1P2L       equ	1148	;# 
  3660   00047D                     PWM2S1P2H       equ	1149	;# 
  3661   00047E                     PWM3ERS         equ	1150	;# 
  3662   00047F                     PWM3CLK         equ	1151	;# 
  3663   000480                     PWM3LDS         equ	1152	;# 
  3664   000481                     PWM3PR          equ	1153	;# 
  3665   000481                     PWM3PRL         equ	1153	;# 
  3666   000482                     PWM3PRH         equ	1154	;# 
  3667   000483                     PWM3CPRE        equ	1155	;# 
  3668   000484                     PWM3PIPOS       equ	1156	;# 
  3669   000485                     PWM3GIR         equ	1157	;# 
  3670   000486                     PWM3GIE         equ	1158	;# 
  3671   000487                     PWM3CON         equ	1159	;# 
  3672   000488                     PWM3S1CFG       equ	1160	;# 
  3673   000489                     PWM3S1P1        equ	1161	;# 
  3674   000489                     PWM3S1P1L       equ	1161	;# 
  3675   00048A                     PWM3S1P1H       equ	1162	;# 
  3676   00048B                     PWM3S1P2        equ	1163	;# 
  3677   00048B                     PWM3S1P2L       equ	1163	;# 
  3678   00048C                     PWM3S1P2H       equ	1164	;# 
  3679   00048D                     PWM4ERS         equ	1165	;# 
  3680   00048E                     PWM4CLK         equ	1166	;# 
  3681   00048F                     PWM4LDS         equ	1167	;# 
  3682   000490                     PWM4PR          equ	1168	;# 
  3683   000490                     PWM4PRL         equ	1168	;# 
  3684   000491                     PWM4PRH         equ	1169	;# 
  3685   000492                     PWM4CPRE        equ	1170	;# 
  3686   000493                     PWM4PIPOS       equ	1171	;# 
  3687   000494                     PWM4GIR         equ	1172	;# 
  3688   000495                     PWM4GIE         equ	1173	;# 
  3689   000496                     PWM4CON         equ	1174	;# 
  3690   000497                     PWM4S1CFG       equ	1175	;# 
  3691   000498                     PWM4S1P1        equ	1176	;# 
  3692   000498                     PWM4S1P1L       equ	1176	;# 
  3693   000499                     PWM4S1P1H       equ	1177	;# 
  3694   00049A                     PWM4S1P2        equ	1178	;# 
  3695   00049A                     PWM4S1P2L       equ	1178	;# 
  3696   00049B                     PWM4S1P2H       equ	1179	;# 
  3697   00049C                     PWMLOAD         equ	1180	;# 
  3698   00049D                     PWMEN           equ	1181	;# 
  3699   00049E                     PIE0            equ	1182	;# 
  3700   00049F                     PIE1            equ	1183	;# 
  3701   0004A0                     PIE2            equ	1184	;# 
  3702   0004A1                     PIE3            equ	1185	;# 
  3703   0004A2                     PIE4            equ	1186	;# 
  3704   0004A3                     PIE5            equ	1187	;# 
  3705   0004A4                     PIE6            equ	1188	;# 
  3706   0004A5                     PIE7            equ	1189	;# 
  3707   0004A6                     PIE8            equ	1190	;# 
  3708   0004A7                     PIE9            equ	1191	;# 
  3709   0004A8                     PIE10           equ	1192	;# 
  3710   0004A9                     PIE11           equ	1193	;# 
  3711   0004AA                     PIE12           equ	1194	;# 
  3712   0004AB                     PIE13           equ	1195	;# 
  3713   0004AC                     PIE14           equ	1196	;# 
  3714   0004AD                     PIE15           equ	1197	;# 
  3715   0004AE                     PIR0            equ	1198	;# 
  3716   0004AF                     PIR1            equ	1199	;# 
  3717   0004B0                     PIR2            equ	1200	;# 
  3718   0004B1                     PIR3            equ	1201	;# 
  3719   0004B2                     PIR4            equ	1202	;# 
  3720   0004B3                     PIR5            equ	1203	;# 
  3721   0004B4                     PIR6            equ	1204	;# 
  3722   0004B5                     PIR7            equ	1205	;# 
  3723   0004B6                     PIR8            equ	1206	;# 
  3724   0004B7                     PIR9            equ	1207	;# 
  3725   0004B8                     PIR10           equ	1208	;# 
  3726   0004B9                     PIR11           equ	1209	;# 
  3727   0004BA                     PIR12           equ	1210	;# 
  3728   0004BB                     PIR13           equ	1211	;# 
  3729   0004BC                     PIR14           equ	1212	;# 
  3730   0004BD                     PIR15           equ	1213	;# 
  3731   0004BE                     LATA            equ	1214	;# 
  3732   0004BF                     LATB            equ	1215	;# 
  3733   0004C0                     LATC            equ	1216	;# 
  3734   0004C6                     TRISA           equ	1222	;# 
  3735   0004C7                     TRISB           equ	1223	;# 
  3736   0004C8                     TRISC           equ	1224	;# 
  3737   0004CA                     TRISE           equ	1226	;# 
  3738   0004CE                     PORTA           equ	1230	;# 
  3739   0004CF                     PORTB           equ	1231	;# 
  3740   0004D0                     PORTC           equ	1232	;# 
  3741   0004D2                     PORTE           equ	1234	;# 
  3742   0004D6                     INTCON0         equ	1238	;# 
  3743   0004D7                     INTCON1         equ	1239	;# 
  3744   0004D8                     STATUS          equ	1240	;# 
  3745   0004D9                     FSR2            equ	1241	;# 
  3746   0004D9                     FSR2L           equ	1241	;# 
  3747   0004DA                     FSR2H           equ	1242	;# 
  3748   0004DB                     PLUSW2          equ	1243	;# 
  3749   0004DC                     PREINC2         equ	1244	;# 
  3750   0004DD                     POSTDEC2        equ	1245	;# 
  3751   0004DE                     POSTINC2        equ	1246	;# 
  3752   0004DF                     INDF2           equ	1247	;# 
  3753   0004E0                     BSR             equ	1248	;# 
  3754   0004E1                     FSR1            equ	1249	;# 
  3755   0004E1                     FSR1L           equ	1249	;# 
  3756   0004E2                     FSR1H           equ	1250	;# 
  3757   0004E3                     PLUSW1          equ	1251	;# 
  3758   0004E4                     PREINC1         equ	1252	;# 
  3759   0004E5                     POSTDEC1        equ	1253	;# 
  3760   0004E6                     POSTINC1        equ	1254	;# 
  3761   0004E7                     INDF1           equ	1255	;# 
  3762   0004E8                     WREG            equ	1256	;# 
  3763   0004E9                     FSR0            equ	1257	;# 
  3764   0004E9                     FSR0L           equ	1257	;# 
  3765   0004EA                     FSR0H           equ	1258	;# 
  3766   0004EB                     PLUSW0          equ	1259	;# 
  3767   0004EC                     PREINC0         equ	1260	;# 
  3768   0004ED                     POSTDEC0        equ	1261	;# 
  3769   0004EE                     POSTINC0        equ	1262	;# 
  3770   0004EF                     INDF0           equ	1263	;# 
  3771   0004F0                     PCON0           equ	1264	;# 
  3772   0004F1                     PCON1           equ	1265	;# 
  3773   0004F2                     CPUDOZE         equ	1266	;# 
  3774   0004F3                     PROD            equ	1267	;# 
  3775   0004F3                     PRODL           equ	1267	;# 
  3776   0004F4                     PRODH           equ	1268	;# 
  3777   0004F5                     TABLAT          equ	1269	;# 
  3778   0004F6                     TBLPTR          equ	1270	;# 
  3779   0004F6                     TBLPTRL         equ	1270	;# 
  3780   0004F7                     TBLPTRH         equ	1271	;# 
  3781   0004F8                     TBLPTRU         equ	1272	;# 
  3782   0004F9                     PCLAT           equ	1273	;# 
  3783   0004F9                     PCL             equ	1273	;# 
  3784   0004FA                     PCLATH          equ	1274	;# 
  3785   0004FB                     PCLATU          equ	1275	;# 
  3786   0004FC                     STKPTR          equ	1276	;# 
  3787   0004FD                     TOS             equ	1277	;# 
  3788   0004FD                     TOSL            equ	1277	;# 
  3789   0004FE                     TOSH            equ	1278	;# 
  3790   0004FF                     TOSU            equ	1279	;# 
  3791   000038                     BOOTREG         equ	56	;# 
  3792   000039                     CLKRCON         equ	57	;# 
  3793   00003A                     CLKRCLK         equ	58	;# 
  3794   000040                     NVMCON0         equ	64	;# 
  3795   000041                     NVMCON1         equ	65	;# 
  3796   000042                     NVMLOCK         equ	66	;# 
  3797   000043                     NVMADR          equ	67	;# 
  3798   000043                     NVMADRL         equ	67	;# 
  3799   000044                     NVMADRH         equ	68	;# 
  3800   000045                     NVMADRU         equ	69	;# 
  3801   000046                     NVMDAT          equ	70	;# 
  3802   000046                     NVMDATL         equ	70	;# 
  3803   000047                     NVMDATH         equ	71	;# 
  3804   000048                     VREGCON         equ	72	;# 
  3805   000049                     BORCON          equ	73	;# 
  3806   00004A                     HLVDCON0        equ	74	;# 
  3807   00004B                     HLVDCON1        equ	75	;# 
  3808   00004C                     ZCDCON          equ	76	;# 
  3809   000060                     PMD0            equ	96	;# 
  3810   000061                     PMD1            equ	97	;# 
  3811   000062                     PMD2            equ	98	;# 
  3812   000063                     PMD3            equ	99	;# 
  3813   000064                     PMD4            equ	100	;# 
  3814   000065                     PMD5            equ	101	;# 
  3815   000066                     PMD6            equ	102	;# 
  3816   000067                     PMD7            equ	103	;# 
  3817   000068                     PMD8            equ	104	;# 
  3818   00006A                     MD1CON0         equ	106	;# 
  3819   00006B                     MD1CON1         equ	107	;# 
  3820   00006C                     MD1SRC          equ	108	;# 
  3821   00006D                     MD1CARL         equ	109	;# 
  3822   00006E                     MD1CARH         equ	110	;# 
  3823   00006F                     CMOUT           equ	111	;# 
  3824   000070                     CM1CON0         equ	112	;# 
  3825   000071                     CM1CON1         equ	113	;# 
  3826   000072                     CM1NCH          equ	114	;# 
  3827   000073                     CM1PCH          equ	115	;# 
  3828   000074                     CM2CON0         equ	116	;# 
  3829   000075                     CM2CON1         equ	117	;# 
  3830   000076                     CM2NCH          equ	118	;# 
  3831   000077                     CM2PCH          equ	119	;# 
  3832   000078                     WDTCON0         equ	120	;# 
  3833   000079                     WDTCON1         equ	121	;# 
  3834   00007A                     WDTPSL          equ	122	;# 
  3835   00007B                     WDTPSH          equ	123	;# 
  3836   00007C                     WDTTMR          equ	124	;# 
  3837   00007D                     DAC1DAT         equ	125	;# 
  3838   00007D                     DAC1DATL        equ	125	;# 
  3839   00007F                     DAC1CON         equ	127	;# 
  3840   000080                     SPI1RXB         equ	128	;# 
  3841   000081                     SPI1TXB         equ	129	;# 
  3842   000082                     SPI1TCNT        equ	130	;# 
  3843   000082                     SPI1TCNTL       equ	130	;# 
  3844   000083                     SPI1TCNTH       equ	131	;# 
  3845   000084                     SPI1CON0        equ	132	;# 
  3846   000085                     SPI1CON1        equ	133	;# 
  3847   000086                     SPI1CON2        equ	134	;# 
  3848   000087                     SPI1STATUS      equ	135	;# 
  3849   000088                     SPI1TWIDTH      equ	136	;# 
  3850   000089                     SPI1BAUD        equ	137	;# 
  3851   00008A                     SPI1INTF        equ	138	;# 
  3852   00008B                     SPI1INTE        equ	139	;# 
  3853   00008C                     SPI1CLK         equ	140	;# 
  3854   00008D                     SPI2RXB         equ	141	;# 
  3855   00008E                     SPI2TXB         equ	142	;# 
  3856   00008F                     SPI2TCNT        equ	143	;# 
  3857   00008F                     SPI2TCNTL       equ	143	;# 
  3858   000090                     SPI2TCNTH       equ	144	;# 
  3859   000091                     SPI2CON0        equ	145	;# 
  3860   000092                     SPI2CON1        equ	146	;# 
  3861   000093                     SPI2CON2        equ	147	;# 
  3862   000094                     SPI2STATUS      equ	148	;# 
  3863   000095                     SPI2TWIDTH      equ	149	;# 
  3864   000096                     SPI2BAUD        equ	150	;# 
  3865   000097                     SPI2INTF        equ	151	;# 
  3866   000098                     SPI2INTE        equ	152	;# 
  3867   000099                     SPI2CLK         equ	153	;# 
  3868   0000AC                     ACTCON          equ	172	;# 
  3869   0000AD                     OSCCON1         equ	173	;# 
  3870   0000AE                     OSCCON2         equ	174	;# 
  3871   0000AF                     OSCCON3         equ	175	;# 
  3872   0000B0                     OSCTUNE         equ	176	;# 
  3873   0000B1                     OSCFRQ          equ	177	;# 
  3874   0000B1                     OSCFREQ         equ	177	;# 
  3875   0000B2                     OSCSTAT         equ	178	;# 
  3876   0000B2                     OSCSTAT1        equ	178	;# 
  3877   0000B3                     OSCEN           equ	179	;# 
  3878   0000B4                     PRLOCK          equ	180	;# 
  3879   0000B5                     SCANPR          equ	181	;# 
  3880   0000B6                     DMA1PR          equ	182	;# 
  3881   0000B7                     DMA2PR          equ	183	;# 
  3882   0000B8                     DMA3PR          equ	184	;# 
  3883   0000B9                     DMA4PR          equ	185	;# 
  3884   0000BA                     DMA5PR          equ	186	;# 
  3885   0000BB                     DMA6PR          equ	187	;# 
  3886   0000BC                     DMA7PR          equ	188	;# 
  3887   0000BD                     DMA8PR          equ	189	;# 
  3888   0000BE                     MAINPR          equ	190	;# 
  3889   0000BF                     ISRPR           equ	191	;# 
  3890   0000D4                     CLCDATA         equ	212	;# 
  3891   0000D5                     CLCSELECT       equ	213	;# 
  3892   0000D6                     CLCnCON         equ	214	;# 
  3893   0000D7                     CLCnPOL         equ	215	;# 
  3894   0000D8                     CLCnSEL0        equ	216	;# 
  3895   0000D9                     CLCnSEL1        equ	217	;# 
  3896   0000DA                     CLCnSEL2        equ	218	;# 
  3897   0000DB                     CLCnSEL3        equ	219	;# 
  3898   0000DC                     CLCnGLS0        equ	220	;# 
  3899   0000DD                     CLCnGLS1        equ	221	;# 
  3900   0000DE                     CLCnGLS2        equ	222	;# 
  3901   0000DF                     CLCnGLS3        equ	223	;# 
  3902   0000E8                     DMASELECT       equ	232	;# 
  3903   0000E9                     DMAnBUF         equ	233	;# 
  3904   0000EA                     DMAnDCNT        equ	234	;# 
  3905   0000EA                     DMAnDCNTL       equ	234	;# 
  3906   0000EB                     DMAnDCNTH       equ	235	;# 
  3907   0000EC                     DMAnDPTR        equ	236	;# 
  3908   0000EC                     DMAnDPTRL       equ	236	;# 
  3909   0000ED                     DMAnDPTRH       equ	237	;# 
  3910   0000EE                     DMAnDSZ         equ	238	;# 
  3911   0000EE                     DMAnDSZL        equ	238	;# 
  3912   0000EF                     DMAnDSZH        equ	239	;# 
  3913   0000F0                     DMAnDSA         equ	240	;# 
  3914   0000F0                     DMAnDSAL        equ	240	;# 
  3915   0000F1                     DMAnDSAH        equ	241	;# 
  3916   0000F2                     DMAnSCNT        equ	242	;# 
  3917   0000F2                     DMAnSCNTL       equ	242	;# 
  3918   0000F3                     DMAnSCNTH       equ	243	;# 
  3919   0000F4                     DMAnSPTR        equ	244	;# 
  3920   0000F4                     DMAnSPTRL       equ	244	;# 
  3921   0000F5                     DMAnSPTRH       equ	245	;# 
  3922   0000F6                     DMAnSPTRU       equ	246	;# 
  3923   0000F7                     DMAnSSZ         equ	247	;# 
  3924   0000F7                     DMAnSSZL        equ	247	;# 
  3925   0000F8                     DMAnSSZH        equ	248	;# 
  3926   0000F9                     DMAnSSA         equ	249	;# 
  3927   0000F9                     DMAnSSAL        equ	249	;# 
  3928   0000FA                     DMAnSSAH        equ	250	;# 
  3929   0000FB                     DMAnSSAU        equ	251	;# 
  3930   0000FC                     DMAnCON0        equ	252	;# 
  3931   0000FD                     DMAnCON1        equ	253	;# 
  3932   0000FE                     DMAnAIRQ        equ	254	;# 
  3933   0000FF                     DMAnSIRQ        equ	255	;# 
  3934   000100                     C1CONL          equ	256	;# 
  3935   000101                     C1CONH          equ	257	;# 
  3936   000102                     C1CONU          equ	258	;# 
  3937   000103                     C1CONT          equ	259	;# 
  3938   000104                     C1NBTCFGL       equ	260	;# 
  3939   000105                     C1NBTCFGH       equ	261	;# 
  3940   000106                     C1NBTCFGU       equ	262	;# 
  3941   000107                     C1NBTCFGT       equ	263	;# 
  3942   000108                     C1DBTCFGL       equ	264	;# 
  3943   000109                     C1DBTCFGH       equ	265	;# 
  3944   00010A                     C1DBTCFGU       equ	266	;# 
  3945   00010B                     C1DBTCFGT       equ	267	;# 
  3946   00010C                     C1TDCL          equ	268	;# 
  3947   00010D                     C1TDCH          equ	269	;# 
  3948   00010E                     C1TDCU          equ	270	;# 
  3949   000110                     C1TBC           equ	272	;# 
  3950   000110                     C1TBCL          equ	272	;# 
  3951   000111                     C1TBCH          equ	273	;# 
  3952   000112                     C1TBCU          equ	274	;# 
  3953   000113                     C1TBCT          equ	275	;# 
  3954   000114                     C1TSCONL        equ	276	;# 
  3955   000115                     C1TSCONH        equ	277	;# 
  3956   000116                     C1TSCONU        equ	278	;# 
  3957   000117                     C1TSCONT        equ	279	;# 
  3958   000118                     C1VECL          equ	280	;# 
  3959   000119                     C1VECH          equ	281	;# 
  3960   00011A                     C1VECU          equ	282	;# 
  3961   00011B                     C1VECT          equ	283	;# 
  3962   00011C                     C1INTL          equ	284	;# 
  3963   00011D                     C1INTH          equ	285	;# 
  3964   00011E                     C1INTU          equ	286	;# 
  3965   00011F                     C1INTT          equ	287	;# 
  3966   000120                     C1RXIF          equ	288	;# 
  3967   000120                     C1RXIFL         equ	288	;# 
  3968   000121                     C1RXIFH         equ	289	;# 
  3969   000122                     C1RXIFU         equ	290	;# 
  3970   000123                     C1RXIFT         equ	291	;# 
  3971   000124                     C1TXIF          equ	292	;# 
  3972   000124                     C1TXIFL         equ	292	;# 
  3973   000125                     C1TXIFH         equ	293	;# 
  3974   000126                     C1TXIFU         equ	294	;# 
  3975   000127                     C1TXIFT         equ	295	;# 
  3976   000128                     C1RXOVIF        equ	296	;# 
  3977   000128                     C1RXOVIFL       equ	296	;# 
  3978   000129                     C1RXOVIFH       equ	297	;# 
  3979   00012A                     C1RXOVIFU       equ	298	;# 
  3980   00012B                     C1RXOVIFT       equ	299	;# 
  3981   00012C                     C1TXATIF        equ	300	;# 
  3982   00012C                     C1TXATIFL       equ	300	;# 
  3983   00012D                     C1TXATIFH       equ	301	;# 
  3984   00012E                     C1TXATIFU       equ	302	;# 
  3985   00012F                     C1TXATIFT       equ	303	;# 
  3986   000130                     C1TXREQ         equ	304	;# 
  3987   000130                     C1TXREQL        equ	304	;# 
  3988   000131                     C1TXREQH        equ	305	;# 
  3989   000132                     C1TXREQU        equ	306	;# 
  3990   000133                     C1TXREQT        equ	307	;# 
  3991   000134                     C1TRECL         equ	308	;# 
  3992   000135                     C1TRECH         equ	309	;# 
  3993   000136                     C1TRECU         equ	310	;# 
  3994   000137                     C1TRECT         equ	311	;# 
  3995   000138                     C1BDIAG0L       equ	312	;# 
  3996   000139                     C1BDIAG0H       equ	313	;# 
  3997   00013C                     C1BDIAG1L       equ	316	;# 
  3998   00013D                     C1BDIAG1H       equ	317	;# 
  3999   00013E                     C1BDIAG1U       equ	318	;# 
  4000   00013F                     C1BDIAG1T       equ	319	;# 
  4001   000140                     C1TEFCONL       equ	320	;# 
  4002   000141                     C1TEFCONH       equ	321	;# 
  4003   000142                     C1TEFCONU       equ	322	;# 
  4004   000143                     C1TEFCONT       equ	323	;# 
  4005   000144                     C1TEFSTAL       equ	324	;# 
  4006   000145                     C1TEFSTAH       equ	325	;# 
  4007   000146                     C1TEFSTAU       equ	326	;# 
  4008   000147                     C1TEFSTAT       equ	327	;# 
  4009   000148                     C1TEFUA         equ	328	;# 
  4010   000148                     C1TEFUAL        equ	328	;# 
  4011   000149                     C1TEFUAH        equ	329	;# 
  4012   00014A                     C1TEFUAU        equ	330	;# 
  4013   00014B                     C1TEFUAT        equ	331	;# 
  4014   00014C                     C1FIFOBA        equ	332	;# 
  4015   00014C                     C1FIFOBAL       equ	332	;# 
  4016   00014D                     C1FIFOBAH       equ	333	;# 
  4017   00014E                     C1FIFOBAU       equ	334	;# 
  4018   00014F                     C1FIFOBAT       equ	335	;# 
  4019   000150                     C1TXQCONL       equ	336	;# 
  4020   000151                     C1TXQCONH       equ	337	;# 
  4021   000152                     C1TXQCONU       equ	338	;# 
  4022   000153                     C1TXQCONT       equ	339	;# 
  4023   000154                     C1TXQSTAL       equ	340	;# 
  4024   000155                     C1TXQSTAH       equ	341	;# 
  4025   000156                     C1TXQSTAU       equ	342	;# 
  4026   000157                     C1TXQSTAT       equ	343	;# 
  4027   000158                     C1TXQUA         equ	344	;# 
  4028   000158                     C1TXQUAL        equ	344	;# 
  4029   000159                     C1TXQUAH        equ	345	;# 
  4030   00015A                     C1TXQUAU        equ	346	;# 
  4031   00015B                     C1TXQUAT        equ	347	;# 
  4032   00015C                     C1FIFOCON1      equ	348	;# 
  4033   00015C                     C1FIFOCON1L     equ	348	;# 
  4034   00015D                     C1FIFOCON1H     equ	349	;# 
  4035   00015E                     C1FIFOCON1U     equ	350	;# 
  4036   00015F                     C1FIFOCON1T     equ	351	;# 
  4037   000160                     C1FIFOSTA1      equ	352	;# 
  4038   000160                     C1FIFOSTA1L     equ	352	;# 
  4039   000161                     C1FIFOSTA1H     equ	353	;# 
  4040   000162                     C1FIFOSTA1U     equ	354	;# 
  4041   000163                     C1FIFOSTA1T     equ	355	;# 
  4042   000164                     C1FIFOUA1       equ	356	;# 
  4043   000164                     C1FIFOUA1L      equ	356	;# 
  4044   000165                     C1FIFOUA1H      equ	357	;# 
  4045   000166                     C1FIFOUA1U      equ	358	;# 
  4046   000167                     C1FIFOUA1T      equ	359	;# 
  4047   000168                     C1FIFOCON2      equ	360	;# 
  4048   000168                     C1FIFOCON2L     equ	360	;# 
  4049   000169                     C1FIFOCON2H     equ	361	;# 
  4050   00016A                     C1FIFOCON2U     equ	362	;# 
  4051   00016B                     C1FIFOCON2T     equ	363	;# 
  4052   00016C                     C1FIFOSTA2      equ	364	;# 
  4053   00016C                     C1FIFOSTA2L     equ	364	;# 
  4054   00016D                     C1FIFOSTA2H     equ	365	;# 
  4055   00016E                     C1FIFOSTA2U     equ	366	;# 
  4056   00016F                     C1FIFOSTA2T     equ	367	;# 
  4057   000170                     C1FIFOUA2       equ	368	;# 
  4058   000170                     C1FIFOUA2L      equ	368	;# 
  4059   000171                     C1FIFOUA2H      equ	369	;# 
  4060   000172                     C1FIFOUA2U      equ	370	;# 
  4061   000173                     C1FIFOUA2T      equ	371	;# 
  4062   000174                     C1FIFOCON3      equ	372	;# 
  4063   000174                     C1FIFOCON3L     equ	372	;# 
  4064   000175                     C1FIFOCON3H     equ	373	;# 
  4065   000176                     C1FIFOCON3U     equ	374	;# 
  4066   000177                     C1FIFOCON3T     equ	375	;# 
  4067   000178                     C1FIFOSTA3      equ	376	;# 
  4068   000178                     C1FIFOSTA3L     equ	376	;# 
  4069   000179                     C1FIFOSTA3H     equ	377	;# 
  4070   00017A                     C1FIFOSTA3U     equ	378	;# 
  4071   00017B                     C1FIFOSTA3T     equ	379	;# 
  4072   00017C                     C1FIFOUA3       equ	380	;# 
  4073   00017C                     C1FIFOUA3L      equ	380	;# 
  4074   00017D                     C1FIFOUA3H      equ	381	;# 
  4075   00017E                     C1FIFOUA3U      equ	382	;# 
  4076   00017F                     C1FIFOUA3T      equ	383	;# 
  4077   000180                     C1FLTCON0L      equ	384	;# 
  4078   000181                     C1FLTCON0H      equ	385	;# 
  4079   000182                     C1FLTCON0U      equ	386	;# 
  4080   000183                     C1FLTCON0T      equ	387	;# 
  4081   000184                     C1FLTCON1L      equ	388	;# 
  4082   000185                     C1FLTCON1H      equ	389	;# 
  4083   000186                     C1FLTCON1U      equ	390	;# 
  4084   000187                     C1FLTCON1T      equ	391	;# 
  4085   000188                     C1FLTCON2L      equ	392	;# 
  4086   000189                     C1FLTCON2H      equ	393	;# 
  4087   00018A                     C1FLTCON2U      equ	394	;# 
  4088   00018B                     C1FLTCON2T      equ	395	;# 
  4089   00018C                     C1FLTOBJ0       equ	396	;# 
  4090   00018C                     C1FLTOBJ0L      equ	396	;# 
  4091   00018D                     C1FLTOBJ0H      equ	397	;# 
  4092   00018E                     C1FLTOBJ0U      equ	398	;# 
  4093   00018F                     C1FLTOBJ0T      equ	399	;# 
  4094   000190                     C1MASK0         equ	400	;# 
  4095   000190                     C1MASK0L        equ	400	;# 
  4096   000191                     C1MASK0H        equ	401	;# 
  4097   000192                     C1MASK0U        equ	402	;# 
  4098   000193                     C1MASK0T        equ	403	;# 
  4099   000194                     C1FLTOBJ1       equ	404	;# 
  4100   000194                     C1FLTOBJ1L      equ	404	;# 
  4101   000195                     C1FLTOBJ1H      equ	405	;# 
  4102   000196                     C1FLTOBJ1U      equ	406	;# 
  4103   000197                     C1FLTOBJ1T      equ	407	;# 
  4104   000198                     C1MASK1         equ	408	;# 
  4105   000198                     C1MASK1L        equ	408	;# 
  4106   000199                     C1MASK1H        equ	409	;# 
  4107   00019A                     C1MASK1U        equ	410	;# 
  4108   00019B                     C1MASK1T        equ	411	;# 
  4109   00019C                     C1FLTOBJ2       equ	412	;# 
  4110   00019C                     C1FLTOBJ2L      equ	412	;# 
  4111   00019D                     C1FLTOBJ2H      equ	413	;# 
  4112   00019E                     C1FLTOBJ2U      equ	414	;# 
  4113   00019F                     C1FLTOBJ2T      equ	415	;# 
  4114   0001A0                     C1MASK2         equ	416	;# 
  4115   0001A0                     C1MASK2L        equ	416	;# 
  4116   0001A1                     C1MASK2H        equ	417	;# 
  4117   0001A2                     C1MASK2U        equ	418	;# 
  4118   0001A3                     C1MASK2T        equ	419	;# 
  4119   0001A4                     C1FLTOBJ3       equ	420	;# 
  4120   0001A4                     C1FLTOBJ3L      equ	420	;# 
  4121   0001A5                     C1FLTOBJ3H      equ	421	;# 
  4122   0001A6                     C1FLTOBJ3U      equ	422	;# 
  4123   0001A7                     C1FLTOBJ3T      equ	423	;# 
  4124   0001A8                     C1MASK3         equ	424	;# 
  4125   0001A8                     C1MASK3L        equ	424	;# 
  4126   0001A9                     C1MASK3H        equ	425	;# 
  4127   0001AA                     C1MASK3U        equ	426	;# 
  4128   0001AB                     C1MASK3T        equ	427	;# 
  4129   0001AC                     C1FLTOBJ4       equ	428	;# 
  4130   0001AC                     C1FLTOBJ4L      equ	428	;# 
  4131   0001AD                     C1FLTOBJ4H      equ	429	;# 
  4132   0001AE                     C1FLTOBJ4U      equ	430	;# 
  4133   0001AF                     C1FLTOBJ4T      equ	431	;# 
  4134   0001B0                     C1MASK4         equ	432	;# 
  4135   0001B0                     C1MASK4L        equ	432	;# 
  4136   0001B1                     C1MASK4H        equ	433	;# 
  4137   0001B2                     C1MASK4U        equ	434	;# 
  4138   0001B3                     C1MASK4T        equ	435	;# 
  4139   0001B4                     C1FLTOBJ5       equ	436	;# 
  4140   0001B4                     C1FLTOBJ5L      equ	436	;# 
  4141   0001B5                     C1FLTOBJ5H      equ	437	;# 
  4142   0001B6                     C1FLTOBJ5U      equ	438	;# 
  4143   0001B7                     C1FLTOBJ5T      equ	439	;# 
  4144   0001B8                     C1MASK5         equ	440	;# 
  4145   0001B8                     C1MASK5L        equ	440	;# 
  4146   0001B9                     C1MASK5H        equ	441	;# 
  4147   0001BA                     C1MASK5U        equ	442	;# 
  4148   0001BB                     C1MASK5T        equ	443	;# 
  4149   0001BC                     C1FLTOBJ6       equ	444	;# 
  4150   0001BC                     C1FLTOBJ6L      equ	444	;# 
  4151   0001BD                     C1FLTOBJ6H      equ	445	;# 
  4152   0001BE                     C1FLTOBJ6U      equ	446	;# 
  4153   0001BF                     C1FLTOBJ6T      equ	447	;# 
  4154   0001C0                     C1MASK6         equ	448	;# 
  4155   0001C0                     C1MASK6L        equ	448	;# 
  4156   0001C1                     C1MASK6H        equ	449	;# 
  4157   0001C2                     C1MASK6U        equ	450	;# 
  4158   0001C3                     C1MASK6T        equ	451	;# 
  4159   0001C4                     C1FLTOBJ7       equ	452	;# 
  4160   0001C4                     C1FLTOBJ7L      equ	452	;# 
  4161   0001C5                     C1FLTOBJ7H      equ	453	;# 
  4162   0001C6                     C1FLTOBJ7U      equ	454	;# 
  4163   0001C7                     C1FLTOBJ7T      equ	455	;# 
  4164   0001C8                     C1MASK7         equ	456	;# 
  4165   0001C8                     C1MASK7L        equ	456	;# 
  4166   0001C9                     C1MASK7H        equ	457	;# 
  4167   0001CA                     C1MASK7U        equ	458	;# 
  4168   0001CB                     C1MASK7T        equ	459	;# 
  4169   0001CC                     C1FLTOBJ8       equ	460	;# 
  4170   0001CC                     C1FLTOBJ8L      equ	460	;# 
  4171   0001CD                     C1FLTOBJ8H      equ	461	;# 
  4172   0001CE                     C1FLTOBJ8U      equ	462	;# 
  4173   0001CF                     C1FLTOBJ8T      equ	463	;# 
  4174   0001D0                     C1MASK8         equ	464	;# 
  4175   0001D0                     C1MASK8L        equ	464	;# 
  4176   0001D1                     C1MASK8H        equ	465	;# 
  4177   0001D2                     C1MASK8U        equ	466	;# 
  4178   0001D3                     C1MASK8T        equ	467	;# 
  4179   0001D4                     C1FLTOBJ9       equ	468	;# 
  4180   0001D4                     C1FLTOBJ9L      equ	468	;# 
  4181   0001D5                     C1FLTOBJ9H      equ	469	;# 
  4182   0001D6                     C1FLTOBJ9U      equ	470	;# 
  4183   0001D7                     C1FLTOBJ9T      equ	471	;# 
  4184   0001D8                     C1MASK9         equ	472	;# 
  4185   0001D8                     C1MASK9L        equ	472	;# 
  4186   0001D9                     C1MASK9H        equ	473	;# 
  4187   0001DA                     C1MASK9U        equ	474	;# 
  4188   0001DB                     C1MASK9T        equ	475	;# 
  4189   0001DC                     C1FLTOBJ10      equ	476	;# 
  4190   0001DC                     C1FLTOBJ10L     equ	476	;# 
  4191   0001DD                     C1FLTOBJ10H     equ	477	;# 
  4192   0001DE                     C1FLTOBJ10U     equ	478	;# 
  4193   0001DF                     C1FLTOBJ10T     equ	479	;# 
  4194   0001E0                     C1MASK10        equ	480	;# 
  4195   0001E0                     C1MASK10L       equ	480	;# 
  4196   0001E1                     C1MASK10H       equ	481	;# 
  4197   0001E2                     C1MASK10U       equ	482	;# 
  4198   0001E3                     C1MASK10T       equ	483	;# 
  4199   0001E4                     C1FLTOBJ11      equ	484	;# 
  4200   0001E4                     C1FLTOBJ11L     equ	484	;# 
  4201   0001E5                     C1FLTOBJ11H     equ	485	;# 
  4202   0001E6                     C1FLTOBJ11U     equ	486	;# 
  4203   0001E7                     C1FLTOBJ11T     equ	487	;# 
  4204   0001E8                     C1MASK11        equ	488	;# 
  4205   0001E8                     C1MASK11L       equ	488	;# 
  4206   0001E9                     C1MASK11H       equ	489	;# 
  4207   0001EA                     C1MASK11U       equ	490	;# 
  4208   0001EB                     C1MASK11T       equ	491	;# 
  4209   000200                     PPSLOCK         equ	512	;# 
  4210   000201                     RA0PPS          equ	513	;# 
  4211   000202                     RA1PPS          equ	514	;# 
  4212   000203                     RA2PPS          equ	515	;# 
  4213   000204                     RA3PPS          equ	516	;# 
  4214   000205                     RA4PPS          equ	517	;# 
  4215   000206                     RA5PPS          equ	518	;# 
  4216   000207                     RA6PPS          equ	519	;# 
  4217   000208                     RA7PPS          equ	520	;# 
  4218   000209                     RB0PPS          equ	521	;# 
  4219   00020A                     RB1PPS          equ	522	;# 
  4220   00020B                     RB2PPS          equ	523	;# 
  4221   00020C                     RB3PPS          equ	524	;# 
  4222   00020D                     RB4PPS          equ	525	;# 
  4223   00020E                     RB5PPS          equ	526	;# 
  4224   00020F                     RB6PPS          equ	527	;# 
  4225   000210                     RB7PPS          equ	528	;# 
  4226   000211                     RC0PPS          equ	529	;# 
  4227   000212                     RC1PPS          equ	530	;# 
  4228   000213                     RC2PPS          equ	531	;# 
  4229   000214                     RC3PPS          equ	532	;# 
  4230   000215                     RC4PPS          equ	533	;# 
  4231   000216                     RC5PPS          equ	534	;# 
  4232   000217                     RC6PPS          equ	535	;# 
  4233   000218                     RC7PPS          equ	536	;# 
  4234   00023D                     CANRXPPS        equ	573	;# 
  4235   00023E                     INT0PPS         equ	574	;# 
  4236   00023F                     INT1PPS         equ	575	;# 
  4237   000240                     INT2PPS         equ	576	;# 
  4238   000241                     T0CKIPPS        equ	577	;# 
  4239   000242                     T1CKIPPS        equ	578	;# 
  4240   000243                     T1GPPS          equ	579	;# 
  4241   000244                     T3CKIPPS        equ	580	;# 
  4242   000245                     T3GPPS          equ	581	;# 
  4243   000246                     T5CKIPPS        equ	582	;# 
  4244   000247                     T5GPPS          equ	583	;# 
  4245   000248                     T2INPPS         equ	584	;# 
  4246   000249                     T4INPPS         equ	585	;# 
  4247   00024A                     T6INPPS         equ	586	;# 
  4248   00024B                     TUIN0PPS        equ	587	;# 
  4249   00024C                     TUIN1PPS        equ	588	;# 
  4250   00024F                     CCP1PPS         equ	591	;# 
  4251   000250                     CCP2PPS         equ	592	;# 
  4252   000251                     CCP3PPS         equ	593	;# 
  4253   000253                     PWM1ERSPPS      equ	595	;# 
  4254   000254                     PWM2ERSPPS      equ	596	;# 
  4255   000255                     PWM3ERSPPS      equ	597	;# 
  4256   000256                     PWM4ERSPPS      equ	598	;# 
  4257   000257                     PWMIN0PPS       equ	599	;# 
  4258   000258                     PWMIN1PPS       equ	600	;# 
  4259   000259                     SMT1WINPPS      equ	601	;# 
  4260   00025A                     SMT1SIGPPS      equ	602	;# 
  4261   00025B                     CWG1PPS         equ	603	;# 
  4262   00025B                     CWG1INPPS       equ	603	;# 
  4263   00025C                     CWG2PPS         equ	604	;# 
  4264   00025C                     CWG2INPPS       equ	604	;# 
  4265   00025D                     CWG3PPS         equ	605	;# 
  4266   00025D                     CWG3INPPS       equ	605	;# 
  4267   00025E                     MD1CARLPPS      equ	606	;# 
  4268   00025E                     MDCARLPPS       equ	606	;# 
  4269   00025F                     MD1CARHPPS      equ	607	;# 
  4270   00025F                     MDCARHPPS       equ	607	;# 
  4271   000260                     MD1SRCPPS       equ	608	;# 
  4272   000260                     MDSRCPPS        equ	608	;# 
  4273   000261                     CLCIN0PPS       equ	609	;# 
  4274   000262                     CLCIN1PPS       equ	610	;# 
  4275   000263                     CLCIN2PPS       equ	611	;# 
  4276   000264                     CLCIN3PPS       equ	612	;# 
  4277   000265                     CLCIN4PPS       equ	613	;# 
  4278   000266                     CLCIN5PPS       equ	614	;# 
  4279   000267                     CLCIN6PPS       equ	615	;# 
  4280   000268                     CLCIN7PPS       equ	616	;# 
  4281   000269                     ADACTPPS        equ	617	;# 
  4282   00026A                     SPI1SCKPPS      equ	618	;# 
  4283   00026B                     SPI1SDIPPS      equ	619	;# 
  4284   00026C                     SPI1SSPPS       equ	620	;# 
  4285   00026D                     SPI2SCKPPS      equ	621	;# 
  4286   00026E                     SPI2SDIPPS      equ	622	;# 
  4287   00026F                     SPI2SSPPS       equ	623	;# 
  4288   000270                     I2C1SDAPPS      equ	624	;# 
  4289   000271                     I2C1SCLPPS      equ	625	;# 
  4290   000272                     U1RXPPS         equ	626	;# 
  4291   000273                     U1CTSPPS        equ	627	;# 
  4292   000274                     U2RXPPS         equ	628	;# 
  4293   000275                     U2CTSPPS        equ	629	;# 
  4294   000276                     U3RXPPS         equ	630	;# 
  4295   000277                     U3CTSPPS        equ	631	;# 
  4296   000278                     U4RXPPS         equ	632	;# 
  4297   000279                     U4CTSPPS        equ	633	;# 
  4298   00027A                     U5RXPPS         equ	634	;# 
  4299   00027B                     U5CTSPPS        equ	635	;# 
  4300   000286                     RC4I2C          equ	646	;# 
  4301   000287                     RC3I2C          equ	647	;# 
  4302   000288                     RB2I2C          equ	648	;# 
  4303   000289                     RB1I2C          equ	649	;# 
  4304   00028A                     I2C1RXB         equ	650	;# 
  4305   00028B                     I2C1TXB         equ	651	;# 
  4306   00028C                     I2C1CNTL        equ	652	;# 
  4307   00028D                     I2C1CNTH        equ	653	;# 
  4308   00028E                     I2C1ADB0        equ	654	;# 
  4309   00028F                     I2C1ADB1        equ	655	;# 
  4310   000290                     I2C1ADR0        equ	656	;# 
  4311   000291                     I2C1ADR1        equ	657	;# 
  4312   000292                     I2C1ADR2        equ	658	;# 
  4313   000293                     I2C1ADR3        equ	659	;# 
  4314   000294                     I2C1CON0        equ	660	;# 
  4315   000295                     I2C1CON1        equ	661	;# 
  4316   000296                     I2C1CON2        equ	662	;# 
  4317   000297                     I2C1ERR         equ	663	;# 
  4318   000298                     I2C1STAT0       equ	664	;# 
  4319   000299                     I2C1STAT1       equ	665	;# 
  4320   00029A                     I2C1PIR         equ	666	;# 
  4321   00029B                     I2C1PIE         equ	667	;# 
  4322   00029C                     I2C1BTO         equ	668	;# 
  4323   00029D                     I2C1BAUD        equ	669	;# 
  4324   00029E                     I2C1CLK         equ	670	;# 
  4325   00029F                     I2C1BTOC        equ	671	;# 
  4326   0002A1                     U1RXB           equ	673	;# 
  4327   0002A1                     U1RXBL          equ	673	;# 
  4328   0002A2                     U1RXCHK         equ	674	;# 
  4329   0002A3                     U1TXB           equ	675	;# 
  4330   0002A3                     U1TXBL          equ	675	;# 
  4331   0002A4                     U1TXCHK         equ	676	;# 
  4332   0002A5                     U1P1            equ	677	;# 
  4333   0002A5                     U1P1L           equ	677	;# 
  4334   0002A6                     U1P1H           equ	678	;# 
  4335   0002A7                     U1P2            equ	679	;# 
  4336   0002A7                     U1P2L           equ	679	;# 
  4337   0002A8                     U1P2H           equ	680	;# 
  4338   0002A9                     U1P3            equ	681	;# 
  4339   0002A9                     U1P3L           equ	681	;# 
  4340   0002AA                     U1P3H           equ	682	;# 
  4341   0002AB                     U1CON0          equ	683	;# 
  4342   0002AC                     U1CON1          equ	684	;# 
  4343   0002AD                     U1CON2          equ	685	;# 
  4344   0002AE                     U1BRG           equ	686	;# 
  4345   0002AE                     U1BRGL          equ	686	;# 
  4346   0002AF                     U1BRGH          equ	687	;# 
  4347   0002B0                     U1FIFO          equ	688	;# 
  4348   0002B1                     U1UIR           equ	689	;# 
  4349   0002B2                     U1ERRIR         equ	690	;# 
  4350   0002B3                     U1ERRIE         equ	691	;# 
  4351   0002B4                     U2RXB           equ	692	;# 
  4352   0002B4                     U2RXBL          equ	692	;# 
  4353   0002B5                     U2RXCHK         equ	693	;# 
  4354   0002B6                     U2TXB           equ	694	;# 
  4355   0002B6                     U2TXBL          equ	694	;# 
  4356   0002B7                     U2TXCHK         equ	695	;# 
  4357   0002B8                     U2P1            equ	696	;# 
  4358   0002B8                     U2P1L           equ	696	;# 
  4359   0002B9                     U2P1H           equ	697	;# 
  4360   0002BA                     U2P2            equ	698	;# 
  4361   0002BA                     U2P2L           equ	698	;# 
  4362   0002BB                     U2P2H           equ	699	;# 
  4363   0002BC                     U2P3            equ	700	;# 
  4364   0002BC                     U2P3L           equ	700	;# 
  4365   0002BD                     U2P3H           equ	701	;# 
  4366   0002BE                     U2CON0          equ	702	;# 
  4367   0002BF                     U2CON1          equ	703	;# 
  4368   0002C0                     U2CON2          equ	704	;# 
  4369   0002C1                     U2BRG           equ	705	;# 
  4370   0002C1                     U2BRGL          equ	705	;# 
  4371   0002C2                     U2BRGH          equ	706	;# 
  4372   0002C3                     U2FIFO          equ	707	;# 
  4373   0002C4                     U2UIR           equ	708	;# 
  4374   0002C5                     U2ERRIR         equ	709	;# 
  4375   0002C6                     U2ERRIE         equ	710	;# 
  4376   0002C7                     U3RXB           equ	711	;# 
  4377   0002C7                     U3RXBL          equ	711	;# 
  4378   0002C9                     U3TXB           equ	713	;# 
  4379   0002C9                     U3TXBL          equ	713	;# 
  4380   0002CB                     U3P1            equ	715	;# 
  4381   0002CB                     U3P1L           equ	715	;# 
  4382   0002CD                     U3P2            equ	717	;# 
  4383   0002CD                     U3P2L           equ	717	;# 
  4384   0002CF                     U3P3            equ	719	;# 
  4385   0002CF                     U3P3L           equ	719	;# 
  4386   0002D1                     U3CON0          equ	721	;# 
  4387   0002D2                     U3CON1          equ	722	;# 
  4388   0002D3                     U3CON2          equ	723	;# 
  4389   0002D4                     U3BRG           equ	724	;# 
  4390   0002D4                     U3BRGL          equ	724	;# 
  4391   0002D5                     U3BRGH          equ	725	;# 
  4392   0002D6                     U3FIFO          equ	726	;# 
  4393   0002D7                     U3UIR           equ	727	;# 
  4394   0002D8                     U3ERRIR         equ	728	;# 
  4395   0002D9                     U3ERRIE         equ	729	;# 
  4396   0002DA                     U4RXB           equ	730	;# 
  4397   0002DA                     U4RXBL          equ	730	;# 
  4398   0002DC                     U4TXB           equ	732	;# 
  4399   0002DC                     U4TXBL          equ	732	;# 
  4400   0002DE                     U4P1            equ	734	;# 
  4401   0002DE                     U4P1L           equ	734	;# 
  4402   0002E0                     U4P2            equ	736	;# 
  4403   0002E0                     U4P2L           equ	736	;# 
  4404   0002E2                     U4P3            equ	738	;# 
  4405   0002E2                     U4P3L           equ	738	;# 
  4406   0002E4                     U4CON0          equ	740	;# 
  4407   0002E5                     U4CON1          equ	741	;# 
  4408   0002E6                     U4CON2          equ	742	;# 
  4409   0002E7                     U4BRG           equ	743	;# 
  4410   0002E7                     U4BRGL          equ	743	;# 
  4411   0002E8                     U4BRGH          equ	744	;# 
  4412   0002E9                     U4FIFO          equ	745	;# 
  4413   0002EA                     U4UIR           equ	746	;# 
  4414   0002EB                     U4ERRIR         equ	747	;# 
  4415   0002EC                     U4ERRIE         equ	748	;# 
  4416   0002ED                     U5RXB           equ	749	;# 
  4417   0002ED                     U5RXBL          equ	749	;# 
  4418   0002EF                     U5TXB           equ	751	;# 
  4419   0002EF                     U5TXBL          equ	751	;# 
  4420   0002F1                     U5P1            equ	753	;# 
  4421   0002F1                     U5P1L           equ	753	;# 
  4422   0002F3                     U5P2            equ	755	;# 
  4423   0002F3                     U5P2L           equ	755	;# 
  4424   0002F5                     U5P3            equ	757	;# 
  4425   0002F5                     U5P3L           equ	757	;# 
  4426   0002F7                     U5CON0          equ	759	;# 
  4427   0002F8                     U5CON1          equ	760	;# 
  4428   0002F9                     U5CON2          equ	761	;# 
  4429   0002FA                     U5BRG           equ	762	;# 
  4430   0002FA                     U5BRGL          equ	762	;# 
  4431   0002FB                     U5BRGH          equ	763	;# 
  4432   0002FC                     U5FIFO          equ	764	;# 
  4433   0002FD                     U5UIR           equ	765	;# 
  4434   0002FE                     U5ERRIR         equ	766	;# 
  4435   0002FF                     U5ERRIE         equ	767	;# 
  4436   000300                     SMT1TMR         equ	768	;# 
  4437   000300                     SMT1TMRL        equ	768	;# 
  4438   000301                     SMT1TMRH        equ	769	;# 
  4439   000302                     SMT1TMRU        equ	770	;# 
  4440   000303                     SMT1CPR         equ	771	;# 
  4441   000303                     SMT1CPRL        equ	771	;# 
  4442   000304                     SMT1CPRH        equ	772	;# 
  4443   000305                     SMT1CPRU        equ	773	;# 
  4444   000306                     SMT1CPW         equ	774	;# 
  4445   000306                     SMT1CPWL        equ	774	;# 
  4446   000307                     SMT1CPWH        equ	775	;# 
  4447   000308                     SMT1CPWU        equ	776	;# 
  4448   000309                     SMT1PR          equ	777	;# 
  4449   000309                     SMT1PRL         equ	777	;# 
  4450   00030A                     SMT1PRH         equ	778	;# 
  4451   00030B                     SMT1PRU         equ	779	;# 
  4452   00030C                     SMT1CON0        equ	780	;# 
  4453   00030D                     SMT1CON1        equ	781	;# 
  4454   00030E                     SMT1STAT        equ	782	;# 
  4455   00030F                     SMT1CLK         equ	783	;# 
  4456   000310                     SMT1SIG         equ	784	;# 
  4457   000311                     SMT1WIN         equ	785	;# 
  4458   000318                     TMR0L           equ	792	;# 
  4459   000318                     TMR0            equ	792	;# 
  4460   000319                     TMR0H           equ	793	;# 
  4461   000319                     PR0             equ	793	;# 
  4462   00031A                     T0CON0          equ	794	;# 
  4463   00031B                     T0CON1          equ	795	;# 
  4464   00031C                     TMR1            equ	796	;# 
  4465   00031C                     TMR1L           equ	796	;# 
  4466   00031D                     TMR1H           equ	797	;# 
  4467   00031E                     T1CON           equ	798	;# 
  4468   00031E                     TMR1CON         equ	798	;# 
  4469   00031F                     T1GCON          equ	799	;# 
  4470   00031F                     TMR1GCON        equ	799	;# 
  4471   000320                     T1GATE          equ	800	;# 
  4472   000320                     TMR1GATE        equ	800	;# 
  4473   000321                     T1CLK           equ	801	;# 
  4474   000321                     TMR1CLK         equ	801	;# 
  4475   000321                     PR1             equ	801	;# 
  4476   000322                     T2TMR           equ	802	;# 
  4477   000322                     TMR2            equ	802	;# 
  4478   000323                     T2PR            equ	803	;# 
  4479   000323                     PR2             equ	803	;# 
  4480   000324                     T2CON           equ	804	;# 
  4481   000325                     T2HLT           equ	805	;# 
  4482   000326                     T2CLKCON        equ	806	;# 
  4483   000326                     T2CLK           equ	806	;# 
  4484   000327                     T2RST           equ	807	;# 
  4485   000328                     TMR3            equ	808	;# 
  4486   000328                     TMR3L           equ	808	;# 
  4487   000329                     TMR3H           equ	809	;# 
  4488   00032A                     T3CON           equ	810	;# 
  4489   00032A                     TMR3CON         equ	810	;# 
  4490   00032B                     T3GCON          equ	811	;# 
  4491   00032B                     TMR3GCON        equ	811	;# 
  4492   00032C                     T3GATE          equ	812	;# 
  4493   00032C                     TMR3GATE        equ	812	;# 
  4494   00032D                     T3CLK           equ	813	;# 
  4495   00032D                     TMR3CLK         equ	813	;# 
  4496   00032D                     PR3             equ	813	;# 
  4497   00032E                     T4TMR           equ	814	;# 
  4498   00032E                     TMR4            equ	814	;# 
  4499   00032F                     T4PR            equ	815	;# 
  4500   00032F                     PR4             equ	815	;# 
  4501   000330                     T4CON           equ	816	;# 
  4502   000331                     T4HLT           equ	817	;# 
  4503   000332                     T4CLKCON        equ	818	;# 
  4504   000332                     T4CLK           equ	818	;# 
  4505   000333                     T4RST           equ	819	;# 
  4506   000334                     TMR5            equ	820	;# 
  4507   000334                     TMR5L           equ	820	;# 
  4508   000335                     TMR5H           equ	821	;# 
  4509   000336                     T5CON           equ	822	;# 
  4510   000336                     TMR5CON         equ	822	;# 
  4511   000337                     T5GCON          equ	823	;# 
  4512   000337                     TMR5GCON        equ	823	;# 
  4513   000338                     T5GATE          equ	824	;# 
  4514   000338                     TMR5GATE        equ	824	;# 
  4515   000339                     T5CLK           equ	825	;# 
  4516   000339                     TMR5CLK         equ	825	;# 
  4517   000339                     PR5             equ	825	;# 
  4518   00033A                     T6TMR           equ	826	;# 
  4519   00033A                     TMR6            equ	826	;# 
  4520   00033B                     T6PR            equ	827	;# 
  4521   00033B                     PR6             equ	827	;# 
  4522   00033C                     T6CON           equ	828	;# 
  4523   00033D                     T6HLT           equ	829	;# 
  4524   00033E                     T6CLKCON        equ	830	;# 
  4525   00033E                     T6CLK           equ	830	;# 
  4526   00033F                     T6RST           equ	831	;# 
  4527   000340                     CCPR1           equ	832	;# 
  4528   000340                     CCPR1L          equ	832	;# 
  4529   000341                     CCPR1H          equ	833	;# 
  4530   000342                     CCP1CON         equ	834	;# 
  4531   000343                     CCP1CAP         equ	835	;# 
  4532   000344                     CCPR2           equ	836	;# 
  4533   000344                     CCPR2L          equ	836	;# 
  4534   000345                     CCPR2H          equ	837	;# 
  4535   000346                     CCP2CON         equ	838	;# 
  4536   000347                     CCP2CAP         equ	839	;# 
  4537   000348                     CCPR3           equ	840	;# 
  4538   000348                     CCPR3L          equ	840	;# 
  4539   000349                     CCPR3H          equ	841	;# 
  4540   00034A                     CCP3CON         equ	842	;# 
  4541   00034B                     CCP3CAP         equ	843	;# 
  4542   00034C                     CCPTMRS0        equ	844	;# 
  4543   00034F                     CRCDATA         equ	847	;# 
  4544   00034F                     CRCDATAL        equ	847	;# 
  4545   000350                     CRCDATAH        equ	848	;# 
  4546   000351                     CRCDATAU        equ	849	;# 
  4547   000352                     CRCDATAT        equ	850	;# 
  4548   000353                     CRCOUT          equ	851	;# 
  4549   000353                     CRCSHFT         equ	851	;# 
  4550   000353                     CRCXOR          equ	851	;# 
  4551   000353                     CRCOUTL         equ	851	;# 
  4552   000353                     CRCSHFTL        equ	851	;# 
  4553   000353                     CRCSHIFTL       equ	851	;# 
  4554   000353                     CRCXORL         equ	851	;# 
  4555   000354                     CRCOUTH         equ	852	;# 
  4556   000354                     CRCSHFTH        equ	852	;# 
  4557   000354                     CRCSHIFTH       equ	852	;# 
  4558   000354                     CRCXORH         equ	852	;# 
  4559   000355                     CRCOUTU         equ	853	;# 
  4560   000355                     CRCSHFTU        equ	853	;# 
  4561   000355                     CRCSHIFTU       equ	853	;# 
  4562   000355                     CRCXORU         equ	853	;# 
  4563   000356                     CRCOUTT         equ	854	;# 
  4564   000356                     CRCSHFTT        equ	854	;# 
  4565   000356                     CRCSHIFTT       equ	854	;# 
  4566   000356                     CRCXORT         equ	854	;# 
  4567   000357                     CRCCON0         equ	855	;# 
  4568   000358                     CRCCON1         equ	856	;# 
  4569   000359                     CRCCON2         equ	857	;# 
  4570   00035A                     SCANLADR        equ	858	;# 
  4571   00035A                     SCANLADRL       equ	858	;# 
  4572   00035B                     SCANLADRH       equ	859	;# 
  4573   00035C                     SCANLADRU       equ	860	;# 
  4574   00035D                     SCANHADR        equ	861	;# 
  4575   00035D                     SCANHADRL       equ	861	;# 
  4576   00035E                     SCANHADRH       equ	862	;# 
  4577   00035F                     SCANHADRU       equ	863	;# 
  4578   000360                     SCANCON0        equ	864	;# 
  4579   000361                     SCANTRIG        equ	865	;# 
  4580   000362                     IPR0            equ	866	;# 
  4581   000363                     IPR1            equ	867	;# 
  4582   000364                     IPR2            equ	868	;# 
  4583   000365                     IPR3            equ	869	;# 
  4584   000366                     IPR4            equ	870	;# 
  4585   000367                     IPR5            equ	871	;# 
  4586   000368                     IPR6            equ	872	;# 
  4587   000369                     IPR7            equ	873	;# 
  4588   00036A                     IPR8            equ	874	;# 
  4589   00036B                     IPR9            equ	875	;# 
  4590   00036C                     IPR10           equ	876	;# 
  4591   00036D                     IPR11           equ	877	;# 
  4592   00036E                     IPR12           equ	878	;# 
  4593   00036F                     IPR13           equ	879	;# 
  4594   000370                     IPR14           equ	880	;# 
  4595   000371                     IPR15           equ	881	;# 
  4596   000373                     STATUS_CSHAD    equ	883	;# 
  4597   000374                     WREG_CSHAD      equ	884	;# 
  4598   000375                     BSR_CSHAD       equ	885	;# 
  4599   000376                     SHADCON         equ	886	;# 
  4600   000377                     STATUS_SHAD     equ	887	;# 
  4601   000378                     WREG_SHAD       equ	888	;# 
  4602   000379                     BSR_SHAD        equ	889	;# 
  4603   00037A                     PCLATH_SHAD     equ	890	;# 
  4604   00037B                     PCLATU_SHAD     equ	891	;# 
  4605   00037C                     FSR0SH          equ	892	;# 
  4606   00037C                     FSR0L_SHAD      equ	892	;# 
  4607   00037D                     FSR0H_SHAD      equ	893	;# 
  4608   00037E                     FSR1SH          equ	894	;# 
  4609   00037E                     FSR1L_SHAD      equ	894	;# 
  4610   00037F                     FSR1H_SHAD      equ	895	;# 
  4611   000380                     FSR2SH          equ	896	;# 
  4612   000380                     FSR2L_SHAD      equ	896	;# 
  4613   000381                     FSR2H_SHAD      equ	897	;# 
  4614   000382                     PRODSH          equ	898	;# 
  4615   000382                     PRODL_SHAD      equ	898	;# 
  4616   000383                     PRODH_SHAD      equ	899	;# 
  4617   000387                     TU16ACON0       equ	903	;# 
  4618   000388                     TU16ACON1       equ	904	;# 
  4619   000389                     TU16AHLT        equ	905	;# 
  4620   00038A                     TU16APS         equ	906	;# 
  4621   00038B                     TU16ATMR        equ	907	;# 
  4622   00038B                     TU16ACR         equ	907	;# 
  4623   00038B                     TU16ATMRL       equ	907	;# 
  4624   00038B                     TU16ACRL        equ	907	;# 
  4625   00038C                     TU16ATMRH       equ	908	;# 
  4626   00038C                     TU16ACRH        equ	908	;# 
  4627   00038D                     TU16APR         equ	909	;# 
  4628   00038D                     TU16APRL        equ	909	;# 
  4629   00038E                     TU16APRH        equ	910	;# 
  4630   00038F                     TU16ACLK        equ	911	;# 
  4631   000390                     TU16AERS        equ	912	;# 
  4632   000393                     TU16BCON0       equ	915	;# 
  4633   000394                     TU16BCON1       equ	916	;# 
  4634   000395                     TU16BHLT        equ	917	;# 
  4635   000396                     TU16BPS         equ	918	;# 
  4636   000397                     TU16BTMR        equ	919	;# 
  4637   000397                     TU16BCR         equ	919	;# 
  4638   000397                     TU16BTMRL       equ	919	;# 
  4639   000397                     TU16BCRL        equ	919	;# 
  4640   000398                     TU16BTMRH       equ	920	;# 
  4641   000398                     TU16BCRH        equ	920	;# 
  4642   000399                     TU16BPR         equ	921	;# 
  4643   000399                     TU16BPRL        equ	921	;# 
  4644   00039A                     TU16BPRH        equ	922	;# 
  4645   00039B                     TU16BCLK        equ	923	;# 
  4646   00039C                     TU16BERS        equ	924	;# 
  4647   0003BB                     TUCHAIN         equ	955	;# 
  4648   0003BC                     CWG1CLK         equ	956	;# 
  4649   0003BC                     CWG1CLKCON      equ	956	;# 
  4650   0003BD                     CWG1ISM         equ	957	;# 
  4651   0003BE                     CWG1DBR         equ	958	;# 
  4652   0003BF                     CWG1DBF         equ	959	;# 
  4653   0003C0                     CWG1CON0        equ	960	;# 
  4654   0003C1                     CWG1CON1        equ	961	;# 
  4655   0003C2                     CWG1AS0         equ	962	;# 
  4656   0003C3                     CWG1AS1         equ	963	;# 
  4657   0003C4                     CWG1STR         equ	964	;# 
  4658   0003C5                     CWG2CLK         equ	965	;# 
  4659   0003C5                     CWG2CLKCON      equ	965	;# 
  4660   0003C6                     CWG2ISM         equ	966	;# 
  4661   0003C7                     CWG2DBR         equ	967	;# 
  4662   0003C8                     CWG2DBF         equ	968	;# 
  4663   0003C9                     CWG2CON0        equ	969	;# 
  4664   0003CA                     CWG2CON1        equ	970	;# 
  4665   0003CB                     CWG2AS0         equ	971	;# 
  4666   0003CC                     CWG2AS1         equ	972	;# 
  4667   0003CD                     CWG2STR         equ	973	;# 
  4668   0003CE                     CWG3CLK         equ	974	;# 
  4669   0003CE                     CWG3CLKCON      equ	974	;# 
  4670   0003CF                     CWG3ISM         equ	975	;# 
  4671   0003D0                     CWG3DBR         equ	976	;# 
  4672   0003D1                     CWG3DBF         equ	977	;# 
  4673   0003D2                     CWG3CON0        equ	978	;# 
  4674   0003D3                     CWG3CON1        equ	979	;# 
  4675   0003D4                     CWG3AS0         equ	980	;# 
  4676   0003D5                     CWG3AS1         equ	981	;# 
  4677   0003D6                     CWG3STR         equ	982	;# 
  4678   0003D7                     FVRCON          equ	983	;# 
  4679   0003D8                     ADCPCON         equ	984	;# 
  4680   0003D8                     ADCP            equ	984	;# 
  4681   0003D9                     ADLTH           equ	985	;# 
  4682   0003D9                     ADLTHL          equ	985	;# 
  4683   0003DA                     ADLTHH          equ	986	;# 
  4684   0003DB                     ADUTH           equ	987	;# 
  4685   0003DB                     ADUTHL          equ	987	;# 
  4686   0003DC                     ADUTHH          equ	988	;# 
  4687   0003DD                     ADERR           equ	989	;# 
  4688   0003DD                     ADERRL          equ	989	;# 
  4689   0003DE                     ADERRH          equ	990	;# 
  4690   0003DF                     ADSTPT          equ	991	;# 
  4691   0003DF                     ADSTPTL         equ	991	;# 
  4692   0003E0                     ADSTPTH         equ	992	;# 
  4693   0003E1                     ADFLTR          equ	993	;# 
  4694   0003E1                     ADFLTRL         equ	993	;# 
  4695   0003E2                     ADFLTRH         equ	994	;# 
  4696   0003E3                     ADACC           equ	995	;# 
  4697   0003E3                     ADACCL          equ	995	;# 
  4698   0003E4                     ADACCH          equ	996	;# 
  4699   0003E5                     ADACCU          equ	997	;# 
  4700   0003E6                     ADCNT           equ	998	;# 
  4701   0003E7                     ADRPT           equ	999	;# 
  4702   0003E8                     ADPREV          equ	1000	;# 
  4703   0003E8                     ADPREVL         equ	1000	;# 
  4704   0003E9                     ADPREVH         equ	1001	;# 
  4705   0003EA                     ADRES           equ	1002	;# 
  4706   0003EA                     ADRESL          equ	1002	;# 
  4707   0003EB                     ADRESH          equ	1003	;# 
  4708   0003EC                     ADPCH           equ	1004	;# 
  4709   0003EE                     ADACQ           equ	1006	;# 
  4710   0003EE                     ADACQL          equ	1006	;# 
  4711   0003EF                     ADACQH          equ	1007	;# 
  4712   0003F0                     ADCAP           equ	1008	;# 
  4713   0003F1                     ADPRE           equ	1009	;# 
  4714   0003F1                     ADPREL          equ	1009	;# 
  4715   0003F2                     ADPREH          equ	1010	;# 
  4716   0003F3                     ADCON0          equ	1011	;# 
  4717   0003F4                     ADCON1          equ	1012	;# 
  4718   0003F5                     ADCON2          equ	1013	;# 
  4719   0003F6                     ADCON3          equ	1014	;# 
  4720   0003F7                     ADSTAT          equ	1015	;# 
  4721   0003F8                     ADREF           equ	1016	;# 
  4722   0003F9                     ADACT           equ	1017	;# 
  4723   0003FA                     ADCLK           equ	1018	;# 
  4724   0003FB                     ADCTX           equ	1019	;# 
  4725   0003FC                     ADCSEL1         equ	1020	;# 
  4726   0003FD                     ADCSEL2         equ	1021	;# 
  4727   0003FE                     ADCSEL3         equ	1022	;# 
  4728   0003FF                     ADCSEL4         equ	1023	;# 
  4729   000400                     ANSELA          equ	1024	;# 
  4730   000401                     WPUA            equ	1025	;# 
  4731   000402                     ODCONA          equ	1026	;# 
  4732   000403                     SLRCONA         equ	1027	;# 
  4733   000404                     INLVLA          equ	1028	;# 
  4734   000405                     IOCAP           equ	1029	;# 
  4735   000406                     IOCAN           equ	1030	;# 
  4736   000407                     IOCAF           equ	1031	;# 
  4737   000408                     ANSELB          equ	1032	;# 
  4738   000409                     WPUB            equ	1033	;# 
  4739   00040A                     ODCONB          equ	1034	;# 
  4740   00040B                     SLRCONB         equ	1035	;# 
  4741   00040C                     INLVLB          equ	1036	;# 
  4742   00040D                     IOCBP           equ	1037	;# 
  4743   00040E                     IOCBN           equ	1038	;# 
  4744   00040F                     IOCBF           equ	1039	;# 
  4745   000410                     ANSELC          equ	1040	;# 
  4746   000411                     WPUC            equ	1041	;# 
  4747   000412                     ODCONC          equ	1042	;# 
  4748   000413                     SLRCONC         equ	1043	;# 
  4749   000414                     INLVLC          equ	1044	;# 
  4750   000415                     IOCCP           equ	1045	;# 
  4751   000416                     IOCCN           equ	1046	;# 
  4752   000417                     IOCCF           equ	1047	;# 
  4753   000421                     WPUE            equ	1057	;# 
  4754   000424                     INLVLE          equ	1060	;# 
  4755   000425                     IOCEP           equ	1061	;# 
  4756   000426                     IOCEN           equ	1062	;# 
  4757   000427                     IOCEF           equ	1063	;# 
  4758   000440                     NCO1ACC         equ	1088	;# 
  4759   000440                     NCO1ACCL        equ	1088	;# 
  4760   000441                     NCO1ACCH        equ	1089	;# 
  4761   000442                     NCO1ACCU        equ	1090	;# 
  4762   000443                     NCO1INC         equ	1091	;# 
  4763   000443                     NCO1INCL        equ	1091	;# 
  4764   000444                     NCO1INCH        equ	1092	;# 
  4765   000445                     NCO1INCU        equ	1093	;# 
  4766   000446                     NCO1CON         equ	1094	;# 
  4767   000447                     NCO1CLK         equ	1095	;# 
  4768   000448                     NCO2ACC         equ	1096	;# 
  4769   000448                     NCO2ACCL        equ	1096	;# 
  4770   000449                     NCO2ACCH        equ	1097	;# 
  4771   00044A                     NCO2ACCU        equ	1098	;# 
  4772   00044B                     NCO2INC         equ	1099	;# 
  4773   00044B                     NCO2INCL        equ	1099	;# 
  4774   00044C                     NCO2INCH        equ	1100	;# 
  4775   00044D                     NCO2INCU        equ	1101	;# 
  4776   00044E                     NCO2CON         equ	1102	;# 
  4777   00044F                     NCO2CLK         equ	1103	;# 
  4778   000450                     NCO3ACC         equ	1104	;# 
  4779   000450                     NCO3ACCL        equ	1104	;# 
  4780   000451                     NCO3ACCH        equ	1105	;# 
  4781   000452                     NCO3ACCU        equ	1106	;# 
  4782   000453                     NCO3INC         equ	1107	;# 
  4783   000453                     NCO3INCL        equ	1107	;# 
  4784   000454                     NCO3INCH        equ	1108	;# 
  4785   000455                     NCO3INCU        equ	1109	;# 
  4786   000456                     NCO3CON         equ	1110	;# 
  4787   000457                     NCO3CLK         equ	1111	;# 
  4788   000458                     FSCMCON         equ	1112	;# 
  4789   000459                     IVTLOCK         equ	1113	;# 
  4790   00045A                     IVTAD           equ	1114	;# 
  4791   00045A                     IVTADL          equ	1114	;# 
  4792   00045B                     IVTADH          equ	1115	;# 
  4793   00045C                     IVTADU          equ	1116	;# 
  4794   00045D                     IVTBASE         equ	1117	;# 
  4795   00045D                     IVTBASEL        equ	1117	;# 
  4796   00045E                     IVTBASEH        equ	1118	;# 
  4797   00045F                     IVTBASEU        equ	1119	;# 
  4798   000460                     PWM1ERS         equ	1120	;# 
  4799   000461                     PWM1CLK         equ	1121	;# 
  4800   000462                     PWM1LDS         equ	1122	;# 
  4801   000463                     PWM1PR          equ	1123	;# 
  4802   000463                     PWM1PRL         equ	1123	;# 
  4803   000464                     PWM1PRH         equ	1124	;# 
  4804   000465                     PWM1CPRE        equ	1125	;# 
  4805   000466                     PWM1PIPOS       equ	1126	;# 
  4806   000467                     PWM1GIR         equ	1127	;# 
  4807   000468                     PWM1GIE         equ	1128	;# 
  4808   000469                     PWM1CON         equ	1129	;# 
  4809   00046A                     PWM1S1CFG       equ	1130	;# 
  4810   00046B                     PWM1S1P1        equ	1131	;# 
  4811   00046B                     PWM1S1P1L       equ	1131	;# 
  4812   00046C                     PWM1S1P1H       equ	1132	;# 
  4813   00046D                     PWM1S1P2        equ	1133	;# 
  4814   00046D                     PWM1S1P2L       equ	1133	;# 
  4815   00046E                     PWM1S1P2H       equ	1134	;# 
  4816   00046F                     PWM2ERS         equ	1135	;# 
  4817   000470                     PWM2CLK         equ	1136	;# 
  4818   000471                     PWM2LDS         equ	1137	;# 
  4819   000472                     PWM2PR          equ	1138	;# 
  4820   000472                     PWM2PRL         equ	1138	;# 
  4821   000473                     PWM2PRH         equ	1139	;# 
  4822   000474                     PWM2CPRE        equ	1140	;# 
  4823   000475                     PWM2PIPOS       equ	1141	;# 
  4824   000476                     PWM2GIR         equ	1142	;# 
  4825   000477                     PWM2GIE         equ	1143	;# 
  4826   000478                     PWM2CON         equ	1144	;# 
  4827   000479                     PWM2S1CFG       equ	1145	;# 
  4828   00047A                     PWM2S1P1        equ	1146	;# 
  4829   00047A                     PWM2S1P1L       equ	1146	;# 
  4830   00047B                     PWM2S1P1H       equ	1147	;# 
  4831   00047C                     PWM2S1P2        equ	1148	;# 
  4832   00047C                     PWM2S1P2L       equ	1148	;# 
  4833   00047D                     PWM2S1P2H       equ	1149	;# 
  4834   00047E                     PWM3ERS         equ	1150	;# 
  4835   00047F                     PWM3CLK         equ	1151	;# 
  4836   000480                     PWM3LDS         equ	1152	;# 
  4837   000481                     PWM3PR          equ	1153	;# 
  4838   000481                     PWM3PRL         equ	1153	;# 
  4839   000482                     PWM3PRH         equ	1154	;# 
  4840   000483                     PWM3CPRE        equ	1155	;# 
  4841   000484                     PWM3PIPOS       equ	1156	;# 
  4842   000485                     PWM3GIR         equ	1157	;# 
  4843   000486                     PWM3GIE         equ	1158	;# 
  4844   000487                     PWM3CON         equ	1159	;# 
  4845   000488                     PWM3S1CFG       equ	1160	;# 
  4846   000489                     PWM3S1P1        equ	1161	;# 
  4847   000489                     PWM3S1P1L       equ	1161	;# 
  4848   00048A                     PWM3S1P1H       equ	1162	;# 
  4849   00048B                     PWM3S1P2        equ	1163	;# 
  4850   00048B                     PWM3S1P2L       equ	1163	;# 
  4851   00048C                     PWM3S1P2H       equ	1164	;# 
  4852   00048D                     PWM4ERS         equ	1165	;# 
  4853   00048E                     PWM4CLK         equ	1166	;# 
  4854   00048F                     PWM4LDS         equ	1167	;# 
  4855   000490                     PWM4PR          equ	1168	;# 
  4856   000490                     PWM4PRL         equ	1168	;# 
  4857   000491                     PWM4PRH         equ	1169	;# 
  4858   000492                     PWM4CPRE        equ	1170	;# 
  4859   000493                     PWM4PIPOS       equ	1171	;# 
  4860   000494                     PWM4GIR         equ	1172	;# 
  4861   000495                     PWM4GIE         equ	1173	;# 
  4862   000496                     PWM4CON         equ	1174	;# 
  4863   000497                     PWM4S1CFG       equ	1175	;# 
  4864   000498                     PWM4S1P1        equ	1176	;# 
  4865   000498                     PWM4S1P1L       equ	1176	;# 
  4866   000499                     PWM4S1P1H       equ	1177	;# 
  4867   00049A                     PWM4S1P2        equ	1178	;# 
  4868   00049A                     PWM4S1P2L       equ	1178	;# 
  4869   00049B                     PWM4S1P2H       equ	1179	;# 
  4870   00049C                     PWMLOAD         equ	1180	;# 
  4871   00049D                     PWMEN           equ	1181	;# 
  4872   00049E                     PIE0            equ	1182	;# 
  4873   00049F                     PIE1            equ	1183	;# 
  4874   0004A0                     PIE2            equ	1184	;# 
  4875   0004A1                     PIE3            equ	1185	;# 
  4876   0004A2                     PIE4            equ	1186	;# 
  4877   0004A3                     PIE5            equ	1187	;# 
  4878   0004A4                     PIE6            equ	1188	;# 
  4879   0004A5                     PIE7            equ	1189	;# 
  4880   0004A6                     PIE8            equ	1190	;# 
  4881   0004A7                     PIE9            equ	1191	;# 
  4882   0004A8                     PIE10           equ	1192	;# 
  4883   0004A9                     PIE11           equ	1193	;# 
  4884   0004AA                     PIE12           equ	1194	;# 
  4885   0004AB                     PIE13           equ	1195	;# 
  4886   0004AC                     PIE14           equ	1196	;# 
  4887   0004AD                     PIE15           equ	1197	;# 
  4888   0004AE                     PIR0            equ	1198	;# 
  4889   0004AF                     PIR1            equ	1199	;# 
  4890   0004B0                     PIR2            equ	1200	;# 
  4891   0004B1                     PIR3            equ	1201	;# 
  4892   0004B2                     PIR4            equ	1202	;# 
  4893   0004B3                     PIR5            equ	1203	;# 
  4894   0004B4                     PIR6            equ	1204	;# 
  4895   0004B5                     PIR7            equ	1205	;# 
  4896   0004B6                     PIR8            equ	1206	;# 
  4897   0004B7                     PIR9            equ	1207	;# 
  4898   0004B8                     PIR10           equ	1208	;# 
  4899   0004B9                     PIR11           equ	1209	;# 
  4900   0004BA                     PIR12           equ	1210	;# 
  4901   0004BB                     PIR13           equ	1211	;# 
  4902   0004BC                     PIR14           equ	1212	;# 
  4903   0004BD                     PIR15           equ	1213	;# 
  4904   0004BE                     LATA            equ	1214	;# 
  4905   0004BF                     LATB            equ	1215	;# 
  4906   0004C0                     LATC            equ	1216	;# 
  4907   0004C6                     TRISA           equ	1222	;# 
  4908   0004C7                     TRISB           equ	1223	;# 
  4909   0004C8                     TRISC           equ	1224	;# 
  4910   0004CA                     TRISE           equ	1226	;# 
  4911   0004CE                     PORTA           equ	1230	;# 
  4912   0004CF                     PORTB           equ	1231	;# 
  4913   0004D0                     PORTC           equ	1232	;# 
  4914   0004D2                     PORTE           equ	1234	;# 
  4915   0004D6                     INTCON0         equ	1238	;# 
  4916   0004D7                     INTCON1         equ	1239	;# 
  4917   0004D8                     STATUS          equ	1240	;# 
  4918   0004D9                     FSR2            equ	1241	;# 
  4919   0004D9                     FSR2L           equ	1241	;# 
  4920   0004DA                     FSR2H           equ	1242	;# 
  4921   0004DB                     PLUSW2          equ	1243	;# 
  4922   0004DC                     PREINC2         equ	1244	;# 
  4923   0004DD                     POSTDEC2        equ	1245	;# 
  4924   0004DE                     POSTINC2        equ	1246	;# 
  4925   0004DF                     INDF2           equ	1247	;# 
  4926   0004E0                     BSR             equ	1248	;# 
  4927   0004E1                     FSR1            equ	1249	;# 
  4928   0004E1                     FSR1L           equ	1249	;# 
  4929   0004E2                     FSR1H           equ	1250	;# 
  4930   0004E3                     PLUSW1          equ	1251	;# 
  4931   0004E4                     PREINC1         equ	1252	;# 
  4932   0004E5                     POSTDEC1        equ	1253	;# 
  4933   0004E6                     POSTINC1        equ	1254	;# 
  4934   0004E7                     INDF1           equ	1255	;# 
  4935   0004E8                     WREG            equ	1256	;# 
  4936   0004E9                     FSR0            equ	1257	;# 
  4937   0004E9                     FSR0L           equ	1257	;# 
  4938   0004EA                     FSR0H           equ	1258	;# 
  4939   0004EB                     PLUSW0          equ	1259	;# 
  4940   0004EC                     PREINC0         equ	1260	;# 
  4941   0004ED                     POSTDEC0        equ	1261	;# 
  4942   0004EE                     POSTINC0        equ	1262	;# 
  4943   0004EF                     INDF0           equ	1263	;# 
  4944   0004F0                     PCON0           equ	1264	;# 
  4945   0004F1                     PCON1           equ	1265	;# 
  4946   0004F2                     CPUDOZE         equ	1266	;# 
  4947   0004F3                     PROD            equ	1267	;# 
  4948   0004F3                     PRODL           equ	1267	;# 
  4949   0004F4                     PRODH           equ	1268	;# 
  4950   0004F5                     TABLAT          equ	1269	;# 
  4951   0004F6                     TBLPTR          equ	1270	;# 
  4952   0004F6                     TBLPTRL         equ	1270	;# 
  4953   0004F7                     TBLPTRH         equ	1271	;# 
  4954   0004F8                     TBLPTRU         equ	1272	;# 
  4955   0004F9                     PCLAT           equ	1273	;# 
  4956   0004F9                     PCL             equ	1273	;# 
  4957   0004FA                     PCLATH          equ	1274	;# 
  4958   0004FB                     PCLATU          equ	1275	;# 
  4959   0004FC                     STKPTR          equ	1276	;# 
  4960   0004FD                     TOS             equ	1277	;# 
  4961   0004FD                     TOSL            equ	1277	;# 
  4962   0004FE                     TOSH            equ	1278	;# 
  4963   0004FF                     TOSU            equ	1279	;# 
  4964   000038                     BOOTREG         equ	56	;# 
  4965   000039                     CLKRCON         equ	57	;# 
  4966   00003A                     CLKRCLK         equ	58	;# 
  4967   000040                     NVMCON0         equ	64	;# 
  4968   000041                     NVMCON1         equ	65	;# 
  4969   000042                     NVMLOCK         equ	66	;# 
  4970   000043                     NVMADR          equ	67	;# 
  4971   000043                     NVMADRL         equ	67	;# 
  4972   000044                     NVMADRH         equ	68	;# 
  4973   000045                     NVMADRU         equ	69	;# 
  4974   000046                     NVMDAT          equ	70	;# 
  4975   000046                     NVMDATL         equ	70	;# 
  4976   000047                     NVMDATH         equ	71	;# 
  4977   000048                     VREGCON         equ	72	;# 
  4978   000049                     BORCON          equ	73	;# 
  4979   00004A                     HLVDCON0        equ	74	;# 
  4980   00004B                     HLVDCON1        equ	75	;# 
  4981   00004C                     ZCDCON          equ	76	;# 
  4982   000060                     PMD0            equ	96	;# 
  4983   000061                     PMD1            equ	97	;# 
  4984   000062                     PMD2            equ	98	;# 
  4985   000063                     PMD3            equ	99	;# 
  4986   000064                     PMD4            equ	100	;# 
  4987   000065                     PMD5            equ	101	;# 
  4988   000066                     PMD6            equ	102	;# 
  4989   000067                     PMD7            equ	103	;# 
  4990   000068                     PMD8            equ	104	;# 
  4991   00006A                     MD1CON0         equ	106	;# 
  4992   00006B                     MD1CON1         equ	107	;# 
  4993   00006C                     MD1SRC          equ	108	;# 
  4994   00006D                     MD1CARL         equ	109	;# 
  4995   00006E                     MD1CARH         equ	110	;# 
  4996   00006F                     CMOUT           equ	111	;# 
  4997   000070                     CM1CON0         equ	112	;# 
  4998   000071                     CM1CON1         equ	113	;# 
  4999   000072                     CM1NCH          equ	114	;# 
  5000   000073                     CM1PCH          equ	115	;# 
  5001   000074                     CM2CON0         equ	116	;# 
  5002   000075                     CM2CON1         equ	117	;# 
  5003   000076                     CM2NCH          equ	118	;# 
  5004   000077                     CM2PCH          equ	119	;# 
  5005   000078                     WDTCON0         equ	120	;# 
  5006   000079                     WDTCON1         equ	121	;# 
  5007   00007A                     WDTPSL          equ	122	;# 
  5008   00007B                     WDTPSH          equ	123	;# 
  5009   00007C                     WDTTMR          equ	124	;# 
  5010   00007D                     DAC1DAT         equ	125	;# 
  5011   00007D                     DAC1DATL        equ	125	;# 
  5012   00007F                     DAC1CON         equ	127	;# 
  5013   000080                     SPI1RXB         equ	128	;# 
  5014   000081                     SPI1TXB         equ	129	;# 
  5015   000082                     SPI1TCNT        equ	130	;# 
  5016   000082                     SPI1TCNTL       equ	130	;# 
  5017   000083                     SPI1TCNTH       equ	131	;# 
  5018   000084                     SPI1CON0        equ	132	;# 
  5019   000085                     SPI1CON1        equ	133	;# 
  5020   000086                     SPI1CON2        equ	134	;# 
  5021   000087                     SPI1STATUS      equ	135	;# 
  5022   000088                     SPI1TWIDTH      equ	136	;# 
  5023   000089                     SPI1BAUD        equ	137	;# 
  5024   00008A                     SPI1INTF        equ	138	;# 
  5025   00008B                     SPI1INTE        equ	139	;# 
  5026   00008C                     SPI1CLK         equ	140	;# 
  5027   00008D                     SPI2RXB         equ	141	;# 
  5028   00008E                     SPI2TXB         equ	142	;# 
  5029   00008F                     SPI2TCNT        equ	143	;# 
  5030   00008F                     SPI2TCNTL       equ	143	;# 
  5031   000090                     SPI2TCNTH       equ	144	;# 
  5032   000091                     SPI2CON0        equ	145	;# 
  5033   000092                     SPI2CON1        equ	146	;# 
  5034   000093                     SPI2CON2        equ	147	;# 
  5035   000094                     SPI2STATUS      equ	148	;# 
  5036   000095                     SPI2TWIDTH      equ	149	;# 
  5037   000096                     SPI2BAUD        equ	150	;# 
  5038   000097                     SPI2INTF        equ	151	;# 
  5039   000098                     SPI2INTE        equ	152	;# 
  5040   000099                     SPI2CLK         equ	153	;# 
  5041   0000AC                     ACTCON          equ	172	;# 
  5042   0000AD                     OSCCON1         equ	173	;# 
  5043   0000AE                     OSCCON2         equ	174	;# 
  5044   0000AF                     OSCCON3         equ	175	;# 
  5045   0000B0                     OSCTUNE         equ	176	;# 
  5046   0000B1                     OSCFRQ          equ	177	;# 
  5047   0000B1                     OSCFREQ         equ	177	;# 
  5048   0000B2                     OSCSTAT         equ	178	;# 
  5049   0000B2                     OSCSTAT1        equ	178	;# 
  5050   0000B3                     OSCEN           equ	179	;# 
  5051   0000B4                     PRLOCK          equ	180	;# 
  5052   0000B5                     SCANPR          equ	181	;# 
  5053   0000B6                     DMA1PR          equ	182	;# 
  5054   0000B7                     DMA2PR          equ	183	;# 
  5055   0000B8                     DMA3PR          equ	184	;# 
  5056   0000B9                     DMA4PR          equ	185	;# 
  5057   0000BA                     DMA5PR          equ	186	;# 
  5058   0000BB                     DMA6PR          equ	187	;# 
  5059   0000BC                     DMA7PR          equ	188	;# 
  5060   0000BD                     DMA8PR          equ	189	;# 
  5061   0000BE                     MAINPR          equ	190	;# 
  5062   0000BF                     ISRPR           equ	191	;# 
  5063   0000D4                     CLCDATA         equ	212	;# 
  5064   0000D5                     CLCSELECT       equ	213	;# 
  5065   0000D6                     CLCnCON         equ	214	;# 
  5066   0000D7                     CLCnPOL         equ	215	;# 
  5067   0000D8                     CLCnSEL0        equ	216	;# 
  5068   0000D9                     CLCnSEL1        equ	217	;# 
  5069   0000DA                     CLCnSEL2        equ	218	;# 
  5070   0000DB                     CLCnSEL3        equ	219	;# 
  5071   0000DC                     CLCnGLS0        equ	220	;# 
  5072   0000DD                     CLCnGLS1        equ	221	;# 
  5073   0000DE                     CLCnGLS2        equ	222	;# 
  5074   0000DF                     CLCnGLS3        equ	223	;# 
  5075   0000E8                     DMASELECT       equ	232	;# 
  5076   0000E9                     DMAnBUF         equ	233	;# 
  5077   0000EA                     DMAnDCNT        equ	234	;# 
  5078   0000EA                     DMAnDCNTL       equ	234	;# 
  5079   0000EB                     DMAnDCNTH       equ	235	;# 
  5080   0000EC                     DMAnDPTR        equ	236	;# 
  5081   0000EC                     DMAnDPTRL       equ	236	;# 
  5082   0000ED                     DMAnDPTRH       equ	237	;# 
  5083   0000EE                     DMAnDSZ         equ	238	;# 
  5084   0000EE                     DMAnDSZL        equ	238	;# 
  5085   0000EF                     DMAnDSZH        equ	239	;# 
  5086   0000F0                     DMAnDSA         equ	240	;# 
  5087   0000F0                     DMAnDSAL        equ	240	;# 
  5088   0000F1                     DMAnDSAH        equ	241	;# 
  5089   0000F2                     DMAnSCNT        equ	242	;# 
  5090   0000F2                     DMAnSCNTL       equ	242	;# 
  5091   0000F3                     DMAnSCNTH       equ	243	;# 
  5092   0000F4                     DMAnSPTR        equ	244	;# 
  5093   0000F4                     DMAnSPTRL       equ	244	;# 
  5094   0000F5                     DMAnSPTRH       equ	245	;# 
  5095   0000F6                     DMAnSPTRU       equ	246	;# 
  5096   0000F7                     DMAnSSZ         equ	247	;# 
  5097   0000F7                     DMAnSSZL        equ	247	;# 
  5098   0000F8                     DMAnSSZH        equ	248	;# 
  5099   0000F9                     DMAnSSA         equ	249	;# 
  5100   0000F9                     DMAnSSAL        equ	249	;# 
  5101   0000FA                     DMAnSSAH        equ	250	;# 
  5102   0000FB                     DMAnSSAU        equ	251	;# 
  5103   0000FC                     DMAnCON0        equ	252	;# 
  5104   0000FD                     DMAnCON1        equ	253	;# 
  5105   0000FE                     DMAnAIRQ        equ	254	;# 
  5106   0000FF                     DMAnSIRQ        equ	255	;# 
  5107   000100                     C1CONL          equ	256	;# 
  5108   000101                     C1CONH          equ	257	;# 
  5109   000102                     C1CONU          equ	258	;# 
  5110   000103                     C1CONT          equ	259	;# 
  5111   000104                     C1NBTCFGL       equ	260	;# 
  5112   000105                     C1NBTCFGH       equ	261	;# 
  5113   000106                     C1NBTCFGU       equ	262	;# 
  5114   000107                     C1NBTCFGT       equ	263	;# 
  5115   000108                     C1DBTCFGL       equ	264	;# 
  5116   000109                     C1DBTCFGH       equ	265	;# 
  5117   00010A                     C1DBTCFGU       equ	266	;# 
  5118   00010B                     C1DBTCFGT       equ	267	;# 
  5119   00010C                     C1TDCL          equ	268	;# 
  5120   00010D                     C1TDCH          equ	269	;# 
  5121   00010E                     C1TDCU          equ	270	;# 
  5122   000110                     C1TBC           equ	272	;# 
  5123   000110                     C1TBCL          equ	272	;# 
  5124   000111                     C1TBCH          equ	273	;# 
  5125   000112                     C1TBCU          equ	274	;# 
  5126   000113                     C1TBCT          equ	275	;# 
  5127   000114                     C1TSCONL        equ	276	;# 
  5128   000115                     C1TSCONH        equ	277	;# 
  5129   000116                     C1TSCONU        equ	278	;# 
  5130   000117                     C1TSCONT        equ	279	;# 
  5131   000118                     C1VECL          equ	280	;# 
  5132   000119                     C1VECH          equ	281	;# 
  5133   00011A                     C1VECU          equ	282	;# 
  5134   00011B                     C1VECT          equ	283	;# 
  5135   00011C                     C1INTL          equ	284	;# 
  5136   00011D                     C1INTH          equ	285	;# 
  5137   00011E                     C1INTU          equ	286	;# 
  5138   00011F                     C1INTT          equ	287	;# 
  5139   000120                     C1RXIF          equ	288	;# 
  5140   000120                     C1RXIFL         equ	288	;# 
  5141   000121                     C1RXIFH         equ	289	;# 
  5142   000122                     C1RXIFU         equ	290	;# 
  5143   000123                     C1RXIFT         equ	291	;# 
  5144   000124                     C1TXIF          equ	292	;# 
  5145   000124                     C1TXIFL         equ	292	;# 
  5146   000125                     C1TXIFH         equ	293	;# 
  5147   000126                     C1TXIFU         equ	294	;# 
  5148   000127                     C1TXIFT         equ	295	;# 
  5149   000128                     C1RXOVIF        equ	296	;# 
  5150   000128                     C1RXOVIFL       equ	296	;# 
  5151   000129                     C1RXOVIFH       equ	297	;# 
  5152   00012A                     C1RXOVIFU       equ	298	;# 
  5153   00012B                     C1RXOVIFT       equ	299	;# 
  5154   00012C                     C1TXATIF        equ	300	;# 
  5155   00012C                     C1TXATIFL       equ	300	;# 
  5156   00012D                     C1TXATIFH       equ	301	;# 
  5157   00012E                     C1TXATIFU       equ	302	;# 
  5158   00012F                     C1TXATIFT       equ	303	;# 
  5159   000130                     C1TXREQ         equ	304	;# 
  5160   000130                     C1TXREQL        equ	304	;# 
  5161   000131                     C1TXREQH        equ	305	;# 
  5162   000132                     C1TXREQU        equ	306	;# 
  5163   000133                     C1TXREQT        equ	307	;# 
  5164   000134                     C1TRECL         equ	308	;# 
  5165   000135                     C1TRECH         equ	309	;# 
  5166   000136                     C1TRECU         equ	310	;# 
  5167   000137                     C1TRECT         equ	311	;# 
  5168   000138                     C1BDIAG0L       equ	312	;# 
  5169   000139                     C1BDIAG0H       equ	313	;# 
  5170   00013C                     C1BDIAG1L       equ	316	;# 
  5171   00013D                     C1BDIAG1H       equ	317	;# 
  5172   00013E                     C1BDIAG1U       equ	318	;# 
  5173   00013F                     C1BDIAG1T       equ	319	;# 
  5174   000140                     C1TEFCONL       equ	320	;# 
  5175   000141                     C1TEFCONH       equ	321	;# 
  5176   000142                     C1TEFCONU       equ	322	;# 
  5177   000143                     C1TEFCONT       equ	323	;# 
  5178   000144                     C1TEFSTAL       equ	324	;# 
  5179   000145                     C1TEFSTAH       equ	325	;# 
  5180   000146                     C1TEFSTAU       equ	326	;# 
  5181   000147                     C1TEFSTAT       equ	327	;# 
  5182   000148                     C1TEFUA         equ	328	;# 
  5183   000148                     C1TEFUAL        equ	328	;# 
  5184   000149                     C1TEFUAH        equ	329	;# 
  5185   00014A                     C1TEFUAU        equ	330	;# 
  5186   00014B                     C1TEFUAT        equ	331	;# 
  5187   00014C                     C1FIFOBA        equ	332	;# 
  5188   00014C                     C1FIFOBAL       equ	332	;# 
  5189   00014D                     C1FIFOBAH       equ	333	;# 
  5190   00014E                     C1FIFOBAU       equ	334	;# 
  5191   00014F                     C1FIFOBAT       equ	335	;# 
  5192   000150                     C1TXQCONL       equ	336	;# 
  5193   000151                     C1TXQCONH       equ	337	;# 
  5194   000152                     C1TXQCONU       equ	338	;# 
  5195   000153                     C1TXQCONT       equ	339	;# 
  5196   000154                     C1TXQSTAL       equ	340	;# 
  5197   000155                     C1TXQSTAH       equ	341	;# 
  5198   000156                     C1TXQSTAU       equ	342	;# 
  5199   000157                     C1TXQSTAT       equ	343	;# 
  5200   000158                     C1TXQUA         equ	344	;# 
  5201   000158                     C1TXQUAL        equ	344	;# 
  5202   000159                     C1TXQUAH        equ	345	;# 
  5203   00015A                     C1TXQUAU        equ	346	;# 
  5204   00015B                     C1TXQUAT        equ	347	;# 
  5205   00015C                     C1FIFOCON1      equ	348	;# 
  5206   00015C                     C1FIFOCON1L     equ	348	;# 
  5207   00015D                     C1FIFOCON1H     equ	349	;# 
  5208   00015E                     C1FIFOCON1U     equ	350	;# 
  5209   00015F                     C1FIFOCON1T     equ	351	;# 
  5210   000160                     C1FIFOSTA1      equ	352	;# 
  5211   000160                     C1FIFOSTA1L     equ	352	;# 
  5212   000161                     C1FIFOSTA1H     equ	353	;# 
  5213   000162                     C1FIFOSTA1U     equ	354	;# 
  5214   000163                     C1FIFOSTA1T     equ	355	;# 
  5215   000164                     C1FIFOUA1       equ	356	;# 
  5216   000164                     C1FIFOUA1L      equ	356	;# 
  5217   000165                     C1FIFOUA1H      equ	357	;# 
  5218   000166                     C1FIFOUA1U      equ	358	;# 
  5219   000167                     C1FIFOUA1T      equ	359	;# 
  5220   000168                     C1FIFOCON2      equ	360	;# 
  5221   000168                     C1FIFOCON2L     equ	360	;# 
  5222   000169                     C1FIFOCON2H     equ	361	;# 
  5223   00016A                     C1FIFOCON2U     equ	362	;# 
  5224   00016B                     C1FIFOCON2T     equ	363	;# 
  5225   00016C                     C1FIFOSTA2      equ	364	;# 
  5226   00016C                     C1FIFOSTA2L     equ	364	;# 
  5227   00016D                     C1FIFOSTA2H     equ	365	;# 
  5228   00016E                     C1FIFOSTA2U     equ	366	;# 
  5229   00016F                     C1FIFOSTA2T     equ	367	;# 
  5230   000170                     C1FIFOUA2       equ	368	;# 
  5231   000170                     C1FIFOUA2L      equ	368	;# 
  5232   000171                     C1FIFOUA2H      equ	369	;# 
  5233   000172                     C1FIFOUA2U      equ	370	;# 
  5234   000173                     C1FIFOUA2T      equ	371	;# 
  5235   000174                     C1FIFOCON3      equ	372	;# 
  5236   000174                     C1FIFOCON3L     equ	372	;# 
  5237   000175                     C1FIFOCON3H     equ	373	;# 
  5238   000176                     C1FIFOCON3U     equ	374	;# 
  5239   000177                     C1FIFOCON3T     equ	375	;# 
  5240   000178                     C1FIFOSTA3      equ	376	;# 
  5241   000178                     C1FIFOSTA3L     equ	376	;# 
  5242   000179                     C1FIFOSTA3H     equ	377	;# 
  5243   00017A                     C1FIFOSTA3U     equ	378	;# 
  5244   00017B                     C1FIFOSTA3T     equ	379	;# 
  5245   00017C                     C1FIFOUA3       equ	380	;# 
  5246   00017C                     C1FIFOUA3L      equ	380	;# 
  5247   00017D                     C1FIFOUA3H      equ	381	;# 
  5248   00017E                     C1FIFOUA3U      equ	382	;# 
  5249   00017F                     C1FIFOUA3T      equ	383	;# 
  5250   000180                     C1FLTCON0L      equ	384	;# 
  5251   000181                     C1FLTCON0H      equ	385	;# 
  5252   000182                     C1FLTCON0U      equ	386	;# 
  5253   000183                     C1FLTCON0T      equ	387	;# 
  5254   000184                     C1FLTCON1L      equ	388	;# 
  5255   000185                     C1FLTCON1H      equ	389	;# 
  5256   000186                     C1FLTCON1U      equ	390	;# 
  5257   000187                     C1FLTCON1T      equ	391	;# 
  5258   000188                     C1FLTCON2L      equ	392	;# 
  5259   000189                     C1FLTCON2H      equ	393	;# 
  5260   00018A                     C1FLTCON2U      equ	394	;# 
  5261   00018B                     C1FLTCON2T      equ	395	;# 
  5262   00018C                     C1FLTOBJ0       equ	396	;# 
  5263   00018C                     C1FLTOBJ0L      equ	396	;# 
  5264   00018D                     C1FLTOBJ0H      equ	397	;# 
  5265   00018E                     C1FLTOBJ0U      equ	398	;# 
  5266   00018F                     C1FLTOBJ0T      equ	399	;# 
  5267   000190                     C1MASK0         equ	400	;# 
  5268   000190                     C1MASK0L        equ	400	;# 
  5269   000191                     C1MASK0H        equ	401	;# 
  5270   000192                     C1MASK0U        equ	402	;# 
  5271   000193                     C1MASK0T        equ	403	;# 
  5272   000194                     C1FLTOBJ1       equ	404	;# 
  5273   000194                     C1FLTOBJ1L      equ	404	;# 
  5274   000195                     C1FLTOBJ1H      equ	405	;# 
  5275   000196                     C1FLTOBJ1U      equ	406	;# 
  5276   000197                     C1FLTOBJ1T      equ	407	;# 
  5277   000198                     C1MASK1         equ	408	;# 
  5278   000198                     C1MASK1L        equ	408	;# 
  5279   000199                     C1MASK1H        equ	409	;# 
  5280   00019A                     C1MASK1U        equ	410	;# 
  5281   00019B                     C1MASK1T        equ	411	;# 
  5282   00019C                     C1FLTOBJ2       equ	412	;# 
  5283   00019C                     C1FLTOBJ2L      equ	412	;# 
  5284   00019D                     C1FLTOBJ2H      equ	413	;# 
  5285   00019E                     C1FLTOBJ2U      equ	414	;# 
  5286   00019F                     C1FLTOBJ2T      equ	415	;# 
  5287   0001A0                     C1MASK2         equ	416	;# 
  5288   0001A0                     C1MASK2L        equ	416	;# 
  5289   0001A1                     C1MASK2H        equ	417	;# 
  5290   0001A2                     C1MASK2U        equ	418	;# 
  5291   0001A3                     C1MASK2T        equ	419	;# 
  5292   0001A4                     C1FLTOBJ3       equ	420	;# 
  5293   0001A4                     C1FLTOBJ3L      equ	420	;# 
  5294   0001A5                     C1FLTOBJ3H      equ	421	;# 
  5295   0001A6                     C1FLTOBJ3U      equ	422	;# 
  5296   0001A7                     C1FLTOBJ3T      equ	423	;# 
  5297   0001A8                     C1MASK3         equ	424	;# 
  5298   0001A8                     C1MASK3L        equ	424	;# 
  5299   0001A9                     C1MASK3H        equ	425	;# 
  5300   0001AA                     C1MASK3U        equ	426	;# 
  5301   0001AB                     C1MASK3T        equ	427	;# 
  5302   0001AC                     C1FLTOBJ4       equ	428	;# 
  5303   0001AC                     C1FLTOBJ4L      equ	428	;# 
  5304   0001AD                     C1FLTOBJ4H      equ	429	;# 
  5305   0001AE                     C1FLTOBJ4U      equ	430	;# 
  5306   0001AF                     C1FLTOBJ4T      equ	431	;# 
  5307   0001B0                     C1MASK4         equ	432	;# 
  5308   0001B0                     C1MASK4L        equ	432	;# 
  5309   0001B1                     C1MASK4H        equ	433	;# 
  5310   0001B2                     C1MASK4U        equ	434	;# 
  5311   0001B3                     C1MASK4T        equ	435	;# 
  5312   0001B4                     C1FLTOBJ5       equ	436	;# 
  5313   0001B4                     C1FLTOBJ5L      equ	436	;# 
  5314   0001B5                     C1FLTOBJ5H      equ	437	;# 
  5315   0001B6                     C1FLTOBJ5U      equ	438	;# 
  5316   0001B7                     C1FLTOBJ5T      equ	439	;# 
  5317   0001B8                     C1MASK5         equ	440	;# 
  5318   0001B8                     C1MASK5L        equ	440	;# 
  5319   0001B9                     C1MASK5H        equ	441	;# 
  5320   0001BA                     C1MASK5U        equ	442	;# 
  5321   0001BB                     C1MASK5T        equ	443	;# 
  5322   0001BC                     C1FLTOBJ6       equ	444	;# 
  5323   0001BC                     C1FLTOBJ6L      equ	444	;# 
  5324   0001BD                     C1FLTOBJ6H      equ	445	;# 
  5325   0001BE                     C1FLTOBJ6U      equ	446	;# 
  5326   0001BF                     C1FLTOBJ6T      equ	447	;# 
  5327   0001C0                     C1MASK6         equ	448	;# 
  5328   0001C0                     C1MASK6L        equ	448	;# 
  5329   0001C1                     C1MASK6H        equ	449	;# 
  5330   0001C2                     C1MASK6U        equ	450	;# 
  5331   0001C3                     C1MASK6T        equ	451	;# 
  5332   0001C4                     C1FLTOBJ7       equ	452	;# 
  5333   0001C4                     C1FLTOBJ7L      equ	452	;# 
  5334   0001C5                     C1FLTOBJ7H      equ	453	;# 
  5335   0001C6                     C1FLTOBJ7U      equ	454	;# 
  5336   0001C7                     C1FLTOBJ7T      equ	455	;# 
  5337   0001C8                     C1MASK7         equ	456	;# 
  5338   0001C8                     C1MASK7L        equ	456	;# 
  5339   0001C9                     C1MASK7H        equ	457	;# 
  5340   0001CA                     C1MASK7U        equ	458	;# 
  5341   0001CB                     C1MASK7T        equ	459	;# 
  5342   0001CC                     C1FLTOBJ8       equ	460	;# 
  5343   0001CC                     C1FLTOBJ8L      equ	460	;# 
  5344   0001CD                     C1FLTOBJ8H      equ	461	;# 
  5345   0001CE                     C1FLTOBJ8U      equ	462	;# 
  5346   0001CF                     C1FLTOBJ8T      equ	463	;# 
  5347   0001D0                     C1MASK8         equ	464	;# 
  5348   0001D0                     C1MASK8L        equ	464	;# 
  5349   0001D1                     C1MASK8H        equ	465	;# 
  5350   0001D2                     C1MASK8U        equ	466	;# 
  5351   0001D3                     C1MASK8T        equ	467	;# 
  5352   0001D4                     C1FLTOBJ9       equ	468	;# 
  5353   0001D4                     C1FLTOBJ9L      equ	468	;# 
  5354   0001D5                     C1FLTOBJ9H      equ	469	;# 
  5355   0001D6                     C1FLTOBJ9U      equ	470	;# 
  5356   0001D7                     C1FLTOBJ9T      equ	471	;# 
  5357   0001D8                     C1MASK9         equ	472	;# 
  5358   0001D8                     C1MASK9L        equ	472	;# 
  5359   0001D9                     C1MASK9H        equ	473	;# 
  5360   0001DA                     C1MASK9U        equ	474	;# 
  5361   0001DB                     C1MASK9T        equ	475	;# 
  5362   0001DC                     C1FLTOBJ10      equ	476	;# 
  5363   0001DC                     C1FLTOBJ10L     equ	476	;# 
  5364   0001DD                     C1FLTOBJ10H     equ	477	;# 
  5365   0001DE                     C1FLTOBJ10U     equ	478	;# 
  5366   0001DF                     C1FLTOBJ10T     equ	479	;# 
  5367   0001E0                     C1MASK10        equ	480	;# 
  5368   0001E0                     C1MASK10L       equ	480	;# 
  5369   0001E1                     C1MASK10H       equ	481	;# 
  5370   0001E2                     C1MASK10U       equ	482	;# 
  5371   0001E3                     C1MASK10T       equ	483	;# 
  5372   0001E4                     C1FLTOBJ11      equ	484	;# 
  5373   0001E4                     C1FLTOBJ11L     equ	484	;# 
  5374   0001E5                     C1FLTOBJ11H     equ	485	;# 
  5375   0001E6                     C1FLTOBJ11U     equ	486	;# 
  5376   0001E7                     C1FLTOBJ11T     equ	487	;# 
  5377   0001E8                     C1MASK11        equ	488	;# 
  5378   0001E8                     C1MASK11L       equ	488	;# 
  5379   0001E9                     C1MASK11H       equ	489	;# 
  5380   0001EA                     C1MASK11U       equ	490	;# 
  5381   0001EB                     C1MASK11T       equ	491	;# 
  5382   000200                     PPSLOCK         equ	512	;# 
  5383   000201                     RA0PPS          equ	513	;# 
  5384   000202                     RA1PPS          equ	514	;# 
  5385   000203                     RA2PPS          equ	515	;# 
  5386   000204                     RA3PPS          equ	516	;# 
  5387   000205                     RA4PPS          equ	517	;# 
  5388   000206                     RA5PPS          equ	518	;# 
  5389   000207                     RA6PPS          equ	519	;# 
  5390   000208                     RA7PPS          equ	520	;# 
  5391   000209                     RB0PPS          equ	521	;# 
  5392   00020A                     RB1PPS          equ	522	;# 
  5393   00020B                     RB2PPS          equ	523	;# 
  5394   00020C                     RB3PPS          equ	524	;# 
  5395   00020D                     RB4PPS          equ	525	;# 
  5396   00020E                     RB5PPS          equ	526	;# 
  5397   00020F                     RB6PPS          equ	527	;# 
  5398   000210                     RB7PPS          equ	528	;# 
  5399   000211                     RC0PPS          equ	529	;# 
  5400   000212                     RC1PPS          equ	530	;# 
  5401   000213                     RC2PPS          equ	531	;# 
  5402   000214                     RC3PPS          equ	532	;# 
  5403   000215                     RC4PPS          equ	533	;# 
  5404   000216                     RC5PPS          equ	534	;# 
  5405   000217                     RC6PPS          equ	535	;# 
  5406   000218                     RC7PPS          equ	536	;# 
  5407   00023D                     CANRXPPS        equ	573	;# 
  5408   00023E                     INT0PPS         equ	574	;# 
  5409   00023F                     INT1PPS         equ	575	;# 
  5410   000240                     INT2PPS         equ	576	;# 
  5411   000241                     T0CKIPPS        equ	577	;# 
  5412   000242                     T1CKIPPS        equ	578	;# 
  5413   000243                     T1GPPS          equ	579	;# 
  5414   000244                     T3CKIPPS        equ	580	;# 
  5415   000245                     T3GPPS          equ	581	;# 
  5416   000246                     T5CKIPPS        equ	582	;# 
  5417   000247                     T5GPPS          equ	583	;# 
  5418   000248                     T2INPPS         equ	584	;# 
  5419   000249                     T4INPPS         equ	585	;# 
  5420   00024A                     T6INPPS         equ	586	;# 
  5421   00024B                     TUIN0PPS        equ	587	;# 
  5422   00024C                     TUIN1PPS        equ	588	;# 
  5423   00024F                     CCP1PPS         equ	591	;# 
  5424   000250                     CCP2PPS         equ	592	;# 
  5425   000251                     CCP3PPS         equ	593	;# 
  5426   000253                     PWM1ERSPPS      equ	595	;# 
  5427   000254                     PWM2ERSPPS      equ	596	;# 
  5428   000255                     PWM3ERSPPS      equ	597	;# 
  5429   000256                     PWM4ERSPPS      equ	598	;# 
  5430   000257                     PWMIN0PPS       equ	599	;# 
  5431   000258                     PWMIN1PPS       equ	600	;# 
  5432   000259                     SMT1WINPPS      equ	601	;# 
  5433   00025A                     SMT1SIGPPS      equ	602	;# 
  5434   00025B                     CWG1PPS         equ	603	;# 
  5435   00025B                     CWG1INPPS       equ	603	;# 
  5436   00025C                     CWG2PPS         equ	604	;# 
  5437   00025C                     CWG2INPPS       equ	604	;# 
  5438   00025D                     CWG3PPS         equ	605	;# 
  5439   00025D                     CWG3INPPS       equ	605	;# 
  5440   00025E                     MD1CARLPPS      equ	606	;# 
  5441   00025E                     MDCARLPPS       equ	606	;# 
  5442   00025F                     MD1CARHPPS      equ	607	;# 
  5443   00025F                     MDCARHPPS       equ	607	;# 
  5444   000260                     MD1SRCPPS       equ	608	;# 
  5445   000260                     MDSRCPPS        equ	608	;# 
  5446   000261                     CLCIN0PPS       equ	609	;# 
  5447   000262                     CLCIN1PPS       equ	610	;# 
  5448   000263                     CLCIN2PPS       equ	611	;# 
  5449   000264                     CLCIN3PPS       equ	612	;# 
  5450   000265                     CLCIN4PPS       equ	613	;# 
  5451   000266                     CLCIN5PPS       equ	614	;# 
  5452   000267                     CLCIN6PPS       equ	615	;# 
  5453   000268                     CLCIN7PPS       equ	616	;# 
  5454   000269                     ADACTPPS        equ	617	;# 
  5455   00026A                     SPI1SCKPPS      equ	618	;# 
  5456   00026B                     SPI1SDIPPS      equ	619	;# 
  5457   00026C                     SPI1SSPPS       equ	620	;# 
  5458   00026D                     SPI2SCKPPS      equ	621	;# 
  5459   00026E                     SPI2SDIPPS      equ	622	;# 
  5460   00026F                     SPI2SSPPS       equ	623	;# 
  5461   000270                     I2C1SDAPPS      equ	624	;# 
  5462   000271                     I2C1SCLPPS      equ	625	;# 
  5463   000272                     U1RXPPS         equ	626	;# 
  5464   000273                     U1CTSPPS        equ	627	;# 
  5465   000274                     U2RXPPS         equ	628	;# 
  5466   000275                     U2CTSPPS        equ	629	;# 
  5467   000276                     U3RXPPS         equ	630	;# 
  5468   000277                     U3CTSPPS        equ	631	;# 
  5469   000278                     U4RXPPS         equ	632	;# 
  5470   000279                     U4CTSPPS        equ	633	;# 
  5471   00027A                     U5RXPPS         equ	634	;# 
  5472   00027B                     U5CTSPPS        equ	635	;# 
  5473   000286                     RC4I2C          equ	646	;# 
  5474   000287                     RC3I2C          equ	647	;# 
  5475   000288                     RB2I2C          equ	648	;# 
  5476   000289                     RB1I2C          equ	649	;# 
  5477   00028A                     I2C1RXB         equ	650	;# 
  5478   00028B                     I2C1TXB         equ	651	;# 
  5479   00028C                     I2C1CNTL        equ	652	;# 
  5480   00028D                     I2C1CNTH        equ	653	;# 
  5481   00028E                     I2C1ADB0        equ	654	;# 
  5482   00028F                     I2C1ADB1        equ	655	;# 
  5483   000290                     I2C1ADR0        equ	656	;# 
  5484   000291                     I2C1ADR1        equ	657	;# 
  5485   000292                     I2C1ADR2        equ	658	;# 
  5486   000293                     I2C1ADR3        equ	659	;# 
  5487   000294                     I2C1CON0        equ	660	;# 
  5488   000295                     I2C1CON1        equ	661	;# 
  5489   000296                     I2C1CON2        equ	662	;# 
  5490   000297                     I2C1ERR         equ	663	;# 
  5491   000298                     I2C1STAT0       equ	664	;# 
  5492   000299                     I2C1STAT1       equ	665	;# 
  5493   00029A                     I2C1PIR         equ	666	;# 
  5494   00029B                     I2C1PIE         equ	667	;# 
  5495   00029C                     I2C1BTO         equ	668	;# 
  5496   00029D                     I2C1BAUD        equ	669	;# 
  5497   00029E                     I2C1CLK         equ	670	;# 
  5498   00029F                     I2C1BTOC        equ	671	;# 
  5499   0002A1                     U1RXB           equ	673	;# 
  5500   0002A1                     U1RXBL          equ	673	;# 
  5501   0002A2                     U1RXCHK         equ	674	;# 
  5502   0002A3                     U1TXB           equ	675	;# 
  5503   0002A3                     U1TXBL          equ	675	;# 
  5504   0002A4                     U1TXCHK         equ	676	;# 
  5505   0002A5                     U1P1            equ	677	;# 
  5506   0002A5                     U1P1L           equ	677	;# 
  5507   0002A6                     U1P1H           equ	678	;# 
  5508   0002A7                     U1P2            equ	679	;# 
  5509   0002A7                     U1P2L           equ	679	;# 
  5510   0002A8                     U1P2H           equ	680	;# 
  5511   0002A9                     U1P3            equ	681	;# 
  5512   0002A9                     U1P3L           equ	681	;# 
  5513   0002AA                     U1P3H           equ	682	;# 
  5514   0002AB                     U1CON0          equ	683	;# 
  5515   0002AC                     U1CON1          equ	684	;# 
  5516   0002AD                     U1CON2          equ	685	;# 
  5517   0002AE                     U1BRG           equ	686	;# 
  5518   0002AE                     U1BRGL          equ	686	;# 
  5519   0002AF                     U1BRGH          equ	687	;# 
  5520   0002B0                     U1FIFO          equ	688	;# 
  5521   0002B1                     U1UIR           equ	689	;# 
  5522   0002B2                     U1ERRIR         equ	690	;# 
  5523   0002B3                     U1ERRIE         equ	691	;# 
  5524   0002B4                     U2RXB           equ	692	;# 
  5525   0002B4                     U2RXBL          equ	692	;# 
  5526   0002B5                     U2RXCHK         equ	693	;# 
  5527   0002B6                     U2TXB           equ	694	;# 
  5528   0002B6                     U2TXBL          equ	694	;# 
  5529   0002B7                     U2TXCHK         equ	695	;# 
  5530   0002B8                     U2P1            equ	696	;# 
  5531   0002B8                     U2P1L           equ	696	;# 
  5532   0002B9                     U2P1H           equ	697	;# 
  5533   0002BA                     U2P2            equ	698	;# 
  5534   0002BA                     U2P2L           equ	698	;# 
  5535   0002BB                     U2P2H           equ	699	;# 
  5536   0002BC                     U2P3            equ	700	;# 
  5537   0002BC                     U2P3L           equ	700	;# 
  5538   0002BD                     U2P3H           equ	701	;# 
  5539   0002BE                     U2CON0          equ	702	;# 
  5540   0002BF                     U2CON1          equ	703	;# 
  5541   0002C0                     U2CON2          equ	704	;# 
  5542   0002C1                     U2BRG           equ	705	;# 
  5543   0002C1                     U2BRGL          equ	705	;# 
  5544   0002C2                     U2BRGH          equ	706	;# 
  5545   0002C3                     U2FIFO          equ	707	;# 
  5546   0002C4                     U2UIR           equ	708	;# 
  5547   0002C5                     U2ERRIR         equ	709	;# 
  5548   0002C6                     U2ERRIE         equ	710	;# 
  5549   0002C7                     U3RXB           equ	711	;# 
  5550   0002C7                     U3RXBL          equ	711	;# 
  5551   0002C9                     U3TXB           equ	713	;# 
  5552   0002C9                     U3TXBL          equ	713	;# 
  5553   0002CB                     U3P1            equ	715	;# 
  5554   0002CB                     U3P1L           equ	715	;# 
  5555   0002CD                     U3P2            equ	717	;# 
  5556   0002CD                     U3P2L           equ	717	;# 
  5557   0002CF                     U3P3            equ	719	;# 
  5558   0002CF                     U3P3L           equ	719	;# 
  5559   0002D1                     U3CON0          equ	721	;# 
  5560   0002D2                     U3CON1          equ	722	;# 
  5561   0002D3                     U3CON2          equ	723	;# 
  5562   0002D4                     U3BRG           equ	724	;# 
  5563   0002D4                     U3BRGL          equ	724	;# 
  5564   0002D5                     U3BRGH          equ	725	;# 
  5565   0002D6                     U3FIFO          equ	726	;# 
  5566   0002D7                     U3UIR           equ	727	;# 
  5567   0002D8                     U3ERRIR         equ	728	;# 
  5568   0002D9                     U3ERRIE         equ	729	;# 
  5569   0002DA                     U4RXB           equ	730	;# 
  5570   0002DA                     U4RXBL          equ	730	;# 
  5571   0002DC                     U4TXB           equ	732	;# 
  5572   0002DC                     U4TXBL          equ	732	;# 
  5573   0002DE                     U4P1            equ	734	;# 
  5574   0002DE                     U4P1L           equ	734	;# 
  5575   0002E0                     U4P2            equ	736	;# 
  5576   0002E0                     U4P2L           equ	736	;# 
  5577   0002E2                     U4P3            equ	738	;# 
  5578   0002E2                     U4P3L           equ	738	;# 
  5579   0002E4                     U4CON0          equ	740	;# 
  5580   0002E5                     U4CON1          equ	741	;# 
  5581   0002E6                     U4CON2          equ	742	;# 
  5582   0002E7                     U4BRG           equ	743	;# 
  5583   0002E7                     U4BRGL          equ	743	;# 
  5584   0002E8                     U4BRGH          equ	744	;# 
  5585   0002E9                     U4FIFO          equ	745	;# 
  5586   0002EA                     U4UIR           equ	746	;# 
  5587   0002EB                     U4ERRIR         equ	747	;# 
  5588   0002EC                     U4ERRIE         equ	748	;# 
  5589   0002ED                     U5RXB           equ	749	;# 
  5590   0002ED                     U5RXBL          equ	749	;# 
  5591   0002EF                     U5TXB           equ	751	;# 
  5592   0002EF                     U5TXBL          equ	751	;# 
  5593   0002F1                     U5P1            equ	753	;# 
  5594   0002F1                     U5P1L           equ	753	;# 
  5595   0002F3                     U5P2            equ	755	;# 
  5596   0002F3                     U5P2L           equ	755	;# 
  5597   0002F5                     U5P3            equ	757	;# 
  5598   0002F5                     U5P3L           equ	757	;# 
  5599   0002F7                     U5CON0          equ	759	;# 
  5600   0002F8                     U5CON1          equ	760	;# 
  5601   0002F9                     U5CON2          equ	761	;# 
  5602   0002FA                     U5BRG           equ	762	;# 
  5603   0002FA                     U5BRGL          equ	762	;# 
  5604   0002FB                     U5BRGH          equ	763	;# 
  5605   0002FC                     U5FIFO          equ	764	;# 
  5606   0002FD                     U5UIR           equ	765	;# 
  5607   0002FE                     U5ERRIR         equ	766	;# 
  5608   0002FF                     U5ERRIE         equ	767	;# 
  5609   000300                     SMT1TMR         equ	768	;# 
  5610   000300                     SMT1TMRL        equ	768	;# 
  5611   000301                     SMT1TMRH        equ	769	;# 
  5612   000302                     SMT1TMRU        equ	770	;# 
  5613   000303                     SMT1CPR         equ	771	;# 
  5614   000303                     SMT1CPRL        equ	771	;# 
  5615   000304                     SMT1CPRH        equ	772	;# 
  5616   000305                     SMT1CPRU        equ	773	;# 
  5617   000306                     SMT1CPW         equ	774	;# 
  5618   000306                     SMT1CPWL        equ	774	;# 
  5619   000307                     SMT1CPWH        equ	775	;# 
  5620   000308                     SMT1CPWU        equ	776	;# 
  5621   000309                     SMT1PR          equ	777	;# 
  5622   000309                     SMT1PRL         equ	777	;# 
  5623   00030A                     SMT1PRH         equ	778	;# 
  5624   00030B                     SMT1PRU         equ	779	;# 
  5625   00030C                     SMT1CON0        equ	780	;# 
  5626   00030D                     SMT1CON1        equ	781	;# 
  5627   00030E                     SMT1STAT        equ	782	;# 
  5628   00030F                     SMT1CLK         equ	783	;# 
  5629   000310                     SMT1SIG         equ	784	;# 
  5630   000311                     SMT1WIN         equ	785	;# 
  5631   000318                     TMR0L           equ	792	;# 
  5632   000318                     TMR0            equ	792	;# 
  5633   000319                     TMR0H           equ	793	;# 
  5634   000319                     PR0             equ	793	;# 
  5635   00031A                     T0CON0          equ	794	;# 
  5636   00031B                     T0CON1          equ	795	;# 
  5637   00031C                     TMR1            equ	796	;# 
  5638   00031C                     TMR1L           equ	796	;# 
  5639   00031D                     TMR1H           equ	797	;# 
  5640   00031E                     T1CON           equ	798	;# 
  5641   00031E                     TMR1CON         equ	798	;# 
  5642   00031F                     T1GCON          equ	799	;# 
  5643   00031F                     TMR1GCON        equ	799	;# 
  5644   000320                     T1GATE          equ	800	;# 
  5645   000320                     TMR1GATE        equ	800	;# 
  5646   000321                     T1CLK           equ	801	;# 
  5647   000321                     TMR1CLK         equ	801	;# 
  5648   000321                     PR1             equ	801	;# 
  5649   000322                     T2TMR           equ	802	;# 
  5650   000322                     TMR2            equ	802	;# 
  5651   000323                     T2PR            equ	803	;# 
  5652   000323                     PR2             equ	803	;# 
  5653   000324                     T2CON           equ	804	;# 
  5654   000325                     T2HLT           equ	805	;# 
  5655   000326                     T2CLKCON        equ	806	;# 
  5656   000326                     T2CLK           equ	806	;# 
  5657   000327                     T2RST           equ	807	;# 
  5658   000328                     TMR3            equ	808	;# 
  5659   000328                     TMR3L           equ	808	;# 
  5660   000329                     TMR3H           equ	809	;# 
  5661   00032A                     T3CON           equ	810	;# 
  5662   00032A                     TMR3CON         equ	810	;# 
  5663   00032B                     T3GCON          equ	811	;# 
  5664   00032B                     TMR3GCON        equ	811	;# 
  5665   00032C                     T3GATE          equ	812	;# 
  5666   00032C                     TMR3GATE        equ	812	;# 
  5667   00032D                     T3CLK           equ	813	;# 
  5668   00032D                     TMR3CLK         equ	813	;# 
  5669   00032D                     PR3             equ	813	;# 
  5670   00032E                     T4TMR           equ	814	;# 
  5671   00032E                     TMR4            equ	814	;# 
  5672   00032F                     T4PR            equ	815	;# 
  5673   00032F                     PR4             equ	815	;# 
  5674   000330                     T4CON           equ	816	;# 
  5675   000331                     T4HLT           equ	817	;# 
  5676   000332                     T4CLKCON        equ	818	;# 
  5677   000332                     T4CLK           equ	818	;# 
  5678   000333                     T4RST           equ	819	;# 
  5679   000334                     TMR5            equ	820	;# 
  5680   000334                     TMR5L           equ	820	;# 
  5681   000335                     TMR5H           equ	821	;# 
  5682   000336                     T5CON           equ	822	;# 
  5683   000336                     TMR5CON         equ	822	;# 
  5684   000337                     T5GCON          equ	823	;# 
  5685   000337                     TMR5GCON        equ	823	;# 
  5686   000338                     T5GATE          equ	824	;# 
  5687   000338                     TMR5GATE        equ	824	;# 
  5688   000339                     T5CLK           equ	825	;# 
  5689   000339                     TMR5CLK         equ	825	;# 
  5690   000339                     PR5             equ	825	;# 
  5691   00033A                     T6TMR           equ	826	;# 
  5692   00033A                     TMR6            equ	826	;# 
  5693   00033B                     T6PR            equ	827	;# 
  5694   00033B                     PR6             equ	827	;# 
  5695   00033C                     T6CON           equ	828	;# 
  5696   00033D                     T6HLT           equ	829	;# 
  5697   00033E                     T6CLKCON        equ	830	;# 
  5698   00033E                     T6CLK           equ	830	;# 
  5699   00033F                     T6RST           equ	831	;# 
  5700   000340                     CCPR1           equ	832	;# 
  5701   000340                     CCPR1L          equ	832	;# 
  5702   000341                     CCPR1H          equ	833	;# 
  5703   000342                     CCP1CON         equ	834	;# 
  5704   000343                     CCP1CAP         equ	835	;# 
  5705   000344                     CCPR2           equ	836	;# 
  5706   000344                     CCPR2L          equ	836	;# 
  5707   000345                     CCPR2H          equ	837	;# 
  5708   000346                     CCP2CON         equ	838	;# 
  5709   000347                     CCP2CAP         equ	839	;# 
  5710   000348                     CCPR3           equ	840	;# 
  5711   000348                     CCPR3L          equ	840	;# 
  5712   000349                     CCPR3H          equ	841	;# 
  5713   00034A                     CCP3CON         equ	842	;# 
  5714   00034B                     CCP3CAP         equ	843	;# 
  5715   00034C                     CCPTMRS0        equ	844	;# 
  5716   00034F                     CRCDATA         equ	847	;# 
  5717   00034F                     CRCDATAL        equ	847	;# 
  5718   000350                     CRCDATAH        equ	848	;# 
  5719   000351                     CRCDATAU        equ	849	;# 
  5720   000352                     CRCDATAT        equ	850	;# 
  5721   000353                     CRCOUT          equ	851	;# 
  5722   000353                     CRCSHFT         equ	851	;# 
  5723   000353                     CRCXOR          equ	851	;# 
  5724   000353                     CRCOUTL         equ	851	;# 
  5725   000353                     CRCSHFTL        equ	851	;# 
  5726   000353                     CRCSHIFTL       equ	851	;# 
  5727   000353                     CRCXORL         equ	851	;# 
  5728   000354                     CRCOUTH         equ	852	;# 
  5729   000354                     CRCSHFTH        equ	852	;# 
  5730   000354                     CRCSHIFTH       equ	852	;# 
  5731   000354                     CRCXORH         equ	852	;# 
  5732   000355                     CRCOUTU         equ	853	;# 
  5733   000355                     CRCSHFTU        equ	853	;# 
  5734   000355                     CRCSHIFTU       equ	853	;# 
  5735   000355                     CRCXORU         equ	853	;# 
  5736   000356                     CRCOUTT         equ	854	;# 
  5737   000356                     CRCSHFTT        equ	854	;# 
  5738   000356                     CRCSHIFTT       equ	854	;# 
  5739   000356                     CRCXORT         equ	854	;# 
  5740   000357                     CRCCON0         equ	855	;# 
  5741   000358                     CRCCON1         equ	856	;# 
  5742   000359                     CRCCON2         equ	857	;# 
  5743   00035A                     SCANLADR        equ	858	;# 
  5744   00035A                     SCANLADRL       equ	858	;# 
  5745   00035B                     SCANLADRH       equ	859	;# 
  5746   00035C                     SCANLADRU       equ	860	;# 
  5747   00035D                     SCANHADR        equ	861	;# 
  5748   00035D                     SCANHADRL       equ	861	;# 
  5749   00035E                     SCANHADRH       equ	862	;# 
  5750   00035F                     SCANHADRU       equ	863	;# 
  5751   000360                     SCANCON0        equ	864	;# 
  5752   000361                     SCANTRIG        equ	865	;# 
  5753   000362                     IPR0            equ	866	;# 
  5754   000363                     IPR1            equ	867	;# 
  5755   000364                     IPR2            equ	868	;# 
  5756   000365                     IPR3            equ	869	;# 
  5757   000366                     IPR4            equ	870	;# 
  5758   000367                     IPR5            equ	871	;# 
  5759   000368                     IPR6            equ	872	;# 
  5760   000369                     IPR7            equ	873	;# 
  5761   00036A                     IPR8            equ	874	;# 
  5762   00036B                     IPR9            equ	875	;# 
  5763   00036C                     IPR10           equ	876	;# 
  5764   00036D                     IPR11           equ	877	;# 
  5765   00036E                     IPR12           equ	878	;# 
  5766   00036F                     IPR13           equ	879	;# 
  5767   000370                     IPR14           equ	880	;# 
  5768   000371                     IPR15           equ	881	;# 
  5769   000373                     STATUS_CSHAD    equ	883	;# 
  5770   000374                     WREG_CSHAD      equ	884	;# 
  5771   000375                     BSR_CSHAD       equ	885	;# 
  5772   000376                     SHADCON         equ	886	;# 
  5773   000377                     STATUS_SHAD     equ	887	;# 
  5774   000378                     WREG_SHAD       equ	888	;# 
  5775   000379                     BSR_SHAD        equ	889	;# 
  5776   00037A                     PCLATH_SHAD     equ	890	;# 
  5777   00037B                     PCLATU_SHAD     equ	891	;# 
  5778   00037C                     FSR0SH          equ	892	;# 
  5779   00037C                     FSR0L_SHAD      equ	892	;# 
  5780   00037D                     FSR0H_SHAD      equ	893	;# 
  5781   00037E                     FSR1SH          equ	894	;# 
  5782   00037E                     FSR1L_SHAD      equ	894	;# 
  5783   00037F                     FSR1H_SHAD      equ	895	;# 
  5784   000380                     FSR2SH          equ	896	;# 
  5785   000380                     FSR2L_SHAD      equ	896	;# 
  5786   000381                     FSR2H_SHAD      equ	897	;# 
  5787   000382                     PRODSH          equ	898	;# 
  5788   000382                     PRODL_SHAD      equ	898	;# 
  5789   000383                     PRODH_SHAD      equ	899	;# 
  5790   000387                     TU16ACON0       equ	903	;# 
  5791   000388                     TU16ACON1       equ	904	;# 
  5792   000389                     TU16AHLT        equ	905	;# 
  5793   00038A                     TU16APS         equ	906	;# 
  5794   00038B                     TU16ATMR        equ	907	;# 
  5795   00038B                     TU16ACR         equ	907	;# 
  5796   00038B                     TU16ATMRL       equ	907	;# 
  5797   00038B                     TU16ACRL        equ	907	;# 
  5798   00038C                     TU16ATMRH       equ	908	;# 
  5799   00038C                     TU16ACRH        equ	908	;# 
  5800   00038D                     TU16APR         equ	909	;# 
  5801   00038D                     TU16APRL        equ	909	;# 
  5802   00038E                     TU16APRH        equ	910	;# 
  5803   00038F                     TU16ACLK        equ	911	;# 
  5804   000390                     TU16AERS        equ	912	;# 
  5805   000393                     TU16BCON0       equ	915	;# 
  5806   000394                     TU16BCON1       equ	916	;# 
  5807   000395                     TU16BHLT        equ	917	;# 
  5808   000396                     TU16BPS         equ	918	;# 
  5809   000397                     TU16BTMR        equ	919	;# 
  5810   000397                     TU16BCR         equ	919	;# 
  5811   000397                     TU16BTMRL       equ	919	;# 
  5812   000397                     TU16BCRL        equ	919	;# 
  5813   000398                     TU16BTMRH       equ	920	;# 
  5814   000398                     TU16BCRH        equ	920	;# 
  5815   000399                     TU16BPR         equ	921	;# 
  5816   000399                     TU16BPRL        equ	921	;# 
  5817   00039A                     TU16BPRH        equ	922	;# 
  5818   00039B                     TU16BCLK        equ	923	;# 
  5819   00039C                     TU16BERS        equ	924	;# 
  5820   0003BB                     TUCHAIN         equ	955	;# 
  5821   0003BC                     CWG1CLK         equ	956	;# 
  5822   0003BC                     CWG1CLKCON      equ	956	;# 
  5823   0003BD                     CWG1ISM         equ	957	;# 
  5824   0003BE                     CWG1DBR         equ	958	;# 
  5825   0003BF                     CWG1DBF         equ	959	;# 
  5826   0003C0                     CWG1CON0        equ	960	;# 
  5827   0003C1                     CWG1CON1        equ	961	;# 
  5828   0003C2                     CWG1AS0         equ	962	;# 
  5829   0003C3                     CWG1AS1         equ	963	;# 
  5830   0003C4                     CWG1STR         equ	964	;# 
  5831   0003C5                     CWG2CLK         equ	965	;# 
  5832   0003C5                     CWG2CLKCON      equ	965	;# 
  5833   0003C6                     CWG2ISM         equ	966	;# 
  5834   0003C7                     CWG2DBR         equ	967	;# 
  5835   0003C8                     CWG2DBF         equ	968	;# 
  5836   0003C9                     CWG2CON0        equ	969	;# 
  5837   0003CA                     CWG2CON1        equ	970	;# 
  5838   0003CB                     CWG2AS0         equ	971	;# 
  5839   0003CC                     CWG2AS1         equ	972	;# 
  5840   0003CD                     CWG2STR         equ	973	;# 
  5841   0003CE                     CWG3CLK         equ	974	;# 
  5842   0003CE                     CWG3CLKCON      equ	974	;# 
  5843   0003CF                     CWG3ISM         equ	975	;# 
  5844   0003D0                     CWG3DBR         equ	976	;# 
  5845   0003D1                     CWG3DBF         equ	977	;# 
  5846   0003D2                     CWG3CON0        equ	978	;# 
  5847   0003D3                     CWG3CON1        equ	979	;# 
  5848   0003D4                     CWG3AS0         equ	980	;# 
  5849   0003D5                     CWG3AS1         equ	981	;# 
  5850   0003D6                     CWG3STR         equ	982	;# 
  5851   0003D7                     FVRCON          equ	983	;# 
  5852   0003D8                     ADCPCON         equ	984	;# 
  5853   0003D8                     ADCP            equ	984	;# 
  5854   0003D9                     ADLTH           equ	985	;# 
  5855   0003D9                     ADLTHL          equ	985	;# 
  5856   0003DA                     ADLTHH          equ	986	;# 
  5857   0003DB                     ADUTH           equ	987	;# 
  5858   0003DB                     ADUTHL          equ	987	;# 
  5859   0003DC                     ADUTHH          equ	988	;# 
  5860   0003DD                     ADERR           equ	989	;# 
  5861   0003DD                     ADERRL          equ	989	;# 
  5862   0003DE                     ADERRH          equ	990	;# 
  5863   0003DF                     ADSTPT          equ	991	;# 
  5864   0003DF                     ADSTPTL         equ	991	;# 
  5865   0003E0                     ADSTPTH         equ	992	;# 
  5866   0003E1                     ADFLTR          equ	993	;# 
  5867   0003E1                     ADFLTRL         equ	993	;# 
  5868   0003E2                     ADFLTRH         equ	994	;# 
  5869   0003E3                     ADACC           equ	995	;# 
  5870   0003E3                     ADACCL          equ	995	;# 
  5871   0003E4                     ADACCH          equ	996	;# 
  5872   0003E5                     ADACCU          equ	997	;# 
  5873   0003E6                     ADCNT           equ	998	;# 
  5874   0003E7                     ADRPT           equ	999	;# 
  5875   0003E8                     ADPREV          equ	1000	;# 
  5876   0003E8                     ADPREVL         equ	1000	;# 
  5877   0003E9                     ADPREVH         equ	1001	;# 
  5878   0003EA                     ADRES           equ	1002	;# 
  5879   0003EA                     ADRESL          equ	1002	;# 
  5880   0003EB                     ADRESH          equ	1003	;# 
  5881   0003EC                     ADPCH           equ	1004	;# 
  5882   0003EE                     ADACQ           equ	1006	;# 
  5883   0003EE                     ADACQL          equ	1006	;# 
  5884   0003EF                     ADACQH          equ	1007	;# 
  5885   0003F0                     ADCAP           equ	1008	;# 
  5886   0003F1                     ADPRE           equ	1009	;# 
  5887   0003F1                     ADPREL          equ	1009	;# 
  5888   0003F2                     ADPREH          equ	1010	;# 
  5889   0003F3                     ADCON0          equ	1011	;# 
  5890   0003F4                     ADCON1          equ	1012	;# 
  5891   0003F5                     ADCON2          equ	1013	;# 
  5892   0003F6                     ADCON3          equ	1014	;# 
  5893   0003F7                     ADSTAT          equ	1015	;# 
  5894   0003F8                     ADREF           equ	1016	;# 
  5895   0003F9                     ADACT           equ	1017	;# 
  5896   0003FA                     ADCLK           equ	1018	;# 
  5897   0003FB                     ADCTX           equ	1019	;# 
  5898   0003FC                     ADCSEL1         equ	1020	;# 
  5899   0003FD                     ADCSEL2         equ	1021	;# 
  5900   0003FE                     ADCSEL3         equ	1022	;# 
  5901   0003FF                     ADCSEL4         equ	1023	;# 
  5902   000400                     ANSELA          equ	1024	;# 
  5903   000401                     WPUA            equ	1025	;# 
  5904   000402                     ODCONA          equ	1026	;# 
  5905   000403                     SLRCONA         equ	1027	;# 
  5906   000404                     INLVLA          equ	1028	;# 
  5907   000405                     IOCAP           equ	1029	;# 
  5908   000406                     IOCAN           equ	1030	;# 
  5909   000407                     IOCAF           equ	1031	;# 
  5910   000408                     ANSELB          equ	1032	;# 
  5911   000409                     WPUB            equ	1033	;# 
  5912   00040A                     ODCONB          equ	1034	;# 
  5913   00040B                     SLRCONB         equ	1035	;# 
  5914   00040C                     INLVLB          equ	1036	;# 
  5915   00040D                     IOCBP           equ	1037	;# 
  5916   00040E                     IOCBN           equ	1038	;# 
  5917   00040F                     IOCBF           equ	1039	;# 
  5918   000410                     ANSELC          equ	1040	;# 
  5919   000411                     WPUC            equ	1041	;# 
  5920   000412                     ODCONC          equ	1042	;# 
  5921   000413                     SLRCONC         equ	1043	;# 
  5922   000414                     INLVLC          equ	1044	;# 
  5923   000415                     IOCCP           equ	1045	;# 
  5924   000416                     IOCCN           equ	1046	;# 
  5925   000417                     IOCCF           equ	1047	;# 
  5926   000421                     WPUE            equ	1057	;# 
  5927   000424                     INLVLE          equ	1060	;# 
  5928   000425                     IOCEP           equ	1061	;# 
  5929   000426                     IOCEN           equ	1062	;# 
  5930   000427                     IOCEF           equ	1063	;# 
  5931   000440                     NCO1ACC         equ	1088	;# 
  5932   000440                     NCO1ACCL        equ	1088	;# 
  5933   000441                     NCO1ACCH        equ	1089	;# 
  5934   000442                     NCO1ACCU        equ	1090	;# 
  5935   000443                     NCO1INC         equ	1091	;# 
  5936   000443                     NCO1INCL        equ	1091	;# 
  5937   000444                     NCO1INCH        equ	1092	;# 
  5938   000445                     NCO1INCU        equ	1093	;# 
  5939   000446                     NCO1CON         equ	1094	;# 
  5940   000447                     NCO1CLK         equ	1095	;# 
  5941   000448                     NCO2ACC         equ	1096	;# 
  5942   000448                     NCO2ACCL        equ	1096	;# 
  5943   000449                     NCO2ACCH        equ	1097	;# 
  5944   00044A                     NCO2ACCU        equ	1098	;# 
  5945   00044B                     NCO2INC         equ	1099	;# 
  5946   00044B                     NCO2INCL        equ	1099	;# 
  5947   00044C                     NCO2INCH        equ	1100	;# 
  5948   00044D                     NCO2INCU        equ	1101	;# 
  5949   00044E                     NCO2CON         equ	1102	;# 
  5950   00044F                     NCO2CLK         equ	1103	;# 
  5951   000450                     NCO3ACC         equ	1104	;# 
  5952   000450                     NCO3ACCL        equ	1104	;# 
  5953   000451                     NCO3ACCH        equ	1105	;# 
  5954   000452                     NCO3ACCU        equ	1106	;# 
  5955   000453                     NCO3INC         equ	1107	;# 
  5956   000453                     NCO3INCL        equ	1107	;# 
  5957   000454                     NCO3INCH        equ	1108	;# 
  5958   000455                     NCO3INCU        equ	1109	;# 
  5959   000456                     NCO3CON         equ	1110	;# 
  5960   000457                     NCO3CLK         equ	1111	;# 
  5961   000458                     FSCMCON         equ	1112	;# 
  5962   000459                     IVTLOCK         equ	1113	;# 
  5963   00045A                     IVTAD           equ	1114	;# 
  5964   00045A                     IVTADL          equ	1114	;# 
  5965   00045B                     IVTADH          equ	1115	;# 
  5966   00045C                     IVTADU          equ	1116	;# 
  5967   00045D                     IVTBASE         equ	1117	;# 
  5968   00045D                     IVTBASEL        equ	1117	;# 
  5969   00045E                     IVTBASEH        equ	1118	;# 
  5970   00045F                     IVTBASEU        equ	1119	;# 
  5971   000460                     PWM1ERS         equ	1120	;# 
  5972   000461                     PWM1CLK         equ	1121	;# 
  5973   000462                     PWM1LDS         equ	1122	;# 
  5974   000463                     PWM1PR          equ	1123	;# 
  5975   000463                     PWM1PRL         equ	1123	;# 
  5976   000464                     PWM1PRH         equ	1124	;# 
  5977   000465                     PWM1CPRE        equ	1125	;# 
  5978   000466                     PWM1PIPOS       equ	1126	;# 
  5979   000467                     PWM1GIR         equ	1127	;# 
  5980   000468                     PWM1GIE         equ	1128	;# 
  5981   000469                     PWM1CON         equ	1129	;# 
  5982   00046A                     PWM1S1CFG       equ	1130	;# 
  5983   00046B                     PWM1S1P1        equ	1131	;# 
  5984   00046B                     PWM1S1P1L       equ	1131	;# 
  5985   00046C                     PWM1S1P1H       equ	1132	;# 
  5986   00046D                     PWM1S1P2        equ	1133	;# 
  5987   00046D                     PWM1S1P2L       equ	1133	;# 
  5988   00046E                     PWM1S1P2H       equ	1134	;# 
  5989   00046F                     PWM2ERS         equ	1135	;# 
  5990   000470                     PWM2CLK         equ	1136	;# 
  5991   000471                     PWM2LDS         equ	1137	;# 
  5992   000472                     PWM2PR          equ	1138	;# 
  5993   000472                     PWM2PRL         equ	1138	;# 
  5994   000473                     PWM2PRH         equ	1139	;# 
  5995   000474                     PWM2CPRE        equ	1140	;# 
  5996   000475                     PWM2PIPOS       equ	1141	;# 
  5997   000476                     PWM2GIR         equ	1142	;# 
  5998   000477                     PWM2GIE         equ	1143	;# 
  5999   000478                     PWM2CON         equ	1144	;# 
  6000   000479                     PWM2S1CFG       equ	1145	;# 
  6001   00047A                     PWM2S1P1        equ	1146	;# 
  6002   00047A                     PWM2S1P1L       equ	1146	;# 
  6003   00047B                     PWM2S1P1H       equ	1147	;# 
  6004   00047C                     PWM2S1P2        equ	1148	;# 
  6005   00047C                     PWM2S1P2L       equ	1148	;# 
  6006   00047D                     PWM2S1P2H       equ	1149	;# 
  6007   00047E                     PWM3ERS         equ	1150	;# 
  6008   00047F                     PWM3CLK         equ	1151	;# 
  6009   000480                     PWM3LDS         equ	1152	;# 
  6010   000481                     PWM3PR          equ	1153	;# 
  6011   000481                     PWM3PRL         equ	1153	;# 
  6012   000482                     PWM3PRH         equ	1154	;# 
  6013   000483                     PWM3CPRE        equ	1155	;# 
  6014   000484                     PWM3PIPOS       equ	1156	;# 
  6015   000485                     PWM3GIR         equ	1157	;# 
  6016   000486                     PWM3GIE         equ	1158	;# 
  6017   000487                     PWM3CON         equ	1159	;# 
  6018   000488                     PWM3S1CFG       equ	1160	;# 
  6019   000489                     PWM3S1P1        equ	1161	;# 
  6020   000489                     PWM3S1P1L       equ	1161	;# 
  6021   00048A                     PWM3S1P1H       equ	1162	;# 
  6022   00048B                     PWM3S1P2        equ	1163	;# 
  6023   00048B                     PWM3S1P2L       equ	1163	;# 
  6024   00048C                     PWM3S1P2H       equ	1164	;# 
  6025   00048D                     PWM4ERS         equ	1165	;# 
  6026   00048E                     PWM4CLK         equ	1166	;# 
  6027   00048F                     PWM4LDS         equ	1167	;# 
  6028   000490                     PWM4PR          equ	1168	;# 
  6029   000490                     PWM4PRL         equ	1168	;# 
  6030   000491                     PWM4PRH         equ	1169	;# 
  6031   000492                     PWM4CPRE        equ	1170	;# 
  6032   000493                     PWM4PIPOS       equ	1171	;# 
  6033   000494                     PWM4GIR         equ	1172	;# 
  6034   000495                     PWM4GIE         equ	1173	;# 
  6035   000496                     PWM4CON         equ	1174	;# 
  6036   000497                     PWM4S1CFG       equ	1175	;# 
  6037   000498                     PWM4S1P1        equ	1176	;# 
  6038   000498                     PWM4S1P1L       equ	1176	;# 
  6039   000499                     PWM4S1P1H       equ	1177	;# 
  6040   00049A                     PWM4S1P2        equ	1178	;# 
  6041   00049A                     PWM4S1P2L       equ	1178	;# 
  6042   00049B                     PWM4S1P2H       equ	1179	;# 
  6043   00049C                     PWMLOAD         equ	1180	;# 
  6044   00049D                     PWMEN           equ	1181	;# 
  6045   00049E                     PIE0            equ	1182	;# 
  6046   00049F                     PIE1            equ	1183	;# 
  6047   0004A0                     PIE2            equ	1184	;# 
  6048   0004A1                     PIE3            equ	1185	;# 
  6049   0004A2                     PIE4            equ	1186	;# 
  6050   0004A3                     PIE5            equ	1187	;# 
  6051   0004A4                     PIE6            equ	1188	;# 
  6052   0004A5                     PIE7            equ	1189	;# 
  6053   0004A6                     PIE8            equ	1190	;# 
  6054   0004A7                     PIE9            equ	1191	;# 
  6055   0004A8                     PIE10           equ	1192	;# 
  6056   0004A9                     PIE11           equ	1193	;# 
  6057   0004AA                     PIE12           equ	1194	;# 
  6058   0004AB                     PIE13           equ	1195	;# 
  6059   0004AC                     PIE14           equ	1196	;# 
  6060   0004AD                     PIE15           equ	1197	;# 
  6061   0004AE                     PIR0            equ	1198	;# 
  6062   0004AF                     PIR1            equ	1199	;# 
  6063   0004B0                     PIR2            equ	1200	;# 
  6064   0004B1                     PIR3            equ	1201	;# 
  6065   0004B2                     PIR4            equ	1202	;# 
  6066   0004B3                     PIR5            equ	1203	;# 
  6067   0004B4                     PIR6            equ	1204	;# 
  6068   0004B5                     PIR7            equ	1205	;# 
  6069   0004B6                     PIR8            equ	1206	;# 
  6070   0004B7                     PIR9            equ	1207	;# 
  6071   0004B8                     PIR10           equ	1208	;# 
  6072   0004B9                     PIR11           equ	1209	;# 
  6073   0004BA                     PIR12           equ	1210	;# 
  6074   0004BB                     PIR13           equ	1211	;# 
  6075   0004BC                     PIR14           equ	1212	;# 
  6076   0004BD                     PIR15           equ	1213	;# 
  6077   0004BE                     LATA            equ	1214	;# 
  6078   0004BF                     LATB            equ	1215	;# 
  6079   0004C0                     LATC            equ	1216	;# 
  6080   0004C6                     TRISA           equ	1222	;# 
  6081   0004C7                     TRISB           equ	1223	;# 
  6082   0004C8                     TRISC           equ	1224	;# 
  6083   0004CA                     TRISE           equ	1226	;# 
  6084   0004CE                     PORTA           equ	1230	;# 
  6085   0004CF                     PORTB           equ	1231	;# 
  6086   0004D0                     PORTC           equ	1232	;# 
  6087   0004D2                     PORTE           equ	1234	;# 
  6088   0004D6                     INTCON0         equ	1238	;# 
  6089   0004D7                     INTCON1         equ	1239	;# 
  6090   0004D8                     STATUS          equ	1240	;# 
  6091   0004D9                     FSR2            equ	1241	;# 
  6092   0004D9                     FSR2L           equ	1241	;# 
  6093   0004DA                     FSR2H           equ	1242	;# 
  6094   0004DB                     PLUSW2          equ	1243	;# 
  6095   0004DC                     PREINC2         equ	1244	;# 
  6096   0004DD                     POSTDEC2        equ	1245	;# 
  6097   0004DE                     POSTINC2        equ	1246	;# 
  6098   0004DF                     INDF2           equ	1247	;# 
  6099   0004E0                     BSR             equ	1248	;# 
  6100   0004E1                     FSR1            equ	1249	;# 
  6101   0004E1                     FSR1L           equ	1249	;# 
  6102   0004E2                     FSR1H           equ	1250	;# 
  6103   0004E3                     PLUSW1          equ	1251	;# 
  6104   0004E4                     PREINC1         equ	1252	;# 
  6105   0004E5                     POSTDEC1        equ	1253	;# 
  6106   0004E6                     POSTINC1        equ	1254	;# 
  6107   0004E7                     INDF1           equ	1255	;# 
  6108   0004E8                     WREG            equ	1256	;# 
  6109   0004E9                     FSR0            equ	1257	;# 
  6110   0004E9                     FSR0L           equ	1257	;# 
  6111   0004EA                     FSR0H           equ	1258	;# 
  6112   0004EB                     PLUSW0          equ	1259	;# 
  6113   0004EC                     PREINC0         equ	1260	;# 
  6114   0004ED                     POSTDEC0        equ	1261	;# 
  6115   0004EE                     POSTINC0        equ	1262	;# 
  6116   0004EF                     INDF0           equ	1263	;# 
  6117   0004F0                     PCON0           equ	1264	;# 
  6118   0004F1                     PCON1           equ	1265	;# 
  6119   0004F2                     CPUDOZE         equ	1266	;# 
  6120   0004F3                     PROD            equ	1267	;# 
  6121   0004F3                     PRODL           equ	1267	;# 
  6122   0004F4                     PRODH           equ	1268	;# 
  6123   0004F5                     TABLAT          equ	1269	;# 
  6124   0004F6                     TBLPTR          equ	1270	;# 
  6125   0004F6                     TBLPTRL         equ	1270	;# 
  6126   0004F7                     TBLPTRH         equ	1271	;# 
  6127   0004F8                     TBLPTRU         equ	1272	;# 
  6128   0004F9                     PCLAT           equ	1273	;# 
  6129   0004F9                     PCL             equ	1273	;# 
  6130   0004FA                     PCLATH          equ	1274	;# 
  6131   0004FB                     PCLATU          equ	1275	;# 
  6132   0004FC                     STKPTR          equ	1276	;# 
  6133   0004FD                     TOS             equ	1277	;# 
  6134   0004FD                     TOSL            equ	1277	;# 
  6135   0004FE                     TOSH            equ	1278	;# 
  6136   0004FF                     TOSU            equ	1279	;# 
  6137   000038                     BOOTREG         equ	56	;# 
  6138   000039                     CLKRCON         equ	57	;# 
  6139   00003A                     CLKRCLK         equ	58	;# 
  6140   000040                     NVMCON0         equ	64	;# 
  6141   000041                     NVMCON1         equ	65	;# 
  6142   000042                     NVMLOCK         equ	66	;# 
  6143   000043                     NVMADR          equ	67	;# 
  6144   000043                     NVMADRL         equ	67	;# 
  6145   000044                     NVMADRH         equ	68	;# 
  6146   000045                     NVMADRU         equ	69	;# 
  6147   000046                     NVMDAT          equ	70	;# 
  6148   000046                     NVMDATL         equ	70	;# 
  6149   000047                     NVMDATH         equ	71	;# 
  6150   000048                     VREGCON         equ	72	;# 
  6151   000049                     BORCON          equ	73	;# 
  6152   00004A                     HLVDCON0        equ	74	;# 
  6153   00004B                     HLVDCON1        equ	75	;# 
  6154   00004C                     ZCDCON          equ	76	;# 
  6155   000060                     PMD0            equ	96	;# 
  6156   000061                     PMD1            equ	97	;# 
  6157   000062                     PMD2            equ	98	;# 
  6158   000063                     PMD3            equ	99	;# 
  6159   000064                     PMD4            equ	100	;# 
  6160   000065                     PMD5            equ	101	;# 
  6161   000066                     PMD6            equ	102	;# 
  6162   000067                     PMD7            equ	103	;# 
  6163   000068                     PMD8            equ	104	;# 
  6164   00006A                     MD1CON0         equ	106	;# 
  6165   00006B                     MD1CON1         equ	107	;# 
  6166   00006C                     MD1SRC          equ	108	;# 
  6167   00006D                     MD1CARL         equ	109	;# 
  6168   00006E                     MD1CARH         equ	110	;# 
  6169   00006F                     CMOUT           equ	111	;# 
  6170   000070                     CM1CON0         equ	112	;# 
  6171   000071                     CM1CON1         equ	113	;# 
  6172   000072                     CM1NCH          equ	114	;# 
  6173   000073                     CM1PCH          equ	115	;# 
  6174   000074                     CM2CON0         equ	116	;# 
  6175   000075                     CM2CON1         equ	117	;# 
  6176   000076                     CM2NCH          equ	118	;# 
  6177   000077                     CM2PCH          equ	119	;# 
  6178   000078                     WDTCON0         equ	120	;# 
  6179   000079                     WDTCON1         equ	121	;# 
  6180   00007A                     WDTPSL          equ	122	;# 
  6181   00007B                     WDTPSH          equ	123	;# 
  6182   00007C                     WDTTMR          equ	124	;# 
  6183   00007D                     DAC1DAT         equ	125	;# 
  6184   00007D                     DAC1DATL        equ	125	;# 
  6185   00007F                     DAC1CON         equ	127	;# 
  6186   000080                     SPI1RXB         equ	128	;# 
  6187   000081                     SPI1TXB         equ	129	;# 
  6188   000082                     SPI1TCNT        equ	130	;# 
  6189   000082                     SPI1TCNTL       equ	130	;# 
  6190   000083                     SPI1TCNTH       equ	131	;# 
  6191   000084                     SPI1CON0        equ	132	;# 
  6192   000085                     SPI1CON1        equ	133	;# 
  6193   000086                     SPI1CON2        equ	134	;# 
  6194   000087                     SPI1STATUS      equ	135	;# 
  6195   000088                     SPI1TWIDTH      equ	136	;# 
  6196   000089                     SPI1BAUD        equ	137	;# 
  6197   00008A                     SPI1INTF        equ	138	;# 
  6198   00008B                     SPI1INTE        equ	139	;# 
  6199   00008C                     SPI1CLK         equ	140	;# 
  6200   00008D                     SPI2RXB         equ	141	;# 
  6201   00008E                     SPI2TXB         equ	142	;# 
  6202   00008F                     SPI2TCNT        equ	143	;# 
  6203   00008F                     SPI2TCNTL       equ	143	;# 
  6204   000090                     SPI2TCNTH       equ	144	;# 
  6205   000091                     SPI2CON0        equ	145	;# 
  6206   000092                     SPI2CON1        equ	146	;# 
  6207   000093                     SPI2CON2        equ	147	;# 
  6208   000094                     SPI2STATUS      equ	148	;# 
  6209   000095                     SPI2TWIDTH      equ	149	;# 
  6210   000096                     SPI2BAUD        equ	150	;# 
  6211   000097                     SPI2INTF        equ	151	;# 
  6212   000098                     SPI2INTE        equ	152	;# 
  6213   000099                     SPI2CLK         equ	153	;# 
  6214   0000AC                     ACTCON          equ	172	;# 
  6215   0000AD                     OSCCON1         equ	173	;# 
  6216   0000AE                     OSCCON2         equ	174	;# 
  6217   0000AF                     OSCCON3         equ	175	;# 
  6218   0000B0                     OSCTUNE         equ	176	;# 
  6219   0000B1                     OSCFRQ          equ	177	;# 
  6220   0000B1                     OSCFREQ         equ	177	;# 
  6221   0000B2                     OSCSTAT         equ	178	;# 
  6222   0000B2                     OSCSTAT1        equ	178	;# 
  6223   0000B3                     OSCEN           equ	179	;# 
  6224   0000B4                     PRLOCK          equ	180	;# 
  6225   0000B5                     SCANPR          equ	181	;# 
  6226   0000B6                     DMA1PR          equ	182	;# 
  6227   0000B7                     DMA2PR          equ	183	;# 
  6228   0000B8                     DMA3PR          equ	184	;# 
  6229   0000B9                     DMA4PR          equ	185	;# 
  6230   0000BA                     DMA5PR          equ	186	;# 
  6231   0000BB                     DMA6PR          equ	187	;# 
  6232   0000BC                     DMA7PR          equ	188	;# 
  6233   0000BD                     DMA8PR          equ	189	;# 
  6234   0000BE                     MAINPR          equ	190	;# 
  6235   0000BF                     ISRPR           equ	191	;# 
  6236   0000D4                     CLCDATA         equ	212	;# 
  6237   0000D5                     CLCSELECT       equ	213	;# 
  6238   0000D6                     CLCnCON         equ	214	;# 
  6239   0000D7                     CLCnPOL         equ	215	;# 
  6240   0000D8                     CLCnSEL0        equ	216	;# 
  6241   0000D9                     CLCnSEL1        equ	217	;# 
  6242   0000DA                     CLCnSEL2        equ	218	;# 
  6243   0000DB                     CLCnSEL3        equ	219	;# 
  6244   0000DC                     CLCnGLS0        equ	220	;# 
  6245   0000DD                     CLCnGLS1        equ	221	;# 
  6246   0000DE                     CLCnGLS2        equ	222	;# 
  6247   0000DF                     CLCnGLS3        equ	223	;# 
  6248   0000E8                     DMASELECT       equ	232	;# 
  6249   0000E9                     DMAnBUF         equ	233	;# 
  6250   0000EA                     DMAnDCNT        equ	234	;# 
  6251   0000EA                     DMAnDCNTL       equ	234	;# 
  6252   0000EB                     DMAnDCNTH       equ	235	;# 
  6253   0000EC                     DMAnDPTR        equ	236	;# 
  6254   0000EC                     DMAnDPTRL       equ	236	;# 
  6255   0000ED                     DMAnDPTRH       equ	237	;# 
  6256   0000EE                     DMAnDSZ         equ	238	;# 
  6257   0000EE                     DMAnDSZL        equ	238	;# 
  6258   0000EF                     DMAnDSZH        equ	239	;# 
  6259   0000F0                     DMAnDSA         equ	240	;# 
  6260   0000F0                     DMAnDSAL        equ	240	;# 
  6261   0000F1                     DMAnDSAH        equ	241	;# 
  6262   0000F2                     DMAnSCNT        equ	242	;# 
  6263   0000F2                     DMAnSCNTL       equ	242	;# 
  6264   0000F3                     DMAnSCNTH       equ	243	;# 
  6265   0000F4                     DMAnSPTR        equ	244	;# 
  6266   0000F4                     DMAnSPTRL       equ	244	;# 
  6267   0000F5                     DMAnSPTRH       equ	245	;# 
  6268   0000F6                     DMAnSPTRU       equ	246	;# 
  6269   0000F7                     DMAnSSZ         equ	247	;# 
  6270   0000F7                     DMAnSSZL        equ	247	;# 
  6271   0000F8                     DMAnSSZH        equ	248	;# 
  6272   0000F9                     DMAnSSA         equ	249	;# 
  6273   0000F9                     DMAnSSAL        equ	249	;# 
  6274   0000FA                     DMAnSSAH        equ	250	;# 
  6275   0000FB                     DMAnSSAU        equ	251	;# 
  6276   0000FC                     DMAnCON0        equ	252	;# 
  6277   0000FD                     DMAnCON1        equ	253	;# 
  6278   0000FE                     DMAnAIRQ        equ	254	;# 
  6279   0000FF                     DMAnSIRQ        equ	255	;# 
  6280   000100                     C1CONL          equ	256	;# 
  6281   000101                     C1CONH          equ	257	;# 
  6282   000102                     C1CONU          equ	258	;# 
  6283   000103                     C1CONT          equ	259	;# 
  6284   000104                     C1NBTCFGL       equ	260	;# 
  6285   000105                     C1NBTCFGH       equ	261	;# 
  6286   000106                     C1NBTCFGU       equ	262	;# 
  6287   000107                     C1NBTCFGT       equ	263	;# 
  6288   000108                     C1DBTCFGL       equ	264	;# 
  6289   000109                     C1DBTCFGH       equ	265	;# 
  6290   00010A                     C1DBTCFGU       equ	266	;# 
  6291   00010B                     C1DBTCFGT       equ	267	;# 
  6292   00010C                     C1TDCL          equ	268	;# 
  6293   00010D                     C1TDCH          equ	269	;# 
  6294   00010E                     C1TDCU          equ	270	;# 
  6295   000110                     C1TBC           equ	272	;# 
  6296   000110                     C1TBCL          equ	272	;# 
  6297   000111                     C1TBCH          equ	273	;# 
  6298   000112                     C1TBCU          equ	274	;# 
  6299   000113                     C1TBCT          equ	275	;# 
  6300   000114                     C1TSCONL        equ	276	;# 
  6301   000115                     C1TSCONH        equ	277	;# 
  6302   000116                     C1TSCONU        equ	278	;# 
  6303   000117                     C1TSCONT        equ	279	;# 
  6304   000118                     C1VECL          equ	280	;# 
  6305   000119                     C1VECH          equ	281	;# 
  6306   00011A                     C1VECU          equ	282	;# 
  6307   00011B                     C1VECT          equ	283	;# 
  6308   00011C                     C1INTL          equ	284	;# 
  6309   00011D                     C1INTH          equ	285	;# 
  6310   00011E                     C1INTU          equ	286	;# 
  6311   00011F                     C1INTT          equ	287	;# 
  6312   000120                     C1RXIF          equ	288	;# 
  6313   000120                     C1RXIFL         equ	288	;# 
  6314   000121                     C1RXIFH         equ	289	;# 
  6315   000122                     C1RXIFU         equ	290	;# 
  6316   000123                     C1RXIFT         equ	291	;# 
  6317   000124                     C1TXIF          equ	292	;# 
  6318   000124                     C1TXIFL         equ	292	;# 
  6319   000125                     C1TXIFH         equ	293	;# 
  6320   000126                     C1TXIFU         equ	294	;# 
  6321   000127                     C1TXIFT         equ	295	;# 
  6322   000128                     C1RXOVIF        equ	296	;# 
  6323   000128                     C1RXOVIFL       equ	296	;# 
  6324   000129                     C1RXOVIFH       equ	297	;# 
  6325   00012A                     C1RXOVIFU       equ	298	;# 
  6326   00012B                     C1RXOVIFT       equ	299	;# 
  6327   00012C                     C1TXATIF        equ	300	;# 
  6328   00012C                     C1TXATIFL       equ	300	;# 
  6329   00012D                     C1TXATIFH       equ	301	;# 
  6330   00012E                     C1TXATIFU       equ	302	;# 
  6331   00012F                     C1TXATIFT       equ	303	;# 
  6332   000130                     C1TXREQ         equ	304	;# 
  6333   000130                     C1TXREQL        equ	304	;# 
  6334   000131                     C1TXREQH        equ	305	;# 
  6335   000132                     C1TXREQU        equ	306	;# 
  6336   000133                     C1TXREQT        equ	307	;# 
  6337   000134                     C1TRECL         equ	308	;# 
  6338   000135                     C1TRECH         equ	309	;# 
  6339   000136                     C1TRECU         equ	310	;# 
  6340   000137                     C1TRECT         equ	311	;# 
  6341   000138                     C1BDIAG0L       equ	312	;# 
  6342   000139                     C1BDIAG0H       equ	313	;# 
  6343   00013C                     C1BDIAG1L       equ	316	;# 
  6344   00013D                     C1BDIAG1H       equ	317	;# 
  6345   00013E                     C1BDIAG1U       equ	318	;# 
  6346   00013F                     C1BDIAG1T       equ	319	;# 
  6347   000140                     C1TEFCONL       equ	320	;# 
  6348   000141                     C1TEFCONH       equ	321	;# 
  6349   000142                     C1TEFCONU       equ	322	;# 
  6350   000143                     C1TEFCONT       equ	323	;# 
  6351   000144                     C1TEFSTAL       equ	324	;# 
  6352   000145                     C1TEFSTAH       equ	325	;# 
  6353   000146                     C1TEFSTAU       equ	326	;# 
  6354   000147                     C1TEFSTAT       equ	327	;# 
  6355   000148                     C1TEFUA         equ	328	;# 
  6356   000148                     C1TEFUAL        equ	328	;# 
  6357   000149                     C1TEFUAH        equ	329	;# 
  6358   00014A                     C1TEFUAU        equ	330	;# 
  6359   00014B                     C1TEFUAT        equ	331	;# 
  6360   00014C                     C1FIFOBA        equ	332	;# 
  6361   00014C                     C1FIFOBAL       equ	332	;# 
  6362   00014D                     C1FIFOBAH       equ	333	;# 
  6363   00014E                     C1FIFOBAU       equ	334	;# 
  6364   00014F                     C1FIFOBAT       equ	335	;# 
  6365   000150                     C1TXQCONL       equ	336	;# 
  6366   000151                     C1TXQCONH       equ	337	;# 
  6367   000152                     C1TXQCONU       equ	338	;# 
  6368   000153                     C1TXQCONT       equ	339	;# 
  6369   000154                     C1TXQSTAL       equ	340	;# 
  6370   000155                     C1TXQSTAH       equ	341	;# 
  6371   000156                     C1TXQSTAU       equ	342	;# 
  6372   000157                     C1TXQSTAT       equ	343	;# 
  6373   000158                     C1TXQUA         equ	344	;# 
  6374   000158                     C1TXQUAL        equ	344	;# 
  6375   000159                     C1TXQUAH        equ	345	;# 
  6376   00015A                     C1TXQUAU        equ	346	;# 
  6377   00015B                     C1TXQUAT        equ	347	;# 
  6378   00015C                     C1FIFOCON1      equ	348	;# 
  6379   00015C                     C1FIFOCON1L     equ	348	;# 
  6380   00015D                     C1FIFOCON1H     equ	349	;# 
  6381   00015E                     C1FIFOCON1U     equ	350	;# 
  6382   00015F                     C1FIFOCON1T     equ	351	;# 
  6383   000160                     C1FIFOSTA1      equ	352	;# 
  6384   000160                     C1FIFOSTA1L     equ	352	;# 
  6385   000161                     C1FIFOSTA1H     equ	353	;# 
  6386   000162                     C1FIFOSTA1U     equ	354	;# 
  6387   000163                     C1FIFOSTA1T     equ	355	;# 
  6388   000164                     C1FIFOUA1       equ	356	;# 
  6389   000164                     C1FIFOUA1L      equ	356	;# 
  6390   000165                     C1FIFOUA1H      equ	357	;# 
  6391   000166                     C1FIFOUA1U      equ	358	;# 
  6392   000167                     C1FIFOUA1T      equ	359	;# 
  6393   000168                     C1FIFOCON2      equ	360	;# 
  6394   000168                     C1FIFOCON2L     equ	360	;# 
  6395   000169                     C1FIFOCON2H     equ	361	;# 
  6396   00016A                     C1FIFOCON2U     equ	362	;# 
  6397   00016B                     C1FIFOCON2T     equ	363	;# 
  6398   00016C                     C1FIFOSTA2      equ	364	;# 
  6399   00016C                     C1FIFOSTA2L     equ	364	;# 
  6400   00016D                     C1FIFOSTA2H     equ	365	;# 
  6401   00016E                     C1FIFOSTA2U     equ	366	;# 
  6402   00016F                     C1FIFOSTA2T     equ	367	;# 
  6403   000170                     C1FIFOUA2       equ	368	;# 
  6404   000170                     C1FIFOUA2L      equ	368	;# 
  6405   000171                     C1FIFOUA2H      equ	369	;# 
  6406   000172                     C1FIFOUA2U      equ	370	;# 
  6407   000173                     C1FIFOUA2T      equ	371	;# 
  6408   000174                     C1FIFOCON3      equ	372	;# 
  6409   000174                     C1FIFOCON3L     equ	372	;# 
  6410   000175                     C1FIFOCON3H     equ	373	;# 
  6411   000176                     C1FIFOCON3U     equ	374	;# 
  6412   000177                     C1FIFOCON3T     equ	375	;# 
  6413   000178                     C1FIFOSTA3      equ	376	;# 
  6414   000178                     C1FIFOSTA3L     equ	376	;# 
  6415   000179                     C1FIFOSTA3H     equ	377	;# 
  6416   00017A                     C1FIFOSTA3U     equ	378	;# 
  6417   00017B                     C1FIFOSTA3T     equ	379	;# 
  6418   00017C                     C1FIFOUA3       equ	380	;# 
  6419   00017C                     C1FIFOUA3L      equ	380	;# 
  6420   00017D                     C1FIFOUA3H      equ	381	;# 
  6421   00017E                     C1FIFOUA3U      equ	382	;# 
  6422   00017F                     C1FIFOUA3T      equ	383	;# 
  6423   000180                     C1FLTCON0L      equ	384	;# 
  6424   000181                     C1FLTCON0H      equ	385	;# 
  6425   000182                     C1FLTCON0U      equ	386	;# 
  6426   000183                     C1FLTCON0T      equ	387	;# 
  6427   000184                     C1FLTCON1L      equ	388	;# 
  6428   000185                     C1FLTCON1H      equ	389	;# 
  6429   000186                     C1FLTCON1U      equ	390	;# 
  6430   000187                     C1FLTCON1T      equ	391	;# 
  6431   000188                     C1FLTCON2L      equ	392	;# 
  6432   000189                     C1FLTCON2H      equ	393	;# 
  6433   00018A                     C1FLTCON2U      equ	394	;# 
  6434   00018B                     C1FLTCON2T      equ	395	;# 
  6435   00018C                     C1FLTOBJ0       equ	396	;# 
  6436   00018C                     C1FLTOBJ0L      equ	396	;# 
  6437   00018D                     C1FLTOBJ0H      equ	397	;# 
  6438   00018E                     C1FLTOBJ0U      equ	398	;# 
  6439   00018F                     C1FLTOBJ0T      equ	399	;# 
  6440   000190                     C1MASK0         equ	400	;# 
  6441   000190                     C1MASK0L        equ	400	;# 
  6442   000191                     C1MASK0H        equ	401	;# 
  6443   000192                     C1MASK0U        equ	402	;# 
  6444   000193                     C1MASK0T        equ	403	;# 
  6445   000194                     C1FLTOBJ1       equ	404	;# 
  6446   000194                     C1FLTOBJ1L      equ	404	;# 
  6447   000195                     C1FLTOBJ1H      equ	405	;# 
  6448   000196                     C1FLTOBJ1U      equ	406	;# 
  6449   000197                     C1FLTOBJ1T      equ	407	;# 
  6450   000198                     C1MASK1         equ	408	;# 
  6451   000198                     C1MASK1L        equ	408	;# 
  6452   000199                     C1MASK1H        equ	409	;# 
  6453   00019A                     C1MASK1U        equ	410	;# 
  6454   00019B                     C1MASK1T        equ	411	;# 
  6455   00019C                     C1FLTOBJ2       equ	412	;# 
  6456   00019C                     C1FLTOBJ2L      equ	412	;# 
  6457   00019D                     C1FLTOBJ2H      equ	413	;# 
  6458   00019E                     C1FLTOBJ2U      equ	414	;# 
  6459   00019F                     C1FLTOBJ2T      equ	415	;# 
  6460   0001A0                     C1MASK2         equ	416	;# 
  6461   0001A0                     C1MASK2L        equ	416	;# 
  6462   0001A1                     C1MASK2H        equ	417	;# 
  6463   0001A2                     C1MASK2U        equ	418	;# 
  6464   0001A3                     C1MASK2T        equ	419	;# 
  6465   0001A4                     C1FLTOBJ3       equ	420	;# 
  6466   0001A4                     C1FLTOBJ3L      equ	420	;# 
  6467   0001A5                     C1FLTOBJ3H      equ	421	;# 
  6468   0001A6                     C1FLTOBJ3U      equ	422	;# 
  6469   0001A7                     C1FLTOBJ3T      equ	423	;# 
  6470   0001A8                     C1MASK3         equ	424	;# 
  6471   0001A8                     C1MASK3L        equ	424	;# 
  6472   0001A9                     C1MASK3H        equ	425	;# 
  6473   0001AA                     C1MASK3U        equ	426	;# 
  6474   0001AB                     C1MASK3T        equ	427	;# 
  6475   0001AC                     C1FLTOBJ4       equ	428	;# 
  6476   0001AC                     C1FLTOBJ4L      equ	428	;# 
  6477   0001AD                     C1FLTOBJ4H      equ	429	;# 
  6478   0001AE                     C1FLTOBJ4U      equ	430	;# 
  6479   0001AF                     C1FLTOBJ4T      equ	431	;# 
  6480   0001B0                     C1MASK4         equ	432	;# 
  6481   0001B0                     C1MASK4L        equ	432	;# 
  6482   0001B1                     C1MASK4H        equ	433	;# 
  6483   0001B2                     C1MASK4U        equ	434	;# 
  6484   0001B3                     C1MASK4T        equ	435	;# 
  6485   0001B4                     C1FLTOBJ5       equ	436	;# 
  6486   0001B4                     C1FLTOBJ5L      equ	436	;# 
  6487   0001B5                     C1FLTOBJ5H      equ	437	;# 
  6488   0001B6                     C1FLTOBJ5U      equ	438	;# 
  6489   0001B7                     C1FLTOBJ5T      equ	439	;# 
  6490   0001B8                     C1MASK5         equ	440	;# 
  6491   0001B8                     C1MASK5L        equ	440	;# 
  6492   0001B9                     C1MASK5H        equ	441	;# 
  6493   0001BA                     C1MASK5U        equ	442	;# 
  6494   0001BB                     C1MASK5T        equ	443	;# 
  6495   0001BC                     C1FLTOBJ6       equ	444	;# 
  6496   0001BC                     C1FLTOBJ6L      equ	444	;# 
  6497   0001BD                     C1FLTOBJ6H      equ	445	;# 
  6498   0001BE                     C1FLTOBJ6U      equ	446	;# 
  6499   0001BF                     C1FLTOBJ6T      equ	447	;# 
  6500   0001C0                     C1MASK6         equ	448	;# 
  6501   0001C0                     C1MASK6L        equ	448	;# 
  6502   0001C1                     C1MASK6H        equ	449	;# 
  6503   0001C2                     C1MASK6U        equ	450	;# 
  6504   0001C3                     C1MASK6T        equ	451	;# 
  6505   0001C4                     C1FLTOBJ7       equ	452	;# 
  6506   0001C4                     C1FLTOBJ7L      equ	452	;# 
  6507   0001C5                     C1FLTOBJ7H      equ	453	;# 
  6508   0001C6                     C1FLTOBJ7U      equ	454	;# 
  6509   0001C7                     C1FLTOBJ7T      equ	455	;# 
  6510   0001C8                     C1MASK7         equ	456	;# 
  6511   0001C8                     C1MASK7L        equ	456	;# 
  6512   0001C9                     C1MASK7H        equ	457	;# 
  6513   0001CA                     C1MASK7U        equ	458	;# 
  6514   0001CB                     C1MASK7T        equ	459	;# 
  6515   0001CC                     C1FLTOBJ8       equ	460	;# 
  6516   0001CC                     C1FLTOBJ8L      equ	460	;# 
  6517   0001CD                     C1FLTOBJ8H      equ	461	;# 
  6518   0001CE                     C1FLTOBJ8U      equ	462	;# 
  6519   0001CF                     C1FLTOBJ8T      equ	463	;# 
  6520   0001D0                     C1MASK8         equ	464	;# 
  6521   0001D0                     C1MASK8L        equ	464	;# 
  6522   0001D1                     C1MASK8H        equ	465	;# 
  6523   0001D2                     C1MASK8U        equ	466	;# 
  6524   0001D3                     C1MASK8T        equ	467	;# 
  6525   0001D4                     C1FLTOBJ9       equ	468	;# 
  6526   0001D4                     C1FLTOBJ9L      equ	468	;# 
  6527   0001D5                     C1FLTOBJ9H      equ	469	;# 
  6528   0001D6                     C1FLTOBJ9U      equ	470	;# 
  6529   0001D7                     C1FLTOBJ9T      equ	471	;# 
  6530   0001D8                     C1MASK9         equ	472	;# 
  6531   0001D8                     C1MASK9L        equ	472	;# 
  6532   0001D9                     C1MASK9H        equ	473	;# 
  6533   0001DA                     C1MASK9U        equ	474	;# 
  6534   0001DB                     C1MASK9T        equ	475	;# 
  6535   0001DC                     C1FLTOBJ10      equ	476	;# 
  6536   0001DC                     C1FLTOBJ10L     equ	476	;# 
  6537   0001DD                     C1FLTOBJ10H     equ	477	;# 
  6538   0001DE                     C1FLTOBJ10U     equ	478	;# 
  6539   0001DF                     C1FLTOBJ10T     equ	479	;# 
  6540   0001E0                     C1MASK10        equ	480	;# 
  6541   0001E0                     C1MASK10L       equ	480	;# 
  6542   0001E1                     C1MASK10H       equ	481	;# 
  6543   0001E2                     C1MASK10U       equ	482	;# 
  6544   0001E3                     C1MASK10T       equ	483	;# 
  6545   0001E4                     C1FLTOBJ11      equ	484	;# 
  6546   0001E4                     C1FLTOBJ11L     equ	484	;# 
  6547   0001E5                     C1FLTOBJ11H     equ	485	;# 
  6548   0001E6                     C1FLTOBJ11U     equ	486	;# 
  6549   0001E7                     C1FLTOBJ11T     equ	487	;# 
  6550   0001E8                     C1MASK11        equ	488	;# 
  6551   0001E8                     C1MASK11L       equ	488	;# 
  6552   0001E9                     C1MASK11H       equ	489	;# 
  6553   0001EA                     C1MASK11U       equ	490	;# 
  6554   0001EB                     C1MASK11T       equ	491	;# 
  6555   000200                     PPSLOCK         equ	512	;# 
  6556   000201                     RA0PPS          equ	513	;# 
  6557   000202                     RA1PPS          equ	514	;# 
  6558   000203                     RA2PPS          equ	515	;# 
  6559   000204                     RA3PPS          equ	516	;# 
  6560   000205                     RA4PPS          equ	517	;# 
  6561   000206                     RA5PPS          equ	518	;# 
  6562   000207                     RA6PPS          equ	519	;# 
  6563   000208                     RA7PPS          equ	520	;# 
  6564   000209                     RB0PPS          equ	521	;# 
  6565   00020A                     RB1PPS          equ	522	;# 
  6566   00020B                     RB2PPS          equ	523	;# 
  6567   00020C                     RB3PPS          equ	524	;# 
  6568   00020D                     RB4PPS          equ	525	;# 
  6569   00020E                     RB5PPS          equ	526	;# 
  6570   00020F                     RB6PPS          equ	527	;# 
  6571   000210                     RB7PPS          equ	528	;# 
  6572   000211                     RC0PPS          equ	529	;# 
  6573   000212                     RC1PPS          equ	530	;# 
  6574   000213                     RC2PPS          equ	531	;# 
  6575   000214                     RC3PPS          equ	532	;# 
  6576   000215                     RC4PPS          equ	533	;# 
  6577   000216                     RC5PPS          equ	534	;# 
  6578   000217                     RC6PPS          equ	535	;# 
  6579   000218                     RC7PPS          equ	536	;# 
  6580   00023D                     CANRXPPS        equ	573	;# 
  6581   00023E                     INT0PPS         equ	574	;# 
  6582   00023F                     INT1PPS         equ	575	;# 
  6583   000240                     INT2PPS         equ	576	;# 
  6584   000241                     T0CKIPPS        equ	577	;# 
  6585   000242                     T1CKIPPS        equ	578	;# 
  6586   000243                     T1GPPS          equ	579	;# 
  6587   000244                     T3CKIPPS        equ	580	;# 
  6588   000245                     T3GPPS          equ	581	;# 
  6589   000246                     T5CKIPPS        equ	582	;# 
  6590   000247                     T5GPPS          equ	583	;# 
  6591   000248                     T2INPPS         equ	584	;# 
  6592   000249                     T4INPPS         equ	585	;# 
  6593   00024A                     T6INPPS         equ	586	;# 
  6594   00024B                     TUIN0PPS        equ	587	;# 
  6595   00024C                     TUIN1PPS        equ	588	;# 
  6596   00024F                     CCP1PPS         equ	591	;# 
  6597   000250                     CCP2PPS         equ	592	;# 
  6598   000251                     CCP3PPS         equ	593	;# 
  6599   000253                     PWM1ERSPPS      equ	595	;# 
  6600   000254                     PWM2ERSPPS      equ	596	;# 
  6601   000255                     PWM3ERSPPS      equ	597	;# 
  6602   000256                     PWM4ERSPPS      equ	598	;# 
  6603   000257                     PWMIN0PPS       equ	599	;# 
  6604   000258                     PWMIN1PPS       equ	600	;# 
  6605   000259                     SMT1WINPPS      equ	601	;# 
  6606   00025A                     SMT1SIGPPS      equ	602	;# 
  6607   00025B                     CWG1PPS         equ	603	;# 
  6608   00025B                     CWG1INPPS       equ	603	;# 
  6609   00025C                     CWG2PPS         equ	604	;# 
  6610   00025C                     CWG2INPPS       equ	604	;# 
  6611   00025D                     CWG3PPS         equ	605	;# 
  6612   00025D                     CWG3INPPS       equ	605	;# 
  6613   00025E                     MD1CARLPPS      equ	606	;# 
  6614   00025E                     MDCARLPPS       equ	606	;# 
  6615   00025F                     MD1CARHPPS      equ	607	;# 
  6616   00025F                     MDCARHPPS       equ	607	;# 
  6617   000260                     MD1SRCPPS       equ	608	;# 
  6618   000260                     MDSRCPPS        equ	608	;# 
  6619   000261                     CLCIN0PPS       equ	609	;# 
  6620   000262                     CLCIN1PPS       equ	610	;# 
  6621   000263                     CLCIN2PPS       equ	611	;# 
  6622   000264                     CLCIN3PPS       equ	612	;# 
  6623   000265                     CLCIN4PPS       equ	613	;# 
  6624   000266                     CLCIN5PPS       equ	614	;# 
  6625   000267                     CLCIN6PPS       equ	615	;# 
  6626   000268                     CLCIN7PPS       equ	616	;# 
  6627   000269                     ADACTPPS        equ	617	;# 
  6628   00026A                     SPI1SCKPPS      equ	618	;# 
  6629   00026B                     SPI1SDIPPS      equ	619	;# 
  6630   00026C                     SPI1SSPPS       equ	620	;# 
  6631   00026D                     SPI2SCKPPS      equ	621	;# 
  6632   00026E                     SPI2SDIPPS      equ	622	;# 
  6633   00026F                     SPI2SSPPS       equ	623	;# 
  6634   000270                     I2C1SDAPPS      equ	624	;# 
  6635   000271                     I2C1SCLPPS      equ	625	;# 
  6636   000272                     U1RXPPS         equ	626	;# 
  6637   000273                     U1CTSPPS        equ	627	;# 
  6638   000274                     U2RXPPS         equ	628	;# 
  6639   000275                     U2CTSPPS        equ	629	;# 
  6640   000276                     U3RXPPS         equ	630	;# 
  6641   000277                     U3CTSPPS        equ	631	;# 
  6642   000278                     U4RXPPS         equ	632	;# 
  6643   000279                     U4CTSPPS        equ	633	;# 
  6644   00027A                     U5RXPPS         equ	634	;# 
  6645   00027B                     U5CTSPPS        equ	635	;# 
  6646   000286                     RC4I2C          equ	646	;# 
  6647   000287                     RC3I2C          equ	647	;# 
  6648   000288                     RB2I2C          equ	648	;# 
  6649   000289                     RB1I2C          equ	649	;# 
  6650   00028A                     I2C1RXB         equ	650	;# 
  6651   00028B                     I2C1TXB         equ	651	;# 
  6652   00028C                     I2C1CNTL        equ	652	;# 
  6653   00028D                     I2C1CNTH        equ	653	;# 
  6654   00028E                     I2C1ADB0        equ	654	;# 
  6655   00028F                     I2C1ADB1        equ	655	;# 
  6656   000290                     I2C1ADR0        equ	656	;# 
  6657   000291                     I2C1ADR1        equ	657	;# 
  6658   000292                     I2C1ADR2        equ	658	;# 
  6659   000293                     I2C1ADR3        equ	659	;# 
  6660   000294                     I2C1CON0        equ	660	;# 
  6661   000295                     I2C1CON1        equ	661	;# 
  6662   000296                     I2C1CON2        equ	662	;# 
  6663   000297                     I2C1ERR         equ	663	;# 
  6664   000298                     I2C1STAT0       equ	664	;# 
  6665   000299                     I2C1STAT1       equ	665	;# 
  6666   00029A                     I2C1PIR         equ	666	;# 
  6667   00029B                     I2C1PIE         equ	667	;# 
  6668   00029C                     I2C1BTO         equ	668	;# 
  6669   00029D                     I2C1BAUD        equ	669	;# 
  6670   00029E                     I2C1CLK         equ	670	;# 
  6671   00029F                     I2C1BTOC        equ	671	;# 
  6672   0002A1                     U1RXB           equ	673	;# 
  6673   0002A1                     U1RXBL          equ	673	;# 
  6674   0002A2                     U1RXCHK         equ	674	;# 
  6675   0002A3                     U1TXB           equ	675	;# 
  6676   0002A3                     U1TXBL          equ	675	;# 
  6677   0002A4                     U1TXCHK         equ	676	;# 
  6678   0002A5                     U1P1            equ	677	;# 
  6679   0002A5                     U1P1L           equ	677	;# 
  6680   0002A6                     U1P1H           equ	678	;# 
  6681   0002A7                     U1P2            equ	679	;# 
  6682   0002A7                     U1P2L           equ	679	;# 
  6683   0002A8                     U1P2H           equ	680	;# 
  6684   0002A9                     U1P3            equ	681	;# 
  6685   0002A9                     U1P3L           equ	681	;# 
  6686   0002AA                     U1P3H           equ	682	;# 
  6687   0002AB                     U1CON0          equ	683	;# 
  6688   0002AC                     U1CON1          equ	684	;# 
  6689   0002AD                     U1CON2          equ	685	;# 
  6690   0002AE                     U1BRG           equ	686	;# 
  6691   0002AE                     U1BRGL          equ	686	;# 
  6692   0002AF                     U1BRGH          equ	687	;# 
  6693   0002B0                     U1FIFO          equ	688	;# 
  6694   0002B1                     U1UIR           equ	689	;# 
  6695   0002B2                     U1ERRIR         equ	690	;# 
  6696   0002B3                     U1ERRIE         equ	691	;# 
  6697   0002B4                     U2RXB           equ	692	;# 
  6698   0002B4                     U2RXBL          equ	692	;# 
  6699   0002B5                     U2RXCHK         equ	693	;# 
  6700   0002B6                     U2TXB           equ	694	;# 
  6701   0002B6                     U2TXBL          equ	694	;# 
  6702   0002B7                     U2TXCHK         equ	695	;# 
  6703   0002B8                     U2P1            equ	696	;# 
  6704   0002B8                     U2P1L           equ	696	;# 
  6705   0002B9                     U2P1H           equ	697	;# 
  6706   0002BA                     U2P2            equ	698	;# 
  6707   0002BA                     U2P2L           equ	698	;# 
  6708   0002BB                     U2P2H           equ	699	;# 
  6709   0002BC                     U2P3            equ	700	;# 
  6710   0002BC                     U2P3L           equ	700	;# 
  6711   0002BD                     U2P3H           equ	701	;# 
  6712   0002BE                     U2CON0          equ	702	;# 
  6713   0002BF                     U2CON1          equ	703	;# 
  6714   0002C0                     U2CON2          equ	704	;# 
  6715   0002C1                     U2BRG           equ	705	;# 
  6716   0002C1                     U2BRGL          equ	705	;# 
  6717   0002C2                     U2BRGH          equ	706	;# 
  6718   0002C3                     U2FIFO          equ	707	;# 
  6719   0002C4                     U2UIR           equ	708	;# 
  6720   0002C5                     U2ERRIR         equ	709	;# 
  6721   0002C6                     U2ERRIE         equ	710	;# 
  6722   0002C7                     U3RXB           equ	711	;# 
  6723   0002C7                     U3RXBL          equ	711	;# 
  6724   0002C9                     U3TXB           equ	713	;# 
  6725   0002C9                     U3TXBL          equ	713	;# 
  6726   0002CB                     U3P1            equ	715	;# 
  6727   0002CB                     U3P1L           equ	715	;# 
  6728   0002CD                     U3P2            equ	717	;# 
  6729   0002CD                     U3P2L           equ	717	;# 
  6730   0002CF                     U3P3            equ	719	;# 
  6731   0002CF                     U3P3L           equ	719	;# 
  6732   0002D1                     U3CON0          equ	721	;# 
  6733   0002D2                     U3CON1          equ	722	;# 
  6734   0002D3                     U3CON2          equ	723	;# 
  6735   0002D4                     U3BRG           equ	724	;# 
  6736   0002D4                     U3BRGL          equ	724	;# 
  6737   0002D5                     U3BRGH          equ	725	;# 
  6738   0002D6                     U3FIFO          equ	726	;# 
  6739   0002D7                     U3UIR           equ	727	;# 
  6740   0002D8                     U3ERRIR         equ	728	;# 
  6741   0002D9                     U3ERRIE         equ	729	;# 
  6742   0002DA                     U4RXB           equ	730	;# 
  6743   0002DA                     U4RXBL          equ	730	;# 
  6744   0002DC                     U4TXB           equ	732	;# 
  6745   0002DC                     U4TXBL          equ	732	;# 
  6746   0002DE                     U4P1            equ	734	;# 
  6747   0002DE                     U4P1L           equ	734	;# 
  6748   0002E0                     U4P2            equ	736	;# 
  6749   0002E0                     U4P2L           equ	736	;# 
  6750   0002E2                     U4P3            equ	738	;# 
  6751   0002E2                     U4P3L           equ	738	;# 
  6752   0002E4                     U4CON0          equ	740	;# 
  6753   0002E5                     U4CON1          equ	741	;# 
  6754   0002E6                     U4CON2          equ	742	;# 
  6755   0002E7                     U4BRG           equ	743	;# 
  6756   0002E7                     U4BRGL          equ	743	;# 
  6757   0002E8                     U4BRGH          equ	744	;# 
  6758   0002E9                     U4FIFO          equ	745	;# 
  6759   0002EA                     U4UIR           equ	746	;# 
  6760   0002EB                     U4ERRIR         equ	747	;# 
  6761   0002EC                     U4ERRIE         equ	748	;# 
  6762   0002ED                     U5RXB           equ	749	;# 
  6763   0002ED                     U5RXBL          equ	749	;# 
  6764   0002EF                     U5TXB           equ	751	;# 
  6765   0002EF                     U5TXBL          equ	751	;# 
  6766   0002F1                     U5P1            equ	753	;# 
  6767   0002F1                     U5P1L           equ	753	;# 
  6768   0002F3                     U5P2            equ	755	;# 
  6769   0002F3                     U5P2L           equ	755	;# 
  6770   0002F5                     U5P3            equ	757	;# 
  6771   0002F5                     U5P3L           equ	757	;# 
  6772   0002F7                     U5CON0          equ	759	;# 
  6773   0002F8                     U5CON1          equ	760	;# 
  6774   0002F9                     U5CON2          equ	761	;# 
  6775   0002FA                     U5BRG           equ	762	;# 
  6776   0002FA                     U5BRGL          equ	762	;# 
  6777   0002FB                     U5BRGH          equ	763	;# 
  6778   0002FC                     U5FIFO          equ	764	;# 
  6779   0002FD                     U5UIR           equ	765	;# 
  6780   0002FE                     U5ERRIR         equ	766	;# 
  6781   0002FF                     U5ERRIE         equ	767	;# 
  6782   000300                     SMT1TMR         equ	768	;# 
  6783   000300                     SMT1TMRL        equ	768	;# 
  6784   000301                     SMT1TMRH        equ	769	;# 
  6785   000302                     SMT1TMRU        equ	770	;# 
  6786   000303                     SMT1CPR         equ	771	;# 
  6787   000303                     SMT1CPRL        equ	771	;# 
  6788   000304                     SMT1CPRH        equ	772	;# 
  6789   000305                     SMT1CPRU        equ	773	;# 
  6790   000306                     SMT1CPW         equ	774	;# 
  6791   000306                     SMT1CPWL        equ	774	;# 
  6792   000307                     SMT1CPWH        equ	775	;# 
  6793   000308                     SMT1CPWU        equ	776	;# 
  6794   000309                     SMT1PR          equ	777	;# 
  6795   000309                     SMT1PRL         equ	777	;# 
  6796   00030A                     SMT1PRH         equ	778	;# 
  6797   00030B                     SMT1PRU         equ	779	;# 
  6798   00030C                     SMT1CON0        equ	780	;# 
  6799   00030D                     SMT1CON1        equ	781	;# 
  6800   00030E                     SMT1STAT        equ	782	;# 
  6801   00030F                     SMT1CLK         equ	783	;# 
  6802   000310                     SMT1SIG         equ	784	;# 
  6803   000311                     SMT1WIN         equ	785	;# 
  6804   000318                     TMR0L           equ	792	;# 
  6805   000318                     TMR0            equ	792	;# 
  6806   000319                     TMR0H           equ	793	;# 
  6807   000319                     PR0             equ	793	;# 
  6808   00031A                     T0CON0          equ	794	;# 
  6809   00031B                     T0CON1          equ	795	;# 
  6810   00031C                     TMR1            equ	796	;# 
  6811   00031C                     TMR1L           equ	796	;# 
  6812   00031D                     TMR1H           equ	797	;# 
  6813   00031E                     T1CON           equ	798	;# 
  6814   00031E                     TMR1CON         equ	798	;# 
  6815   00031F                     T1GCON          equ	799	;# 
  6816   00031F                     TMR1GCON        equ	799	;# 
  6817   000320                     T1GATE          equ	800	;# 
  6818   000320                     TMR1GATE        equ	800	;# 
  6819   000321                     T1CLK           equ	801	;# 
  6820   000321                     TMR1CLK         equ	801	;# 
  6821   000321                     PR1             equ	801	;# 
  6822   000322                     T2TMR           equ	802	;# 
  6823   000322                     TMR2            equ	802	;# 
  6824   000323                     T2PR            equ	803	;# 
  6825   000323                     PR2             equ	803	;# 
  6826   000324                     T2CON           equ	804	;# 
  6827   000325                     T2HLT           equ	805	;# 
  6828   000326                     T2CLKCON        equ	806	;# 
  6829   000326                     T2CLK           equ	806	;# 
  6830   000327                     T2RST           equ	807	;# 
  6831   000328                     TMR3            equ	808	;# 
  6832   000328                     TMR3L           equ	808	;# 
  6833   000329                     TMR3H           equ	809	;# 
  6834   00032A                     T3CON           equ	810	;# 
  6835   00032A                     TMR3CON         equ	810	;# 
  6836   00032B                     T3GCON          equ	811	;# 
  6837   00032B                     TMR3GCON        equ	811	;# 
  6838   00032C                     T3GATE          equ	812	;# 
  6839   00032C                     TMR3GATE        equ	812	;# 
  6840   00032D                     T3CLK           equ	813	;# 
  6841   00032D                     TMR3CLK         equ	813	;# 
  6842   00032D                     PR3             equ	813	;# 
  6843   00032E                     T4TMR           equ	814	;# 
  6844   00032E                     TMR4            equ	814	;# 
  6845   00032F                     T4PR            equ	815	;# 
  6846   00032F                     PR4             equ	815	;# 
  6847   000330                     T4CON           equ	816	;# 
  6848   000331                     T4HLT           equ	817	;# 
  6849   000332                     T4CLKCON        equ	818	;# 
  6850   000332                     T4CLK           equ	818	;# 
  6851   000333                     T4RST           equ	819	;# 
  6852   000334                     TMR5            equ	820	;# 
  6853   000334                     TMR5L           equ	820	;# 
  6854   000335                     TMR5H           equ	821	;# 
  6855   000336                     T5CON           equ	822	;# 
  6856   000336                     TMR5CON         equ	822	;# 
  6857   000337                     T5GCON          equ	823	;# 
  6858   000337                     TMR5GCON        equ	823	;# 
  6859   000338                     T5GATE          equ	824	;# 
  6860   000338                     TMR5GATE        equ	824	;# 
  6861   000339                     T5CLK           equ	825	;# 
  6862   000339                     TMR5CLK         equ	825	;# 
  6863   000339                     PR5             equ	825	;# 
  6864   00033A                     T6TMR           equ	826	;# 
  6865   00033A                     TMR6            equ	826	;# 
  6866   00033B                     T6PR            equ	827	;# 
  6867   00033B                     PR6             equ	827	;# 
  6868   00033C                     T6CON           equ	828	;# 
  6869   00033D                     T6HLT           equ	829	;# 
  6870   00033E                     T6CLKCON        equ	830	;# 
  6871   00033E                     T6CLK           equ	830	;# 
  6872   00033F                     T6RST           equ	831	;# 
  6873   000340                     CCPR1           equ	832	;# 
  6874   000340                     CCPR1L          equ	832	;# 
  6875   000341                     CCPR1H          equ	833	;# 
  6876   000342                     CCP1CON         equ	834	;# 
  6877   000343                     CCP1CAP         equ	835	;# 
  6878   000344                     CCPR2           equ	836	;# 
  6879   000344                     CCPR2L          equ	836	;# 
  6880   000345                     CCPR2H          equ	837	;# 
  6881   000346                     CCP2CON         equ	838	;# 
  6882   000347                     CCP2CAP         equ	839	;# 
  6883   000348                     CCPR3           equ	840	;# 
  6884   000348                     CCPR3L          equ	840	;# 
  6885   000349                     CCPR3H          equ	841	;# 
  6886   00034A                     CCP3CON         equ	842	;# 
  6887   00034B                     CCP3CAP         equ	843	;# 
  6888   00034C                     CCPTMRS0        equ	844	;# 
  6889   00034F                     CRCDATA         equ	847	;# 
  6890   00034F                     CRCDATAL        equ	847	;# 
  6891   000350                     CRCDATAH        equ	848	;# 
  6892   000351                     CRCDATAU        equ	849	;# 
  6893   000352                     CRCDATAT        equ	850	;# 
  6894   000353                     CRCOUT          equ	851	;# 
  6895   000353                     CRCSHFT         equ	851	;# 
  6896   000353                     CRCXOR          equ	851	;# 
  6897   000353                     CRCOUTL         equ	851	;# 
  6898   000353                     CRCSHFTL        equ	851	;# 
  6899   000353                     CRCSHIFTL       equ	851	;# 
  6900   000353                     CRCXORL         equ	851	;# 
  6901   000354                     CRCOUTH         equ	852	;# 
  6902   000354                     CRCSHFTH        equ	852	;# 
  6903   000354                     CRCSHIFTH       equ	852	;# 
  6904   000354                     CRCXORH         equ	852	;# 
  6905   000355                     CRCOUTU         equ	853	;# 
  6906   000355                     CRCSHFTU        equ	853	;# 
  6907   000355                     CRCSHIFTU       equ	853	;# 
  6908   000355                     CRCXORU         equ	853	;# 
  6909   000356                     CRCOUTT         equ	854	;# 
  6910   000356                     CRCSHFTT        equ	854	;# 
  6911   000356                     CRCSHIFTT       equ	854	;# 
  6912   000356                     CRCXORT         equ	854	;# 
  6913   000357                     CRCCON0         equ	855	;# 
  6914   000358                     CRCCON1         equ	856	;# 
  6915   000359                     CRCCON2         equ	857	;# 
  6916   00035A                     SCANLADR        equ	858	;# 
  6917   00035A                     SCANLADRL       equ	858	;# 
  6918   00035B                     SCANLADRH       equ	859	;# 
  6919   00035C                     SCANLADRU       equ	860	;# 
  6920   00035D                     SCANHADR        equ	861	;# 
  6921   00035D                     SCANHADRL       equ	861	;# 
  6922   00035E                     SCANHADRH       equ	862	;# 
  6923   00035F                     SCANHADRU       equ	863	;# 
  6924   000360                     SCANCON0        equ	864	;# 
  6925   000361                     SCANTRIG        equ	865	;# 
  6926   000362                     IPR0            equ	866	;# 
  6927   000363                     IPR1            equ	867	;# 
  6928   000364                     IPR2            equ	868	;# 
  6929   000365                     IPR3            equ	869	;# 
  6930   000366                     IPR4            equ	870	;# 
  6931   000367                     IPR5            equ	871	;# 
  6932   000368                     IPR6            equ	872	;# 
  6933   000369                     IPR7            equ	873	;# 
  6934   00036A                     IPR8            equ	874	;# 
  6935   00036B                     IPR9            equ	875	;# 
  6936   00036C                     IPR10           equ	876	;# 
  6937   00036D                     IPR11           equ	877	;# 
  6938   00036E                     IPR12           equ	878	;# 
  6939   00036F                     IPR13           equ	879	;# 
  6940   000370                     IPR14           equ	880	;# 
  6941   000371                     IPR15           equ	881	;# 
  6942   000373                     STATUS_CSHAD    equ	883	;# 
  6943   000374                     WREG_CSHAD      equ	884	;# 
  6944   000375                     BSR_CSHAD       equ	885	;# 
  6945   000376                     SHADCON         equ	886	;# 
  6946   000377                     STATUS_SHAD     equ	887	;# 
  6947   000378                     WREG_SHAD       equ	888	;# 
  6948   000379                     BSR_SHAD        equ	889	;# 
  6949   00037A                     PCLATH_SHAD     equ	890	;# 
  6950   00037B                     PCLATU_SHAD     equ	891	;# 
  6951   00037C                     FSR0SH          equ	892	;# 
  6952   00037C                     FSR0L_SHAD      equ	892	;# 
  6953   00037D                     FSR0H_SHAD      equ	893	;# 
  6954   00037E                     FSR1SH          equ	894	;# 
  6955   00037E                     FSR1L_SHAD      equ	894	;# 
  6956   00037F                     FSR1H_SHAD      equ	895	;# 
  6957   000380                     FSR2SH          equ	896	;# 
  6958   000380                     FSR2L_SHAD      equ	896	;# 
  6959   000381                     FSR2H_SHAD      equ	897	;# 
  6960   000382                     PRODSH          equ	898	;# 
  6961   000382                     PRODL_SHAD      equ	898	;# 
  6962   000383                     PRODH_SHAD      equ	899	;# 
  6963   000387                     TU16ACON0       equ	903	;# 
  6964   000388                     TU16ACON1       equ	904	;# 
  6965   000389                     TU16AHLT        equ	905	;# 
  6966   00038A                     TU16APS         equ	906	;# 
  6967   00038B                     TU16ATMR        equ	907	;# 
  6968   00038B                     TU16ACR         equ	907	;# 
  6969   00038B                     TU16ATMRL       equ	907	;# 
  6970   00038B                     TU16ACRL        equ	907	;# 
  6971   00038C                     TU16ATMRH       equ	908	;# 
  6972   00038C                     TU16ACRH        equ	908	;# 
  6973   00038D                     TU16APR         equ	909	;# 
  6974   00038D                     TU16APRL        equ	909	;# 
  6975   00038E                     TU16APRH        equ	910	;# 
  6976   00038F                     TU16ACLK        equ	911	;# 
  6977   000390                     TU16AERS        equ	912	;# 
  6978   000393                     TU16BCON0       equ	915	;# 
  6979   000394                     TU16BCON1       equ	916	;# 
  6980   000395                     TU16BHLT        equ	917	;# 
  6981   000396                     TU16BPS         equ	918	;# 
  6982   000397                     TU16BTMR        equ	919	;# 
  6983   000397                     TU16BCR         equ	919	;# 
  6984   000397                     TU16BTMRL       equ	919	;# 
  6985   000397                     TU16BCRL        equ	919	;# 
  6986   000398                     TU16BTMRH       equ	920	;# 
  6987   000398                     TU16BCRH        equ	920	;# 
  6988   000399                     TU16BPR         equ	921	;# 
  6989   000399                     TU16BPRL        equ	921	;# 
  6990   00039A                     TU16BPRH        equ	922	;# 
  6991   00039B                     TU16BCLK        equ	923	;# 
  6992   00039C                     TU16BERS        equ	924	;# 
  6993   0003BB                     TUCHAIN         equ	955	;# 
  6994   0003BC                     CWG1CLK         equ	956	;# 
  6995   0003BC                     CWG1CLKCON      equ	956	;# 
  6996   0003BD                     CWG1ISM         equ	957	;# 
  6997   0003BE                     CWG1DBR         equ	958	;# 
  6998   0003BF                     CWG1DBF         equ	959	;# 
  6999   0003C0                     CWG1CON0        equ	960	;# 
  7000   0003C1                     CWG1CON1        equ	961	;# 
  7001   0003C2                     CWG1AS0         equ	962	;# 
  7002   0003C3                     CWG1AS1         equ	963	;# 
  7003   0003C4                     CWG1STR         equ	964	;# 
  7004   0003C5                     CWG2CLK         equ	965	;# 
  7005   0003C5                     CWG2CLKCON      equ	965	;# 
  7006   0003C6                     CWG2ISM         equ	966	;# 
  7007   0003C7                     CWG2DBR         equ	967	;# 
  7008   0003C8                     CWG2DBF         equ	968	;# 
  7009   0003C9                     CWG2CON0        equ	969	;# 
  7010   0003CA                     CWG2CON1        equ	970	;# 
  7011   0003CB                     CWG2AS0         equ	971	;# 
  7012   0003CC                     CWG2AS1         equ	972	;# 
  7013   0003CD                     CWG2STR         equ	973	;# 
  7014   0003CE                     CWG3CLK         equ	974	;# 
  7015   0003CE                     CWG3CLKCON      equ	974	;# 
  7016   0003CF                     CWG3ISM         equ	975	;# 
  7017   0003D0                     CWG3DBR         equ	976	;# 
  7018   0003D1                     CWG3DBF         equ	977	;# 
  7019   0003D2                     CWG3CON0        equ	978	;# 
  7020   0003D3                     CWG3CON1        equ	979	;# 
  7021   0003D4                     CWG3AS0         equ	980	;# 
  7022   0003D5                     CWG3AS1         equ	981	;# 
  7023   0003D6                     CWG3STR         equ	982	;# 
  7024   0003D7                     FVRCON          equ	983	;# 
  7025   0003D8                     ADCPCON         equ	984	;# 
  7026   0003D8                     ADCP            equ	984	;# 
  7027   0003D9                     ADLTH           equ	985	;# 
  7028   0003D9                     ADLTHL          equ	985	;# 
  7029   0003DA                     ADLTHH          equ	986	;# 
  7030   0003DB                     ADUTH           equ	987	;# 
  7031   0003DB                     ADUTHL          equ	987	;# 
  7032   0003DC                     ADUTHH          equ	988	;# 
  7033   0003DD                     ADERR           equ	989	;# 
  7034   0003DD                     ADERRL          equ	989	;# 
  7035   0003DE                     ADERRH          equ	990	;# 
  7036   0003DF                     ADSTPT          equ	991	;# 
  7037   0003DF                     ADSTPTL         equ	991	;# 
  7038   0003E0                     ADSTPTH         equ	992	;# 
  7039   0003E1                     ADFLTR          equ	993	;# 
  7040   0003E1                     ADFLTRL         equ	993	;# 
  7041   0003E2                     ADFLTRH         equ	994	;# 
  7042   0003E3                     ADACC           equ	995	;# 
  7043   0003E3                     ADACCL          equ	995	;# 
  7044   0003E4                     ADACCH          equ	996	;# 
  7045   0003E5                     ADACCU          equ	997	;# 
  7046   0003E6                     ADCNT           equ	998	;# 
  7047   0003E7                     ADRPT           equ	999	;# 
  7048   0003E8                     ADPREV          equ	1000	;# 
  7049   0003E8                     ADPREVL         equ	1000	;# 
  7050   0003E9                     ADPREVH         equ	1001	;# 
  7051   0003EA                     ADRES           equ	1002	;# 
  7052   0003EA                     ADRESL          equ	1002	;# 
  7053   0003EB                     ADRESH          equ	1003	;# 
  7054   0003EC                     ADPCH           equ	1004	;# 
  7055   0003EE                     ADACQ           equ	1006	;# 
  7056   0003EE                     ADACQL          equ	1006	;# 
  7057   0003EF                     ADACQH          equ	1007	;# 
  7058   0003F0                     ADCAP           equ	1008	;# 
  7059   0003F1                     ADPRE           equ	1009	;# 
  7060   0003F1                     ADPREL          equ	1009	;# 
  7061   0003F2                     ADPREH          equ	1010	;# 
  7062   0003F3                     ADCON0          equ	1011	;# 
  7063   0003F4                     ADCON1          equ	1012	;# 
  7064   0003F5                     ADCON2          equ	1013	;# 
  7065   0003F6                     ADCON3          equ	1014	;# 
  7066   0003F7                     ADSTAT          equ	1015	;# 
  7067   0003F8                     ADREF           equ	1016	;# 
  7068   0003F9                     ADACT           equ	1017	;# 
  7069   0003FA                     ADCLK           equ	1018	;# 
  7070   0003FB                     ADCTX           equ	1019	;# 
  7071   0003FC                     ADCSEL1         equ	1020	;# 
  7072   0003FD                     ADCSEL2         equ	1021	;# 
  7073   0003FE                     ADCSEL3         equ	1022	;# 
  7074   0003FF                     ADCSEL4         equ	1023	;# 
  7075   000400                     ANSELA          equ	1024	;# 
  7076   000401                     WPUA            equ	1025	;# 
  7077   000402                     ODCONA          equ	1026	;# 
  7078   000403                     SLRCONA         equ	1027	;# 
  7079   000404                     INLVLA          equ	1028	;# 
  7080   000405                     IOCAP           equ	1029	;# 
  7081   000406                     IOCAN           equ	1030	;# 
  7082   000407                     IOCAF           equ	1031	;# 
  7083   000408                     ANSELB          equ	1032	;# 
  7084   000409                     WPUB            equ	1033	;# 
  7085   00040A                     ODCONB          equ	1034	;# 
  7086   00040B                     SLRCONB         equ	1035	;# 
  7087   00040C                     INLVLB          equ	1036	;# 
  7088   00040D                     IOCBP           equ	1037	;# 
  7089   00040E                     IOCBN           equ	1038	;# 
  7090   00040F                     IOCBF           equ	1039	;# 
  7091   000410                     ANSELC          equ	1040	;# 
  7092   000411                     WPUC            equ	1041	;# 
  7093   000412                     ODCONC          equ	1042	;# 
  7094   000413                     SLRCONC         equ	1043	;# 
  7095   000414                     INLVLC          equ	1044	;# 
  7096   000415                     IOCCP           equ	1045	;# 
  7097   000416                     IOCCN           equ	1046	;# 
  7098   000417                     IOCCF           equ	1047	;# 
  7099   000421                     WPUE            equ	1057	;# 
  7100   000424                     INLVLE          equ	1060	;# 
  7101   000425                     IOCEP           equ	1061	;# 
  7102   000426                     IOCEN           equ	1062	;# 
  7103   000427                     IOCEF           equ	1063	;# 
  7104   000440                     NCO1ACC         equ	1088	;# 
  7105   000440                     NCO1ACCL        equ	1088	;# 
  7106   000441                     NCO1ACCH        equ	1089	;# 
  7107   000442                     NCO1ACCU        equ	1090	;# 
  7108   000443                     NCO1INC         equ	1091	;# 
  7109   000443                     NCO1INCL        equ	1091	;# 
  7110   000444                     NCO1INCH        equ	1092	;# 
  7111   000445                     NCO1INCU        equ	1093	;# 
  7112   000446                     NCO1CON         equ	1094	;# 
  7113   000447                     NCO1CLK         equ	1095	;# 
  7114   000448                     NCO2ACC         equ	1096	;# 
  7115   000448                     NCO2ACCL        equ	1096	;# 
  7116   000449                     NCO2ACCH        equ	1097	;# 
  7117   00044A                     NCO2ACCU        equ	1098	;# 
  7118   00044B                     NCO2INC         equ	1099	;# 
  7119   00044B                     NCO2INCL        equ	1099	;# 
  7120   00044C                     NCO2INCH        equ	1100	;# 
  7121   00044D                     NCO2INCU        equ	1101	;# 
  7122   00044E                     NCO2CON         equ	1102	;# 
  7123   00044F                     NCO2CLK         equ	1103	;# 
  7124   000450                     NCO3ACC         equ	1104	;# 
  7125   000450                     NCO3ACCL        equ	1104	;# 
  7126   000451                     NCO3ACCH        equ	1105	;# 
  7127   000452                     NCO3ACCU        equ	1106	;# 
  7128   000453                     NCO3INC         equ	1107	;# 
  7129   000453                     NCO3INCL        equ	1107	;# 
  7130   000454                     NCO3INCH        equ	1108	;# 
  7131   000455                     NCO3INCU        equ	1109	;# 
  7132   000456                     NCO3CON         equ	1110	;# 
  7133   000457                     NCO3CLK         equ	1111	;# 
  7134   000458                     FSCMCON         equ	1112	;# 
  7135   000459                     IVTLOCK         equ	1113	;# 
  7136   00045A                     IVTAD           equ	1114	;# 
  7137   00045A                     IVTADL          equ	1114	;# 
  7138   00045B                     IVTADH          equ	1115	;# 
  7139   00045C                     IVTADU          equ	1116	;# 
  7140   00045D                     IVTBASE         equ	1117	;# 
  7141   00045D                     IVTBASEL        equ	1117	;# 
  7142   00045E                     IVTBASEH        equ	1118	;# 
  7143   00045F                     IVTBASEU        equ	1119	;# 
  7144   000460                     PWM1ERS         equ	1120	;# 
  7145   000461                     PWM1CLK         equ	1121	;# 
  7146   000462                     PWM1LDS         equ	1122	;# 
  7147   000463                     PWM1PR          equ	1123	;# 
  7148   000463                     PWM1PRL         equ	1123	;# 
  7149   000464                     PWM1PRH         equ	1124	;# 
  7150   000465                     PWM1CPRE        equ	1125	;# 
  7151   000466                     PWM1PIPOS       equ	1126	;# 
  7152   000467                     PWM1GIR         equ	1127	;# 
  7153   000468                     PWM1GIE         equ	1128	;# 
  7154   000469                     PWM1CON         equ	1129	;# 
  7155   00046A                     PWM1S1CFG       equ	1130	;# 
  7156   00046B                     PWM1S1P1        equ	1131	;# 
  7157   00046B                     PWM1S1P1L       equ	1131	;# 
  7158   00046C                     PWM1S1P1H       equ	1132	;# 
  7159   00046D                     PWM1S1P2        equ	1133	;# 
  7160   00046D                     PWM1S1P2L       equ	1133	;# 
  7161   00046E                     PWM1S1P2H       equ	1134	;# 
  7162   00046F                     PWM2ERS         equ	1135	;# 
  7163   000470                     PWM2CLK         equ	1136	;# 
  7164   000471                     PWM2LDS         equ	1137	;# 
  7165   000472                     PWM2PR          equ	1138	;# 
  7166   000472                     PWM2PRL         equ	1138	;# 
  7167   000473                     PWM2PRH         equ	1139	;# 
  7168   000474                     PWM2CPRE        equ	1140	;# 
  7169   000475                     PWM2PIPOS       equ	1141	;# 
  7170   000476                     PWM2GIR         equ	1142	;# 
  7171   000477                     PWM2GIE         equ	1143	;# 
  7172   000478                     PWM2CON         equ	1144	;# 
  7173   000479                     PWM2S1CFG       equ	1145	;# 
  7174   00047A                     PWM2S1P1        equ	1146	;# 
  7175   00047A                     PWM2S1P1L       equ	1146	;# 
  7176   00047B                     PWM2S1P1H       equ	1147	;# 
  7177   00047C                     PWM2S1P2        equ	1148	;# 
  7178   00047C                     PWM2S1P2L       equ	1148	;# 
  7179   00047D                     PWM2S1P2H       equ	1149	;# 
  7180   00047E                     PWM3ERS         equ	1150	;# 
  7181   00047F                     PWM3CLK         equ	1151	;# 
  7182   000480                     PWM3LDS         equ	1152	;# 
  7183   000481                     PWM3PR          equ	1153	;# 
  7184   000481                     PWM3PRL         equ	1153	;# 
  7185   000482                     PWM3PRH         equ	1154	;# 
  7186   000483                     PWM3CPRE        equ	1155	;# 
  7187   000484                     PWM3PIPOS       equ	1156	;# 
  7188   000485                     PWM3GIR         equ	1157	;# 
  7189   000486                     PWM3GIE         equ	1158	;# 
  7190   000487                     PWM3CON         equ	1159	;# 
  7191   000488                     PWM3S1CFG       equ	1160	;# 
  7192   000489                     PWM3S1P1        equ	1161	;# 
  7193   000489                     PWM3S1P1L       equ	1161	;# 
  7194   00048A                     PWM3S1P1H       equ	1162	;# 
  7195   00048B                     PWM3S1P2        equ	1163	;# 
  7196   00048B                     PWM3S1P2L       equ	1163	;# 
  7197   00048C                     PWM3S1P2H       equ	1164	;# 
  7198   00048D                     PWM4ERS         equ	1165	;# 
  7199   00048E                     PWM4CLK         equ	1166	;# 
  7200   00048F                     PWM4LDS         equ	1167	;# 
  7201   000490                     PWM4PR          equ	1168	;# 
  7202   000490                     PWM4PRL         equ	1168	;# 
  7203   000491                     PWM4PRH         equ	1169	;# 
  7204   000492                     PWM4CPRE        equ	1170	;# 
  7205   000493                     PWM4PIPOS       equ	1171	;# 
  7206   000494                     PWM4GIR         equ	1172	;# 
  7207   000495                     PWM4GIE         equ	1173	;# 
  7208   000496                     PWM4CON         equ	1174	;# 
  7209   000497                     PWM4S1CFG       equ	1175	;# 
  7210   000498                     PWM4S1P1        equ	1176	;# 
  7211   000498                     PWM4S1P1L       equ	1176	;# 
  7212   000499                     PWM4S1P1H       equ	1177	;# 
  7213   00049A                     PWM4S1P2        equ	1178	;# 
  7214   00049A                     PWM4S1P2L       equ	1178	;# 
  7215   00049B                     PWM4S1P2H       equ	1179	;# 
  7216   00049C                     PWMLOAD         equ	1180	;# 
  7217   00049D                     PWMEN           equ	1181	;# 
  7218   00049E                     PIE0            equ	1182	;# 
  7219   00049F                     PIE1            equ	1183	;# 
  7220   0004A0                     PIE2            equ	1184	;# 
  7221   0004A1                     PIE3            equ	1185	;# 
  7222   0004A2                     PIE4            equ	1186	;# 
  7223   0004A3                     PIE5            equ	1187	;# 
  7224   0004A4                     PIE6            equ	1188	;# 
  7225   0004A5                     PIE7            equ	1189	;# 
  7226   0004A6                     PIE8            equ	1190	;# 
  7227   0004A7                     PIE9            equ	1191	;# 
  7228   0004A8                     PIE10           equ	1192	;# 
  7229   0004A9                     PIE11           equ	1193	;# 
  7230   0004AA                     PIE12           equ	1194	;# 
  7231   0004AB                     PIE13           equ	1195	;# 
  7232   0004AC                     PIE14           equ	1196	;# 
  7233   0004AD                     PIE15           equ	1197	;# 
  7234   0004AE                     PIR0            equ	1198	;# 
  7235   0004AF                     PIR1            equ	1199	;# 
  7236   0004B0                     PIR2            equ	1200	;# 
  7237   0004B1                     PIR3            equ	1201	;# 
  7238   0004B2                     PIR4            equ	1202	;# 
  7239   0004B3                     PIR5            equ	1203	;# 
  7240   0004B4                     PIR6            equ	1204	;# 
  7241   0004B5                     PIR7            equ	1205	;# 
  7242   0004B6                     PIR8            equ	1206	;# 
  7243   0004B7                     PIR9            equ	1207	;# 
  7244   0004B8                     PIR10           equ	1208	;# 
  7245   0004B9                     PIR11           equ	1209	;# 
  7246   0004BA                     PIR12           equ	1210	;# 
  7247   0004BB                     PIR13           equ	1211	;# 
  7248   0004BC                     PIR14           equ	1212	;# 
  7249   0004BD                     PIR15           equ	1213	;# 
  7250   0004BE                     LATA            equ	1214	;# 
  7251   0004BF                     LATB            equ	1215	;# 
  7252   0004C0                     LATC            equ	1216	;# 
  7253   0004C6                     TRISA           equ	1222	;# 
  7254   0004C7                     TRISB           equ	1223	;# 
  7255   0004C8                     TRISC           equ	1224	;# 
  7256   0004CA                     TRISE           equ	1226	;# 
  7257   0004CE                     PORTA           equ	1230	;# 
  7258   0004CF                     PORTB           equ	1231	;# 
  7259   0004D0                     PORTC           equ	1232	;# 
  7260   0004D2                     PORTE           equ	1234	;# 
  7261   0004D6                     INTCON0         equ	1238	;# 
  7262   0004D7                     INTCON1         equ	1239	;# 
  7263   0004D8                     STATUS          equ	1240	;# 
  7264   0004D9                     FSR2            equ	1241	;# 
  7265   0004D9                     FSR2L           equ	1241	;# 
  7266   0004DA                     FSR2H           equ	1242	;# 
  7267   0004DB                     PLUSW2          equ	1243	;# 
  7268   0004DC                     PREINC2         equ	1244	;# 
  7269   0004DD                     POSTDEC2        equ	1245	;# 
  7270   0004DE                     POSTINC2        equ	1246	;# 
  7271   0004DF                     INDF2           equ	1247	;# 
  7272   0004E0                     BSR             equ	1248	;# 
  7273   0004E1                     FSR1            equ	1249	;# 
  7274   0004E1                     FSR1L           equ	1249	;# 
  7275   0004E2                     FSR1H           equ	1250	;# 
  7276   0004E3                     PLUSW1          equ	1251	;# 
  7277   0004E4                     PREINC1         equ	1252	;# 
  7278   0004E5                     POSTDEC1        equ	1253	;# 
  7279   0004E6                     POSTINC1        equ	1254	;# 
  7280   0004E7                     INDF1           equ	1255	;# 
  7281   0004E8                     WREG            equ	1256	;# 
  7282   0004E9                     FSR0            equ	1257	;# 
  7283   0004E9                     FSR0L           equ	1257	;# 
  7284   0004EA                     FSR0H           equ	1258	;# 
  7285   0004EB                     PLUSW0          equ	1259	;# 
  7286   0004EC                     PREINC0         equ	1260	;# 
  7287   0004ED                     POSTDEC0        equ	1261	;# 
  7288   0004EE                     POSTINC0        equ	1262	;# 
  7289   0004EF                     INDF0           equ	1263	;# 
  7290   0004F0                     PCON0           equ	1264	;# 
  7291   0004F1                     PCON1           equ	1265	;# 
  7292   0004F2                     CPUDOZE         equ	1266	;# 
  7293   0004F3                     PROD            equ	1267	;# 
  7294   0004F3                     PRODL           equ	1267	;# 
  7295   0004F4                     PRODH           equ	1268	;# 
  7296   0004F5                     TABLAT          equ	1269	;# 
  7297   0004F6                     TBLPTR          equ	1270	;# 
  7298   0004F6                     TBLPTRL         equ	1270	;# 
  7299   0004F7                     TBLPTRH         equ	1271	;# 
  7300   0004F8                     TBLPTRU         equ	1272	;# 
  7301   0004F9                     PCLAT           equ	1273	;# 
  7302   0004F9                     PCL             equ	1273	;# 
  7303   0004FA                     PCLATH          equ	1274	;# 
  7304   0004FB                     PCLATU          equ	1275	;# 
  7305   0004FC                     STKPTR          equ	1276	;# 
  7306   0004FD                     TOS             equ	1277	;# 
  7307   0004FD                     TOSL            equ	1277	;# 
  7308   0004FE                     TOSH            equ	1278	;# 
  7309   0004FF                     TOSU            equ	1279	;# 
  7310   000038                     BOOTREG         equ	56	;# 
  7311   000039                     CLKRCON         equ	57	;# 
  7312   00003A                     CLKRCLK         equ	58	;# 
  7313   000040                     NVMCON0         equ	64	;# 
  7314   000041                     NVMCON1         equ	65	;# 
  7315   000042                     NVMLOCK         equ	66	;# 
  7316   000043                     NVMADR          equ	67	;# 
  7317   000043                     NVMADRL         equ	67	;# 
  7318   000044                     NVMADRH         equ	68	;# 
  7319   000045                     NVMADRU         equ	69	;# 
  7320   000046                     NVMDAT          equ	70	;# 
  7321   000046                     NVMDATL         equ	70	;# 
  7322   000047                     NVMDATH         equ	71	;# 
  7323   000048                     VREGCON         equ	72	;# 
  7324   000049                     BORCON          equ	73	;# 
  7325   00004A                     HLVDCON0        equ	74	;# 
  7326   00004B                     HLVDCON1        equ	75	;# 
  7327   00004C                     ZCDCON          equ	76	;# 
  7328   000060                     PMD0            equ	96	;# 
  7329   000061                     PMD1            equ	97	;# 
  7330   000062                     PMD2            equ	98	;# 
  7331   000063                     PMD3            equ	99	;# 
  7332   000064                     PMD4            equ	100	;# 
  7333   000065                     PMD5            equ	101	;# 
  7334   000066                     PMD6            equ	102	;# 
  7335   000067                     PMD7            equ	103	;# 
  7336   000068                     PMD8            equ	104	;# 
  7337   00006A                     MD1CON0         equ	106	;# 
  7338   00006B                     MD1CON1         equ	107	;# 
  7339   00006C                     MD1SRC          equ	108	;# 
  7340   00006D                     MD1CARL         equ	109	;# 
  7341   00006E                     MD1CARH         equ	110	;# 
  7342   00006F                     CMOUT           equ	111	;# 
  7343   000070                     CM1CON0         equ	112	;# 
  7344   000071                     CM1CON1         equ	113	;# 
  7345   000072                     CM1NCH          equ	114	;# 
  7346   000073                     CM1PCH          equ	115	;# 
  7347   000074                     CM2CON0         equ	116	;# 
  7348   000075                     CM2CON1         equ	117	;# 
  7349   000076                     CM2NCH          equ	118	;# 
  7350   000077                     CM2PCH          equ	119	;# 
  7351   000078                     WDTCON0         equ	120	;# 
  7352   000079                     WDTCON1         equ	121	;# 
  7353   00007A                     WDTPSL          equ	122	;# 
  7354   00007B                     WDTPSH          equ	123	;# 
  7355   00007C                     WDTTMR          equ	124	;# 
  7356   00007D                     DAC1DAT         equ	125	;# 
  7357   00007D                     DAC1DATL        equ	125	;# 
  7358   00007F                     DAC1CON         equ	127	;# 
  7359   000080                     SPI1RXB         equ	128	;# 
  7360   000081                     SPI1TXB         equ	129	;# 
  7361   000082                     SPI1TCNT        equ	130	;# 
  7362   000082                     SPI1TCNTL       equ	130	;# 
  7363   000083                     SPI1TCNTH       equ	131	;# 
  7364   000084                     SPI1CON0        equ	132	;# 
  7365   000085                     SPI1CON1        equ	133	;# 
  7366   000086                     SPI1CON2        equ	134	;# 
  7367   000087                     SPI1STATUS      equ	135	;# 
  7368   000088                     SPI1TWIDTH      equ	136	;# 
  7369   000089                     SPI1BAUD        equ	137	;# 
  7370   00008A                     SPI1INTF        equ	138	;# 
  7371   00008B                     SPI1INTE        equ	139	;# 
  7372   00008C                     SPI1CLK         equ	140	;# 
  7373   00008D                     SPI2RXB         equ	141	;# 
  7374   00008E                     SPI2TXB         equ	142	;# 
  7375   00008F                     SPI2TCNT        equ	143	;# 
  7376   00008F                     SPI2TCNTL       equ	143	;# 
  7377   000090                     SPI2TCNTH       equ	144	;# 
  7378   000091                     SPI2CON0        equ	145	;# 
  7379   000092                     SPI2CON1        equ	146	;# 
  7380   000093                     SPI2CON2        equ	147	;# 
  7381   000094                     SPI2STATUS      equ	148	;# 
  7382   000095                     SPI2TWIDTH      equ	149	;# 
  7383   000096                     SPI2BAUD        equ	150	;# 
  7384   000097                     SPI2INTF        equ	151	;# 
  7385   000098                     SPI2INTE        equ	152	;# 
  7386   000099                     SPI2CLK         equ	153	;# 
  7387   0000AC                     ACTCON          equ	172	;# 
  7388   0000AD                     OSCCON1         equ	173	;# 
  7389   0000AE                     OSCCON2         equ	174	;# 
  7390   0000AF                     OSCCON3         equ	175	;# 
  7391   0000B0                     OSCTUNE         equ	176	;# 
  7392   0000B1                     OSCFRQ          equ	177	;# 
  7393   0000B1                     OSCFREQ         equ	177	;# 
  7394   0000B2                     OSCSTAT         equ	178	;# 
  7395   0000B2                     OSCSTAT1        equ	178	;# 
  7396   0000B3                     OSCEN           equ	179	;# 
  7397   0000B4                     PRLOCK          equ	180	;# 
  7398   0000B5                     SCANPR          equ	181	;# 
  7399   0000B6                     DMA1PR          equ	182	;# 
  7400   0000B7                     DMA2PR          equ	183	;# 
  7401   0000B8                     DMA3PR          equ	184	;# 
  7402   0000B9                     DMA4PR          equ	185	;# 
  7403   0000BA                     DMA5PR          equ	186	;# 
  7404   0000BB                     DMA6PR          equ	187	;# 
  7405   0000BC                     DMA7PR          equ	188	;# 
  7406   0000BD                     DMA8PR          equ	189	;# 
  7407   0000BE                     MAINPR          equ	190	;# 
  7408   0000BF                     ISRPR           equ	191	;# 
  7409   0000D4                     CLCDATA         equ	212	;# 
  7410   0000D5                     CLCSELECT       equ	213	;# 
  7411   0000D6                     CLCnCON         equ	214	;# 
  7412   0000D7                     CLCnPOL         equ	215	;# 
  7413   0000D8                     CLCnSEL0        equ	216	;# 
  7414   0000D9                     CLCnSEL1        equ	217	;# 
  7415   0000DA                     CLCnSEL2        equ	218	;# 
  7416   0000DB                     CLCnSEL3        equ	219	;# 
  7417   0000DC                     CLCnGLS0        equ	220	;# 
  7418   0000DD                     CLCnGLS1        equ	221	;# 
  7419   0000DE                     CLCnGLS2        equ	222	;# 
  7420   0000DF                     CLCnGLS3        equ	223	;# 
  7421   0000E8                     DMASELECT       equ	232	;# 
  7422   0000E9                     DMAnBUF         equ	233	;# 
  7423   0000EA                     DMAnDCNT        equ	234	;# 
  7424   0000EA                     DMAnDCNTL       equ	234	;# 
  7425   0000EB                     DMAnDCNTH       equ	235	;# 
  7426   0000EC                     DMAnDPTR        equ	236	;# 
  7427   0000EC                     DMAnDPTRL       equ	236	;# 
  7428   0000ED                     DMAnDPTRH       equ	237	;# 
  7429   0000EE                     DMAnDSZ         equ	238	;# 
  7430   0000EE                     DMAnDSZL        equ	238	;# 
  7431   0000EF                     DMAnDSZH        equ	239	;# 
  7432   0000F0                     DMAnDSA         equ	240	;# 
  7433   0000F0                     DMAnDSAL        equ	240	;# 
  7434   0000F1                     DMAnDSAH        equ	241	;# 
  7435   0000F2                     DMAnSCNT        equ	242	;# 
  7436   0000F2                     DMAnSCNTL       equ	242	;# 
  7437   0000F3                     DMAnSCNTH       equ	243	;# 
  7438   0000F4                     DMAnSPTR        equ	244	;# 
  7439   0000F4                     DMAnSPTRL       equ	244	;# 
  7440   0000F5                     DMAnSPTRH       equ	245	;# 
  7441   0000F6                     DMAnSPTRU       equ	246	;# 
  7442   0000F7                     DMAnSSZ         equ	247	;# 
  7443   0000F7                     DMAnSSZL        equ	247	;# 
  7444   0000F8                     DMAnSSZH        equ	248	;# 
  7445   0000F9                     DMAnSSA         equ	249	;# 
  7446   0000F9                     DMAnSSAL        equ	249	;# 
  7447   0000FA                     DMAnSSAH        equ	250	;# 
  7448   0000FB                     DMAnSSAU        equ	251	;# 
  7449   0000FC                     DMAnCON0        equ	252	;# 
  7450   0000FD                     DMAnCON1        equ	253	;# 
  7451   0000FE                     DMAnAIRQ        equ	254	;# 
  7452   0000FF                     DMAnSIRQ        equ	255	;# 
  7453   000100                     C1CONL          equ	256	;# 
  7454   000101                     C1CONH          equ	257	;# 
  7455   000102                     C1CONU          equ	258	;# 
  7456   000103                     C1CONT          equ	259	;# 
  7457   000104                     C1NBTCFGL       equ	260	;# 
  7458   000105                     C1NBTCFGH       equ	261	;# 
  7459   000106                     C1NBTCFGU       equ	262	;# 
  7460   000107                     C1NBTCFGT       equ	263	;# 
  7461   000108                     C1DBTCFGL       equ	264	;# 
  7462   000109                     C1DBTCFGH       equ	265	;# 
  7463   00010A                     C1DBTCFGU       equ	266	;# 
  7464   00010B                     C1DBTCFGT       equ	267	;# 
  7465   00010C                     C1TDCL          equ	268	;# 
  7466   00010D                     C1TDCH          equ	269	;# 
  7467   00010E                     C1TDCU          equ	270	;# 
  7468   000110                     C1TBC           equ	272	;# 
  7469   000110                     C1TBCL          equ	272	;# 
  7470   000111                     C1TBCH          equ	273	;# 
  7471   000112                     C1TBCU          equ	274	;# 
  7472   000113                     C1TBCT          equ	275	;# 
  7473   000114                     C1TSCONL        equ	276	;# 
  7474   000115                     C1TSCONH        equ	277	;# 
  7475   000116                     C1TSCONU        equ	278	;# 
  7476   000117                     C1TSCONT        equ	279	;# 
  7477   000118                     C1VECL          equ	280	;# 
  7478   000119                     C1VECH          equ	281	;# 
  7479   00011A                     C1VECU          equ	282	;# 
  7480   00011B                     C1VECT          equ	283	;# 
  7481   00011C                     C1INTL          equ	284	;# 
  7482   00011D                     C1INTH          equ	285	;# 
  7483   00011E                     C1INTU          equ	286	;# 
  7484   00011F                     C1INTT          equ	287	;# 
  7485   000120                     C1RXIF          equ	288	;# 
  7486   000120                     C1RXIFL         equ	288	;# 
  7487   000121                     C1RXIFH         equ	289	;# 
  7488   000122                     C1RXIFU         equ	290	;# 
  7489   000123                     C1RXIFT         equ	291	;# 
  7490   000124                     C1TXIF          equ	292	;# 
  7491   000124                     C1TXIFL         equ	292	;# 
  7492   000125                     C1TXIFH         equ	293	;# 
  7493   000126                     C1TXIFU         equ	294	;# 
  7494   000127                     C1TXIFT         equ	295	;# 
  7495   000128                     C1RXOVIF        equ	296	;# 
  7496   000128                     C1RXOVIFL       equ	296	;# 
  7497   000129                     C1RXOVIFH       equ	297	;# 
  7498   00012A                     C1RXOVIFU       equ	298	;# 
  7499   00012B                     C1RXOVIFT       equ	299	;# 
  7500   00012C                     C1TXATIF        equ	300	;# 
  7501   00012C                     C1TXATIFL       equ	300	;# 
  7502   00012D                     C1TXATIFH       equ	301	;# 
  7503   00012E                     C1TXATIFU       equ	302	;# 
  7504   00012F                     C1TXATIFT       equ	303	;# 
  7505   000130                     C1TXREQ         equ	304	;# 
  7506   000130                     C1TXREQL        equ	304	;# 
  7507   000131                     C1TXREQH        equ	305	;# 
  7508   000132                     C1TXREQU        equ	306	;# 
  7509   000133                     C1TXREQT        equ	307	;# 
  7510   000134                     C1TRECL         equ	308	;# 
  7511   000135                     C1TRECH         equ	309	;# 
  7512   000136                     C1TRECU         equ	310	;# 
  7513   000137                     C1TRECT         equ	311	;# 
  7514   000138                     C1BDIAG0L       equ	312	;# 
  7515   000139                     C1BDIAG0H       equ	313	;# 
  7516   00013C                     C1BDIAG1L       equ	316	;# 
  7517   00013D                     C1BDIAG1H       equ	317	;# 
  7518   00013E                     C1BDIAG1U       equ	318	;# 
  7519   00013F                     C1BDIAG1T       equ	319	;# 
  7520   000140                     C1TEFCONL       equ	320	;# 
  7521   000141                     C1TEFCONH       equ	321	;# 
  7522   000142                     C1TEFCONU       equ	322	;# 
  7523   000143                     C1TEFCONT       equ	323	;# 
  7524   000144                     C1TEFSTAL       equ	324	;# 
  7525   000145                     C1TEFSTAH       equ	325	;# 
  7526   000146                     C1TEFSTAU       equ	326	;# 
  7527   000147                     C1TEFSTAT       equ	327	;# 
  7528   000148                     C1TEFUA         equ	328	;# 
  7529   000148                     C1TEFUAL        equ	328	;# 
  7530   000149                     C1TEFUAH        equ	329	;# 
  7531   00014A                     C1TEFUAU        equ	330	;# 
  7532   00014B                     C1TEFUAT        equ	331	;# 
  7533   00014C                     C1FIFOBA        equ	332	;# 
  7534   00014C                     C1FIFOBAL       equ	332	;# 
  7535   00014D                     C1FIFOBAH       equ	333	;# 
  7536   00014E                     C1FIFOBAU       equ	334	;# 
  7537   00014F                     C1FIFOBAT       equ	335	;# 
  7538   000150                     C1TXQCONL       equ	336	;# 
  7539   000151                     C1TXQCONH       equ	337	;# 
  7540   000152                     C1TXQCONU       equ	338	;# 
  7541   000153                     C1TXQCONT       equ	339	;# 
  7542   000154                     C1TXQSTAL       equ	340	;# 
  7543   000155                     C1TXQSTAH       equ	341	;# 
  7544   000156                     C1TXQSTAU       equ	342	;# 
  7545   000157                     C1TXQSTAT       equ	343	;# 
  7546   000158                     C1TXQUA         equ	344	;# 
  7547   000158                     C1TXQUAL        equ	344	;# 
  7548   000159                     C1TXQUAH        equ	345	;# 
  7549   00015A                     C1TXQUAU        equ	346	;# 
  7550   00015B                     C1TXQUAT        equ	347	;# 
  7551   00015C                     C1FIFOCON1      equ	348	;# 
  7552   00015C                     C1FIFOCON1L     equ	348	;# 
  7553   00015D                     C1FIFOCON1H     equ	349	;# 
  7554   00015E                     C1FIFOCON1U     equ	350	;# 
  7555   00015F                     C1FIFOCON1T     equ	351	;# 
  7556   000160                     C1FIFOSTA1      equ	352	;# 
  7557   000160                     C1FIFOSTA1L     equ	352	;# 
  7558   000161                     C1FIFOSTA1H     equ	353	;# 
  7559   000162                     C1FIFOSTA1U     equ	354	;# 
  7560   000163                     C1FIFOSTA1T     equ	355	;# 
  7561   000164                     C1FIFOUA1       equ	356	;# 
  7562   000164                     C1FIFOUA1L      equ	356	;# 
  7563   000165                     C1FIFOUA1H      equ	357	;# 
  7564   000166                     C1FIFOUA1U      equ	358	;# 
  7565   000167                     C1FIFOUA1T      equ	359	;# 
  7566   000168                     C1FIFOCON2      equ	360	;# 
  7567   000168                     C1FIFOCON2L     equ	360	;# 
  7568   000169                     C1FIFOCON2H     equ	361	;# 
  7569   00016A                     C1FIFOCON2U     equ	362	;# 
  7570   00016B                     C1FIFOCON2T     equ	363	;# 
  7571   00016C                     C1FIFOSTA2      equ	364	;# 
  7572   00016C                     C1FIFOSTA2L     equ	364	;# 
  7573   00016D                     C1FIFOSTA2H     equ	365	;# 
  7574   00016E                     C1FIFOSTA2U     equ	366	;# 
  7575   00016F                     C1FIFOSTA2T     equ	367	;# 
  7576   000170                     C1FIFOUA2       equ	368	;# 
  7577   000170                     C1FIFOUA2L      equ	368	;# 
  7578   000171                     C1FIFOUA2H      equ	369	;# 
  7579   000172                     C1FIFOUA2U      equ	370	;# 
  7580   000173                     C1FIFOUA2T      equ	371	;# 
  7581   000174                     C1FIFOCON3      equ	372	;# 
  7582   000174                     C1FIFOCON3L     equ	372	;# 
  7583   000175                     C1FIFOCON3H     equ	373	;# 
  7584   000176                     C1FIFOCON3U     equ	374	;# 
  7585   000177                     C1FIFOCON3T     equ	375	;# 
  7586   000178                     C1FIFOSTA3      equ	376	;# 
  7587   000178                     C1FIFOSTA3L     equ	376	;# 
  7588   000179                     C1FIFOSTA3H     equ	377	;# 
  7589   00017A                     C1FIFOSTA3U     equ	378	;# 
  7590   00017B                     C1FIFOSTA3T     equ	379	;# 
  7591   00017C                     C1FIFOUA3       equ	380	;# 
  7592   00017C                     C1FIFOUA3L      equ	380	;# 
  7593   00017D                     C1FIFOUA3H      equ	381	;# 
  7594   00017E                     C1FIFOUA3U      equ	382	;# 
  7595   00017F                     C1FIFOUA3T      equ	383	;# 
  7596   000180                     C1FLTCON0L      equ	384	;# 
  7597   000181                     C1FLTCON0H      equ	385	;# 
  7598   000182                     C1FLTCON0U      equ	386	;# 
  7599   000183                     C1FLTCON0T      equ	387	;# 
  7600   000184                     C1FLTCON1L      equ	388	;# 
  7601   000185                     C1FLTCON1H      equ	389	;# 
  7602   000186                     C1FLTCON1U      equ	390	;# 
  7603   000187                     C1FLTCON1T      equ	391	;# 
  7604   000188                     C1FLTCON2L      equ	392	;# 
  7605   000189                     C1FLTCON2H      equ	393	;# 
  7606   00018A                     C1FLTCON2U      equ	394	;# 
  7607   00018B                     C1FLTCON2T      equ	395	;# 
  7608   00018C                     C1FLTOBJ0       equ	396	;# 
  7609   00018C                     C1FLTOBJ0L      equ	396	;# 
  7610   00018D                     C1FLTOBJ0H      equ	397	;# 
  7611   00018E                     C1FLTOBJ0U      equ	398	;# 
  7612   00018F                     C1FLTOBJ0T      equ	399	;# 
  7613   000190                     C1MASK0         equ	400	;# 
  7614   000190                     C1MASK0L        equ	400	;# 
  7615   000191                     C1MASK0H        equ	401	;# 
  7616   000192                     C1MASK0U        equ	402	;# 
  7617   000193                     C1MASK0T        equ	403	;# 
  7618   000194                     C1FLTOBJ1       equ	404	;# 
  7619   000194                     C1FLTOBJ1L      equ	404	;# 
  7620   000195                     C1FLTOBJ1H      equ	405	;# 
  7621   000196                     C1FLTOBJ1U      equ	406	;# 
  7622   000197                     C1FLTOBJ1T      equ	407	;# 
  7623   000198                     C1MASK1         equ	408	;# 
  7624   000198                     C1MASK1L        equ	408	;# 
  7625   000199                     C1MASK1H        equ	409	;# 
  7626   00019A                     C1MASK1U        equ	410	;# 
  7627   00019B                     C1MASK1T        equ	411	;# 
  7628   00019C                     C1FLTOBJ2       equ	412	;# 
  7629   00019C                     C1FLTOBJ2L      equ	412	;# 
  7630   00019D                     C1FLTOBJ2H      equ	413	;# 
  7631   00019E                     C1FLTOBJ2U      equ	414	;# 
  7632   00019F                     C1FLTOBJ2T      equ	415	;# 
  7633   0001A0                     C1MASK2         equ	416	;# 
  7634   0001A0                     C1MASK2L        equ	416	;# 
  7635   0001A1                     C1MASK2H        equ	417	;# 
  7636   0001A2                     C1MASK2U        equ	418	;# 
  7637   0001A3                     C1MASK2T        equ	419	;# 
  7638   0001A4                     C1FLTOBJ3       equ	420	;# 
  7639   0001A4                     C1FLTOBJ3L      equ	420	;# 
  7640   0001A5                     C1FLTOBJ3H      equ	421	;# 
  7641   0001A6                     C1FLTOBJ3U      equ	422	;# 
  7642   0001A7                     C1FLTOBJ3T      equ	423	;# 
  7643   0001A8                     C1MASK3         equ	424	;# 
  7644   0001A8                     C1MASK3L        equ	424	;# 
  7645   0001A9                     C1MASK3H        equ	425	;# 
  7646   0001AA                     C1MASK3U        equ	426	;# 
  7647   0001AB                     C1MASK3T        equ	427	;# 
  7648   0001AC                     C1FLTOBJ4       equ	428	;# 
  7649   0001AC                     C1FLTOBJ4L      equ	428	;# 
  7650   0001AD                     C1FLTOBJ4H      equ	429	;# 
  7651   0001AE                     C1FLTOBJ4U      equ	430	;# 
  7652   0001AF                     C1FLTOBJ4T      equ	431	;# 
  7653   0001B0                     C1MASK4         equ	432	;# 
  7654   0001B0                     C1MASK4L        equ	432	;# 
  7655   0001B1                     C1MASK4H        equ	433	;# 
  7656   0001B2                     C1MASK4U        equ	434	;# 
  7657   0001B3                     C1MASK4T        equ	435	;# 
  7658   0001B4                     C1FLTOBJ5       equ	436	;# 
  7659   0001B4                     C1FLTOBJ5L      equ	436	;# 
  7660   0001B5                     C1FLTOBJ5H      equ	437	;# 
  7661   0001B6                     C1FLTOBJ5U      equ	438	;# 
  7662   0001B7                     C1FLTOBJ5T      equ	439	;# 
  7663   0001B8                     C1MASK5         equ	440	;# 
  7664   0001B8                     C1MASK5L        equ	440	;# 
  7665   0001B9                     C1MASK5H        equ	441	;# 
  7666   0001BA                     C1MASK5U        equ	442	;# 
  7667   0001BB                     C1MASK5T        equ	443	;# 
  7668   0001BC                     C1FLTOBJ6       equ	444	;# 
  7669   0001BC                     C1FLTOBJ6L      equ	444	;# 
  7670   0001BD                     C1FLTOBJ6H      equ	445	;# 
  7671   0001BE                     C1FLTOBJ6U      equ	446	;# 
  7672   0001BF                     C1FLTOBJ6T      equ	447	;# 
  7673   0001C0                     C1MASK6         equ	448	;# 
  7674   0001C0                     C1MASK6L        equ	448	;# 
  7675   0001C1                     C1MASK6H        equ	449	;# 
  7676   0001C2                     C1MASK6U        equ	450	;# 
  7677   0001C3                     C1MASK6T        equ	451	;# 
  7678   0001C4                     C1FLTOBJ7       equ	452	;# 
  7679   0001C4                     C1FLTOBJ7L      equ	452	;# 
  7680   0001C5                     C1FLTOBJ7H      equ	453	;# 
  7681   0001C6                     C1FLTOBJ7U      equ	454	;# 
  7682   0001C7                     C1FLTOBJ7T      equ	455	;# 
  7683   0001C8                     C1MASK7         equ	456	;# 
  7684   0001C8                     C1MASK7L        equ	456	;# 
  7685   0001C9                     C1MASK7H        equ	457	;# 
  7686   0001CA                     C1MASK7U        equ	458	;# 
  7687   0001CB                     C1MASK7T        equ	459	;# 
  7688   0001CC                     C1FLTOBJ8       equ	460	;# 
  7689   0001CC                     C1FLTOBJ8L      equ	460	;# 
  7690   0001CD                     C1FLTOBJ8H      equ	461	;# 
  7691   0001CE                     C1FLTOBJ8U      equ	462	;# 
  7692   0001CF                     C1FLTOBJ8T      equ	463	;# 
  7693   0001D0                     C1MASK8         equ	464	;# 
  7694   0001D0                     C1MASK8L        equ	464	;# 
  7695   0001D1                     C1MASK8H        equ	465	;# 
  7696   0001D2                     C1MASK8U        equ	466	;# 
  7697   0001D3                     C1MASK8T        equ	467	;# 
  7698   0001D4                     C1FLTOBJ9       equ	468	;# 
  7699   0001D4                     C1FLTOBJ9L      equ	468	;# 
  7700   0001D5                     C1FLTOBJ9H      equ	469	;# 
  7701   0001D6                     C1FLTOBJ9U      equ	470	;# 
  7702   0001D7                     C1FLTOBJ9T      equ	471	;# 
  7703   0001D8                     C1MASK9         equ	472	;# 
  7704   0001D8                     C1MASK9L        equ	472	;# 
  7705   0001D9                     C1MASK9H        equ	473	;# 
  7706   0001DA                     C1MASK9U        equ	474	;# 
  7707   0001DB                     C1MASK9T        equ	475	;# 
  7708   0001DC                     C1FLTOBJ10      equ	476	;# 
  7709   0001DC                     C1FLTOBJ10L     equ	476	;# 
  7710   0001DD                     C1FLTOBJ10H     equ	477	;# 
  7711   0001DE                     C1FLTOBJ10U     equ	478	;# 
  7712   0001DF                     C1FLTOBJ10T     equ	479	;# 
  7713   0001E0                     C1MASK10        equ	480	;# 
  7714   0001E0                     C1MASK10L       equ	480	;# 
  7715   0001E1                     C1MASK10H       equ	481	;# 
  7716   0001E2                     C1MASK10U       equ	482	;# 
  7717   0001E3                     C1MASK10T       equ	483	;# 
  7718   0001E4                     C1FLTOBJ11      equ	484	;# 
  7719   0001E4                     C1FLTOBJ11L     equ	484	;# 
  7720   0001E5                     C1FLTOBJ11H     equ	485	;# 
  7721   0001E6                     C1FLTOBJ11U     equ	486	;# 
  7722   0001E7                     C1FLTOBJ11T     equ	487	;# 
  7723   0001E8                     C1MASK11        equ	488	;# 
  7724   0001E8                     C1MASK11L       equ	488	;# 
  7725   0001E9                     C1MASK11H       equ	489	;# 
  7726   0001EA                     C1MASK11U       equ	490	;# 
  7727   0001EB                     C1MASK11T       equ	491	;# 
  7728   000200                     PPSLOCK         equ	512	;# 
  7729   000201                     RA0PPS          equ	513	;# 
  7730   000202                     RA1PPS          equ	514	;# 
  7731   000203                     RA2PPS          equ	515	;# 
  7732   000204                     RA3PPS          equ	516	;# 
  7733   000205                     RA4PPS          equ	517	;# 
  7734   000206                     RA5PPS          equ	518	;# 
  7735   000207                     RA6PPS          equ	519	;# 
  7736   000208                     RA7PPS          equ	520	;# 
  7737   000209                     RB0PPS          equ	521	;# 
  7738   00020A                     RB1PPS          equ	522	;# 
  7739   00020B                     RB2PPS          equ	523	;# 
  7740   00020C                     RB3PPS          equ	524	;# 
  7741   00020D                     RB4PPS          equ	525	;# 
  7742   00020E                     RB5PPS          equ	526	;# 
  7743   00020F                     RB6PPS          equ	527	;# 
  7744   000210                     RB7PPS          equ	528	;# 
  7745   000211                     RC0PPS          equ	529	;# 
  7746   000212                     RC1PPS          equ	530	;# 
  7747   000213                     RC2PPS          equ	531	;# 
  7748   000214                     RC3PPS          equ	532	;# 
  7749   000215                     RC4PPS          equ	533	;# 
  7750   000216                     RC5PPS          equ	534	;# 
  7751   000217                     RC6PPS          equ	535	;# 
  7752   000218                     RC7PPS          equ	536	;# 
  7753   00023D                     CANRXPPS        equ	573	;# 
  7754   00023E                     INT0PPS         equ	574	;# 
  7755   00023F                     INT1PPS         equ	575	;# 
  7756   000240                     INT2PPS         equ	576	;# 
  7757   000241                     T0CKIPPS        equ	577	;# 
  7758   000242                     T1CKIPPS        equ	578	;# 
  7759   000243                     T1GPPS          equ	579	;# 
  7760   000244                     T3CKIPPS        equ	580	;# 
  7761   000245                     T3GPPS          equ	581	;# 
  7762   000246                     T5CKIPPS        equ	582	;# 
  7763   000247                     T5GPPS          equ	583	;# 
  7764   000248                     T2INPPS         equ	584	;# 
  7765   000249                     T4INPPS         equ	585	;# 
  7766   00024A                     T6INPPS         equ	586	;# 
  7767   00024B                     TUIN0PPS        equ	587	;# 
  7768   00024C                     TUIN1PPS        equ	588	;# 
  7769   00024F                     CCP1PPS         equ	591	;# 
  7770   000250                     CCP2PPS         equ	592	;# 
  7771   000251                     CCP3PPS         equ	593	;# 
  7772   000253                     PWM1ERSPPS      equ	595	;# 
  7773   000254                     PWM2ERSPPS      equ	596	;# 
  7774   000255                     PWM3ERSPPS      equ	597	;# 
  7775   000256                     PWM4ERSPPS      equ	598	;# 
  7776   000257                     PWMIN0PPS       equ	599	;# 
  7777   000258                     PWMIN1PPS       equ	600	;# 
  7778   000259                     SMT1WINPPS      equ	601	;# 
  7779   00025A                     SMT1SIGPPS      equ	602	;# 
  7780   00025B                     CWG1PPS         equ	603	;# 
  7781   00025B                     CWG1INPPS       equ	603	;# 
  7782   00025C                     CWG2PPS         equ	604	;# 
  7783   00025C                     CWG2INPPS       equ	604	;# 
  7784   00025D                     CWG3PPS         equ	605	;# 
  7785   00025D                     CWG3INPPS       equ	605	;# 
  7786   00025E                     MD1CARLPPS      equ	606	;# 
  7787   00025E                     MDCARLPPS       equ	606	;# 
  7788   00025F                     MD1CARHPPS      equ	607	;# 
  7789   00025F                     MDCARHPPS       equ	607	;# 
  7790   000260                     MD1SRCPPS       equ	608	;# 
  7791   000260                     MDSRCPPS        equ	608	;# 
  7792   000261                     CLCIN0PPS       equ	609	;# 
  7793   000262                     CLCIN1PPS       equ	610	;# 
  7794   000263                     CLCIN2PPS       equ	611	;# 
  7795   000264                     CLCIN3PPS       equ	612	;# 
  7796   000265                     CLCIN4PPS       equ	613	;# 
  7797   000266                     CLCIN5PPS       equ	614	;# 
  7798   000267                     CLCIN6PPS       equ	615	;# 
  7799   000268                     CLCIN7PPS       equ	616	;# 
  7800   000269                     ADACTPPS        equ	617	;# 
  7801   00026A                     SPI1SCKPPS      equ	618	;# 
  7802   00026B                     SPI1SDIPPS      equ	619	;# 
  7803   00026C                     SPI1SSPPS       equ	620	;# 
  7804   00026D                     SPI2SCKPPS      equ	621	;# 
  7805   00026E                     SPI2SDIPPS      equ	622	;# 
  7806   00026F                     SPI2SSPPS       equ	623	;# 
  7807   000270                     I2C1SDAPPS      equ	624	;# 
  7808   000271                     I2C1SCLPPS      equ	625	;# 
  7809   000272                     U1RXPPS         equ	626	;# 
  7810   000273                     U1CTSPPS        equ	627	;# 
  7811   000274                     U2RXPPS         equ	628	;# 
  7812   000275                     U2CTSPPS        equ	629	;# 
  7813   000276                     U3RXPPS         equ	630	;# 
  7814   000277                     U3CTSPPS        equ	631	;# 
  7815   000278                     U4RXPPS         equ	632	;# 
  7816   000279                     U4CTSPPS        equ	633	;# 
  7817   00027A                     U5RXPPS         equ	634	;# 
  7818   00027B                     U5CTSPPS        equ	635	;# 
  7819   000286                     RC4I2C          equ	646	;# 
  7820   000287                     RC3I2C          equ	647	;# 
  7821   000288                     RB2I2C          equ	648	;# 
  7822   000289                     RB1I2C          equ	649	;# 
  7823   00028A                     I2C1RXB         equ	650	;# 
  7824   00028B                     I2C1TXB         equ	651	;# 
  7825   00028C                     I2C1CNTL        equ	652	;# 
  7826   00028D                     I2C1CNTH        equ	653	;# 
  7827   00028E                     I2C1ADB0        equ	654	;# 
  7828   00028F                     I2C1ADB1        equ	655	;# 
  7829   000290                     I2C1ADR0        equ	656	;# 
  7830   000291                     I2C1ADR1        equ	657	;# 
  7831   000292                     I2C1ADR2        equ	658	;# 
  7832   000293                     I2C1ADR3        equ	659	;# 
  7833   000294                     I2C1CON0        equ	660	;# 
  7834   000295                     I2C1CON1        equ	661	;# 
  7835   000296                     I2C1CON2        equ	662	;# 
  7836   000297                     I2C1ERR         equ	663	;# 
  7837   000298                     I2C1STAT0       equ	664	;# 
  7838   000299                     I2C1STAT1       equ	665	;# 
  7839   00029A                     I2C1PIR         equ	666	;# 
  7840   00029B                     I2C1PIE         equ	667	;# 
  7841   00029C                     I2C1BTO         equ	668	;# 
  7842   00029D                     I2C1BAUD        equ	669	;# 
  7843   00029E                     I2C1CLK         equ	670	;# 
  7844   00029F                     I2C1BTOC        equ	671	;# 
  7845   0002A1                     U1RXB           equ	673	;# 
  7846   0002A1                     U1RXBL          equ	673	;# 
  7847   0002A2                     U1RXCHK         equ	674	;# 
  7848   0002A3                     U1TXB           equ	675	;# 
  7849   0002A3                     U1TXBL          equ	675	;# 
  7850   0002A4                     U1TXCHK         equ	676	;# 
  7851   0002A5                     U1P1            equ	677	;# 
  7852   0002A5                     U1P1L           equ	677	;# 
  7853   0002A6                     U1P1H           equ	678	;# 
  7854   0002A7                     U1P2            equ	679	;# 
  7855   0002A7                     U1P2L           equ	679	;# 
  7856   0002A8                     U1P2H           equ	680	;# 
  7857   0002A9                     U1P3            equ	681	;# 
  7858   0002A9                     U1P3L           equ	681	;# 
  7859   0002AA                     U1P3H           equ	682	;# 
  7860   0002AB                     U1CON0          equ	683	;# 
  7861   0002AC                     U1CON1          equ	684	;# 
  7862   0002AD                     U1CON2          equ	685	;# 
  7863   0002AE                     U1BRG           equ	686	;# 
  7864   0002AE                     U1BRGL          equ	686	;# 
  7865   0002AF                     U1BRGH          equ	687	;# 
  7866   0002B0                     U1FIFO          equ	688	;# 
  7867   0002B1                     U1UIR           equ	689	;# 
  7868   0002B2                     U1ERRIR         equ	690	;# 
  7869   0002B3                     U1ERRIE         equ	691	;# 
  7870   0002B4                     U2RXB           equ	692	;# 
  7871   0002B4                     U2RXBL          equ	692	;# 
  7872   0002B5                     U2RXCHK         equ	693	;# 
  7873   0002B6                     U2TXB           equ	694	;# 
  7874   0002B6                     U2TXBL          equ	694	;# 
  7875   0002B7                     U2TXCHK         equ	695	;# 
  7876   0002B8                     U2P1            equ	696	;# 
  7877   0002B8                     U2P1L           equ	696	;# 
  7878   0002B9                     U2P1H           equ	697	;# 
  7879   0002BA                     U2P2            equ	698	;# 
  7880   0002BA                     U2P2L           equ	698	;# 
  7881   0002BB                     U2P2H           equ	699	;# 
  7882   0002BC                     U2P3            equ	700	;# 
  7883   0002BC                     U2P3L           equ	700	;# 
  7884   0002BD                     U2P3H           equ	701	;# 
  7885   0002BE                     U2CON0          equ	702	;# 
  7886   0002BF                     U2CON1          equ	703	;# 
  7887   0002C0                     U2CON2          equ	704	;# 
  7888   0002C1                     U2BRG           equ	705	;# 
  7889   0002C1                     U2BRGL          equ	705	;# 
  7890   0002C2                     U2BRGH          equ	706	;# 
  7891   0002C3                     U2FIFO          equ	707	;# 
  7892   0002C4                     U2UIR           equ	708	;# 
  7893   0002C5                     U2ERRIR         equ	709	;# 
  7894   0002C6                     U2ERRIE         equ	710	;# 
  7895   0002C7                     U3RXB           equ	711	;# 
  7896   0002C7                     U3RXBL          equ	711	;# 
  7897   0002C9                     U3TXB           equ	713	;# 
  7898   0002C9                     U3TXBL          equ	713	;# 
  7899   0002CB                     U3P1            equ	715	;# 
  7900   0002CB                     U3P1L           equ	715	;# 
  7901   0002CD                     U3P2            equ	717	;# 
  7902   0002CD                     U3P2L           equ	717	;# 
  7903   0002CF                     U3P3            equ	719	;# 
  7904   0002CF                     U3P3L           equ	719	;# 
  7905   0002D1                     U3CON0          equ	721	;# 
  7906   0002D2                     U3CON1          equ	722	;# 
  7907   0002D3                     U3CON2          equ	723	;# 
  7908   0002D4                     U3BRG           equ	724	;# 
  7909   0002D4                     U3BRGL          equ	724	;# 
  7910   0002D5                     U3BRGH          equ	725	;# 
  7911   0002D6                     U3FIFO          equ	726	;# 
  7912   0002D7                     U3UIR           equ	727	;# 
  7913   0002D8                     U3ERRIR         equ	728	;# 
  7914   0002D9                     U3ERRIE         equ	729	;# 
  7915   0002DA                     U4RXB           equ	730	;# 
  7916   0002DA                     U4RXBL          equ	730	;# 
  7917   0002DC                     U4TXB           equ	732	;# 
  7918   0002DC                     U4TXBL          equ	732	;# 
  7919   0002DE                     U4P1            equ	734	;# 
  7920   0002DE                     U4P1L           equ	734	;# 
  7921   0002E0                     U4P2            equ	736	;# 
  7922   0002E0                     U4P2L           equ	736	;# 
  7923   0002E2                     U4P3            equ	738	;# 
  7924   0002E2                     U4P3L           equ	738	;# 
  7925   0002E4                     U4CON0          equ	740	;# 
  7926   0002E5                     U4CON1          equ	741	;# 
  7927   0002E6                     U4CON2          equ	742	;# 
  7928   0002E7                     U4BRG           equ	743	;# 
  7929   0002E7                     U4BRGL          equ	743	;# 
  7930   0002E8                     U4BRGH          equ	744	;# 
  7931   0002E9                     U4FIFO          equ	745	;# 
  7932   0002EA                     U4UIR           equ	746	;# 
  7933   0002EB                     U4ERRIR         equ	747	;# 
  7934   0002EC                     U4ERRIE         equ	748	;# 
  7935   0002ED                     U5RXB           equ	749	;# 
  7936   0002ED                     U5RXBL          equ	749	;# 
  7937   0002EF                     U5TXB           equ	751	;# 
  7938   0002EF                     U5TXBL          equ	751	;# 
  7939   0002F1                     U5P1            equ	753	;# 
  7940   0002F1                     U5P1L           equ	753	;# 
  7941   0002F3                     U5P2            equ	755	;# 
  7942   0002F3                     U5P2L           equ	755	;# 
  7943   0002F5                     U5P3            equ	757	;# 
  7944   0002F5                     U5P3L           equ	757	;# 
  7945   0002F7                     U5CON0          equ	759	;# 
  7946   0002F8                     U5CON1          equ	760	;# 
  7947   0002F9                     U5CON2          equ	761	;# 
  7948   0002FA                     U5BRG           equ	762	;# 
  7949   0002FA                     U5BRGL          equ	762	;# 
  7950   0002FB                     U5BRGH          equ	763	;# 
  7951   0002FC                     U5FIFO          equ	764	;# 
  7952   0002FD                     U5UIR           equ	765	;# 
  7953   0002FE                     U5ERRIR         equ	766	;# 
  7954   0002FF                     U5ERRIE         equ	767	;# 
  7955   000300                     SMT1TMR         equ	768	;# 
  7956   000300                     SMT1TMRL        equ	768	;# 
  7957   000301                     SMT1TMRH        equ	769	;# 
  7958   000302                     SMT1TMRU        equ	770	;# 
  7959   000303                     SMT1CPR         equ	771	;# 
  7960   000303                     SMT1CPRL        equ	771	;# 
  7961   000304                     SMT1CPRH        equ	772	;# 
  7962   000305                     SMT1CPRU        equ	773	;# 
  7963   000306                     SMT1CPW         equ	774	;# 
  7964   000306                     SMT1CPWL        equ	774	;# 
  7965   000307                     SMT1CPWH        equ	775	;# 
  7966   000308                     SMT1CPWU        equ	776	;# 
  7967   000309                     SMT1PR          equ	777	;# 
  7968   000309                     SMT1PRL         equ	777	;# 
  7969   00030A                     SMT1PRH         equ	778	;# 
  7970   00030B                     SMT1PRU         equ	779	;# 
  7971   00030C                     SMT1CON0        equ	780	;# 
  7972   00030D                     SMT1CON1        equ	781	;# 
  7973   00030E                     SMT1STAT        equ	782	;# 
  7974   00030F                     SMT1CLK         equ	783	;# 
  7975   000310                     SMT1SIG         equ	784	;# 
  7976   000311                     SMT1WIN         equ	785	;# 
  7977   000318                     TMR0L           equ	792	;# 
  7978   000318                     TMR0            equ	792	;# 
  7979   000319                     TMR0H           equ	793	;# 
  7980   000319                     PR0             equ	793	;# 
  7981   00031A                     T0CON0          equ	794	;# 
  7982   00031B                     T0CON1          equ	795	;# 
  7983   00031C                     TMR1            equ	796	;# 
  7984   00031C                     TMR1L           equ	796	;# 
  7985   00031D                     TMR1H           equ	797	;# 
  7986   00031E                     T1CON           equ	798	;# 
  7987   00031E                     TMR1CON         equ	798	;# 
  7988   00031F                     T1GCON          equ	799	;# 
  7989   00031F                     TMR1GCON        equ	799	;# 
  7990   000320                     T1GATE          equ	800	;# 
  7991   000320                     TMR1GATE        equ	800	;# 
  7992   000321                     T1CLK           equ	801	;# 
  7993   000321                     TMR1CLK         equ	801	;# 
  7994   000321                     PR1             equ	801	;# 
  7995   000322                     T2TMR           equ	802	;# 
  7996   000322                     TMR2            equ	802	;# 
  7997   000323                     T2PR            equ	803	;# 
  7998   000323                     PR2             equ	803	;# 
  7999   000324                     T2CON           equ	804	;# 
  8000   000325                     T2HLT           equ	805	;# 
  8001   000326                     T2CLKCON        equ	806	;# 
  8002   000326                     T2CLK           equ	806	;# 
  8003   000327                     T2RST           equ	807	;# 
  8004   000328                     TMR3            equ	808	;# 
  8005   000328                     TMR3L           equ	808	;# 
  8006   000329                     TMR3H           equ	809	;# 
  8007   00032A                     T3CON           equ	810	;# 
  8008   00032A                     TMR3CON         equ	810	;# 
  8009   00032B                     T3GCON          equ	811	;# 
  8010   00032B                     TMR3GCON        equ	811	;# 
  8011   00032C                     T3GATE          equ	812	;# 
  8012   00032C                     TMR3GATE        equ	812	;# 
  8013   00032D                     T3CLK           equ	813	;# 
  8014   00032D                     TMR3CLK         equ	813	;# 
  8015   00032D                     PR3             equ	813	;# 
  8016   00032E                     T4TMR           equ	814	;# 
  8017   00032E                     TMR4            equ	814	;# 
  8018   00032F                     T4PR            equ	815	;# 
  8019   00032F                     PR4             equ	815	;# 
  8020   000330                     T4CON           equ	816	;# 
  8021   000331                     T4HLT           equ	817	;# 
  8022   000332                     T4CLKCON        equ	818	;# 
  8023   000332                     T4CLK           equ	818	;# 
  8024   000333                     T4RST           equ	819	;# 
  8025   000334                     TMR5            equ	820	;# 
  8026   000334                     TMR5L           equ	820	;# 
  8027   000335                     TMR5H           equ	821	;# 
  8028   000336                     T5CON           equ	822	;# 
  8029   000336                     TMR5CON         equ	822	;# 
  8030   000337                     T5GCON          equ	823	;# 
  8031   000337                     TMR5GCON        equ	823	;# 
  8032   000338                     T5GATE          equ	824	;# 
  8033   000338                     TMR5GATE        equ	824	;# 
  8034   000339                     T5CLK           equ	825	;# 
  8035   000339                     TMR5CLK         equ	825	;# 
  8036   000339                     PR5             equ	825	;# 
  8037   00033A                     T6TMR           equ	826	;# 
  8038   00033A                     TMR6            equ	826	;# 
  8039   00033B                     T6PR            equ	827	;# 
  8040   00033B                     PR6             equ	827	;# 
  8041   00033C                     T6CON           equ	828	;# 
  8042   00033D                     T6HLT           equ	829	;# 
  8043   00033E                     T6CLKCON        equ	830	;# 
  8044   00033E                     T6CLK           equ	830	;# 
  8045   00033F                     T6RST           equ	831	;# 
  8046   000340                     CCPR1           equ	832	;# 
  8047   000340                     CCPR1L          equ	832	;# 
  8048   000341                     CCPR1H          equ	833	;# 
  8049   000342                     CCP1CON         equ	834	;# 
  8050   000343                     CCP1CAP         equ	835	;# 
  8051   000344                     CCPR2           equ	836	;# 
  8052   000344                     CCPR2L          equ	836	;# 
  8053   000345                     CCPR2H          equ	837	;# 
  8054   000346                     CCP2CON         equ	838	;# 
  8055   000347                     CCP2CAP         equ	839	;# 
  8056   000348                     CCPR3           equ	840	;# 
  8057   000348                     CCPR3L          equ	840	;# 
  8058   000349                     CCPR3H          equ	841	;# 
  8059   00034A                     CCP3CON         equ	842	;# 
  8060   00034B                     CCP3CAP         equ	843	;# 
  8061   00034C                     CCPTMRS0        equ	844	;# 
  8062   00034F                     CRCDATA         equ	847	;# 
  8063   00034F                     CRCDATAL        equ	847	;# 
  8064   000350                     CRCDATAH        equ	848	;# 
  8065   000351                     CRCDATAU        equ	849	;# 
  8066   000352                     CRCDATAT        equ	850	;# 
  8067   000353                     CRCOUT          equ	851	;# 
  8068   000353                     CRCSHFT         equ	851	;# 
  8069   000353                     CRCXOR          equ	851	;# 
  8070   000353                     CRCOUTL         equ	851	;# 
  8071   000353                     CRCSHFTL        equ	851	;# 
  8072   000353                     CRCSHIFTL       equ	851	;# 
  8073   000353                     CRCXORL         equ	851	;# 
  8074   000354                     CRCOUTH         equ	852	;# 
  8075   000354                     CRCSHFTH        equ	852	;# 
  8076   000354                     CRCSHIFTH       equ	852	;# 
  8077   000354                     CRCXORH         equ	852	;# 
  8078   000355                     CRCOUTU         equ	853	;# 
  8079   000355                     CRCSHFTU        equ	853	;# 
  8080   000355                     CRCSHIFTU       equ	853	;# 
  8081   000355                     CRCXORU         equ	853	;# 
  8082   000356                     CRCOUTT         equ	854	;# 
  8083   000356                     CRCSHFTT        equ	854	;# 
  8084   000356                     CRCSHIFTT       equ	854	;# 
  8085   000356                     CRCXORT         equ	854	;# 
  8086   000357                     CRCCON0         equ	855	;# 
  8087   000358                     CRCCON1         equ	856	;# 
  8088   000359                     CRCCON2         equ	857	;# 
  8089   00035A                     SCANLADR        equ	858	;# 
  8090   00035A                     SCANLADRL       equ	858	;# 
  8091   00035B                     SCANLADRH       equ	859	;# 
  8092   00035C                     SCANLADRU       equ	860	;# 
  8093   00035D                     SCANHADR        equ	861	;# 
  8094   00035D                     SCANHADRL       equ	861	;# 
  8095   00035E                     SCANHADRH       equ	862	;# 
  8096   00035F                     SCANHADRU       equ	863	;# 
  8097   000360                     SCANCON0        equ	864	;# 
  8098   000361                     SCANTRIG        equ	865	;# 
  8099   000362                     IPR0            equ	866	;# 
  8100   000363                     IPR1            equ	867	;# 
  8101   000364                     IPR2            equ	868	;# 
  8102   000365                     IPR3            equ	869	;# 
  8103   000366                     IPR4            equ	870	;# 
  8104   000367                     IPR5            equ	871	;# 
  8105   000368                     IPR6            equ	872	;# 
  8106   000369                     IPR7            equ	873	;# 
  8107   00036A                     IPR8            equ	874	;# 
  8108   00036B                     IPR9            equ	875	;# 
  8109   00036C                     IPR10           equ	876	;# 
  8110   00036D                     IPR11           equ	877	;# 
  8111   00036E                     IPR12           equ	878	;# 
  8112   00036F                     IPR13           equ	879	;# 
  8113   000370                     IPR14           equ	880	;# 
  8114   000371                     IPR15           equ	881	;# 
  8115   000373                     STATUS_CSHAD    equ	883	;# 
  8116   000374                     WREG_CSHAD      equ	884	;# 
  8117   000375                     BSR_CSHAD       equ	885	;# 
  8118   000376                     SHADCON         equ	886	;# 
  8119   000377                     STATUS_SHAD     equ	887	;# 
  8120   000378                     WREG_SHAD       equ	888	;# 
  8121   000379                     BSR_SHAD        equ	889	;# 
  8122   00037A                     PCLATH_SHAD     equ	890	;# 
  8123   00037B                     PCLATU_SHAD     equ	891	;# 
  8124   00037C                     FSR0SH          equ	892	;# 
  8125   00037C                     FSR0L_SHAD      equ	892	;# 
  8126   00037D                     FSR0H_SHAD      equ	893	;# 
  8127   00037E                     FSR1SH          equ	894	;# 
  8128   00037E                     FSR1L_SHAD      equ	894	;# 
  8129   00037F                     FSR1H_SHAD      equ	895	;# 
  8130   000380                     FSR2SH          equ	896	;# 
  8131   000380                     FSR2L_SHAD      equ	896	;# 
  8132   000381                     FSR2H_SHAD      equ	897	;# 
  8133   000382                     PRODSH          equ	898	;# 
  8134   000382                     PRODL_SHAD      equ	898	;# 
  8135   000383                     PRODH_SHAD      equ	899	;# 
  8136   000387                     TU16ACON0       equ	903	;# 
  8137   000388                     TU16ACON1       equ	904	;# 
  8138   000389                     TU16AHLT        equ	905	;# 
  8139   00038A                     TU16APS         equ	906	;# 
  8140   00038B                     TU16ATMR        equ	907	;# 
  8141   00038B                     TU16ACR         equ	907	;# 
  8142   00038B                     TU16ATMRL       equ	907	;# 
  8143   00038B                     TU16ACRL        equ	907	;# 
  8144   00038C                     TU16ATMRH       equ	908	;# 
  8145   00038C                     TU16ACRH        equ	908	;# 
  8146   00038D                     TU16APR         equ	909	;# 
  8147   00038D                     TU16APRL        equ	909	;# 
  8148   00038E                     TU16APRH        equ	910	;# 
  8149   00038F                     TU16ACLK        equ	911	;# 
  8150   000390                     TU16AERS        equ	912	;# 
  8151   000393                     TU16BCON0       equ	915	;# 
  8152   000394                     TU16BCON1       equ	916	;# 
  8153   000395                     TU16BHLT        equ	917	;# 
  8154   000396                     TU16BPS         equ	918	;# 
  8155   000397                     TU16BTMR        equ	919	;# 
  8156   000397                     TU16BCR         equ	919	;# 
  8157   000397                     TU16BTMRL       equ	919	;# 
  8158   000397                     TU16BCRL        equ	919	;# 
  8159   000398                     TU16BTMRH       equ	920	;# 
  8160   000398                     TU16BCRH        equ	920	;# 
  8161   000399                     TU16BPR         equ	921	;# 
  8162   000399                     TU16BPRL        equ	921	;# 
  8163   00039A                     TU16BPRH        equ	922	;# 
  8164   00039B                     TU16BCLK        equ	923	;# 
  8165   00039C                     TU16BERS        equ	924	;# 
  8166   0003BB                     TUCHAIN         equ	955	;# 
  8167   0003BC                     CWG1CLK         equ	956	;# 
  8168   0003BC                     CWG1CLKCON      equ	956	;# 
  8169   0003BD                     CWG1ISM         equ	957	;# 
  8170   0003BE                     CWG1DBR         equ	958	;# 
  8171   0003BF                     CWG1DBF         equ	959	;# 
  8172   0003C0                     CWG1CON0        equ	960	;# 
  8173   0003C1                     CWG1CON1        equ	961	;# 
  8174   0003C2                     CWG1AS0         equ	962	;# 
  8175   0003C3                     CWG1AS1         equ	963	;# 
  8176   0003C4                     CWG1STR         equ	964	;# 
  8177   0003C5                     CWG2CLK         equ	965	;# 
  8178   0003C5                     CWG2CLKCON      equ	965	;# 
  8179   0003C6                     CWG2ISM         equ	966	;# 
  8180   0003C7                     CWG2DBR         equ	967	;# 
  8181   0003C8                     CWG2DBF         equ	968	;# 
  8182   0003C9                     CWG2CON0        equ	969	;# 
  8183   0003CA                     CWG2CON1        equ	970	;# 
  8184   0003CB                     CWG2AS0         equ	971	;# 
  8185   0003CC                     CWG2AS1         equ	972	;# 
  8186   0003CD                     CWG2STR         equ	973	;# 
  8187   0003CE                     CWG3CLK         equ	974	;# 
  8188   0003CE                     CWG3CLKCON      equ	974	;# 
  8189   0003CF                     CWG3ISM         equ	975	;# 
  8190   0003D0                     CWG3DBR         equ	976	;# 
  8191   0003D1                     CWG3DBF         equ	977	;# 
  8192   0003D2                     CWG3CON0        equ	978	;# 
  8193   0003D3                     CWG3CON1        equ	979	;# 
  8194   0003D4                     CWG3AS0         equ	980	;# 
  8195   0003D5                     CWG3AS1         equ	981	;# 
  8196   0003D6                     CWG3STR         equ	982	;# 
  8197   0003D7                     FVRCON          equ	983	;# 
  8198   0003D8                     ADCPCON         equ	984	;# 
  8199   0003D8                     ADCP            equ	984	;# 
  8200   0003D9                     ADLTH           equ	985	;# 
  8201   0003D9                     ADLTHL          equ	985	;# 
  8202   0003DA                     ADLTHH          equ	986	;# 
  8203   0003DB                     ADUTH           equ	987	;# 
  8204   0003DB                     ADUTHL          equ	987	;# 
  8205   0003DC                     ADUTHH          equ	988	;# 
  8206   0003DD                     ADERR           equ	989	;# 
  8207   0003DD                     ADERRL          equ	989	;# 
  8208   0003DE                     ADERRH          equ	990	;# 
  8209   0003DF                     ADSTPT          equ	991	;# 
  8210   0003DF                     ADSTPTL         equ	991	;# 
  8211   0003E0                     ADSTPTH         equ	992	;# 
  8212   0003E1                     ADFLTR          equ	993	;# 
  8213   0003E1                     ADFLTRL         equ	993	;# 
  8214   0003E2                     ADFLTRH         equ	994	;# 
  8215   0003E3                     ADACC           equ	995	;# 
  8216   0003E3                     ADACCL          equ	995	;# 
  8217   0003E4                     ADACCH          equ	996	;# 
  8218   0003E5                     ADACCU          equ	997	;# 
  8219   0003E6                     ADCNT           equ	998	;# 
  8220   0003E7                     ADRPT           equ	999	;# 
  8221   0003E8                     ADPREV          equ	1000	;# 
  8222   0003E8                     ADPREVL         equ	1000	;# 
  8223   0003E9                     ADPREVH         equ	1001	;# 
  8224   0003EA                     ADRES           equ	1002	;# 
  8225   0003EA                     ADRESL          equ	1002	;# 
  8226   0003EB                     ADRESH          equ	1003	;# 
  8227   0003EC                     ADPCH           equ	1004	;# 
  8228   0003EE                     ADACQ           equ	1006	;# 
  8229   0003EE                     ADACQL          equ	1006	;# 
  8230   0003EF                     ADACQH          equ	1007	;# 
  8231   0003F0                     ADCAP           equ	1008	;# 
  8232   0003F1                     ADPRE           equ	1009	;# 
  8233   0003F1                     ADPREL          equ	1009	;# 
  8234   0003F2                     ADPREH          equ	1010	;# 
  8235   0003F3                     ADCON0          equ	1011	;# 
  8236   0003F4                     ADCON1          equ	1012	;# 
  8237   0003F5                     ADCON2          equ	1013	;# 
  8238   0003F6                     ADCON3          equ	1014	;# 
  8239   0003F7                     ADSTAT          equ	1015	;# 
  8240   0003F8                     ADREF           equ	1016	;# 
  8241   0003F9                     ADACT           equ	1017	;# 
  8242   0003FA                     ADCLK           equ	1018	;# 
  8243   0003FB                     ADCTX           equ	1019	;# 
  8244   0003FC                     ADCSEL1         equ	1020	;# 
  8245   0003FD                     ADCSEL2         equ	1021	;# 
  8246   0003FE                     ADCSEL3         equ	1022	;# 
  8247   0003FF                     ADCSEL4         equ	1023	;# 
  8248   000400                     ANSELA          equ	1024	;# 
  8249   000401                     WPUA            equ	1025	;# 
  8250   000402                     ODCONA          equ	1026	;# 
  8251   000403                     SLRCONA         equ	1027	;# 
  8252   000404                     INLVLA          equ	1028	;# 
  8253   000405                     IOCAP           equ	1029	;# 
  8254   000406                     IOCAN           equ	1030	;# 
  8255   000407                     IOCAF           equ	1031	;# 
  8256   000408                     ANSELB          equ	1032	;# 
  8257   000409                     WPUB            equ	1033	;# 
  8258   00040A                     ODCONB          equ	1034	;# 
  8259   00040B                     SLRCONB         equ	1035	;# 
  8260   00040C                     INLVLB          equ	1036	;# 
  8261   00040D                     IOCBP           equ	1037	;# 
  8262   00040E                     IOCBN           equ	1038	;# 
  8263   00040F                     IOCBF           equ	1039	;# 
  8264   000410                     ANSELC          equ	1040	;# 
  8265   000411                     WPUC            equ	1041	;# 
  8266   000412                     ODCONC          equ	1042	;# 
  8267   000413                     SLRCONC         equ	1043	;# 
  8268   000414                     INLVLC          equ	1044	;# 
  8269   000415                     IOCCP           equ	1045	;# 
  8270   000416                     IOCCN           equ	1046	;# 
  8271   000417                     IOCCF           equ	1047	;# 
  8272   000421                     WPUE            equ	1057	;# 
  8273   000424                     INLVLE          equ	1060	;# 
  8274   000425                     IOCEP           equ	1061	;# 
  8275   000426                     IOCEN           equ	1062	;# 
  8276   000427                     IOCEF           equ	1063	;# 
  8277   000440                     NCO1ACC         equ	1088	;# 
  8278   000440                     NCO1ACCL        equ	1088	;# 
  8279   000441                     NCO1ACCH        equ	1089	;# 
  8280   000442                     NCO1ACCU        equ	1090	;# 
  8281   000443                     NCO1INC         equ	1091	;# 
  8282   000443                     NCO1INCL        equ	1091	;# 
  8283   000444                     NCO1INCH        equ	1092	;# 
  8284   000445                     NCO1INCU        equ	1093	;# 
  8285   000446                     NCO1CON         equ	1094	;# 
  8286   000447                     NCO1CLK         equ	1095	;# 
  8287   000448                     NCO2ACC         equ	1096	;# 
  8288   000448                     NCO2ACCL        equ	1096	;# 
  8289   000449                     NCO2ACCH        equ	1097	;# 
  8290   00044A                     NCO2ACCU        equ	1098	;# 
  8291   00044B                     NCO2INC         equ	1099	;# 
  8292   00044B                     NCO2INCL        equ	1099	;# 
  8293   00044C                     NCO2INCH        equ	1100	;# 
  8294   00044D                     NCO2INCU        equ	1101	;# 
  8295   00044E                     NCO2CON         equ	1102	;# 
  8296   00044F                     NCO2CLK         equ	1103	;# 
  8297   000450                     NCO3ACC         equ	1104	;# 
  8298   000450                     NCO3ACCL        equ	1104	;# 
  8299   000451                     NCO3ACCH        equ	1105	;# 
  8300   000452                     NCO3ACCU        equ	1106	;# 
  8301   000453                     NCO3INC         equ	1107	;# 
  8302   000453                     NCO3INCL        equ	1107	;# 
  8303   000454                     NCO3INCH        equ	1108	;# 
  8304   000455                     NCO3INCU        equ	1109	;# 
  8305   000456                     NCO3CON         equ	1110	;# 
  8306   000457                     NCO3CLK         equ	1111	;# 
  8307   000458                     FSCMCON         equ	1112	;# 
  8308   000459                     IVTLOCK         equ	1113	;# 
  8309   00045A                     IVTAD           equ	1114	;# 
  8310   00045A                     IVTADL          equ	1114	;# 
  8311   00045B                     IVTADH          equ	1115	;# 
  8312   00045C                     IVTADU          equ	1116	;# 
  8313   00045D                     IVTBASE         equ	1117	;# 
  8314   00045D                     IVTBASEL        equ	1117	;# 
  8315   00045E                     IVTBASEH        equ	1118	;# 
  8316   00045F                     IVTBASEU        equ	1119	;# 
  8317   000460                     PWM1ERS         equ	1120	;# 
  8318   000461                     PWM1CLK         equ	1121	;# 
  8319   000462                     PWM1LDS         equ	1122	;# 
  8320   000463                     PWM1PR          equ	1123	;# 
  8321   000463                     PWM1PRL         equ	1123	;# 
  8322   000464                     PWM1PRH         equ	1124	;# 
  8323   000465                     PWM1CPRE        equ	1125	;# 
  8324   000466                     PWM1PIPOS       equ	1126	;# 
  8325   000467                     PWM1GIR         equ	1127	;# 
  8326   000468                     PWM1GIE         equ	1128	;# 
  8327   000469                     PWM1CON         equ	1129	;# 
  8328   00046A                     PWM1S1CFG       equ	1130	;# 
  8329   00046B                     PWM1S1P1        equ	1131	;# 
  8330   00046B                     PWM1S1P1L       equ	1131	;# 
  8331   00046C                     PWM1S1P1H       equ	1132	;# 
  8332   00046D                     PWM1S1P2        equ	1133	;# 
  8333   00046D                     PWM1S1P2L       equ	1133	;# 
  8334   00046E                     PWM1S1P2H       equ	1134	;# 
  8335   00046F                     PWM2ERS         equ	1135	;# 
  8336   000470                     PWM2CLK         equ	1136	;# 
  8337   000471                     PWM2LDS         equ	1137	;# 
  8338   000472                     PWM2PR          equ	1138	;# 
  8339   000472                     PWM2PRL         equ	1138	;# 
  8340   000473                     PWM2PRH         equ	1139	;# 
  8341   000474                     PWM2CPRE        equ	1140	;# 
  8342   000475                     PWM2PIPOS       equ	1141	;# 
  8343   000476                     PWM2GIR         equ	1142	;# 
  8344   000477                     PWM2GIE         equ	1143	;# 
  8345   000478                     PWM2CON         equ	1144	;# 
  8346   000479                     PWM2S1CFG       equ	1145	;# 
  8347   00047A                     PWM2S1P1        equ	1146	;# 
  8348   00047A                     PWM2S1P1L       equ	1146	;# 
  8349   00047B                     PWM2S1P1H       equ	1147	;# 
  8350   00047C                     PWM2S1P2        equ	1148	;# 
  8351   00047C                     PWM2S1P2L       equ	1148	;# 
  8352   00047D                     PWM2S1P2H       equ	1149	;# 
  8353   00047E                     PWM3ERS         equ	1150	;# 
  8354   00047F                     PWM3CLK         equ	1151	;# 
  8355   000480                     PWM3LDS         equ	1152	;# 
  8356   000481                     PWM3PR          equ	1153	;# 
  8357   000481                     PWM3PRL         equ	1153	;# 
  8358   000482                     PWM3PRH         equ	1154	;# 
  8359   000483                     PWM3CPRE        equ	1155	;# 
  8360   000484                     PWM3PIPOS       equ	1156	;# 
  8361   000485                     PWM3GIR         equ	1157	;# 
  8362   000486                     PWM3GIE         equ	1158	;# 
  8363   000487                     PWM3CON         equ	1159	;# 
  8364   000488                     PWM3S1CFG       equ	1160	;# 
  8365   000489                     PWM3S1P1        equ	1161	;# 
  8366   000489                     PWM3S1P1L       equ	1161	;# 
  8367   00048A                     PWM3S1P1H       equ	1162	;# 
  8368   00048B                     PWM3S1P2        equ	1163	;# 
  8369   00048B                     PWM3S1P2L       equ	1163	;# 
  8370   00048C                     PWM3S1P2H       equ	1164	;# 
  8371   00048D                     PWM4ERS         equ	1165	;# 
  8372   00048E                     PWM4CLK         equ	1166	;# 
  8373   00048F                     PWM4LDS         equ	1167	;# 
  8374   000490                     PWM4PR          equ	1168	;# 
  8375   000490                     PWM4PRL         equ	1168	;# 
  8376   000491                     PWM4PRH         equ	1169	;# 
  8377   000492                     PWM4CPRE        equ	1170	;# 
  8378   000493                     PWM4PIPOS       equ	1171	;# 
  8379   000494                     PWM4GIR         equ	1172	;# 
  8380   000495                     PWM4GIE         equ	1173	;# 
  8381   000496                     PWM4CON         equ	1174	;# 
  8382   000497                     PWM4S1CFG       equ	1175	;# 
  8383   000498                     PWM4S1P1        equ	1176	;# 
  8384   000498                     PWM4S1P1L       equ	1176	;# 
  8385   000499                     PWM4S1P1H       equ	1177	;# 
  8386   00049A                     PWM4S1P2        equ	1178	;# 
  8387   00049A                     PWM4S1P2L       equ	1178	;# 
  8388   00049B                     PWM4S1P2H       equ	1179	;# 
  8389   00049C                     PWMLOAD         equ	1180	;# 
  8390   00049D                     PWMEN           equ	1181	;# 
  8391   00049E                     PIE0            equ	1182	;# 
  8392   00049F                     PIE1            equ	1183	;# 
  8393   0004A0                     PIE2            equ	1184	;# 
  8394   0004A1                     PIE3            equ	1185	;# 
  8395   0004A2                     PIE4            equ	1186	;# 
  8396   0004A3                     PIE5            equ	1187	;# 
  8397   0004A4                     PIE6            equ	1188	;# 
  8398   0004A5                     PIE7            equ	1189	;# 
  8399   0004A6                     PIE8            equ	1190	;# 
  8400   0004A7                     PIE9            equ	1191	;# 
  8401   0004A8                     PIE10           equ	1192	;# 
  8402   0004A9                     PIE11           equ	1193	;# 
  8403   0004AA                     PIE12           equ	1194	;# 
  8404   0004AB                     PIE13           equ	1195	;# 
  8405   0004AC                     PIE14           equ	1196	;# 
  8406   0004AD                     PIE15           equ	1197	;# 
  8407   0004AE                     PIR0            equ	1198	;# 
  8408   0004AF                     PIR1            equ	1199	;# 
  8409   0004B0                     PIR2            equ	1200	;# 
  8410   0004B1                     PIR3            equ	1201	;# 
  8411   0004B2                     PIR4            equ	1202	;# 
  8412   0004B3                     PIR5            equ	1203	;# 
  8413   0004B4                     PIR6            equ	1204	;# 
  8414   0004B5                     PIR7            equ	1205	;# 
  8415   0004B6                     PIR8            equ	1206	;# 
  8416   0004B7                     PIR9            equ	1207	;# 
  8417   0004B8                     PIR10           equ	1208	;# 
  8418   0004B9                     PIR11           equ	1209	;# 
  8419   0004BA                     PIR12           equ	1210	;# 
  8420   0004BB                     PIR13           equ	1211	;# 
  8421   0004BC                     PIR14           equ	1212	;# 
  8422   0004BD                     PIR15           equ	1213	;# 
  8423   0004BE                     LATA            equ	1214	;# 
  8424   0004BF                     LATB            equ	1215	;# 
  8425   0004C0                     LATC            equ	1216	;# 
  8426   0004C6                     TRISA           equ	1222	;# 
  8427   0004C7                     TRISB           equ	1223	;# 
  8428   0004C8                     TRISC           equ	1224	;# 
  8429   0004CA                     TRISE           equ	1226	;# 
  8430   0004CE                     PORTA           equ	1230	;# 
  8431   0004CF                     PORTB           equ	1231	;# 
  8432   0004D0                     PORTC           equ	1232	;# 
  8433   0004D2                     PORTE           equ	1234	;# 
  8434   0004D6                     INTCON0         equ	1238	;# 
  8435   0004D7                     INTCON1         equ	1239	;# 
  8436   0004D8                     STATUS          equ	1240	;# 
  8437   0004D9                     FSR2            equ	1241	;# 
  8438   0004D9                     FSR2L           equ	1241	;# 
  8439   0004DA                     FSR2H           equ	1242	;# 
  8440   0004DB                     PLUSW2          equ	1243	;# 
  8441   0004DC                     PREINC2         equ	1244	;# 
  8442   0004DD                     POSTDEC2        equ	1245	;# 
  8443   0004DE                     POSTINC2        equ	1246	;# 
  8444   0004DF                     INDF2           equ	1247	;# 
  8445   0004E0                     BSR             equ	1248	;# 
  8446   0004E1                     FSR1            equ	1249	;# 
  8447   0004E1                     FSR1L           equ	1249	;# 
  8448   0004E2                     FSR1H           equ	1250	;# 
  8449   0004E3                     PLUSW1          equ	1251	;# 
  8450   0004E4                     PREINC1         equ	1252	;# 
  8451   0004E5                     POSTDEC1        equ	1253	;# 
  8452   0004E6                     POSTINC1        equ	1254	;# 
  8453   0004E7                     INDF1           equ	1255	;# 
  8454   0004E8                     WREG            equ	1256	;# 
  8455   0004E9                     FSR0            equ	1257	;# 
  8456   0004E9                     FSR0L           equ	1257	;# 
  8457   0004EA                     FSR0H           equ	1258	;# 
  8458   0004EB                     PLUSW0          equ	1259	;# 
  8459   0004EC                     PREINC0         equ	1260	;# 
  8460   0004ED                     POSTDEC0        equ	1261	;# 
  8461   0004EE                     POSTINC0        equ	1262	;# 
  8462   0004EF                     INDF0           equ	1263	;# 
  8463   0004F0                     PCON0           equ	1264	;# 
  8464   0004F1                     PCON1           equ	1265	;# 
  8465   0004F2                     CPUDOZE         equ	1266	;# 
  8466   0004F3                     PROD            equ	1267	;# 
  8467   0004F3                     PRODL           equ	1267	;# 
  8468   0004F4                     PRODH           equ	1268	;# 
  8469   0004F5                     TABLAT          equ	1269	;# 
  8470   0004F6                     TBLPTR          equ	1270	;# 
  8471   0004F6                     TBLPTRL         equ	1270	;# 
  8472   0004F7                     TBLPTRH         equ	1271	;# 
  8473   0004F8                     TBLPTRU         equ	1272	;# 
  8474   0004F9                     PCLAT           equ	1273	;# 
  8475   0004F9                     PCL             equ	1273	;# 
  8476   0004FA                     PCLATH          equ	1274	;# 
  8477   0004FB                     PCLATU          equ	1275	;# 
  8478   0004FC                     STKPTR          equ	1276	;# 
  8479   0004FD                     TOS             equ	1277	;# 
  8480   0004FD                     TOSL            equ	1277	;# 
  8481   0004FE                     TOSH            equ	1278	;# 
  8482   0004FF                     TOSU            equ	1279	;# 
  8483                           
  8484                           	psect	eeprom_data
  8485   3803FF                     	org	1023	;# 
  8486   3803FF  00                 	db	0	;# 
  8487   000038                     BOOTREG         equ	56	;# 
  8488   000039                     CLKRCON         equ	57	;# 
  8489   00003A                     CLKRCLK         equ	58	;# 
  8490   000040                     NVMCON0         equ	64	;# 
  8491   000041                     NVMCON1         equ	65	;# 
  8492   000042                     NVMLOCK         equ	66	;# 
  8493   000043                     NVMADR          equ	67	;# 
  8494   000043                     NVMADRL         equ	67	;# 
  8495   000044                     NVMADRH         equ	68	;# 
  8496   000045                     NVMADRU         equ	69	;# 
  8497   000046                     NVMDAT          equ	70	;# 
  8498   000046                     NVMDATL         equ	70	;# 
  8499   000047                     NVMDATH         equ	71	;# 
  8500   000048                     VREGCON         equ	72	;# 
  8501   000049                     BORCON          equ	73	;# 
  8502   00004A                     HLVDCON0        equ	74	;# 
  8503   00004B                     HLVDCON1        equ	75	;# 
  8504   00004C                     ZCDCON          equ	76	;# 
  8505   000060                     PMD0            equ	96	;# 
  8506   000061                     PMD1            equ	97	;# 
  8507   000062                     PMD2            equ	98	;# 
  8508   000063                     PMD3            equ	99	;# 
  8509   000064                     PMD4            equ	100	;# 
  8510   000065                     PMD5            equ	101	;# 
  8511   000066                     PMD6            equ	102	;# 
  8512   000067                     PMD7            equ	103	;# 
  8513   000068                     PMD8            equ	104	;# 
  8514   00006A                     MD1CON0         equ	106	;# 
  8515   00006B                     MD1CON1         equ	107	;# 
  8516   00006C                     MD1SRC          equ	108	;# 
  8517   00006D                     MD1CARL         equ	109	;# 
  8518   00006E                     MD1CARH         equ	110	;# 
  8519   00006F                     CMOUT           equ	111	;# 
  8520   000070                     CM1CON0         equ	112	;# 
  8521   000071                     CM1CON1         equ	113	;# 
  8522   000072                     CM1NCH          equ	114	;# 
  8523   000073                     CM1PCH          equ	115	;# 
  8524   000074                     CM2CON0         equ	116	;# 
  8525   000075                     CM2CON1         equ	117	;# 
  8526   000076                     CM2NCH          equ	118	;# 
  8527   000077                     CM2PCH          equ	119	;# 
  8528   000078                     WDTCON0         equ	120	;# 
  8529   000079                     WDTCON1         equ	121	;# 
  8530   00007A                     WDTPSL          equ	122	;# 
  8531   00007B                     WDTPSH          equ	123	;# 
  8532   00007C                     WDTTMR          equ	124	;# 
  8533   00007D                     DAC1DAT         equ	125	;# 
  8534   00007D                     DAC1DATL        equ	125	;# 
  8535   00007F                     DAC1CON         equ	127	;# 
  8536   000080                     SPI1RXB         equ	128	;# 
  8537   000081                     SPI1TXB         equ	129	;# 
  8538   000082                     SPI1TCNT        equ	130	;# 
  8539   000082                     SPI1TCNTL       equ	130	;# 
  8540   000083                     SPI1TCNTH       equ	131	;# 
  8541   000084                     SPI1CON0        equ	132	;# 
  8542   000085                     SPI1CON1        equ	133	;# 
  8543   000086                     SPI1CON2        equ	134	;# 
  8544   000087                     SPI1STATUS      equ	135	;# 
  8545   000088                     SPI1TWIDTH      equ	136	;# 
  8546   000089                     SPI1BAUD        equ	137	;# 
  8547   00008A                     SPI1INTF        equ	138	;# 
  8548   00008B                     SPI1INTE        equ	139	;# 
  8549   00008C                     SPI1CLK         equ	140	;# 
  8550   00008D                     SPI2RXB         equ	141	;# 
  8551   00008E                     SPI2TXB         equ	142	;# 
  8552   00008F                     SPI2TCNT        equ	143	;# 
  8553   00008F                     SPI2TCNTL       equ	143	;# 
  8554   000090                     SPI2TCNTH       equ	144	;# 
  8555   000091                     SPI2CON0        equ	145	;# 
  8556   000092                     SPI2CON1        equ	146	;# 
  8557   000093                     SPI2CON2        equ	147	;# 
  8558   000094                     SPI2STATUS      equ	148	;# 
  8559   000095                     SPI2TWIDTH      equ	149	;# 
  8560   000096                     SPI2BAUD        equ	150	;# 
  8561   000097                     SPI2INTF        equ	151	;# 
  8562   000098                     SPI2INTE        equ	152	;# 
  8563   000099                     SPI2CLK         equ	153	;# 
  8564   0000AC                     ACTCON          equ	172	;# 
  8565   0000AD                     OSCCON1         equ	173	;# 
  8566   0000AE                     OSCCON2         equ	174	;# 
  8567   0000AF                     OSCCON3         equ	175	;# 
  8568   0000B0                     OSCTUNE         equ	176	;# 
  8569   0000B1                     OSCFRQ          equ	177	;# 
  8570   0000B1                     OSCFREQ         equ	177	;# 
  8571   0000B2                     OSCSTAT         equ	178	;# 
  8572   0000B2                     OSCSTAT1        equ	178	;# 
  8573   0000B3                     OSCEN           equ	179	;# 
  8574   0000B4                     PRLOCK          equ	180	;# 
  8575   0000B5                     SCANPR          equ	181	;# 
  8576   0000B6                     DMA1PR          equ	182	;# 
  8577   0000B7                     DMA2PR          equ	183	;# 
  8578   0000B8                     DMA3PR          equ	184	;# 
  8579   0000B9                     DMA4PR          equ	185	;# 
  8580   0000BA                     DMA5PR          equ	186	;# 
  8581   0000BB                     DMA6PR          equ	187	;# 
  8582   0000BC                     DMA7PR          equ	188	;# 
  8583   0000BD                     DMA8PR          equ	189	;# 
  8584   0000BE                     MAINPR          equ	190	;# 
  8585   0000BF                     ISRPR           equ	191	;# 
  8586   0000D4                     CLCDATA         equ	212	;# 
  8587   0000D5                     CLCSELECT       equ	213	;# 
  8588   0000D6                     CLCnCON         equ	214	;# 
  8589   0000D7                     CLCnPOL         equ	215	;# 
  8590   0000D8                     CLCnSEL0        equ	216	;# 
  8591   0000D9                     CLCnSEL1        equ	217	;# 
  8592   0000DA                     CLCnSEL2        equ	218	;# 
  8593   0000DB                     CLCnSEL3        equ	219	;# 
  8594   0000DC                     CLCnGLS0        equ	220	;# 
  8595   0000DD                     CLCnGLS1        equ	221	;# 
  8596   0000DE                     CLCnGLS2        equ	222	;# 
  8597   0000DF                     CLCnGLS3        equ	223	;# 
  8598   0000E8                     DMASELECT       equ	232	;# 
  8599   0000E9                     DMAnBUF         equ	233	;# 
  8600   0000EA                     DMAnDCNT        equ	234	;# 
  8601   0000EA                     DMAnDCNTL       equ	234	;# 
  8602   0000EB                     DMAnDCNTH       equ	235	;# 
  8603   0000EC                     DMAnDPTR        equ	236	;# 
  8604   0000EC                     DMAnDPTRL       equ	236	;# 
  8605   0000ED                     DMAnDPTRH       equ	237	;# 
  8606   0000EE                     DMAnDSZ         equ	238	;# 
  8607   0000EE                     DMAnDSZL        equ	238	;# 
  8608   0000EF                     DMAnDSZH        equ	239	;# 
  8609   0000F0                     DMAnDSA         equ	240	;# 
  8610   0000F0                     DMAnDSAL        equ	240	;# 
  8611   0000F1                     DMAnDSAH        equ	241	;# 
  8612   0000F2                     DMAnSCNT        equ	242	;# 
  8613   0000F2                     DMAnSCNTL       equ	242	;# 
  8614   0000F3                     DMAnSCNTH       equ	243	;# 
  8615   0000F4                     DMAnSPTR        equ	244	;# 
  8616   0000F4                     DMAnSPTRL       equ	244	;# 
  8617   0000F5                     DMAnSPTRH       equ	245	;# 
  8618   0000F6                     DMAnSPTRU       equ	246	;# 
  8619   0000F7                     DMAnSSZ         equ	247	;# 
  8620   0000F7                     DMAnSSZL        equ	247	;# 
  8621   0000F8                     DMAnSSZH        equ	248	;# 
  8622   0000F9                     DMAnSSA         equ	249	;# 
  8623   0000F9                     DMAnSSAL        equ	249	;# 
  8624   0000FA                     DMAnSSAH        equ	250	;# 
  8625   0000FB                     DMAnSSAU        equ	251	;# 
  8626   0000FC                     DMAnCON0        equ	252	;# 
  8627   0000FD                     DMAnCON1        equ	253	;# 
  8628   0000FE                     DMAnAIRQ        equ	254	;# 
  8629   0000FF                     DMAnSIRQ        equ	255	;# 
  8630   000100                     C1CONL          equ	256	;# 
  8631   000101                     C1CONH          equ	257	;# 
  8632   000102                     C1CONU          equ	258	;# 
  8633   000103                     C1CONT          equ	259	;# 
  8634   000104                     C1NBTCFGL       equ	260	;# 
  8635   000105                     C1NBTCFGH       equ	261	;# 
  8636   000106                     C1NBTCFGU       equ	262	;# 
  8637   000107                     C1NBTCFGT       equ	263	;# 
  8638   000108                     C1DBTCFGL       equ	264	;# 
  8639   000109                     C1DBTCFGH       equ	265	;# 
  8640   00010A                     C1DBTCFGU       equ	266	;# 
  8641   00010B                     C1DBTCFGT       equ	267	;# 
  8642   00010C                     C1TDCL          equ	268	;# 
  8643   00010D                     C1TDCH          equ	269	;# 
  8644   00010E                     C1TDCU          equ	270	;# 
  8645   000110                     C1TBC           equ	272	;# 
  8646   000110                     C1TBCL          equ	272	;# 
  8647   000111                     C1TBCH          equ	273	;# 
  8648   000112                     C1TBCU          equ	274	;# 
  8649   000113                     C1TBCT          equ	275	;# 
  8650   000114                     C1TSCONL        equ	276	;# 
  8651   000115                     C1TSCONH        equ	277	;# 
  8652   000116                     C1TSCONU        equ	278	;# 
  8653   000117                     C1TSCONT        equ	279	;# 
  8654   000118                     C1VECL          equ	280	;# 
  8655   000119                     C1VECH          equ	281	;# 
  8656   00011A                     C1VECU          equ	282	;# 
  8657   00011B                     C1VECT          equ	283	;# 
  8658   00011C                     C1INTL          equ	284	;# 
  8659   00011D                     C1INTH          equ	285	;# 
  8660   00011E                     C1INTU          equ	286	;# 
  8661   00011F                     C1INTT          equ	287	;# 
  8662   000120                     C1RXIF          equ	288	;# 
  8663   000120                     C1RXIFL         equ	288	;# 
  8664   000121                     C1RXIFH         equ	289	;# 
  8665   000122                     C1RXIFU         equ	290	;# 
  8666   000123                     C1RXIFT         equ	291	;# 
  8667   000124                     C1TXIF          equ	292	;# 
  8668   000124                     C1TXIFL         equ	292	;# 
  8669   000125                     C1TXIFH         equ	293	;# 
  8670   000126                     C1TXIFU         equ	294	;# 
  8671   000127                     C1TXIFT         equ	295	;# 
  8672   000128                     C1RXOVIF        equ	296	;# 
  8673   000128                     C1RXOVIFL       equ	296	;# 
  8674   000129                     C1RXOVIFH       equ	297	;# 
  8675   00012A                     C1RXOVIFU       equ	298	;# 
  8676   00012B                     C1RXOVIFT       equ	299	;# 
  8677   00012C                     C1TXATIF        equ	300	;# 
  8678   00012C                     C1TXATIFL       equ	300	;# 
  8679   00012D                     C1TXATIFH       equ	301	;# 
  8680   00012E                     C1TXATIFU       equ	302	;# 
  8681   00012F                     C1TXATIFT       equ	303	;# 
  8682   000130                     C1TXREQ         equ	304	;# 
  8683   000130                     C1TXREQL        equ	304	;# 
  8684   000131                     C1TXREQH        equ	305	;# 
  8685   000132                     C1TXREQU        equ	306	;# 
  8686   000133                     C1TXREQT        equ	307	;# 
  8687   000134                     C1TRECL         equ	308	;# 
  8688   000135                     C1TRECH         equ	309	;# 
  8689   000136                     C1TRECU         equ	310	;# 
  8690   000137                     C1TRECT         equ	311	;# 
  8691   000138                     C1BDIAG0L       equ	312	;# 
  8692   000139                     C1BDIAG0H       equ	313	;# 
  8693   00013C                     C1BDIAG1L       equ	316	;# 
  8694   00013D                     C1BDIAG1H       equ	317	;# 
  8695   00013E                     C1BDIAG1U       equ	318	;# 
  8696   00013F                     C1BDIAG1T       equ	319	;# 
  8697   000140                     C1TEFCONL       equ	320	;# 
  8698   000141                     C1TEFCONH       equ	321	;# 
  8699   000142                     C1TEFCONU       equ	322	;# 
  8700   000143                     C1TEFCONT       equ	323	;# 
  8701   000144                     C1TEFSTAL       equ	324	;# 
  8702   000145                     C1TEFSTAH       equ	325	;# 
  8703   000146                     C1TEFSTAU       equ	326	;# 
  8704   000147                     C1TEFSTAT       equ	327	;# 
  8705   000148                     C1TEFUA         equ	328	;# 
  8706   000148                     C1TEFUAL        equ	328	;# 
  8707   000149                     C1TEFUAH        equ	329	;# 
  8708   00014A                     C1TEFUAU        equ	330	;# 
  8709   00014B                     C1TEFUAT        equ	331	;# 
  8710   00014C                     C1FIFOBA        equ	332	;# 
  8711   00014C                     C1FIFOBAL       equ	332	;# 
  8712   00014D                     C1FIFOBAH       equ	333	;# 
  8713   00014E                     C1FIFOBAU       equ	334	;# 
  8714   00014F                     C1FIFOBAT       equ	335	;# 
  8715   000150                     C1TXQCONL       equ	336	;# 
  8716   000151                     C1TXQCONH       equ	337	;# 
  8717   000152                     C1TXQCONU       equ	338	;# 
  8718   000153                     C1TXQCONT       equ	339	;# 
  8719   000154                     C1TXQSTAL       equ	340	;# 
  8720   000155                     C1TXQSTAH       equ	341	;# 
  8721   000156                     C1TXQSTAU       equ	342	;# 
  8722   000157                     C1TXQSTAT       equ	343	;# 
  8723   000158                     C1TXQUA         equ	344	;# 
  8724   000158                     C1TXQUAL        equ	344	;# 
  8725   000159                     C1TXQUAH        equ	345	;# 
  8726   00015A                     C1TXQUAU        equ	346	;# 
  8727   00015B                     C1TXQUAT        equ	347	;# 
  8728   00015C                     C1FIFOCON1      equ	348	;# 
  8729   00015C                     C1FIFOCON1L     equ	348	;# 
  8730   00015D                     C1FIFOCON1H     equ	349	;# 
  8731   00015E                     C1FIFOCON1U     equ	350	;# 
  8732   00015F                     C1FIFOCON1T     equ	351	;# 
  8733   000160                     C1FIFOSTA1      equ	352	;# 
  8734   000160                     C1FIFOSTA1L     equ	352	;# 
  8735   000161                     C1FIFOSTA1H     equ	353	;# 
  8736   000162                     C1FIFOSTA1U     equ	354	;# 
  8737   000163                     C1FIFOSTA1T     equ	355	;# 
  8738   000164                     C1FIFOUA1       equ	356	;# 
  8739   000164                     C1FIFOUA1L      equ	356	;# 
  8740   000165                     C1FIFOUA1H      equ	357	;# 
  8741   000166                     C1FIFOUA1U      equ	358	;# 
  8742   000167                     C1FIFOUA1T      equ	359	;# 
  8743   000168                     C1FIFOCON2      equ	360	;# 
  8744   000168                     C1FIFOCON2L     equ	360	;# 
  8745   000169                     C1FIFOCON2H     equ	361	;# 
  8746   00016A                     C1FIFOCON2U     equ	362	;# 
  8747   00016B                     C1FIFOCON2T     equ	363	;# 
  8748   00016C                     C1FIFOSTA2      equ	364	;# 
  8749   00016C                     C1FIFOSTA2L     equ	364	;# 
  8750   00016D                     C1FIFOSTA2H     equ	365	;# 
  8751   00016E                     C1FIFOSTA2U     equ	366	;# 
  8752   00016F                     C1FIFOSTA2T     equ	367	;# 
  8753   000170                     C1FIFOUA2       equ	368	;# 
  8754   000170                     C1FIFOUA2L      equ	368	;# 
  8755   000171                     C1FIFOUA2H      equ	369	;# 
  8756   000172                     C1FIFOUA2U      equ	370	;# 
  8757   000173                     C1FIFOUA2T      equ	371	;# 
  8758   000174                     C1FIFOCON3      equ	372	;# 
  8759   000174                     C1FIFOCON3L     equ	372	;# 
  8760   000175                     C1FIFOCON3H     equ	373	;# 
  8761   000176                     C1FIFOCON3U     equ	374	;# 
  8762   000177                     C1FIFOCON3T     equ	375	;# 
  8763   000178                     C1FIFOSTA3      equ	376	;# 
  8764   000178                     C1FIFOSTA3L     equ	376	;# 
  8765   000179                     C1FIFOSTA3H     equ	377	;# 
  8766   00017A                     C1FIFOSTA3U     equ	378	;# 
  8767   00017B                     C1FIFOSTA3T     equ	379	;# 
  8768   00017C                     C1FIFOUA3       equ	380	;# 
  8769   00017C                     C1FIFOUA3L      equ	380	;# 
  8770   00017D                     C1FIFOUA3H      equ	381	;# 
  8771   00017E                     C1FIFOUA3U      equ	382	;# 
  8772   00017F                     C1FIFOUA3T      equ	383	;# 
  8773   000180                     C1FLTCON0L      equ	384	;# 
  8774   000181                     C1FLTCON0H      equ	385	;# 
  8775   000182                     C1FLTCON0U      equ	386	;# 
  8776   000183                     C1FLTCON0T      equ	387	;# 
  8777   000184                     C1FLTCON1L      equ	388	;# 
  8778   000185                     C1FLTCON1H      equ	389	;# 
  8779   000186                     C1FLTCON1U      equ	390	;# 
  8780   000187                     C1FLTCON1T      equ	391	;# 
  8781   000188                     C1FLTCON2L      equ	392	;# 
  8782   000189                     C1FLTCON2H      equ	393	;# 
  8783   00018A                     C1FLTCON2U      equ	394	;# 
  8784   00018B                     C1FLTCON2T      equ	395	;# 
  8785   00018C                     C1FLTOBJ0       equ	396	;# 
  8786   00018C                     C1FLTOBJ0L      equ	396	;# 
  8787   00018D                     C1FLTOBJ0H      equ	397	;# 
  8788   00018E                     C1FLTOBJ0U      equ	398	;# 
  8789   00018F                     C1FLTOBJ0T      equ	399	;# 
  8790   000190                     C1MASK0         equ	400	;# 
  8791   000190                     C1MASK0L        equ	400	;# 
  8792   000191                     C1MASK0H        equ	401	;# 
  8793   000192                     C1MASK0U        equ	402	;# 
  8794   000193                     C1MASK0T        equ	403	;# 
  8795   000194                     C1FLTOBJ1       equ	404	;# 
  8796   000194                     C1FLTOBJ1L      equ	404	;# 
  8797   000195                     C1FLTOBJ1H      equ	405	;# 
  8798   000196                     C1FLTOBJ1U      equ	406	;# 
  8799   000197                     C1FLTOBJ1T      equ	407	;# 
  8800   000198                     C1MASK1         equ	408	;# 
  8801   000198                     C1MASK1L        equ	408	;# 
  8802   000199                     C1MASK1H        equ	409	;# 
  8803   00019A                     C1MASK1U        equ	410	;# 
  8804   00019B                     C1MASK1T        equ	411	;# 
  8805   00019C                     C1FLTOBJ2       equ	412	;# 
  8806   00019C                     C1FLTOBJ2L      equ	412	;# 
  8807   00019D                     C1FLTOBJ2H      equ	413	;# 
  8808   00019E                     C1FLTOBJ2U      equ	414	;# 
  8809   00019F                     C1FLTOBJ2T      equ	415	;# 
  8810   0001A0                     C1MASK2         equ	416	;# 
  8811   0001A0                     C1MASK2L        equ	416	;# 
  8812   0001A1                     C1MASK2H        equ	417	;# 
  8813   0001A2                     C1MASK2U        equ	418	;# 
  8814   0001A3                     C1MASK2T        equ	419	;# 
  8815   0001A4                     C1FLTOBJ3       equ	420	;# 
  8816   0001A4                     C1FLTOBJ3L      equ	420	;# 
  8817   0001A5                     C1FLTOBJ3H      equ	421	;# 
  8818   0001A6                     C1FLTOBJ3U      equ	422	;# 
  8819   0001A7                     C1FLTOBJ3T      equ	423	;# 
  8820   0001A8                     C1MASK3         equ	424	;# 
  8821   0001A8                     C1MASK3L        equ	424	;# 
  8822   0001A9                     C1MASK3H        equ	425	;# 
  8823   0001AA                     C1MASK3U        equ	426	;# 
  8824   0001AB                     C1MASK3T        equ	427	;# 
  8825   0001AC                     C1FLTOBJ4       equ	428	;# 
  8826   0001AC                     C1FLTOBJ4L      equ	428	;# 
  8827   0001AD                     C1FLTOBJ4H      equ	429	;# 
  8828   0001AE                     C1FLTOBJ4U      equ	430	;# 
  8829   0001AF                     C1FLTOBJ4T      equ	431	;# 
  8830   0001B0                     C1MASK4         equ	432	;# 
  8831   0001B0                     C1MASK4L        equ	432	;# 
  8832   0001B1                     C1MASK4H        equ	433	;# 
  8833   0001B2                     C1MASK4U        equ	434	;# 
  8834   0001B3                     C1MASK4T        equ	435	;# 
  8835   0001B4                     C1FLTOBJ5       equ	436	;# 
  8836   0001B4                     C1FLTOBJ5L      equ	436	;# 
  8837   0001B5                     C1FLTOBJ5H      equ	437	;# 
  8838   0001B6                     C1FLTOBJ5U      equ	438	;# 
  8839   0001B7                     C1FLTOBJ5T      equ	439	;# 
  8840   0001B8                     C1MASK5         equ	440	;# 
  8841   0001B8                     C1MASK5L        equ	440	;# 
  8842   0001B9                     C1MASK5H        equ	441	;# 
  8843   0001BA                     C1MASK5U        equ	442	;# 
  8844   0001BB                     C1MASK5T        equ	443	;# 
  8845   0001BC                     C1FLTOBJ6       equ	444	;# 
  8846   0001BC                     C1FLTOBJ6L      equ	444	;# 
  8847   0001BD                     C1FLTOBJ6H      equ	445	;# 
  8848   0001BE                     C1FLTOBJ6U      equ	446	;# 
  8849   0001BF                     C1FLTOBJ6T      equ	447	;# 
  8850   0001C0                     C1MASK6         equ	448	;# 
  8851   0001C0                     C1MASK6L        equ	448	;# 
  8852   0001C1                     C1MASK6H        equ	449	;# 
  8853   0001C2                     C1MASK6U        equ	450	;# 
  8854   0001C3                     C1MASK6T        equ	451	;# 
  8855   0001C4                     C1FLTOBJ7       equ	452	;# 
  8856   0001C4                     C1FLTOBJ7L      equ	452	;# 
  8857   0001C5                     C1FLTOBJ7H      equ	453	;# 
  8858   0001C6                     C1FLTOBJ7U      equ	454	;# 
  8859   0001C7                     C1FLTOBJ7T      equ	455	;# 
  8860   0001C8                     C1MASK7         equ	456	;# 
  8861   0001C8                     C1MASK7L        equ	456	;# 
  8862   0001C9                     C1MASK7H        equ	457	;# 
  8863   0001CA                     C1MASK7U        equ	458	;# 
  8864   0001CB                     C1MASK7T        equ	459	;# 
  8865   0001CC                     C1FLTOBJ8       equ	460	;# 
  8866   0001CC                     C1FLTOBJ8L      equ	460	;# 
  8867   0001CD                     C1FLTOBJ8H      equ	461	;# 
  8868   0001CE                     C1FLTOBJ8U      equ	462	;# 
  8869   0001CF                     C1FLTOBJ8T      equ	463	;# 
  8870   0001D0                     C1MASK8         equ	464	;# 
  8871   0001D0                     C1MASK8L        equ	464	;# 
  8872   0001D1                     C1MASK8H        equ	465	;# 
  8873   0001D2                     C1MASK8U        equ	466	;# 
  8874   0001D3                     C1MASK8T        equ	467	;# 
  8875   0001D4                     C1FLTOBJ9       equ	468	;# 
  8876   0001D4                     C1FLTOBJ9L      equ	468	;# 
  8877   0001D5                     C1FLTOBJ9H      equ	469	;# 
  8878   0001D6                     C1FLTOBJ9U      equ	470	;# 
  8879   0001D7                     C1FLTOBJ9T      equ	471	;# 
  8880   0001D8                     C1MASK9         equ	472	;# 
  8881   0001D8                     C1MASK9L        equ	472	;# 
  8882   0001D9                     C1MASK9H        equ	473	;# 
  8883   0001DA                     C1MASK9U        equ	474	;# 
  8884   0001DB                     C1MASK9T        equ	475	;# 
  8885   0001DC                     C1FLTOBJ10      equ	476	;# 
  8886   0001DC                     C1FLTOBJ10L     equ	476	;# 
  8887   0001DD                     C1FLTOBJ10H     equ	477	;# 
  8888   0001DE                     C1FLTOBJ10U     equ	478	;# 
  8889   0001DF                     C1FLTOBJ10T     equ	479	;# 
  8890   0001E0                     C1MASK10        equ	480	;# 
  8891   0001E0                     C1MASK10L       equ	480	;# 
  8892   0001E1                     C1MASK10H       equ	481	;# 
  8893   0001E2                     C1MASK10U       equ	482	;# 
  8894   0001E3                     C1MASK10T       equ	483	;# 
  8895   0001E4                     C1FLTOBJ11      equ	484	;# 
  8896   0001E4                     C1FLTOBJ11L     equ	484	;# 
  8897   0001E5                     C1FLTOBJ11H     equ	485	;# 
  8898   0001E6                     C1FLTOBJ11U     equ	486	;# 
  8899   0001E7                     C1FLTOBJ11T     equ	487	;# 
  8900   0001E8                     C1MASK11        equ	488	;# 
  8901   0001E8                     C1MASK11L       equ	488	;# 
  8902   0001E9                     C1MASK11H       equ	489	;# 
  8903   0001EA                     C1MASK11U       equ	490	;# 
  8904   0001EB                     C1MASK11T       equ	491	;# 
  8905   000200                     PPSLOCK         equ	512	;# 
  8906   000201                     RA0PPS          equ	513	;# 
  8907   000202                     RA1PPS          equ	514	;# 
  8908   000203                     RA2PPS          equ	515	;# 
  8909   000204                     RA3PPS          equ	516	;# 
  8910   000205                     RA4PPS          equ	517	;# 
  8911   000206                     RA5PPS          equ	518	;# 
  8912   000207                     RA6PPS          equ	519	;# 
  8913   000208                     RA7PPS          equ	520	;# 
  8914   000209                     RB0PPS          equ	521	;# 
  8915   00020A                     RB1PPS          equ	522	;# 
  8916   00020B                     RB2PPS          equ	523	;# 
  8917   00020C                     RB3PPS          equ	524	;# 
  8918   00020D                     RB4PPS          equ	525	;# 
  8919   00020E                     RB5PPS          equ	526	;# 
  8920   00020F                     RB6PPS          equ	527	;# 
  8921   000210                     RB7PPS          equ	528	;# 
  8922   000211                     RC0PPS          equ	529	;# 
  8923   000212                     RC1PPS          equ	530	;# 
  8924   000213                     RC2PPS          equ	531	;# 
  8925   000214                     RC3PPS          equ	532	;# 
  8926   000215                     RC4PPS          equ	533	;# 
  8927   000216                     RC5PPS          equ	534	;# 
  8928   000217                     RC6PPS          equ	535	;# 
  8929   000218                     RC7PPS          equ	536	;# 
  8930   00023D                     CANRXPPS        equ	573	;# 
  8931   00023E                     INT0PPS         equ	574	;# 
  8932   00023F                     INT1PPS         equ	575	;# 
  8933   000240                     INT2PPS         equ	576	;# 
  8934   000241                     T0CKIPPS        equ	577	;# 
  8935   000242                     T1CKIPPS        equ	578	;# 
  8936   000243                     T1GPPS          equ	579	;# 
  8937   000244                     T3CKIPPS        equ	580	;# 
  8938   000245                     T3GPPS          equ	581	;# 
  8939   000246                     T5CKIPPS        equ	582	;# 
  8940   000247                     T5GPPS          equ	583	;# 
  8941   000248                     T2INPPS         equ	584	;# 
  8942   000249                     T4INPPS         equ	585	;# 
  8943   00024A                     T6INPPS         equ	586	;# 
  8944   00024B                     TUIN0PPS        equ	587	;# 
  8945   00024C                     TUIN1PPS        equ	588	;# 
  8946   00024F                     CCP1PPS         equ	591	;# 
  8947   000250                     CCP2PPS         equ	592	;# 
  8948   000251                     CCP3PPS         equ	593	;# 
  8949   000253                     PWM1ERSPPS      equ	595	;# 
  8950   000254                     PWM2ERSPPS      equ	596	;# 
  8951   000255                     PWM3ERSPPS      equ	597	;# 
  8952   000256                     PWM4ERSPPS      equ	598	;# 
  8953   000257                     PWMIN0PPS       equ	599	;# 
  8954   000258                     PWMIN1PPS       equ	600	;# 
  8955   000259                     SMT1WINPPS      equ	601	;# 
  8956   00025A                     SMT1SIGPPS      equ	602	;# 
  8957   00025B                     CWG1PPS         equ	603	;# 
  8958   00025B                     CWG1INPPS       equ	603	;# 
  8959   00025C                     CWG2PPS         equ	604	;# 
  8960   00025C                     CWG2INPPS       equ	604	;# 
  8961   00025D                     CWG3PPS         equ	605	;# 
  8962   00025D                     CWG3INPPS       equ	605	;# 
  8963   00025E                     MD1CARLPPS      equ	606	;# 
  8964   00025E                     MDCARLPPS       equ	606	;# 
  8965   00025F                     MD1CARHPPS      equ	607	;# 
  8966   00025F                     MDCARHPPS       equ	607	;# 
  8967   000260                     MD1SRCPPS       equ	608	;# 
  8968   000260                     MDSRCPPS        equ	608	;# 
  8969   000261                     CLCIN0PPS       equ	609	;# 
  8970   000262                     CLCIN1PPS       equ	610	;# 
  8971   000263                     CLCIN2PPS       equ	611	;# 
  8972   000264                     CLCIN3PPS       equ	612	;# 
  8973   000265                     CLCIN4PPS       equ	613	;# 
  8974   000266                     CLCIN5PPS       equ	614	;# 
  8975   000267                     CLCIN6PPS       equ	615	;# 
  8976   000268                     CLCIN7PPS       equ	616	;# 
  8977   000269                     ADACTPPS        equ	617	;# 
  8978   00026A                     SPI1SCKPPS      equ	618	;# 
  8979   00026B                     SPI1SDIPPS      equ	619	;# 
  8980   00026C                     SPI1SSPPS       equ	620	;# 
  8981   00026D                     SPI2SCKPPS      equ	621	;# 
  8982   00026E                     SPI2SDIPPS      equ	622	;# 
  8983   00026F                     SPI2SSPPS       equ	623	;# 
  8984   000270                     I2C1SDAPPS      equ	624	;# 
  8985   000271                     I2C1SCLPPS      equ	625	;# 
  8986   000272                     U1RXPPS         equ	626	;# 
  8987   000273                     U1CTSPPS        equ	627	;# 
  8988   000274                     U2RXPPS         equ	628	;# 
  8989   000275                     U2CTSPPS        equ	629	;# 
  8990   000276                     U3RXPPS         equ	630	;# 
  8991   000277                     U3CTSPPS        equ	631	;# 
  8992   000278                     U4RXPPS         equ	632	;# 
  8993   000279                     U4CTSPPS        equ	633	;# 
  8994   00027A                     U5RXPPS         equ	634	;# 
  8995   00027B                     U5CTSPPS        equ	635	;# 
  8996   000286                     RC4I2C          equ	646	;# 
  8997   000287                     RC3I2C          equ	647	;# 
  8998   000288                     RB2I2C          equ	648	;# 
  8999   000289                     RB1I2C          equ	649	;# 
  9000   00028A                     I2C1RXB         equ	650	;# 
  9001   00028B                     I2C1TXB         equ	651	;# 
  9002   00028C                     I2C1CNTL        equ	652	;# 
  9003   00028D                     I2C1CNTH        equ	653	;# 
  9004   00028E                     I2C1ADB0        equ	654	;# 
  9005   00028F                     I2C1ADB1        equ	655	;# 
  9006   000290                     I2C1ADR0        equ	656	;# 
  9007   000291                     I2C1ADR1        equ	657	;# 
  9008   000292                     I2C1ADR2        equ	658	;# 
  9009   000293                     I2C1ADR3        equ	659	;# 
  9010   000294                     I2C1CON0        equ	660	;# 
  9011   000295                     I2C1CON1        equ	661	;# 
  9012   000296                     I2C1CON2        equ	662	;# 
  9013   000297                     I2C1ERR         equ	663	;# 
  9014   000298                     I2C1STAT0       equ	664	;# 
  9015   000299                     I2C1STAT1       equ	665	;# 
  9016   00029A                     I2C1PIR         equ	666	;# 
  9017   00029B                     I2C1PIE         equ	667	;# 
  9018   00029C                     I2C1BTO         equ	668	;# 
  9019   00029D                     I2C1BAUD        equ	669	;# 
  9020   00029E                     I2C1CLK         equ	670	;# 
  9021   00029F                     I2C1BTOC        equ	671	;# 
  9022   0002A1                     U1RXB           equ	673	;# 
  9023   0002A1                     U1RXBL          equ	673	;# 
  9024   0002A2                     U1RXCHK         equ	674	;# 
  9025   0002A3                     U1TXB           equ	675	;# 
  9026   0002A3                     U1TXBL          equ	675	;# 
  9027   0002A4                     U1TXCHK         equ	676	;# 
  9028   0002A5                     U1P1            equ	677	;# 
  9029   0002A5                     U1P1L           equ	677	;# 
  9030   0002A6                     U1P1H           equ	678	;# 
  9031   0002A7                     U1P2            equ	679	;# 
  9032   0002A7                     U1P2L           equ	679	;# 
  9033   0002A8                     U1P2H           equ	680	;# 
  9034   0002A9                     U1P3            equ	681	;# 
  9035   0002A9                     U1P3L           equ	681	;# 
  9036   0002AA                     U1P3H           equ	682	;# 
  9037   0002AB                     U1CON0          equ	683	;# 
  9038   0002AC                     U1CON1          equ	684	;# 
  9039   0002AD                     U1CON2          equ	685	;# 
  9040   0002AE                     U1BRG           equ	686	;# 
  9041   0002AE                     U1BRGL          equ	686	;# 
  9042   0002AF                     U1BRGH          equ	687	;# 
  9043   0002B0                     U1FIFO          equ	688	;# 
  9044   0002B1                     U1UIR           equ	689	;# 
  9045   0002B2                     U1ERRIR         equ	690	;# 
  9046   0002B3                     U1ERRIE         equ	691	;# 
  9047   0002B4                     U2RXB           equ	692	;# 
  9048   0002B4                     U2RXBL          equ	692	;# 
  9049   0002B5                     U2RXCHK         equ	693	;# 
  9050   0002B6                     U2TXB           equ	694	;# 
  9051   0002B6                     U2TXBL          equ	694	;# 
  9052   0002B7                     U2TXCHK         equ	695	;# 
  9053   0002B8                     U2P1            equ	696	;# 
  9054   0002B8                     U2P1L           equ	696	;# 
  9055   0002B9                     U2P1H           equ	697	;# 
  9056   0002BA                     U2P2            equ	698	;# 
  9057   0002BA                     U2P2L           equ	698	;# 
  9058   0002BB                     U2P2H           equ	699	;# 
  9059   0002BC                     U2P3            equ	700	;# 
  9060   0002BC                     U2P3L           equ	700	;# 
  9061   0002BD                     U2P3H           equ	701	;# 
  9062   0002BE                     U2CON0          equ	702	;# 
  9063   0002BF                     U2CON1          equ	703	;# 
  9064   0002C0                     U2CON2          equ	704	;# 
  9065   0002C1                     U2BRG           equ	705	;# 
  9066   0002C1                     U2BRGL          equ	705	;# 
  9067   0002C2                     U2BRGH          equ	706	;# 
  9068   0002C3                     U2FIFO          equ	707	;# 
  9069   0002C4                     U2UIR           equ	708	;# 
  9070   0002C5                     U2ERRIR         equ	709	;# 
  9071   0002C6                     U2ERRIE         equ	710	;# 
  9072   0002C7                     U3RXB           equ	711	;# 
  9073   0002C7                     U3RXBL          equ	711	;# 
  9074   0002C9                     U3TXB           equ	713	;# 
  9075   0002C9                     U3TXBL          equ	713	;# 
  9076   0002CB                     U3P1            equ	715	;# 
  9077   0002CB                     U3P1L           equ	715	;# 
  9078   0002CD                     U3P2            equ	717	;# 
  9079   0002CD                     U3P2L           equ	717	;# 
  9080   0002CF                     U3P3            equ	719	;# 
  9081   0002CF                     U3P3L           equ	719	;# 
  9082   0002D1                     U3CON0          equ	721	;# 
  9083   0002D2                     U3CON1          equ	722	;# 
  9084   0002D3                     U3CON2          equ	723	;# 
  9085   0002D4                     U3BRG           equ	724	;# 
  9086   0002D4                     U3BRGL          equ	724	;# 
  9087   0002D5                     U3BRGH          equ	725	;# 
  9088   0002D6                     U3FIFO          equ	726	;# 
  9089   0002D7                     U3UIR           equ	727	;# 
  9090   0002D8                     U3ERRIR         equ	728	;# 
  9091   0002D9                     U3ERRIE         equ	729	;# 
  9092   0002DA                     U4RXB           equ	730	;# 
  9093   0002DA                     U4RXBL          equ	730	;# 
  9094   0002DC                     U4TXB           equ	732	;# 
  9095   0002DC                     U4TXBL          equ	732	;# 
  9096   0002DE                     U4P1            equ	734	;# 
  9097   0002DE                     U4P1L           equ	734	;# 
  9098   0002E0                     U4P2            equ	736	;# 
  9099   0002E0                     U4P2L           equ	736	;# 
  9100   0002E2                     U4P3            equ	738	;# 
  9101   0002E2                     U4P3L           equ	738	;# 
  9102   0002E4                     U4CON0          equ	740	;# 
  9103   0002E5                     U4CON1          equ	741	;# 
  9104   0002E6                     U4CON2          equ	742	;# 
  9105   0002E7                     U4BRG           equ	743	;# 
  9106   0002E7                     U4BRGL          equ	743	;# 
  9107   0002E8                     U4BRGH          equ	744	;# 
  9108   0002E9                     U4FIFO          equ	745	;# 
  9109   0002EA                     U4UIR           equ	746	;# 
  9110   0002EB                     U4ERRIR         equ	747	;# 
  9111   0002EC                     U4ERRIE         equ	748	;# 
  9112   0002ED                     U5RXB           equ	749	;# 
  9113   0002ED                     U5RXBL          equ	749	;# 
  9114   0002EF                     U5TXB           equ	751	;# 
  9115   0002EF                     U5TXBL          equ	751	;# 
  9116   0002F1                     U5P1            equ	753	;# 
  9117   0002F1                     U5P1L           equ	753	;# 
  9118   0002F3                     U5P2            equ	755	;# 
  9119   0002F3                     U5P2L           equ	755	;# 
  9120   0002F5                     U5P3            equ	757	;# 
  9121   0002F5                     U5P3L           equ	757	;# 
  9122   0002F7                     U5CON0          equ	759	;# 
  9123   0002F8                     U5CON1          equ	760	;# 
  9124   0002F9                     U5CON2          equ	761	;# 
  9125   0002FA                     U5BRG           equ	762	;# 
  9126   0002FA                     U5BRGL          equ	762	;# 
  9127   0002FB                     U5BRGH          equ	763	;# 
  9128   0002FC                     U5FIFO          equ	764	;# 
  9129   0002FD                     U5UIR           equ	765	;# 
  9130   0002FE                     U5ERRIR         equ	766	;# 
  9131   0002FF                     U5ERRIE         equ	767	;# 
  9132   000300                     SMT1TMR         equ	768	;# 
  9133   000300                     SMT1TMRL        equ	768	;# 
  9134   000301                     SMT1TMRH        equ	769	;# 
  9135   000302                     SMT1TMRU        equ	770	;# 
  9136   000303                     SMT1CPR         equ	771	;# 
  9137   000303                     SMT1CPRL        equ	771	;# 
  9138   000304                     SMT1CPRH        equ	772	;# 
  9139   000305                     SMT1CPRU        equ	773	;# 
  9140   000306                     SMT1CPW         equ	774	;# 
  9141   000306                     SMT1CPWL        equ	774	;# 
  9142   000307                     SMT1CPWH        equ	775	;# 
  9143   000308                     SMT1CPWU        equ	776	;# 
  9144   000309                     SMT1PR          equ	777	;# 
  9145   000309                     SMT1PRL         equ	777	;# 
  9146   00030A                     SMT1PRH         equ	778	;# 
  9147   00030B                     SMT1PRU         equ	779	;# 
  9148   00030C                     SMT1CON0        equ	780	;# 
  9149   00030D                     SMT1CON1        equ	781	;# 
  9150   00030E                     SMT1STAT        equ	782	;# 
  9151   00030F                     SMT1CLK         equ	783	;# 
  9152   000310                     SMT1SIG         equ	784	;# 
  9153   000311                     SMT1WIN         equ	785	;# 
  9154   000318                     TMR0L           equ	792	;# 
  9155   000318                     TMR0            equ	792	;# 
  9156   000319                     TMR0H           equ	793	;# 
  9157   000319                     PR0             equ	793	;# 
  9158   00031A                     T0CON0          equ	794	;# 
  9159   00031B                     T0CON1          equ	795	;# 
  9160   00031C                     TMR1            equ	796	;# 
  9161   00031C                     TMR1L           equ	796	;# 
  9162   00031D                     TMR1H           equ	797	;# 
  9163   00031E                     T1CON           equ	798	;# 
  9164   00031E                     TMR1CON         equ	798	;# 
  9165   00031F                     T1GCON          equ	799	;# 
  9166   00031F                     TMR1GCON        equ	799	;# 
  9167   000320                     T1GATE          equ	800	;# 
  9168   000320                     TMR1GATE        equ	800	;# 
  9169   000321                     T1CLK           equ	801	;# 
  9170   000321                     TMR1CLK         equ	801	;# 
  9171   000321                     PR1             equ	801	;# 
  9172   000322                     T2TMR           equ	802	;# 
  9173   000322                     TMR2            equ	802	;# 
  9174   000323                     T2PR            equ	803	;# 
  9175   000323                     PR2             equ	803	;# 
  9176   000324                     T2CON           equ	804	;# 
  9177   000325                     T2HLT           equ	805	;# 
  9178   000326                     T2CLKCON        equ	806	;# 
  9179   000326                     T2CLK           equ	806	;# 
  9180   000327                     T2RST           equ	807	;# 
  9181   000328                     TMR3            equ	808	;# 
  9182   000328                     TMR3L           equ	808	;# 
  9183   000329                     TMR3H           equ	809	;# 
  9184   00032A                     T3CON           equ	810	;# 
  9185   00032A                     TMR3CON         equ	810	;# 
  9186   00032B                     T3GCON          equ	811	;# 
  9187   00032B                     TMR3GCON        equ	811	;# 
  9188   00032C                     T3GATE          equ	812	;# 
  9189   00032C                     TMR3GATE        equ	812	;# 
  9190   00032D                     T3CLK           equ	813	;# 
  9191   00032D                     TMR3CLK         equ	813	;# 
  9192   00032D                     PR3             equ	813	;# 
  9193   00032E                     T4TMR           equ	814	;# 
  9194   00032E                     TMR4            equ	814	;# 
  9195   00032F                     T4PR            equ	815	;# 
  9196   00032F                     PR4             equ	815	;# 
  9197   000330                     T4CON           equ	816	;# 
  9198   000331                     T4HLT           equ	817	;# 
  9199   000332                     T4CLKCON        equ	818	;# 
  9200   000332                     T4CLK           equ	818	;# 
  9201   000333                     T4RST           equ	819	;# 
  9202   000334                     TMR5            equ	820	;# 
  9203   000334                     TMR5L           equ	820	;# 
  9204   000335                     TMR5H           equ	821	;# 
  9205   000336                     T5CON           equ	822	;# 
  9206   000336                     TMR5CON         equ	822	;# 
  9207   000337                     T5GCON          equ	823	;# 
  9208   000337                     TMR5GCON        equ	823	;# 
  9209   000338                     T5GATE          equ	824	;# 
  9210   000338                     TMR5GATE        equ	824	;# 
  9211   000339                     T5CLK           equ	825	;# 
  9212   000339                     TMR5CLK         equ	825	;# 
  9213   000339                     PR5             equ	825	;# 
  9214   00033A                     T6TMR           equ	826	;# 
  9215   00033A                     TMR6            equ	826	;# 
  9216   00033B                     T6PR            equ	827	;# 
  9217   00033B                     PR6             equ	827	;# 
  9218   00033C                     T6CON           equ	828	;# 
  9219   00033D                     T6HLT           equ	829	;# 
  9220   00033E                     T6CLKCON        equ	830	;# 
  9221   00033E                     T6CLK           equ	830	;# 
  9222   00033F                     T6RST           equ	831	;# 
  9223   000340                     CCPR1           equ	832	;# 
  9224   000340                     CCPR1L          equ	832	;# 
  9225   000341                     CCPR1H          equ	833	;# 
  9226   000342                     CCP1CON         equ	834	;# 
  9227   000343                     CCP1CAP         equ	835	;# 
  9228   000344                     CCPR2           equ	836	;# 
  9229   000344                     CCPR2L          equ	836	;# 
  9230   000345                     CCPR2H          equ	837	;# 
  9231   000346                     CCP2CON         equ	838	;# 
  9232   000347                     CCP2CAP         equ	839	;# 
  9233   000348                     CCPR3           equ	840	;# 
  9234   000348                     CCPR3L          equ	840	;# 
  9235   000349                     CCPR3H          equ	841	;# 
  9236   00034A                     CCP3CON         equ	842	;# 
  9237   00034B                     CCP3CAP         equ	843	;# 
  9238   00034C                     CCPTMRS0        equ	844	;# 
  9239   00034F                     CRCDATA         equ	847	;# 
  9240   00034F                     CRCDATAL        equ	847	;# 
  9241   000350                     CRCDATAH        equ	848	;# 
  9242   000351                     CRCDATAU        equ	849	;# 
  9243   000352                     CRCDATAT        equ	850	;# 
  9244   000353                     CRCOUT          equ	851	;# 
  9245   000353                     CRCSHFT         equ	851	;# 
  9246   000353                     CRCXOR          equ	851	;# 
  9247   000353                     CRCOUTL         equ	851	;# 
  9248   000353                     CRCSHFTL        equ	851	;# 
  9249   000353                     CRCSHIFTL       equ	851	;# 
  9250   000353                     CRCXORL         equ	851	;# 
  9251   000354                     CRCOUTH         equ	852	;# 
  9252   000354                     CRCSHFTH        equ	852	;# 
  9253   000354                     CRCSHIFTH       equ	852	;# 
  9254   000354                     CRCXORH         equ	852	;# 
  9255   000355                     CRCOUTU         equ	853	;# 
  9256   000355                     CRCSHFTU        equ	853	;# 
  9257   000355                     CRCSHIFTU       equ	853	;# 
  9258   000355                     CRCXORU         equ	853	;# 
  9259   000356                     CRCOUTT         equ	854	;# 
  9260   000356                     CRCSHFTT        equ	854	;# 
  9261   000356                     CRCSHIFTT       equ	854	;# 
  9262   000356                     CRCXORT         equ	854	;# 
  9263   000357                     CRCCON0         equ	855	;# 
  9264   000358                     CRCCON1         equ	856	;# 
  9265   000359                     CRCCON2         equ	857	;# 
  9266   00035A                     SCANLADR        equ	858	;# 
  9267   00035A                     SCANLADRL       equ	858	;# 
  9268   00035B                     SCANLADRH       equ	859	;# 
  9269   00035C                     SCANLADRU       equ	860	;# 
  9270   00035D                     SCANHADR        equ	861	;# 
  9271   00035D                     SCANHADRL       equ	861	;# 
  9272   00035E                     SCANHADRH       equ	862	;# 
  9273   00035F                     SCANHADRU       equ	863	;# 
  9274   000360                     SCANCON0        equ	864	;# 
  9275   000361                     SCANTRIG        equ	865	;# 
  9276   000362                     IPR0            equ	866	;# 
  9277   000363                     IPR1            equ	867	;# 
  9278   000364                     IPR2            equ	868	;# 
  9279   000365                     IPR3            equ	869	;# 
  9280   000366                     IPR4            equ	870	;# 
  9281   000367                     IPR5            equ	871	;# 
  9282   000368                     IPR6            equ	872	;# 
  9283   000369                     IPR7            equ	873	;# 
  9284   00036A                     IPR8            equ	874	;# 
  9285   00036B                     IPR9            equ	875	;# 
  9286   00036C                     IPR10           equ	876	;# 
  9287   00036D                     IPR11           equ	877	;# 
  9288   00036E                     IPR12           equ	878	;# 
  9289   00036F                     IPR13           equ	879	;# 
  9290   000370                     IPR14           equ	880	;# 
  9291   000371                     IPR15           equ	881	;# 
  9292   000373                     STATUS_CSHAD    equ	883	;# 
  9293   000374                     WREG_CSHAD      equ	884	;# 
  9294   000375                     BSR_CSHAD       equ	885	;# 
  9295   000376                     SHADCON         equ	886	;# 
  9296   000377                     STATUS_SHAD     equ	887	;# 
  9297   000378                     WREG_SHAD       equ	888	;# 
  9298   000379                     BSR_SHAD        equ	889	;# 
  9299   00037A                     PCLATH_SHAD     equ	890	;# 
  9300   00037B                     PCLATU_SHAD     equ	891	;# 
  9301   00037C                     FSR0SH          equ	892	;# 
  9302   00037C                     FSR0L_SHAD      equ	892	;# 
  9303   00037D                     FSR0H_SHAD      equ	893	;# 
  9304   00037E                     FSR1SH          equ	894	;# 
  9305   00037E                     FSR1L_SHAD      equ	894	;# 
  9306   00037F                     FSR1H_SHAD      equ	895	;# 
  9307   000380                     FSR2SH          equ	896	;# 
  9308   000380                     FSR2L_SHAD      equ	896	;# 
  9309   000381                     FSR2H_SHAD      equ	897	;# 
  9310   000382                     PRODSH          equ	898	;# 
  9311   000382                     PRODL_SHAD      equ	898	;# 
  9312   000383                     PRODH_SHAD      equ	899	;# 
  9313   000387                     TU16ACON0       equ	903	;# 
  9314   000388                     TU16ACON1       equ	904	;# 
  9315   000389                     TU16AHLT        equ	905	;# 
  9316   00038A                     TU16APS         equ	906	;# 
  9317   00038B                     TU16ATMR        equ	907	;# 
  9318   00038B                     TU16ACR         equ	907	;# 
  9319   00038B                     TU16ATMRL       equ	907	;# 
  9320   00038B                     TU16ACRL        equ	907	;# 
  9321   00038C                     TU16ATMRH       equ	908	;# 
  9322   00038C                     TU16ACRH        equ	908	;# 
  9323   00038D                     TU16APR         equ	909	;# 
  9324   00038D                     TU16APRL        equ	909	;# 
  9325   00038E                     TU16APRH        equ	910	;# 
  9326   00038F                     TU16ACLK        equ	911	;# 
  9327   000390                     TU16AERS        equ	912	;# 
  9328   000393                     TU16BCON0       equ	915	;# 
  9329   000394                     TU16BCON1       equ	916	;# 
  9330   000395                     TU16BHLT        equ	917	;# 
  9331   000396                     TU16BPS         equ	918	;# 
  9332   000397                     TU16BTMR        equ	919	;# 
  9333   000397                     TU16BCR         equ	919	;# 
  9334   000397                     TU16BTMRL       equ	919	;# 
  9335   000397                     TU16BCRL        equ	919	;# 
  9336   000398                     TU16BTMRH       equ	920	;# 
  9337   000398                     TU16BCRH        equ	920	;# 
  9338   000399                     TU16BPR         equ	921	;# 
  9339   000399                     TU16BPRL        equ	921	;# 
  9340   00039A                     TU16BPRH        equ	922	;# 
  9341   00039B                     TU16BCLK        equ	923	;# 
  9342   00039C                     TU16BERS        equ	924	;# 
  9343   0003BB                     TUCHAIN         equ	955	;# 
  9344   0003BC                     CWG1CLK         equ	956	;# 
  9345   0003BC                     CWG1CLKCON      equ	956	;# 
  9346   0003BD                     CWG1ISM         equ	957	;# 
  9347   0003BE                     CWG1DBR         equ	958	;# 
  9348   0003BF                     CWG1DBF         equ	959	;# 
  9349   0003C0                     CWG1CON0        equ	960	;# 
  9350   0003C1                     CWG1CON1        equ	961	;# 
  9351   0003C2                     CWG1AS0         equ	962	;# 
  9352   0003C3                     CWG1AS1         equ	963	;# 
  9353   0003C4                     CWG1STR         equ	964	;# 
  9354   0003C5                     CWG2CLK         equ	965	;# 
  9355   0003C5                     CWG2CLKCON      equ	965	;# 
  9356   0003C6                     CWG2ISM         equ	966	;# 
  9357   0003C7                     CWG2DBR         equ	967	;# 
  9358   0003C8                     CWG2DBF         equ	968	;# 
  9359   0003C9                     CWG2CON0        equ	969	;# 
  9360   0003CA                     CWG2CON1        equ	970	;# 
  9361   0003CB                     CWG2AS0         equ	971	;# 
  9362   0003CC                     CWG2AS1         equ	972	;# 
  9363   0003CD                     CWG2STR         equ	973	;# 
  9364   0003CE                     CWG3CLK         equ	974	;# 
  9365   0003CE                     CWG3CLKCON      equ	974	;# 
  9366   0003CF                     CWG3ISM         equ	975	;# 
  9367   0003D0                     CWG3DBR         equ	976	;# 
  9368   0003D1                     CWG3DBF         equ	977	;# 
  9369   0003D2                     CWG3CON0        equ	978	;# 
  9370   0003D3                     CWG3CON1        equ	979	;# 
  9371   0003D4                     CWG3AS0         equ	980	;# 
  9372   0003D5                     CWG3AS1         equ	981	;# 
  9373   0003D6                     CWG3STR         equ	982	;# 
  9374   0003D7                     FVRCON          equ	983	;# 
  9375   0003D8                     ADCPCON         equ	984	;# 
  9376   0003D8                     ADCP            equ	984	;# 
  9377   0003D9                     ADLTH           equ	985	;# 
  9378   0003D9                     ADLTHL          equ	985	;# 
  9379   0003DA                     ADLTHH          equ	986	;# 
  9380   0003DB                     ADUTH           equ	987	;# 
  9381   0003DB                     ADUTHL          equ	987	;# 
  9382   0003DC                     ADUTHH          equ	988	;# 
  9383   0003DD                     ADERR           equ	989	;# 
  9384   0003DD                     ADERRL          equ	989	;# 
  9385   0003DE                     ADERRH          equ	990	;# 
  9386   0003DF                     ADSTPT          equ	991	;# 
  9387   0003DF                     ADSTPTL         equ	991	;# 
  9388   0003E0                     ADSTPTH         equ	992	;# 
  9389   0003E1                     ADFLTR          equ	993	;# 
  9390   0003E1                     ADFLTRL         equ	993	;# 
  9391   0003E2                     ADFLTRH         equ	994	;# 
  9392   0003E3                     ADACC           equ	995	;# 
  9393   0003E3                     ADACCL          equ	995	;# 
  9394   0003E4                     ADACCH          equ	996	;# 
  9395   0003E5                     ADACCU          equ	997	;# 
  9396   0003E6                     ADCNT           equ	998	;# 
  9397   0003E7                     ADRPT           equ	999	;# 
  9398   0003E8                     ADPREV          equ	1000	;# 
  9399   0003E8                     ADPREVL         equ	1000	;# 
  9400   0003E9                     ADPREVH         equ	1001	;# 
  9401   0003EA                     ADRES           equ	1002	;# 
  9402   0003EA                     ADRESL          equ	1002	;# 
  9403   0003EB                     ADRESH          equ	1003	;# 
  9404   0003EC                     ADPCH           equ	1004	;# 
  9405   0003EE                     ADACQ           equ	1006	;# 
  9406   0003EE                     ADACQL          equ	1006	;# 
  9407   0003EF                     ADACQH          equ	1007	;# 
  9408   0003F0                     ADCAP           equ	1008	;# 
  9409   0003F1                     ADPRE           equ	1009	;# 
  9410   0003F1                     ADPREL          equ	1009	;# 
  9411   0003F2                     ADPREH          equ	1010	;# 
  9412   0003F3                     ADCON0          equ	1011	;# 
  9413   0003F4                     ADCON1          equ	1012	;# 
  9414   0003F5                     ADCON2          equ	1013	;# 
  9415   0003F6                     ADCON3          equ	1014	;# 
  9416   0003F7                     ADSTAT          equ	1015	;# 
  9417   0003F8                     ADREF           equ	1016	;# 
  9418   0003F9                     ADACT           equ	1017	;# 
  9419   0003FA                     ADCLK           equ	1018	;# 
  9420   0003FB                     ADCTX           equ	1019	;# 
  9421   0003FC                     ADCSEL1         equ	1020	;# 
  9422   0003FD                     ADCSEL2         equ	1021	;# 
  9423   0003FE                     ADCSEL3         equ	1022	;# 
  9424   0003FF                     ADCSEL4         equ	1023	;# 
  9425   000400                     ANSELA          equ	1024	;# 
  9426   000401                     WPUA            equ	1025	;# 
  9427   000402                     ODCONA          equ	1026	;# 
  9428   000403                     SLRCONA         equ	1027	;# 
  9429   000404                     INLVLA          equ	1028	;# 
  9430   000405                     IOCAP           equ	1029	;# 
  9431   000406                     IOCAN           equ	1030	;# 
  9432   000407                     IOCAF           equ	1031	;# 
  9433   000408                     ANSELB          equ	1032	;# 
  9434   000409                     WPUB            equ	1033	;# 
  9435   00040A                     ODCONB          equ	1034	;# 
  9436   00040B                     SLRCONB         equ	1035	;# 
  9437   00040C                     INLVLB          equ	1036	;# 
  9438   00040D                     IOCBP           equ	1037	;# 
  9439   00040E                     IOCBN           equ	1038	;# 
  9440   00040F                     IOCBF           equ	1039	;# 
  9441   000410                     ANSELC          equ	1040	;# 
  9442   000411                     WPUC            equ	1041	;# 
  9443   000412                     ODCONC          equ	1042	;# 
  9444   000413                     SLRCONC         equ	1043	;# 
  9445   000414                     INLVLC          equ	1044	;# 
  9446   000415                     IOCCP           equ	1045	;# 
  9447   000416                     IOCCN           equ	1046	;# 
  9448   000417                     IOCCF           equ	1047	;# 
  9449   000421                     WPUE            equ	1057	;# 
  9450   000424                     INLVLE          equ	1060	;# 
  9451   000425                     IOCEP           equ	1061	;# 
  9452   000426                     IOCEN           equ	1062	;# 
  9453   000427                     IOCEF           equ	1063	;# 
  9454   000440                     NCO1ACC         equ	1088	;# 
  9455   000440                     NCO1ACCL        equ	1088	;# 
  9456   000441                     NCO1ACCH        equ	1089	;# 
  9457   000442                     NCO1ACCU        equ	1090	;# 
  9458   000443                     NCO1INC         equ	1091	;# 
  9459   000443                     NCO1INCL        equ	1091	;# 
  9460   000444                     NCO1INCH        equ	1092	;# 
  9461   000445                     NCO1INCU        equ	1093	;# 
  9462   000446                     NCO1CON         equ	1094	;# 
  9463   000447                     NCO1CLK         equ	1095	;# 
  9464   000448                     NCO2ACC         equ	1096	;# 
  9465   000448                     NCO2ACCL        equ	1096	;# 
  9466   000449                     NCO2ACCH        equ	1097	;# 
  9467   00044A                     NCO2ACCU        equ	1098	;# 
  9468   00044B                     NCO2INC         equ	1099	;# 
  9469   00044B                     NCO2INCL        equ	1099	;# 
  9470   00044C                     NCO2INCH        equ	1100	;# 
  9471   00044D                     NCO2INCU        equ	1101	;# 
  9472   00044E                     NCO2CON         equ	1102	;# 
  9473   00044F                     NCO2CLK         equ	1103	;# 
  9474   000450                     NCO3ACC         equ	1104	;# 
  9475   000450                     NCO3ACCL        equ	1104	;# 
  9476   000451                     NCO3ACCH        equ	1105	;# 
  9477   000452                     NCO3ACCU        equ	1106	;# 
  9478   000453                     NCO3INC         equ	1107	;# 
  9479   000453                     NCO3INCL        equ	1107	;# 
  9480   000454                     NCO3INCH        equ	1108	;# 
  9481   000455                     NCO3INCU        equ	1109	;# 
  9482   000456                     NCO3CON         equ	1110	;# 
  9483   000457                     NCO3CLK         equ	1111	;# 
  9484   000458                     FSCMCON         equ	1112	;# 
  9485   000459                     IVTLOCK         equ	1113	;# 
  9486   00045A                     IVTAD           equ	1114	;# 
  9487   00045A                     IVTADL          equ	1114	;# 
  9488   00045B                     IVTADH          equ	1115	;# 
  9489   00045C                     IVTADU          equ	1116	;# 
  9490   00045D                     IVTBASE         equ	1117	;# 
  9491   00045D                     IVTBASEL        equ	1117	;# 
  9492   00045E                     IVTBASEH        equ	1118	;# 
  9493   00045F                     IVTBASEU        equ	1119	;# 
  9494   000460                     PWM1ERS         equ	1120	;# 
  9495   000461                     PWM1CLK         equ	1121	;# 
  9496   000462                     PWM1LDS         equ	1122	;# 
  9497   000463                     PWM1PR          equ	1123	;# 
  9498   000463                     PWM1PRL         equ	1123	;# 
  9499   000464                     PWM1PRH         equ	1124	;# 
  9500   000465                     PWM1CPRE        equ	1125	;# 
  9501   000466                     PWM1PIPOS       equ	1126	;# 
  9502   000467                     PWM1GIR         equ	1127	;# 
  9503   000468                     PWM1GIE         equ	1128	;# 
  9504   000469                     PWM1CON         equ	1129	;# 
  9505   00046A                     PWM1S1CFG       equ	1130	;# 
  9506   00046B                     PWM1S1P1        equ	1131	;# 
  9507   00046B                     PWM1S1P1L       equ	1131	;# 
  9508   00046C                     PWM1S1P1H       equ	1132	;# 
  9509   00046D                     PWM1S1P2        equ	1133	;# 
  9510   00046D                     PWM1S1P2L       equ	1133	;# 
  9511   00046E                     PWM1S1P2H       equ	1134	;# 
  9512   00046F                     PWM2ERS         equ	1135	;# 
  9513   000470                     PWM2CLK         equ	1136	;# 
  9514   000471                     PWM2LDS         equ	1137	;# 
  9515   000472                     PWM2PR          equ	1138	;# 
  9516   000472                     PWM2PRL         equ	1138	;# 
  9517   000473                     PWM2PRH         equ	1139	;# 
  9518   000474                     PWM2CPRE        equ	1140	;# 
  9519   000475                     PWM2PIPOS       equ	1141	;# 
  9520   000476                     PWM2GIR         equ	1142	;# 
  9521   000477                     PWM2GIE         equ	1143	;# 
  9522   000478                     PWM2CON         equ	1144	;# 
  9523   000479                     PWM2S1CFG       equ	1145	;# 
  9524   00047A                     PWM2S1P1        equ	1146	;# 
  9525   00047A                     PWM2S1P1L       equ	1146	;# 
  9526   00047B                     PWM2S1P1H       equ	1147	;# 
  9527   00047C                     PWM2S1P2        equ	1148	;# 
  9528   00047C                     PWM2S1P2L       equ	1148	;# 
  9529   00047D                     PWM2S1P2H       equ	1149	;# 
  9530   00047E                     PWM3ERS         equ	1150	;# 
  9531   00047F                     PWM3CLK         equ	1151	;# 
  9532   000480                     PWM3LDS         equ	1152	;# 
  9533   000481                     PWM3PR          equ	1153	;# 
  9534   000481                     PWM3PRL         equ	1153	;# 
  9535   000482                     PWM3PRH         equ	1154	;# 
  9536   000483                     PWM3CPRE        equ	1155	;# 
  9537   000484                     PWM3PIPOS       equ	1156	;# 
  9538   000485                     PWM3GIR         equ	1157	;# 
  9539   000486                     PWM3GIE         equ	1158	;# 
  9540   000487                     PWM3CON         equ	1159	;# 
  9541   000488                     PWM3S1CFG       equ	1160	;# 
  9542   000489                     PWM3S1P1        equ	1161	;# 
  9543   000489                     PWM3S1P1L       equ	1161	;# 
  9544   00048A                     PWM3S1P1H       equ	1162	;# 
  9545   00048B                     PWM3S1P2        equ	1163	;# 
  9546   00048B                     PWM3S1P2L       equ	1163	;# 
  9547   00048C                     PWM3S1P2H       equ	1164	;# 
  9548   00048D                     PWM4ERS         equ	1165	;# 
  9549   00048E                     PWM4CLK         equ	1166	;# 
  9550   00048F                     PWM4LDS         equ	1167	;# 
  9551   000490                     PWM4PR          equ	1168	;# 
  9552   000490                     PWM4PRL         equ	1168	;# 
  9553   000491                     PWM4PRH         equ	1169	;# 
  9554   000492                     PWM4CPRE        equ	1170	;# 
  9555   000493                     PWM4PIPOS       equ	1171	;# 
  9556   000494                     PWM4GIR         equ	1172	;# 
  9557   000495                     PWM4GIE         equ	1173	;# 
  9558   000496                     PWM4CON         equ	1174	;# 
  9559   000497                     PWM4S1CFG       equ	1175	;# 
  9560   000498                     PWM4S1P1        equ	1176	;# 
  9561   000498                     PWM4S1P1L       equ	1176	;# 
  9562   000499                     PWM4S1P1H       equ	1177	;# 
  9563   00049A                     PWM4S1P2        equ	1178	;# 
  9564   00049A                     PWM4S1P2L       equ	1178	;# 
  9565   00049B                     PWM4S1P2H       equ	1179	;# 
  9566   00049C                     PWMLOAD         equ	1180	;# 
  9567   00049D                     PWMEN           equ	1181	;# 
  9568   00049E                     PIE0            equ	1182	;# 
  9569   00049F                     PIE1            equ	1183	;# 
  9570   0004A0                     PIE2            equ	1184	;# 
  9571   0004A1                     PIE3            equ	1185	;# 
  9572   0004A2                     PIE4            equ	1186	;# 
  9573   0004A3                     PIE5            equ	1187	;# 
  9574   0004A4                     PIE6            equ	1188	;# 
  9575   0004A5                     PIE7            equ	1189	;# 
  9576   0004A6                     PIE8            equ	1190	;# 
  9577   0004A7                     PIE9            equ	1191	;# 
  9578   0004A8                     PIE10           equ	1192	;# 
  9579   0004A9                     PIE11           equ	1193	;# 
  9580   0004AA                     PIE12           equ	1194	;# 
  9581   0004AB                     PIE13           equ	1195	;# 
  9582   0004AC                     PIE14           equ	1196	;# 
  9583   0004AD                     PIE15           equ	1197	;# 
  9584   0004AE                     PIR0            equ	1198	;# 
  9585   0004AF                     PIR1            equ	1199	;# 
  9586   0004B0                     PIR2            equ	1200	;# 
  9587   0004B1                     PIR3            equ	1201	;# 
  9588   0004B2                     PIR4            equ	1202	;# 
  9589   0004B3                     PIR5            equ	1203	;# 
  9590   0004B4                     PIR6            equ	1204	;# 
  9591   0004B5                     PIR7            equ	1205	;# 
  9592   0004B6                     PIR8            equ	1206	;# 
  9593   0004B7                     PIR9            equ	1207	;# 
  9594   0004B8                     PIR10           equ	1208	;# 
  9595   0004B9                     PIR11           equ	1209	;# 
  9596   0004BA                     PIR12           equ	1210	;# 
  9597   0004BB                     PIR13           equ	1211	;# 
  9598   0004BC                     PIR14           equ	1212	;# 
  9599   0004BD                     PIR15           equ	1213	;# 
  9600   0004BE                     LATA            equ	1214	;# 
  9601   0004BF                     LATB            equ	1215	;# 
  9602   0004C0                     LATC            equ	1216	;# 
  9603   0004C6                     TRISA           equ	1222	;# 
  9604   0004C7                     TRISB           equ	1223	;# 
  9605   0004C8                     TRISC           equ	1224	;# 
  9606   0004CA                     TRISE           equ	1226	;# 
  9607   0004CE                     PORTA           equ	1230	;# 
  9608   0004CF                     PORTB           equ	1231	;# 
  9609   0004D0                     PORTC           equ	1232	;# 
  9610   0004D2                     PORTE           equ	1234	;# 
  9611   0004D6                     INTCON0         equ	1238	;# 
  9612   0004D7                     INTCON1         equ	1239	;# 
  9613   0004D8                     STATUS          equ	1240	;# 
  9614   0004D9                     FSR2            equ	1241	;# 
  9615   0004D9                     FSR2L           equ	1241	;# 
  9616   0004DA                     FSR2H           equ	1242	;# 
  9617   0004DB                     PLUSW2          equ	1243	;# 
  9618   0004DC                     PREINC2         equ	1244	;# 
  9619   0004DD                     POSTDEC2        equ	1245	;# 
  9620   0004DE                     POSTINC2        equ	1246	;# 
  9621   0004DF                     INDF2           equ	1247	;# 
  9622   0004E0                     BSR             equ	1248	;# 
  9623   0004E1                     FSR1            equ	1249	;# 
  9624   0004E1                     FSR1L           equ	1249	;# 
  9625   0004E2                     FSR1H           equ	1250	;# 
  9626   0004E3                     PLUSW1          equ	1251	;# 
  9627   0004E4                     PREINC1         equ	1252	;# 
  9628   0004E5                     POSTDEC1        equ	1253	;# 
  9629   0004E6                     POSTINC1        equ	1254	;# 
  9630   0004E7                     INDF1           equ	1255	;# 
  9631   0004E8                     WREG            equ	1256	;# 
  9632   0004E9                     FSR0            equ	1257	;# 
  9633   0004E9                     FSR0L           equ	1257	;# 
  9634   0004EA                     FSR0H           equ	1258	;# 
  9635   0004EB                     PLUSW0          equ	1259	;# 
  9636   0004EC                     PREINC0         equ	1260	;# 
  9637   0004ED                     POSTDEC0        equ	1261	;# 
  9638   0004EE                     POSTINC0        equ	1262	;# 
  9639   0004EF                     INDF0           equ	1263	;# 
  9640   0004F0                     PCON0           equ	1264	;# 
  9641   0004F1                     PCON1           equ	1265	;# 
  9642   0004F2                     CPUDOZE         equ	1266	;# 
  9643   0004F3                     PROD            equ	1267	;# 
  9644   0004F3                     PRODL           equ	1267	;# 
  9645   0004F4                     PRODH           equ	1268	;# 
  9646   0004F5                     TABLAT          equ	1269	;# 
  9647   0004F6                     TBLPTR          equ	1270	;# 
  9648   0004F6                     TBLPTRL         equ	1270	;# 
  9649   0004F7                     TBLPTRH         equ	1271	;# 
  9650   0004F8                     TBLPTRU         equ	1272	;# 
  9651   0004F9                     PCLAT           equ	1273	;# 
  9652   0004F9                     PCL             equ	1273	;# 
  9653   0004FA                     PCLATH          equ	1274	;# 
  9654   0004FB                     PCLATU          equ	1275	;# 
  9655   0004FC                     STKPTR          equ	1276	;# 
  9656   0004FD                     TOS             equ	1277	;# 
  9657   0004FD                     TOSL            equ	1277	;# 
  9658   0004FE                     TOSH            equ	1278	;# 
  9659   0004FF                     TOSU            equ	1279	;# 
  9660   000038                     BOOTREG         equ	56	;# 
  9661   000039                     CLKRCON         equ	57	;# 
  9662   00003A                     CLKRCLK         equ	58	;# 
  9663   000040                     NVMCON0         equ	64	;# 
  9664   000041                     NVMCON1         equ	65	;# 
  9665   000042                     NVMLOCK         equ	66	;# 
  9666   000043                     NVMADR          equ	67	;# 
  9667   000043                     NVMADRL         equ	67	;# 
  9668   000044                     NVMADRH         equ	68	;# 
  9669   000045                     NVMADRU         equ	69	;# 
  9670   000046                     NVMDAT          equ	70	;# 
  9671   000046                     NVMDATL         equ	70	;# 
  9672   000047                     NVMDATH         equ	71	;# 
  9673   000048                     VREGCON         equ	72	;# 
  9674   000049                     BORCON          equ	73	;# 
  9675   00004A                     HLVDCON0        equ	74	;# 
  9676   00004B                     HLVDCON1        equ	75	;# 
  9677   00004C                     ZCDCON          equ	76	;# 
  9678   000060                     PMD0            equ	96	;# 
  9679   000061                     PMD1            equ	97	;# 
  9680   000062                     PMD2            equ	98	;# 
  9681   000063                     PMD3            equ	99	;# 
  9682   000064                     PMD4            equ	100	;# 
  9683   000065                     PMD5            equ	101	;# 
  9684   000066                     PMD6            equ	102	;# 
  9685   000067                     PMD7            equ	103	;# 
  9686   000068                     PMD8            equ	104	;# 
  9687   00006A                     MD1CON0         equ	106	;# 
  9688   00006B                     MD1CON1         equ	107	;# 
  9689   00006C                     MD1SRC          equ	108	;# 
  9690   00006D                     MD1CARL         equ	109	;# 
  9691   00006E                     MD1CARH         equ	110	;# 
  9692   00006F                     CMOUT           equ	111	;# 
  9693   000070                     CM1CON0         equ	112	;# 
  9694   000071                     CM1CON1         equ	113	;# 
  9695   000072                     CM1NCH          equ	114	;# 
  9696   000073                     CM1PCH          equ	115	;# 
  9697   000074                     CM2CON0         equ	116	;# 
  9698   000075                     CM2CON1         equ	117	;# 
  9699   000076                     CM2NCH          equ	118	;# 
  9700   000077                     CM2PCH          equ	119	;# 
  9701   000078                     WDTCON0         equ	120	;# 
  9702   000079                     WDTCON1         equ	121	;# 
  9703   00007A                     WDTPSL          equ	122	;# 
  9704   00007B                     WDTPSH          equ	123	;# 
  9705   00007C                     WDTTMR          equ	124	;# 
  9706   00007D                     DAC1DAT         equ	125	;# 
  9707   00007D                     DAC1DATL        equ	125	;# 
  9708   00007F                     DAC1CON         equ	127	;# 
  9709   000080                     SPI1RXB         equ	128	;# 
  9710   000081                     SPI1TXB         equ	129	;# 
  9711   000082                     SPI1TCNT        equ	130	;# 
  9712   000082                     SPI1TCNTL       equ	130	;# 
  9713   000083                     SPI1TCNTH       equ	131	;# 
  9714   000084                     SPI1CON0        equ	132	;# 
  9715   000085                     SPI1CON1        equ	133	;# 
  9716   000086                     SPI1CON2        equ	134	;# 
  9717   000087                     SPI1STATUS      equ	135	;# 
  9718   000088                     SPI1TWIDTH      equ	136	;# 
  9719   000089                     SPI1BAUD        equ	137	;# 
  9720   00008A                     SPI1INTF        equ	138	;# 
  9721   00008B                     SPI1INTE        equ	139	;# 
  9722   00008C                     SPI1CLK         equ	140	;# 
  9723   00008D                     SPI2RXB         equ	141	;# 
  9724   00008E                     SPI2TXB         equ	142	;# 
  9725   00008F                     SPI2TCNT        equ	143	;# 
  9726   00008F                     SPI2TCNTL       equ	143	;# 
  9727   000090                     SPI2TCNTH       equ	144	;# 
  9728   000091                     SPI2CON0        equ	145	;# 
  9729   000092                     SPI2CON1        equ	146	;# 
  9730   000093                     SPI2CON2        equ	147	;# 
  9731   000094                     SPI2STATUS      equ	148	;# 
  9732   000095                     SPI2TWIDTH      equ	149	;# 
  9733   000096                     SPI2BAUD        equ	150	;# 
  9734   000097                     SPI2INTF        equ	151	;# 
  9735   000098                     SPI2INTE        equ	152	;# 
  9736   000099                     SPI2CLK         equ	153	;# 
  9737   0000AC                     ACTCON          equ	172	;# 
  9738   0000AD                     OSCCON1         equ	173	;# 
  9739   0000AE                     OSCCON2         equ	174	;# 
  9740   0000AF                     OSCCON3         equ	175	;# 
  9741   0000B0                     OSCTUNE         equ	176	;# 
  9742   0000B1                     OSCFRQ          equ	177	;# 
  9743   0000B1                     OSCFREQ         equ	177	;# 
  9744   0000B2                     OSCSTAT         equ	178	;# 
  9745   0000B2                     OSCSTAT1        equ	178	;# 
  9746   0000B3                     OSCEN           equ	179	;# 
  9747   0000B4                     PRLOCK          equ	180	;# 
  9748   0000B5                     SCANPR          equ	181	;# 
  9749   0000B6                     DMA1PR          equ	182	;# 
  9750   0000B7                     DMA2PR          equ	183	;# 
  9751   0000B8                     DMA3PR          equ	184	;# 
  9752   0000B9                     DMA4PR          equ	185	;# 
  9753   0000BA                     DMA5PR          equ	186	;# 
  9754   0000BB                     DMA6PR          equ	187	;# 
  9755   0000BC                     DMA7PR          equ	188	;# 
  9756   0000BD                     DMA8PR          equ	189	;# 
  9757   0000BE                     MAINPR          equ	190	;# 
  9758   0000BF                     ISRPR           equ	191	;# 
  9759   0000D4                     CLCDATA         equ	212	;# 
  9760   0000D5                     CLCSELECT       equ	213	;# 
  9761   0000D6                     CLCnCON         equ	214	;# 
  9762   0000D7                     CLCnPOL         equ	215	;# 
  9763   0000D8                     CLCnSEL0        equ	216	;# 
  9764   0000D9                     CLCnSEL1        equ	217	;# 
  9765   0000DA                     CLCnSEL2        equ	218	;# 
  9766   0000DB                     CLCnSEL3        equ	219	;# 
  9767   0000DC                     CLCnGLS0        equ	220	;# 
  9768   0000DD                     CLCnGLS1        equ	221	;# 
  9769   0000DE                     CLCnGLS2        equ	222	;# 
  9770   0000DF                     CLCnGLS3        equ	223	;# 
  9771   0000E8                     DMASELECT       equ	232	;# 
  9772   0000E9                     DMAnBUF         equ	233	;# 
  9773   0000EA                     DMAnDCNT        equ	234	;# 
  9774   0000EA                     DMAnDCNTL       equ	234	;# 
  9775   0000EB                     DMAnDCNTH       equ	235	;# 
  9776   0000EC                     DMAnDPTR        equ	236	;# 
  9777   0000EC                     DMAnDPTRL       equ	236	;# 
  9778   0000ED                     DMAnDPTRH       equ	237	;# 
  9779   0000EE                     DMAnDSZ         equ	238	;# 
  9780   0000EE                     DMAnDSZL        equ	238	;# 
  9781   0000EF                     DMAnDSZH        equ	239	;# 
  9782   0000F0                     DMAnDSA         equ	240	;# 
  9783   0000F0                     DMAnDSAL        equ	240	;# 
  9784   0000F1                     DMAnDSAH        equ	241	;# 
  9785   0000F2                     DMAnSCNT        equ	242	;# 
  9786   0000F2                     DMAnSCNTL       equ	242	;# 
  9787   0000F3                     DMAnSCNTH       equ	243	;# 
  9788   0000F4                     DMAnSPTR        equ	244	;# 
  9789   0000F4                     DMAnSPTRL       equ	244	;# 
  9790   0000F5                     DMAnSPTRH       equ	245	;# 
  9791   0000F6                     DMAnSPTRU       equ	246	;# 
  9792   0000F7                     DMAnSSZ         equ	247	;# 
  9793   0000F7                     DMAnSSZL        equ	247	;# 
  9794   0000F8                     DMAnSSZH        equ	248	;# 
  9795   0000F9                     DMAnSSA         equ	249	;# 
  9796   0000F9                     DMAnSSAL        equ	249	;# 
  9797   0000FA                     DMAnSSAH        equ	250	;# 
  9798   0000FB                     DMAnSSAU        equ	251	;# 
  9799   0000FC                     DMAnCON0        equ	252	;# 
  9800   0000FD                     DMAnCON1        equ	253	;# 
  9801   0000FE                     DMAnAIRQ        equ	254	;# 
  9802   0000FF                     DMAnSIRQ        equ	255	;# 
  9803   000100                     C1CONL          equ	256	;# 
  9804   000101                     C1CONH          equ	257	;# 
  9805   000102                     C1CONU          equ	258	;# 
  9806   000103                     C1CONT          equ	259	;# 
  9807   000104                     C1NBTCFGL       equ	260	;# 
  9808   000105                     C1NBTCFGH       equ	261	;# 
  9809   000106                     C1NBTCFGU       equ	262	;# 
  9810   000107                     C1NBTCFGT       equ	263	;# 
  9811   000108                     C1DBTCFGL       equ	264	;# 
  9812   000109                     C1DBTCFGH       equ	265	;# 
  9813   00010A                     C1DBTCFGU       equ	266	;# 
  9814   00010B                     C1DBTCFGT       equ	267	;# 
  9815   00010C                     C1TDCL          equ	268	;# 
  9816   00010D                     C1TDCH          equ	269	;# 
  9817   00010E                     C1TDCU          equ	270	;# 
  9818   000110                     C1TBC           equ	272	;# 
  9819   000110                     C1TBCL          equ	272	;# 
  9820   000111                     C1TBCH          equ	273	;# 
  9821   000112                     C1TBCU          equ	274	;# 
  9822   000113                     C1TBCT          equ	275	;# 
  9823   000114                     C1TSCONL        equ	276	;# 
  9824   000115                     C1TSCONH        equ	277	;# 
  9825   000116                     C1TSCONU        equ	278	;# 
  9826   000117                     C1TSCONT        equ	279	;# 
  9827   000118                     C1VECL          equ	280	;# 
  9828   000119                     C1VECH          equ	281	;# 
  9829   00011A                     C1VECU          equ	282	;# 
  9830   00011B                     C1VECT          equ	283	;# 
  9831   00011C                     C1INTL          equ	284	;# 
  9832   00011D                     C1INTH          equ	285	;# 
  9833   00011E                     C1INTU          equ	286	;# 
  9834   00011F                     C1INTT          equ	287	;# 
  9835   000120                     C1RXIF          equ	288	;# 
  9836   000120                     C1RXIFL         equ	288	;# 
  9837   000121                     C1RXIFH         equ	289	;# 
  9838   000122                     C1RXIFU         equ	290	;# 
  9839   000123                     C1RXIFT         equ	291	;# 
  9840   000124                     C1TXIF          equ	292	;# 
  9841   000124                     C1TXIFL         equ	292	;# 
  9842   000125                     C1TXIFH         equ	293	;# 
  9843   000126                     C1TXIFU         equ	294	;# 
  9844   000127                     C1TXIFT         equ	295	;# 
  9845   000128                     C1RXOVIF        equ	296	;# 
  9846   000128                     C1RXOVIFL       equ	296	;# 
  9847   000129                     C1RXOVIFH       equ	297	;# 
  9848   00012A                     C1RXOVIFU       equ	298	;# 
  9849   00012B                     C1RXOVIFT       equ	299	;# 
  9850   00012C                     C1TXATIF        equ	300	;# 
  9851   00012C                     C1TXATIFL       equ	300	;# 
  9852   00012D                     C1TXATIFH       equ	301	;# 
  9853   00012E                     C1TXATIFU       equ	302	;# 
  9854   00012F                     C1TXATIFT       equ	303	;# 
  9855   000130                     C1TXREQ         equ	304	;# 
  9856   000130                     C1TXREQL        equ	304	;# 
  9857   000131                     C1TXREQH        equ	305	;# 
  9858   000132                     C1TXREQU        equ	306	;# 
  9859   000133                     C1TXREQT        equ	307	;# 
  9860   000134                     C1TRECL         equ	308	;# 
  9861   000135                     C1TRECH         equ	309	;# 
  9862   000136                     C1TRECU         equ	310	;# 
  9863   000137                     C1TRECT         equ	311	;# 
  9864   000138                     C1BDIAG0L       equ	312	;# 
  9865   000139                     C1BDIAG0H       equ	313	;# 
  9866   00013C                     C1BDIAG1L       equ	316	;# 
  9867   00013D                     C1BDIAG1H       equ	317	;# 
  9868   00013E                     C1BDIAG1U       equ	318	;# 
  9869   00013F                     C1BDIAG1T       equ	319	;# 
  9870   000140                     C1TEFCONL       equ	320	;# 
  9871   000141                     C1TEFCONH       equ	321	;# 
  9872   000142                     C1TEFCONU       equ	322	;# 
  9873   000143                     C1TEFCONT       equ	323	;# 
  9874   000144                     C1TEFSTAL       equ	324	;# 
  9875   000145                     C1TEFSTAH       equ	325	;# 
  9876   000146                     C1TEFSTAU       equ	326	;# 
  9877   000147                     C1TEFSTAT       equ	327	;# 
  9878   000148                     C1TEFUA         equ	328	;# 
  9879   000148                     C1TEFUAL        equ	328	;# 
  9880   000149                     C1TEFUAH        equ	329	;# 
  9881   00014A                     C1TEFUAU        equ	330	;# 
  9882   00014B                     C1TEFUAT        equ	331	;# 
  9883   00014C                     C1FIFOBA        equ	332	;# 
  9884   00014C                     C1FIFOBAL       equ	332	;# 
  9885   00014D                     C1FIFOBAH       equ	333	;# 
  9886   00014E                     C1FIFOBAU       equ	334	;# 
  9887   00014F                     C1FIFOBAT       equ	335	;# 
  9888   000150                     C1TXQCONL       equ	336	;# 
  9889   000151                     C1TXQCONH       equ	337	;# 
  9890   000152                     C1TXQCONU       equ	338	;# 
  9891   000153                     C1TXQCONT       equ	339	;# 
  9892   000154                     C1TXQSTAL       equ	340	;# 
  9893   000155                     C1TXQSTAH       equ	341	;# 
  9894   000156                     C1TXQSTAU       equ	342	;# 
  9895   000157                     C1TXQSTAT       equ	343	;# 
  9896   000158                     C1TXQUA         equ	344	;# 
  9897   000158                     C1TXQUAL        equ	344	;# 
  9898   000159                     C1TXQUAH        equ	345	;# 
  9899   00015A                     C1TXQUAU        equ	346	;# 
  9900   00015B                     C1TXQUAT        equ	347	;# 
  9901   00015C                     C1FIFOCON1      equ	348	;# 
  9902   00015C                     C1FIFOCON1L     equ	348	;# 
  9903   00015D                     C1FIFOCON1H     equ	349	;# 
  9904   00015E                     C1FIFOCON1U     equ	350	;# 
  9905   00015F                     C1FIFOCON1T     equ	351	;# 
  9906   000160                     C1FIFOSTA1      equ	352	;# 
  9907   000160                     C1FIFOSTA1L     equ	352	;# 
  9908   000161                     C1FIFOSTA1H     equ	353	;# 
  9909   000162                     C1FIFOSTA1U     equ	354	;# 
  9910   000163                     C1FIFOSTA1T     equ	355	;# 
  9911   000164                     C1FIFOUA1       equ	356	;# 
  9912   000164                     C1FIFOUA1L      equ	356	;# 
  9913   000165                     C1FIFOUA1H      equ	357	;# 
  9914   000166                     C1FIFOUA1U      equ	358	;# 
  9915   000167                     C1FIFOUA1T      equ	359	;# 
  9916   000168                     C1FIFOCON2      equ	360	;# 
  9917   000168                     C1FIFOCON2L     equ	360	;# 
  9918   000169                     C1FIFOCON2H     equ	361	;# 
  9919   00016A                     C1FIFOCON2U     equ	362	;# 
  9920   00016B                     C1FIFOCON2T     equ	363	;# 
  9921   00016C                     C1FIFOSTA2      equ	364	;# 
  9922   00016C                     C1FIFOSTA2L     equ	364	;# 
  9923   00016D                     C1FIFOSTA2H     equ	365	;# 
  9924   00016E                     C1FIFOSTA2U     equ	366	;# 
  9925   00016F                     C1FIFOSTA2T     equ	367	;# 
  9926   000170                     C1FIFOUA2       equ	368	;# 
  9927   000170                     C1FIFOUA2L      equ	368	;# 
  9928   000171                     C1FIFOUA2H      equ	369	;# 
  9929   000172                     C1FIFOUA2U      equ	370	;# 
  9930   000173                     C1FIFOUA2T      equ	371	;# 
  9931   000174                     C1FIFOCON3      equ	372	;# 
  9932   000174                     C1FIFOCON3L     equ	372	;# 
  9933   000175                     C1FIFOCON3H     equ	373	;# 
  9934   000176                     C1FIFOCON3U     equ	374	;# 
  9935   000177                     C1FIFOCON3T     equ	375	;# 
  9936   000178                     C1FIFOSTA3      equ	376	;# 
  9937   000178                     C1FIFOSTA3L     equ	376	;# 
  9938   000179                     C1FIFOSTA3H     equ	377	;# 
  9939   00017A                     C1FIFOSTA3U     equ	378	;# 
  9940   00017B                     C1FIFOSTA3T     equ	379	;# 
  9941   00017C                     C1FIFOUA3       equ	380	;# 
  9942   00017C                     C1FIFOUA3L      equ	380	;# 
  9943   00017D                     C1FIFOUA3H      equ	381	;# 
  9944   00017E                     C1FIFOUA3U      equ	382	;# 
  9945   00017F                     C1FIFOUA3T      equ	383	;# 
  9946   000180                     C1FLTCON0L      equ	384	;# 
  9947   000181                     C1FLTCON0H      equ	385	;# 
  9948   000182                     C1FLTCON0U      equ	386	;# 
  9949   000183                     C1FLTCON0T      equ	387	;# 
  9950   000184                     C1FLTCON1L      equ	388	;# 
  9951   000185                     C1FLTCON1H      equ	389	;# 
  9952   000186                     C1FLTCON1U      equ	390	;# 
  9953   000187                     C1FLTCON1T      equ	391	;# 
  9954   000188                     C1FLTCON2L      equ	392	;# 
  9955   000189                     C1FLTCON2H      equ	393	;# 
  9956   00018A                     C1FLTCON2U      equ	394	;# 
  9957   00018B                     C1FLTCON2T      equ	395	;# 
  9958   00018C                     C1FLTOBJ0       equ	396	;# 
  9959   00018C                     C1FLTOBJ0L      equ	396	;# 
  9960   00018D                     C1FLTOBJ0H      equ	397	;# 
  9961   00018E                     C1FLTOBJ0U      equ	398	;# 
  9962   00018F                     C1FLTOBJ0T      equ	399	;# 
  9963   000190                     C1MASK0         equ	400	;# 
  9964   000190                     C1MASK0L        equ	400	;# 
  9965   000191                     C1MASK0H        equ	401	;# 
  9966   000192                     C1MASK0U        equ	402	;# 
  9967   000193                     C1MASK0T        equ	403	;# 
  9968   000194                     C1FLTOBJ1       equ	404	;# 
  9969   000194                     C1FLTOBJ1L      equ	404	;# 
  9970   000195                     C1FLTOBJ1H      equ	405	;# 
  9971   000196                     C1FLTOBJ1U      equ	406	;# 
  9972   000197                     C1FLTOBJ1T      equ	407	;# 
  9973   000198                     C1MASK1         equ	408	;# 
  9974   000198                     C1MASK1L        equ	408	;# 
  9975   000199                     C1MASK1H        equ	409	;# 
  9976   00019A                     C1MASK1U        equ	410	;# 
  9977   00019B                     C1MASK1T        equ	411	;# 
  9978   00019C                     C1FLTOBJ2       equ	412	;# 
  9979   00019C                     C1FLTOBJ2L      equ	412	;# 
  9980   00019D                     C1FLTOBJ2H      equ	413	;# 
  9981   00019E                     C1FLTOBJ2U      equ	414	;# 
  9982   00019F                     C1FLTOBJ2T      equ	415	;# 
  9983   0001A0                     C1MASK2         equ	416	;# 
  9984   0001A0                     C1MASK2L        equ	416	;# 
  9985   0001A1                     C1MASK2H        equ	417	;# 
  9986   0001A2                     C1MASK2U        equ	418	;# 
  9987   0001A3                     C1MASK2T        equ	419	;# 
  9988   0001A4                     C1FLTOBJ3       equ	420	;# 
  9989   0001A4                     C1FLTOBJ3L      equ	420	;# 
  9990   0001A5                     C1FLTOBJ3H      equ	421	;# 
  9991   0001A6                     C1FLTOBJ3U      equ	422	;# 
  9992   0001A7                     C1FLTOBJ3T      equ	423	;# 
  9993   0001A8                     C1MASK3         equ	424	;# 
  9994   0001A8                     C1MASK3L        equ	424	;# 
  9995   0001A9                     C1MASK3H        equ	425	;# 
  9996   0001AA                     C1MASK3U        equ	426	;# 
  9997   0001AB                     C1MASK3T        equ	427	;# 
  9998   0001AC                     C1FLTOBJ4       equ	428	;# 
  9999   0001AC                     C1FLTOBJ4L      equ	428	;# 
 10000   0001AD                     C1FLTOBJ4H      equ	429	;# 
 10001   0001AE                     C1FLTOBJ4U      equ	430	;# 
 10002   0001AF                     C1FLTOBJ4T      equ	431	;# 
 10003   0001B0                     C1MASK4         equ	432	;# 
 10004   0001B0                     C1MASK4L        equ	432	;# 
 10005   0001B1                     C1MASK4H        equ	433	;# 
 10006   0001B2                     C1MASK4U        equ	434	;# 
 10007   0001B3                     C1MASK4T        equ	435	;# 
 10008   0001B4                     C1FLTOBJ5       equ	436	;# 
 10009   0001B4                     C1FLTOBJ5L      equ	436	;# 
 10010   0001B5                     C1FLTOBJ5H      equ	437	;# 
 10011   0001B6                     C1FLTOBJ5U      equ	438	;# 
 10012   0001B7                     C1FLTOBJ5T      equ	439	;# 
 10013   0001B8                     C1MASK5         equ	440	;# 
 10014   0001B8                     C1MASK5L        equ	440	;# 
 10015   0001B9                     C1MASK5H        equ	441	;# 
 10016   0001BA                     C1MASK5U        equ	442	;# 
 10017   0001BB                     C1MASK5T        equ	443	;# 
 10018   0001BC                     C1FLTOBJ6       equ	444	;# 
 10019   0001BC                     C1FLTOBJ6L      equ	444	;# 
 10020   0001BD                     C1FLTOBJ6H      equ	445	;# 
 10021   0001BE                     C1FLTOBJ6U      equ	446	;# 
 10022   0001BF                     C1FLTOBJ6T      equ	447	;# 
 10023   0001C0                     C1MASK6         equ	448	;# 
 10024   0001C0                     C1MASK6L        equ	448	;# 
 10025   0001C1                     C1MASK6H        equ	449	;# 
 10026   0001C2                     C1MASK6U        equ	450	;# 
 10027   0001C3                     C1MASK6T        equ	451	;# 
 10028   0001C4                     C1FLTOBJ7       equ	452	;# 
 10029   0001C4                     C1FLTOBJ7L      equ	452	;# 
 10030   0001C5                     C1FLTOBJ7H      equ	453	;# 
 10031   0001C6                     C1FLTOBJ7U      equ	454	;# 
 10032   0001C7                     C1FLTOBJ7T      equ	455	;# 
 10033   0001C8                     C1MASK7         equ	456	;# 
 10034   0001C8                     C1MASK7L        equ	456	;# 
 10035   0001C9                     C1MASK7H        equ	457	;# 
 10036   0001CA                     C1MASK7U        equ	458	;# 
 10037   0001CB                     C1MASK7T        equ	459	;# 
 10038   0001CC                     C1FLTOBJ8       equ	460	;# 
 10039   0001CC                     C1FLTOBJ8L      equ	460	;# 
 10040   0001CD                     C1FLTOBJ8H      equ	461	;# 
 10041   0001CE                     C1FLTOBJ8U      equ	462	;# 
 10042   0001CF                     C1FLTOBJ8T      equ	463	;# 
 10043   0001D0                     C1MASK8         equ	464	;# 
 10044   0001D0                     C1MASK8L        equ	464	;# 
 10045   0001D1                     C1MASK8H        equ	465	;# 
 10046   0001D2                     C1MASK8U        equ	466	;# 
 10047   0001D3                     C1MASK8T        equ	467	;# 
 10048   0001D4                     C1FLTOBJ9       equ	468	;# 
 10049   0001D4                     C1FLTOBJ9L      equ	468	;# 
 10050   0001D5                     C1FLTOBJ9H      equ	469	;# 
 10051   0001D6                     C1FLTOBJ9U      equ	470	;# 
 10052   0001D7                     C1FLTOBJ9T      equ	471	;# 
 10053   0001D8                     C1MASK9         equ	472	;# 
 10054   0001D8                     C1MASK9L        equ	472	;# 
 10055   0001D9                     C1MASK9H        equ	473	;# 
 10056   0001DA                     C1MASK9U        equ	474	;# 
 10057   0001DB                     C1MASK9T        equ	475	;# 
 10058   0001DC                     C1FLTOBJ10      equ	476	;# 
 10059   0001DC                     C1FLTOBJ10L     equ	476	;# 
 10060   0001DD                     C1FLTOBJ10H     equ	477	;# 
 10061   0001DE                     C1FLTOBJ10U     equ	478	;# 
 10062   0001DF                     C1FLTOBJ10T     equ	479	;# 
 10063   0001E0                     C1MASK10        equ	480	;# 
 10064   0001E0                     C1MASK10L       equ	480	;# 
 10065   0001E1                     C1MASK10H       equ	481	;# 
 10066   0001E2                     C1MASK10U       equ	482	;# 
 10067   0001E3                     C1MASK10T       equ	483	;# 
 10068   0001E4                     C1FLTOBJ11      equ	484	;# 
 10069   0001E4                     C1FLTOBJ11L     equ	484	;# 
 10070   0001E5                     C1FLTOBJ11H     equ	485	;# 
 10071   0001E6                     C1FLTOBJ11U     equ	486	;# 
 10072   0001E7                     C1FLTOBJ11T     equ	487	;# 
 10073   0001E8                     C1MASK11        equ	488	;# 
 10074   0001E8                     C1MASK11L       equ	488	;# 
 10075   0001E9                     C1MASK11H       equ	489	;# 
 10076   0001EA                     C1MASK11U       equ	490	;# 
 10077   0001EB                     C1MASK11T       equ	491	;# 
 10078   000200                     PPSLOCK         equ	512	;# 
 10079   000201                     RA0PPS          equ	513	;# 
 10080   000202                     RA1PPS          equ	514	;# 
 10081   000203                     RA2PPS          equ	515	;# 
 10082   000204                     RA3PPS          equ	516	;# 
 10083   000205                     RA4PPS          equ	517	;# 
 10084   000206                     RA5PPS          equ	518	;# 
 10085   000207                     RA6PPS          equ	519	;# 
 10086   000208                     RA7PPS          equ	520	;# 
 10087   000209                     RB0PPS          equ	521	;# 
 10088   00020A                     RB1PPS          equ	522	;# 
 10089   00020B                     RB2PPS          equ	523	;# 
 10090   00020C                     RB3PPS          equ	524	;# 
 10091   00020D                     RB4PPS          equ	525	;# 
 10092   00020E                     RB5PPS          equ	526	;# 
 10093   00020F                     RB6PPS          equ	527	;# 
 10094   000210                     RB7PPS          equ	528	;# 
 10095   000211                     RC0PPS          equ	529	;# 
 10096   000212                     RC1PPS          equ	530	;# 
 10097   000213                     RC2PPS          equ	531	;# 
 10098   000214                     RC3PPS          equ	532	;# 
 10099   000215                     RC4PPS          equ	533	;# 
 10100   000216                     RC5PPS          equ	534	;# 
 10101   000217                     RC6PPS          equ	535	;# 
 10102   000218                     RC7PPS          equ	536	;# 
 10103   00023D                     CANRXPPS        equ	573	;# 
 10104   00023E                     INT0PPS         equ	574	;# 
 10105   00023F                     INT1PPS         equ	575	;# 
 10106   000240                     INT2PPS         equ	576	;# 
 10107   000241                     T0CKIPPS        equ	577	;# 
 10108   000242                     T1CKIPPS        equ	578	;# 
 10109   000243                     T1GPPS          equ	579	;# 
 10110   000244                     T3CKIPPS        equ	580	;# 
 10111   000245                     T3GPPS          equ	581	;# 
 10112   000246                     T5CKIPPS        equ	582	;# 
 10113   000247                     T5GPPS          equ	583	;# 
 10114   000248                     T2INPPS         equ	584	;# 
 10115   000249                     T4INPPS         equ	585	;# 
 10116   00024A                     T6INPPS         equ	586	;# 
 10117   00024B                     TUIN0PPS        equ	587	;# 
 10118   00024C                     TUIN1PPS        equ	588	;# 
 10119   00024F                     CCP1PPS         equ	591	;# 
 10120   000250                     CCP2PPS         equ	592	;# 
 10121   000251                     CCP3PPS         equ	593	;# 
 10122   000253                     PWM1ERSPPS      equ	595	;# 
 10123   000254                     PWM2ERSPPS      equ	596	;# 
 10124   000255                     PWM3ERSPPS      equ	597	;# 
 10125   000256                     PWM4ERSPPS      equ	598	;# 
 10126   000257                     PWMIN0PPS       equ	599	;# 
 10127   000258                     PWMIN1PPS       equ	600	;# 
 10128   000259                     SMT1WINPPS      equ	601	;# 
 10129   00025A                     SMT1SIGPPS      equ	602	;# 
 10130   00025B                     CWG1PPS         equ	603	;# 
 10131   00025B                     CWG1INPPS       equ	603	;# 
 10132   00025C                     CWG2PPS         equ	604	;# 
 10133   00025C                     CWG2INPPS       equ	604	;# 
 10134   00025D                     CWG3PPS         equ	605	;# 
 10135   00025D                     CWG3INPPS       equ	605	;# 
 10136   00025E                     MD1CARLPPS      equ	606	;# 
 10137   00025E                     MDCARLPPS       equ	606	;# 
 10138   00025F                     MD1CARHPPS      equ	607	;# 
 10139   00025F                     MDCARHPPS       equ	607	;# 
 10140   000260                     MD1SRCPPS       equ	608	;# 
 10141   000260                     MDSRCPPS        equ	608	;# 
 10142   000261                     CLCIN0PPS       equ	609	;# 
 10143   000262                     CLCIN1PPS       equ	610	;# 
 10144   000263                     CLCIN2PPS       equ	611	;# 
 10145   000264                     CLCIN3PPS       equ	612	;# 
 10146   000265                     CLCIN4PPS       equ	613	;# 
 10147   000266                     CLCIN5PPS       equ	614	;# 
 10148   000267                     CLCIN6PPS       equ	615	;# 
 10149   000268                     CLCIN7PPS       equ	616	;# 
 10150   000269                     ADACTPPS        equ	617	;# 
 10151   00026A                     SPI1SCKPPS      equ	618	;# 
 10152   00026B                     SPI1SDIPPS      equ	619	;# 
 10153   00026C                     SPI1SSPPS       equ	620	;# 
 10154   00026D                     SPI2SCKPPS      equ	621	;# 
 10155   00026E                     SPI2SDIPPS      equ	622	;# 
 10156   00026F                     SPI2SSPPS       equ	623	;# 
 10157   000270                     I2C1SDAPPS      equ	624	;# 
 10158   000271                     I2C1SCLPPS      equ	625	;# 
 10159   000272                     U1RXPPS         equ	626	;# 
 10160   000273                     U1CTSPPS        equ	627	;# 
 10161   000274                     U2RXPPS         equ	628	;# 
 10162   000275                     U2CTSPPS        equ	629	;# 
 10163   000276                     U3RXPPS         equ	630	;# 
 10164   000277                     U3CTSPPS        equ	631	;# 
 10165   000278                     U4RXPPS         equ	632	;# 
 10166   000279                     U4CTSPPS        equ	633	;# 
 10167   00027A                     U5RXPPS         equ	634	;# 
 10168   00027B                     U5CTSPPS        equ	635	;# 
 10169   000286                     RC4I2C          equ	646	;# 
 10170   000287                     RC3I2C          equ	647	;# 
 10171   000288                     RB2I2C          equ	648	;# 
 10172   000289                     RB1I2C          equ	649	;# 
 10173   00028A                     I2C1RXB         equ	650	;# 
 10174   00028B                     I2C1TXB         equ	651	;# 
 10175   00028C                     I2C1CNTL        equ	652	;# 
 10176   00028D                     I2C1CNTH        equ	653	;# 
 10177   00028E                     I2C1ADB0        equ	654	;# 
 10178   00028F                     I2C1ADB1        equ	655	;# 
 10179   000290                     I2C1ADR0        equ	656	;# 
 10180   000291                     I2C1ADR1        equ	657	;# 
 10181   000292                     I2C1ADR2        equ	658	;# 
 10182   000293                     I2C1ADR3        equ	659	;# 
 10183   000294                     I2C1CON0        equ	660	;# 
 10184   000295                     I2C1CON1        equ	661	;# 
 10185   000296                     I2C1CON2        equ	662	;# 
 10186   000297                     I2C1ERR         equ	663	;# 
 10187   000298                     I2C1STAT0       equ	664	;# 
 10188   000299                     I2C1STAT1       equ	665	;# 
 10189   00029A                     I2C1PIR         equ	666	;# 
 10190   00029B                     I2C1PIE         equ	667	;# 
 10191   00029C                     I2C1BTO         equ	668	;# 
 10192   00029D                     I2C1BAUD        equ	669	;# 
 10193   00029E                     I2C1CLK         equ	670	;# 
 10194   00029F                     I2C1BTOC        equ	671	;# 
 10195   0002A1                     U1RXB           equ	673	;# 
 10196   0002A1                     U1RXBL          equ	673	;# 
 10197   0002A2                     U1RXCHK         equ	674	;# 
 10198   0002A3                     U1TXB           equ	675	;# 
 10199   0002A3                     U1TXBL          equ	675	;# 
 10200   0002A4                     U1TXCHK         equ	676	;# 
 10201   0002A5                     U1P1            equ	677	;# 
 10202   0002A5                     U1P1L           equ	677	;# 
 10203   0002A6                     U1P1H           equ	678	;# 
 10204   0002A7                     U1P2            equ	679	;# 
 10205   0002A7                     U1P2L           equ	679	;# 
 10206   0002A8                     U1P2H           equ	680	;# 
 10207   0002A9                     U1P3            equ	681	;# 
 10208   0002A9                     U1P3L           equ	681	;# 
 10209   0002AA                     U1P3H           equ	682	;# 
 10210   0002AB                     U1CON0          equ	683	;# 
 10211   0002AC                     U1CON1          equ	684	;# 
 10212   0002AD                     U1CON2          equ	685	;# 
 10213   0002AE                     U1BRG           equ	686	;# 
 10214   0002AE                     U1BRGL          equ	686	;# 
 10215   0002AF                     U1BRGH          equ	687	;# 
 10216   0002B0                     U1FIFO          equ	688	;# 
 10217   0002B1                     U1UIR           equ	689	;# 
 10218   0002B2                     U1ERRIR         equ	690	;# 
 10219   0002B3                     U1ERRIE         equ	691	;# 
 10220   0002B4                     U2RXB           equ	692	;# 
 10221   0002B4                     U2RXBL          equ	692	;# 
 10222   0002B5                     U2RXCHK         equ	693	;# 
 10223   0002B6                     U2TXB           equ	694	;# 
 10224   0002B6                     U2TXBL          equ	694	;# 
 10225   0002B7                     U2TXCHK         equ	695	;# 
 10226   0002B8                     U2P1            equ	696	;# 
 10227   0002B8                     U2P1L           equ	696	;# 
 10228   0002B9                     U2P1H           equ	697	;# 
 10229   0002BA                     U2P2            equ	698	;# 
 10230   0002BA                     U2P2L           equ	698	;# 
 10231   0002BB                     U2P2H           equ	699	;# 
 10232   0002BC                     U2P3            equ	700	;# 
 10233   0002BC                     U2P3L           equ	700	;# 
 10234   0002BD                     U2P3H           equ	701	;# 
 10235   0002BE                     U2CON0          equ	702	;# 
 10236   0002BF                     U2CON1          equ	703	;# 
 10237   0002C0                     U2CON2          equ	704	;# 
 10238   0002C1                     U2BRG           equ	705	;# 
 10239   0002C1                     U2BRGL          equ	705	;# 
 10240   0002C2                     U2BRGH          equ	706	;# 
 10241   0002C3                     U2FIFO          equ	707	;# 
 10242   0002C4                     U2UIR           equ	708	;# 
 10243   0002C5                     U2ERRIR         equ	709	;# 
 10244   0002C6                     U2ERRIE         equ	710	;# 
 10245   0002C7                     U3RXB           equ	711	;# 
 10246   0002C7                     U3RXBL          equ	711	;# 
 10247   0002C9                     U3TXB           equ	713	;# 
 10248   0002C9                     U3TXBL          equ	713	;# 
 10249   0002CB                     U3P1            equ	715	;# 
 10250   0002CB                     U3P1L           equ	715	;# 
 10251   0002CD                     U3P2            equ	717	;# 
 10252   0002CD                     U3P2L           equ	717	;# 
 10253   0002CF                     U3P3            equ	719	;# 
 10254   0002CF                     U3P3L           equ	719	;# 
 10255   0002D1                     U3CON0          equ	721	;# 
 10256   0002D2                     U3CON1          equ	722	;# 
 10257   0002D3                     U3CON2          equ	723	;# 
 10258   0002D4                     U3BRG           equ	724	;# 
 10259   0002D4                     U3BRGL          equ	724	;# 
 10260   0002D5                     U3BRGH          equ	725	;# 
 10261   0002D6                     U3FIFO          equ	726	;# 
 10262   0002D7                     U3UIR           equ	727	;# 
 10263   0002D8                     U3ERRIR         equ	728	;# 
 10264   0002D9                     U3ERRIE         equ	729	;# 
 10265   0002DA                     U4RXB           equ	730	;# 
 10266   0002DA                     U4RXBL          equ	730	;# 
 10267   0002DC                     U4TXB           equ	732	;# 
 10268   0002DC                     U4TXBL          equ	732	;# 
 10269   0002DE                     U4P1            equ	734	;# 
 10270   0002DE                     U4P1L           equ	734	;# 
 10271   0002E0                     U4P2            equ	736	;# 
 10272   0002E0                     U4P2L           equ	736	;# 
 10273   0002E2                     U4P3            equ	738	;# 
 10274   0002E2                     U4P3L           equ	738	;# 
 10275   0002E4                     U4CON0          equ	740	;# 
 10276   0002E5                     U4CON1          equ	741	;# 
 10277   0002E6                     U4CON2          equ	742	;# 
 10278   0002E7                     U4BRG           equ	743	;# 
 10279   0002E7                     U4BRGL          equ	743	;# 
 10280   0002E8                     U4BRGH          equ	744	;# 
 10281   0002E9                     U4FIFO          equ	745	;# 
 10282   0002EA                     U4UIR           equ	746	;# 
 10283   0002EB                     U4ERRIR         equ	747	;# 
 10284   0002EC                     U4ERRIE         equ	748	;# 
 10285   0002ED                     U5RXB           equ	749	;# 
 10286   0002ED                     U5RXBL          equ	749	;# 
 10287   0002EF                     U5TXB           equ	751	;# 
 10288   0002EF                     U5TXBL          equ	751	;# 
 10289   0002F1                     U5P1            equ	753	;# 
 10290   0002F1                     U5P1L           equ	753	;# 
 10291   0002F3                     U5P2            equ	755	;# 
 10292   0002F3                     U5P2L           equ	755	;# 
 10293   0002F5                     U5P3            equ	757	;# 
 10294   0002F5                     U5P3L           equ	757	;# 
 10295   0002F7                     U5CON0          equ	759	;# 
 10296   0002F8                     U5CON1          equ	760	;# 
 10297   0002F9                     U5CON2          equ	761	;# 
 10298   0002FA                     U5BRG           equ	762	;# 
 10299   0002FA                     U5BRGL          equ	762	;# 
 10300   0002FB                     U5BRGH          equ	763	;# 
 10301   0002FC                     U5FIFO          equ	764	;# 
 10302   0002FD                     U5UIR           equ	765	;# 
 10303   0002FE                     U5ERRIR         equ	766	;# 
 10304   0002FF                     U5ERRIE         equ	767	;# 
 10305   000300                     SMT1TMR         equ	768	;# 
 10306   000300                     SMT1TMRL        equ	768	;# 
 10307   000301                     SMT1TMRH        equ	769	;# 
 10308   000302                     SMT1TMRU        equ	770	;# 
 10309   000303                     SMT1CPR         equ	771	;# 
 10310   000303                     SMT1CPRL        equ	771	;# 
 10311   000304                     SMT1CPRH        equ	772	;# 
 10312   000305                     SMT1CPRU        equ	773	;# 
 10313   000306                     SMT1CPW         equ	774	;# 
 10314   000306                     SMT1CPWL        equ	774	;# 
 10315   000307                     SMT1CPWH        equ	775	;# 
 10316   000308                     SMT1CPWU        equ	776	;# 
 10317   000309                     SMT1PR          equ	777	;# 
 10318   000309                     SMT1PRL         equ	777	;# 
 10319   00030A                     SMT1PRH         equ	778	;# 
 10320   00030B                     SMT1PRU         equ	779	;# 
 10321   00030C                     SMT1CON0        equ	780	;# 
 10322   00030D                     SMT1CON1        equ	781	;# 
 10323   00030E                     SMT1STAT        equ	782	;# 
 10324   00030F                     SMT1CLK         equ	783	;# 
 10325   000310                     SMT1SIG         equ	784	;# 
 10326   000311                     SMT1WIN         equ	785	;# 
 10327   000318                     TMR0L           equ	792	;# 
 10328   000318                     TMR0            equ	792	;# 
 10329   000319                     TMR0H           equ	793	;# 
 10330   000319                     PR0             equ	793	;# 
 10331   00031A                     T0CON0          equ	794	;# 
 10332   00031B                     T0CON1          equ	795	;# 
 10333   00031C                     TMR1            equ	796	;# 
 10334   00031C                     TMR1L           equ	796	;# 
 10335   00031D                     TMR1H           equ	797	;# 
 10336   00031E                     T1CON           equ	798	;# 
 10337   00031E                     TMR1CON         equ	798	;# 
 10338   00031F                     T1GCON          equ	799	;# 
 10339   00031F                     TMR1GCON        equ	799	;# 
 10340   000320                     T1GATE          equ	800	;# 
 10341   000320                     TMR1GATE        equ	800	;# 
 10342   000321                     T1CLK           equ	801	;# 
 10343   000321                     TMR1CLK         equ	801	;# 
 10344   000321                     PR1             equ	801	;# 
 10345   000322                     T2TMR           equ	802	;# 
 10346   000322                     TMR2            equ	802	;# 
 10347   000323                     T2PR            equ	803	;# 
 10348   000323                     PR2             equ	803	;# 
 10349   000324                     T2CON           equ	804	;# 
 10350   000325                     T2HLT           equ	805	;# 
 10351   000326                     T2CLKCON        equ	806	;# 
 10352   000326                     T2CLK           equ	806	;# 
 10353   000327                     T2RST           equ	807	;# 
 10354   000328                     TMR3            equ	808	;# 
 10355   000328                     TMR3L           equ	808	;# 
 10356   000329                     TMR3H           equ	809	;# 
 10357   00032A                     T3CON           equ	810	;# 
 10358   00032A                     TMR3CON         equ	810	;# 
 10359   00032B                     T3GCON          equ	811	;# 
 10360   00032B                     TMR3GCON        equ	811	;# 
 10361   00032C                     T3GATE          equ	812	;# 
 10362   00032C                     TMR3GATE        equ	812	;# 
 10363   00032D                     T3CLK           equ	813	;# 
 10364   00032D                     TMR3CLK         equ	813	;# 
 10365   00032D                     PR3             equ	813	;# 
 10366   00032E                     T4TMR           equ	814	;# 
 10367   00032E                     TMR4            equ	814	;# 
 10368   00032F                     T4PR            equ	815	;# 
 10369   00032F                     PR4             equ	815	;# 
 10370   000330                     T4CON           equ	816	;# 
 10371   000331                     T4HLT           equ	817	;# 
 10372   000332                     T4CLKCON        equ	818	;# 
 10373   000332                     T4CLK           equ	818	;# 
 10374   000333                     T4RST           equ	819	;# 
 10375   000334                     TMR5            equ	820	;# 
 10376   000334                     TMR5L           equ	820	;# 
 10377   000335                     TMR5H           equ	821	;# 
 10378   000336                     T5CON           equ	822	;# 
 10379   000336                     TMR5CON         equ	822	;# 
 10380   000337                     T5GCON          equ	823	;# 
 10381   000337                     TMR5GCON        equ	823	;# 
 10382   000338                     T5GATE          equ	824	;# 
 10383   000338                     TMR5GATE        equ	824	;# 
 10384   000339                     T5CLK           equ	825	;# 
 10385   000339                     TMR5CLK         equ	825	;# 
 10386   000339                     PR5             equ	825	;# 
 10387   00033A                     T6TMR           equ	826	;# 
 10388   00033A                     TMR6            equ	826	;# 
 10389   00033B                     T6PR            equ	827	;# 
 10390   00033B                     PR6             equ	827	;# 
 10391   00033C                     T6CON           equ	828	;# 
 10392   00033D                     T6HLT           equ	829	;# 
 10393   00033E                     T6CLKCON        equ	830	;# 
 10394   00033E                     T6CLK           equ	830	;# 
 10395   00033F                     T6RST           equ	831	;# 
 10396   000340                     CCPR1           equ	832	;# 
 10397   000340                     CCPR1L          equ	832	;# 
 10398   000341                     CCPR1H          equ	833	;# 
 10399   000342                     CCP1CON         equ	834	;# 
 10400   000343                     CCP1CAP         equ	835	;# 
 10401   000344                     CCPR2           equ	836	;# 
 10402   000344                     CCPR2L          equ	836	;# 
 10403   000345                     CCPR2H          equ	837	;# 
 10404   000346                     CCP2CON         equ	838	;# 
 10405   000347                     CCP2CAP         equ	839	;# 
 10406   000348                     CCPR3           equ	840	;# 
 10407   000348                     CCPR3L          equ	840	;# 
 10408   000349                     CCPR3H          equ	841	;# 
 10409   00034A                     CCP3CON         equ	842	;# 
 10410   00034B                     CCP3CAP         equ	843	;# 
 10411   00034C                     CCPTMRS0        equ	844	;# 
 10412   00034F                     CRCDATA         equ	847	;# 
 10413   00034F                     CRCDATAL        equ	847	;# 
 10414   000350                     CRCDATAH        equ	848	;# 
 10415   000351                     CRCDATAU        equ	849	;# 
 10416   000352                     CRCDATAT        equ	850	;# 
 10417   000353                     CRCOUT          equ	851	;# 
 10418   000353                     CRCSHFT         equ	851	;# 
 10419   000353                     CRCXOR          equ	851	;# 
 10420   000353                     CRCOUTL         equ	851	;# 
 10421   000353                     CRCSHFTL        equ	851	;# 
 10422   000353                     CRCSHIFTL       equ	851	;# 
 10423   000353                     CRCXORL         equ	851	;# 
 10424   000354                     CRCOUTH         equ	852	;# 
 10425   000354                     CRCSHFTH        equ	852	;# 
 10426   000354                     CRCSHIFTH       equ	852	;# 
 10427   000354                     CRCXORH         equ	852	;# 
 10428   000355                     CRCOUTU         equ	853	;# 
 10429   000355                     CRCSHFTU        equ	853	;# 
 10430   000355                     CRCSHIFTU       equ	853	;# 
 10431   000355                     CRCXORU         equ	853	;# 
 10432   000356                     CRCOUTT         equ	854	;# 
 10433   000356                     CRCSHFTT        equ	854	;# 
 10434   000356                     CRCSHIFTT       equ	854	;# 
 10435   000356                     CRCXORT         equ	854	;# 
 10436   000357                     CRCCON0         equ	855	;# 
 10437   000358                     CRCCON1         equ	856	;# 
 10438   000359                     CRCCON2         equ	857	;# 
 10439   00035A                     SCANLADR        equ	858	;# 
 10440   00035A                     SCANLADRL       equ	858	;# 
 10441   00035B                     SCANLADRH       equ	859	;# 
 10442   00035C                     SCANLADRU       equ	860	;# 
 10443   00035D                     SCANHADR        equ	861	;# 
 10444   00035D                     SCANHADRL       equ	861	;# 
 10445   00035E                     SCANHADRH       equ	862	;# 
 10446   00035F                     SCANHADRU       equ	863	;# 
 10447   000360                     SCANCON0        equ	864	;# 
 10448   000361                     SCANTRIG        equ	865	;# 
 10449   000362                     IPR0            equ	866	;# 
 10450   000363                     IPR1            equ	867	;# 
 10451   000364                     IPR2            equ	868	;# 
 10452   000365                     IPR3            equ	869	;# 
 10453   000366                     IPR4            equ	870	;# 
 10454   000367                     IPR5            equ	871	;# 
 10455   000368                     IPR6            equ	872	;# 
 10456   000369                     IPR7            equ	873	;# 
 10457   00036A                     IPR8            equ	874	;# 
 10458   00036B                     IPR9            equ	875	;# 
 10459   00036C                     IPR10           equ	876	;# 
 10460   00036D                     IPR11           equ	877	;# 
 10461   00036E                     IPR12           equ	878	;# 
 10462   00036F                     IPR13           equ	879	;# 
 10463   000370                     IPR14           equ	880	;# 
 10464   000371                     IPR15           equ	881	;# 
 10465   000373                     STATUS_CSHAD    equ	883	;# 
 10466   000374                     WREG_CSHAD      equ	884	;# 
 10467   000375                     BSR_CSHAD       equ	885	;# 
 10468   000376                     SHADCON         equ	886	;# 
 10469   000377                     STATUS_SHAD     equ	887	;# 
 10470   000378                     WREG_SHAD       equ	888	;# 
 10471   000379                     BSR_SHAD        equ	889	;# 
 10472   00037A                     PCLATH_SHAD     equ	890	;# 
 10473   00037B                     PCLATU_SHAD     equ	891	;# 
 10474   00037C                     FSR0SH          equ	892	;# 
 10475   00037C                     FSR0L_SHAD      equ	892	;# 
 10476   00037D                     FSR0H_SHAD      equ	893	;# 
 10477   00037E                     FSR1SH          equ	894	;# 
 10478   00037E                     FSR1L_SHAD      equ	894	;# 
 10479   00037F                     FSR1H_SHAD      equ	895	;# 
 10480   000380                     FSR2SH          equ	896	;# 
 10481   000380                     FSR2L_SHAD      equ	896	;# 
 10482   000381                     FSR2H_SHAD      equ	897	;# 
 10483   000382                     PRODSH          equ	898	;# 
 10484   000382                     PRODL_SHAD      equ	898	;# 
 10485   000383                     PRODH_SHAD      equ	899	;# 
 10486   000387                     TU16ACON0       equ	903	;# 
 10487   000388                     TU16ACON1       equ	904	;# 
 10488   000389                     TU16AHLT        equ	905	;# 
 10489   00038A                     TU16APS         equ	906	;# 
 10490   00038B                     TU16ATMR        equ	907	;# 
 10491   00038B                     TU16ACR         equ	907	;# 
 10492   00038B                     TU16ATMRL       equ	907	;# 
 10493   00038B                     TU16ACRL        equ	907	;# 
 10494   00038C                     TU16ATMRH       equ	908	;# 
 10495   00038C                     TU16ACRH        equ	908	;# 
 10496   00038D                     TU16APR         equ	909	;# 
 10497   00038D                     TU16APRL        equ	909	;# 
 10498   00038E                     TU16APRH        equ	910	;# 
 10499   00038F                     TU16ACLK        equ	911	;# 
 10500   000390                     TU16AERS        equ	912	;# 
 10501   000393                     TU16BCON0       equ	915	;# 
 10502   000394                     TU16BCON1       equ	916	;# 
 10503   000395                     TU16BHLT        equ	917	;# 
 10504   000396                     TU16BPS         equ	918	;# 
 10505   000397                     TU16BTMR        equ	919	;# 
 10506   000397                     TU16BCR         equ	919	;# 
 10507   000397                     TU16BTMRL       equ	919	;# 
 10508   000397                     TU16BCRL        equ	919	;# 
 10509   000398                     TU16BTMRH       equ	920	;# 
 10510   000398                     TU16BCRH        equ	920	;# 
 10511   000399                     TU16BPR         equ	921	;# 
 10512   000399                     TU16BPRL        equ	921	;# 
 10513   00039A                     TU16BPRH        equ	922	;# 
 10514   00039B                     TU16BCLK        equ	923	;# 
 10515   00039C                     TU16BERS        equ	924	;# 
 10516   0003BB                     TUCHAIN         equ	955	;# 
 10517   0003BC                     CWG1CLK         equ	956	;# 
 10518   0003BC                     CWG1CLKCON      equ	956	;# 
 10519   0003BD                     CWG1ISM         equ	957	;# 
 10520   0003BE                     CWG1DBR         equ	958	;# 
 10521   0003BF                     CWG1DBF         equ	959	;# 
 10522   0003C0                     CWG1CON0        equ	960	;# 
 10523   0003C1                     CWG1CON1        equ	961	;# 
 10524   0003C2                     CWG1AS0         equ	962	;# 
 10525   0003C3                     CWG1AS1         equ	963	;# 
 10526   0003C4                     CWG1STR         equ	964	;# 
 10527   0003C5                     CWG2CLK         equ	965	;# 
 10528   0003C5                     CWG2CLKCON      equ	965	;# 
 10529   0003C6                     CWG2ISM         equ	966	;# 
 10530   0003C7                     CWG2DBR         equ	967	;# 
 10531   0003C8                     CWG2DBF         equ	968	;# 
 10532   0003C9                     CWG2CON0        equ	969	;# 
 10533   0003CA                     CWG2CON1        equ	970	;# 
 10534   0003CB                     CWG2AS0         equ	971	;# 
 10535   0003CC                     CWG2AS1         equ	972	;# 
 10536   0003CD                     CWG2STR         equ	973	;# 
 10537   0003CE                     CWG3CLK         equ	974	;# 
 10538   0003CE                     CWG3CLKCON      equ	974	;# 
 10539   0003CF                     CWG3ISM         equ	975	;# 
 10540   0003D0                     CWG3DBR         equ	976	;# 
 10541   0003D1                     CWG3DBF         equ	977	;# 
 10542   0003D2                     CWG3CON0        equ	978	;# 
 10543   0003D3                     CWG3CON1        equ	979	;# 
 10544   0003D4                     CWG3AS0         equ	980	;# 
 10545   0003D5                     CWG3AS1         equ	981	;# 
 10546   0003D6                     CWG3STR         equ	982	;# 
 10547   0003D7                     FVRCON          equ	983	;# 
 10548   0003D8                     ADCPCON         equ	984	;# 
 10549   0003D8                     ADCP            equ	984	;# 
 10550   0003D9                     ADLTH           equ	985	;# 
 10551   0003D9                     ADLTHL          equ	985	;# 
 10552   0003DA                     ADLTHH          equ	986	;# 
 10553   0003DB                     ADUTH           equ	987	;# 
 10554   0003DB                     ADUTHL          equ	987	;# 
 10555   0003DC                     ADUTHH          equ	988	;# 
 10556   0003DD                     ADERR           equ	989	;# 
 10557   0003DD                     ADERRL          equ	989	;# 
 10558   0003DE                     ADERRH          equ	990	;# 
 10559   0003DF                     ADSTPT          equ	991	;# 
 10560   0003DF                     ADSTPTL         equ	991	;# 
 10561   0003E0                     ADSTPTH         equ	992	;# 
 10562   0003E1                     ADFLTR          equ	993	;# 
 10563   0003E1                     ADFLTRL         equ	993	;# 
 10564   0003E2                     ADFLTRH         equ	994	;# 
 10565   0003E3                     ADACC           equ	995	;# 
 10566   0003E3                     ADACCL          equ	995	;# 
 10567   0003E4                     ADACCH          equ	996	;# 
 10568   0003E5                     ADACCU          equ	997	;# 
 10569   0003E6                     ADCNT           equ	998	;# 
 10570   0003E7                     ADRPT           equ	999	;# 
 10571   0003E8                     ADPREV          equ	1000	;# 
 10572   0003E8                     ADPREVL         equ	1000	;# 
 10573   0003E9                     ADPREVH         equ	1001	;# 
 10574   0003EA                     ADRES           equ	1002	;# 
 10575   0003EA                     ADRESL          equ	1002	;# 
 10576   0003EB                     ADRESH          equ	1003	;# 
 10577   0003EC                     ADPCH           equ	1004	;# 
 10578   0003EE                     ADACQ           equ	1006	;# 
 10579   0003EE                     ADACQL          equ	1006	;# 
 10580   0003EF                     ADACQH          equ	1007	;# 
 10581   0003F0                     ADCAP           equ	1008	;# 
 10582   0003F1                     ADPRE           equ	1009	;# 
 10583   0003F1                     ADPREL          equ	1009	;# 
 10584   0003F2                     ADPREH          equ	1010	;# 
 10585   0003F3                     ADCON0          equ	1011	;# 
 10586   0003F4                     ADCON1          equ	1012	;# 
 10587   0003F5                     ADCON2          equ	1013	;# 
 10588   0003F6                     ADCON3          equ	1014	;# 
 10589   0003F7                     ADSTAT          equ	1015	;# 
 10590   0003F8                     ADREF           equ	1016	;# 
 10591   0003F9                     ADACT           equ	1017	;# 
 10592   0003FA                     ADCLK           equ	1018	;# 
 10593   0003FB                     ADCTX           equ	1019	;# 
 10594   0003FC                     ADCSEL1         equ	1020	;# 
 10595   0003FD                     ADCSEL2         equ	1021	;# 
 10596   0003FE                     ADCSEL3         equ	1022	;# 
 10597   0003FF                     ADCSEL4         equ	1023	;# 
 10598   000400                     ANSELA          equ	1024	;# 
 10599   000401                     WPUA            equ	1025	;# 
 10600   000402                     ODCONA          equ	1026	;# 
 10601   000403                     SLRCONA         equ	1027	;# 
 10602   000404                     INLVLA          equ	1028	;# 
 10603   000405                     IOCAP           equ	1029	;# 
 10604   000406                     IOCAN           equ	1030	;# 
 10605   000407                     IOCAF           equ	1031	;# 
 10606   000408                     ANSELB          equ	1032	;# 
 10607   000409                     WPUB            equ	1033	;# 
 10608   00040A                     ODCONB          equ	1034	;# 
 10609   00040B                     SLRCONB         equ	1035	;# 
 10610   00040C                     INLVLB          equ	1036	;# 
 10611   00040D                     IOCBP           equ	1037	;# 
 10612   00040E                     IOCBN           equ	1038	;# 
 10613   00040F                     IOCBF           equ	1039	;# 
 10614   000410                     ANSELC          equ	1040	;# 
 10615   000411                     WPUC            equ	1041	;# 
 10616   000412                     ODCONC          equ	1042	;# 
 10617   000413                     SLRCONC         equ	1043	;# 
 10618   000414                     INLVLC          equ	1044	;# 
 10619   000415                     IOCCP           equ	1045	;# 
 10620   000416                     IOCCN           equ	1046	;# 
 10621   000417                     IOCCF           equ	1047	;# 
 10622   000421                     WPUE            equ	1057	;# 
 10623   000424                     INLVLE          equ	1060	;# 
 10624   000425                     IOCEP           equ	1061	;# 
 10625   000426                     IOCEN           equ	1062	;# 
 10626   000427                     IOCEF           equ	1063	;# 
 10627   000440                     NCO1ACC         equ	1088	;# 
 10628   000440                     NCO1ACCL        equ	1088	;# 
 10629   000441                     NCO1ACCH        equ	1089	;# 
 10630   000442                     NCO1ACCU        equ	1090	;# 
 10631   000443                     NCO1INC         equ	1091	;# 
 10632   000443                     NCO1INCL        equ	1091	;# 
 10633   000444                     NCO1INCH        equ	1092	;# 
 10634   000445                     NCO1INCU        equ	1093	;# 
 10635   000446                     NCO1CON         equ	1094	;# 
 10636   000447                     NCO1CLK         equ	1095	;# 
 10637   000448                     NCO2ACC         equ	1096	;# 
 10638   000448                     NCO2ACCL        equ	1096	;# 
 10639   000449                     NCO2ACCH        equ	1097	;# 
 10640   00044A                     NCO2ACCU        equ	1098	;# 
 10641   00044B                     NCO2INC         equ	1099	;# 
 10642   00044B                     NCO2INCL        equ	1099	;# 
 10643   00044C                     NCO2INCH        equ	1100	;# 
 10644   00044D                     NCO2INCU        equ	1101	;# 
 10645   00044E                     NCO2CON         equ	1102	;# 
 10646   00044F                     NCO2CLK         equ	1103	;# 
 10647   000450                     NCO3ACC         equ	1104	;# 
 10648   000450                     NCO3ACCL        equ	1104	;# 
 10649   000451                     NCO3ACCH        equ	1105	;# 
 10650   000452                     NCO3ACCU        equ	1106	;# 
 10651   000453                     NCO3INC         equ	1107	;# 
 10652   000453                     NCO3INCL        equ	1107	;# 
 10653   000454                     NCO3INCH        equ	1108	;# 
 10654   000455                     NCO3INCU        equ	1109	;# 
 10655   000456                     NCO3CON         equ	1110	;# 
 10656   000457                     NCO3CLK         equ	1111	;# 
 10657   000458                     FSCMCON         equ	1112	;# 
 10658   000459                     IVTLOCK         equ	1113	;# 
 10659   00045A                     IVTAD           equ	1114	;# 
 10660   00045A                     IVTADL          equ	1114	;# 
 10661   00045B                     IVTADH          equ	1115	;# 
 10662   00045C                     IVTADU          equ	1116	;# 
 10663   00045D                     IVTBASE         equ	1117	;# 
 10664   00045D                     IVTBASEL        equ	1117	;# 
 10665   00045E                     IVTBASEH        equ	1118	;# 
 10666   00045F                     IVTBASEU        equ	1119	;# 
 10667   000460                     PWM1ERS         equ	1120	;# 
 10668   000461                     PWM1CLK         equ	1121	;# 
 10669   000462                     PWM1LDS         equ	1122	;# 
 10670   000463                     PWM1PR          equ	1123	;# 
 10671   000463                     PWM1PRL         equ	1123	;# 
 10672   000464                     PWM1PRH         equ	1124	;# 
 10673   000465                     PWM1CPRE        equ	1125	;# 
 10674   000466                     PWM1PIPOS       equ	1126	;# 
 10675   000467                     PWM1GIR         equ	1127	;# 
 10676   000468                     PWM1GIE         equ	1128	;# 
 10677   000469                     PWM1CON         equ	1129	;# 
 10678   00046A                     PWM1S1CFG       equ	1130	;# 
 10679   00046B                     PWM1S1P1        equ	1131	;# 
 10680   00046B                     PWM1S1P1L       equ	1131	;# 
 10681   00046C                     PWM1S1P1H       equ	1132	;# 
 10682   00046D                     PWM1S1P2        equ	1133	;# 
 10683   00046D                     PWM1S1P2L       equ	1133	;# 
 10684   00046E                     PWM1S1P2H       equ	1134	;# 
 10685   00046F                     PWM2ERS         equ	1135	;# 
 10686   000470                     PWM2CLK         equ	1136	;# 
 10687   000471                     PWM2LDS         equ	1137	;# 
 10688   000472                     PWM2PR          equ	1138	;# 
 10689   000472                     PWM2PRL         equ	1138	;# 
 10690   000473                     PWM2PRH         equ	1139	;# 
 10691   000474                     PWM2CPRE        equ	1140	;# 
 10692   000475                     PWM2PIPOS       equ	1141	;# 
 10693   000476                     PWM2GIR         equ	1142	;# 
 10694   000477                     PWM2GIE         equ	1143	;# 
 10695   000478                     PWM2CON         equ	1144	;# 
 10696   000479                     PWM2S1CFG       equ	1145	;# 
 10697   00047A                     PWM2S1P1        equ	1146	;# 
 10698   00047A                     PWM2S1P1L       equ	1146	;# 
 10699   00047B                     PWM2S1P1H       equ	1147	;# 
 10700   00047C                     PWM2S1P2        equ	1148	;# 
 10701   00047C                     PWM2S1P2L       equ	1148	;# 
 10702   00047D                     PWM2S1P2H       equ	1149	;# 
 10703   00047E                     PWM3ERS         equ	1150	;# 
 10704   00047F                     PWM3CLK         equ	1151	;# 
 10705   000480                     PWM3LDS         equ	1152	;# 
 10706   000481                     PWM3PR          equ	1153	;# 
 10707   000481                     PWM3PRL         equ	1153	;# 
 10708   000482                     PWM3PRH         equ	1154	;# 
 10709   000483                     PWM3CPRE        equ	1155	;# 
 10710   000484                     PWM3PIPOS       equ	1156	;# 
 10711   000485                     PWM3GIR         equ	1157	;# 
 10712   000486                     PWM3GIE         equ	1158	;# 
 10713   000487                     PWM3CON         equ	1159	;# 
 10714   000488                     PWM3S1CFG       equ	1160	;# 
 10715   000489                     PWM3S1P1        equ	1161	;# 
 10716   000489                     PWM3S1P1L       equ	1161	;# 
 10717   00048A                     PWM3S1P1H       equ	1162	;# 
 10718   00048B                     PWM3S1P2        equ	1163	;# 
 10719   00048B                     PWM3S1P2L       equ	1163	;# 
 10720   00048C                     PWM3S1P2H       equ	1164	;# 
 10721   00048D                     PWM4ERS         equ	1165	;# 
 10722   00048E                     PWM4CLK         equ	1166	;# 
 10723   00048F                     PWM4LDS         equ	1167	;# 
 10724   000490                     PWM4PR          equ	1168	;# 
 10725   000490                     PWM4PRL         equ	1168	;# 
 10726   000491                     PWM4PRH         equ	1169	;# 
 10727   000492                     PWM4CPRE        equ	1170	;# 
 10728   000493                     PWM4PIPOS       equ	1171	;# 
 10729   000494                     PWM4GIR         equ	1172	;# 
 10730   000495                     PWM4GIE         equ	1173	;# 
 10731   000496                     PWM4CON         equ	1174	;# 
 10732   000497                     PWM4S1CFG       equ	1175	;# 
 10733   000498                     PWM4S1P1        equ	1176	;# 
 10734   000498                     PWM4S1P1L       equ	1176	;# 
 10735   000499                     PWM4S1P1H       equ	1177	;# 
 10736   00049A                     PWM4S1P2        equ	1178	;# 
 10737   00049A                     PWM4S1P2L       equ	1178	;# 
 10738   00049B                     PWM4S1P2H       equ	1179	;# 
 10739   00049C                     PWMLOAD         equ	1180	;# 
 10740   00049D                     PWMEN           equ	1181	;# 
 10741   00049E                     PIE0            equ	1182	;# 
 10742   00049F                     PIE1            equ	1183	;# 
 10743   0004A0                     PIE2            equ	1184	;# 
 10744   0004A1                     PIE3            equ	1185	;# 
 10745   0004A2                     PIE4            equ	1186	;# 
 10746   0004A3                     PIE5            equ	1187	;# 
 10747   0004A4                     PIE6            equ	1188	;# 
 10748   0004A5                     PIE7            equ	1189	;# 
 10749   0004A6                     PIE8            equ	1190	;# 
 10750   0004A7                     PIE9            equ	1191	;# 
 10751   0004A8                     PIE10           equ	1192	;# 
 10752   0004A9                     PIE11           equ	1193	;# 
 10753   0004AA                     PIE12           equ	1194	;# 
 10754   0004AB                     PIE13           equ	1195	;# 
 10755   0004AC                     PIE14           equ	1196	;# 
 10756   0004AD                     PIE15           equ	1197	;# 
 10757   0004AE                     PIR0            equ	1198	;# 
 10758   0004AF                     PIR1            equ	1199	;# 
 10759   0004B0                     PIR2            equ	1200	;# 
 10760   0004B1                     PIR3            equ	1201	;# 
 10761   0004B2                     PIR4            equ	1202	;# 
 10762   0004B3                     PIR5            equ	1203	;# 
 10763   0004B4                     PIR6            equ	1204	;# 
 10764   0004B5                     PIR7            equ	1205	;# 
 10765   0004B6                     PIR8            equ	1206	;# 
 10766   0004B7                     PIR9            equ	1207	;# 
 10767   0004B8                     PIR10           equ	1208	;# 
 10768   0004B9                     PIR11           equ	1209	;# 
 10769   0004BA                     PIR12           equ	1210	;# 
 10770   0004BB                     PIR13           equ	1211	;# 
 10771   0004BC                     PIR14           equ	1212	;# 
 10772   0004BD                     PIR15           equ	1213	;# 
 10773   0004BE                     LATA            equ	1214	;# 
 10774   0004BF                     LATB            equ	1215	;# 
 10775   0004C0                     LATC            equ	1216	;# 
 10776   0004C6                     TRISA           equ	1222	;# 
 10777   0004C7                     TRISB           equ	1223	;# 
 10778   0004C8                     TRISC           equ	1224	;# 
 10779   0004CA                     TRISE           equ	1226	;# 
 10780   0004CE                     PORTA           equ	1230	;# 
 10781   0004CF                     PORTB           equ	1231	;# 
 10782   0004D0                     PORTC           equ	1232	;# 
 10783   0004D2                     PORTE           equ	1234	;# 
 10784   0004D6                     INTCON0         equ	1238	;# 
 10785   0004D7                     INTCON1         equ	1239	;# 
 10786   0004D8                     STATUS          equ	1240	;# 
 10787   0004D9                     FSR2            equ	1241	;# 
 10788   0004D9                     FSR2L           equ	1241	;# 
 10789   0004DA                     FSR2H           equ	1242	;# 
 10790   0004DB                     PLUSW2          equ	1243	;# 
 10791   0004DC                     PREINC2         equ	1244	;# 
 10792   0004DD                     POSTDEC2        equ	1245	;# 
 10793   0004DE                     POSTINC2        equ	1246	;# 
 10794   0004DF                     INDF2           equ	1247	;# 
 10795   0004E0                     BSR             equ	1248	;# 
 10796   0004E1                     FSR1            equ	1249	;# 
 10797   0004E1                     FSR1L           equ	1249	;# 
 10798   0004E2                     FSR1H           equ	1250	;# 
 10799   0004E3                     PLUSW1          equ	1251	;# 
 10800   0004E4                     PREINC1         equ	1252	;# 
 10801   0004E5                     POSTDEC1        equ	1253	;# 
 10802   0004E6                     POSTINC1        equ	1254	;# 
 10803   0004E7                     INDF1           equ	1255	;# 
 10804   0004E8                     WREG            equ	1256	;# 
 10805   0004E9                     FSR0            equ	1257	;# 
 10806   0004E9                     FSR0L           equ	1257	;# 
 10807   0004EA                     FSR0H           equ	1258	;# 
 10808   0004EB                     PLUSW0          equ	1259	;# 
 10809   0004EC                     PREINC0         equ	1260	;# 
 10810   0004ED                     POSTDEC0        equ	1261	;# 
 10811   0004EE                     POSTINC0        equ	1262	;# 
 10812   0004EF                     INDF0           equ	1263	;# 
 10813   0004F0                     PCON0           equ	1264	;# 
 10814   0004F1                     PCON1           equ	1265	;# 
 10815   0004F2                     CPUDOZE         equ	1266	;# 
 10816   0004F3                     PROD            equ	1267	;# 
 10817   0004F3                     PRODL           equ	1267	;# 
 10818   0004F4                     PRODH           equ	1268	;# 
 10819   0004F5                     TABLAT          equ	1269	;# 
 10820   0004F6                     TBLPTR          equ	1270	;# 
 10821   0004F6                     TBLPTRL         equ	1270	;# 
 10822   0004F7                     TBLPTRH         equ	1271	;# 
 10823   0004F8                     TBLPTRU         equ	1272	;# 
 10824   0004F9                     PCLAT           equ	1273	;# 
 10825   0004F9                     PCL             equ	1273	;# 
 10826   0004FA                     PCLATH          equ	1274	;# 
 10827   0004FB                     PCLATU          equ	1275	;# 
 10828   0004FC                     STKPTR          equ	1276	;# 
 10829   0004FD                     TOS             equ	1277	;# 
 10830   0004FD                     TOSL            equ	1277	;# 
 10831   0004FE                     TOSH            equ	1278	;# 
 10832   0004FF                     TOSU            equ	1279	;# 
 10833   000038                     BOOTREG         equ	56	;# 
 10834   000039                     CLKRCON         equ	57	;# 
 10835   00003A                     CLKRCLK         equ	58	;# 
 10836   000040                     NVMCON0         equ	64	;# 
 10837   000041                     NVMCON1         equ	65	;# 
 10838   000042                     NVMLOCK         equ	66	;# 
 10839   000043                     NVMADR          equ	67	;# 
 10840   000043                     NVMADRL         equ	67	;# 
 10841   000044                     NVMADRH         equ	68	;# 
 10842   000045                     NVMADRU         equ	69	;# 
 10843   000046                     NVMDAT          equ	70	;# 
 10844   000046                     NVMDATL         equ	70	;# 
 10845   000047                     NVMDATH         equ	71	;# 
 10846   000048                     VREGCON         equ	72	;# 
 10847   000049                     BORCON          equ	73	;# 
 10848   00004A                     HLVDCON0        equ	74	;# 
 10849   00004B                     HLVDCON1        equ	75	;# 
 10850   00004C                     ZCDCON          equ	76	;# 
 10851   000060                     PMD0            equ	96	;# 
 10852   000061                     PMD1            equ	97	;# 
 10853   000062                     PMD2            equ	98	;# 
 10854   000063                     PMD3            equ	99	;# 
 10855   000064                     PMD4            equ	100	;# 
 10856   000065                     PMD5            equ	101	;# 
 10857   000066                     PMD6            equ	102	;# 
 10858   000067                     PMD7            equ	103	;# 
 10859   000068                     PMD8            equ	104	;# 
 10860   00006A                     MD1CON0         equ	106	;# 
 10861   00006B                     MD1CON1         equ	107	;# 
 10862   00006C                     MD1SRC          equ	108	;# 
 10863   00006D                     MD1CARL         equ	109	;# 
 10864   00006E                     MD1CARH         equ	110	;# 
 10865   00006F                     CMOUT           equ	111	;# 
 10866   000070                     CM1CON0         equ	112	;# 
 10867   000071                     CM1CON1         equ	113	;# 
 10868   000072                     CM1NCH          equ	114	;# 
 10869   000073                     CM1PCH          equ	115	;# 
 10870   000074                     CM2CON0         equ	116	;# 
 10871   000075                     CM2CON1         equ	117	;# 
 10872   000076                     CM2NCH          equ	118	;# 
 10873   000077                     CM2PCH          equ	119	;# 
 10874   000078                     WDTCON0         equ	120	;# 
 10875   000079                     WDTCON1         equ	121	;# 
 10876   00007A                     WDTPSL          equ	122	;# 
 10877   00007B                     WDTPSH          equ	123	;# 
 10878   00007C                     WDTTMR          equ	124	;# 
 10879   00007D                     DAC1DAT         equ	125	;# 
 10880   00007D                     DAC1DATL        equ	125	;# 
 10881   00007F                     DAC1CON         equ	127	;# 
 10882   000080                     SPI1RXB         equ	128	;# 
 10883   000081                     SPI1TXB         equ	129	;# 
 10884   000082                     SPI1TCNT        equ	130	;# 
 10885   000082                     SPI1TCNTL       equ	130	;# 
 10886   000083                     SPI1TCNTH       equ	131	;# 
 10887   000084                     SPI1CON0        equ	132	;# 
 10888   000085                     SPI1CON1        equ	133	;# 
 10889   000086                     SPI1CON2        equ	134	;# 
 10890   000087                     SPI1STATUS      equ	135	;# 
 10891   000088                     SPI1TWIDTH      equ	136	;# 
 10892   000089                     SPI1BAUD        equ	137	;# 
 10893   00008A                     SPI1INTF        equ	138	;# 
 10894   00008B                     SPI1INTE        equ	139	;# 
 10895   00008C                     SPI1CLK         equ	140	;# 
 10896   00008D                     SPI2RXB         equ	141	;# 
 10897   00008E                     SPI2TXB         equ	142	;# 
 10898   00008F                     SPI2TCNT        equ	143	;# 
 10899   00008F                     SPI2TCNTL       equ	143	;# 
 10900   000090                     SPI2TCNTH       equ	144	;# 
 10901   000091                     SPI2CON0        equ	145	;# 
 10902   000092                     SPI2CON1        equ	146	;# 
 10903   000093                     SPI2CON2        equ	147	;# 
 10904   000094                     SPI2STATUS      equ	148	;# 
 10905   000095                     SPI2TWIDTH      equ	149	;# 
 10906   000096                     SPI2BAUD        equ	150	;# 
 10907   000097                     SPI2INTF        equ	151	;# 
 10908   000098                     SPI2INTE        equ	152	;# 
 10909   000099                     SPI2CLK         equ	153	;# 
 10910   0000AC                     ACTCON          equ	172	;# 
 10911   0000AD                     OSCCON1         equ	173	;# 
 10912   0000AE                     OSCCON2         equ	174	;# 
 10913   0000AF                     OSCCON3         equ	175	;# 
 10914   0000B0                     OSCTUNE         equ	176	;# 
 10915   0000B1                     OSCFRQ          equ	177	;# 
 10916   0000B1                     OSCFREQ         equ	177	;# 
 10917   0000B2                     OSCSTAT         equ	178	;# 
 10918   0000B2                     OSCSTAT1        equ	178	;# 
 10919   0000B3                     OSCEN           equ	179	;# 
 10920   0000B4                     PRLOCK          equ	180	;# 
 10921   0000B5                     SCANPR          equ	181	;# 
 10922   0000B6                     DMA1PR          equ	182	;# 
 10923   0000B7                     DMA2PR          equ	183	;# 
 10924   0000B8                     DMA3PR          equ	184	;# 
 10925   0000B9                     DMA4PR          equ	185	;# 
 10926   0000BA                     DMA5PR          equ	186	;# 
 10927   0000BB                     DMA6PR          equ	187	;# 
 10928   0000BC                     DMA7PR          equ	188	;# 
 10929   0000BD                     DMA8PR          equ	189	;# 
 10930   0000BE                     MAINPR          equ	190	;# 
 10931   0000BF                     ISRPR           equ	191	;# 
 10932   0000D4                     CLCDATA         equ	212	;# 
 10933   0000D5                     CLCSELECT       equ	213	;# 
 10934   0000D6                     CLCnCON         equ	214	;# 
 10935   0000D7                     CLCnPOL         equ	215	;# 
 10936   0000D8                     CLCnSEL0        equ	216	;# 
 10937   0000D9                     CLCnSEL1        equ	217	;# 
 10938   0000DA                     CLCnSEL2        equ	218	;# 
 10939   0000DB                     CLCnSEL3        equ	219	;# 
 10940   0000DC                     CLCnGLS0        equ	220	;# 
 10941   0000DD                     CLCnGLS1        equ	221	;# 
 10942   0000DE                     CLCnGLS2        equ	222	;# 
 10943   0000DF                     CLCnGLS3        equ	223	;# 
 10944   0000E8                     DMASELECT       equ	232	;# 
 10945   0000E9                     DMAnBUF         equ	233	;# 
 10946   0000EA                     DMAnDCNT        equ	234	;# 
 10947   0000EA                     DMAnDCNTL       equ	234	;# 
 10948   0000EB                     DMAnDCNTH       equ	235	;# 
 10949   0000EC                     DMAnDPTR        equ	236	;# 
 10950   0000EC                     DMAnDPTRL       equ	236	;# 
 10951   0000ED                     DMAnDPTRH       equ	237	;# 
 10952   0000EE                     DMAnDSZ         equ	238	;# 
 10953   0000EE                     DMAnDSZL        equ	238	;# 
 10954   0000EF                     DMAnDSZH        equ	239	;# 
 10955   0000F0                     DMAnDSA         equ	240	;# 
 10956   0000F0                     DMAnDSAL        equ	240	;# 
 10957   0000F1                     DMAnDSAH        equ	241	;# 
 10958   0000F2                     DMAnSCNT        equ	242	;# 
 10959   0000F2                     DMAnSCNTL       equ	242	;# 
 10960   0000F3                     DMAnSCNTH       equ	243	;# 
 10961   0000F4                     DMAnSPTR        equ	244	;# 
 10962   0000F4                     DMAnSPTRL       equ	244	;# 
 10963   0000F5                     DMAnSPTRH       equ	245	;# 
 10964   0000F6                     DMAnSPTRU       equ	246	;# 
 10965   0000F7                     DMAnSSZ         equ	247	;# 
 10966   0000F7                     DMAnSSZL        equ	247	;# 
 10967   0000F8                     DMAnSSZH        equ	248	;# 
 10968   0000F9                     DMAnSSA         equ	249	;# 
 10969   0000F9                     DMAnSSAL        equ	249	;# 
 10970   0000FA                     DMAnSSAH        equ	250	;# 
 10971   0000FB                     DMAnSSAU        equ	251	;# 
 10972   0000FC                     DMAnCON0        equ	252	;# 
 10973   0000FD                     DMAnCON1        equ	253	;# 
 10974   0000FE                     DMAnAIRQ        equ	254	;# 
 10975   0000FF                     DMAnSIRQ        equ	255	;# 
 10976   000100                     C1CONL          equ	256	;# 
 10977   000101                     C1CONH          equ	257	;# 
 10978   000102                     C1CONU          equ	258	;# 
 10979   000103                     C1CONT          equ	259	;# 
 10980   000104                     C1NBTCFGL       equ	260	;# 
 10981   000105                     C1NBTCFGH       equ	261	;# 
 10982   000106                     C1NBTCFGU       equ	262	;# 
 10983   000107                     C1NBTCFGT       equ	263	;# 
 10984   000108                     C1DBTCFGL       equ	264	;# 
 10985   000109                     C1DBTCFGH       equ	265	;# 
 10986   00010A                     C1DBTCFGU       equ	266	;# 
 10987   00010B                     C1DBTCFGT       equ	267	;# 
 10988   00010C                     C1TDCL          equ	268	;# 
 10989   00010D                     C1TDCH          equ	269	;# 
 10990   00010E                     C1TDCU          equ	270	;# 
 10991   000110                     C1TBC           equ	272	;# 
 10992   000110                     C1TBCL          equ	272	;# 
 10993   000111                     C1TBCH          equ	273	;# 
 10994   000112                     C1TBCU          equ	274	;# 
 10995   000113                     C1TBCT          equ	275	;# 
 10996   000114                     C1TSCONL        equ	276	;# 
 10997   000115                     C1TSCONH        equ	277	;# 
 10998   000116                     C1TSCONU        equ	278	;# 
 10999   000117                     C1TSCONT        equ	279	;# 
 11000   000118                     C1VECL          equ	280	;# 
 11001   000119                     C1VECH          equ	281	;# 
 11002   00011A                     C1VECU          equ	282	;# 
 11003   00011B                     C1VECT          equ	283	;# 
 11004   00011C                     C1INTL          equ	284	;# 
 11005   00011D                     C1INTH          equ	285	;# 
 11006   00011E                     C1INTU          equ	286	;# 
 11007   00011F                     C1INTT          equ	287	;# 
 11008   000120                     C1RXIF          equ	288	;# 
 11009   000120                     C1RXIFL         equ	288	;# 
 11010   000121                     C1RXIFH         equ	289	;# 
 11011   000122                     C1RXIFU         equ	290	;# 
 11012   000123                     C1RXIFT         equ	291	;# 
 11013   000124                     C1TXIF          equ	292	;# 
 11014   000124                     C1TXIFL         equ	292	;# 
 11015   000125                     C1TXIFH         equ	293	;# 
 11016   000126                     C1TXIFU         equ	294	;# 
 11017   000127                     C1TXIFT         equ	295	;# 
 11018   000128                     C1RXOVIF        equ	296	;# 
 11019   000128                     C1RXOVIFL       equ	296	;# 
 11020   000129                     C1RXOVIFH       equ	297	;# 
 11021   00012A                     C1RXOVIFU       equ	298	;# 
 11022   00012B                     C1RXOVIFT       equ	299	;# 
 11023   00012C                     C1TXATIF        equ	300	;# 
 11024   00012C                     C1TXATIFL       equ	300	;# 
 11025   00012D                     C1TXATIFH       equ	301	;# 
 11026   00012E                     C1TXATIFU       equ	302	;# 
 11027   00012F                     C1TXATIFT       equ	303	;# 
 11028   000130                     C1TXREQ         equ	304	;# 
 11029   000130                     C1TXREQL        equ	304	;# 
 11030   000131                     C1TXREQH        equ	305	;# 
 11031   000132                     C1TXREQU        equ	306	;# 
 11032   000133                     C1TXREQT        equ	307	;# 
 11033   000134                     C1TRECL         equ	308	;# 
 11034   000135                     C1TRECH         equ	309	;# 
 11035   000136                     C1TRECU         equ	310	;# 
 11036   000137                     C1TRECT         equ	311	;# 
 11037   000138                     C1BDIAG0L       equ	312	;# 
 11038   000139                     C1BDIAG0H       equ	313	;# 
 11039   00013C                     C1BDIAG1L       equ	316	;# 
 11040   00013D                     C1BDIAG1H       equ	317	;# 
 11041   00013E                     C1BDIAG1U       equ	318	;# 
 11042   00013F                     C1BDIAG1T       equ	319	;# 
 11043   000140                     C1TEFCONL       equ	320	;# 
 11044   000141                     C1TEFCONH       equ	321	;# 
 11045   000142                     C1TEFCONU       equ	322	;# 
 11046   000143                     C1TEFCONT       equ	323	;# 
 11047   000144                     C1TEFSTAL       equ	324	;# 
 11048   000145                     C1TEFSTAH       equ	325	;# 
 11049   000146                     C1TEFSTAU       equ	326	;# 
 11050   000147                     C1TEFSTAT       equ	327	;# 
 11051   000148                     C1TEFUA         equ	328	;# 
 11052   000148                     C1TEFUAL        equ	328	;# 
 11053   000149                     C1TEFUAH        equ	329	;# 
 11054   00014A                     C1TEFUAU        equ	330	;# 
 11055   00014B                     C1TEFUAT        equ	331	;# 
 11056   00014C                     C1FIFOBA        equ	332	;# 
 11057   00014C                     C1FIFOBAL       equ	332	;# 
 11058   00014D                     C1FIFOBAH       equ	333	;# 
 11059   00014E                     C1FIFOBAU       equ	334	;# 
 11060   00014F                     C1FIFOBAT       equ	335	;# 
 11061   000150                     C1TXQCONL       equ	336	;# 
 11062   000151                     C1TXQCONH       equ	337	;# 
 11063   000152                     C1TXQCONU       equ	338	;# 
 11064   000153                     C1TXQCONT       equ	339	;# 
 11065   000154                     C1TXQSTAL       equ	340	;# 
 11066   000155                     C1TXQSTAH       equ	341	;# 
 11067   000156                     C1TXQSTAU       equ	342	;# 
 11068   000157                     C1TXQSTAT       equ	343	;# 
 11069   000158                     C1TXQUA         equ	344	;# 
 11070   000158                     C1TXQUAL        equ	344	;# 
 11071   000159                     C1TXQUAH        equ	345	;# 
 11072   00015A                     C1TXQUAU        equ	346	;# 
 11073   00015B                     C1TXQUAT        equ	347	;# 
 11074   00015C                     C1FIFOCON1      equ	348	;# 
 11075   00015C                     C1FIFOCON1L     equ	348	;# 
 11076   00015D                     C1FIFOCON1H     equ	349	;# 
 11077   00015E                     C1FIFOCON1U     equ	350	;# 
 11078   00015F                     C1FIFOCON1T     equ	351	;# 
 11079   000160                     C1FIFOSTA1      equ	352	;# 
 11080   000160                     C1FIFOSTA1L     equ	352	;# 
 11081   000161                     C1FIFOSTA1H     equ	353	;# 
 11082   000162                     C1FIFOSTA1U     equ	354	;# 
 11083   000163                     C1FIFOSTA1T     equ	355	;# 
 11084   000164                     C1FIFOUA1       equ	356	;# 
 11085   000164                     C1FIFOUA1L      equ	356	;# 
 11086   000165                     C1FIFOUA1H      equ	357	;# 
 11087   000166                     C1FIFOUA1U      equ	358	;# 
 11088   000167                     C1FIFOUA1T      equ	359	;# 
 11089   000168                     C1FIFOCON2      equ	360	;# 
 11090   000168                     C1FIFOCON2L     equ	360	;# 
 11091   000169                     C1FIFOCON2H     equ	361	;# 
 11092   00016A                     C1FIFOCON2U     equ	362	;# 
 11093   00016B                     C1FIFOCON2T     equ	363	;# 
 11094   00016C                     C1FIFOSTA2      equ	364	;# 
 11095   00016C                     C1FIFOSTA2L     equ	364	;# 
 11096   00016D                     C1FIFOSTA2H     equ	365	;# 
 11097   00016E                     C1FIFOSTA2U     equ	366	;# 
 11098   00016F                     C1FIFOSTA2T     equ	367	;# 
 11099   000170                     C1FIFOUA2       equ	368	;# 
 11100   000170                     C1FIFOUA2L      equ	368	;# 
 11101   000171                     C1FIFOUA2H      equ	369	;# 
 11102   000172                     C1FIFOUA2U      equ	370	;# 
 11103   000173                     C1FIFOUA2T      equ	371	;# 
 11104   000174                     C1FIFOCON3      equ	372	;# 
 11105   000174                     C1FIFOCON3L     equ	372	;# 
 11106   000175                     C1FIFOCON3H     equ	373	;# 
 11107   000176                     C1FIFOCON3U     equ	374	;# 
 11108   000177                     C1FIFOCON3T     equ	375	;# 
 11109   000178                     C1FIFOSTA3      equ	376	;# 
 11110   000178                     C1FIFOSTA3L     equ	376	;# 
 11111   000179                     C1FIFOSTA3H     equ	377	;# 
 11112   00017A                     C1FIFOSTA3U     equ	378	;# 
 11113   00017B                     C1FIFOSTA3T     equ	379	;# 
 11114   00017C                     C1FIFOUA3       equ	380	;# 
 11115   00017C                     C1FIFOUA3L      equ	380	;# 
 11116   00017D                     C1FIFOUA3H      equ	381	;# 
 11117   00017E                     C1FIFOUA3U      equ	382	;# 
 11118   00017F                     C1FIFOUA3T      equ	383	;# 
 11119   000180                     C1FLTCON0L      equ	384	;# 
 11120   000181                     C1FLTCON0H      equ	385	;# 
 11121   000182                     C1FLTCON0U      equ	386	;# 
 11122   000183                     C1FLTCON0T      equ	387	;# 
 11123   000184                     C1FLTCON1L      equ	388	;# 
 11124   000185                     C1FLTCON1H      equ	389	;# 
 11125   000186                     C1FLTCON1U      equ	390	;# 
 11126   000187                     C1FLTCON1T      equ	391	;# 
 11127   000188                     C1FLTCON2L      equ	392	;# 
 11128   000189                     C1FLTCON2H      equ	393	;# 
 11129   00018A                     C1FLTCON2U      equ	394	;# 
 11130   00018B                     C1FLTCON2T      equ	395	;# 
 11131   00018C                     C1FLTOBJ0       equ	396	;# 
 11132   00018C                     C1FLTOBJ0L      equ	396	;# 
 11133   00018D                     C1FLTOBJ0H      equ	397	;# 
 11134   00018E                     C1FLTOBJ0U      equ	398	;# 
 11135   00018F                     C1FLTOBJ0T      equ	399	;# 
 11136   000190                     C1MASK0         equ	400	;# 
 11137   000190                     C1MASK0L        equ	400	;# 
 11138   000191                     C1MASK0H        equ	401	;# 
 11139   000192                     C1MASK0U        equ	402	;# 
 11140   000193                     C1MASK0T        equ	403	;# 
 11141   000194                     C1FLTOBJ1       equ	404	;# 
 11142   000194                     C1FLTOBJ1L      equ	404	;# 
 11143   000195                     C1FLTOBJ1H      equ	405	;# 
 11144   000196                     C1FLTOBJ1U      equ	406	;# 
 11145   000197                     C1FLTOBJ1T      equ	407	;# 
 11146   000198                     C1MASK1         equ	408	;# 
 11147   000198                     C1MASK1L        equ	408	;# 
 11148   000199                     C1MASK1H        equ	409	;# 
 11149   00019A                     C1MASK1U        equ	410	;# 
 11150   00019B                     C1MASK1T        equ	411	;# 
 11151   00019C                     C1FLTOBJ2       equ	412	;# 
 11152   00019C                     C1FLTOBJ2L      equ	412	;# 
 11153   00019D                     C1FLTOBJ2H      equ	413	;# 
 11154   00019E                     C1FLTOBJ2U      equ	414	;# 
 11155   00019F                     C1FLTOBJ2T      equ	415	;# 
 11156   0001A0                     C1MASK2         equ	416	;# 
 11157   0001A0                     C1MASK2L        equ	416	;# 
 11158   0001A1                     C1MASK2H        equ	417	;# 
 11159   0001A2                     C1MASK2U        equ	418	;# 
 11160   0001A3                     C1MASK2T        equ	419	;# 
 11161   0001A4                     C1FLTOBJ3       equ	420	;# 
 11162   0001A4                     C1FLTOBJ3L      equ	420	;# 
 11163   0001A5                     C1FLTOBJ3H      equ	421	;# 
 11164   0001A6                     C1FLTOBJ3U      equ	422	;# 
 11165   0001A7                     C1FLTOBJ3T      equ	423	;# 
 11166   0001A8                     C1MASK3         equ	424	;# 
 11167   0001A8                     C1MASK3L        equ	424	;# 
 11168   0001A9                     C1MASK3H        equ	425	;# 
 11169   0001AA                     C1MASK3U        equ	426	;# 
 11170   0001AB                     C1MASK3T        equ	427	;# 
 11171   0001AC                     C1FLTOBJ4       equ	428	;# 
 11172   0001AC                     C1FLTOBJ4L      equ	428	;# 
 11173   0001AD                     C1FLTOBJ4H      equ	429	;# 
 11174   0001AE                     C1FLTOBJ4U      equ	430	;# 
 11175   0001AF                     C1FLTOBJ4T      equ	431	;# 
 11176   0001B0                     C1MASK4         equ	432	;# 
 11177   0001B0                     C1MASK4L        equ	432	;# 
 11178   0001B1                     C1MASK4H        equ	433	;# 
 11179   0001B2                     C1MASK4U        equ	434	;# 
 11180   0001B3                     C1MASK4T        equ	435	;# 
 11181   0001B4                     C1FLTOBJ5       equ	436	;# 
 11182   0001B4                     C1FLTOBJ5L      equ	436	;# 
 11183   0001B5                     C1FLTOBJ5H      equ	437	;# 
 11184   0001B6                     C1FLTOBJ5U      equ	438	;# 
 11185   0001B7                     C1FLTOBJ5T      equ	439	;# 
 11186   0001B8                     C1MASK5         equ	440	;# 
 11187   0001B8                     C1MASK5L        equ	440	;# 
 11188   0001B9                     C1MASK5H        equ	441	;# 
 11189   0001BA                     C1MASK5U        equ	442	;# 
 11190   0001BB                     C1MASK5T        equ	443	;# 
 11191   0001BC                     C1FLTOBJ6       equ	444	;# 
 11192   0001BC                     C1FLTOBJ6L      equ	444	;# 
 11193   0001BD                     C1FLTOBJ6H      equ	445	;# 
 11194   0001BE                     C1FLTOBJ6U      equ	446	;# 
 11195   0001BF                     C1FLTOBJ6T      equ	447	;# 
 11196   0001C0                     C1MASK6         equ	448	;# 
 11197   0001C0                     C1MASK6L        equ	448	;# 
 11198   0001C1                     C1MASK6H        equ	449	;# 
 11199   0001C2                     C1MASK6U        equ	450	;# 
 11200   0001C3                     C1MASK6T        equ	451	;# 
 11201   0001C4                     C1FLTOBJ7       equ	452	;# 
 11202   0001C4                     C1FLTOBJ7L      equ	452	;# 
 11203   0001C5                     C1FLTOBJ7H      equ	453	;# 
 11204   0001C6                     C1FLTOBJ7U      equ	454	;# 
 11205   0001C7                     C1FLTOBJ7T      equ	455	;# 
 11206   0001C8                     C1MASK7         equ	456	;# 
 11207   0001C8                     C1MASK7L        equ	456	;# 
 11208   0001C9                     C1MASK7H        equ	457	;# 
 11209   0001CA                     C1MASK7U        equ	458	;# 
 11210   0001CB                     C1MASK7T        equ	459	;# 
 11211   0001CC                     C1FLTOBJ8       equ	460	;# 
 11212   0001CC                     C1FLTOBJ8L      equ	460	;# 
 11213   0001CD                     C1FLTOBJ8H      equ	461	;# 
 11214   0001CE                     C1FLTOBJ8U      equ	462	;# 
 11215   0001CF                     C1FLTOBJ8T      equ	463	;# 
 11216   0001D0                     C1MASK8         equ	464	;# 
 11217   0001D0                     C1MASK8L        equ	464	;# 
 11218   0001D1                     C1MASK8H        equ	465	;# 
 11219   0001D2                     C1MASK8U        equ	466	;# 
 11220   0001D3                     C1MASK8T        equ	467	;# 
 11221   0001D4                     C1FLTOBJ9       equ	468	;# 
 11222   0001D4                     C1FLTOBJ9L      equ	468	;# 
 11223   0001D5                     C1FLTOBJ9H      equ	469	;# 
 11224   0001D6                     C1FLTOBJ9U      equ	470	;# 
 11225   0001D7                     C1FLTOBJ9T      equ	471	;# 
 11226   0001D8                     C1MASK9         equ	472	;# 
 11227   0001D8                     C1MASK9L        equ	472	;# 
 11228   0001D9                     C1MASK9H        equ	473	;# 
 11229   0001DA                     C1MASK9U        equ	474	;# 
 11230   0001DB                     C1MASK9T        equ	475	;# 
 11231   0001DC                     C1FLTOBJ10      equ	476	;# 
 11232   0001DC                     C1FLTOBJ10L     equ	476	;# 
 11233   0001DD                     C1FLTOBJ10H     equ	477	;# 
 11234   0001DE                     C1FLTOBJ10U     equ	478	;# 
 11235   0001DF                     C1FLTOBJ10T     equ	479	;# 
 11236   0001E0                     C1MASK10        equ	480	;# 
 11237   0001E0                     C1MASK10L       equ	480	;# 
 11238   0001E1                     C1MASK10H       equ	481	;# 
 11239   0001E2                     C1MASK10U       equ	482	;# 
 11240   0001E3                     C1MASK10T       equ	483	;# 
 11241   0001E4                     C1FLTOBJ11      equ	484	;# 
 11242   0001E4                     C1FLTOBJ11L     equ	484	;# 
 11243   0001E5                     C1FLTOBJ11H     equ	485	;# 
 11244   0001E6                     C1FLTOBJ11U     equ	486	;# 
 11245   0001E7                     C1FLTOBJ11T     equ	487	;# 
 11246   0001E8                     C1MASK11        equ	488	;# 
 11247   0001E8                     C1MASK11L       equ	488	;# 
 11248   0001E9                     C1MASK11H       equ	489	;# 
 11249   0001EA                     C1MASK11U       equ	490	;# 
 11250   0001EB                     C1MASK11T       equ	491	;# 
 11251   000200                     PPSLOCK         equ	512	;# 
 11252   000201                     RA0PPS          equ	513	;# 
 11253   000202                     RA1PPS          equ	514	;# 
 11254   000203                     RA2PPS          equ	515	;# 
 11255   000204                     RA3PPS          equ	516	;# 
 11256   000205                     RA4PPS          equ	517	;# 
 11257   000206                     RA5PPS          equ	518	;# 
 11258   000207                     RA6PPS          equ	519	;# 
 11259   000208                     RA7PPS          equ	520	;# 
 11260   000209                     RB0PPS          equ	521	;# 
 11261   00020A                     RB1PPS          equ	522	;# 
 11262   00020B                     RB2PPS          equ	523	;# 
 11263   00020C                     RB3PPS          equ	524	;# 
 11264   00020D                     RB4PPS          equ	525	;# 
 11265   00020E                     RB5PPS          equ	526	;# 
 11266   00020F                     RB6PPS          equ	527	;# 
 11267   000210                     RB7PPS          equ	528	;# 
 11268   000211                     RC0PPS          equ	529	;# 
 11269   000212                     RC1PPS          equ	530	;# 
 11270   000213                     RC2PPS          equ	531	;# 
 11271   000214                     RC3PPS          equ	532	;# 
 11272   000215                     RC4PPS          equ	533	;# 
 11273   000216                     RC5PPS          equ	534	;# 
 11274   000217                     RC6PPS          equ	535	;# 
 11275   000218                     RC7PPS          equ	536	;# 
 11276   00023D                     CANRXPPS        equ	573	;# 
 11277   00023E                     INT0PPS         equ	574	;# 
 11278   00023F                     INT1PPS         equ	575	;# 
 11279   000240                     INT2PPS         equ	576	;# 
 11280   000241                     T0CKIPPS        equ	577	;# 
 11281   000242                     T1CKIPPS        equ	578	;# 
 11282   000243                     T1GPPS          equ	579	;# 
 11283   000244                     T3CKIPPS        equ	580	;# 
 11284   000245                     T3GPPS          equ	581	;# 
 11285   000246                     T5CKIPPS        equ	582	;# 
 11286   000247                     T5GPPS          equ	583	;# 
 11287   000248                     T2INPPS         equ	584	;# 
 11288   000249                     T4INPPS         equ	585	;# 
 11289   00024A                     T6INPPS         equ	586	;# 
 11290   00024B                     TUIN0PPS        equ	587	;# 
 11291   00024C                     TUIN1PPS        equ	588	;# 
 11292   00024F                     CCP1PPS         equ	591	;# 
 11293   000250                     CCP2PPS         equ	592	;# 
 11294   000251                     CCP3PPS         equ	593	;# 
 11295   000253                     PWM1ERSPPS      equ	595	;# 
 11296   000254                     PWM2ERSPPS      equ	596	;# 
 11297   000255                     PWM3ERSPPS      equ	597	;# 
 11298   000256                     PWM4ERSPPS      equ	598	;# 
 11299   000257                     PWMIN0PPS       equ	599	;# 
 11300   000258                     PWMIN1PPS       equ	600	;# 
 11301   000259                     SMT1WINPPS      equ	601	;# 
 11302   00025A                     SMT1SIGPPS      equ	602	;# 
 11303   00025B                     CWG1PPS         equ	603	;# 
 11304   00025B                     CWG1INPPS       equ	603	;# 
 11305   00025C                     CWG2PPS         equ	604	;# 
 11306   00025C                     CWG2INPPS       equ	604	;# 
 11307   00025D                     CWG3PPS         equ	605	;# 
 11308   00025D                     CWG3INPPS       equ	605	;# 
 11309   00025E                     MD1CARLPPS      equ	606	;# 
 11310   00025E                     MDCARLPPS       equ	606	;# 
 11311   00025F                     MD1CARHPPS      equ	607	;# 
 11312   00025F                     MDCARHPPS       equ	607	;# 
 11313   000260                     MD1SRCPPS       equ	608	;# 
 11314   000260                     MDSRCPPS        equ	608	;# 
 11315   000261                     CLCIN0PPS       equ	609	;# 
 11316   000262                     CLCIN1PPS       equ	610	;# 
 11317   000263                     CLCIN2PPS       equ	611	;# 
 11318   000264                     CLCIN3PPS       equ	612	;# 
 11319   000265                     CLCIN4PPS       equ	613	;# 
 11320   000266                     CLCIN5PPS       equ	614	;# 
 11321   000267                     CLCIN6PPS       equ	615	;# 
 11322   000268                     CLCIN7PPS       equ	616	;# 
 11323   000269                     ADACTPPS        equ	617	;# 
 11324   00026A                     SPI1SCKPPS      equ	618	;# 
 11325   00026B                     SPI1SDIPPS      equ	619	;# 
 11326   00026C                     SPI1SSPPS       equ	620	;# 
 11327   00026D                     SPI2SCKPPS      equ	621	;# 
 11328   00026E                     SPI2SDIPPS      equ	622	;# 
 11329   00026F                     SPI2SSPPS       equ	623	;# 
 11330   000270                     I2C1SDAPPS      equ	624	;# 
 11331   000271                     I2C1SCLPPS      equ	625	;# 
 11332   000272                     U1RXPPS         equ	626	;# 
 11333   000273                     U1CTSPPS        equ	627	;# 
 11334   000274                     U2RXPPS         equ	628	;# 
 11335   000275                     U2CTSPPS        equ	629	;# 
 11336   000276                     U3RXPPS         equ	630	;# 
 11337   000277                     U3CTSPPS        equ	631	;# 
 11338   000278                     U4RXPPS         equ	632	;# 
 11339   000279                     U4CTSPPS        equ	633	;# 
 11340   00027A                     U5RXPPS         equ	634	;# 
 11341   00027B                     U5CTSPPS        equ	635	;# 
 11342   000286                     RC4I2C          equ	646	;# 
 11343   000287                     RC3I2C          equ	647	;# 
 11344   000288                     RB2I2C          equ	648	;# 
 11345   000289                     RB1I2C          equ	649	;# 
 11346   00028A                     I2C1RXB         equ	650	;# 
 11347   00028B                     I2C1TXB         equ	651	;# 
 11348   00028C                     I2C1CNTL        equ	652	;# 
 11349   00028D                     I2C1CNTH        equ	653	;# 
 11350   00028E                     I2C1ADB0        equ	654	;# 
 11351   00028F                     I2C1ADB1        equ	655	;# 
 11352   000290                     I2C1ADR0        equ	656	;# 
 11353   000291                     I2C1ADR1        equ	657	;# 
 11354   000292                     I2C1ADR2        equ	658	;# 
 11355   000293                     I2C1ADR3        equ	659	;# 
 11356   000294                     I2C1CON0        equ	660	;# 
 11357   000295                     I2C1CON1        equ	661	;# 
 11358   000296                     I2C1CON2        equ	662	;# 
 11359   000297                     I2C1ERR         equ	663	;# 
 11360   000298                     I2C1STAT0       equ	664	;# 
 11361   000299                     I2C1STAT1       equ	665	;# 
 11362   00029A                     I2C1PIR         equ	666	;# 
 11363   00029B                     I2C1PIE         equ	667	;# 
 11364   00029C                     I2C1BTO         equ	668	;# 
 11365   00029D                     I2C1BAUD        equ	669	;# 
 11366   00029E                     I2C1CLK         equ	670	;# 
 11367   00029F                     I2C1BTOC        equ	671	;# 
 11368   0002A1                     U1RXB           equ	673	;# 
 11369   0002A1                     U1RXBL          equ	673	;# 
 11370   0002A2                     U1RXCHK         equ	674	;# 
 11371   0002A3                     U1TXB           equ	675	;# 
 11372   0002A3                     U1TXBL          equ	675	;# 
 11373   0002A4                     U1TXCHK         equ	676	;# 
 11374   0002A5                     U1P1            equ	677	;# 
 11375   0002A5                     U1P1L           equ	677	;# 
 11376   0002A6                     U1P1H           equ	678	;# 
 11377   0002A7                     U1P2            equ	679	;# 
 11378   0002A7                     U1P2L           equ	679	;# 
 11379   0002A8                     U1P2H           equ	680	;# 
 11380   0002A9                     U1P3            equ	681	;# 
 11381   0002A9                     U1P3L           equ	681	;# 
 11382   0002AA                     U1P3H           equ	682	;# 
 11383   0002AB                     U1CON0          equ	683	;# 
 11384   0002AC                     U1CON1          equ	684	;# 
 11385   0002AD                     U1CON2          equ	685	;# 
 11386   0002AE                     U1BRG           equ	686	;# 
 11387   0002AE                     U1BRGL          equ	686	;# 
 11388   0002AF                     U1BRGH          equ	687	;# 
 11389   0002B0                     U1FIFO          equ	688	;# 
 11390   0002B1                     U1UIR           equ	689	;# 
 11391   0002B2                     U1ERRIR         equ	690	;# 
 11392   0002B3                     U1ERRIE         equ	691	;# 
 11393   0002B4                     U2RXB           equ	692	;# 
 11394   0002B4                     U2RXBL          equ	692	;# 
 11395   0002B5                     U2RXCHK         equ	693	;# 
 11396   0002B6                     U2TXB           equ	694	;# 
 11397   0002B6                     U2TXBL          equ	694	;# 
 11398   0002B7                     U2TXCHK         equ	695	;# 
 11399   0002B8                     U2P1            equ	696	;# 
 11400   0002B8                     U2P1L           equ	696	;# 
 11401   0002B9                     U2P1H           equ	697	;# 
 11402   0002BA                     U2P2            equ	698	;# 
 11403   0002BA                     U2P2L           equ	698	;# 
 11404   0002BB                     U2P2H           equ	699	;# 
 11405   0002BC                     U2P3            equ	700	;# 
 11406   0002BC                     U2P3L           equ	700	;# 
 11407   0002BD                     U2P3H           equ	701	;# 
 11408   0002BE                     U2CON0          equ	702	;# 
 11409   0002BF                     U2CON1          equ	703	;# 
 11410   0002C0                     U2CON2          equ	704	;# 
 11411   0002C1                     U2BRG           equ	705	;# 
 11412   0002C1                     U2BRGL          equ	705	;# 
 11413   0002C2                     U2BRGH          equ	706	;# 
 11414   0002C3                     U2FIFO          equ	707	;# 
 11415   0002C4                     U2UIR           equ	708	;# 
 11416   0002C5                     U2ERRIR         equ	709	;# 
 11417   0002C6                     U2ERRIE         equ	710	;# 
 11418   0002C7                     U3RXB           equ	711	;# 
 11419   0002C7                     U3RXBL          equ	711	;# 
 11420   0002C9                     U3TXB           equ	713	;# 
 11421   0002C9                     U3TXBL          equ	713	;# 
 11422   0002CB                     U3P1            equ	715	;# 
 11423   0002CB                     U3P1L           equ	715	;# 
 11424   0002CD                     U3P2            equ	717	;# 
 11425   0002CD                     U3P2L           equ	717	;# 
 11426   0002CF                     U3P3            equ	719	;# 
 11427   0002CF                     U3P3L           equ	719	;# 
 11428   0002D1                     U3CON0          equ	721	;# 
 11429   0002D2                     U3CON1          equ	722	;# 
 11430   0002D3                     U3CON2          equ	723	;# 
 11431   0002D4                     U3BRG           equ	724	;# 
 11432   0002D4                     U3BRGL          equ	724	;# 
 11433   0002D5                     U3BRGH          equ	725	;# 
 11434   0002D6                     U3FIFO          equ	726	;# 
 11435   0002D7                     U3UIR           equ	727	;# 
 11436   0002D8                     U3ERRIR         equ	728	;# 
 11437   0002D9                     U3ERRIE         equ	729	;# 
 11438   0002DA                     U4RXB           equ	730	;# 
 11439   0002DA                     U4RXBL          equ	730	;# 
 11440   0002DC                     U4TXB           equ	732	;# 
 11441   0002DC                     U4TXBL          equ	732	;# 
 11442   0002DE                     U4P1            equ	734	;# 
 11443   0002DE                     U4P1L           equ	734	;# 
 11444   0002E0                     U4P2            equ	736	;# 
 11445   0002E0                     U4P2L           equ	736	;# 
 11446   0002E2                     U4P3            equ	738	;# 
 11447   0002E2                     U4P3L           equ	738	;# 
 11448   0002E4                     U4CON0          equ	740	;# 
 11449   0002E5                     U4CON1          equ	741	;# 
 11450   0002E6                     U4CON2          equ	742	;# 
 11451   0002E7                     U4BRG           equ	743	;# 
 11452   0002E7                     U4BRGL          equ	743	;# 
 11453   0002E8                     U4BRGH          equ	744	;# 
 11454   0002E9                     U4FIFO          equ	745	;# 
 11455   0002EA                     U4UIR           equ	746	;# 
 11456   0002EB                     U4ERRIR         equ	747	;# 
 11457   0002EC                     U4ERRIE         equ	748	;# 
 11458   0002ED                     U5RXB           equ	749	;# 
 11459   0002ED                     U5RXBL          equ	749	;# 
 11460   0002EF                     U5TXB           equ	751	;# 
 11461   0002EF                     U5TXBL          equ	751	;# 
 11462   0002F1                     U5P1            equ	753	;# 
 11463   0002F1                     U5P1L           equ	753	;# 
 11464   0002F3                     U5P2            equ	755	;# 
 11465   0002F3                     U5P2L           equ	755	;# 
 11466   0002F5                     U5P3            equ	757	;# 
 11467   0002F5                     U5P3L           equ	757	;# 
 11468   0002F7                     U5CON0          equ	759	;# 
 11469   0002F8                     U5CON1          equ	760	;# 
 11470   0002F9                     U5CON2          equ	761	;# 
 11471   0002FA                     U5BRG           equ	762	;# 
 11472   0002FA                     U5BRGL          equ	762	;# 
 11473   0002FB                     U5BRGH          equ	763	;# 
 11474   0002FC                     U5FIFO          equ	764	;# 
 11475   0002FD                     U5UIR           equ	765	;# 
 11476   0002FE                     U5ERRIR         equ	766	;# 
 11477   0002FF                     U5ERRIE         equ	767	;# 
 11478   000300                     SMT1TMR         equ	768	;# 
 11479   000300                     SMT1TMRL        equ	768	;# 
 11480   000301                     SMT1TMRH        equ	769	;# 
 11481   000302                     SMT1TMRU        equ	770	;# 
 11482   000303                     SMT1CPR         equ	771	;# 
 11483   000303                     SMT1CPRL        equ	771	;# 
 11484   000304                     SMT1CPRH        equ	772	;# 
 11485   000305                     SMT1CPRU        equ	773	;# 
 11486   000306                     SMT1CPW         equ	774	;# 
 11487   000306                     SMT1CPWL        equ	774	;# 
 11488   000307                     SMT1CPWH        equ	775	;# 
 11489   000308                     SMT1CPWU        equ	776	;# 
 11490   000309                     SMT1PR          equ	777	;# 
 11491   000309                     SMT1PRL         equ	777	;# 
 11492   00030A                     SMT1PRH         equ	778	;# 
 11493   00030B                     SMT1PRU         equ	779	;# 
 11494   00030C                     SMT1CON0        equ	780	;# 
 11495   00030D                     SMT1CON1        equ	781	;# 
 11496   00030E                     SMT1STAT        equ	782	;# 
 11497   00030F                     SMT1CLK         equ	783	;# 
 11498   000310                     SMT1SIG         equ	784	;# 
 11499   000311                     SMT1WIN         equ	785	;# 
 11500   000318                     TMR0L           equ	792	;# 
 11501   000318                     TMR0            equ	792	;# 
 11502   000319                     TMR0H           equ	793	;# 
 11503   000319                     PR0             equ	793	;# 
 11504   00031A                     T0CON0          equ	794	;# 
 11505   00031B                     T0CON1          equ	795	;# 
 11506   00031C                     TMR1            equ	796	;# 
 11507   00031C                     TMR1L           equ	796	;# 
 11508   00031D                     TMR1H           equ	797	;# 
 11509   00031E                     T1CON           equ	798	;# 
 11510   00031E                     TMR1CON         equ	798	;# 
 11511   00031F                     T1GCON          equ	799	;# 
 11512   00031F                     TMR1GCON        equ	799	;# 
 11513   000320                     T1GATE          equ	800	;# 
 11514   000320                     TMR1GATE        equ	800	;# 
 11515   000321                     T1CLK           equ	801	;# 
 11516   000321                     TMR1CLK         equ	801	;# 
 11517   000321                     PR1             equ	801	;# 
 11518   000322                     T2TMR           equ	802	;# 
 11519   000322                     TMR2            equ	802	;# 
 11520   000323                     T2PR            equ	803	;# 
 11521   000323                     PR2             equ	803	;# 
 11522   000324                     T2CON           equ	804	;# 
 11523   000325                     T2HLT           equ	805	;# 
 11524   000326                     T2CLKCON        equ	806	;# 
 11525   000326                     T2CLK           equ	806	;# 
 11526   000327                     T2RST           equ	807	;# 
 11527   000328                     TMR3            equ	808	;# 
 11528   000328                     TMR3L           equ	808	;# 
 11529   000329                     TMR3H           equ	809	;# 
 11530   00032A                     T3CON           equ	810	;# 
 11531   00032A                     TMR3CON         equ	810	;# 
 11532   00032B                     T3GCON          equ	811	;# 
 11533   00032B                     TMR3GCON        equ	811	;# 
 11534   00032C                     T3GATE          equ	812	;# 
 11535   00032C                     TMR3GATE        equ	812	;# 
 11536   00032D                     T3CLK           equ	813	;# 
 11537   00032D                     TMR3CLK         equ	813	;# 
 11538   00032D                     PR3             equ	813	;# 
 11539   00032E                     T4TMR           equ	814	;# 
 11540   00032E                     TMR4            equ	814	;# 
 11541   00032F                     T4PR            equ	815	;# 
 11542   00032F                     PR4             equ	815	;# 
 11543   000330                     T4CON           equ	816	;# 
 11544   000331                     T4HLT           equ	817	;# 
 11545   000332                     T4CLKCON        equ	818	;# 
 11546   000332                     T4CLK           equ	818	;# 
 11547   000333                     T4RST           equ	819	;# 
 11548   000334                     TMR5            equ	820	;# 
 11549   000334                     TMR5L           equ	820	;# 
 11550   000335                     TMR5H           equ	821	;# 
 11551   000336                     T5CON           equ	822	;# 
 11552   000336                     TMR5CON         equ	822	;# 
 11553   000337                     T5GCON          equ	823	;# 
 11554   000337                     TMR5GCON        equ	823	;# 
 11555   000338                     T5GATE          equ	824	;# 
 11556   000338                     TMR5GATE        equ	824	;# 
 11557   000339                     T5CLK           equ	825	;# 
 11558   000339                     TMR5CLK         equ	825	;# 
 11559   000339                     PR5             equ	825	;# 
 11560   00033A                     T6TMR           equ	826	;# 
 11561   00033A                     TMR6            equ	826	;# 
 11562   00033B                     T6PR            equ	827	;# 
 11563   00033B                     PR6             equ	827	;# 
 11564   00033C                     T6CON           equ	828	;# 
 11565   00033D                     T6HLT           equ	829	;# 
 11566   00033E                     T6CLKCON        equ	830	;# 
 11567   00033E                     T6CLK           equ	830	;# 
 11568   00033F                     T6RST           equ	831	;# 
 11569   000340                     CCPR1           equ	832	;# 
 11570   000340                     CCPR1L          equ	832	;# 
 11571   000341                     CCPR1H          equ	833	;# 
 11572   000342                     CCP1CON         equ	834	;# 
 11573   000343                     CCP1CAP         equ	835	;# 
 11574   000344                     CCPR2           equ	836	;# 
 11575   000344                     CCPR2L          equ	836	;# 
 11576   000345                     CCPR2H          equ	837	;# 
 11577   000346                     CCP2CON         equ	838	;# 
 11578   000347                     CCP2CAP         equ	839	;# 
 11579   000348                     CCPR3           equ	840	;# 
 11580   000348                     CCPR3L          equ	840	;# 
 11581   000349                     CCPR3H          equ	841	;# 
 11582   00034A                     CCP3CON         equ	842	;# 
 11583   00034B                     CCP3CAP         equ	843	;# 
 11584   00034C                     CCPTMRS0        equ	844	;# 
 11585   00034F                     CRCDATA         equ	847	;# 
 11586   00034F                     CRCDATAL        equ	847	;# 
 11587   000350                     CRCDATAH        equ	848	;# 
 11588   000351                     CRCDATAU        equ	849	;# 
 11589   000352                     CRCDATAT        equ	850	;# 
 11590   000353                     CRCOUT          equ	851	;# 
 11591   000353                     CRCSHFT         equ	851	;# 
 11592   000353                     CRCXOR          equ	851	;# 
 11593   000353                     CRCOUTL         equ	851	;# 
 11594   000353                     CRCSHFTL        equ	851	;# 
 11595   000353                     CRCSHIFTL       equ	851	;# 
 11596   000353                     CRCXORL         equ	851	;# 
 11597   000354                     CRCOUTH         equ	852	;# 
 11598   000354                     CRCSHFTH        equ	852	;# 
 11599   000354                     CRCSHIFTH       equ	852	;# 
 11600   000354                     CRCXORH         equ	852	;# 
 11601   000355                     CRCOUTU         equ	853	;# 
 11602   000355                     CRCSHFTU        equ	853	;# 
 11603   000355                     CRCSHIFTU       equ	853	;# 
 11604   000355                     CRCXORU         equ	853	;# 
 11605   000356                     CRCOUTT         equ	854	;# 
 11606   000356                     CRCSHFTT        equ	854	;# 
 11607   000356                     CRCSHIFTT       equ	854	;# 
 11608   000356                     CRCXORT         equ	854	;# 
 11609   000357                     CRCCON0         equ	855	;# 
 11610   000358                     CRCCON1         equ	856	;# 
 11611   000359                     CRCCON2         equ	857	;# 
 11612   00035A                     SCANLADR        equ	858	;# 
 11613   00035A                     SCANLADRL       equ	858	;# 
 11614   00035B                     SCANLADRH       equ	859	;# 
 11615   00035C                     SCANLADRU       equ	860	;# 
 11616   00035D                     SCANHADR        equ	861	;# 
 11617   00035D                     SCANHADRL       equ	861	;# 
 11618   00035E                     SCANHADRH       equ	862	;# 
 11619   00035F                     SCANHADRU       equ	863	;# 
 11620   000360                     SCANCON0        equ	864	;# 
 11621   000361                     SCANTRIG        equ	865	;# 
 11622   000362                     IPR0            equ	866	;# 
 11623   000363                     IPR1            equ	867	;# 
 11624   000364                     IPR2            equ	868	;# 
 11625   000365                     IPR3            equ	869	;# 
 11626   000366                     IPR4            equ	870	;# 
 11627   000367                     IPR5            equ	871	;# 
 11628   000368                     IPR6            equ	872	;# 
 11629   000369                     IPR7            equ	873	;# 
 11630   00036A                     IPR8            equ	874	;# 
 11631   00036B                     IPR9            equ	875	;# 
 11632   00036C                     IPR10           equ	876	;# 
 11633   00036D                     IPR11           equ	877	;# 
 11634   00036E                     IPR12           equ	878	;# 
 11635   00036F                     IPR13           equ	879	;# 
 11636   000370                     IPR14           equ	880	;# 
 11637   000371                     IPR15           equ	881	;# 
 11638   000373                     STATUS_CSHAD    equ	883	;# 
 11639   000374                     WREG_CSHAD      equ	884	;# 
 11640   000375                     BSR_CSHAD       equ	885	;# 
 11641   000376                     SHADCON         equ	886	;# 
 11642   000377                     STATUS_SHAD     equ	887	;# 
 11643   000378                     WREG_SHAD       equ	888	;# 
 11644   000379                     BSR_SHAD        equ	889	;# 
 11645   00037A                     PCLATH_SHAD     equ	890	;# 
 11646   00037B                     PCLATU_SHAD     equ	891	;# 
 11647   00037C                     FSR0SH          equ	892	;# 
 11648   00037C                     FSR0L_SHAD      equ	892	;# 
 11649   00037D                     FSR0H_SHAD      equ	893	;# 
 11650   00037E                     FSR1SH          equ	894	;# 
 11651   00037E                     FSR1L_SHAD      equ	894	;# 
 11652   00037F                     FSR1H_SHAD      equ	895	;# 
 11653   000380                     FSR2SH          equ	896	;# 
 11654   000380                     FSR2L_SHAD      equ	896	;# 
 11655   000381                     FSR2H_SHAD      equ	897	;# 
 11656   000382                     PRODSH          equ	898	;# 
 11657   000382                     PRODL_SHAD      equ	898	;# 
 11658   000383                     PRODH_SHAD      equ	899	;# 
 11659   000387                     TU16ACON0       equ	903	;# 
 11660   000388                     TU16ACON1       equ	904	;# 
 11661   000389                     TU16AHLT        equ	905	;# 
 11662   00038A                     TU16APS         equ	906	;# 
 11663   00038B                     TU16ATMR        equ	907	;# 
 11664   00038B                     TU16ACR         equ	907	;# 
 11665   00038B                     TU16ATMRL       equ	907	;# 
 11666   00038B                     TU16ACRL        equ	907	;# 
 11667   00038C                     TU16ATMRH       equ	908	;# 
 11668   00038C                     TU16ACRH        equ	908	;# 
 11669   00038D                     TU16APR         equ	909	;# 
 11670   00038D                     TU16APRL        equ	909	;# 
 11671   00038E                     TU16APRH        equ	910	;# 
 11672   00038F                     TU16ACLK        equ	911	;# 
 11673   000390                     TU16AERS        equ	912	;# 
 11674   000393                     TU16BCON0       equ	915	;# 
 11675   000394                     TU16BCON1       equ	916	;# 
 11676   000395                     TU16BHLT        equ	917	;# 
 11677   000396                     TU16BPS         equ	918	;# 
 11678   000397                     TU16BTMR        equ	919	;# 
 11679   000397                     TU16BCR         equ	919	;# 
 11680   000397                     TU16BTMRL       equ	919	;# 
 11681   000397                     TU16BCRL        equ	919	;# 
 11682   000398                     TU16BTMRH       equ	920	;# 
 11683   000398                     TU16BCRH        equ	920	;# 
 11684   000399                     TU16BPR         equ	921	;# 
 11685   000399                     TU16BPRL        equ	921	;# 
 11686   00039A                     TU16BPRH        equ	922	;# 
 11687   00039B                     TU16BCLK        equ	923	;# 
 11688   00039C                     TU16BERS        equ	924	;# 
 11689   0003BB                     TUCHAIN         equ	955	;# 
 11690   0003BC                     CWG1CLK         equ	956	;# 
 11691   0003BC                     CWG1CLKCON      equ	956	;# 
 11692   0003BD                     CWG1ISM         equ	957	;# 
 11693   0003BE                     CWG1DBR         equ	958	;# 
 11694   0003BF                     CWG1DBF         equ	959	;# 
 11695   0003C0                     CWG1CON0        equ	960	;# 
 11696   0003C1                     CWG1CON1        equ	961	;# 
 11697   0003C2                     CWG1AS0         equ	962	;# 
 11698   0003C3                     CWG1AS1         equ	963	;# 
 11699   0003C4                     CWG1STR         equ	964	;# 
 11700   0003C5                     CWG2CLK         equ	965	;# 
 11701   0003C5                     CWG2CLKCON      equ	965	;# 
 11702   0003C6                     CWG2ISM         equ	966	;# 
 11703   0003C7                     CWG2DBR         equ	967	;# 
 11704   0003C8                     CWG2DBF         equ	968	;# 
 11705   0003C9                     CWG2CON0        equ	969	;# 
 11706   0003CA                     CWG2CON1        equ	970	;# 
 11707   0003CB                     CWG2AS0         equ	971	;# 
 11708   0003CC                     CWG2AS1         equ	972	;# 
 11709   0003CD                     CWG2STR         equ	973	;# 
 11710   0003CE                     CWG3CLK         equ	974	;# 
 11711   0003CE                     CWG3CLKCON      equ	974	;# 
 11712   0003CF                     CWG3ISM         equ	975	;# 
 11713   0003D0                     CWG3DBR         equ	976	;# 
 11714   0003D1                     CWG3DBF         equ	977	;# 
 11715   0003D2                     CWG3CON0        equ	978	;# 
 11716   0003D3                     CWG3CON1        equ	979	;# 
 11717   0003D4                     CWG3AS0         equ	980	;# 
 11718   0003D5                     CWG3AS1         equ	981	;# 
 11719   0003D6                     CWG3STR         equ	982	;# 
 11720   0003D7                     FVRCON          equ	983	;# 
 11721   0003D8                     ADCPCON         equ	984	;# 
 11722   0003D8                     ADCP            equ	984	;# 
 11723   0003D9                     ADLTH           equ	985	;# 
 11724   0003D9                     ADLTHL          equ	985	;# 
 11725   0003DA                     ADLTHH          equ	986	;# 
 11726   0003DB                     ADUTH           equ	987	;# 
 11727   0003DB                     ADUTHL          equ	987	;# 
 11728   0003DC                     ADUTHH          equ	988	;# 
 11729   0003DD                     ADERR           equ	989	;# 
 11730   0003DD                     ADERRL          equ	989	;# 
 11731   0003DE                     ADERRH          equ	990	;# 
 11732   0003DF                     ADSTPT          equ	991	;# 
 11733   0003DF                     ADSTPTL         equ	991	;# 
 11734   0003E0                     ADSTPTH         equ	992	;# 
 11735   0003E1                     ADFLTR          equ	993	;# 
 11736   0003E1                     ADFLTRL         equ	993	;# 
 11737   0003E2                     ADFLTRH         equ	994	;# 
 11738   0003E3                     ADACC           equ	995	;# 
 11739   0003E3                     ADACCL          equ	995	;# 
 11740   0003E4                     ADACCH          equ	996	;# 
 11741   0003E5                     ADACCU          equ	997	;# 
 11742   0003E6                     ADCNT           equ	998	;# 
 11743   0003E7                     ADRPT           equ	999	;# 
 11744   0003E8                     ADPREV          equ	1000	;# 
 11745   0003E8                     ADPREVL         equ	1000	;# 
 11746   0003E9                     ADPREVH         equ	1001	;# 
 11747   0003EA                     ADRES           equ	1002	;# 
 11748   0003EA                     ADRESL          equ	1002	;# 
 11749   0003EB                     ADRESH          equ	1003	;# 
 11750   0003EC                     ADPCH           equ	1004	;# 
 11751   0003EE                     ADACQ           equ	1006	;# 
 11752   0003EE                     ADACQL          equ	1006	;# 
 11753   0003EF                     ADACQH          equ	1007	;# 
 11754   0003F0                     ADCAP           equ	1008	;# 
 11755   0003F1                     ADPRE           equ	1009	;# 
 11756   0003F1                     ADPREL          equ	1009	;# 
 11757   0003F2                     ADPREH          equ	1010	;# 
 11758   0003F3                     ADCON0          equ	1011	;# 
 11759   0003F4                     ADCON1          equ	1012	;# 
 11760   0003F5                     ADCON2          equ	1013	;# 
 11761   0003F6                     ADCON3          equ	1014	;# 
 11762   0003F7                     ADSTAT          equ	1015	;# 
 11763   0003F8                     ADREF           equ	1016	;# 
 11764   0003F9                     ADACT           equ	1017	;# 
 11765   0003FA                     ADCLK           equ	1018	;# 
 11766   0003FB                     ADCTX           equ	1019	;# 
 11767   0003FC                     ADCSEL1         equ	1020	;# 
 11768   0003FD                     ADCSEL2         equ	1021	;# 
 11769   0003FE                     ADCSEL3         equ	1022	;# 
 11770   0003FF                     ADCSEL4         equ	1023	;# 
 11771   000400                     ANSELA          equ	1024	;# 
 11772   000401                     WPUA            equ	1025	;# 
 11773   000402                     ODCONA          equ	1026	;# 
 11774   000403                     SLRCONA         equ	1027	;# 
 11775   000404                     INLVLA          equ	1028	;# 
 11776   000405                     IOCAP           equ	1029	;# 
 11777   000406                     IOCAN           equ	1030	;# 
 11778   000407                     IOCAF           equ	1031	;# 
 11779   000408                     ANSELB          equ	1032	;# 
 11780   000409                     WPUB            equ	1033	;# 
 11781   00040A                     ODCONB          equ	1034	;# 
 11782   00040B                     SLRCONB         equ	1035	;# 
 11783   00040C                     INLVLB          equ	1036	;# 
 11784   00040D                     IOCBP           equ	1037	;# 
 11785   00040E                     IOCBN           equ	1038	;# 
 11786   00040F                     IOCBF           equ	1039	;# 
 11787   000410                     ANSELC          equ	1040	;# 
 11788   000411                     WPUC            equ	1041	;# 
 11789   000412                     ODCONC          equ	1042	;# 
 11790   000413                     SLRCONC         equ	1043	;# 
 11791   000414                     INLVLC          equ	1044	;# 
 11792   000415                     IOCCP           equ	1045	;# 
 11793   000416                     IOCCN           equ	1046	;# 
 11794   000417                     IOCCF           equ	1047	;# 
 11795   000421                     WPUE            equ	1057	;# 
 11796   000424                     INLVLE          equ	1060	;# 
 11797   000425                     IOCEP           equ	1061	;# 
 11798   000426                     IOCEN           equ	1062	;# 
 11799   000427                     IOCEF           equ	1063	;# 
 11800   000440                     NCO1ACC         equ	1088	;# 
 11801   000440                     NCO1ACCL        equ	1088	;# 
 11802   000441                     NCO1ACCH        equ	1089	;# 
 11803   000442                     NCO1ACCU        equ	1090	;# 
 11804   000443                     NCO1INC         equ	1091	;# 
 11805   000443                     NCO1INCL        equ	1091	;# 
 11806   000444                     NCO1INCH        equ	1092	;# 
 11807   000445                     NCO1INCU        equ	1093	;# 
 11808   000446                     NCO1CON         equ	1094	;# 
 11809   000447                     NCO1CLK         equ	1095	;# 
 11810   000448                     NCO2ACC         equ	1096	;# 
 11811   000448                     NCO2ACCL        equ	1096	;# 
 11812   000449                     NCO2ACCH        equ	1097	;# 
 11813   00044A                     NCO2ACCU        equ	1098	;# 
 11814   00044B                     NCO2INC         equ	1099	;# 
 11815   00044B                     NCO2INCL        equ	1099	;# 
 11816   00044C                     NCO2INCH        equ	1100	;# 
 11817   00044D                     NCO2INCU        equ	1101	;# 
 11818   00044E                     NCO2CON         equ	1102	;# 
 11819   00044F                     NCO2CLK         equ	1103	;# 
 11820   000450                     NCO3ACC         equ	1104	;# 
 11821   000450                     NCO3ACCL        equ	1104	;# 
 11822   000451                     NCO3ACCH        equ	1105	;# 
 11823   000452                     NCO3ACCU        equ	1106	;# 
 11824   000453                     NCO3INC         equ	1107	;# 
 11825   000453                     NCO3INCL        equ	1107	;# 
 11826   000454                     NCO3INCH        equ	1108	;# 
 11827   000455                     NCO3INCU        equ	1109	;# 
 11828   000456                     NCO3CON         equ	1110	;# 
 11829   000457                     NCO3CLK         equ	1111	;# 
 11830   000458                     FSCMCON         equ	1112	;# 
 11831   000459                     IVTLOCK         equ	1113	;# 
 11832   00045A                     IVTAD           equ	1114	;# 
 11833   00045A                     IVTADL          equ	1114	;# 
 11834   00045B                     IVTADH          equ	1115	;# 
 11835   00045C                     IVTADU          equ	1116	;# 
 11836   00045D                     IVTBASE         equ	1117	;# 
 11837   00045D                     IVTBASEL        equ	1117	;# 
 11838   00045E                     IVTBASEH        equ	1118	;# 
 11839   00045F                     IVTBASEU        equ	1119	;# 
 11840   000460                     PWM1ERS         equ	1120	;# 
 11841   000461                     PWM1CLK         equ	1121	;# 
 11842   000462                     PWM1LDS         equ	1122	;# 
 11843   000463                     PWM1PR          equ	1123	;# 
 11844   000463                     PWM1PRL         equ	1123	;# 
 11845   000464                     PWM1PRH         equ	1124	;# 
 11846   000465                     PWM1CPRE        equ	1125	;# 
 11847   000466                     PWM1PIPOS       equ	1126	;# 
 11848   000467                     PWM1GIR         equ	1127	;# 
 11849   000468                     PWM1GIE         equ	1128	;# 
 11850   000469                     PWM1CON         equ	1129	;# 
 11851   00046A                     PWM1S1CFG       equ	1130	;# 
 11852   00046B                     PWM1S1P1        equ	1131	;# 
 11853   00046B                     PWM1S1P1L       equ	1131	;# 
 11854   00046C                     PWM1S1P1H       equ	1132	;# 
 11855   00046D                     PWM1S1P2        equ	1133	;# 
 11856   00046D                     PWM1S1P2L       equ	1133	;# 
 11857   00046E                     PWM1S1P2H       equ	1134	;# 
 11858   00046F                     PWM2ERS         equ	1135	;# 
 11859   000470                     PWM2CLK         equ	1136	;# 
 11860   000471                     PWM2LDS         equ	1137	;# 
 11861   000472                     PWM2PR          equ	1138	;# 
 11862   000472                     PWM2PRL         equ	1138	;# 
 11863   000473                     PWM2PRH         equ	1139	;# 
 11864   000474                     PWM2CPRE        equ	1140	;# 
 11865   000475                     PWM2PIPOS       equ	1141	;# 
 11866   000476                     PWM2GIR         equ	1142	;# 
 11867   000477                     PWM2GIE         equ	1143	;# 
 11868   000478                     PWM2CON         equ	1144	;# 
 11869   000479                     PWM2S1CFG       equ	1145	;# 
 11870   00047A                     PWM2S1P1        equ	1146	;# 
 11871   00047A                     PWM2S1P1L       equ	1146	;# 
 11872   00047B                     PWM2S1P1H       equ	1147	;# 
 11873   00047C                     PWM2S1P2        equ	1148	;# 
 11874   00047C                     PWM2S1P2L       equ	1148	;# 
 11875   00047D                     PWM2S1P2H       equ	1149	;# 
 11876   00047E                     PWM3ERS         equ	1150	;# 
 11877   00047F                     PWM3CLK         equ	1151	;# 
 11878   000480                     PWM3LDS         equ	1152	;# 
 11879   000481                     PWM3PR          equ	1153	;# 
 11880   000481                     PWM3PRL         equ	1153	;# 
 11881   000482                     PWM3PRH         equ	1154	;# 
 11882   000483                     PWM3CPRE        equ	1155	;# 
 11883   000484                     PWM3PIPOS       equ	1156	;# 
 11884   000485                     PWM3GIR         equ	1157	;# 
 11885   000486                     PWM3GIE         equ	1158	;# 
 11886   000487                     PWM3CON         equ	1159	;# 
 11887   000488                     PWM3S1CFG       equ	1160	;# 
 11888   000489                     PWM3S1P1        equ	1161	;# 
 11889   000489                     PWM3S1P1L       equ	1161	;# 
 11890   00048A                     PWM3S1P1H       equ	1162	;# 
 11891   00048B                     PWM3S1P2        equ	1163	;# 
 11892   00048B                     PWM3S1P2L       equ	1163	;# 
 11893   00048C                     PWM3S1P2H       equ	1164	;# 
 11894   00048D                     PWM4ERS         equ	1165	;# 
 11895   00048E                     PWM4CLK         equ	1166	;# 
 11896   00048F                     PWM4LDS         equ	1167	;# 
 11897   000490                     PWM4PR          equ	1168	;# 
 11898   000490                     PWM4PRL         equ	1168	;# 
 11899   000491                     PWM4PRH         equ	1169	;# 
 11900   000492                     PWM4CPRE        equ	1170	;# 
 11901   000493                     PWM4PIPOS       equ	1171	;# 
 11902   000494                     PWM4GIR         equ	1172	;# 
 11903   000495                     PWM4GIE         equ	1173	;# 
 11904   000496                     PWM4CON         equ	1174	;# 
 11905   000497                     PWM4S1CFG       equ	1175	;# 
 11906   000498                     PWM4S1P1        equ	1176	;# 
 11907   000498                     PWM4S1P1L       equ	1176	;# 
 11908   000499                     PWM4S1P1H       equ	1177	;# 
 11909   00049A                     PWM4S1P2        equ	1178	;# 
 11910   00049A                     PWM4S1P2L       equ	1178	;# 
 11911   00049B                     PWM4S1P2H       equ	1179	;# 
 11912   00049C                     PWMLOAD         equ	1180	;# 
 11913   00049D                     PWMEN           equ	1181	;# 
 11914   00049E                     PIE0            equ	1182	;# 
 11915   00049F                     PIE1            equ	1183	;# 
 11916   0004A0                     PIE2            equ	1184	;# 
 11917   0004A1                     PIE3            equ	1185	;# 
 11918   0004A2                     PIE4            equ	1186	;# 
 11919   0004A3                     PIE5            equ	1187	;# 
 11920   0004A4                     PIE6            equ	1188	;# 
 11921   0004A5                     PIE7            equ	1189	;# 
 11922   0004A6                     PIE8            equ	1190	;# 
 11923   0004A7                     PIE9            equ	1191	;# 
 11924   0004A8                     PIE10           equ	1192	;# 
 11925   0004A9                     PIE11           equ	1193	;# 
 11926   0004AA                     PIE12           equ	1194	;# 
 11927   0004AB                     PIE13           equ	1195	;# 
 11928   0004AC                     PIE14           equ	1196	;# 
 11929   0004AD                     PIE15           equ	1197	;# 
 11930   0004AE                     PIR0            equ	1198	;# 
 11931   0004AF                     PIR1            equ	1199	;# 
 11932   0004B0                     PIR2            equ	1200	;# 
 11933   0004B1                     PIR3            equ	1201	;# 
 11934   0004B2                     PIR4            equ	1202	;# 
 11935   0004B3                     PIR5            equ	1203	;# 
 11936   0004B4                     PIR6            equ	1204	;# 
 11937   0004B5                     PIR7            equ	1205	;# 
 11938   0004B6                     PIR8            equ	1206	;# 
 11939   0004B7                     PIR9            equ	1207	;# 
 11940   0004B8                     PIR10           equ	1208	;# 
 11941   0004B9                     PIR11           equ	1209	;# 
 11942   0004BA                     PIR12           equ	1210	;# 
 11943   0004BB                     PIR13           equ	1211	;# 
 11944   0004BC                     PIR14           equ	1212	;# 
 11945   0004BD                     PIR15           equ	1213	;# 
 11946   0004BE                     LATA            equ	1214	;# 
 11947   0004BF                     LATB            equ	1215	;# 
 11948   0004C0                     LATC            equ	1216	;# 
 11949   0004C6                     TRISA           equ	1222	;# 
 11950   0004C7                     TRISB           equ	1223	;# 
 11951   0004C8                     TRISC           equ	1224	;# 
 11952   0004CA                     TRISE           equ	1226	;# 
 11953   0004CE                     PORTA           equ	1230	;# 
 11954   0004CF                     PORTB           equ	1231	;# 
 11955   0004D0                     PORTC           equ	1232	;# 
 11956   0004D2                     PORTE           equ	1234	;# 
 11957   0004D6                     INTCON0         equ	1238	;# 
 11958   0004D7                     INTCON1         equ	1239	;# 
 11959   0004D8                     STATUS          equ	1240	;# 
 11960   0004D9                     FSR2            equ	1241	;# 
 11961   0004D9                     FSR2L           equ	1241	;# 
 11962   0004DA                     FSR2H           equ	1242	;# 
 11963   0004DB                     PLUSW2          equ	1243	;# 
 11964   0004DC                     PREINC2         equ	1244	;# 
 11965   0004DD                     POSTDEC2        equ	1245	;# 
 11966   0004DE                     POSTINC2        equ	1246	;# 
 11967   0004DF                     INDF2           equ	1247	;# 
 11968   0004E0                     BSR             equ	1248	;# 
 11969   0004E1                     FSR1            equ	1249	;# 
 11970   0004E1                     FSR1L           equ	1249	;# 
 11971   0004E2                     FSR1H           equ	1250	;# 
 11972   0004E3                     PLUSW1          equ	1251	;# 
 11973   0004E4                     PREINC1         equ	1252	;# 
 11974   0004E5                     POSTDEC1        equ	1253	;# 
 11975   0004E6                     POSTINC1        equ	1254	;# 
 11976   0004E7                     INDF1           equ	1255	;# 
 11977   0004E8                     WREG            equ	1256	;# 
 11978   0004E9                     FSR0            equ	1257	;# 
 11979   0004E9                     FSR0L           equ	1257	;# 
 11980   0004EA                     FSR0H           equ	1258	;# 
 11981   0004EB                     PLUSW0          equ	1259	;# 
 11982   0004EC                     PREINC0         equ	1260	;# 
 11983   0004ED                     POSTDEC0        equ	1261	;# 
 11984   0004EE                     POSTINC0        equ	1262	;# 
 11985   0004EF                     INDF0           equ	1263	;# 
 11986   0004F0                     PCON0           equ	1264	;# 
 11987   0004F1                     PCON1           equ	1265	;# 
 11988   0004F2                     CPUDOZE         equ	1266	;# 
 11989   0004F3                     PROD            equ	1267	;# 
 11990   0004F3                     PRODL           equ	1267	;# 
 11991   0004F4                     PRODH           equ	1268	;# 
 11992   0004F5                     TABLAT          equ	1269	;# 
 11993   0004F6                     TBLPTR          equ	1270	;# 
 11994   0004F6                     TBLPTRL         equ	1270	;# 
 11995   0004F7                     TBLPTRH         equ	1271	;# 
 11996   0004F8                     TBLPTRU         equ	1272	;# 
 11997   0004F9                     PCLAT           equ	1273	;# 
 11998   0004F9                     PCL             equ	1273	;# 
 11999   0004FA                     PCLATH          equ	1274	;# 
 12000   0004FB                     PCLATU          equ	1275	;# 
 12001   0004FC                     STKPTR          equ	1276	;# 
 12002   0004FD                     TOS             equ	1277	;# 
 12003   0004FD                     TOSL            equ	1277	;# 
 12004   0004FE                     TOSH            equ	1278	;# 
 12005   0004FF                     TOSU            equ	1279	;# 
 12006   000038                     BOOTREG         equ	56	;# 
 12007   000039                     CLKRCON         equ	57	;# 
 12008   00003A                     CLKRCLK         equ	58	;# 
 12009   000040                     NVMCON0         equ	64	;# 
 12010   000041                     NVMCON1         equ	65	;# 
 12011   000042                     NVMLOCK         equ	66	;# 
 12012   000043                     NVMADR          equ	67	;# 
 12013   000043                     NVMADRL         equ	67	;# 
 12014   000044                     NVMADRH         equ	68	;# 
 12015   000045                     NVMADRU         equ	69	;# 
 12016   000046                     NVMDAT          equ	70	;# 
 12017   000046                     NVMDATL         equ	70	;# 
 12018   000047                     NVMDATH         equ	71	;# 
 12019   000048                     VREGCON         equ	72	;# 
 12020   000049                     BORCON          equ	73	;# 
 12021   00004A                     HLVDCON0        equ	74	;# 
 12022   00004B                     HLVDCON1        equ	75	;# 
 12023   00004C                     ZCDCON          equ	76	;# 
 12024   000060                     PMD0            equ	96	;# 
 12025   000061                     PMD1            equ	97	;# 
 12026   000062                     PMD2            equ	98	;# 
 12027   000063                     PMD3            equ	99	;# 
 12028   000064                     PMD4            equ	100	;# 
 12029   000065                     PMD5            equ	101	;# 
 12030   000066                     PMD6            equ	102	;# 
 12031   000067                     PMD7            equ	103	;# 
 12032   000068                     PMD8            equ	104	;# 
 12033   00006A                     MD1CON0         equ	106	;# 
 12034   00006B                     MD1CON1         equ	107	;# 
 12035   00006C                     MD1SRC          equ	108	;# 
 12036   00006D                     MD1CARL         equ	109	;# 
 12037   00006E                     MD1CARH         equ	110	;# 
 12038   00006F                     CMOUT           equ	111	;# 
 12039   000070                     CM1CON0         equ	112	;# 
 12040   000071                     CM1CON1         equ	113	;# 
 12041   000072                     CM1NCH          equ	114	;# 
 12042   000073                     CM1PCH          equ	115	;# 
 12043   000074                     CM2CON0         equ	116	;# 
 12044   000075                     CM2CON1         equ	117	;# 
 12045   000076                     CM2NCH          equ	118	;# 
 12046   000077                     CM2PCH          equ	119	;# 
 12047   000078                     WDTCON0         equ	120	;# 
 12048   000079                     WDTCON1         equ	121	;# 
 12049   00007A                     WDTPSL          equ	122	;# 
 12050   00007B                     WDTPSH          equ	123	;# 
 12051   00007C                     WDTTMR          equ	124	;# 
 12052   00007D                     DAC1DAT         equ	125	;# 
 12053   00007D                     DAC1DATL        equ	125	;# 
 12054   00007F                     DAC1CON         equ	127	;# 
 12055   000080                     SPI1RXB         equ	128	;# 
 12056   000081                     SPI1TXB         equ	129	;# 
 12057   000082                     SPI1TCNT        equ	130	;# 
 12058   000082                     SPI1TCNTL       equ	130	;# 
 12059   000083                     SPI1TCNTH       equ	131	;# 
 12060   000084                     SPI1CON0        equ	132	;# 
 12061   000085                     SPI1CON1        equ	133	;# 
 12062   000086                     SPI1CON2        equ	134	;# 
 12063   000087                     SPI1STATUS      equ	135	;# 
 12064   000088                     SPI1TWIDTH      equ	136	;# 
 12065   000089                     SPI1BAUD        equ	137	;# 
 12066   00008A                     SPI1INTF        equ	138	;# 
 12067   00008B                     SPI1INTE        equ	139	;# 
 12068   00008C                     SPI1CLK         equ	140	;# 
 12069   00008D                     SPI2RXB         equ	141	;# 
 12070   00008E                     SPI2TXB         equ	142	;# 
 12071   00008F                     SPI2TCNT        equ	143	;# 
 12072   00008F                     SPI2TCNTL       equ	143	;# 
 12073   000090                     SPI2TCNTH       equ	144	;# 
 12074   000091                     SPI2CON0        equ	145	;# 
 12075   000092                     SPI2CON1        equ	146	;# 
 12076   000093                     SPI2CON2        equ	147	;# 
 12077   000094                     SPI2STATUS      equ	148	;# 
 12078   000095                     SPI2TWIDTH      equ	149	;# 
 12079   000096                     SPI2BAUD        equ	150	;# 
 12080   000097                     SPI2INTF        equ	151	;# 
 12081   000098                     SPI2INTE        equ	152	;# 
 12082   000099                     SPI2CLK         equ	153	;# 
 12083   0000AC                     ACTCON          equ	172	;# 
 12084   0000AD                     OSCCON1         equ	173	;# 
 12085   0000AE                     OSCCON2         equ	174	;# 
 12086   0000AF                     OSCCON3         equ	175	;# 
 12087   0000B0                     OSCTUNE         equ	176	;# 
 12088   0000B1                     OSCFRQ          equ	177	;# 
 12089   0000B1                     OSCFREQ         equ	177	;# 
 12090   0000B2                     OSCSTAT         equ	178	;# 
 12091   0000B2                     OSCSTAT1        equ	178	;# 
 12092   0000B3                     OSCEN           equ	179	;# 
 12093   0000B4                     PRLOCK          equ	180	;# 
 12094   0000B5                     SCANPR          equ	181	;# 
 12095   0000B6                     DMA1PR          equ	182	;# 
 12096   0000B7                     DMA2PR          equ	183	;# 
 12097   0000B8                     DMA3PR          equ	184	;# 
 12098   0000B9                     DMA4PR          equ	185	;# 
 12099   0000BA                     DMA5PR          equ	186	;# 
 12100   0000BB                     DMA6PR          equ	187	;# 
 12101   0000BC                     DMA7PR          equ	188	;# 
 12102   0000BD                     DMA8PR          equ	189	;# 
 12103   0000BE                     MAINPR          equ	190	;# 
 12104   0000BF                     ISRPR           equ	191	;# 
 12105   0000D4                     CLCDATA         equ	212	;# 
 12106   0000D5                     CLCSELECT       equ	213	;# 
 12107   0000D6                     CLCnCON         equ	214	;# 
 12108   0000D7                     CLCnPOL         equ	215	;# 
 12109   0000D8                     CLCnSEL0        equ	216	;# 
 12110   0000D9                     CLCnSEL1        equ	217	;# 
 12111   0000DA                     CLCnSEL2        equ	218	;# 
 12112   0000DB                     CLCnSEL3        equ	219	;# 
 12113   0000DC                     CLCnGLS0        equ	220	;# 
 12114   0000DD                     CLCnGLS1        equ	221	;# 
 12115   0000DE                     CLCnGLS2        equ	222	;# 
 12116   0000DF                     CLCnGLS3        equ	223	;# 
 12117   0000E8                     DMASELECT       equ	232	;# 
 12118   0000E9                     DMAnBUF         equ	233	;# 
 12119   0000EA                     DMAnDCNT        equ	234	;# 
 12120   0000EA                     DMAnDCNTL       equ	234	;# 
 12121   0000EB                     DMAnDCNTH       equ	235	;# 
 12122   0000EC                     DMAnDPTR        equ	236	;# 
 12123   0000EC                     DMAnDPTRL       equ	236	;# 
 12124   0000ED                     DMAnDPTRH       equ	237	;# 
 12125   0000EE                     DMAnDSZ         equ	238	;# 
 12126   0000EE                     DMAnDSZL        equ	238	;# 
 12127   0000EF                     DMAnDSZH        equ	239	;# 
 12128   0000F0                     DMAnDSA         equ	240	;# 
 12129   0000F0                     DMAnDSAL        equ	240	;# 
 12130   0000F1                     DMAnDSAH        equ	241	;# 
 12131   0000F2                     DMAnSCNT        equ	242	;# 
 12132   0000F2                     DMAnSCNTL       equ	242	;# 
 12133   0000F3                     DMAnSCNTH       equ	243	;# 
 12134   0000F4                     DMAnSPTR        equ	244	;# 
 12135   0000F4                     DMAnSPTRL       equ	244	;# 
 12136   0000F5                     DMAnSPTRH       equ	245	;# 
 12137   0000F6                     DMAnSPTRU       equ	246	;# 
 12138   0000F7                     DMAnSSZ         equ	247	;# 
 12139   0000F7                     DMAnSSZL        equ	247	;# 
 12140   0000F8                     DMAnSSZH        equ	248	;# 
 12141   0000F9                     DMAnSSA         equ	249	;# 
 12142   0000F9                     DMAnSSAL        equ	249	;# 
 12143   0000FA                     DMAnSSAH        equ	250	;# 
 12144   0000FB                     DMAnSSAU        equ	251	;# 
 12145   0000FC                     DMAnCON0        equ	252	;# 
 12146   0000FD                     DMAnCON1        equ	253	;# 
 12147   0000FE                     DMAnAIRQ        equ	254	;# 
 12148   0000FF                     DMAnSIRQ        equ	255	;# 
 12149   000100                     C1CONL          equ	256	;# 
 12150   000101                     C1CONH          equ	257	;# 
 12151   000102                     C1CONU          equ	258	;# 
 12152   000103                     C1CONT          equ	259	;# 
 12153   000104                     C1NBTCFGL       equ	260	;# 
 12154   000105                     C1NBTCFGH       equ	261	;# 
 12155   000106                     C1NBTCFGU       equ	262	;# 
 12156   000107                     C1NBTCFGT       equ	263	;# 
 12157   000108                     C1DBTCFGL       equ	264	;# 
 12158   000109                     C1DBTCFGH       equ	265	;# 
 12159   00010A                     C1DBTCFGU       equ	266	;# 
 12160   00010B                     C1DBTCFGT       equ	267	;# 
 12161   00010C                     C1TDCL          equ	268	;# 
 12162   00010D                     C1TDCH          equ	269	;# 
 12163   00010E                     C1TDCU          equ	270	;# 
 12164   000110                     C1TBC           equ	272	;# 
 12165   000110                     C1TBCL          equ	272	;# 
 12166   000111                     C1TBCH          equ	273	;# 
 12167   000112                     C1TBCU          equ	274	;# 
 12168   000113                     C1TBCT          equ	275	;# 
 12169   000114                     C1TSCONL        equ	276	;# 
 12170   000115                     C1TSCONH        equ	277	;# 
 12171   000116                     C1TSCONU        equ	278	;# 
 12172   000117                     C1TSCONT        equ	279	;# 
 12173   000118                     C1VECL          equ	280	;# 
 12174   000119                     C1VECH          equ	281	;# 
 12175   00011A                     C1VECU          equ	282	;# 
 12176   00011B                     C1VECT          equ	283	;# 
 12177   00011C                     C1INTL          equ	284	;# 
 12178   00011D                     C1INTH          equ	285	;# 
 12179   00011E                     C1INTU          equ	286	;# 
 12180   00011F                     C1INTT          equ	287	;# 
 12181   000120                     C1RXIF          equ	288	;# 
 12182   000120                     C1RXIFL         equ	288	;# 
 12183   000121                     C1RXIFH         equ	289	;# 
 12184   000122                     C1RXIFU         equ	290	;# 
 12185   000123                     C1RXIFT         equ	291	;# 
 12186   000124                     C1TXIF          equ	292	;# 
 12187   000124                     C1TXIFL         equ	292	;# 
 12188   000125                     C1TXIFH         equ	293	;# 
 12189   000126                     C1TXIFU         equ	294	;# 
 12190   000127                     C1TXIFT         equ	295	;# 
 12191   000128                     C1RXOVIF        equ	296	;# 
 12192   000128                     C1RXOVIFL       equ	296	;# 
 12193   000129                     C1RXOVIFH       equ	297	;# 
 12194   00012A                     C1RXOVIFU       equ	298	;# 
 12195   00012B                     C1RXOVIFT       equ	299	;# 
 12196   00012C                     C1TXATIF        equ	300	;# 
 12197   00012C                     C1TXATIFL       equ	300	;# 
 12198   00012D                     C1TXATIFH       equ	301	;# 
 12199   00012E                     C1TXATIFU       equ	302	;# 
 12200   00012F                     C1TXATIFT       equ	303	;# 
 12201   000130                     C1TXREQ         equ	304	;# 
 12202   000130                     C1TXREQL        equ	304	;# 
 12203   000131                     C1TXREQH        equ	305	;# 
 12204   000132                     C1TXREQU        equ	306	;# 
 12205   000133                     C1TXREQT        equ	307	;# 
 12206   000134                     C1TRECL         equ	308	;# 
 12207   000135                     C1TRECH         equ	309	;# 
 12208   000136                     C1TRECU         equ	310	;# 
 12209   000137                     C1TRECT         equ	311	;# 
 12210   000138                     C1BDIAG0L       equ	312	;# 
 12211   000139                     C1BDIAG0H       equ	313	;# 
 12212   00013C                     C1BDIAG1L       equ	316	;# 
 12213   00013D                     C1BDIAG1H       equ	317	;# 
 12214   00013E                     C1BDIAG1U       equ	318	;# 
 12215   00013F                     C1BDIAG1T       equ	319	;# 
 12216   000140                     C1TEFCONL       equ	320	;# 
 12217   000141                     C1TEFCONH       equ	321	;# 
 12218   000142                     C1TEFCONU       equ	322	;# 
 12219   000143                     C1TEFCONT       equ	323	;# 
 12220   000144                     C1TEFSTAL       equ	324	;# 
 12221   000145                     C1TEFSTAH       equ	325	;# 
 12222   000146                     C1TEFSTAU       equ	326	;# 
 12223   000147                     C1TEFSTAT       equ	327	;# 
 12224   000148                     C1TEFUA         equ	328	;# 
 12225   000148                     C1TEFUAL        equ	328	;# 
 12226   000149                     C1TEFUAH        equ	329	;# 
 12227   00014A                     C1TEFUAU        equ	330	;# 
 12228   00014B                     C1TEFUAT        equ	331	;# 
 12229   00014C                     C1FIFOBA        equ	332	;# 
 12230   00014C                     C1FIFOBAL       equ	332	;# 
 12231   00014D                     C1FIFOBAH       equ	333	;# 
 12232   00014E                     C1FIFOBAU       equ	334	;# 
 12233   00014F                     C1FIFOBAT       equ	335	;# 
 12234   000150                     C1TXQCONL       equ	336	;# 
 12235   000151                     C1TXQCONH       equ	337	;# 
 12236   000152                     C1TXQCONU       equ	338	;# 
 12237   000153                     C1TXQCONT       equ	339	;# 
 12238   000154                     C1TXQSTAL       equ	340	;# 
 12239   000155                     C1TXQSTAH       equ	341	;# 
 12240   000156                     C1TXQSTAU       equ	342	;# 
 12241   000157                     C1TXQSTAT       equ	343	;# 
 12242   000158                     C1TXQUA         equ	344	;# 
 12243   000158                     C1TXQUAL        equ	344	;# 
 12244   000159                     C1TXQUAH        equ	345	;# 
 12245   00015A                     C1TXQUAU        equ	346	;# 
 12246   00015B                     C1TXQUAT        equ	347	;# 
 12247   00015C                     C1FIFOCON1      equ	348	;# 
 12248   00015C                     C1FIFOCON1L     equ	348	;# 
 12249   00015D                     C1FIFOCON1H     equ	349	;# 
 12250   00015E                     C1FIFOCON1U     equ	350	;# 
 12251   00015F                     C1FIFOCON1T     equ	351	;# 
 12252   000160                     C1FIFOSTA1      equ	352	;# 
 12253   000160                     C1FIFOSTA1L     equ	352	;# 
 12254   000161                     C1FIFOSTA1H     equ	353	;# 
 12255   000162                     C1FIFOSTA1U     equ	354	;# 
 12256   000163                     C1FIFOSTA1T     equ	355	;# 
 12257   000164                     C1FIFOUA1       equ	356	;# 
 12258   000164                     C1FIFOUA1L      equ	356	;# 
 12259   000165                     C1FIFOUA1H      equ	357	;# 
 12260   000166                     C1FIFOUA1U      equ	358	;# 
 12261   000167                     C1FIFOUA1T      equ	359	;# 
 12262   000168                     C1FIFOCON2      equ	360	;# 
 12263   000168                     C1FIFOCON2L     equ	360	;# 
 12264   000169                     C1FIFOCON2H     equ	361	;# 
 12265   00016A                     C1FIFOCON2U     equ	362	;# 
 12266   00016B                     C1FIFOCON2T     equ	363	;# 
 12267   00016C                     C1FIFOSTA2      equ	364	;# 
 12268   00016C                     C1FIFOSTA2L     equ	364	;# 
 12269   00016D                     C1FIFOSTA2H     equ	365	;# 
 12270   00016E                     C1FIFOSTA2U     equ	366	;# 
 12271   00016F                     C1FIFOSTA2T     equ	367	;# 
 12272   000170                     C1FIFOUA2       equ	368	;# 
 12273   000170                     C1FIFOUA2L      equ	368	;# 
 12274   000171                     C1FIFOUA2H      equ	369	;# 
 12275   000172                     C1FIFOUA2U      equ	370	;# 
 12276   000173                     C1FIFOUA2T      equ	371	;# 
 12277   000174                     C1FIFOCON3      equ	372	;# 
 12278   000174                     C1FIFOCON3L     equ	372	;# 
 12279   000175                     C1FIFOCON3H     equ	373	;# 
 12280   000176                     C1FIFOCON3U     equ	374	;# 
 12281   000177                     C1FIFOCON3T     equ	375	;# 
 12282   000178                     C1FIFOSTA3      equ	376	;# 
 12283   000178                     C1FIFOSTA3L     equ	376	;# 
 12284   000179                     C1FIFOSTA3H     equ	377	;# 
 12285   00017A                     C1FIFOSTA3U     equ	378	;# 
 12286   00017B                     C1FIFOSTA3T     equ	379	;# 
 12287   00017C                     C1FIFOUA3       equ	380	;# 
 12288   00017C                     C1FIFOUA3L      equ	380	;# 
 12289   00017D                     C1FIFOUA3H      equ	381	;# 
 12290   00017E                     C1FIFOUA3U      equ	382	;# 
 12291   00017F                     C1FIFOUA3T      equ	383	;# 
 12292   000180                     C1FLTCON0L      equ	384	;# 
 12293   000181                     C1FLTCON0H      equ	385	;# 
 12294   000182                     C1FLTCON0U      equ	386	;# 
 12295   000183                     C1FLTCON0T      equ	387	;# 
 12296   000184                     C1FLTCON1L      equ	388	;# 
 12297   000185                     C1FLTCON1H      equ	389	;# 
 12298   000186                     C1FLTCON1U      equ	390	;# 
 12299   000187                     C1FLTCON1T      equ	391	;# 
 12300   000188                     C1FLTCON2L      equ	392	;# 
 12301   000189                     C1FLTCON2H      equ	393	;# 
 12302   00018A                     C1FLTCON2U      equ	394	;# 
 12303   00018B                     C1FLTCON2T      equ	395	;# 
 12304   00018C                     C1FLTOBJ0       equ	396	;# 
 12305   00018C                     C1FLTOBJ0L      equ	396	;# 
 12306   00018D                     C1FLTOBJ0H      equ	397	;# 
 12307   00018E                     C1FLTOBJ0U      equ	398	;# 
 12308   00018F                     C1FLTOBJ0T      equ	399	;# 
 12309   000190                     C1MASK0         equ	400	;# 
 12310   000190                     C1MASK0L        equ	400	;# 
 12311   000191                     C1MASK0H        equ	401	;# 
 12312   000192                     C1MASK0U        equ	402	;# 
 12313   000193                     C1MASK0T        equ	403	;# 
 12314   000194                     C1FLTOBJ1       equ	404	;# 
 12315   000194                     C1FLTOBJ1L      equ	404	;# 
 12316   000195                     C1FLTOBJ1H      equ	405	;# 
 12317   000196                     C1FLTOBJ1U      equ	406	;# 
 12318   000197                     C1FLTOBJ1T      equ	407	;# 
 12319   000198                     C1MASK1         equ	408	;# 
 12320   000198                     C1MASK1L        equ	408	;# 
 12321   000199                     C1MASK1H        equ	409	;# 
 12322   00019A                     C1MASK1U        equ	410	;# 
 12323   00019B                     C1MASK1T        equ	411	;# 
 12324   00019C                     C1FLTOBJ2       equ	412	;# 
 12325   00019C                     C1FLTOBJ2L      equ	412	;# 
 12326   00019D                     C1FLTOBJ2H      equ	413	;# 
 12327   00019E                     C1FLTOBJ2U      equ	414	;# 
 12328   00019F                     C1FLTOBJ2T      equ	415	;# 
 12329   0001A0                     C1MASK2         equ	416	;# 
 12330   0001A0                     C1MASK2L        equ	416	;# 
 12331   0001A1                     C1MASK2H        equ	417	;# 
 12332   0001A2                     C1MASK2U        equ	418	;# 
 12333   0001A3                     C1MASK2T        equ	419	;# 
 12334   0001A4                     C1FLTOBJ3       equ	420	;# 
 12335   0001A4                     C1FLTOBJ3L      equ	420	;# 
 12336   0001A5                     C1FLTOBJ3H      equ	421	;# 
 12337   0001A6                     C1FLTOBJ3U      equ	422	;# 
 12338   0001A7                     C1FLTOBJ3T      equ	423	;# 
 12339   0001A8                     C1MASK3         equ	424	;# 
 12340   0001A8                     C1MASK3L        equ	424	;# 
 12341   0001A9                     C1MASK3H        equ	425	;# 
 12342   0001AA                     C1MASK3U        equ	426	;# 
 12343   0001AB                     C1MASK3T        equ	427	;# 
 12344   0001AC                     C1FLTOBJ4       equ	428	;# 
 12345   0001AC                     C1FLTOBJ4L      equ	428	;# 
 12346   0001AD                     C1FLTOBJ4H      equ	429	;# 
 12347   0001AE                     C1FLTOBJ4U      equ	430	;# 
 12348   0001AF                     C1FLTOBJ4T      equ	431	;# 
 12349   0001B0                     C1MASK4         equ	432	;# 
 12350   0001B0                     C1MASK4L        equ	432	;# 
 12351   0001B1                     C1MASK4H        equ	433	;# 
 12352   0001B2                     C1MASK4U        equ	434	;# 
 12353   0001B3                     C1MASK4T        equ	435	;# 
 12354   0001B4                     C1FLTOBJ5       equ	436	;# 
 12355   0001B4                     C1FLTOBJ5L      equ	436	;# 
 12356   0001B5                     C1FLTOBJ5H      equ	437	;# 
 12357   0001B6                     C1FLTOBJ5U      equ	438	;# 
 12358   0001B7                     C1FLTOBJ5T      equ	439	;# 
 12359   0001B8                     C1MASK5         equ	440	;# 
 12360   0001B8                     C1MASK5L        equ	440	;# 
 12361   0001B9                     C1MASK5H        equ	441	;# 
 12362   0001BA                     C1MASK5U        equ	442	;# 
 12363   0001BB                     C1MASK5T        equ	443	;# 
 12364   0001BC                     C1FLTOBJ6       equ	444	;# 
 12365   0001BC                     C1FLTOBJ6L      equ	444	;# 
 12366   0001BD                     C1FLTOBJ6H      equ	445	;# 
 12367   0001BE                     C1FLTOBJ6U      equ	446	;# 
 12368   0001BF                     C1FLTOBJ6T      equ	447	;# 
 12369   0001C0                     C1MASK6         equ	448	;# 
 12370   0001C0                     C1MASK6L        equ	448	;# 
 12371   0001C1                     C1MASK6H        equ	449	;# 
 12372   0001C2                     C1MASK6U        equ	450	;# 
 12373   0001C3                     C1MASK6T        equ	451	;# 
 12374   0001C4                     C1FLTOBJ7       equ	452	;# 
 12375   0001C4                     C1FLTOBJ7L      equ	452	;# 
 12376   0001C5                     C1FLTOBJ7H      equ	453	;# 
 12377   0001C6                     C1FLTOBJ7U      equ	454	;# 
 12378   0001C7                     C1FLTOBJ7T      equ	455	;# 
 12379   0001C8                     C1MASK7         equ	456	;# 
 12380   0001C8                     C1MASK7L        equ	456	;# 
 12381   0001C9                     C1MASK7H        equ	457	;# 
 12382   0001CA                     C1MASK7U        equ	458	;# 
 12383   0001CB                     C1MASK7T        equ	459	;# 
 12384   0001CC                     C1FLTOBJ8       equ	460	;# 
 12385   0001CC                     C1FLTOBJ8L      equ	460	;# 
 12386   0001CD                     C1FLTOBJ8H      equ	461	;# 
 12387   0001CE                     C1FLTOBJ8U      equ	462	;# 
 12388   0001CF                     C1FLTOBJ8T      equ	463	;# 
 12389   0001D0                     C1MASK8         equ	464	;# 
 12390   0001D0                     C1MASK8L        equ	464	;# 
 12391   0001D1                     C1MASK8H        equ	465	;# 
 12392   0001D2                     C1MASK8U        equ	466	;# 
 12393   0001D3                     C1MASK8T        equ	467	;# 
 12394   0001D4                     C1FLTOBJ9       equ	468	;# 
 12395   0001D4                     C1FLTOBJ9L      equ	468	;# 
 12396   0001D5                     C1FLTOBJ9H      equ	469	;# 
 12397   0001D6                     C1FLTOBJ9U      equ	470	;# 
 12398   0001D7                     C1FLTOBJ9T      equ	471	;# 
 12399   0001D8                     C1MASK9         equ	472	;# 
 12400   0001D8                     C1MASK9L        equ	472	;# 
 12401   0001D9                     C1MASK9H        equ	473	;# 
 12402   0001DA                     C1MASK9U        equ	474	;# 
 12403   0001DB                     C1MASK9T        equ	475	;# 
 12404   0001DC                     C1FLTOBJ10      equ	476	;# 
 12405   0001DC                     C1FLTOBJ10L     equ	476	;# 
 12406   0001DD                     C1FLTOBJ10H     equ	477	;# 
 12407   0001DE                     C1FLTOBJ10U     equ	478	;# 
 12408   0001DF                     C1FLTOBJ10T     equ	479	;# 
 12409   0001E0                     C1MASK10        equ	480	;# 
 12410   0001E0                     C1MASK10L       equ	480	;# 
 12411   0001E1                     C1MASK10H       equ	481	;# 
 12412   0001E2                     C1MASK10U       equ	482	;# 
 12413   0001E3                     C1MASK10T       equ	483	;# 
 12414   0001E4                     C1FLTOBJ11      equ	484	;# 
 12415   0001E4                     C1FLTOBJ11L     equ	484	;# 
 12416   0001E5                     C1FLTOBJ11H     equ	485	;# 
 12417   0001E6                     C1FLTOBJ11U     equ	486	;# 
 12418   0001E7                     C1FLTOBJ11T     equ	487	;# 
 12419   0001E8                     C1MASK11        equ	488	;# 
 12420   0001E8                     C1MASK11L       equ	488	;# 
 12421   0001E9                     C1MASK11H       equ	489	;# 
 12422   0001EA                     C1MASK11U       equ	490	;# 
 12423   0001EB                     C1MASK11T       equ	491	;# 
 12424   000200                     PPSLOCK         equ	512	;# 
 12425   000201                     RA0PPS          equ	513	;# 
 12426   000202                     RA1PPS          equ	514	;# 
 12427   000203                     RA2PPS          equ	515	;# 
 12428   000204                     RA3PPS          equ	516	;# 
 12429   000205                     RA4PPS          equ	517	;# 
 12430   000206                     RA5PPS          equ	518	;# 
 12431   000207                     RA6PPS          equ	519	;# 
 12432   000208                     RA7PPS          equ	520	;# 
 12433   000209                     RB0PPS          equ	521	;# 
 12434   00020A                     RB1PPS          equ	522	;# 
 12435   00020B                     RB2PPS          equ	523	;# 
 12436   00020C                     RB3PPS          equ	524	;# 
 12437   00020D                     RB4PPS          equ	525	;# 
 12438   00020E                     RB5PPS          equ	526	;# 
 12439   00020F                     RB6PPS          equ	527	;# 
 12440   000210                     RB7PPS          equ	528	;# 
 12441   000211                     RC0PPS          equ	529	;# 
 12442   000212                     RC1PPS          equ	530	;# 
 12443   000213                     RC2PPS          equ	531	;# 
 12444   000214                     RC3PPS          equ	532	;# 
 12445   000215                     RC4PPS          equ	533	;# 
 12446   000216                     RC5PPS          equ	534	;# 
 12447   000217                     RC6PPS          equ	535	;# 
 12448   000218                     RC7PPS          equ	536	;# 
 12449   00023D                     CANRXPPS        equ	573	;# 
 12450   00023E                     INT0PPS         equ	574	;# 
 12451   00023F                     INT1PPS         equ	575	;# 
 12452   000240                     INT2PPS         equ	576	;# 
 12453   000241                     T0CKIPPS        equ	577	;# 
 12454   000242                     T1CKIPPS        equ	578	;# 
 12455   000243                     T1GPPS          equ	579	;# 
 12456   000244                     T3CKIPPS        equ	580	;# 
 12457   000245                     T3GPPS          equ	581	;# 
 12458   000246                     T5CKIPPS        equ	582	;# 
 12459   000247                     T5GPPS          equ	583	;# 
 12460   000248                     T2INPPS         equ	584	;# 
 12461   000249                     T4INPPS         equ	585	;# 
 12462   00024A                     T6INPPS         equ	586	;# 
 12463   00024B                     TUIN0PPS        equ	587	;# 
 12464   00024C                     TUIN1PPS        equ	588	;# 
 12465   00024F                     CCP1PPS         equ	591	;# 
 12466   000250                     CCP2PPS         equ	592	;# 
 12467   000251                     CCP3PPS         equ	593	;# 
 12468   000253                     PWM1ERSPPS      equ	595	;# 
 12469   000254                     PWM2ERSPPS      equ	596	;# 
 12470   000255                     PWM3ERSPPS      equ	597	;# 
 12471   000256                     PWM4ERSPPS      equ	598	;# 
 12472   000257                     PWMIN0PPS       equ	599	;# 
 12473   000258                     PWMIN1PPS       equ	600	;# 
 12474   000259                     SMT1WINPPS      equ	601	;# 
 12475   00025A                     SMT1SIGPPS      equ	602	;# 
 12476   00025B                     CWG1PPS         equ	603	;# 
 12477   00025B                     CWG1INPPS       equ	603	;# 
 12478   00025C                     CWG2PPS         equ	604	;# 
 12479   00025C                     CWG2INPPS       equ	604	;# 
 12480   00025D                     CWG3PPS         equ	605	;# 
 12481   00025D                     CWG3INPPS       equ	605	;# 
 12482   00025E                     MD1CARLPPS      equ	606	;# 
 12483   00025E                     MDCARLPPS       equ	606	;# 
 12484   00025F                     MD1CARHPPS      equ	607	;# 
 12485   00025F                     MDCARHPPS       equ	607	;# 
 12486   000260                     MD1SRCPPS       equ	608	;# 
 12487   000260                     MDSRCPPS        equ	608	;# 
 12488   000261                     CLCIN0PPS       equ	609	;# 
 12489   000262                     CLCIN1PPS       equ	610	;# 
 12490   000263                     CLCIN2PPS       equ	611	;# 
 12491   000264                     CLCIN3PPS       equ	612	;# 
 12492   000265                     CLCIN4PPS       equ	613	;# 
 12493   000266                     CLCIN5PPS       equ	614	;# 
 12494   000267                     CLCIN6PPS       equ	615	;# 
 12495   000268                     CLCIN7PPS       equ	616	;# 
 12496   000269                     ADACTPPS        equ	617	;# 
 12497   00026A                     SPI1SCKPPS      equ	618	;# 
 12498   00026B                     SPI1SDIPPS      equ	619	;# 
 12499   00026C                     SPI1SSPPS       equ	620	;# 
 12500   00026D                     SPI2SCKPPS      equ	621	;# 
 12501   00026E                     SPI2SDIPPS      equ	622	;# 
 12502   00026F                     SPI2SSPPS       equ	623	;# 
 12503   000270                     I2C1SDAPPS      equ	624	;# 
 12504   000271                     I2C1SCLPPS      equ	625	;# 
 12505   000272                     U1RXPPS         equ	626	;# 
 12506   000273                     U1CTSPPS        equ	627	;# 
 12507   000274                     U2RXPPS         equ	628	;# 
 12508   000275                     U2CTSPPS        equ	629	;# 
 12509   000276                     U3RXPPS         equ	630	;# 
 12510   000277                     U3CTSPPS        equ	631	;# 
 12511   000278                     U4RXPPS         equ	632	;# 
 12512   000279                     U4CTSPPS        equ	633	;# 
 12513   00027A                     U5RXPPS         equ	634	;# 
 12514   00027B                     U5CTSPPS        equ	635	;# 
 12515   000286                     RC4I2C          equ	646	;# 
 12516   000287                     RC3I2C          equ	647	;# 
 12517   000288                     RB2I2C          equ	648	;# 
 12518   000289                     RB1I2C          equ	649	;# 
 12519   00028A                     I2C1RXB         equ	650	;# 
 12520   00028B                     I2C1TXB         equ	651	;# 
 12521   00028C                     I2C1CNTL        equ	652	;# 
 12522   00028D                     I2C1CNTH        equ	653	;# 
 12523   00028E                     I2C1ADB0        equ	654	;# 
 12524   00028F                     I2C1ADB1        equ	655	;# 
 12525   000290                     I2C1ADR0        equ	656	;# 
 12526   000291                     I2C1ADR1        equ	657	;# 
 12527   000292                     I2C1ADR2        equ	658	;# 
 12528   000293                     I2C1ADR3        equ	659	;# 
 12529   000294                     I2C1CON0        equ	660	;# 
 12530   000295                     I2C1CON1        equ	661	;# 
 12531   000296                     I2C1CON2        equ	662	;# 
 12532   000297                     I2C1ERR         equ	663	;# 
 12533   000298                     I2C1STAT0       equ	664	;# 
 12534   000299                     I2C1STAT1       equ	665	;# 
 12535   00029A                     I2C1PIR         equ	666	;# 
 12536   00029B                     I2C1PIE         equ	667	;# 
 12537   00029C                     I2C1BTO         equ	668	;# 
 12538   00029D                     I2C1BAUD        equ	669	;# 
 12539   00029E                     I2C1CLK         equ	670	;# 
 12540   00029F                     I2C1BTOC        equ	671	;# 
 12541   0002A1                     U1RXB           equ	673	;# 
 12542   0002A1                     U1RXBL          equ	673	;# 
 12543   0002A2                     U1RXCHK         equ	674	;# 
 12544   0002A3                     U1TXB           equ	675	;# 
 12545   0002A3                     U1TXBL          equ	675	;# 
 12546   0002A4                     U1TXCHK         equ	676	;# 
 12547   0002A5                     U1P1            equ	677	;# 
 12548   0002A5                     U1P1L           equ	677	;# 
 12549   0002A6                     U1P1H           equ	678	;# 
 12550   0002A7                     U1P2            equ	679	;# 
 12551   0002A7                     U1P2L           equ	679	;# 
 12552   0002A8                     U1P2H           equ	680	;# 
 12553   0002A9                     U1P3            equ	681	;# 
 12554   0002A9                     U1P3L           equ	681	;# 
 12555   0002AA                     U1P3H           equ	682	;# 
 12556   0002AB                     U1CON0          equ	683	;# 
 12557   0002AC                     U1CON1          equ	684	;# 
 12558   0002AD                     U1CON2          equ	685	;# 
 12559   0002AE                     U1BRG           equ	686	;# 
 12560   0002AE                     U1BRGL          equ	686	;# 
 12561   0002AF                     U1BRGH          equ	687	;# 
 12562   0002B0                     U1FIFO          equ	688	;# 
 12563   0002B1                     U1UIR           equ	689	;# 
 12564   0002B2                     U1ERRIR         equ	690	;# 
 12565   0002B3                     U1ERRIE         equ	691	;# 
 12566   0002B4                     U2RXB           equ	692	;# 
 12567   0002B4                     U2RXBL          equ	692	;# 
 12568   0002B5                     U2RXCHK         equ	693	;# 
 12569   0002B6                     U2TXB           equ	694	;# 
 12570   0002B6                     U2TXBL          equ	694	;# 
 12571   0002B7                     U2TXCHK         equ	695	;# 
 12572   0002B8                     U2P1            equ	696	;# 
 12573   0002B8                     U2P1L           equ	696	;# 
 12574   0002B9                     U2P1H           equ	697	;# 
 12575   0002BA                     U2P2            equ	698	;# 
 12576   0002BA                     U2P2L           equ	698	;# 
 12577   0002BB                     U2P2H           equ	699	;# 
 12578   0002BC                     U2P3            equ	700	;# 
 12579   0002BC                     U2P3L           equ	700	;# 
 12580   0002BD                     U2P3H           equ	701	;# 
 12581   0002BE                     U2CON0          equ	702	;# 
 12582   0002BF                     U2CON1          equ	703	;# 
 12583   0002C0                     U2CON2          equ	704	;# 
 12584   0002C1                     U2BRG           equ	705	;# 
 12585   0002C1                     U2BRGL          equ	705	;# 
 12586   0002C2                     U2BRGH          equ	706	;# 
 12587   0002C3                     U2FIFO          equ	707	;# 
 12588   0002C4                     U2UIR           equ	708	;# 
 12589   0002C5                     U2ERRIR         equ	709	;# 
 12590   0002C6                     U2ERRIE         equ	710	;# 
 12591   0002C7                     U3RXB           equ	711	;# 
 12592   0002C7                     U3RXBL          equ	711	;# 
 12593   0002C9                     U3TXB           equ	713	;# 
 12594   0002C9                     U3TXBL          equ	713	;# 
 12595   0002CB                     U3P1            equ	715	;# 
 12596   0002CB                     U3P1L           equ	715	;# 
 12597   0002CD                     U3P2            equ	717	;# 
 12598   0002CD                     U3P2L           equ	717	;# 
 12599   0002CF                     U3P3            equ	719	;# 
 12600   0002CF                     U3P3L           equ	719	;# 
 12601   0002D1                     U3CON0          equ	721	;# 
 12602   0002D2                     U3CON1          equ	722	;# 
 12603   0002D3                     U3CON2          equ	723	;# 
 12604   0002D4                     U3BRG           equ	724	;# 
 12605   0002D4                     U3BRGL          equ	724	;# 
 12606   0002D5                     U3BRGH          equ	725	;# 
 12607   0002D6                     U3FIFO          equ	726	;# 
 12608   0002D7                     U3UIR           equ	727	;# 
 12609   0002D8                     U3ERRIR         equ	728	;# 
 12610   0002D9                     U3ERRIE         equ	729	;# 
 12611   0002DA                     U4RXB           equ	730	;# 
 12612   0002DA                     U4RXBL          equ	730	;# 
 12613   0002DC                     U4TXB           equ	732	;# 
 12614   0002DC                     U4TXBL          equ	732	;# 
 12615   0002DE                     U4P1            equ	734	;# 
 12616   0002DE                     U4P1L           equ	734	;# 
 12617   0002E0                     U4P2            equ	736	;# 
 12618   0002E0                     U4P2L           equ	736	;# 
 12619   0002E2                     U4P3            equ	738	;# 
 12620   0002E2                     U4P3L           equ	738	;# 
 12621   0002E4                     U4CON0          equ	740	;# 
 12622   0002E5                     U4CON1          equ	741	;# 
 12623   0002E6                     U4CON2          equ	742	;# 
 12624   0002E7                     U4BRG           equ	743	;# 
 12625   0002E7                     U4BRGL          equ	743	;# 
 12626   0002E8                     U4BRGH          equ	744	;# 
 12627   0002E9                     U4FIFO          equ	745	;# 
 12628   0002EA                     U4UIR           equ	746	;# 
 12629   0002EB                     U4ERRIR         equ	747	;# 
 12630   0002EC                     U4ERRIE         equ	748	;# 
 12631   0002ED                     U5RXB           equ	749	;# 
 12632   0002ED                     U5RXBL          equ	749	;# 
 12633   0002EF                     U5TXB           equ	751	;# 
 12634   0002EF                     U5TXBL          equ	751	;# 
 12635   0002F1                     U5P1            equ	753	;# 
 12636   0002F1                     U5P1L           equ	753	;# 
 12637   0002F3                     U5P2            equ	755	;# 
 12638   0002F3                     U5P2L           equ	755	;# 
 12639   0002F5                     U5P3            equ	757	;# 
 12640   0002F5                     U5P3L           equ	757	;# 
 12641   0002F7                     U5CON0          equ	759	;# 
 12642   0002F8                     U5CON1          equ	760	;# 
 12643   0002F9                     U5CON2          equ	761	;# 
 12644   0002FA                     U5BRG           equ	762	;# 
 12645   0002FA                     U5BRGL          equ	762	;# 
 12646   0002FB                     U5BRGH          equ	763	;# 
 12647   0002FC                     U5FIFO          equ	764	;# 
 12648   0002FD                     U5UIR           equ	765	;# 
 12649   0002FE                     U5ERRIR         equ	766	;# 
 12650   0002FF                     U5ERRIE         equ	767	;# 
 12651   000300                     SMT1TMR         equ	768	;# 
 12652   000300                     SMT1TMRL        equ	768	;# 
 12653   000301                     SMT1TMRH        equ	769	;# 
 12654   000302                     SMT1TMRU        equ	770	;# 
 12655   000303                     SMT1CPR         equ	771	;# 
 12656   000303                     SMT1CPRL        equ	771	;# 
 12657   000304                     SMT1CPRH        equ	772	;# 
 12658   000305                     SMT1CPRU        equ	773	;# 
 12659   000306                     SMT1CPW         equ	774	;# 
 12660   000306                     SMT1CPWL        equ	774	;# 
 12661   000307                     SMT1CPWH        equ	775	;# 
 12662   000308                     SMT1CPWU        equ	776	;# 
 12663   000309                     SMT1PR          equ	777	;# 
 12664   000309                     SMT1PRL         equ	777	;# 
 12665   00030A                     SMT1PRH         equ	778	;# 
 12666   00030B                     SMT1PRU         equ	779	;# 
 12667   00030C                     SMT1CON0        equ	780	;# 
 12668   00030D                     SMT1CON1        equ	781	;# 
 12669   00030E                     SMT1STAT        equ	782	;# 
 12670   00030F                     SMT1CLK         equ	783	;# 
 12671   000310                     SMT1SIG         equ	784	;# 
 12672   000311                     SMT1WIN         equ	785	;# 
 12673   000318                     TMR0L           equ	792	;# 
 12674   000318                     TMR0            equ	792	;# 
 12675   000319                     TMR0H           equ	793	;# 
 12676   000319                     PR0             equ	793	;# 
 12677   00031A                     T0CON0          equ	794	;# 
 12678   00031B                     T0CON1          equ	795	;# 
 12679   00031C                     TMR1            equ	796	;# 
 12680   00031C                     TMR1L           equ	796	;# 
 12681   00031D                     TMR1H           equ	797	;# 
 12682   00031E                     T1CON           equ	798	;# 
 12683   00031E                     TMR1CON         equ	798	;# 
 12684   00031F                     T1GCON          equ	799	;# 
 12685   00031F                     TMR1GCON        equ	799	;# 
 12686   000320                     T1GATE          equ	800	;# 
 12687   000320                     TMR1GATE        equ	800	;# 
 12688   000321                     T1CLK           equ	801	;# 
 12689   000321                     TMR1CLK         equ	801	;# 
 12690   000321                     PR1             equ	801	;# 
 12691   000322                     T2TMR           equ	802	;# 
 12692   000322                     TMR2            equ	802	;# 
 12693   000323                     T2PR            equ	803	;# 
 12694   000323                     PR2             equ	803	;# 
 12695   000324                     T2CON           equ	804	;# 
 12696   000325                     T2HLT           equ	805	;# 
 12697   000326                     T2CLKCON        equ	806	;# 
 12698   000326                     T2CLK           equ	806	;# 
 12699   000327                     T2RST           equ	807	;# 
 12700   000328                     TMR3            equ	808	;# 
 12701   000328                     TMR3L           equ	808	;# 
 12702   000329                     TMR3H           equ	809	;# 
 12703   00032A                     T3CON           equ	810	;# 
 12704   00032A                     TMR3CON         equ	810	;# 
 12705   00032B                     T3GCON          equ	811	;# 
 12706   00032B                     TMR3GCON        equ	811	;# 
 12707   00032C                     T3GATE          equ	812	;# 
 12708   00032C                     TMR3GATE        equ	812	;# 
 12709   00032D                     T3CLK           equ	813	;# 
 12710   00032D                     TMR3CLK         equ	813	;# 
 12711   00032D                     PR3             equ	813	;# 
 12712   00032E                     T4TMR           equ	814	;# 
 12713   00032E                     TMR4            equ	814	;# 
 12714   00032F                     T4PR            equ	815	;# 
 12715   00032F                     PR4             equ	815	;# 
 12716   000330                     T4CON           equ	816	;# 
 12717   000331                     T4HLT           equ	817	;# 
 12718   000332                     T4CLKCON        equ	818	;# 
 12719   000332                     T4CLK           equ	818	;# 
 12720   000333                     T4RST           equ	819	;# 
 12721   000334                     TMR5            equ	820	;# 
 12722   000334                     TMR5L           equ	820	;# 
 12723   000335                     TMR5H           equ	821	;# 
 12724   000336                     T5CON           equ	822	;# 
 12725   000336                     TMR5CON         equ	822	;# 
 12726   000337                     T5GCON          equ	823	;# 
 12727   000337                     TMR5GCON        equ	823	;# 
 12728   000338                     T5GATE          equ	824	;# 
 12729   000338                     TMR5GATE        equ	824	;# 
 12730   000339                     T5CLK           equ	825	;# 
 12731   000339                     TMR5CLK         equ	825	;# 
 12732   000339                     PR5             equ	825	;# 
 12733   00033A                     T6TMR           equ	826	;# 
 12734   00033A                     TMR6            equ	826	;# 
 12735   00033B                     T6PR            equ	827	;# 
 12736   00033B                     PR6             equ	827	;# 
 12737   00033C                     T6CON           equ	828	;# 
 12738   00033D                     T6HLT           equ	829	;# 
 12739   00033E                     T6CLKCON        equ	830	;# 
 12740   00033E                     T6CLK           equ	830	;# 
 12741   00033F                     T6RST           equ	831	;# 
 12742   000340                     CCPR1           equ	832	;# 
 12743   000340                     CCPR1L          equ	832	;# 
 12744   000341                     CCPR1H          equ	833	;# 
 12745   000342                     CCP1CON         equ	834	;# 
 12746   000343                     CCP1CAP         equ	835	;# 
 12747   000344                     CCPR2           equ	836	;# 
 12748   000344                     CCPR2L          equ	836	;# 
 12749   000345                     CCPR2H          equ	837	;# 
 12750   000346                     CCP2CON         equ	838	;# 
 12751   000347                     CCP2CAP         equ	839	;# 
 12752   000348                     CCPR3           equ	840	;# 
 12753   000348                     CCPR3L          equ	840	;# 
 12754   000349                     CCPR3H          equ	841	;# 
 12755   00034A                     CCP3CON         equ	842	;# 
 12756   00034B                     CCP3CAP         equ	843	;# 
 12757   00034C                     CCPTMRS0        equ	844	;# 
 12758   00034F                     CRCDATA         equ	847	;# 
 12759   00034F                     CRCDATAL        equ	847	;# 
 12760   000350                     CRCDATAH        equ	848	;# 
 12761   000351                     CRCDATAU        equ	849	;# 
 12762   000352                     CRCDATAT        equ	850	;# 
 12763   000353                     CRCOUT          equ	851	;# 
 12764   000353                     CRCSHFT         equ	851	;# 
 12765   000353                     CRCXOR          equ	851	;# 
 12766   000353                     CRCOUTL         equ	851	;# 
 12767   000353                     CRCSHFTL        equ	851	;# 
 12768   000353                     CRCSHIFTL       equ	851	;# 
 12769   000353                     CRCXORL         equ	851	;# 
 12770   000354                     CRCOUTH         equ	852	;# 
 12771   000354                     CRCSHFTH        equ	852	;# 
 12772   000354                     CRCSHIFTH       equ	852	;# 
 12773   000354                     CRCXORH         equ	852	;# 
 12774   000355                     CRCOUTU         equ	853	;# 
 12775   000355                     CRCSHFTU        equ	853	;# 
 12776   000355                     CRCSHIFTU       equ	853	;# 
 12777   000355                     CRCXORU         equ	853	;# 
 12778   000356                     CRCOUTT         equ	854	;# 
 12779   000356                     CRCSHFTT        equ	854	;# 
 12780   000356                     CRCSHIFTT       equ	854	;# 
 12781   000356                     CRCXORT         equ	854	;# 
 12782   000357                     CRCCON0         equ	855	;# 
 12783   000358                     CRCCON1         equ	856	;# 
 12784   000359                     CRCCON2         equ	857	;# 
 12785   00035A                     SCANLADR        equ	858	;# 
 12786   00035A                     SCANLADRL       equ	858	;# 
 12787   00035B                     SCANLADRH       equ	859	;# 
 12788   00035C                     SCANLADRU       equ	860	;# 
 12789   00035D                     SCANHADR        equ	861	;# 
 12790   00035D                     SCANHADRL       equ	861	;# 
 12791   00035E                     SCANHADRH       equ	862	;# 
 12792   00035F                     SCANHADRU       equ	863	;# 
 12793   000360                     SCANCON0        equ	864	;# 
 12794   000361                     SCANTRIG        equ	865	;# 
 12795   000362                     IPR0            equ	866	;# 
 12796   000363                     IPR1            equ	867	;# 
 12797   000364                     IPR2            equ	868	;# 
 12798   000365                     IPR3            equ	869	;# 
 12799   000366                     IPR4            equ	870	;# 
 12800   000367                     IPR5            equ	871	;# 
 12801   000368                     IPR6            equ	872	;# 
 12802   000369                     IPR7            equ	873	;# 
 12803   00036A                     IPR8            equ	874	;# 
 12804   00036B                     IPR9            equ	875	;# 
 12805   00036C                     IPR10           equ	876	;# 
 12806   00036D                     IPR11           equ	877	;# 
 12807   00036E                     IPR12           equ	878	;# 
 12808   00036F                     IPR13           equ	879	;# 
 12809   000370                     IPR14           equ	880	;# 
 12810   000371                     IPR15           equ	881	;# 
 12811   000373                     STATUS_CSHAD    equ	883	;# 
 12812   000374                     WREG_CSHAD      equ	884	;# 
 12813   000375                     BSR_CSHAD       equ	885	;# 
 12814   000376                     SHADCON         equ	886	;# 
 12815   000377                     STATUS_SHAD     equ	887	;# 
 12816   000378                     WREG_SHAD       equ	888	;# 
 12817   000379                     BSR_SHAD        equ	889	;# 
 12818   00037A                     PCLATH_SHAD     equ	890	;# 
 12819   00037B                     PCLATU_SHAD     equ	891	;# 
 12820   00037C                     FSR0SH          equ	892	;# 
 12821   00037C                     FSR0L_SHAD      equ	892	;# 
 12822   00037D                     FSR0H_SHAD      equ	893	;# 
 12823   00037E                     FSR1SH          equ	894	;# 
 12824   00037E                     FSR1L_SHAD      equ	894	;# 
 12825   00037F                     FSR1H_SHAD      equ	895	;# 
 12826   000380                     FSR2SH          equ	896	;# 
 12827   000380                     FSR2L_SHAD      equ	896	;# 
 12828   000381                     FSR2H_SHAD      equ	897	;# 
 12829   000382                     PRODSH          equ	898	;# 
 12830   000382                     PRODL_SHAD      equ	898	;# 
 12831   000383                     PRODH_SHAD      equ	899	;# 
 12832   000387                     TU16ACON0       equ	903	;# 
 12833   000388                     TU16ACON1       equ	904	;# 
 12834   000389                     TU16AHLT        equ	905	;# 
 12835   00038A                     TU16APS         equ	906	;# 
 12836   00038B                     TU16ATMR        equ	907	;# 
 12837   00038B                     TU16ACR         equ	907	;# 
 12838   00038B                     TU16ATMRL       equ	907	;# 
 12839   00038B                     TU16ACRL        equ	907	;# 
 12840   00038C                     TU16ATMRH       equ	908	;# 
 12841   00038C                     TU16ACRH        equ	908	;# 
 12842   00038D                     TU16APR         equ	909	;# 
 12843   00038D                     TU16APRL        equ	909	;# 
 12844   00038E                     TU16APRH        equ	910	;# 
 12845   00038F                     TU16ACLK        equ	911	;# 
 12846   000390                     TU16AERS        equ	912	;# 
 12847   000393                     TU16BCON0       equ	915	;# 
 12848   000394                     TU16BCON1       equ	916	;# 
 12849   000395                     TU16BHLT        equ	917	;# 
 12850   000396                     TU16BPS         equ	918	;# 
 12851   000397                     TU16BTMR        equ	919	;# 
 12852   000397                     TU16BCR         equ	919	;# 
 12853   000397                     TU16BTMRL       equ	919	;# 
 12854   000397                     TU16BCRL        equ	919	;# 
 12855   000398                     TU16BTMRH       equ	920	;# 
 12856   000398                     TU16BCRH        equ	920	;# 
 12857   000399                     TU16BPR         equ	921	;# 
 12858   000399                     TU16BPRL        equ	921	;# 
 12859   00039A                     TU16BPRH        equ	922	;# 
 12860   00039B                     TU16BCLK        equ	923	;# 
 12861   00039C                     TU16BERS        equ	924	;# 
 12862   0003BB                     TUCHAIN         equ	955	;# 
 12863   0003BC                     CWG1CLK         equ	956	;# 
 12864   0003BC                     CWG1CLKCON      equ	956	;# 
 12865   0003BD                     CWG1ISM         equ	957	;# 
 12866   0003BE                     CWG1DBR         equ	958	;# 
 12867   0003BF                     CWG1DBF         equ	959	;# 
 12868   0003C0                     CWG1CON0        equ	960	;# 
 12869   0003C1                     CWG1CON1        equ	961	;# 
 12870   0003C2                     CWG1AS0         equ	962	;# 
 12871   0003C3                     CWG1AS1         equ	963	;# 
 12872   0003C4                     CWG1STR         equ	964	;# 
 12873   0003C5                     CWG2CLK         equ	965	;# 
 12874   0003C5                     CWG2CLKCON      equ	965	;# 
 12875   0003C6                     CWG2ISM         equ	966	;# 
 12876   0003C7                     CWG2DBR         equ	967	;# 
 12877   0003C8                     CWG2DBF         equ	968	;# 
 12878   0003C9                     CWG2CON0        equ	969	;# 
 12879   0003CA                     CWG2CON1        equ	970	;# 
 12880   0003CB                     CWG2AS0         equ	971	;# 
 12881   0003CC                     CWG2AS1         equ	972	;# 
 12882   0003CD                     CWG2STR         equ	973	;# 
 12883   0003CE                     CWG3CLK         equ	974	;# 
 12884   0003CE                     CWG3CLKCON      equ	974	;# 
 12885   0003CF                     CWG3ISM         equ	975	;# 
 12886   0003D0                     CWG3DBR         equ	976	;# 
 12887   0003D1                     CWG3DBF         equ	977	;# 
 12888   0003D2                     CWG3CON0        equ	978	;# 
 12889   0003D3                     CWG3CON1        equ	979	;# 
 12890   0003D4                     CWG3AS0         equ	980	;# 
 12891   0003D5                     CWG3AS1         equ	981	;# 
 12892   0003D6                     CWG3STR         equ	982	;# 
 12893   0003D7                     FVRCON          equ	983	;# 
 12894   0003D8                     ADCPCON         equ	984	;# 
 12895   0003D8                     ADCP            equ	984	;# 
 12896   0003D9                     ADLTH           equ	985	;# 
 12897   0003D9                     ADLTHL          equ	985	;# 
 12898   0003DA                     ADLTHH          equ	986	;# 
 12899   0003DB                     ADUTH           equ	987	;# 
 12900   0003DB                     ADUTHL          equ	987	;# 
 12901   0003DC                     ADUTHH          equ	988	;# 
 12902   0003DD                     ADERR           equ	989	;# 
 12903   0003DD                     ADERRL          equ	989	;# 
 12904   0003DE                     ADERRH          equ	990	;# 
 12905   0003DF                     ADSTPT          equ	991	;# 
 12906   0003DF                     ADSTPTL         equ	991	;# 
 12907   0003E0                     ADSTPTH         equ	992	;# 
 12908   0003E1                     ADFLTR          equ	993	;# 
 12909   0003E1                     ADFLTRL         equ	993	;# 
 12910   0003E2                     ADFLTRH         equ	994	;# 
 12911   0003E3                     ADACC           equ	995	;# 
 12912   0003E3                     ADACCL          equ	995	;# 
 12913   0003E4                     ADACCH          equ	996	;# 
 12914   0003E5                     ADACCU          equ	997	;# 
 12915   0003E6                     ADCNT           equ	998	;# 
 12916   0003E7                     ADRPT           equ	999	;# 
 12917   0003E8                     ADPREV          equ	1000	;# 
 12918   0003E8                     ADPREVL         equ	1000	;# 
 12919   0003E9                     ADPREVH         equ	1001	;# 
 12920   0003EA                     ADRES           equ	1002	;# 
 12921   0003EA                     ADRESL          equ	1002	;# 
 12922   0003EB                     ADRESH          equ	1003	;# 
 12923   0003EC                     ADPCH           equ	1004	;# 
 12924   0003EE                     ADACQ           equ	1006	;# 
 12925   0003EE                     ADACQL          equ	1006	;# 
 12926   0003EF                     ADACQH          equ	1007	;# 
 12927   0003F0                     ADCAP           equ	1008	;# 
 12928   0003F1                     ADPRE           equ	1009	;# 
 12929   0003F1                     ADPREL          equ	1009	;# 
 12930   0003F2                     ADPREH          equ	1010	;# 
 12931   0003F3                     ADCON0          equ	1011	;# 
 12932   0003F4                     ADCON1          equ	1012	;# 
 12933   0003F5                     ADCON2          equ	1013	;# 
 12934   0003F6                     ADCON3          equ	1014	;# 
 12935   0003F7                     ADSTAT          equ	1015	;# 
 12936   0003F8                     ADREF           equ	1016	;# 
 12937   0003F9                     ADACT           equ	1017	;# 
 12938   0003FA                     ADCLK           equ	1018	;# 
 12939   0003FB                     ADCTX           equ	1019	;# 
 12940   0003FC                     ADCSEL1         equ	1020	;# 
 12941   0003FD                     ADCSEL2         equ	1021	;# 
 12942   0003FE                     ADCSEL3         equ	1022	;# 
 12943   0003FF                     ADCSEL4         equ	1023	;# 
 12944   000400                     ANSELA          equ	1024	;# 
 12945   000401                     WPUA            equ	1025	;# 
 12946   000402                     ODCONA          equ	1026	;# 
 12947   000403                     SLRCONA         equ	1027	;# 
 12948   000404                     INLVLA          equ	1028	;# 
 12949   000405                     IOCAP           equ	1029	;# 
 12950   000406                     IOCAN           equ	1030	;# 
 12951   000407                     IOCAF           equ	1031	;# 
 12952   000408                     ANSELB          equ	1032	;# 
 12953   000409                     WPUB            equ	1033	;# 
 12954   00040A                     ODCONB          equ	1034	;# 
 12955   00040B                     SLRCONB         equ	1035	;# 
 12956   00040C                     INLVLB          equ	1036	;# 
 12957   00040D                     IOCBP           equ	1037	;# 
 12958   00040E                     IOCBN           equ	1038	;# 
 12959   00040F                     IOCBF           equ	1039	;# 
 12960   000410                     ANSELC          equ	1040	;# 
 12961   000411                     WPUC            equ	1041	;# 
 12962   000412                     ODCONC          equ	1042	;# 
 12963   000413                     SLRCONC         equ	1043	;# 
 12964   000414                     INLVLC          equ	1044	;# 
 12965   000415                     IOCCP           equ	1045	;# 
 12966   000416                     IOCCN           equ	1046	;# 
 12967   000417                     IOCCF           equ	1047	;# 
 12968   000421                     WPUE            equ	1057	;# 
 12969   000424                     INLVLE          equ	1060	;# 
 12970   000425                     IOCEP           equ	1061	;# 
 12971   000426                     IOCEN           equ	1062	;# 
 12972   000427                     IOCEF           equ	1063	;# 
 12973   000440                     NCO1ACC         equ	1088	;# 
 12974   000440                     NCO1ACCL        equ	1088	;# 
 12975   000441                     NCO1ACCH        equ	1089	;# 
 12976   000442                     NCO1ACCU        equ	1090	;# 
 12977   000443                     NCO1INC         equ	1091	;# 
 12978   000443                     NCO1INCL        equ	1091	;# 
 12979   000444                     NCO1INCH        equ	1092	;# 
 12980   000445                     NCO1INCU        equ	1093	;# 
 12981   000446                     NCO1CON         equ	1094	;# 
 12982   000447                     NCO1CLK         equ	1095	;# 
 12983   000448                     NCO2ACC         equ	1096	;# 
 12984   000448                     NCO2ACCL        equ	1096	;# 
 12985   000449                     NCO2ACCH        equ	1097	;# 
 12986   00044A                     NCO2ACCU        equ	1098	;# 
 12987   00044B                     NCO2INC         equ	1099	;# 
 12988   00044B                     NCO2INCL        equ	1099	;# 
 12989   00044C                     NCO2INCH        equ	1100	;# 
 12990   00044D                     NCO2INCU        equ	1101	;# 
 12991   00044E                     NCO2CON         equ	1102	;# 
 12992   00044F                     NCO2CLK         equ	1103	;# 
 12993   000450                     NCO3ACC         equ	1104	;# 
 12994   000450                     NCO3ACCL        equ	1104	;# 
 12995   000451                     NCO3ACCH        equ	1105	;# 
 12996   000452                     NCO3ACCU        equ	1106	;# 
 12997   000453                     NCO3INC         equ	1107	;# 
 12998   000453                     NCO3INCL        equ	1107	;# 
 12999   000454                     NCO3INCH        equ	1108	;# 
 13000   000455                     NCO3INCU        equ	1109	;# 
 13001   000456                     NCO3CON         equ	1110	;# 
 13002   000457                     NCO3CLK         equ	1111	;# 
 13003   000458                     FSCMCON         equ	1112	;# 
 13004   000459                     IVTLOCK         equ	1113	;# 
 13005   00045A                     IVTAD           equ	1114	;# 
 13006   00045A                     IVTADL          equ	1114	;# 
 13007   00045B                     IVTADH          equ	1115	;# 
 13008   00045C                     IVTADU          equ	1116	;# 
 13009   00045D                     IVTBASE         equ	1117	;# 
 13010   00045D                     IVTBASEL        equ	1117	;# 
 13011   00045E                     IVTBASEH        equ	1118	;# 
 13012   00045F                     IVTBASEU        equ	1119	;# 
 13013   000460                     PWM1ERS         equ	1120	;# 
 13014   000461                     PWM1CLK         equ	1121	;# 
 13015   000462                     PWM1LDS         equ	1122	;# 
 13016   000463                     PWM1PR          equ	1123	;# 
 13017   000463                     PWM1PRL         equ	1123	;# 
 13018   000464                     PWM1PRH         equ	1124	;# 
 13019   000465                     PWM1CPRE        equ	1125	;# 
 13020   000466                     PWM1PIPOS       equ	1126	;# 
 13021   000467                     PWM1GIR         equ	1127	;# 
 13022   000468                     PWM1GIE         equ	1128	;# 
 13023   000469                     PWM1CON         equ	1129	;# 
 13024   00046A                     PWM1S1CFG       equ	1130	;# 
 13025   00046B                     PWM1S1P1        equ	1131	;# 
 13026   00046B                     PWM1S1P1L       equ	1131	;# 
 13027   00046C                     PWM1S1P1H       equ	1132	;# 
 13028   00046D                     PWM1S1P2        equ	1133	;# 
 13029   00046D                     PWM1S1P2L       equ	1133	;# 
 13030   00046E                     PWM1S1P2H       equ	1134	;# 
 13031   00046F                     PWM2ERS         equ	1135	;# 
 13032   000470                     PWM2CLK         equ	1136	;# 
 13033   000471                     PWM2LDS         equ	1137	;# 
 13034   000472                     PWM2PR          equ	1138	;# 
 13035   000472                     PWM2PRL         equ	1138	;# 
 13036   000473                     PWM2PRH         equ	1139	;# 
 13037   000474                     PWM2CPRE        equ	1140	;# 
 13038   000475                     PWM2PIPOS       equ	1141	;# 
 13039   000476                     PWM2GIR         equ	1142	;# 
 13040   000477                     PWM2GIE         equ	1143	;# 
 13041   000478                     PWM2CON         equ	1144	;# 
 13042   000479                     PWM2S1CFG       equ	1145	;# 
 13043   00047A                     PWM2S1P1        equ	1146	;# 
 13044   00047A                     PWM2S1P1L       equ	1146	;# 
 13045   00047B                     PWM2S1P1H       equ	1147	;# 
 13046   00047C                     PWM2S1P2        equ	1148	;# 
 13047   00047C                     PWM2S1P2L       equ	1148	;# 
 13048   00047D                     PWM2S1P2H       equ	1149	;# 
 13049   00047E                     PWM3ERS         equ	1150	;# 
 13050   00047F                     PWM3CLK         equ	1151	;# 
 13051   000480                     PWM3LDS         equ	1152	;# 
 13052   000481                     PWM3PR          equ	1153	;# 
 13053   000481                     PWM3PRL         equ	1153	;# 
 13054   000482                     PWM3PRH         equ	1154	;# 
 13055   000483                     PWM3CPRE        equ	1155	;# 
 13056   000484                     PWM3PIPOS       equ	1156	;# 
 13057   000485                     PWM3GIR         equ	1157	;# 
 13058   000486                     PWM3GIE         equ	1158	;# 
 13059   000487                     PWM3CON         equ	1159	;# 
 13060   000488                     PWM3S1CFG       equ	1160	;# 
 13061   000489                     PWM3S1P1        equ	1161	;# 
 13062   000489                     PWM3S1P1L       equ	1161	;# 
 13063   00048A                     PWM3S1P1H       equ	1162	;# 
 13064   00048B                     PWM3S1P2        equ	1163	;# 
 13065   00048B                     PWM3S1P2L       equ	1163	;# 
 13066   00048C                     PWM3S1P2H       equ	1164	;# 
 13067   00048D                     PWM4ERS         equ	1165	;# 
 13068   00048E                     PWM4CLK         equ	1166	;# 
 13069   00048F                     PWM4LDS         equ	1167	;# 
 13070   000490                     PWM4PR          equ	1168	;# 
 13071   000490                     PWM4PRL         equ	1168	;# 
 13072   000491                     PWM4PRH         equ	1169	;# 
 13073   000492                     PWM4CPRE        equ	1170	;# 
 13074   000493                     PWM4PIPOS       equ	1171	;# 
 13075   000494                     PWM4GIR         equ	1172	;# 
 13076   000495                     PWM4GIE         equ	1173	;# 
 13077   000496                     PWM4CON         equ	1174	;# 
 13078   000497                     PWM4S1CFG       equ	1175	;# 
 13079   000498                     PWM4S1P1        equ	1176	;# 
 13080   000498                     PWM4S1P1L       equ	1176	;# 
 13081   000499                     PWM4S1P1H       equ	1177	;# 
 13082   00049A                     PWM4S1P2        equ	1178	;# 
 13083   00049A                     PWM4S1P2L       equ	1178	;# 
 13084   00049B                     PWM4S1P2H       equ	1179	;# 
 13085   00049C                     PWMLOAD         equ	1180	;# 
 13086   00049D                     PWMEN           equ	1181	;# 
 13087   00049E                     PIE0            equ	1182	;# 
 13088   00049F                     PIE1            equ	1183	;# 
 13089   0004A0                     PIE2            equ	1184	;# 
 13090   0004A1                     PIE3            equ	1185	;# 
 13091   0004A2                     PIE4            equ	1186	;# 
 13092   0004A3                     PIE5            equ	1187	;# 
 13093   0004A4                     PIE6            equ	1188	;# 
 13094   0004A5                     PIE7            equ	1189	;# 
 13095   0004A6                     PIE8            equ	1190	;# 
 13096   0004A7                     PIE9            equ	1191	;# 
 13097   0004A8                     PIE10           equ	1192	;# 
 13098   0004A9                     PIE11           equ	1193	;# 
 13099   0004AA                     PIE12           equ	1194	;# 
 13100   0004AB                     PIE13           equ	1195	;# 
 13101   0004AC                     PIE14           equ	1196	;# 
 13102   0004AD                     PIE15           equ	1197	;# 
 13103   0004AE                     PIR0            equ	1198	;# 
 13104   0004AF                     PIR1            equ	1199	;# 
 13105   0004B0                     PIR2            equ	1200	;# 
 13106   0004B1                     PIR3            equ	1201	;# 
 13107   0004B2                     PIR4            equ	1202	;# 
 13108   0004B3                     PIR5            equ	1203	;# 
 13109   0004B4                     PIR6            equ	1204	;# 
 13110   0004B5                     PIR7            equ	1205	;# 
 13111   0004B6                     PIR8            equ	1206	;# 
 13112   0004B7                     PIR9            equ	1207	;# 
 13113   0004B8                     PIR10           equ	1208	;# 
 13114   0004B9                     PIR11           equ	1209	;# 
 13115   0004BA                     PIR12           equ	1210	;# 
 13116   0004BB                     PIR13           equ	1211	;# 
 13117   0004BC                     PIR14           equ	1212	;# 
 13118   0004BD                     PIR15           equ	1213	;# 
 13119   0004BE                     LATA            equ	1214	;# 
 13120   0004BF                     LATB            equ	1215	;# 
 13121   0004C0                     LATC            equ	1216	;# 
 13122   0004C6                     TRISA           equ	1222	;# 
 13123   0004C7                     TRISB           equ	1223	;# 
 13124   0004C8                     TRISC           equ	1224	;# 
 13125   0004CA                     TRISE           equ	1226	;# 
 13126   0004CE                     PORTA           equ	1230	;# 
 13127   0004CF                     PORTB           equ	1231	;# 
 13128   0004D0                     PORTC           equ	1232	;# 
 13129   0004D2                     PORTE           equ	1234	;# 
 13130   0004D6                     INTCON0         equ	1238	;# 
 13131   0004D7                     INTCON1         equ	1239	;# 
 13132   0004D8                     STATUS          equ	1240	;# 
 13133   0004D9                     FSR2            equ	1241	;# 
 13134   0004D9                     FSR2L           equ	1241	;# 
 13135   0004DA                     FSR2H           equ	1242	;# 
 13136   0004DB                     PLUSW2          equ	1243	;# 
 13137   0004DC                     PREINC2         equ	1244	;# 
 13138   0004DD                     POSTDEC2        equ	1245	;# 
 13139   0004DE                     POSTINC2        equ	1246	;# 
 13140   0004DF                     INDF2           equ	1247	;# 
 13141   0004E0                     BSR             equ	1248	;# 
 13142   0004E1                     FSR1            equ	1249	;# 
 13143   0004E1                     FSR1L           equ	1249	;# 
 13144   0004E2                     FSR1H           equ	1250	;# 
 13145   0004E3                     PLUSW1          equ	1251	;# 
 13146   0004E4                     PREINC1         equ	1252	;# 
 13147   0004E5                     POSTDEC1        equ	1253	;# 
 13148   0004E6                     POSTINC1        equ	1254	;# 
 13149   0004E7                     INDF1           equ	1255	;# 
 13150   0004E8                     WREG            equ	1256	;# 
 13151   0004E9                     FSR0            equ	1257	;# 
 13152   0004E9                     FSR0L           equ	1257	;# 
 13153   0004EA                     FSR0H           equ	1258	;# 
 13154   0004EB                     PLUSW0          equ	1259	;# 
 13155   0004EC                     PREINC0         equ	1260	;# 
 13156   0004ED                     POSTDEC0        equ	1261	;# 
 13157   0004EE                     POSTINC0        equ	1262	;# 
 13158   0004EF                     INDF0           equ	1263	;# 
 13159   0004F0                     PCON0           equ	1264	;# 
 13160   0004F1                     PCON1           equ	1265	;# 
 13161   0004F2                     CPUDOZE         equ	1266	;# 
 13162   0004F3                     PROD            equ	1267	;# 
 13163   0004F3                     PRODL           equ	1267	;# 
 13164   0004F4                     PRODH           equ	1268	;# 
 13165   0004F5                     TABLAT          equ	1269	;# 
 13166   0004F6                     TBLPTR          equ	1270	;# 
 13167   0004F6                     TBLPTRL         equ	1270	;# 
 13168   0004F7                     TBLPTRH         equ	1271	;# 
 13169   0004F8                     TBLPTRU         equ	1272	;# 
 13170   0004F9                     PCLAT           equ	1273	;# 
 13171   0004F9                     PCL             equ	1273	;# 
 13172   0004FA                     PCLATH          equ	1274	;# 
 13173   0004FB                     PCLATU          equ	1275	;# 
 13174   0004FC                     STKPTR          equ	1276	;# 
 13175   0004FD                     TOS             equ	1277	;# 
 13176   0004FD                     TOSL            equ	1277	;# 
 13177   0004FE                     TOSH            equ	1278	;# 
 13178   0004FF                     TOSU            equ	1279	;# 
 13179   000038                     BOOTREG         equ	56	;# 
 13180   000039                     CLKRCON         equ	57	;# 
 13181   00003A                     CLKRCLK         equ	58	;# 
 13182   000040                     NVMCON0         equ	64	;# 
 13183   000041                     NVMCON1         equ	65	;# 
 13184   000042                     NVMLOCK         equ	66	;# 
 13185   000043                     NVMADR          equ	67	;# 
 13186   000043                     NVMADRL         equ	67	;# 
 13187   000044                     NVMADRH         equ	68	;# 
 13188   000045                     NVMADRU         equ	69	;# 
 13189   000046                     NVMDAT          equ	70	;# 
 13190   000046                     NVMDATL         equ	70	;# 
 13191   000047                     NVMDATH         equ	71	;# 
 13192   000048                     VREGCON         equ	72	;# 
 13193   000049                     BORCON          equ	73	;# 
 13194   00004A                     HLVDCON0        equ	74	;# 
 13195   00004B                     HLVDCON1        equ	75	;# 
 13196   00004C                     ZCDCON          equ	76	;# 
 13197   000060                     PMD0            equ	96	;# 
 13198   000061                     PMD1            equ	97	;# 
 13199   000062                     PMD2            equ	98	;# 
 13200   000063                     PMD3            equ	99	;# 
 13201   000064                     PMD4            equ	100	;# 
 13202   000065                     PMD5            equ	101	;# 
 13203   000066                     PMD6            equ	102	;# 
 13204   000067                     PMD7            equ	103	;# 
 13205   000068                     PMD8            equ	104	;# 
 13206   00006A                     MD1CON0         equ	106	;# 
 13207   00006B                     MD1CON1         equ	107	;# 
 13208   00006C                     MD1SRC          equ	108	;# 
 13209   00006D                     MD1CARL         equ	109	;# 
 13210   00006E                     MD1CARH         equ	110	;# 
 13211   00006F                     CMOUT           equ	111	;# 
 13212   000070                     CM1CON0         equ	112	;# 
 13213   000071                     CM1CON1         equ	113	;# 
 13214   000072                     CM1NCH          equ	114	;# 
 13215   000073                     CM1PCH          equ	115	;# 
 13216   000074                     CM2CON0         equ	116	;# 
 13217   000075                     CM2CON1         equ	117	;# 
 13218   000076                     CM2NCH          equ	118	;# 
 13219   000077                     CM2PCH          equ	119	;# 
 13220   000078                     WDTCON0         equ	120	;# 
 13221   000079                     WDTCON1         equ	121	;# 
 13222   00007A                     WDTPSL          equ	122	;# 
 13223   00007B                     WDTPSH          equ	123	;# 
 13224   00007C                     WDTTMR          equ	124	;# 
 13225   00007D                     DAC1DAT         equ	125	;# 
 13226   00007D                     DAC1DATL        equ	125	;# 
 13227   00007F                     DAC1CON         equ	127	;# 
 13228   000080                     SPI1RXB         equ	128	;# 
 13229   000081                     SPI1TXB         equ	129	;# 
 13230   000082                     SPI1TCNT        equ	130	;# 
 13231   000082                     SPI1TCNTL       equ	130	;# 
 13232   000083                     SPI1TCNTH       equ	131	;# 
 13233   000084                     SPI1CON0        equ	132	;# 
 13234   000085                     SPI1CON1        equ	133	;# 
 13235   000086                     SPI1CON2        equ	134	;# 
 13236   000087                     SPI1STATUS      equ	135	;# 
 13237   000088                     SPI1TWIDTH      equ	136	;# 
 13238   000089                     SPI1BAUD        equ	137	;# 
 13239   00008A                     SPI1INTF        equ	138	;# 
 13240   00008B                     SPI1INTE        equ	139	;# 
 13241   00008C                     SPI1CLK         equ	140	;# 
 13242   00008D                     SPI2RXB         equ	141	;# 
 13243   00008E                     SPI2TXB         equ	142	;# 
 13244   00008F                     SPI2TCNT        equ	143	;# 
 13245   00008F                     SPI2TCNTL       equ	143	;# 
 13246   000090                     SPI2TCNTH       equ	144	;# 
 13247   000091                     SPI2CON0        equ	145	;# 
 13248   000092                     SPI2CON1        equ	146	;# 
 13249   000093                     SPI2CON2        equ	147	;# 
 13250   000094                     SPI2STATUS      equ	148	;# 
 13251   000095                     SPI2TWIDTH      equ	149	;# 
 13252   000096                     SPI2BAUD        equ	150	;# 
 13253   000097                     SPI2INTF        equ	151	;# 
 13254   000098                     SPI2INTE        equ	152	;# 
 13255   000099                     SPI2CLK         equ	153	;# 
 13256   0000AC                     ACTCON          equ	172	;# 
 13257   0000AD                     OSCCON1         equ	173	;# 
 13258   0000AE                     OSCCON2         equ	174	;# 
 13259   0000AF                     OSCCON3         equ	175	;# 
 13260   0000B0                     OSCTUNE         equ	176	;# 
 13261   0000B1                     OSCFRQ          equ	177	;# 
 13262   0000B1                     OSCFREQ         equ	177	;# 
 13263   0000B2                     OSCSTAT         equ	178	;# 
 13264   0000B2                     OSCSTAT1        equ	178	;# 
 13265   0000B3                     OSCEN           equ	179	;# 
 13266   0000B4                     PRLOCK          equ	180	;# 
 13267   0000B5                     SCANPR          equ	181	;# 
 13268   0000B6                     DMA1PR          equ	182	;# 
 13269   0000B7                     DMA2PR          equ	183	;# 
 13270   0000B8                     DMA3PR          equ	184	;# 
 13271   0000B9                     DMA4PR          equ	185	;# 
 13272   0000BA                     DMA5PR          equ	186	;# 
 13273   0000BB                     DMA6PR          equ	187	;# 
 13274   0000BC                     DMA7PR          equ	188	;# 
 13275   0000BD                     DMA8PR          equ	189	;# 
 13276   0000BE                     MAINPR          equ	190	;# 
 13277   0000BF                     ISRPR           equ	191	;# 
 13278   0000D4                     CLCDATA         equ	212	;# 
 13279   0000D5                     CLCSELECT       equ	213	;# 
 13280   0000D6                     CLCnCON         equ	214	;# 
 13281   0000D7                     CLCnPOL         equ	215	;# 
 13282   0000D8                     CLCnSEL0        equ	216	;# 
 13283   0000D9                     CLCnSEL1        equ	217	;# 
 13284   0000DA                     CLCnSEL2        equ	218	;# 
 13285   0000DB                     CLCnSEL3        equ	219	;# 
 13286   0000DC                     CLCnGLS0        equ	220	;# 
 13287   0000DD                     CLCnGLS1        equ	221	;# 
 13288   0000DE                     CLCnGLS2        equ	222	;# 
 13289   0000DF                     CLCnGLS3        equ	223	;# 
 13290   0000E8                     DMASELECT       equ	232	;# 
 13291   0000E9                     DMAnBUF         equ	233	;# 
 13292   0000EA                     DMAnDCNT        equ	234	;# 
 13293   0000EA                     DMAnDCNTL       equ	234	;# 
 13294   0000EB                     DMAnDCNTH       equ	235	;# 
 13295   0000EC                     DMAnDPTR        equ	236	;# 
 13296   0000EC                     DMAnDPTRL       equ	236	;# 
 13297   0000ED                     DMAnDPTRH       equ	237	;# 
 13298   0000EE                     DMAnDSZ         equ	238	;# 
 13299   0000EE                     DMAnDSZL        equ	238	;# 
 13300   0000EF                     DMAnDSZH        equ	239	;# 
 13301   0000F0                     DMAnDSA         equ	240	;# 
 13302   0000F0                     DMAnDSAL        equ	240	;# 
 13303   0000F1                     DMAnDSAH        equ	241	;# 
 13304   0000F2                     DMAnSCNT        equ	242	;# 
 13305   0000F2                     DMAnSCNTL       equ	242	;# 
 13306   0000F3                     DMAnSCNTH       equ	243	;# 
 13307   0000F4                     DMAnSPTR        equ	244	;# 
 13308   0000F4                     DMAnSPTRL       equ	244	;# 
 13309   0000F5                     DMAnSPTRH       equ	245	;# 
 13310   0000F6                     DMAnSPTRU       equ	246	;# 
 13311   0000F7                     DMAnSSZ         equ	247	;# 
 13312   0000F7                     DMAnSSZL        equ	247	;# 
 13313   0000F8                     DMAnSSZH        equ	248	;# 
 13314   0000F9                     DMAnSSA         equ	249	;# 
 13315   0000F9                     DMAnSSAL        equ	249	;# 
 13316   0000FA                     DMAnSSAH        equ	250	;# 
 13317   0000FB                     DMAnSSAU        equ	251	;# 
 13318   0000FC                     DMAnCON0        equ	252	;# 
 13319   0000FD                     DMAnCON1        equ	253	;# 
 13320   0000FE                     DMAnAIRQ        equ	254	;# 
 13321   0000FF                     DMAnSIRQ        equ	255	;# 
 13322   000100                     C1CONL          equ	256	;# 
 13323   000101                     C1CONH          equ	257	;# 
 13324   000102                     C1CONU          equ	258	;# 
 13325   000103                     C1CONT          equ	259	;# 
 13326   000104                     C1NBTCFGL       equ	260	;# 
 13327   000105                     C1NBTCFGH       equ	261	;# 
 13328   000106                     C1NBTCFGU       equ	262	;# 
 13329   000107                     C1NBTCFGT       equ	263	;# 
 13330   000108                     C1DBTCFGL       equ	264	;# 
 13331   000109                     C1DBTCFGH       equ	265	;# 
 13332   00010A                     C1DBTCFGU       equ	266	;# 
 13333   00010B                     C1DBTCFGT       equ	267	;# 
 13334   00010C                     C1TDCL          equ	268	;# 
 13335   00010D                     C1TDCH          equ	269	;# 
 13336   00010E                     C1TDCU          equ	270	;# 
 13337   000110                     C1TBC           equ	272	;# 
 13338   000110                     C1TBCL          equ	272	;# 
 13339   000111                     C1TBCH          equ	273	;# 
 13340   000112                     C1TBCU          equ	274	;# 
 13341   000113                     C1TBCT          equ	275	;# 
 13342   000114                     C1TSCONL        equ	276	;# 
 13343   000115                     C1TSCONH        equ	277	;# 
 13344   000116                     C1TSCONU        equ	278	;# 
 13345   000117                     C1TSCONT        equ	279	;# 
 13346   000118                     C1VECL          equ	280	;# 
 13347   000119                     C1VECH          equ	281	;# 
 13348   00011A                     C1VECU          equ	282	;# 
 13349   00011B                     C1VECT          equ	283	;# 
 13350   00011C                     C1INTL          equ	284	;# 
 13351   00011D                     C1INTH          equ	285	;# 
 13352   00011E                     C1INTU          equ	286	;# 
 13353   00011F                     C1INTT          equ	287	;# 
 13354   000120                     C1RXIF          equ	288	;# 
 13355   000120                     C1RXIFL         equ	288	;# 
 13356   000121                     C1RXIFH         equ	289	;# 
 13357   000122                     C1RXIFU         equ	290	;# 
 13358   000123                     C1RXIFT         equ	291	;# 
 13359   000124                     C1TXIF          equ	292	;# 
 13360   000124                     C1TXIFL         equ	292	;# 
 13361   000125                     C1TXIFH         equ	293	;# 
 13362   000126                     C1TXIFU         equ	294	;# 
 13363   000127                     C1TXIFT         equ	295	;# 
 13364   000128                     C1RXOVIF        equ	296	;# 
 13365   000128                     C1RXOVIFL       equ	296	;# 
 13366   000129                     C1RXOVIFH       equ	297	;# 
 13367   00012A                     C1RXOVIFU       equ	298	;# 
 13368   00012B                     C1RXOVIFT       equ	299	;# 
 13369   00012C                     C1TXATIF        equ	300	;# 
 13370   00012C                     C1TXATIFL       equ	300	;# 
 13371   00012D                     C1TXATIFH       equ	301	;# 
 13372   00012E                     C1TXATIFU       equ	302	;# 
 13373   00012F                     C1TXATIFT       equ	303	;# 
 13374   000130                     C1TXREQ         equ	304	;# 
 13375   000130                     C1TXREQL        equ	304	;# 
 13376   000131                     C1TXREQH        equ	305	;# 
 13377   000132                     C1TXREQU        equ	306	;# 
 13378   000133                     C1TXREQT        equ	307	;# 
 13379   000134                     C1TRECL         equ	308	;# 
 13380   000135                     C1TRECH         equ	309	;# 
 13381   000136                     C1TRECU         equ	310	;# 
 13382   000137                     C1TRECT         equ	311	;# 
 13383   000138                     C1BDIAG0L       equ	312	;# 
 13384   000139                     C1BDIAG0H       equ	313	;# 
 13385   00013C                     C1BDIAG1L       equ	316	;# 
 13386   00013D                     C1BDIAG1H       equ	317	;# 
 13387   00013E                     C1BDIAG1U       equ	318	;# 
 13388   00013F                     C1BDIAG1T       equ	319	;# 
 13389   000140                     C1TEFCONL       equ	320	;# 
 13390   000141                     C1TEFCONH       equ	321	;# 
 13391   000142                     C1TEFCONU       equ	322	;# 
 13392   000143                     C1TEFCONT       equ	323	;# 
 13393   000144                     C1TEFSTAL       equ	324	;# 
 13394   000145                     C1TEFSTAH       equ	325	;# 
 13395   000146                     C1TEFSTAU       equ	326	;# 
 13396   000147                     C1TEFSTAT       equ	327	;# 
 13397   000148                     C1TEFUA         equ	328	;# 
 13398   000148                     C1TEFUAL        equ	328	;# 
 13399   000149                     C1TEFUAH        equ	329	;# 
 13400   00014A                     C1TEFUAU        equ	330	;# 
 13401   00014B                     C1TEFUAT        equ	331	;# 
 13402   00014C                     C1FIFOBA        equ	332	;# 
 13403   00014C                     C1FIFOBAL       equ	332	;# 
 13404   00014D                     C1FIFOBAH       equ	333	;# 
 13405   00014E                     C1FIFOBAU       equ	334	;# 
 13406   00014F                     C1FIFOBAT       equ	335	;# 
 13407   000150                     C1TXQCONL       equ	336	;# 
 13408   000151                     C1TXQCONH       equ	337	;# 
 13409   000152                     C1TXQCONU       equ	338	;# 
 13410   000153                     C1TXQCONT       equ	339	;# 
 13411   000154                     C1TXQSTAL       equ	340	;# 
 13412   000155                     C1TXQSTAH       equ	341	;# 
 13413   000156                     C1TXQSTAU       equ	342	;# 
 13414   000157                     C1TXQSTAT       equ	343	;# 
 13415   000158                     C1TXQUA         equ	344	;# 
 13416   000158                     C1TXQUAL        equ	344	;# 
 13417   000159                     C1TXQUAH        equ	345	;# 
 13418   00015A                     C1TXQUAU        equ	346	;# 
 13419   00015B                     C1TXQUAT        equ	347	;# 
 13420   00015C                     C1FIFOCON1      equ	348	;# 
 13421   00015C                     C1FIFOCON1L     equ	348	;# 
 13422   00015D                     C1FIFOCON1H     equ	349	;# 
 13423   00015E                     C1FIFOCON1U     equ	350	;# 
 13424   00015F                     C1FIFOCON1T     equ	351	;# 
 13425   000160                     C1FIFOSTA1      equ	352	;# 
 13426   000160                     C1FIFOSTA1L     equ	352	;# 
 13427   000161                     C1FIFOSTA1H     equ	353	;# 
 13428   000162                     C1FIFOSTA1U     equ	354	;# 
 13429   000163                     C1FIFOSTA1T     equ	355	;# 
 13430   000164                     C1FIFOUA1       equ	356	;# 
 13431   000164                     C1FIFOUA1L      equ	356	;# 
 13432   000165                     C1FIFOUA1H      equ	357	;# 
 13433   000166                     C1FIFOUA1U      equ	358	;# 
 13434   000167                     C1FIFOUA1T      equ	359	;# 
 13435   000168                     C1FIFOCON2      equ	360	;# 
 13436   000168                     C1FIFOCON2L     equ	360	;# 
 13437   000169                     C1FIFOCON2H     equ	361	;# 
 13438   00016A                     C1FIFOCON2U     equ	362	;# 
 13439   00016B                     C1FIFOCON2T     equ	363	;# 
 13440   00016C                     C1FIFOSTA2      equ	364	;# 
 13441   00016C                     C1FIFOSTA2L     equ	364	;# 
 13442   00016D                     C1FIFOSTA2H     equ	365	;# 
 13443   00016E                     C1FIFOSTA2U     equ	366	;# 
 13444   00016F                     C1FIFOSTA2T     equ	367	;# 
 13445   000170                     C1FIFOUA2       equ	368	;# 
 13446   000170                     C1FIFOUA2L      equ	368	;# 
 13447   000171                     C1FIFOUA2H      equ	369	;# 
 13448   000172                     C1FIFOUA2U      equ	370	;# 
 13449   000173                     C1FIFOUA2T      equ	371	;# 
 13450   000174                     C1FIFOCON3      equ	372	;# 
 13451   000174                     C1FIFOCON3L     equ	372	;# 
 13452   000175                     C1FIFOCON3H     equ	373	;# 
 13453   000176                     C1FIFOCON3U     equ	374	;# 
 13454   000177                     C1FIFOCON3T     equ	375	;# 
 13455   000178                     C1FIFOSTA3      equ	376	;# 
 13456   000178                     C1FIFOSTA3L     equ	376	;# 
 13457   000179                     C1FIFOSTA3H     equ	377	;# 
 13458   00017A                     C1FIFOSTA3U     equ	378	;# 
 13459   00017B                     C1FIFOSTA3T     equ	379	;# 
 13460   00017C                     C1FIFOUA3       equ	380	;# 
 13461   00017C                     C1FIFOUA3L      equ	380	;# 
 13462   00017D                     C1FIFOUA3H      equ	381	;# 
 13463   00017E                     C1FIFOUA3U      equ	382	;# 
 13464   00017F                     C1FIFOUA3T      equ	383	;# 
 13465   000180                     C1FLTCON0L      equ	384	;# 
 13466   000181                     C1FLTCON0H      equ	385	;# 
 13467   000182                     C1FLTCON0U      equ	386	;# 
 13468   000183                     C1FLTCON0T      equ	387	;# 
 13469   000184                     C1FLTCON1L      equ	388	;# 
 13470   000185                     C1FLTCON1H      equ	389	;# 
 13471   000186                     C1FLTCON1U      equ	390	;# 
 13472   000187                     C1FLTCON1T      equ	391	;# 
 13473   000188                     C1FLTCON2L      equ	392	;# 
 13474   000189                     C1FLTCON2H      equ	393	;# 
 13475   00018A                     C1FLTCON2U      equ	394	;# 
 13476   00018B                     C1FLTCON2T      equ	395	;# 
 13477   00018C                     C1FLTOBJ0       equ	396	;# 
 13478   00018C                     C1FLTOBJ0L      equ	396	;# 
 13479   00018D                     C1FLTOBJ0H      equ	397	;# 
 13480   00018E                     C1FLTOBJ0U      equ	398	;# 
 13481   00018F                     C1FLTOBJ0T      equ	399	;# 
 13482   000190                     C1MASK0         equ	400	;# 
 13483   000190                     C1MASK0L        equ	400	;# 
 13484   000191                     C1MASK0H        equ	401	;# 
 13485   000192                     C1MASK0U        equ	402	;# 
 13486   000193                     C1MASK0T        equ	403	;# 
 13487   000194                     C1FLTOBJ1       equ	404	;# 
 13488   000194                     C1FLTOBJ1L      equ	404	;# 
 13489   000195                     C1FLTOBJ1H      equ	405	;# 
 13490   000196                     C1FLTOBJ1U      equ	406	;# 
 13491   000197                     C1FLTOBJ1T      equ	407	;# 
 13492   000198                     C1MASK1         equ	408	;# 
 13493   000198                     C1MASK1L        equ	408	;# 
 13494   000199                     C1MASK1H        equ	409	;# 
 13495   00019A                     C1MASK1U        equ	410	;# 
 13496   00019B                     C1MASK1T        equ	411	;# 
 13497   00019C                     C1FLTOBJ2       equ	412	;# 
 13498   00019C                     C1FLTOBJ2L      equ	412	;# 
 13499   00019D                     C1FLTOBJ2H      equ	413	;# 
 13500   00019E                     C1FLTOBJ2U      equ	414	;# 
 13501   00019F                     C1FLTOBJ2T      equ	415	;# 
 13502   0001A0                     C1MASK2         equ	416	;# 
 13503   0001A0                     C1MASK2L        equ	416	;# 
 13504   0001A1                     C1MASK2H        equ	417	;# 
 13505   0001A2                     C1MASK2U        equ	418	;# 
 13506   0001A3                     C1MASK2T        equ	419	;# 
 13507   0001A4                     C1FLTOBJ3       equ	420	;# 
 13508   0001A4                     C1FLTOBJ3L      equ	420	;# 
 13509   0001A5                     C1FLTOBJ3H      equ	421	;# 
 13510   0001A6                     C1FLTOBJ3U      equ	422	;# 
 13511   0001A7                     C1FLTOBJ3T      equ	423	;# 
 13512   0001A8                     C1MASK3         equ	424	;# 
 13513   0001A8                     C1MASK3L        equ	424	;# 
 13514   0001A9                     C1MASK3H        equ	425	;# 
 13515   0001AA                     C1MASK3U        equ	426	;# 
 13516   0001AB                     C1MASK3T        equ	427	;# 
 13517   0001AC                     C1FLTOBJ4       equ	428	;# 
 13518   0001AC                     C1FLTOBJ4L      equ	428	;# 
 13519   0001AD                     C1FLTOBJ4H      equ	429	;# 
 13520   0001AE                     C1FLTOBJ4U      equ	430	;# 
 13521   0001AF                     C1FLTOBJ4T      equ	431	;# 
 13522   0001B0                     C1MASK4         equ	432	;# 
 13523   0001B0                     C1MASK4L        equ	432	;# 
 13524   0001B1                     C1MASK4H        equ	433	;# 
 13525   0001B2                     C1MASK4U        equ	434	;# 
 13526   0001B3                     C1MASK4T        equ	435	;# 
 13527   0001B4                     C1FLTOBJ5       equ	436	;# 
 13528   0001B4                     C1FLTOBJ5L      equ	436	;# 
 13529   0001B5                     C1FLTOBJ5H      equ	437	;# 
 13530   0001B6                     C1FLTOBJ5U      equ	438	;# 
 13531   0001B7                     C1FLTOBJ5T      equ	439	;# 
 13532   0001B8                     C1MASK5         equ	440	;# 
 13533   0001B8                     C1MASK5L        equ	440	;# 
 13534   0001B9                     C1MASK5H        equ	441	;# 
 13535   0001BA                     C1MASK5U        equ	442	;# 
 13536   0001BB                     C1MASK5T        equ	443	;# 
 13537   0001BC                     C1FLTOBJ6       equ	444	;# 
 13538   0001BC                     C1FLTOBJ6L      equ	444	;# 
 13539   0001BD                     C1FLTOBJ6H      equ	445	;# 
 13540   0001BE                     C1FLTOBJ6U      equ	446	;# 
 13541   0001BF                     C1FLTOBJ6T      equ	447	;# 
 13542   0001C0                     C1MASK6         equ	448	;# 
 13543   0001C0                     C1MASK6L        equ	448	;# 
 13544   0001C1                     C1MASK6H        equ	449	;# 
 13545   0001C2                     C1MASK6U        equ	450	;# 
 13546   0001C3                     C1MASK6T        equ	451	;# 
 13547   0001C4                     C1FLTOBJ7       equ	452	;# 
 13548   0001C4                     C1FLTOBJ7L      equ	452	;# 
 13549   0001C5                     C1FLTOBJ7H      equ	453	;# 
 13550   0001C6                     C1FLTOBJ7U      equ	454	;# 
 13551   0001C7                     C1FLTOBJ7T      equ	455	;# 
 13552   0001C8                     C1MASK7         equ	456	;# 
 13553   0001C8                     C1MASK7L        equ	456	;# 
 13554   0001C9                     C1MASK7H        equ	457	;# 
 13555   0001CA                     C1MASK7U        equ	458	;# 
 13556   0001CB                     C1MASK7T        equ	459	;# 
 13557   0001CC                     C1FLTOBJ8       equ	460	;# 
 13558   0001CC                     C1FLTOBJ8L      equ	460	;# 
 13559   0001CD                     C1FLTOBJ8H      equ	461	;# 
 13560   0001CE                     C1FLTOBJ8U      equ	462	;# 
 13561   0001CF                     C1FLTOBJ8T      equ	463	;# 
 13562   0001D0                     C1MASK8         equ	464	;# 
 13563   0001D0                     C1MASK8L        equ	464	;# 
 13564   0001D1                     C1MASK8H        equ	465	;# 
 13565   0001D2                     C1MASK8U        equ	466	;# 
 13566   0001D3                     C1MASK8T        equ	467	;# 
 13567   0001D4                     C1FLTOBJ9       equ	468	;# 
 13568   0001D4                     C1FLTOBJ9L      equ	468	;# 
 13569   0001D5                     C1FLTOBJ9H      equ	469	;# 
 13570   0001D6                     C1FLTOBJ9U      equ	470	;# 
 13571   0001D7                     C1FLTOBJ9T      equ	471	;# 
 13572   0001D8                     C1MASK9         equ	472	;# 
 13573   0001D8                     C1MASK9L        equ	472	;# 
 13574   0001D9                     C1MASK9H        equ	473	;# 
 13575   0001DA                     C1MASK9U        equ	474	;# 
 13576   0001DB                     C1MASK9T        equ	475	;# 
 13577   0001DC                     C1FLTOBJ10      equ	476	;# 
 13578   0001DC                     C1FLTOBJ10L     equ	476	;# 
 13579   0001DD                     C1FLTOBJ10H     equ	477	;# 
 13580   0001DE                     C1FLTOBJ10U     equ	478	;# 
 13581   0001DF                     C1FLTOBJ10T     equ	479	;# 
 13582   0001E0                     C1MASK10        equ	480	;# 
 13583   0001E0                     C1MASK10L       equ	480	;# 
 13584   0001E1                     C1MASK10H       equ	481	;# 
 13585   0001E2                     C1MASK10U       equ	482	;# 
 13586   0001E3                     C1MASK10T       equ	483	;# 
 13587   0001E4                     C1FLTOBJ11      equ	484	;# 
 13588   0001E4                     C1FLTOBJ11L     equ	484	;# 
 13589   0001E5                     C1FLTOBJ11H     equ	485	;# 
 13590   0001E6                     C1FLTOBJ11U     equ	486	;# 
 13591   0001E7                     C1FLTOBJ11T     equ	487	;# 
 13592   0001E8                     C1MASK11        equ	488	;# 
 13593   0001E8                     C1MASK11L       equ	488	;# 
 13594   0001E9                     C1MASK11H       equ	489	;# 
 13595   0001EA                     C1MASK11U       equ	490	;# 
 13596   0001EB                     C1MASK11T       equ	491	;# 
 13597   000200                     PPSLOCK         equ	512	;# 
 13598   000201                     RA0PPS          equ	513	;# 
 13599   000202                     RA1PPS          equ	514	;# 
 13600   000203                     RA2PPS          equ	515	;# 
 13601   000204                     RA3PPS          equ	516	;# 
 13602   000205                     RA4PPS          equ	517	;# 
 13603   000206                     RA5PPS          equ	518	;# 
 13604   000207                     RA6PPS          equ	519	;# 
 13605   000208                     RA7PPS          equ	520	;# 
 13606   000209                     RB0PPS          equ	521	;# 
 13607   00020A                     RB1PPS          equ	522	;# 
 13608   00020B                     RB2PPS          equ	523	;# 
 13609   00020C                     RB3PPS          equ	524	;# 
 13610   00020D                     RB4PPS          equ	525	;# 
 13611   00020E                     RB5PPS          equ	526	;# 
 13612   00020F                     RB6PPS          equ	527	;# 
 13613   000210                     RB7PPS          equ	528	;# 
 13614   000211                     RC0PPS          equ	529	;# 
 13615   000212                     RC1PPS          equ	530	;# 
 13616   000213                     RC2PPS          equ	531	;# 
 13617   000214                     RC3PPS          equ	532	;# 
 13618   000215                     RC4PPS          equ	533	;# 
 13619   000216                     RC5PPS          equ	534	;# 
 13620   000217                     RC6PPS          equ	535	;# 
 13621   000218                     RC7PPS          equ	536	;# 
 13622   00023D                     CANRXPPS        equ	573	;# 
 13623   00023E                     INT0PPS         equ	574	;# 
 13624   00023F                     INT1PPS         equ	575	;# 
 13625   000240                     INT2PPS         equ	576	;# 
 13626   000241                     T0CKIPPS        equ	577	;# 
 13627   000242                     T1CKIPPS        equ	578	;# 
 13628   000243                     T1GPPS          equ	579	;# 
 13629   000244                     T3CKIPPS        equ	580	;# 
 13630   000245                     T3GPPS          equ	581	;# 
 13631   000246                     T5CKIPPS        equ	582	;# 
 13632   000247                     T5GPPS          equ	583	;# 
 13633   000248                     T2INPPS         equ	584	;# 
 13634   000249                     T4INPPS         equ	585	;# 
 13635   00024A                     T6INPPS         equ	586	;# 
 13636   00024B                     TUIN0PPS        equ	587	;# 
 13637   00024C                     TUIN1PPS        equ	588	;# 
 13638   00024F                     CCP1PPS         equ	591	;# 
 13639   000250                     CCP2PPS         equ	592	;# 
 13640   000251                     CCP3PPS         equ	593	;# 
 13641   000253                     PWM1ERSPPS      equ	595	;# 
 13642   000254                     PWM2ERSPPS      equ	596	;# 
 13643   000255                     PWM3ERSPPS      equ	597	;# 
 13644   000256                     PWM4ERSPPS      equ	598	;# 
 13645   000257                     PWMIN0PPS       equ	599	;# 
 13646   000258                     PWMIN1PPS       equ	600	;# 
 13647   000259                     SMT1WINPPS      equ	601	;# 
 13648   00025A                     SMT1SIGPPS      equ	602	;# 
 13649   00025B                     CWG1PPS         equ	603	;# 
 13650   00025B                     CWG1INPPS       equ	603	;# 
 13651   00025C                     CWG2PPS         equ	604	;# 
 13652   00025C                     CWG2INPPS       equ	604	;# 
 13653   00025D                     CWG3PPS         equ	605	;# 
 13654   00025D                     CWG3INPPS       equ	605	;# 
 13655   00025E                     MD1CARLPPS      equ	606	;# 
 13656   00025E                     MDCARLPPS       equ	606	;# 
 13657   00025F                     MD1CARHPPS      equ	607	;# 
 13658   00025F                     MDCARHPPS       equ	607	;# 
 13659   000260                     MD1SRCPPS       equ	608	;# 
 13660   000260                     MDSRCPPS        equ	608	;# 
 13661   000261                     CLCIN0PPS       equ	609	;# 
 13662   000262                     CLCIN1PPS       equ	610	;# 
 13663   000263                     CLCIN2PPS       equ	611	;# 
 13664   000264                     CLCIN3PPS       equ	612	;# 
 13665   000265                     CLCIN4PPS       equ	613	;# 
 13666   000266                     CLCIN5PPS       equ	614	;# 
 13667   000267                     CLCIN6PPS       equ	615	;# 
 13668   000268                     CLCIN7PPS       equ	616	;# 
 13669   000269                     ADACTPPS        equ	617	;# 
 13670   00026A                     SPI1SCKPPS      equ	618	;# 
 13671   00026B                     SPI1SDIPPS      equ	619	;# 
 13672   00026C                     SPI1SSPPS       equ	620	;# 
 13673   00026D                     SPI2SCKPPS      equ	621	;# 
 13674   00026E                     SPI2SDIPPS      equ	622	;# 
 13675   00026F                     SPI2SSPPS       equ	623	;# 
 13676   000270                     I2C1SDAPPS      equ	624	;# 
 13677   000271                     I2C1SCLPPS      equ	625	;# 
 13678   000272                     U1RXPPS         equ	626	;# 
 13679   000273                     U1CTSPPS        equ	627	;# 
 13680   000274                     U2RXPPS         equ	628	;# 
 13681   000275                     U2CTSPPS        equ	629	;# 
 13682   000276                     U3RXPPS         equ	630	;# 
 13683   000277                     U3CTSPPS        equ	631	;# 
 13684   000278                     U4RXPPS         equ	632	;# 
 13685   000279                     U4CTSPPS        equ	633	;# 
 13686   00027A                     U5RXPPS         equ	634	;# 
 13687   00027B                     U5CTSPPS        equ	635	;# 
 13688   000286                     RC4I2C          equ	646	;# 
 13689   000287                     RC3I2C          equ	647	;# 
 13690   000288                     RB2I2C          equ	648	;# 
 13691   000289                     RB1I2C          equ	649	;# 
 13692   00028A                     I2C1RXB         equ	650	;# 
 13693   00028B                     I2C1TXB         equ	651	;# 
 13694   00028C                     I2C1CNTL        equ	652	;# 
 13695   00028D                     I2C1CNTH        equ	653	;# 
 13696   00028E                     I2C1ADB0        equ	654	;# 
 13697   00028F                     I2C1ADB1        equ	655	;# 
 13698   000290                     I2C1ADR0        equ	656	;# 
 13699   000291                     I2C1ADR1        equ	657	;# 
 13700   000292                     I2C1ADR2        equ	658	;# 
 13701   000293                     I2C1ADR3        equ	659	;# 
 13702   000294                     I2C1CON0        equ	660	;# 
 13703   000295                     I2C1CON1        equ	661	;# 
 13704   000296                     I2C1CON2        equ	662	;# 
 13705   000297                     I2C1ERR         equ	663	;# 
 13706   000298                     I2C1STAT0       equ	664	;# 
 13707   000299                     I2C1STAT1       equ	665	;# 
 13708   00029A                     I2C1PIR         equ	666	;# 
 13709   00029B                     I2C1PIE         equ	667	;# 
 13710   00029C                     I2C1BTO         equ	668	;# 
 13711   00029D                     I2C1BAUD        equ	669	;# 
 13712   00029E                     I2C1CLK         equ	670	;# 
 13713   00029F                     I2C1BTOC        equ	671	;# 
 13714   0002A1                     U1RXB           equ	673	;# 
 13715   0002A1                     U1RXBL          equ	673	;# 
 13716   0002A2                     U1RXCHK         equ	674	;# 
 13717   0002A3                     U1TXB           equ	675	;# 
 13718   0002A3                     U1TXBL          equ	675	;# 
 13719   0002A4                     U1TXCHK         equ	676	;# 
 13720   0002A5                     U1P1            equ	677	;# 
 13721   0002A5                     U1P1L           equ	677	;# 
 13722   0002A6                     U1P1H           equ	678	;# 
 13723   0002A7                     U1P2            equ	679	;# 
 13724   0002A7                     U1P2L           equ	679	;# 
 13725   0002A8                     U1P2H           equ	680	;# 
 13726   0002A9                     U1P3            equ	681	;# 
 13727   0002A9                     U1P3L           equ	681	;# 
 13728   0002AA                     U1P3H           equ	682	;# 
 13729   0002AB                     U1CON0          equ	683	;# 
 13730   0002AC                     U1CON1          equ	684	;# 
 13731   0002AD                     U1CON2          equ	685	;# 
 13732   0002AE                     U1BRG           equ	686	;# 
 13733   0002AE                     U1BRGL          equ	686	;# 
 13734   0002AF                     U1BRGH          equ	687	;# 
 13735   0002B0                     U1FIFO          equ	688	;# 
 13736   0002B1                     U1UIR           equ	689	;# 
 13737   0002B2                     U1ERRIR         equ	690	;# 
 13738   0002B3                     U1ERRIE         equ	691	;# 
 13739   0002B4                     U2RXB           equ	692	;# 
 13740   0002B4                     U2RXBL          equ	692	;# 
 13741   0002B5                     U2RXCHK         equ	693	;# 
 13742   0002B6                     U2TXB           equ	694	;# 
 13743   0002B6                     U2TXBL          equ	694	;# 
 13744   0002B7                     U2TXCHK         equ	695	;# 
 13745   0002B8                     U2P1            equ	696	;# 
 13746   0002B8                     U2P1L           equ	696	;# 
 13747   0002B9                     U2P1H           equ	697	;# 
 13748   0002BA                     U2P2            equ	698	;# 
 13749   0002BA                     U2P2L           equ	698	;# 
 13750   0002BB                     U2P2H           equ	699	;# 
 13751   0002BC                     U2P3            equ	700	;# 
 13752   0002BC                     U2P3L           equ	700	;# 
 13753   0002BD                     U2P3H           equ	701	;# 
 13754   0002BE                     U2CON0          equ	702	;# 
 13755   0002BF                     U2CON1          equ	703	;# 
 13756   0002C0                     U2CON2          equ	704	;# 
 13757   0002C1                     U2BRG           equ	705	;# 
 13758   0002C1                     U2BRGL          equ	705	;# 
 13759   0002C2                     U2BRGH          equ	706	;# 
 13760   0002C3                     U2FIFO          equ	707	;# 
 13761   0002C4                     U2UIR           equ	708	;# 
 13762   0002C5                     U2ERRIR         equ	709	;# 
 13763   0002C6                     U2ERRIE         equ	710	;# 
 13764   0002C7                     U3RXB           equ	711	;# 
 13765   0002C7                     U3RXBL          equ	711	;# 
 13766   0002C9                     U3TXB           equ	713	;# 
 13767   0002C9                     U3TXBL          equ	713	;# 
 13768   0002CB                     U3P1            equ	715	;# 
 13769   0002CB                     U3P1L           equ	715	;# 
 13770   0002CD                     U3P2            equ	717	;# 
 13771   0002CD                     U3P2L           equ	717	;# 
 13772   0002CF                     U3P3            equ	719	;# 
 13773   0002CF                     U3P3L           equ	719	;# 
 13774   0002D1                     U3CON0          equ	721	;# 
 13775   0002D2                     U3CON1          equ	722	;# 
 13776   0002D3                     U3CON2          equ	723	;# 
 13777   0002D4                     U3BRG           equ	724	;# 
 13778   0002D4                     U3BRGL          equ	724	;# 
 13779   0002D5                     U3BRGH          equ	725	;# 
 13780   0002D6                     U3FIFO          equ	726	;# 
 13781   0002D7                     U3UIR           equ	727	;# 
 13782   0002D8                     U3ERRIR         equ	728	;# 
 13783   0002D9                     U3ERRIE         equ	729	;# 
 13784   0002DA                     U4RXB           equ	730	;# 
 13785   0002DA                     U4RXBL          equ	730	;# 
 13786   0002DC                     U4TXB           equ	732	;# 
 13787   0002DC                     U4TXBL          equ	732	;# 
 13788   0002DE                     U4P1            equ	734	;# 
 13789   0002DE                     U4P1L           equ	734	;# 
 13790   0002E0                     U4P2            equ	736	;# 
 13791   0002E0                     U4P2L           equ	736	;# 
 13792   0002E2                     U4P3            equ	738	;# 
 13793   0002E2                     U4P3L           equ	738	;# 
 13794   0002E4                     U4CON0          equ	740	;# 
 13795   0002E5                     U4CON1          equ	741	;# 
 13796   0002E6                     U4CON2          equ	742	;# 
 13797   0002E7                     U4BRG           equ	743	;# 
 13798   0002E7                     U4BRGL          equ	743	;# 
 13799   0002E8                     U4BRGH          equ	744	;# 
 13800   0002E9                     U4FIFO          equ	745	;# 
 13801   0002EA                     U4UIR           equ	746	;# 
 13802   0002EB                     U4ERRIR         equ	747	;# 
 13803   0002EC                     U4ERRIE         equ	748	;# 
 13804   0002ED                     U5RXB           equ	749	;# 
 13805   0002ED                     U5RXBL          equ	749	;# 
 13806   0002EF                     U5TXB           equ	751	;# 
 13807   0002EF                     U5TXBL          equ	751	;# 
 13808   0002F1                     U5P1            equ	753	;# 
 13809   0002F1                     U5P1L           equ	753	;# 
 13810   0002F3                     U5P2            equ	755	;# 
 13811   0002F3                     U5P2L           equ	755	;# 
 13812   0002F5                     U5P3            equ	757	;# 
 13813   0002F5                     U5P3L           equ	757	;# 
 13814   0002F7                     U5CON0          equ	759	;# 
 13815   0002F8                     U5CON1          equ	760	;# 
 13816   0002F9                     U5CON2          equ	761	;# 
 13817   0002FA                     U5BRG           equ	762	;# 
 13818   0002FA                     U5BRGL          equ	762	;# 
 13819   0002FB                     U5BRGH          equ	763	;# 
 13820   0002FC                     U5FIFO          equ	764	;# 
 13821   0002FD                     U5UIR           equ	765	;# 
 13822   0002FE                     U5ERRIR         equ	766	;# 
 13823   0002FF                     U5ERRIE         equ	767	;# 
 13824   000300                     SMT1TMR         equ	768	;# 
 13825   000300                     SMT1TMRL        equ	768	;# 
 13826   000301                     SMT1TMRH        equ	769	;# 
 13827   000302                     SMT1TMRU        equ	770	;# 
 13828   000303                     SMT1CPR         equ	771	;# 
 13829   000303                     SMT1CPRL        equ	771	;# 
 13830   000304                     SMT1CPRH        equ	772	;# 
 13831   000305                     SMT1CPRU        equ	773	;# 
 13832   000306                     SMT1CPW         equ	774	;# 
 13833   000306                     SMT1CPWL        equ	774	;# 
 13834   000307                     SMT1CPWH        equ	775	;# 
 13835   000308                     SMT1CPWU        equ	776	;# 
 13836   000309                     SMT1PR          equ	777	;# 
 13837   000309                     SMT1PRL         equ	777	;# 
 13838   00030A                     SMT1PRH         equ	778	;# 
 13839   00030B                     SMT1PRU         equ	779	;# 
 13840   00030C                     SMT1CON0        equ	780	;# 
 13841   00030D                     SMT1CON1        equ	781	;# 
 13842   00030E                     SMT1STAT        equ	782	;# 
 13843   00030F                     SMT1CLK         equ	783	;# 
 13844   000310                     SMT1SIG         equ	784	;# 
 13845   000311                     SMT1WIN         equ	785	;# 
 13846   000318                     TMR0L           equ	792	;# 
 13847   000318                     TMR0            equ	792	;# 
 13848   000319                     TMR0H           equ	793	;# 
 13849   000319                     PR0             equ	793	;# 
 13850   00031A                     T0CON0          equ	794	;# 
 13851   00031B                     T0CON1          equ	795	;# 
 13852   00031C                     TMR1            equ	796	;# 
 13853   00031C                     TMR1L           equ	796	;# 
 13854   00031D                     TMR1H           equ	797	;# 
 13855   00031E                     T1CON           equ	798	;# 
 13856   00031E                     TMR1CON         equ	798	;# 
 13857   00031F                     T1GCON          equ	799	;# 
 13858   00031F                     TMR1GCON        equ	799	;# 
 13859   000320                     T1GATE          equ	800	;# 
 13860   000320                     TMR1GATE        equ	800	;# 
 13861   000321                     T1CLK           equ	801	;# 
 13862   000321                     TMR1CLK         equ	801	;# 
 13863   000321                     PR1             equ	801	;# 
 13864   000322                     T2TMR           equ	802	;# 
 13865   000322                     TMR2            equ	802	;# 
 13866   000323                     T2PR            equ	803	;# 
 13867   000323                     PR2             equ	803	;# 
 13868   000324                     T2CON           equ	804	;# 
 13869   000325                     T2HLT           equ	805	;# 
 13870   000326                     T2CLKCON        equ	806	;# 
 13871   000326                     T2CLK           equ	806	;# 
 13872   000327                     T2RST           equ	807	;# 
 13873   000328                     TMR3            equ	808	;# 
 13874   000328                     TMR3L           equ	808	;# 
 13875   000329                     TMR3H           equ	809	;# 
 13876   00032A                     T3CON           equ	810	;# 
 13877   00032A                     TMR3CON         equ	810	;# 
 13878   00032B                     T3GCON          equ	811	;# 
 13879   00032B                     TMR3GCON        equ	811	;# 
 13880   00032C                     T3GATE          equ	812	;# 
 13881   00032C                     TMR3GATE        equ	812	;# 
 13882   00032D                     T3CLK           equ	813	;# 
 13883   00032D                     TMR3CLK         equ	813	;# 
 13884   00032D                     PR3             equ	813	;# 
 13885   00032E                     T4TMR           equ	814	;# 
 13886   00032E                     TMR4            equ	814	;# 
 13887   00032F                     T4PR            equ	815	;# 
 13888   00032F                     PR4             equ	815	;# 
 13889   000330                     T4CON           equ	816	;# 
 13890   000331                     T4HLT           equ	817	;# 
 13891   000332                     T4CLKCON        equ	818	;# 
 13892   000332                     T4CLK           equ	818	;# 
 13893   000333                     T4RST           equ	819	;# 
 13894   000334                     TMR5            equ	820	;# 
 13895   000334                     TMR5L           equ	820	;# 
 13896   000335                     TMR5H           equ	821	;# 
 13897   000336                     T5CON           equ	822	;# 
 13898   000336                     TMR5CON         equ	822	;# 
 13899   000337                     T5GCON          equ	823	;# 
 13900   000337                     TMR5GCON        equ	823	;# 
 13901   000338                     T5GATE          equ	824	;# 
 13902   000338                     TMR5GATE        equ	824	;# 
 13903   000339                     T5CLK           equ	825	;# 
 13904   000339                     TMR5CLK         equ	825	;# 
 13905   000339                     PR5             equ	825	;# 
 13906   00033A                     T6TMR           equ	826	;# 
 13907   00033A                     TMR6            equ	826	;# 
 13908   00033B                     T6PR            equ	827	;# 
 13909   00033B                     PR6             equ	827	;# 
 13910   00033C                     T6CON           equ	828	;# 
 13911   00033D                     T6HLT           equ	829	;# 
 13912   00033E                     T6CLKCON        equ	830	;# 
 13913   00033E                     T6CLK           equ	830	;# 
 13914   00033F                     T6RST           equ	831	;# 
 13915   000340                     CCPR1           equ	832	;# 
 13916   000340                     CCPR1L          equ	832	;# 
 13917   000341                     CCPR1H          equ	833	;# 
 13918   000342                     CCP1CON         equ	834	;# 
 13919   000343                     CCP1CAP         equ	835	;# 
 13920   000344                     CCPR2           equ	836	;# 
 13921   000344                     CCPR2L          equ	836	;# 
 13922   000345                     CCPR2H          equ	837	;# 
 13923   000346                     CCP2CON         equ	838	;# 
 13924   000347                     CCP2CAP         equ	839	;# 
 13925   000348                     CCPR3           equ	840	;# 
 13926   000348                     CCPR3L          equ	840	;# 
 13927   000349                     CCPR3H          equ	841	;# 
 13928   00034A                     CCP3CON         equ	842	;# 
 13929   00034B                     CCP3CAP         equ	843	;# 
 13930   00034C                     CCPTMRS0        equ	844	;# 
 13931   00034F                     CRCDATA         equ	847	;# 
 13932   00034F                     CRCDATAL        equ	847	;# 
 13933   000350                     CRCDATAH        equ	848	;# 
 13934   000351                     CRCDATAU        equ	849	;# 
 13935   000352                     CRCDATAT        equ	850	;# 
 13936   000353                     CRCOUT          equ	851	;# 
 13937   000353                     CRCSHFT         equ	851	;# 
 13938   000353                     CRCXOR          equ	851	;# 
 13939   000353                     CRCOUTL         equ	851	;# 
 13940   000353                     CRCSHFTL        equ	851	;# 
 13941   000353                     CRCSHIFTL       equ	851	;# 
 13942   000353                     CRCXORL         equ	851	;# 
 13943   000354                     CRCOUTH         equ	852	;# 
 13944   000354                     CRCSHFTH        equ	852	;# 
 13945   000354                     CRCSHIFTH       equ	852	;# 
 13946   000354                     CRCXORH         equ	852	;# 
 13947   000355                     CRCOUTU         equ	853	;# 
 13948   000355                     CRCSHFTU        equ	853	;# 
 13949   000355                     CRCSHIFTU       equ	853	;# 
 13950   000355                     CRCXORU         equ	853	;# 
 13951   000356                     CRCOUTT         equ	854	;# 
 13952   000356                     CRCSHFTT        equ	854	;# 
 13953   000356                     CRCSHIFTT       equ	854	;# 
 13954   000356                     CRCXORT         equ	854	;# 
 13955   000357                     CRCCON0         equ	855	;# 
 13956   000358                     CRCCON1         equ	856	;# 
 13957   000359                     CRCCON2         equ	857	;# 
 13958   00035A                     SCANLADR        equ	858	;# 
 13959   00035A                     SCANLADRL       equ	858	;# 
 13960   00035B                     SCANLADRH       equ	859	;# 
 13961   00035C                     SCANLADRU       equ	860	;# 
 13962   00035D                     SCANHADR        equ	861	;# 
 13963   00035D                     SCANHADRL       equ	861	;# 
 13964   00035E                     SCANHADRH       equ	862	;# 
 13965   00035F                     SCANHADRU       equ	863	;# 
 13966   000360                     SCANCON0        equ	864	;# 
 13967   000361                     SCANTRIG        equ	865	;# 
 13968   000362                     IPR0            equ	866	;# 
 13969   000363                     IPR1            equ	867	;# 
 13970   000364                     IPR2            equ	868	;# 
 13971   000365                     IPR3            equ	869	;# 
 13972   000366                     IPR4            equ	870	;# 
 13973   000367                     IPR5            equ	871	;# 
 13974   000368                     IPR6            equ	872	;# 
 13975   000369                     IPR7            equ	873	;# 
 13976   00036A                     IPR8            equ	874	;# 
 13977   00036B                     IPR9            equ	875	;# 
 13978   00036C                     IPR10           equ	876	;# 
 13979   00036D                     IPR11           equ	877	;# 
 13980   00036E                     IPR12           equ	878	;# 
 13981   00036F                     IPR13           equ	879	;# 
 13982   000370                     IPR14           equ	880	;# 
 13983   000371                     IPR15           equ	881	;# 
 13984   000373                     STATUS_CSHAD    equ	883	;# 
 13985   000374                     WREG_CSHAD      equ	884	;# 
 13986   000375                     BSR_CSHAD       equ	885	;# 
 13987   000376                     SHADCON         equ	886	;# 
 13988   000377                     STATUS_SHAD     equ	887	;# 
 13989   000378                     WREG_SHAD       equ	888	;# 
 13990   000379                     BSR_SHAD        equ	889	;# 
 13991   00037A                     PCLATH_SHAD     equ	890	;# 
 13992   00037B                     PCLATU_SHAD     equ	891	;# 
 13993   00037C                     FSR0SH          equ	892	;# 
 13994   00037C                     FSR0L_SHAD      equ	892	;# 
 13995   00037D                     FSR0H_SHAD      equ	893	;# 
 13996   00037E                     FSR1SH          equ	894	;# 
 13997   00037E                     FSR1L_SHAD      equ	894	;# 
 13998   00037F                     FSR1H_SHAD      equ	895	;# 
 13999   000380                     FSR2SH          equ	896	;# 
 14000   000380                     FSR2L_SHAD      equ	896	;# 
 14001   000381                     FSR2H_SHAD      equ	897	;# 
 14002   000382                     PRODSH          equ	898	;# 
 14003   000382                     PRODL_SHAD      equ	898	;# 
 14004   000383                     PRODH_SHAD      equ	899	;# 
 14005   000387                     TU16ACON0       equ	903	;# 
 14006   000388                     TU16ACON1       equ	904	;# 
 14007   000389                     TU16AHLT        equ	905	;# 
 14008   00038A                     TU16APS         equ	906	;# 
 14009   00038B                     TU16ATMR        equ	907	;# 
 14010   00038B                     TU16ACR         equ	907	;# 
 14011   00038B                     TU16ATMRL       equ	907	;# 
 14012   00038B                     TU16ACRL        equ	907	;# 
 14013   00038C                     TU16ATMRH       equ	908	;# 
 14014   00038C                     TU16ACRH        equ	908	;# 
 14015   00038D                     TU16APR         equ	909	;# 
 14016   00038D                     TU16APRL        equ	909	;# 
 14017   00038E                     TU16APRH        equ	910	;# 
 14018   00038F                     TU16ACLK        equ	911	;# 
 14019   000390                     TU16AERS        equ	912	;# 
 14020   000393                     TU16BCON0       equ	915	;# 
 14021   000394                     TU16BCON1       equ	916	;# 
 14022   000395                     TU16BHLT        equ	917	;# 
 14023   000396                     TU16BPS         equ	918	;# 
 14024   000397                     TU16BTMR        equ	919	;# 
 14025   000397                     TU16BCR         equ	919	;# 
 14026   000397                     TU16BTMRL       equ	919	;# 
 14027   000397                     TU16BCRL        equ	919	;# 
 14028   000398                     TU16BTMRH       equ	920	;# 
 14029   000398                     TU16BCRH        equ	920	;# 
 14030   000399                     TU16BPR         equ	921	;# 
 14031   000399                     TU16BPRL        equ	921	;# 
 14032   00039A                     TU16BPRH        equ	922	;# 
 14033   00039B                     TU16BCLK        equ	923	;# 
 14034   00039C                     TU16BERS        equ	924	;# 
 14035   0003BB                     TUCHAIN         equ	955	;# 
 14036   0003BC                     CWG1CLK         equ	956	;# 
 14037   0003BC                     CWG1CLKCON      equ	956	;# 
 14038   0003BD                     CWG1ISM         equ	957	;# 
 14039   0003BE                     CWG1DBR         equ	958	;# 
 14040   0003BF                     CWG1DBF         equ	959	;# 
 14041   0003C0                     CWG1CON0        equ	960	;# 
 14042   0003C1                     CWG1CON1        equ	961	;# 
 14043   0003C2                     CWG1AS0         equ	962	;# 
 14044   0003C3                     CWG1AS1         equ	963	;# 
 14045   0003C4                     CWG1STR         equ	964	;# 
 14046   0003C5                     CWG2CLK         equ	965	;# 
 14047   0003C5                     CWG2CLKCON      equ	965	;# 
 14048   0003C6                     CWG2ISM         equ	966	;# 
 14049   0003C7                     CWG2DBR         equ	967	;# 
 14050   0003C8                     CWG2DBF         equ	968	;# 
 14051   0003C9                     CWG2CON0        equ	969	;# 
 14052   0003CA                     CWG2CON1        equ	970	;# 
 14053   0003CB                     CWG2AS0         equ	971	;# 
 14054   0003CC                     CWG2AS1         equ	972	;# 
 14055   0003CD                     CWG2STR         equ	973	;# 
 14056   0003CE                     CWG3CLK         equ	974	;# 
 14057   0003CE                     CWG3CLKCON      equ	974	;# 
 14058   0003CF                     CWG3ISM         equ	975	;# 
 14059   0003D0                     CWG3DBR         equ	976	;# 
 14060   0003D1                     CWG3DBF         equ	977	;# 
 14061   0003D2                     CWG3CON0        equ	978	;# 
 14062   0003D3                     CWG3CON1        equ	979	;# 
 14063   0003D4                     CWG3AS0         equ	980	;# 
 14064   0003D5                     CWG3AS1         equ	981	;# 
 14065   0003D6                     CWG3STR         equ	982	;# 
 14066   0003D7                     FVRCON          equ	983	;# 
 14067   0003D8                     ADCPCON         equ	984	;# 
 14068   0003D8                     ADCP            equ	984	;# 
 14069   0003D9                     ADLTH           equ	985	;# 
 14070   0003D9                     ADLTHL          equ	985	;# 
 14071   0003DA                     ADLTHH          equ	986	;# 
 14072   0003DB                     ADUTH           equ	987	;# 
 14073   0003DB                     ADUTHL          equ	987	;# 
 14074   0003DC                     ADUTHH          equ	988	;# 
 14075   0003DD                     ADERR           equ	989	;# 
 14076   0003DD                     ADERRL          equ	989	;# 
 14077   0003DE                     ADERRH          equ	990	;# 
 14078   0003DF                     ADSTPT          equ	991	;# 
 14079   0003DF                     ADSTPTL         equ	991	;# 
 14080   0003E0                     ADSTPTH         equ	992	;# 
 14081   0003E1                     ADFLTR          equ	993	;# 
 14082   0003E1                     ADFLTRL         equ	993	;# 
 14083   0003E2                     ADFLTRH         equ	994	;# 
 14084   0003E3                     ADACC           equ	995	;# 
 14085   0003E3                     ADACCL          equ	995	;# 
 14086   0003E4                     ADACCH          equ	996	;# 
 14087   0003E5                     ADACCU          equ	997	;# 
 14088   0003E6                     ADCNT           equ	998	;# 
 14089   0003E7                     ADRPT           equ	999	;# 
 14090   0003E8                     ADPREV          equ	1000	;# 
 14091   0003E8                     ADPREVL         equ	1000	;# 
 14092   0003E9                     ADPREVH         equ	1001	;# 
 14093   0003EA                     ADRES           equ	1002	;# 
 14094   0003EA                     ADRESL          equ	1002	;# 
 14095   0003EB                     ADRESH          equ	1003	;# 
 14096   0003EC                     ADPCH           equ	1004	;# 
 14097   0003EE                     ADACQ           equ	1006	;# 
 14098   0003EE                     ADACQL          equ	1006	;# 
 14099   0003EF                     ADACQH          equ	1007	;# 
 14100   0003F0                     ADCAP           equ	1008	;# 
 14101   0003F1                     ADPRE           equ	1009	;# 
 14102   0003F1                     ADPREL          equ	1009	;# 
 14103   0003F2                     ADPREH          equ	1010	;# 
 14104   0003F3                     ADCON0          equ	1011	;# 
 14105   0003F4                     ADCON1          equ	1012	;# 
 14106   0003F5                     ADCON2          equ	1013	;# 
 14107   0003F6                     ADCON3          equ	1014	;# 
 14108   0003F7                     ADSTAT          equ	1015	;# 
 14109   0003F8                     ADREF           equ	1016	;# 
 14110   0003F9                     ADACT           equ	1017	;# 
 14111   0003FA                     ADCLK           equ	1018	;# 
 14112   0003FB                     ADCTX           equ	1019	;# 
 14113   0003FC                     ADCSEL1         equ	1020	;# 
 14114   0003FD                     ADCSEL2         equ	1021	;# 
 14115   0003FE                     ADCSEL3         equ	1022	;# 
 14116   0003FF                     ADCSEL4         equ	1023	;# 
 14117   000400                     ANSELA          equ	1024	;# 
 14118   000401                     WPUA            equ	1025	;# 
 14119   000402                     ODCONA          equ	1026	;# 
 14120   000403                     SLRCONA         equ	1027	;# 
 14121   000404                     INLVLA          equ	1028	;# 
 14122   000405                     IOCAP           equ	1029	;# 
 14123   000406                     IOCAN           equ	1030	;# 
 14124   000407                     IOCAF           equ	1031	;# 
 14125   000408                     ANSELB          equ	1032	;# 
 14126   000409                     WPUB            equ	1033	;# 
 14127   00040A                     ODCONB          equ	1034	;# 
 14128   00040B                     SLRCONB         equ	1035	;# 
 14129   00040C                     INLVLB          equ	1036	;# 
 14130   00040D                     IOCBP           equ	1037	;# 
 14131   00040E                     IOCBN           equ	1038	;# 
 14132   00040F                     IOCBF           equ	1039	;# 
 14133   000410                     ANSELC          equ	1040	;# 
 14134   000411                     WPUC            equ	1041	;# 
 14135   000412                     ODCONC          equ	1042	;# 
 14136   000413                     SLRCONC         equ	1043	;# 
 14137   000414                     INLVLC          equ	1044	;# 
 14138   000415                     IOCCP           equ	1045	;# 
 14139   000416                     IOCCN           equ	1046	;# 
 14140   000417                     IOCCF           equ	1047	;# 
 14141   000421                     WPUE            equ	1057	;# 
 14142   000424                     INLVLE          equ	1060	;# 
 14143   000425                     IOCEP           equ	1061	;# 
 14144   000426                     IOCEN           equ	1062	;# 
 14145   000427                     IOCEF           equ	1063	;# 
 14146   000440                     NCO1ACC         equ	1088	;# 
 14147   000440                     NCO1ACCL        equ	1088	;# 
 14148   000441                     NCO1ACCH        equ	1089	;# 
 14149   000442                     NCO1ACCU        equ	1090	;# 
 14150   000443                     NCO1INC         equ	1091	;# 
 14151   000443                     NCO1INCL        equ	1091	;# 
 14152   000444                     NCO1INCH        equ	1092	;# 
 14153   000445                     NCO1INCU        equ	1093	;# 
 14154   000446                     NCO1CON         equ	1094	;# 
 14155   000447                     NCO1CLK         equ	1095	;# 
 14156   000448                     NCO2ACC         equ	1096	;# 
 14157   000448                     NCO2ACCL        equ	1096	;# 
 14158   000449                     NCO2ACCH        equ	1097	;# 
 14159   00044A                     NCO2ACCU        equ	1098	;# 
 14160   00044B                     NCO2INC         equ	1099	;# 
 14161   00044B                     NCO2INCL        equ	1099	;# 
 14162   00044C                     NCO2INCH        equ	1100	;# 
 14163   00044D                     NCO2INCU        equ	1101	;# 
 14164   00044E                     NCO2CON         equ	1102	;# 
 14165   00044F                     NCO2CLK         equ	1103	;# 
 14166   000450                     NCO3ACC         equ	1104	;# 
 14167   000450                     NCO3ACCL        equ	1104	;# 
 14168   000451                     NCO3ACCH        equ	1105	;# 
 14169   000452                     NCO3ACCU        equ	1106	;# 
 14170   000453                     NCO3INC         equ	1107	;# 
 14171   000453                     NCO3INCL        equ	1107	;# 
 14172   000454                     NCO3INCH        equ	1108	;# 
 14173   000455                     NCO3INCU        equ	1109	;# 
 14174   000456                     NCO3CON         equ	1110	;# 
 14175   000457                     NCO3CLK         equ	1111	;# 
 14176   000458                     FSCMCON         equ	1112	;# 
 14177   000459                     IVTLOCK         equ	1113	;# 
 14178   00045A                     IVTAD           equ	1114	;# 
 14179   00045A                     IVTADL          equ	1114	;# 
 14180   00045B                     IVTADH          equ	1115	;# 
 14181   00045C                     IVTADU          equ	1116	;# 
 14182   00045D                     IVTBASE         equ	1117	;# 
 14183   00045D                     IVTBASEL        equ	1117	;# 
 14184   00045E                     IVTBASEH        equ	1118	;# 
 14185   00045F                     IVTBASEU        equ	1119	;# 
 14186   000460                     PWM1ERS         equ	1120	;# 
 14187   000461                     PWM1CLK         equ	1121	;# 
 14188   000462                     PWM1LDS         equ	1122	;# 
 14189   000463                     PWM1PR          equ	1123	;# 
 14190   000463                     PWM1PRL         equ	1123	;# 
 14191   000464                     PWM1PRH         equ	1124	;# 
 14192   000465                     PWM1CPRE        equ	1125	;# 
 14193   000466                     PWM1PIPOS       equ	1126	;# 
 14194   000467                     PWM1GIR         equ	1127	;# 
 14195   000468                     PWM1GIE         equ	1128	;# 
 14196   000469                     PWM1CON         equ	1129	;# 
 14197   00046A                     PWM1S1CFG       equ	1130	;# 
 14198   00046B                     PWM1S1P1        equ	1131	;# 
 14199   00046B                     PWM1S1P1L       equ	1131	;# 
 14200   00046C                     PWM1S1P1H       equ	1132	;# 
 14201   00046D                     PWM1S1P2        equ	1133	;# 
 14202   00046D                     PWM1S1P2L       equ	1133	;# 
 14203   00046E                     PWM1S1P2H       equ	1134	;# 
 14204   00046F                     PWM2ERS         equ	1135	;# 
 14205   000470                     PWM2CLK         equ	1136	;# 
 14206   000471                     PWM2LDS         equ	1137	;# 
 14207   000472                     PWM2PR          equ	1138	;# 
 14208   000472                     PWM2PRL         equ	1138	;# 
 14209   000473                     PWM2PRH         equ	1139	;# 
 14210   000474                     PWM2CPRE        equ	1140	;# 
 14211   000475                     PWM2PIPOS       equ	1141	;# 
 14212   000476                     PWM2GIR         equ	1142	;# 
 14213   000477                     PWM2GIE         equ	1143	;# 
 14214   000478                     PWM2CON         equ	1144	;# 
 14215   000479                     PWM2S1CFG       equ	1145	;# 
 14216   00047A                     PWM2S1P1        equ	1146	;# 
 14217   00047A                     PWM2S1P1L       equ	1146	;# 
 14218   00047B                     PWM2S1P1H       equ	1147	;# 
 14219   00047C                     PWM2S1P2        equ	1148	;# 
 14220   00047C                     PWM2S1P2L       equ	1148	;# 
 14221   00047D                     PWM2S1P2H       equ	1149	;# 
 14222   00047E                     PWM3ERS         equ	1150	;# 
 14223   00047F                     PWM3CLK         equ	1151	;# 
 14224   000480                     PWM3LDS         equ	1152	;# 
 14225   000481                     PWM3PR          equ	1153	;# 
 14226   000481                     PWM3PRL         equ	1153	;# 
 14227   000482                     PWM3PRH         equ	1154	;# 
 14228   000483                     PWM3CPRE        equ	1155	;# 
 14229   000484                     PWM3PIPOS       equ	1156	;# 
 14230   000485                     PWM3GIR         equ	1157	;# 
 14231   000486                     PWM3GIE         equ	1158	;# 
 14232   000487                     PWM3CON         equ	1159	;# 
 14233   000488                     PWM3S1CFG       equ	1160	;# 
 14234   000489                     PWM3S1P1        equ	1161	;# 
 14235   000489                     PWM3S1P1L       equ	1161	;# 
 14236   00048A                     PWM3S1P1H       equ	1162	;# 
 14237   00048B                     PWM3S1P2        equ	1163	;# 
 14238   00048B                     PWM3S1P2L       equ	1163	;# 
 14239   00048C                     PWM3S1P2H       equ	1164	;# 
 14240   00048D                     PWM4ERS         equ	1165	;# 
 14241   00048E                     PWM4CLK         equ	1166	;# 
 14242   00048F                     PWM4LDS         equ	1167	;# 
 14243   000490                     PWM4PR          equ	1168	;# 
 14244   000490                     PWM4PRL         equ	1168	;# 
 14245   000491                     PWM4PRH         equ	1169	;# 
 14246   000492                     PWM4CPRE        equ	1170	;# 
 14247   000493                     PWM4PIPOS       equ	1171	;# 
 14248   000494                     PWM4GIR         equ	1172	;# 
 14249   000495                     PWM4GIE         equ	1173	;# 
 14250   000496                     PWM4CON         equ	1174	;# 
 14251   000497                     PWM4S1CFG       equ	1175	;# 
 14252   000498                     PWM4S1P1        equ	1176	;# 
 14253   000498                     PWM4S1P1L       equ	1176	;# 
 14254   000499                     PWM4S1P1H       equ	1177	;# 
 14255   00049A                     PWM4S1P2        equ	1178	;# 
 14256   00049A                     PWM4S1P2L       equ	1178	;# 
 14257   00049B                     PWM4S1P2H       equ	1179	;# 
 14258   00049C                     PWMLOAD         equ	1180	;# 
 14259   00049D                     PWMEN           equ	1181	;# 
 14260   00049E                     PIE0            equ	1182	;# 
 14261   00049F                     PIE1            equ	1183	;# 
 14262   0004A0                     PIE2            equ	1184	;# 
 14263   0004A1                     PIE3            equ	1185	;# 
 14264   0004A2                     PIE4            equ	1186	;# 
 14265   0004A3                     PIE5            equ	1187	;# 
 14266   0004A4                     PIE6            equ	1188	;# 
 14267   0004A5                     PIE7            equ	1189	;# 
 14268   0004A6                     PIE8            equ	1190	;# 
 14269   0004A7                     PIE9            equ	1191	;# 
 14270   0004A8                     PIE10           equ	1192	;# 
 14271   0004A9                     PIE11           equ	1193	;# 
 14272   0004AA                     PIE12           equ	1194	;# 
 14273   0004AB                     PIE13           equ	1195	;# 
 14274   0004AC                     PIE14           equ	1196	;# 
 14275   0004AD                     PIE15           equ	1197	;# 
 14276   0004AE                     PIR0            equ	1198	;# 
 14277   0004AF                     PIR1            equ	1199	;# 
 14278   0004B0                     PIR2            equ	1200	;# 
 14279   0004B1                     PIR3            equ	1201	;# 
 14280   0004B2                     PIR4            equ	1202	;# 
 14281   0004B3                     PIR5            equ	1203	;# 
 14282   0004B4                     PIR6            equ	1204	;# 
 14283   0004B5                     PIR7            equ	1205	;# 
 14284   0004B6                     PIR8            equ	1206	;# 
 14285   0004B7                     PIR9            equ	1207	;# 
 14286   0004B8                     PIR10           equ	1208	;# 
 14287   0004B9                     PIR11           equ	1209	;# 
 14288   0004BA                     PIR12           equ	1210	;# 
 14289   0004BB                     PIR13           equ	1211	;# 
 14290   0004BC                     PIR14           equ	1212	;# 
 14291   0004BD                     PIR15           equ	1213	;# 
 14292   0004BE                     LATA            equ	1214	;# 
 14293   0004BF                     LATB            equ	1215	;# 
 14294   0004C0                     LATC            equ	1216	;# 
 14295   0004C6                     TRISA           equ	1222	;# 
 14296   0004C7                     TRISB           equ	1223	;# 
 14297   0004C8                     TRISC           equ	1224	;# 
 14298   0004CA                     TRISE           equ	1226	;# 
 14299   0004CE                     PORTA           equ	1230	;# 
 14300   0004CF                     PORTB           equ	1231	;# 
 14301   0004D0                     PORTC           equ	1232	;# 
 14302   0004D2                     PORTE           equ	1234	;# 
 14303   0004D6                     INTCON0         equ	1238	;# 
 14304   0004D7                     INTCON1         equ	1239	;# 
 14305   0004D8                     STATUS          equ	1240	;# 
 14306   0004D9                     FSR2            equ	1241	;# 
 14307   0004D9                     FSR2L           equ	1241	;# 
 14308   0004DA                     FSR2H           equ	1242	;# 
 14309   0004DB                     PLUSW2          equ	1243	;# 
 14310   0004DC                     PREINC2         equ	1244	;# 
 14311   0004DD                     POSTDEC2        equ	1245	;# 
 14312   0004DE                     POSTINC2        equ	1246	;# 
 14313   0004DF                     INDF2           equ	1247	;# 
 14314   0004E0                     BSR             equ	1248	;# 
 14315   0004E1                     FSR1            equ	1249	;# 
 14316   0004E1                     FSR1L           equ	1249	;# 
 14317   0004E2                     FSR1H           equ	1250	;# 
 14318   0004E3                     PLUSW1          equ	1251	;# 
 14319   0004E4                     PREINC1         equ	1252	;# 
 14320   0004E5                     POSTDEC1        equ	1253	;# 
 14321   0004E6                     POSTINC1        equ	1254	;# 
 14322   0004E7                     INDF1           equ	1255	;# 
 14323   0004E8                     WREG            equ	1256	;# 
 14324   0004E9                     FSR0            equ	1257	;# 
 14325   0004E9                     FSR0L           equ	1257	;# 
 14326   0004EA                     FSR0H           equ	1258	;# 
 14327   0004EB                     PLUSW0          equ	1259	;# 
 14328   0004EC                     PREINC0         equ	1260	;# 
 14329   0004ED                     POSTDEC0        equ	1261	;# 
 14330   0004EE                     POSTINC0        equ	1262	;# 
 14331   0004EF                     INDF0           equ	1263	;# 
 14332   0004F0                     PCON0           equ	1264	;# 
 14333   0004F1                     PCON1           equ	1265	;# 
 14334   0004F2                     CPUDOZE         equ	1266	;# 
 14335   0004F3                     PROD            equ	1267	;# 
 14336   0004F3                     PRODL           equ	1267	;# 
 14337   0004F4                     PRODH           equ	1268	;# 
 14338   0004F5                     TABLAT          equ	1269	;# 
 14339   0004F6                     TBLPTR          equ	1270	;# 
 14340   0004F6                     TBLPTRL         equ	1270	;# 
 14341   0004F7                     TBLPTRH         equ	1271	;# 
 14342   0004F8                     TBLPTRU         equ	1272	;# 
 14343   0004F9                     PCLAT           equ	1273	;# 
 14344   0004F9                     PCL             equ	1273	;# 
 14345   0004FA                     PCLATH          equ	1274	;# 
 14346   0004FB                     PCLATU          equ	1275	;# 
 14347   0004FC                     STKPTR          equ	1276	;# 
 14348   0004FD                     TOS             equ	1277	;# 
 14349   0004FD                     TOSL            equ	1277	;# 
 14350   0004FE                     TOSH            equ	1278	;# 
 14351   0004FF                     TOSU            equ	1279	;# 
 14352   000038                     BOOTREG         equ	56	;# 
 14353   000039                     CLKRCON         equ	57	;# 
 14354   00003A                     CLKRCLK         equ	58	;# 
 14355   000040                     NVMCON0         equ	64	;# 
 14356   000041                     NVMCON1         equ	65	;# 
 14357   000042                     NVMLOCK         equ	66	;# 
 14358   000043                     NVMADR          equ	67	;# 
 14359   000043                     NVMADRL         equ	67	;# 
 14360   000044                     NVMADRH         equ	68	;# 
 14361   000045                     NVMADRU         equ	69	;# 
 14362   000046                     NVMDAT          equ	70	;# 
 14363   000046                     NVMDATL         equ	70	;# 
 14364   000047                     NVMDATH         equ	71	;# 
 14365   000048                     VREGCON         equ	72	;# 
 14366   000049                     BORCON          equ	73	;# 
 14367   00004A                     HLVDCON0        equ	74	;# 
 14368   00004B                     HLVDCON1        equ	75	;# 
 14369   00004C                     ZCDCON          equ	76	;# 
 14370   000060                     PMD0            equ	96	;# 
 14371   000061                     PMD1            equ	97	;# 
 14372   000062                     PMD2            equ	98	;# 
 14373   000063                     PMD3            equ	99	;# 
 14374   000064                     PMD4            equ	100	;# 
 14375   000065                     PMD5            equ	101	;# 
 14376   000066                     PMD6            equ	102	;# 
 14377   000067                     PMD7            equ	103	;# 
 14378   000068                     PMD8            equ	104	;# 
 14379   00006A                     MD1CON0         equ	106	;# 
 14380   00006B                     MD1CON1         equ	107	;# 
 14381   00006C                     MD1SRC          equ	108	;# 
 14382   00006D                     MD1CARL         equ	109	;# 
 14383   00006E                     MD1CARH         equ	110	;# 
 14384   00006F                     CMOUT           equ	111	;# 
 14385   000070                     CM1CON0         equ	112	;# 
 14386   000071                     CM1CON1         equ	113	;# 
 14387   000072                     CM1NCH          equ	114	;# 
 14388   000073                     CM1PCH          equ	115	;# 
 14389   000074                     CM2CON0         equ	116	;# 
 14390   000075                     CM2CON1         equ	117	;# 
 14391   000076                     CM2NCH          equ	118	;# 
 14392   000077                     CM2PCH          equ	119	;# 
 14393   000078                     WDTCON0         equ	120	;# 
 14394   000079                     WDTCON1         equ	121	;# 
 14395   00007A                     WDTPSL          equ	122	;# 
 14396   00007B                     WDTPSH          equ	123	;# 
 14397   00007C                     WDTTMR          equ	124	;# 
 14398   00007D                     DAC1DAT         equ	125	;# 
 14399   00007D                     DAC1DATL        equ	125	;# 
 14400   00007F                     DAC1CON         equ	127	;# 
 14401   000080                     SPI1RXB         equ	128	;# 
 14402   000081                     SPI1TXB         equ	129	;# 
 14403   000082                     SPI1TCNT        equ	130	;# 
 14404   000082                     SPI1TCNTL       equ	130	;# 
 14405   000083                     SPI1TCNTH       equ	131	;# 
 14406   000084                     SPI1CON0        equ	132	;# 
 14407   000085                     SPI1CON1        equ	133	;# 
 14408   000086                     SPI1CON2        equ	134	;# 
 14409   000087                     SPI1STATUS      equ	135	;# 
 14410   000088                     SPI1TWIDTH      equ	136	;# 
 14411   000089                     SPI1BAUD        equ	137	;# 
 14412   00008A                     SPI1INTF        equ	138	;# 
 14413   00008B                     SPI1INTE        equ	139	;# 
 14414   00008C                     SPI1CLK         equ	140	;# 
 14415   00008D                     SPI2RXB         equ	141	;# 
 14416   00008E                     SPI2TXB         equ	142	;# 
 14417   00008F                     SPI2TCNT        equ	143	;# 
 14418   00008F                     SPI2TCNTL       equ	143	;# 
 14419   000090                     SPI2TCNTH       equ	144	;# 
 14420   000091                     SPI2CON0        equ	145	;# 
 14421   000092                     SPI2CON1        equ	146	;# 
 14422   000093                     SPI2CON2        equ	147	;# 
 14423   000094                     SPI2STATUS      equ	148	;# 
 14424   000095                     SPI2TWIDTH      equ	149	;# 
 14425   000096                     SPI2BAUD        equ	150	;# 
 14426   000097                     SPI2INTF        equ	151	;# 
 14427   000098                     SPI2INTE        equ	152	;# 
 14428   000099                     SPI2CLK         equ	153	;# 
 14429   0000AC                     ACTCON          equ	172	;# 
 14430   0000AD                     OSCCON1         equ	173	;# 
 14431   0000AE                     OSCCON2         equ	174	;# 
 14432   0000AF                     OSCCON3         equ	175	;# 
 14433   0000B0                     OSCTUNE         equ	176	;# 
 14434   0000B1                     OSCFRQ          equ	177	;# 
 14435   0000B1                     OSCFREQ         equ	177	;# 
 14436   0000B2                     OSCSTAT         equ	178	;# 
 14437   0000B2                     OSCSTAT1        equ	178	;# 
 14438   0000B3                     OSCEN           equ	179	;# 
 14439   0000B4                     PRLOCK          equ	180	;# 
 14440   0000B5                     SCANPR          equ	181	;# 
 14441   0000B6                     DMA1PR          equ	182	;# 
 14442   0000B7                     DMA2PR          equ	183	;# 
 14443   0000B8                     DMA3PR          equ	184	;# 
 14444   0000B9                     DMA4PR          equ	185	;# 
 14445   0000BA                     DMA5PR          equ	186	;# 
 14446   0000BB                     DMA6PR          equ	187	;# 
 14447   0000BC                     DMA7PR          equ	188	;# 
 14448   0000BD                     DMA8PR          equ	189	;# 
 14449   0000BE                     MAINPR          equ	190	;# 
 14450   0000BF                     ISRPR           equ	191	;# 
 14451   0000D4                     CLCDATA         equ	212	;# 
 14452   0000D5                     CLCSELECT       equ	213	;# 
 14453   0000D6                     CLCnCON         equ	214	;# 
 14454   0000D7                     CLCnPOL         equ	215	;# 
 14455   0000D8                     CLCnSEL0        equ	216	;# 
 14456   0000D9                     CLCnSEL1        equ	217	;# 
 14457   0000DA                     CLCnSEL2        equ	218	;# 
 14458   0000DB                     CLCnSEL3        equ	219	;# 
 14459   0000DC                     CLCnGLS0        equ	220	;# 
 14460   0000DD                     CLCnGLS1        equ	221	;# 
 14461   0000DE                     CLCnGLS2        equ	222	;# 
 14462   0000DF                     CLCnGLS3        equ	223	;# 
 14463   0000E8                     DMASELECT       equ	232	;# 
 14464   0000E9                     DMAnBUF         equ	233	;# 
 14465   0000EA                     DMAnDCNT        equ	234	;# 
 14466   0000EA                     DMAnDCNTL       equ	234	;# 
 14467   0000EB                     DMAnDCNTH       equ	235	;# 
 14468   0000EC                     DMAnDPTR        equ	236	;# 
 14469   0000EC                     DMAnDPTRL       equ	236	;# 
 14470   0000ED                     DMAnDPTRH       equ	237	;# 
 14471   0000EE                     DMAnDSZ         equ	238	;# 
 14472   0000EE                     DMAnDSZL        equ	238	;# 
 14473   0000EF                     DMAnDSZH        equ	239	;# 
 14474   0000F0                     DMAnDSA         equ	240	;# 
 14475   0000F0                     DMAnDSAL        equ	240	;# 
 14476   0000F1                     DMAnDSAH        equ	241	;# 
 14477   0000F2                     DMAnSCNT        equ	242	;# 
 14478   0000F2                     DMAnSCNTL       equ	242	;# 
 14479   0000F3                     DMAnSCNTH       equ	243	;# 
 14480   0000F4                     DMAnSPTR        equ	244	;# 
 14481   0000F4                     DMAnSPTRL       equ	244	;# 
 14482   0000F5                     DMAnSPTRH       equ	245	;# 
 14483   0000F6                     DMAnSPTRU       equ	246	;# 
 14484   0000F7                     DMAnSSZ         equ	247	;# 
 14485   0000F7                     DMAnSSZL        equ	247	;# 
 14486   0000F8                     DMAnSSZH        equ	248	;# 
 14487   0000F9                     DMAnSSA         equ	249	;# 
 14488   0000F9                     DMAnSSAL        equ	249	;# 
 14489   0000FA                     DMAnSSAH        equ	250	;# 
 14490   0000FB                     DMAnSSAU        equ	251	;# 
 14491   0000FC                     DMAnCON0        equ	252	;# 
 14492   0000FD                     DMAnCON1        equ	253	;# 
 14493   0000FE                     DMAnAIRQ        equ	254	;# 
 14494   0000FF                     DMAnSIRQ        equ	255	;# 
 14495   000100                     C1CONL          equ	256	;# 
 14496   000101                     C1CONH          equ	257	;# 
 14497   000102                     C1CONU          equ	258	;# 
 14498   000103                     C1CONT          equ	259	;# 
 14499   000104                     C1NBTCFGL       equ	260	;# 
 14500   000105                     C1NBTCFGH       equ	261	;# 
 14501   000106                     C1NBTCFGU       equ	262	;# 
 14502   000107                     C1NBTCFGT       equ	263	;# 
 14503   000108                     C1DBTCFGL       equ	264	;# 
 14504   000109                     C1DBTCFGH       equ	265	;# 
 14505   00010A                     C1DBTCFGU       equ	266	;# 
 14506   00010B                     C1DBTCFGT       equ	267	;# 
 14507   00010C                     C1TDCL          equ	268	;# 
 14508   00010D                     C1TDCH          equ	269	;# 
 14509   00010E                     C1TDCU          equ	270	;# 
 14510   000110                     C1TBC           equ	272	;# 
 14511   000110                     C1TBCL          equ	272	;# 
 14512   000111                     C1TBCH          equ	273	;# 
 14513   000112                     C1TBCU          equ	274	;# 
 14514   000113                     C1TBCT          equ	275	;# 
 14515   000114                     C1TSCONL        equ	276	;# 
 14516   000115                     C1TSCONH        equ	277	;# 
 14517   000116                     C1TSCONU        equ	278	;# 
 14518   000117                     C1TSCONT        equ	279	;# 
 14519   000118                     C1VECL          equ	280	;# 
 14520   000119                     C1VECH          equ	281	;# 
 14521   00011A                     C1VECU          equ	282	;# 
 14522   00011B                     C1VECT          equ	283	;# 
 14523   00011C                     C1INTL          equ	284	;# 
 14524   00011D                     C1INTH          equ	285	;# 
 14525   00011E                     C1INTU          equ	286	;# 
 14526   00011F                     C1INTT          equ	287	;# 
 14527   000120                     C1RXIF          equ	288	;# 
 14528   000120                     C1RXIFL         equ	288	;# 
 14529   000121                     C1RXIFH         equ	289	;# 
 14530   000122                     C1RXIFU         equ	290	;# 
 14531   000123                     C1RXIFT         equ	291	;# 
 14532   000124                     C1TXIF          equ	292	;# 
 14533   000124                     C1TXIFL         equ	292	;# 
 14534   000125                     C1TXIFH         equ	293	;# 
 14535   000126                     C1TXIFU         equ	294	;# 
 14536   000127                     C1TXIFT         equ	295	;# 
 14537   000128                     C1RXOVIF        equ	296	;# 
 14538   000128                     C1RXOVIFL       equ	296	;# 
 14539   000129                     C1RXOVIFH       equ	297	;# 
 14540   00012A                     C1RXOVIFU       equ	298	;# 
 14541   00012B                     C1RXOVIFT       equ	299	;# 
 14542   00012C                     C1TXATIF        equ	300	;# 
 14543   00012C                     C1TXATIFL       equ	300	;# 
 14544   00012D                     C1TXATIFH       equ	301	;# 
 14545   00012E                     C1TXATIFU       equ	302	;# 
 14546   00012F                     C1TXATIFT       equ	303	;# 
 14547   000130                     C1TXREQ         equ	304	;# 
 14548   000130                     C1TXREQL        equ	304	;# 
 14549   000131                     C1TXREQH        equ	305	;# 
 14550   000132                     C1TXREQU        equ	306	;# 
 14551   000133                     C1TXREQT        equ	307	;# 
 14552   000134                     C1TRECL         equ	308	;# 
 14553   000135                     C1TRECH         equ	309	;# 
 14554   000136                     C1TRECU         equ	310	;# 
 14555   000137                     C1TRECT         equ	311	;# 
 14556   000138                     C1BDIAG0L       equ	312	;# 
 14557   000139                     C1BDIAG0H       equ	313	;# 
 14558   00013C                     C1BDIAG1L       equ	316	;# 
 14559   00013D                     C1BDIAG1H       equ	317	;# 
 14560   00013E                     C1BDIAG1U       equ	318	;# 
 14561   00013F                     C1BDIAG1T       equ	319	;# 
 14562   000140                     C1TEFCONL       equ	320	;# 
 14563   000141                     C1TEFCONH       equ	321	;# 
 14564   000142                     C1TEFCONU       equ	322	;# 
 14565   000143                     C1TEFCONT       equ	323	;# 
 14566   000144                     C1TEFSTAL       equ	324	;# 
 14567   000145                     C1TEFSTAH       equ	325	;# 
 14568   000146                     C1TEFSTAU       equ	326	;# 
 14569   000147                     C1TEFSTAT       equ	327	;# 
 14570   000148                     C1TEFUA         equ	328	;# 
 14571   000148                     C1TEFUAL        equ	328	;# 
 14572   000149                     C1TEFUAH        equ	329	;# 
 14573   00014A                     C1TEFUAU        equ	330	;# 
 14574   00014B                     C1TEFUAT        equ	331	;# 
 14575   00014C                     C1FIFOBA        equ	332	;# 
 14576   00014C                     C1FIFOBAL       equ	332	;# 
 14577   00014D                     C1FIFOBAH       equ	333	;# 
 14578   00014E                     C1FIFOBAU       equ	334	;# 
 14579   00014F                     C1FIFOBAT       equ	335	;# 
 14580   000150                     C1TXQCONL       equ	336	;# 
 14581   000151                     C1TXQCONH       equ	337	;# 
 14582   000152                     C1TXQCONU       equ	338	;# 
 14583   000153                     C1TXQCONT       equ	339	;# 
 14584   000154                     C1TXQSTAL       equ	340	;# 
 14585   000155                     C1TXQSTAH       equ	341	;# 
 14586   000156                     C1TXQSTAU       equ	342	;# 
 14587   000157                     C1TXQSTAT       equ	343	;# 
 14588   000158                     C1TXQUA         equ	344	;# 
 14589   000158                     C1TXQUAL        equ	344	;# 
 14590   000159                     C1TXQUAH        equ	345	;# 
 14591   00015A                     C1TXQUAU        equ	346	;# 
 14592   00015B                     C1TXQUAT        equ	347	;# 
 14593   00015C                     C1FIFOCON1      equ	348	;# 
 14594   00015C                     C1FIFOCON1L     equ	348	;# 
 14595   00015D                     C1FIFOCON1H     equ	349	;# 
 14596   00015E                     C1FIFOCON1U     equ	350	;# 
 14597   00015F                     C1FIFOCON1T     equ	351	;# 
 14598   000160                     C1FIFOSTA1      equ	352	;# 
 14599   000160                     C1FIFOSTA1L     equ	352	;# 
 14600   000161                     C1FIFOSTA1H     equ	353	;# 
 14601   000162                     C1FIFOSTA1U     equ	354	;# 
 14602   000163                     C1FIFOSTA1T     equ	355	;# 
 14603   000164                     C1FIFOUA1       equ	356	;# 
 14604   000164                     C1FIFOUA1L      equ	356	;# 
 14605   000165                     C1FIFOUA1H      equ	357	;# 
 14606   000166                     C1FIFOUA1U      equ	358	;# 
 14607   000167                     C1FIFOUA1T      equ	359	;# 
 14608   000168                     C1FIFOCON2      equ	360	;# 
 14609   000168                     C1FIFOCON2L     equ	360	;# 
 14610   000169                     C1FIFOCON2H     equ	361	;# 
 14611   00016A                     C1FIFOCON2U     equ	362	;# 
 14612   00016B                     C1FIFOCON2T     equ	363	;# 
 14613   00016C                     C1FIFOSTA2      equ	364	;# 
 14614   00016C                     C1FIFOSTA2L     equ	364	;# 
 14615   00016D                     C1FIFOSTA2H     equ	365	;# 
 14616   00016E                     C1FIFOSTA2U     equ	366	;# 
 14617   00016F                     C1FIFOSTA2T     equ	367	;# 
 14618   000170                     C1FIFOUA2       equ	368	;# 
 14619   000170                     C1FIFOUA2L      equ	368	;# 
 14620   000171                     C1FIFOUA2H      equ	369	;# 
 14621   000172                     C1FIFOUA2U      equ	370	;# 
 14622   000173                     C1FIFOUA2T      equ	371	;# 
 14623   000174                     C1FIFOCON3      equ	372	;# 
 14624   000174                     C1FIFOCON3L     equ	372	;# 
 14625   000175                     C1FIFOCON3H     equ	373	;# 
 14626   000176                     C1FIFOCON3U     equ	374	;# 
 14627   000177                     C1FIFOCON3T     equ	375	;# 
 14628   000178                     C1FIFOSTA3      equ	376	;# 
 14629   000178                     C1FIFOSTA3L     equ	376	;# 
 14630   000179                     C1FIFOSTA3H     equ	377	;# 
 14631   00017A                     C1FIFOSTA3U     equ	378	;# 
 14632   00017B                     C1FIFOSTA3T     equ	379	;# 
 14633   00017C                     C1FIFOUA3       equ	380	;# 
 14634   00017C                     C1FIFOUA3L      equ	380	;# 
 14635   00017D                     C1FIFOUA3H      equ	381	;# 
 14636   00017E                     C1FIFOUA3U      equ	382	;# 
 14637   00017F                     C1FIFOUA3T      equ	383	;# 
 14638   000180                     C1FLTCON0L      equ	384	;# 
 14639   000181                     C1FLTCON0H      equ	385	;# 
 14640   000182                     C1FLTCON0U      equ	386	;# 
 14641   000183                     C1FLTCON0T      equ	387	;# 
 14642   000184                     C1FLTCON1L      equ	388	;# 
 14643   000185                     C1FLTCON1H      equ	389	;# 
 14644   000186                     C1FLTCON1U      equ	390	;# 
 14645   000187                     C1FLTCON1T      equ	391	;# 
 14646   000188                     C1FLTCON2L      equ	392	;# 
 14647   000189                     C1FLTCON2H      equ	393	;# 
 14648   00018A                     C1FLTCON2U      equ	394	;# 
 14649   00018B                     C1FLTCON2T      equ	395	;# 
 14650   00018C                     C1FLTOBJ0       equ	396	;# 
 14651   00018C                     C1FLTOBJ0L      equ	396	;# 
 14652   00018D                     C1FLTOBJ0H      equ	397	;# 
 14653   00018E                     C1FLTOBJ0U      equ	398	;# 
 14654   00018F                     C1FLTOBJ0T      equ	399	;# 
 14655   000190                     C1MASK0         equ	400	;# 
 14656   000190                     C1MASK0L        equ	400	;# 
 14657   000191                     C1MASK0H        equ	401	;# 
 14658   000192                     C1MASK0U        equ	402	;# 
 14659   000193                     C1MASK0T        equ	403	;# 
 14660   000194                     C1FLTOBJ1       equ	404	;# 
 14661   000194                     C1FLTOBJ1L      equ	404	;# 
 14662   000195                     C1FLTOBJ1H      equ	405	;# 
 14663   000196                     C1FLTOBJ1U      equ	406	;# 
 14664   000197                     C1FLTOBJ1T      equ	407	;# 
 14665   000198                     C1MASK1         equ	408	;# 
 14666   000198                     C1MASK1L        equ	408	;# 
 14667   000199                     C1MASK1H        equ	409	;# 
 14668   00019A                     C1MASK1U        equ	410	;# 
 14669   00019B                     C1MASK1T        equ	411	;# 
 14670   00019C                     C1FLTOBJ2       equ	412	;# 
 14671   00019C                     C1FLTOBJ2L      equ	412	;# 
 14672   00019D                     C1FLTOBJ2H      equ	413	;# 
 14673   00019E                     C1FLTOBJ2U      equ	414	;# 
 14674   00019F                     C1FLTOBJ2T      equ	415	;# 
 14675   0001A0                     C1MASK2         equ	416	;# 
 14676   0001A0                     C1MASK2L        equ	416	;# 
 14677   0001A1                     C1MASK2H        equ	417	;# 
 14678   0001A2                     C1MASK2U        equ	418	;# 
 14679   0001A3                     C1MASK2T        equ	419	;# 
 14680   0001A4                     C1FLTOBJ3       equ	420	;# 
 14681   0001A4                     C1FLTOBJ3L      equ	420	;# 
 14682   0001A5                     C1FLTOBJ3H      equ	421	;# 
 14683   0001A6                     C1FLTOBJ3U      equ	422	;# 
 14684   0001A7                     C1FLTOBJ3T      equ	423	;# 
 14685   0001A8                     C1MASK3         equ	424	;# 
 14686   0001A8                     C1MASK3L        equ	424	;# 
 14687   0001A9                     C1MASK3H        equ	425	;# 
 14688   0001AA                     C1MASK3U        equ	426	;# 
 14689   0001AB                     C1MASK3T        equ	427	;# 
 14690   0001AC                     C1FLTOBJ4       equ	428	;# 
 14691   0001AC                     C1FLTOBJ4L      equ	428	;# 
 14692   0001AD                     C1FLTOBJ4H      equ	429	;# 
 14693   0001AE                     C1FLTOBJ4U      equ	430	;# 
 14694   0001AF                     C1FLTOBJ4T      equ	431	;# 
 14695   0001B0                     C1MASK4         equ	432	;# 
 14696   0001B0                     C1MASK4L        equ	432	;# 
 14697   0001B1                     C1MASK4H        equ	433	;# 
 14698   0001B2                     C1MASK4U        equ	434	;# 
 14699   0001B3                     C1MASK4T        equ	435	;# 
 14700   0001B4                     C1FLTOBJ5       equ	436	;# 
 14701   0001B4                     C1FLTOBJ5L      equ	436	;# 
 14702   0001B5                     C1FLTOBJ5H      equ	437	;# 
 14703   0001B6                     C1FLTOBJ5U      equ	438	;# 
 14704   0001B7                     C1FLTOBJ5T      equ	439	;# 
 14705   0001B8                     C1MASK5         equ	440	;# 
 14706   0001B8                     C1MASK5L        equ	440	;# 
 14707   0001B9                     C1MASK5H        equ	441	;# 
 14708   0001BA                     C1MASK5U        equ	442	;# 
 14709   0001BB                     C1MASK5T        equ	443	;# 
 14710   0001BC                     C1FLTOBJ6       equ	444	;# 
 14711   0001BC                     C1FLTOBJ6L      equ	444	;# 
 14712   0001BD                     C1FLTOBJ6H      equ	445	;# 
 14713   0001BE                     C1FLTOBJ6U      equ	446	;# 
 14714   0001BF                     C1FLTOBJ6T      equ	447	;# 
 14715   0001C0                     C1MASK6         equ	448	;# 
 14716   0001C0                     C1MASK6L        equ	448	;# 
 14717   0001C1                     C1MASK6H        equ	449	;# 
 14718   0001C2                     C1MASK6U        equ	450	;# 
 14719   0001C3                     C1MASK6T        equ	451	;# 
 14720   0001C4                     C1FLTOBJ7       equ	452	;# 
 14721   0001C4                     C1FLTOBJ7L      equ	452	;# 
 14722   0001C5                     C1FLTOBJ7H      equ	453	;# 
 14723   0001C6                     C1FLTOBJ7U      equ	454	;# 
 14724   0001C7                     C1FLTOBJ7T      equ	455	;# 
 14725   0001C8                     C1MASK7         equ	456	;# 
 14726   0001C8                     C1MASK7L        equ	456	;# 
 14727   0001C9                     C1MASK7H        equ	457	;# 
 14728   0001CA                     C1MASK7U        equ	458	;# 
 14729   0001CB                     C1MASK7T        equ	459	;# 
 14730   0001CC                     C1FLTOBJ8       equ	460	;# 
 14731   0001CC                     C1FLTOBJ8L      equ	460	;# 
 14732   0001CD                     C1FLTOBJ8H      equ	461	;# 
 14733   0001CE                     C1FLTOBJ8U      equ	462	;# 
 14734   0001CF                     C1FLTOBJ8T      equ	463	;# 
 14735   0001D0                     C1MASK8         equ	464	;# 
 14736   0001D0                     C1MASK8L        equ	464	;# 
 14737   0001D1                     C1MASK8H        equ	465	;# 
 14738   0001D2                     C1MASK8U        equ	466	;# 
 14739   0001D3                     C1MASK8T        equ	467	;# 
 14740   0001D4                     C1FLTOBJ9       equ	468	;# 
 14741   0001D4                     C1FLTOBJ9L      equ	468	;# 
 14742   0001D5                     C1FLTOBJ9H      equ	469	;# 
 14743   0001D6                     C1FLTOBJ9U      equ	470	;# 
 14744   0001D7                     C1FLTOBJ9T      equ	471	;# 
 14745   0001D8                     C1MASK9         equ	472	;# 
 14746   0001D8                     C1MASK9L        equ	472	;# 
 14747   0001D9                     C1MASK9H        equ	473	;# 
 14748   0001DA                     C1MASK9U        equ	474	;# 
 14749   0001DB                     C1MASK9T        equ	475	;# 
 14750   0001DC                     C1FLTOBJ10      equ	476	;# 
 14751   0001DC                     C1FLTOBJ10L     equ	476	;# 
 14752   0001DD                     C1FLTOBJ10H     equ	477	;# 
 14753   0001DE                     C1FLTOBJ10U     equ	478	;# 
 14754   0001DF                     C1FLTOBJ10T     equ	479	;# 
 14755   0001E0                     C1MASK10        equ	480	;# 
 14756   0001E0                     C1MASK10L       equ	480	;# 
 14757   0001E1                     C1MASK10H       equ	481	;# 
 14758   0001E2                     C1MASK10U       equ	482	;# 
 14759   0001E3                     C1MASK10T       equ	483	;# 
 14760   0001E4                     C1FLTOBJ11      equ	484	;# 
 14761   0001E4                     C1FLTOBJ11L     equ	484	;# 
 14762   0001E5                     C1FLTOBJ11H     equ	485	;# 
 14763   0001E6                     C1FLTOBJ11U     equ	486	;# 
 14764   0001E7                     C1FLTOBJ11T     equ	487	;# 
 14765   0001E8                     C1MASK11        equ	488	;# 
 14766   0001E8                     C1MASK11L       equ	488	;# 
 14767   0001E9                     C1MASK11H       equ	489	;# 
 14768   0001EA                     C1MASK11U       equ	490	;# 
 14769   0001EB                     C1MASK11T       equ	491	;# 
 14770   000200                     PPSLOCK         equ	512	;# 
 14771   000201                     RA0PPS          equ	513	;# 
 14772   000202                     RA1PPS          equ	514	;# 
 14773   000203                     RA2PPS          equ	515	;# 
 14774   000204                     RA3PPS          equ	516	;# 
 14775   000205                     RA4PPS          equ	517	;# 
 14776   000206                     RA5PPS          equ	518	;# 
 14777   000207                     RA6PPS          equ	519	;# 
 14778   000208                     RA7PPS          equ	520	;# 
 14779   000209                     RB0PPS          equ	521	;# 
 14780   00020A                     RB1PPS          equ	522	;# 
 14781   00020B                     RB2PPS          equ	523	;# 
 14782   00020C                     RB3PPS          equ	524	;# 
 14783   00020D                     RB4PPS          equ	525	;# 
 14784   00020E                     RB5PPS          equ	526	;# 
 14785   00020F                     RB6PPS          equ	527	;# 
 14786   000210                     RB7PPS          equ	528	;# 
 14787   000211                     RC0PPS          equ	529	;# 
 14788   000212                     RC1PPS          equ	530	;# 
 14789   000213                     RC2PPS          equ	531	;# 
 14790   000214                     RC3PPS          equ	532	;# 
 14791   000215                     RC4PPS          equ	533	;# 
 14792   000216                     RC5PPS          equ	534	;# 
 14793   000217                     RC6PPS          equ	535	;# 
 14794   000218                     RC7PPS          equ	536	;# 
 14795   00023D                     CANRXPPS        equ	573	;# 
 14796   00023E                     INT0PPS         equ	574	;# 
 14797   00023F                     INT1PPS         equ	575	;# 
 14798   000240                     INT2PPS         equ	576	;# 
 14799   000241                     T0CKIPPS        equ	577	;# 
 14800   000242                     T1CKIPPS        equ	578	;# 
 14801   000243                     T1GPPS          equ	579	;# 
 14802   000244                     T3CKIPPS        equ	580	;# 
 14803   000245                     T3GPPS          equ	581	;# 
 14804   000246                     T5CKIPPS        equ	582	;# 
 14805   000247                     T5GPPS          equ	583	;# 
 14806   000248                     T2INPPS         equ	584	;# 
 14807   000249                     T4INPPS         equ	585	;# 
 14808   00024A                     T6INPPS         equ	586	;# 
 14809   00024B                     TUIN0PPS        equ	587	;# 
 14810   00024C                     TUIN1PPS        equ	588	;# 
 14811   00024F                     CCP1PPS         equ	591	;# 
 14812   000250                     CCP2PPS         equ	592	;# 
 14813   000251                     CCP3PPS         equ	593	;# 
 14814   000253                     PWM1ERSPPS      equ	595	;# 
 14815   000254                     PWM2ERSPPS      equ	596	;# 
 14816   000255                     PWM3ERSPPS      equ	597	;# 
 14817   000256                     PWM4ERSPPS      equ	598	;# 
 14818   000257                     PWMIN0PPS       equ	599	;# 
 14819   000258                     PWMIN1PPS       equ	600	;# 
 14820   000259                     SMT1WINPPS      equ	601	;# 
 14821   00025A                     SMT1SIGPPS      equ	602	;# 
 14822   00025B                     CWG1PPS         equ	603	;# 
 14823   00025B                     CWG1INPPS       equ	603	;# 
 14824   00025C                     CWG2PPS         equ	604	;# 
 14825   00025C                     CWG2INPPS       equ	604	;# 
 14826   00025D                     CWG3PPS         equ	605	;# 
 14827   00025D                     CWG3INPPS       equ	605	;# 
 14828   00025E                     MD1CARLPPS      equ	606	;# 
 14829   00025E                     MDCARLPPS       equ	606	;# 
 14830   00025F                     MD1CARHPPS      equ	607	;# 
 14831   00025F                     MDCARHPPS       equ	607	;# 
 14832   000260                     MD1SRCPPS       equ	608	;# 
 14833   000260                     MDSRCPPS        equ	608	;# 
 14834   000261                     CLCIN0PPS       equ	609	;# 
 14835   000262                     CLCIN1PPS       equ	610	;# 
 14836   000263                     CLCIN2PPS       equ	611	;# 
 14837   000264                     CLCIN3PPS       equ	612	;# 
 14838   000265                     CLCIN4PPS       equ	613	;# 
 14839   000266                     CLCIN5PPS       equ	614	;# 
 14840   000267                     CLCIN6PPS       equ	615	;# 
 14841   000268                     CLCIN7PPS       equ	616	;# 
 14842   000269                     ADACTPPS        equ	617	;# 
 14843   00026A                     SPI1SCKPPS      equ	618	;# 
 14844   00026B                     SPI1SDIPPS      equ	619	;# 
 14845   00026C                     SPI1SSPPS       equ	620	;# 
 14846   00026D                     SPI2SCKPPS      equ	621	;# 
 14847   00026E                     SPI2SDIPPS      equ	622	;# 
 14848   00026F                     SPI2SSPPS       equ	623	;# 
 14849   000270                     I2C1SDAPPS      equ	624	;# 
 14850   000271                     I2C1SCLPPS      equ	625	;# 
 14851   000272                     U1RXPPS         equ	626	;# 
 14852   000273                     U1CTSPPS        equ	627	;# 
 14853   000274                     U2RXPPS         equ	628	;# 
 14854   000275                     U2CTSPPS        equ	629	;# 
 14855   000276                     U3RXPPS         equ	630	;# 
 14856   000277                     U3CTSPPS        equ	631	;# 
 14857   000278                     U4RXPPS         equ	632	;# 
 14858   000279                     U4CTSPPS        equ	633	;# 
 14859   00027A                     U5RXPPS         equ	634	;# 
 14860   00027B                     U5CTSPPS        equ	635	;# 
 14861   000286                     RC4I2C          equ	646	;# 
 14862   000287                     RC3I2C          equ	647	;# 
 14863   000288                     RB2I2C          equ	648	;# 
 14864   000289                     RB1I2C          equ	649	;# 
 14865   00028A                     I2C1RXB         equ	650	;# 
 14866   00028B                     I2C1TXB         equ	651	;# 
 14867   00028C                     I2C1CNTL        equ	652	;# 
 14868   00028D                     I2C1CNTH        equ	653	;# 
 14869   00028E                     I2C1ADB0        equ	654	;# 
 14870   00028F                     I2C1ADB1        equ	655	;# 
 14871   000290                     I2C1ADR0        equ	656	;# 
 14872   000291                     I2C1ADR1        equ	657	;# 
 14873   000292                     I2C1ADR2        equ	658	;# 
 14874   000293                     I2C1ADR3        equ	659	;# 
 14875   000294                     I2C1CON0        equ	660	;# 
 14876   000295                     I2C1CON1        equ	661	;# 
 14877   000296                     I2C1CON2        equ	662	;# 
 14878   000297                     I2C1ERR         equ	663	;# 
 14879   000298                     I2C1STAT0       equ	664	;# 
 14880   000299                     I2C1STAT1       equ	665	;# 
 14881   00029A                     I2C1PIR         equ	666	;# 
 14882   00029B                     I2C1PIE         equ	667	;# 
 14883   00029C                     I2C1BTO         equ	668	;# 
 14884   00029D                     I2C1BAUD        equ	669	;# 
 14885   00029E                     I2C1CLK         equ	670	;# 
 14886   00029F                     I2C1BTOC        equ	671	;# 
 14887   0002A1                     U1RXB           equ	673	;# 
 14888   0002A1                     U1RXBL          equ	673	;# 
 14889   0002A2                     U1RXCHK         equ	674	;# 
 14890   0002A3                     U1TXB           equ	675	;# 
 14891   0002A3                     U1TXBL          equ	675	;# 
 14892   0002A4                     U1TXCHK         equ	676	;# 
 14893   0002A5                     U1P1            equ	677	;# 
 14894   0002A5                     U1P1L           equ	677	;# 
 14895   0002A6                     U1P1H           equ	678	;# 
 14896   0002A7                     U1P2            equ	679	;# 
 14897   0002A7                     U1P2L           equ	679	;# 
 14898   0002A8                     U1P2H           equ	680	;# 
 14899   0002A9                     U1P3            equ	681	;# 
 14900   0002A9                     U1P3L           equ	681	;# 
 14901   0002AA                     U1P3H           equ	682	;# 
 14902   0002AB                     U1CON0          equ	683	;# 
 14903   0002AC                     U1CON1          equ	684	;# 
 14904   0002AD                     U1CON2          equ	685	;# 
 14905   0002AE                     U1BRG           equ	686	;# 
 14906   0002AE                     U1BRGL          equ	686	;# 
 14907   0002AF                     U1BRGH          equ	687	;# 
 14908   0002B0                     U1FIFO          equ	688	;# 
 14909   0002B1                     U1UIR           equ	689	;# 
 14910   0002B2                     U1ERRIR         equ	690	;# 
 14911   0002B3                     U1ERRIE         equ	691	;# 
 14912   0002B4                     U2RXB           equ	692	;# 
 14913   0002B4                     U2RXBL          equ	692	;# 
 14914   0002B5                     U2RXCHK         equ	693	;# 
 14915   0002B6                     U2TXB           equ	694	;# 
 14916   0002B6                     U2TXBL          equ	694	;# 
 14917   0002B7                     U2TXCHK         equ	695	;# 
 14918   0002B8                     U2P1            equ	696	;# 
 14919   0002B8                     U2P1L           equ	696	;# 
 14920   0002B9                     U2P1H           equ	697	;# 
 14921   0002BA                     U2P2            equ	698	;# 
 14922   0002BA                     U2P2L           equ	698	;# 
 14923   0002BB                     U2P2H           equ	699	;# 
 14924   0002BC                     U2P3            equ	700	;# 
 14925   0002BC                     U2P3L           equ	700	;# 
 14926   0002BD                     U2P3H           equ	701	;# 
 14927   0002BE                     U2CON0          equ	702	;# 
 14928   0002BF                     U2CON1          equ	703	;# 
 14929   0002C0                     U2CON2          equ	704	;# 
 14930   0002C1                     U2BRG           equ	705	;# 
 14931   0002C1                     U2BRGL          equ	705	;# 
 14932   0002C2                     U2BRGH          equ	706	;# 
 14933   0002C3                     U2FIFO          equ	707	;# 
 14934   0002C4                     U2UIR           equ	708	;# 
 14935   0002C5                     U2ERRIR         equ	709	;# 
 14936   0002C6                     U2ERRIE         equ	710	;# 
 14937   0002C7                     U3RXB           equ	711	;# 
 14938   0002C7                     U3RXBL          equ	711	;# 
 14939   0002C9                     U3TXB           equ	713	;# 
 14940   0002C9                     U3TXBL          equ	713	;# 
 14941   0002CB                     U3P1            equ	715	;# 
 14942   0002CB                     U3P1L           equ	715	;# 
 14943   0002CD                     U3P2            equ	717	;# 
 14944   0002CD                     U3P2L           equ	717	;# 
 14945   0002CF                     U3P3            equ	719	;# 
 14946   0002CF                     U3P3L           equ	719	;# 
 14947   0002D1                     U3CON0          equ	721	;# 
 14948   0002D2                     U3CON1          equ	722	;# 
 14949   0002D3                     U3CON2          equ	723	;# 
 14950   0002D4                     U3BRG           equ	724	;# 
 14951   0002D4                     U3BRGL          equ	724	;# 
 14952   0002D5                     U3BRGH          equ	725	;# 
 14953   0002D6                     U3FIFO          equ	726	;# 
 14954   0002D7                     U3UIR           equ	727	;# 
 14955   0002D8                     U3ERRIR         equ	728	;# 
 14956   0002D9                     U3ERRIE         equ	729	;# 
 14957   0002DA                     U4RXB           equ	730	;# 
 14958   0002DA                     U4RXBL          equ	730	;# 
 14959   0002DC                     U4TXB           equ	732	;# 
 14960   0002DC                     U4TXBL          equ	732	;# 
 14961   0002DE                     U4P1            equ	734	;# 
 14962   0002DE                     U4P1L           equ	734	;# 
 14963   0002E0                     U4P2            equ	736	;# 
 14964   0002E0                     U4P2L           equ	736	;# 
 14965   0002E2                     U4P3            equ	738	;# 
 14966   0002E2                     U4P3L           equ	738	;# 
 14967   0002E4                     U4CON0          equ	740	;# 
 14968   0002E5                     U4CON1          equ	741	;# 
 14969   0002E6                     U4CON2          equ	742	;# 
 14970   0002E7                     U4BRG           equ	743	;# 
 14971   0002E7                     U4BRGL          equ	743	;# 
 14972   0002E8                     U4BRGH          equ	744	;# 
 14973   0002E9                     U4FIFO          equ	745	;# 
 14974   0002EA                     U4UIR           equ	746	;# 
 14975   0002EB                     U4ERRIR         equ	747	;# 
 14976   0002EC                     U4ERRIE         equ	748	;# 
 14977   0002ED                     U5RXB           equ	749	;# 
 14978   0002ED                     U5RXBL          equ	749	;# 
 14979   0002EF                     U5TXB           equ	751	;# 
 14980   0002EF                     U5TXBL          equ	751	;# 
 14981   0002F1                     U5P1            equ	753	;# 
 14982   0002F1                     U5P1L           equ	753	;# 
 14983   0002F3                     U5P2            equ	755	;# 
 14984   0002F3                     U5P2L           equ	755	;# 
 14985   0002F5                     U5P3            equ	757	;# 
 14986   0002F5                     U5P3L           equ	757	;# 
 14987   0002F7                     U5CON0          equ	759	;# 
 14988   0002F8                     U5CON1          equ	760	;# 
 14989   0002F9                     U5CON2          equ	761	;# 
 14990   0002FA                     U5BRG           equ	762	;# 
 14991   0002FA                     U5BRGL          equ	762	;# 
 14992   0002FB                     U5BRGH          equ	763	;# 
 14993   0002FC                     U5FIFO          equ	764	;# 
 14994   0002FD                     U5UIR           equ	765	;# 
 14995   0002FE                     U5ERRIR         equ	766	;# 
 14996   0002FF                     U5ERRIE         equ	767	;# 
 14997   000300                     SMT1TMR         equ	768	;# 
 14998   000300                     SMT1TMRL        equ	768	;# 
 14999   000301                     SMT1TMRH        equ	769	;# 
 15000   000302                     SMT1TMRU        equ	770	;# 
 15001   000303                     SMT1CPR         equ	771	;# 
 15002   000303                     SMT1CPRL        equ	771	;# 
 15003   000304                     SMT1CPRH        equ	772	;# 
 15004   000305                     SMT1CPRU        equ	773	;# 
 15005   000306                     SMT1CPW         equ	774	;# 
 15006   000306                     SMT1CPWL        equ	774	;# 
 15007   000307                     SMT1CPWH        equ	775	;# 
 15008   000308                     SMT1CPWU        equ	776	;# 
 15009   000309                     SMT1PR          equ	777	;# 
 15010   000309                     SMT1PRL         equ	777	;# 
 15011   00030A                     SMT1PRH         equ	778	;# 
 15012   00030B                     SMT1PRU         equ	779	;# 
 15013   00030C                     SMT1CON0        equ	780	;# 
 15014   00030D                     SMT1CON1        equ	781	;# 
 15015   00030E                     SMT1STAT        equ	782	;# 
 15016   00030F                     SMT1CLK         equ	783	;# 
 15017   000310                     SMT1SIG         equ	784	;# 
 15018   000311                     SMT1WIN         equ	785	;# 
 15019   000318                     TMR0L           equ	792	;# 
 15020   000318                     TMR0            equ	792	;# 
 15021   000319                     TMR0H           equ	793	;# 
 15022   000319                     PR0             equ	793	;# 
 15023   00031A                     T0CON0          equ	794	;# 
 15024   00031B                     T0CON1          equ	795	;# 
 15025   00031C                     TMR1            equ	796	;# 
 15026   00031C                     TMR1L           equ	796	;# 
 15027   00031D                     TMR1H           equ	797	;# 
 15028   00031E                     T1CON           equ	798	;# 
 15029   00031E                     TMR1CON         equ	798	;# 
 15030   00031F                     T1GCON          equ	799	;# 
 15031   00031F                     TMR1GCON        equ	799	;# 
 15032   000320                     T1GATE          equ	800	;# 
 15033   000320                     TMR1GATE        equ	800	;# 
 15034   000321                     T1CLK           equ	801	;# 
 15035   000321                     TMR1CLK         equ	801	;# 
 15036   000321                     PR1             equ	801	;# 
 15037   000322                     T2TMR           equ	802	;# 
 15038   000322                     TMR2            equ	802	;# 
 15039   000323                     T2PR            equ	803	;# 
 15040   000323                     PR2             equ	803	;# 
 15041   000324                     T2CON           equ	804	;# 
 15042   000325                     T2HLT           equ	805	;# 
 15043   000326                     T2CLKCON        equ	806	;# 
 15044   000326                     T2CLK           equ	806	;# 
 15045   000327                     T2RST           equ	807	;# 
 15046   000328                     TMR3            equ	808	;# 
 15047   000328                     TMR3L           equ	808	;# 
 15048   000329                     TMR3H           equ	809	;# 
 15049   00032A                     T3CON           equ	810	;# 
 15050   00032A                     TMR3CON         equ	810	;# 
 15051   00032B                     T3GCON          equ	811	;# 
 15052   00032B                     TMR3GCON        equ	811	;# 
 15053   00032C                     T3GATE          equ	812	;# 
 15054   00032C                     TMR3GATE        equ	812	;# 
 15055   00032D                     T3CLK           equ	813	;# 
 15056   00032D                     TMR3CLK         equ	813	;# 
 15057   00032D                     PR3             equ	813	;# 
 15058   00032E                     T4TMR           equ	814	;# 
 15059   00032E                     TMR4            equ	814	;# 
 15060   00032F                     T4PR            equ	815	;# 
 15061   00032F                     PR4             equ	815	;# 
 15062   000330                     T4CON           equ	816	;# 
 15063   000331                     T4HLT           equ	817	;# 
 15064   000332                     T4CLKCON        equ	818	;# 
 15065   000332                     T4CLK           equ	818	;# 
 15066   000333                     T4RST           equ	819	;# 
 15067   000334                     TMR5            equ	820	;# 
 15068   000334                     TMR5L           equ	820	;# 
 15069   000335                     TMR5H           equ	821	;# 
 15070   000336                     T5CON           equ	822	;# 
 15071   000336                     TMR5CON         equ	822	;# 
 15072   000337                     T5GCON          equ	823	;# 
 15073   000337                     TMR5GCON        equ	823	;# 
 15074   000338                     T5GATE          equ	824	;# 
 15075   000338                     TMR5GATE        equ	824	;# 
 15076   000339                     T5CLK           equ	825	;# 
 15077   000339                     TMR5CLK         equ	825	;# 
 15078   000339                     PR5             equ	825	;# 
 15079   00033A                     T6TMR           equ	826	;# 
 15080   00033A                     TMR6            equ	826	;# 
 15081   00033B                     T6PR            equ	827	;# 
 15082   00033B                     PR6             equ	827	;# 
 15083   00033C                     T6CON           equ	828	;# 
 15084   00033D                     T6HLT           equ	829	;# 
 15085   00033E                     T6CLKCON        equ	830	;# 
 15086   00033E                     T6CLK           equ	830	;# 
 15087   00033F                     T6RST           equ	831	;# 
 15088   000340                     CCPR1           equ	832	;# 
 15089   000340                     CCPR1L          equ	832	;# 
 15090   000341                     CCPR1H          equ	833	;# 
 15091   000342                     CCP1CON         equ	834	;# 
 15092   000343                     CCP1CAP         equ	835	;# 
 15093   000344                     CCPR2           equ	836	;# 
 15094   000344                     CCPR2L          equ	836	;# 
 15095   000345                     CCPR2H          equ	837	;# 
 15096   000346                     CCP2CON         equ	838	;# 
 15097   000347                     CCP2CAP         equ	839	;# 
 15098   000348                     CCPR3           equ	840	;# 
 15099   000348                     CCPR3L          equ	840	;# 
 15100   000349                     CCPR3H          equ	841	;# 
 15101   00034A                     CCP3CON         equ	842	;# 
 15102   00034B                     CCP3CAP         equ	843	;# 
 15103   00034C                     CCPTMRS0        equ	844	;# 
 15104   00034F                     CRCDATA         equ	847	;# 
 15105   00034F                     CRCDATAL        equ	847	;# 
 15106   000350                     CRCDATAH        equ	848	;# 
 15107   000351                     CRCDATAU        equ	849	;# 
 15108   000352                     CRCDATAT        equ	850	;# 
 15109   000353                     CRCOUT          equ	851	;# 
 15110   000353                     CRCSHFT         equ	851	;# 
 15111   000353                     CRCXOR          equ	851	;# 
 15112   000353                     CRCOUTL         equ	851	;# 
 15113   000353                     CRCSHFTL        equ	851	;# 
 15114   000353                     CRCSHIFTL       equ	851	;# 
 15115   000353                     CRCXORL         equ	851	;# 
 15116   000354                     CRCOUTH         equ	852	;# 
 15117   000354                     CRCSHFTH        equ	852	;# 
 15118   000354                     CRCSHIFTH       equ	852	;# 
 15119   000354                     CRCXORH         equ	852	;# 
 15120   000355                     CRCOUTU         equ	853	;# 
 15121   000355                     CRCSHFTU        equ	853	;# 
 15122   000355                     CRCSHIFTU       equ	853	;# 
 15123   000355                     CRCXORU         equ	853	;# 
 15124   000356                     CRCOUTT         equ	854	;# 
 15125   000356                     CRCSHFTT        equ	854	;# 
 15126   000356                     CRCSHIFTT       equ	854	;# 
 15127   000356                     CRCXORT         equ	854	;# 
 15128   000357                     CRCCON0         equ	855	;# 
 15129   000358                     CRCCON1         equ	856	;# 
 15130   000359                     CRCCON2         equ	857	;# 
 15131   00035A                     SCANLADR        equ	858	;# 
 15132   00035A                     SCANLADRL       equ	858	;# 
 15133   00035B                     SCANLADRH       equ	859	;# 
 15134   00035C                     SCANLADRU       equ	860	;# 
 15135   00035D                     SCANHADR        equ	861	;# 
 15136   00035D                     SCANHADRL       equ	861	;# 
 15137   00035E                     SCANHADRH       equ	862	;# 
 15138   00035F                     SCANHADRU       equ	863	;# 
 15139   000360                     SCANCON0        equ	864	;# 
 15140   000361                     SCANTRIG        equ	865	;# 
 15141   000362                     IPR0            equ	866	;# 
 15142   000363                     IPR1            equ	867	;# 
 15143   000364                     IPR2            equ	868	;# 
 15144   000365                     IPR3            equ	869	;# 
 15145   000366                     IPR4            equ	870	;# 
 15146   000367                     IPR5            equ	871	;# 
 15147   000368                     IPR6            equ	872	;# 
 15148   000369                     IPR7            equ	873	;# 
 15149   00036A                     IPR8            equ	874	;# 
 15150   00036B                     IPR9            equ	875	;# 
 15151   00036C                     IPR10           equ	876	;# 
 15152   00036D                     IPR11           equ	877	;# 
 15153   00036E                     IPR12           equ	878	;# 
 15154   00036F                     IPR13           equ	879	;# 
 15155   000370                     IPR14           equ	880	;# 
 15156   000371                     IPR15           equ	881	;# 
 15157   000373                     STATUS_CSHAD    equ	883	;# 
 15158   000374                     WREG_CSHAD      equ	884	;# 
 15159   000375                     BSR_CSHAD       equ	885	;# 
 15160   000376                     SHADCON         equ	886	;# 
 15161   000377                     STATUS_SHAD     equ	887	;# 
 15162   000378                     WREG_SHAD       equ	888	;# 
 15163   000379                     BSR_SHAD        equ	889	;# 
 15164   00037A                     PCLATH_SHAD     equ	890	;# 
 15165   00037B                     PCLATU_SHAD     equ	891	;# 
 15166   00037C                     FSR0SH          equ	892	;# 
 15167   00037C                     FSR0L_SHAD      equ	892	;# 
 15168   00037D                     FSR0H_SHAD      equ	893	;# 
 15169   00037E                     FSR1SH          equ	894	;# 
 15170   00037E                     FSR1L_SHAD      equ	894	;# 
 15171   00037F                     FSR1H_SHAD      equ	895	;# 
 15172   000380                     FSR2SH          equ	896	;# 
 15173   000380                     FSR2L_SHAD      equ	896	;# 
 15174   000381                     FSR2H_SHAD      equ	897	;# 
 15175   000382                     PRODSH          equ	898	;# 
 15176   000382                     PRODL_SHAD      equ	898	;# 
 15177   000383                     PRODH_SHAD      equ	899	;# 
 15178   000387                     TU16ACON0       equ	903	;# 
 15179   000388                     TU16ACON1       equ	904	;# 
 15180   000389                     TU16AHLT        equ	905	;# 
 15181   00038A                     TU16APS         equ	906	;# 
 15182   00038B                     TU16ATMR        equ	907	;# 
 15183   00038B                     TU16ACR         equ	907	;# 
 15184   00038B                     TU16ATMRL       equ	907	;# 
 15185   00038B                     TU16ACRL        equ	907	;# 
 15186   00038C                     TU16ATMRH       equ	908	;# 
 15187   00038C                     TU16ACRH        equ	908	;# 
 15188   00038D                     TU16APR         equ	909	;# 
 15189   00038D                     TU16APRL        equ	909	;# 
 15190   00038E                     TU16APRH        equ	910	;# 
 15191   00038F                     TU16ACLK        equ	911	;# 
 15192   000390                     TU16AERS        equ	912	;# 
 15193   000393                     TU16BCON0       equ	915	;# 
 15194   000394                     TU16BCON1       equ	916	;# 
 15195   000395                     TU16BHLT        equ	917	;# 
 15196   000396                     TU16BPS         equ	918	;# 
 15197   000397                     TU16BTMR        equ	919	;# 
 15198   000397                     TU16BCR         equ	919	;# 
 15199   000397                     TU16BTMRL       equ	919	;# 
 15200   000397                     TU16BCRL        equ	919	;# 
 15201   000398                     TU16BTMRH       equ	920	;# 
 15202   000398                     TU16BCRH        equ	920	;# 
 15203   000399                     TU16BPR         equ	921	;# 
 15204   000399                     TU16BPRL        equ	921	;# 
 15205   00039A                     TU16BPRH        equ	922	;# 
 15206   00039B                     TU16BCLK        equ	923	;# 
 15207   00039C                     TU16BERS        equ	924	;# 
 15208   0003BB                     TUCHAIN         equ	955	;# 
 15209   0003BC                     CWG1CLK         equ	956	;# 
 15210   0003BC                     CWG1CLKCON      equ	956	;# 
 15211   0003BD                     CWG1ISM         equ	957	;# 
 15212   0003BE                     CWG1DBR         equ	958	;# 
 15213   0003BF                     CWG1DBF         equ	959	;# 
 15214   0003C0                     CWG1CON0        equ	960	;# 
 15215   0003C1                     CWG1CON1        equ	961	;# 
 15216   0003C2                     CWG1AS0         equ	962	;# 
 15217   0003C3                     CWG1AS1         equ	963	;# 
 15218   0003C4                     CWG1STR         equ	964	;# 
 15219   0003C5                     CWG2CLK         equ	965	;# 
 15220   0003C5                     CWG2CLKCON      equ	965	;# 
 15221   0003C6                     CWG2ISM         equ	966	;# 
 15222   0003C7                     CWG2DBR         equ	967	;# 
 15223   0003C8                     CWG2DBF         equ	968	;# 
 15224   0003C9                     CWG2CON0        equ	969	;# 
 15225   0003CA                     CWG2CON1        equ	970	;# 
 15226   0003CB                     CWG2AS0         equ	971	;# 
 15227   0003CC                     CWG2AS1         equ	972	;# 
 15228   0003CD                     CWG2STR         equ	973	;# 
 15229   0003CE                     CWG3CLK         equ	974	;# 
 15230   0003CE                     CWG3CLKCON      equ	974	;# 
 15231   0003CF                     CWG3ISM         equ	975	;# 
 15232   0003D0                     CWG3DBR         equ	976	;# 
 15233   0003D1                     CWG3DBF         equ	977	;# 
 15234   0003D2                     CWG3CON0        equ	978	;# 
 15235   0003D3                     CWG3CON1        equ	979	;# 
 15236   0003D4                     CWG3AS0         equ	980	;# 
 15237   0003D5                     CWG3AS1         equ	981	;# 
 15238   0003D6                     CWG3STR         equ	982	;# 
 15239   0003D7                     FVRCON          equ	983	;# 
 15240   0003D8                     ADCPCON         equ	984	;# 
 15241   0003D8                     ADCP            equ	984	;# 
 15242   0003D9                     ADLTH           equ	985	;# 
 15243   0003D9                     ADLTHL          equ	985	;# 
 15244   0003DA                     ADLTHH          equ	986	;# 
 15245   0003DB                     ADUTH           equ	987	;# 
 15246   0003DB                     ADUTHL          equ	987	;# 
 15247   0003DC                     ADUTHH          equ	988	;# 
 15248   0003DD                     ADERR           equ	989	;# 
 15249   0003DD                     ADERRL          equ	989	;# 
 15250   0003DE                     ADERRH          equ	990	;# 
 15251   0003DF                     ADSTPT          equ	991	;# 
 15252   0003DF                     ADSTPTL         equ	991	;# 
 15253   0003E0                     ADSTPTH         equ	992	;# 
 15254   0003E1                     ADFLTR          equ	993	;# 
 15255   0003E1                     ADFLTRL         equ	993	;# 
 15256   0003E2                     ADFLTRH         equ	994	;# 
 15257   0003E3                     ADACC           equ	995	;# 
 15258   0003E3                     ADACCL          equ	995	;# 
 15259   0003E4                     ADACCH          equ	996	;# 
 15260   0003E5                     ADACCU          equ	997	;# 
 15261   0003E6                     ADCNT           equ	998	;# 
 15262   0003E7                     ADRPT           equ	999	;# 
 15263   0003E8                     ADPREV          equ	1000	;# 
 15264   0003E8                     ADPREVL         equ	1000	;# 
 15265   0003E9                     ADPREVH         equ	1001	;# 
 15266   0003EA                     ADRES           equ	1002	;# 
 15267   0003EA                     ADRESL          equ	1002	;# 
 15268   0003EB                     ADRESH          equ	1003	;# 
 15269   0003EC                     ADPCH           equ	1004	;# 
 15270   0003EE                     ADACQ           equ	1006	;# 
 15271   0003EE                     ADACQL          equ	1006	;# 
 15272   0003EF                     ADACQH          equ	1007	;# 
 15273   0003F0                     ADCAP           equ	1008	;# 
 15274   0003F1                     ADPRE           equ	1009	;# 
 15275   0003F1                     ADPREL          equ	1009	;# 
 15276   0003F2                     ADPREH          equ	1010	;# 
 15277   0003F3                     ADCON0          equ	1011	;# 
 15278   0003F4                     ADCON1          equ	1012	;# 
 15279   0003F5                     ADCON2          equ	1013	;# 
 15280   0003F6                     ADCON3          equ	1014	;# 
 15281   0003F7                     ADSTAT          equ	1015	;# 
 15282   0003F8                     ADREF           equ	1016	;# 
 15283   0003F9                     ADACT           equ	1017	;# 
 15284   0003FA                     ADCLK           equ	1018	;# 
 15285   0003FB                     ADCTX           equ	1019	;# 
 15286   0003FC                     ADCSEL1         equ	1020	;# 
 15287   0003FD                     ADCSEL2         equ	1021	;# 
 15288   0003FE                     ADCSEL3         equ	1022	;# 
 15289   0003FF                     ADCSEL4         equ	1023	;# 
 15290   000400                     ANSELA          equ	1024	;# 
 15291   000401                     WPUA            equ	1025	;# 
 15292   000402                     ODCONA          equ	1026	;# 
 15293   000403                     SLRCONA         equ	1027	;# 
 15294   000404                     INLVLA          equ	1028	;# 
 15295   000405                     IOCAP           equ	1029	;# 
 15296   000406                     IOCAN           equ	1030	;# 
 15297   000407                     IOCAF           equ	1031	;# 
 15298   000408                     ANSELB          equ	1032	;# 
 15299   000409                     WPUB            equ	1033	;# 
 15300   00040A                     ODCONB          equ	1034	;# 
 15301   00040B                     SLRCONB         equ	1035	;# 
 15302   00040C                     INLVLB          equ	1036	;# 
 15303   00040D                     IOCBP           equ	1037	;# 
 15304   00040E                     IOCBN           equ	1038	;# 
 15305   00040F                     IOCBF           equ	1039	;# 
 15306   000410                     ANSELC          equ	1040	;# 
 15307   000411                     WPUC            equ	1041	;# 
 15308   000412                     ODCONC          equ	1042	;# 
 15309   000413                     SLRCONC         equ	1043	;# 
 15310   000414                     INLVLC          equ	1044	;# 
 15311   000415                     IOCCP           equ	1045	;# 
 15312   000416                     IOCCN           equ	1046	;# 
 15313   000417                     IOCCF           equ	1047	;# 
 15314   000421                     WPUE            equ	1057	;# 
 15315   000424                     INLVLE          equ	1060	;# 
 15316   000425                     IOCEP           equ	1061	;# 
 15317   000426                     IOCEN           equ	1062	;# 
 15318   000427                     IOCEF           equ	1063	;# 
 15319   000440                     NCO1ACC         equ	1088	;# 
 15320   000440                     NCO1ACCL        equ	1088	;# 
 15321   000441                     NCO1ACCH        equ	1089	;# 
 15322   000442                     NCO1ACCU        equ	1090	;# 
 15323   000443                     NCO1INC         equ	1091	;# 
 15324   000443                     NCO1INCL        equ	1091	;# 
 15325   000444                     NCO1INCH        equ	1092	;# 
 15326   000445                     NCO1INCU        equ	1093	;# 
 15327   000446                     NCO1CON         equ	1094	;# 
 15328   000447                     NCO1CLK         equ	1095	;# 
 15329   000448                     NCO2ACC         equ	1096	;# 
 15330   000448                     NCO2ACCL        equ	1096	;# 
 15331   000449                     NCO2ACCH        equ	1097	;# 
 15332   00044A                     NCO2ACCU        equ	1098	;# 
 15333   00044B                     NCO2INC         equ	1099	;# 
 15334   00044B                     NCO2INCL        equ	1099	;# 
 15335   00044C                     NCO2INCH        equ	1100	;# 
 15336   00044D                     NCO2INCU        equ	1101	;# 
 15337   00044E                     NCO2CON         equ	1102	;# 
 15338   00044F                     NCO2CLK         equ	1103	;# 
 15339   000450                     NCO3ACC         equ	1104	;# 
 15340   000450                     NCO3ACCL        equ	1104	;# 
 15341   000451                     NCO3ACCH        equ	1105	;# 
 15342   000452                     NCO3ACCU        equ	1106	;# 
 15343   000453                     NCO3INC         equ	1107	;# 
 15344   000453                     NCO3INCL        equ	1107	;# 
 15345   000454                     NCO3INCH        equ	1108	;# 
 15346   000455                     NCO3INCU        equ	1109	;# 
 15347   000456                     NCO3CON         equ	1110	;# 
 15348   000457                     NCO3CLK         equ	1111	;# 
 15349   000458                     FSCMCON         equ	1112	;# 
 15350   000459                     IVTLOCK         equ	1113	;# 
 15351   00045A                     IVTAD           equ	1114	;# 
 15352   00045A                     IVTADL          equ	1114	;# 
 15353   00045B                     IVTADH          equ	1115	;# 
 15354   00045C                     IVTADU          equ	1116	;# 
 15355   00045D                     IVTBASE         equ	1117	;# 
 15356   00045D                     IVTBASEL        equ	1117	;# 
 15357   00045E                     IVTBASEH        equ	1118	;# 
 15358   00045F                     IVTBASEU        equ	1119	;# 
 15359   000460                     PWM1ERS         equ	1120	;# 
 15360   000461                     PWM1CLK         equ	1121	;# 
 15361   000462                     PWM1LDS         equ	1122	;# 
 15362   000463                     PWM1PR          equ	1123	;# 
 15363   000463                     PWM1PRL         equ	1123	;# 
 15364   000464                     PWM1PRH         equ	1124	;# 
 15365   000465                     PWM1CPRE        equ	1125	;# 
 15366   000466                     PWM1PIPOS       equ	1126	;# 
 15367   000467                     PWM1GIR         equ	1127	;# 
 15368   000468                     PWM1GIE         equ	1128	;# 
 15369   000469                     PWM1CON         equ	1129	;# 
 15370   00046A                     PWM1S1CFG       equ	1130	;# 
 15371   00046B                     PWM1S1P1        equ	1131	;# 
 15372   00046B                     PWM1S1P1L       equ	1131	;# 
 15373   00046C                     PWM1S1P1H       equ	1132	;# 
 15374   00046D                     PWM1S1P2        equ	1133	;# 
 15375   00046D                     PWM1S1P2L       equ	1133	;# 
 15376   00046E                     PWM1S1P2H       equ	1134	;# 
 15377   00046F                     PWM2ERS         equ	1135	;# 
 15378   000470                     PWM2CLK         equ	1136	;# 
 15379   000471                     PWM2LDS         equ	1137	;# 
 15380   000472                     PWM2PR          equ	1138	;# 
 15381   000472                     PWM2PRL         equ	1138	;# 
 15382   000473                     PWM2PRH         equ	1139	;# 
 15383   000474                     PWM2CPRE        equ	1140	;# 
 15384   000475                     PWM2PIPOS       equ	1141	;# 
 15385   000476                     PWM2GIR         equ	1142	;# 
 15386   000477                     PWM2GIE         equ	1143	;# 
 15387   000478                     PWM2CON         equ	1144	;# 
 15388   000479                     PWM2S1CFG       equ	1145	;# 
 15389   00047A                     PWM2S1P1        equ	1146	;# 
 15390   00047A                     PWM2S1P1L       equ	1146	;# 
 15391   00047B                     PWM2S1P1H       equ	1147	;# 
 15392   00047C                     PWM2S1P2        equ	1148	;# 
 15393   00047C                     PWM2S1P2L       equ	1148	;# 
 15394   00047D                     PWM2S1P2H       equ	1149	;# 
 15395   00047E                     PWM3ERS         equ	1150	;# 
 15396   00047F                     PWM3CLK         equ	1151	;# 
 15397   000480                     PWM3LDS         equ	1152	;# 
 15398   000481                     PWM3PR          equ	1153	;# 
 15399   000481                     PWM3PRL         equ	1153	;# 
 15400   000482                     PWM3PRH         equ	1154	;# 
 15401   000483                     PWM3CPRE        equ	1155	;# 
 15402   000484                     PWM3PIPOS       equ	1156	;# 
 15403   000485                     PWM3GIR         equ	1157	;# 
 15404   000486                     PWM3GIE         equ	1158	;# 
 15405   000487                     PWM3CON         equ	1159	;# 
 15406   000488                     PWM3S1CFG       equ	1160	;# 
 15407   000489                     PWM3S1P1        equ	1161	;# 
 15408   000489                     PWM3S1P1L       equ	1161	;# 
 15409   00048A                     PWM3S1P1H       equ	1162	;# 
 15410   00048B                     PWM3S1P2        equ	1163	;# 
 15411   00048B                     PWM3S1P2L       equ	1163	;# 
 15412   00048C                     PWM3S1P2H       equ	1164	;# 
 15413   00048D                     PWM4ERS         equ	1165	;# 
 15414   00048E                     PWM4CLK         equ	1166	;# 
 15415   00048F                     PWM4LDS         equ	1167	;# 
 15416   000490                     PWM4PR          equ	1168	;# 
 15417   000490                     PWM4PRL         equ	1168	;# 
 15418   000491                     PWM4PRH         equ	1169	;# 
 15419   000492                     PWM4CPRE        equ	1170	;# 
 15420   000493                     PWM4PIPOS       equ	1171	;# 
 15421   000494                     PWM4GIR         equ	1172	;# 
 15422   000495                     PWM4GIE         equ	1173	;# 
 15423   000496                     PWM4CON         equ	1174	;# 
 15424   000497                     PWM4S1CFG       equ	1175	;# 
 15425   000498                     PWM4S1P1        equ	1176	;# 
 15426   000498                     PWM4S1P1L       equ	1176	;# 
 15427   000499                     PWM4S1P1H       equ	1177	;# 
 15428   00049A                     PWM4S1P2        equ	1178	;# 
 15429   00049A                     PWM4S1P2L       equ	1178	;# 
 15430   00049B                     PWM4S1P2H       equ	1179	;# 
 15431   00049C                     PWMLOAD         equ	1180	;# 
 15432   00049D                     PWMEN           equ	1181	;# 
 15433   00049E                     PIE0            equ	1182	;# 
 15434   00049F                     PIE1            equ	1183	;# 
 15435   0004A0                     PIE2            equ	1184	;# 
 15436   0004A1                     PIE3            equ	1185	;# 
 15437   0004A2                     PIE4            equ	1186	;# 
 15438   0004A3                     PIE5            equ	1187	;# 
 15439   0004A4                     PIE6            equ	1188	;# 
 15440   0004A5                     PIE7            equ	1189	;# 
 15441   0004A6                     PIE8            equ	1190	;# 
 15442   0004A7                     PIE9            equ	1191	;# 
 15443   0004A8                     PIE10           equ	1192	;# 
 15444   0004A9                     PIE11           equ	1193	;# 
 15445   0004AA                     PIE12           equ	1194	;# 
 15446   0004AB                     PIE13           equ	1195	;# 
 15447   0004AC                     PIE14           equ	1196	;# 
 15448   0004AD                     PIE15           equ	1197	;# 
 15449   0004AE                     PIR0            equ	1198	;# 
 15450   0004AF                     PIR1            equ	1199	;# 
 15451   0004B0                     PIR2            equ	1200	;# 
 15452   0004B1                     PIR3            equ	1201	;# 
 15453   0004B2                     PIR4            equ	1202	;# 
 15454   0004B3                     PIR5            equ	1203	;# 
 15455   0004B4                     PIR6            equ	1204	;# 
 15456   0004B5                     PIR7            equ	1205	;# 
 15457   0004B6                     PIR8            equ	1206	;# 
 15458   0004B7                     PIR9            equ	1207	;# 
 15459   0004B8                     PIR10           equ	1208	;# 
 15460   0004B9                     PIR11           equ	1209	;# 
 15461   0004BA                     PIR12           equ	1210	;# 
 15462   0004BB                     PIR13           equ	1211	;# 
 15463   0004BC                     PIR14           equ	1212	;# 
 15464   0004BD                     PIR15           equ	1213	;# 
 15465   0004BE                     LATA            equ	1214	;# 
 15466   0004BF                     LATB            equ	1215	;# 
 15467   0004C0                     LATC            equ	1216	;# 
 15468   0004C6                     TRISA           equ	1222	;# 
 15469   0004C7                     TRISB           equ	1223	;# 
 15470   0004C8                     TRISC           equ	1224	;# 
 15471   0004CA                     TRISE           equ	1226	;# 
 15472   0004CE                     PORTA           equ	1230	;# 
 15473   0004CF                     PORTB           equ	1231	;# 
 15474   0004D0                     PORTC           equ	1232	;# 
 15475   0004D2                     PORTE           equ	1234	;# 
 15476   0004D6                     INTCON0         equ	1238	;# 
 15477   0004D7                     INTCON1         equ	1239	;# 
 15478   0004D8                     STATUS          equ	1240	;# 
 15479   0004D9                     FSR2            equ	1241	;# 
 15480   0004D9                     FSR2L           equ	1241	;# 
 15481   0004DA                     FSR2H           equ	1242	;# 
 15482   0004DB                     PLUSW2          equ	1243	;# 
 15483   0004DC                     PREINC2         equ	1244	;# 
 15484   0004DD                     POSTDEC2        equ	1245	;# 
 15485   0004DE                     POSTINC2        equ	1246	;# 
 15486   0004DF                     INDF2           equ	1247	;# 
 15487   0004E0                     BSR             equ	1248	;# 
 15488   0004E1                     FSR1            equ	1249	;# 
 15489   0004E1                     FSR1L           equ	1249	;# 
 15490   0004E2                     FSR1H           equ	1250	;# 
 15491   0004E3                     PLUSW1          equ	1251	;# 
 15492   0004E4                     PREINC1         equ	1252	;# 
 15493   0004E5                     POSTDEC1        equ	1253	;# 
 15494   0004E6                     POSTINC1        equ	1254	;# 
 15495   0004E7                     INDF1           equ	1255	;# 
 15496   0004E8                     WREG            equ	1256	;# 
 15497   0004E9                     FSR0            equ	1257	;# 
 15498   0004E9                     FSR0L           equ	1257	;# 
 15499   0004EA                     FSR0H           equ	1258	;# 
 15500   0004EB                     PLUSW0          equ	1259	;# 
 15501   0004EC                     PREINC0         equ	1260	;# 
 15502   0004ED                     POSTDEC0        equ	1261	;# 
 15503   0004EE                     POSTINC0        equ	1262	;# 
 15504   0004EF                     INDF0           equ	1263	;# 
 15505   0004F0                     PCON0           equ	1264	;# 
 15506   0004F1                     PCON1           equ	1265	;# 
 15507   0004F2                     CPUDOZE         equ	1266	;# 
 15508   0004F3                     PROD            equ	1267	;# 
 15509   0004F3                     PRODL           equ	1267	;# 
 15510   0004F4                     PRODH           equ	1268	;# 
 15511   0004F5                     TABLAT          equ	1269	;# 
 15512   0004F6                     TBLPTR          equ	1270	;# 
 15513   0004F6                     TBLPTRL         equ	1270	;# 
 15514   0004F7                     TBLPTRH         equ	1271	;# 
 15515   0004F8                     TBLPTRU         equ	1272	;# 
 15516   0004F9                     PCLAT           equ	1273	;# 
 15517   0004F9                     PCL             equ	1273	;# 
 15518   0004FA                     PCLATH          equ	1274	;# 
 15519   0004FB                     PCLATU          equ	1275	;# 
 15520   0004FC                     STKPTR          equ	1276	;# 
 15521   0004FD                     TOS             equ	1277	;# 
 15522   0004FD                     TOSL            equ	1277	;# 
 15523   0004FE                     TOSH            equ	1278	;# 
 15524   0004FF                     TOSU            equ	1279	;# 
 15525   000038                     BOOTREG         equ	56	;# 
 15526   000039                     CLKRCON         equ	57	;# 
 15527   00003A                     CLKRCLK         equ	58	;# 
 15528   000040                     NVMCON0         equ	64	;# 
 15529   000041                     NVMCON1         equ	65	;# 
 15530   000042                     NVMLOCK         equ	66	;# 
 15531   000043                     NVMADR          equ	67	;# 
 15532   000043                     NVMADRL         equ	67	;# 
 15533   000044                     NVMADRH         equ	68	;# 
 15534   000045                     NVMADRU         equ	69	;# 
 15535   000046                     NVMDAT          equ	70	;# 
 15536   000046                     NVMDATL         equ	70	;# 
 15537   000047                     NVMDATH         equ	71	;# 
 15538   000048                     VREGCON         equ	72	;# 
 15539   000049                     BORCON          equ	73	;# 
 15540   00004A                     HLVDCON0        equ	74	;# 
 15541   00004B                     HLVDCON1        equ	75	;# 
 15542   00004C                     ZCDCON          equ	76	;# 
 15543   000060                     PMD0            equ	96	;# 
 15544   000061                     PMD1            equ	97	;# 
 15545   000062                     PMD2            equ	98	;# 
 15546   000063                     PMD3            equ	99	;# 
 15547   000064                     PMD4            equ	100	;# 
 15548   000065                     PMD5            equ	101	;# 
 15549   000066                     PMD6            equ	102	;# 
 15550   000067                     PMD7            equ	103	;# 
 15551   000068                     PMD8            equ	104	;# 
 15552   00006A                     MD1CON0         equ	106	;# 
 15553   00006B                     MD1CON1         equ	107	;# 
 15554   00006C                     MD1SRC          equ	108	;# 
 15555   00006D                     MD1CARL         equ	109	;# 
 15556   00006E                     MD1CARH         equ	110	;# 
 15557   00006F                     CMOUT           equ	111	;# 
 15558   000070                     CM1CON0         equ	112	;# 
 15559   000071                     CM1CON1         equ	113	;# 
 15560   000072                     CM1NCH          equ	114	;# 
 15561   000073                     CM1PCH          equ	115	;# 
 15562   000074                     CM2CON0         equ	116	;# 
 15563   000075                     CM2CON1         equ	117	;# 
 15564   000076                     CM2NCH          equ	118	;# 
 15565   000077                     CM2PCH          equ	119	;# 
 15566   000078                     WDTCON0         equ	120	;# 
 15567   000079                     WDTCON1         equ	121	;# 
 15568   00007A                     WDTPSL          equ	122	;# 
 15569   00007B                     WDTPSH          equ	123	;# 
 15570   00007C                     WDTTMR          equ	124	;# 
 15571   00007D                     DAC1DAT         equ	125	;# 
 15572   00007D                     DAC1DATL        equ	125	;# 
 15573   00007F                     DAC1CON         equ	127	;# 
 15574   000080                     SPI1RXB         equ	128	;# 
 15575   000081                     SPI1TXB         equ	129	;# 
 15576   000082                     SPI1TCNT        equ	130	;# 
 15577   000082                     SPI1TCNTL       equ	130	;# 
 15578   000083                     SPI1TCNTH       equ	131	;# 
 15579   000084                     SPI1CON0        equ	132	;# 
 15580   000085                     SPI1CON1        equ	133	;# 
 15581   000086                     SPI1CON2        equ	134	;# 
 15582   000087                     SPI1STATUS      equ	135	;# 
 15583   000088                     SPI1TWIDTH      equ	136	;# 
 15584   000089                     SPI1BAUD        equ	137	;# 
 15585   00008A                     SPI1INTF        equ	138	;# 
 15586   00008B                     SPI1INTE        equ	139	;# 
 15587   00008C                     SPI1CLK         equ	140	;# 
 15588   00008D                     SPI2RXB         equ	141	;# 
 15589   00008E                     SPI2TXB         equ	142	;# 
 15590   00008F                     SPI2TCNT        equ	143	;# 
 15591   00008F                     SPI2TCNTL       equ	143	;# 
 15592   000090                     SPI2TCNTH       equ	144	;# 
 15593   000091                     SPI2CON0        equ	145	;# 
 15594   000092                     SPI2CON1        equ	146	;# 
 15595   000093                     SPI2CON2        equ	147	;# 
 15596   000094                     SPI2STATUS      equ	148	;# 
 15597   000095                     SPI2TWIDTH      equ	149	;# 
 15598   000096                     SPI2BAUD        equ	150	;# 
 15599   000097                     SPI2INTF        equ	151	;# 
 15600   000098                     SPI2INTE        equ	152	;# 
 15601   000099                     SPI2CLK         equ	153	;# 
 15602   0000AC                     ACTCON          equ	172	;# 
 15603   0000AD                     OSCCON1         equ	173	;# 
 15604   0000AE                     OSCCON2         equ	174	;# 
 15605   0000AF                     OSCCON3         equ	175	;# 
 15606   0000B0                     OSCTUNE         equ	176	;# 
 15607   0000B1                     OSCFRQ          equ	177	;# 
 15608   0000B1                     OSCFREQ         equ	177	;# 
 15609   0000B2                     OSCSTAT         equ	178	;# 
 15610   0000B2                     OSCSTAT1        equ	178	;# 
 15611   0000B3                     OSCEN           equ	179	;# 
 15612   0000B4                     PRLOCK          equ	180	;# 
 15613   0000B5                     SCANPR          equ	181	;# 
 15614   0000B6                     DMA1PR          equ	182	;# 
 15615   0000B7                     DMA2PR          equ	183	;# 
 15616   0000B8                     DMA3PR          equ	184	;# 
 15617   0000B9                     DMA4PR          equ	185	;# 
 15618   0000BA                     DMA5PR          equ	186	;# 
 15619   0000BB                     DMA6PR          equ	187	;# 
 15620   0000BC                     DMA7PR          equ	188	;# 
 15621   0000BD                     DMA8PR          equ	189	;# 
 15622   0000BE                     MAINPR          equ	190	;# 
 15623   0000BF                     ISRPR           equ	191	;# 
 15624   0000D4                     CLCDATA         equ	212	;# 
 15625   0000D5                     CLCSELECT       equ	213	;# 
 15626   0000D6                     CLCnCON         equ	214	;# 
 15627   0000D7                     CLCnPOL         equ	215	;# 
 15628   0000D8                     CLCnSEL0        equ	216	;# 
 15629   0000D9                     CLCnSEL1        equ	217	;# 
 15630   0000DA                     CLCnSEL2        equ	218	;# 
 15631   0000DB                     CLCnSEL3        equ	219	;# 
 15632   0000DC                     CLCnGLS0        equ	220	;# 
 15633   0000DD                     CLCnGLS1        equ	221	;# 
 15634   0000DE                     CLCnGLS2        equ	222	;# 
 15635   0000DF                     CLCnGLS3        equ	223	;# 
 15636   0000E8                     DMASELECT       equ	232	;# 
 15637   0000E9                     DMAnBUF         equ	233	;# 
 15638   0000EA                     DMAnDCNT        equ	234	;# 
 15639   0000EA                     DMAnDCNTL       equ	234	;# 
 15640   0000EB                     DMAnDCNTH       equ	235	;# 
 15641   0000EC                     DMAnDPTR        equ	236	;# 
 15642   0000EC                     DMAnDPTRL       equ	236	;# 
 15643   0000ED                     DMAnDPTRH       equ	237	;# 
 15644   0000EE                     DMAnDSZ         equ	238	;# 
 15645   0000EE                     DMAnDSZL        equ	238	;# 
 15646   0000EF                     DMAnDSZH        equ	239	;# 
 15647   0000F0                     DMAnDSA         equ	240	;# 
 15648   0000F0                     DMAnDSAL        equ	240	;# 
 15649   0000F1                     DMAnDSAH        equ	241	;# 
 15650   0000F2                     DMAnSCNT        equ	242	;# 
 15651   0000F2                     DMAnSCNTL       equ	242	;# 
 15652   0000F3                     DMAnSCNTH       equ	243	;# 
 15653   0000F4                     DMAnSPTR        equ	244	;# 
 15654   0000F4                     DMAnSPTRL       equ	244	;# 
 15655   0000F5                     DMAnSPTRH       equ	245	;# 
 15656   0000F6                     DMAnSPTRU       equ	246	;# 
 15657   0000F7                     DMAnSSZ         equ	247	;# 
 15658   0000F7                     DMAnSSZL        equ	247	;# 
 15659   0000F8                     DMAnSSZH        equ	248	;# 
 15660   0000F9                     DMAnSSA         equ	249	;# 
 15661   0000F9                     DMAnSSAL        equ	249	;# 
 15662   0000FA                     DMAnSSAH        equ	250	;# 
 15663   0000FB                     DMAnSSAU        equ	251	;# 
 15664   0000FC                     DMAnCON0        equ	252	;# 
 15665   0000FD                     DMAnCON1        equ	253	;# 
 15666   0000FE                     DMAnAIRQ        equ	254	;# 
 15667   0000FF                     DMAnSIRQ        equ	255	;# 
 15668   000100                     C1CONL          equ	256	;# 
 15669   000101                     C1CONH          equ	257	;# 
 15670   000102                     C1CONU          equ	258	;# 
 15671   000103                     C1CONT          equ	259	;# 
 15672   000104                     C1NBTCFGL       equ	260	;# 
 15673   000105                     C1NBTCFGH       equ	261	;# 
 15674   000106                     C1NBTCFGU       equ	262	;# 
 15675   000107                     C1NBTCFGT       equ	263	;# 
 15676   000108                     C1DBTCFGL       equ	264	;# 
 15677   000109                     C1DBTCFGH       equ	265	;# 
 15678   00010A                     C1DBTCFGU       equ	266	;# 
 15679   00010B                     C1DBTCFGT       equ	267	;# 
 15680   00010C                     C1TDCL          equ	268	;# 
 15681   00010D                     C1TDCH          equ	269	;# 
 15682   00010E                     C1TDCU          equ	270	;# 
 15683   000110                     C1TBC           equ	272	;# 
 15684   000110                     C1TBCL          equ	272	;# 
 15685   000111                     C1TBCH          equ	273	;# 
 15686   000112                     C1TBCU          equ	274	;# 
 15687   000113                     C1TBCT          equ	275	;# 
 15688   000114                     C1TSCONL        equ	276	;# 
 15689   000115                     C1TSCONH        equ	277	;# 
 15690   000116                     C1TSCONU        equ	278	;# 
 15691   000117                     C1TSCONT        equ	279	;# 
 15692   000118                     C1VECL          equ	280	;# 
 15693   000119                     C1VECH          equ	281	;# 
 15694   00011A                     C1VECU          equ	282	;# 
 15695   00011B                     C1VECT          equ	283	;# 
 15696   00011C                     C1INTL          equ	284	;# 
 15697   00011D                     C1INTH          equ	285	;# 
 15698   00011E                     C1INTU          equ	286	;# 
 15699   00011F                     C1INTT          equ	287	;# 
 15700   000120                     C1RXIF          equ	288	;# 
 15701   000120                     C1RXIFL         equ	288	;# 
 15702   000121                     C1RXIFH         equ	289	;# 
 15703   000122                     C1RXIFU         equ	290	;# 
 15704   000123                     C1RXIFT         equ	291	;# 
 15705   000124                     C1TXIF          equ	292	;# 
 15706   000124                     C1TXIFL         equ	292	;# 
 15707   000125                     C1TXIFH         equ	293	;# 
 15708   000126                     C1TXIFU         equ	294	;# 
 15709   000127                     C1TXIFT         equ	295	;# 
 15710   000128                     C1RXOVIF        equ	296	;# 
 15711   000128                     C1RXOVIFL       equ	296	;# 
 15712   000129                     C1RXOVIFH       equ	297	;# 
 15713   00012A                     C1RXOVIFU       equ	298	;# 
 15714   00012B                     C1RXOVIFT       equ	299	;# 
 15715   00012C                     C1TXATIF        equ	300	;# 
 15716   00012C                     C1TXATIFL       equ	300	;# 
 15717   00012D                     C1TXATIFH       equ	301	;# 
 15718   00012E                     C1TXATIFU       equ	302	;# 
 15719   00012F                     C1TXATIFT       equ	303	;# 
 15720   000130                     C1TXREQ         equ	304	;# 
 15721   000130                     C1TXREQL        equ	304	;# 
 15722   000131                     C1TXREQH        equ	305	;# 
 15723   000132                     C1TXREQU        equ	306	;# 
 15724   000133                     C1TXREQT        equ	307	;# 
 15725   000134                     C1TRECL         equ	308	;# 
 15726   000135                     C1TRECH         equ	309	;# 
 15727   000136                     C1TRECU         equ	310	;# 
 15728   000137                     C1TRECT         equ	311	;# 
 15729   000138                     C1BDIAG0L       equ	312	;# 
 15730   000139                     C1BDIAG0H       equ	313	;# 
 15731   00013C                     C1BDIAG1L       equ	316	;# 
 15732   00013D                     C1BDIAG1H       equ	317	;# 
 15733   00013E                     C1BDIAG1U       equ	318	;# 
 15734   00013F                     C1BDIAG1T       equ	319	;# 
 15735   000140                     C1TEFCONL       equ	320	;# 
 15736   000141                     C1TEFCONH       equ	321	;# 
 15737   000142                     C1TEFCONU       equ	322	;# 
 15738   000143                     C1TEFCONT       equ	323	;# 
 15739   000144                     C1TEFSTAL       equ	324	;# 
 15740   000145                     C1TEFSTAH       equ	325	;# 
 15741   000146                     C1TEFSTAU       equ	326	;# 
 15742   000147                     C1TEFSTAT       equ	327	;# 
 15743   000148                     C1TEFUA         equ	328	;# 
 15744   000148                     C1TEFUAL        equ	328	;# 
 15745   000149                     C1TEFUAH        equ	329	;# 
 15746   00014A                     C1TEFUAU        equ	330	;# 
 15747   00014B                     C1TEFUAT        equ	331	;# 
 15748   00014C                     C1FIFOBA        equ	332	;# 
 15749   00014C                     C1FIFOBAL       equ	332	;# 
 15750   00014D                     C1FIFOBAH       equ	333	;# 
 15751   00014E                     C1FIFOBAU       equ	334	;# 
 15752   00014F                     C1FIFOBAT       equ	335	;# 
 15753   000150                     C1TXQCONL       equ	336	;# 
 15754   000151                     C1TXQCONH       equ	337	;# 
 15755   000152                     C1TXQCONU       equ	338	;# 
 15756   000153                     C1TXQCONT       equ	339	;# 
 15757   000154                     C1TXQSTAL       equ	340	;# 
 15758   000155                     C1TXQSTAH       equ	341	;# 
 15759   000156                     C1TXQSTAU       equ	342	;# 
 15760   000157                     C1TXQSTAT       equ	343	;# 
 15761   000158                     C1TXQUA         equ	344	;# 
 15762   000158                     C1TXQUAL        equ	344	;# 
 15763   000159                     C1TXQUAH        equ	345	;# 
 15764   00015A                     C1TXQUAU        equ	346	;# 
 15765   00015B                     C1TXQUAT        equ	347	;# 
 15766   00015C                     C1FIFOCON1      equ	348	;# 
 15767   00015C                     C1FIFOCON1L     equ	348	;# 
 15768   00015D                     C1FIFOCON1H     equ	349	;# 
 15769   00015E                     C1FIFOCON1U     equ	350	;# 
 15770   00015F                     C1FIFOCON1T     equ	351	;# 
 15771   000160                     C1FIFOSTA1      equ	352	;# 
 15772   000160                     C1FIFOSTA1L     equ	352	;# 
 15773   000161                     C1FIFOSTA1H     equ	353	;# 
 15774   000162                     C1FIFOSTA1U     equ	354	;# 
 15775   000163                     C1FIFOSTA1T     equ	355	;# 
 15776   000164                     C1FIFOUA1       equ	356	;# 
 15777   000164                     C1FIFOUA1L      equ	356	;# 
 15778   000165                     C1FIFOUA1H      equ	357	;# 
 15779   000166                     C1FIFOUA1U      equ	358	;# 
 15780   000167                     C1FIFOUA1T      equ	359	;# 
 15781   000168                     C1FIFOCON2      equ	360	;# 
 15782   000168                     C1FIFOCON2L     equ	360	;# 
 15783   000169                     C1FIFOCON2H     equ	361	;# 
 15784   00016A                     C1FIFOCON2U     equ	362	;# 
 15785   00016B                     C1FIFOCON2T     equ	363	;# 
 15786   00016C                     C1FIFOSTA2      equ	364	;# 
 15787   00016C                     C1FIFOSTA2L     equ	364	;# 
 15788   00016D                     C1FIFOSTA2H     equ	365	;# 
 15789   00016E                     C1FIFOSTA2U     equ	366	;# 
 15790   00016F                     C1FIFOSTA2T     equ	367	;# 
 15791   000170                     C1FIFOUA2       equ	368	;# 
 15792   000170                     C1FIFOUA2L      equ	368	;# 
 15793   000171                     C1FIFOUA2H      equ	369	;# 
 15794   000172                     C1FIFOUA2U      equ	370	;# 
 15795   000173                     C1FIFOUA2T      equ	371	;# 
 15796   000174                     C1FIFOCON3      equ	372	;# 
 15797   000174                     C1FIFOCON3L     equ	372	;# 
 15798   000175                     C1FIFOCON3H     equ	373	;# 
 15799   000176                     C1FIFOCON3U     equ	374	;# 
 15800   000177                     C1FIFOCON3T     equ	375	;# 
 15801   000178                     C1FIFOSTA3      equ	376	;# 
 15802   000178                     C1FIFOSTA3L     equ	376	;# 
 15803   000179                     C1FIFOSTA3H     equ	377	;# 
 15804   00017A                     C1FIFOSTA3U     equ	378	;# 
 15805   00017B                     C1FIFOSTA3T     equ	379	;# 
 15806   00017C                     C1FIFOUA3       equ	380	;# 
 15807   00017C                     C1FIFOUA3L      equ	380	;# 
 15808   00017D                     C1FIFOUA3H      equ	381	;# 
 15809   00017E                     C1FIFOUA3U      equ	382	;# 
 15810   00017F                     C1FIFOUA3T      equ	383	;# 
 15811   000180                     C1FLTCON0L      equ	384	;# 
 15812   000181                     C1FLTCON0H      equ	385	;# 
 15813   000182                     C1FLTCON0U      equ	386	;# 
 15814   000183                     C1FLTCON0T      equ	387	;# 
 15815   000184                     C1FLTCON1L      equ	388	;# 
 15816   000185                     C1FLTCON1H      equ	389	;# 
 15817   000186                     C1FLTCON1U      equ	390	;# 
 15818   000187                     C1FLTCON1T      equ	391	;# 
 15819   000188                     C1FLTCON2L      equ	392	;# 
 15820   000189                     C1FLTCON2H      equ	393	;# 
 15821   00018A                     C1FLTCON2U      equ	394	;# 
 15822   00018B                     C1FLTCON2T      equ	395	;# 
 15823   00018C                     C1FLTOBJ0       equ	396	;# 
 15824   00018C                     C1FLTOBJ0L      equ	396	;# 
 15825   00018D                     C1FLTOBJ0H      equ	397	;# 
 15826   00018E                     C1FLTOBJ0U      equ	398	;# 
 15827   00018F                     C1FLTOBJ0T      equ	399	;# 
 15828   000190                     C1MASK0         equ	400	;# 
 15829   000190                     C1MASK0L        equ	400	;# 
 15830   000191                     C1MASK0H        equ	401	;# 
 15831   000192                     C1MASK0U        equ	402	;# 
 15832   000193                     C1MASK0T        equ	403	;# 
 15833   000194                     C1FLTOBJ1       equ	404	;# 
 15834   000194                     C1FLTOBJ1L      equ	404	;# 
 15835   000195                     C1FLTOBJ1H      equ	405	;# 
 15836   000196                     C1FLTOBJ1U      equ	406	;# 
 15837   000197                     C1FLTOBJ1T      equ	407	;# 
 15838   000198                     C1MASK1         equ	408	;# 
 15839   000198                     C1MASK1L        equ	408	;# 
 15840   000199                     C1MASK1H        equ	409	;# 
 15841   00019A                     C1MASK1U        equ	410	;# 
 15842   00019B                     C1MASK1T        equ	411	;# 
 15843   00019C                     C1FLTOBJ2       equ	412	;# 
 15844   00019C                     C1FLTOBJ2L      equ	412	;# 
 15845   00019D                     C1FLTOBJ2H      equ	413	;# 
 15846   00019E                     C1FLTOBJ2U      equ	414	;# 
 15847   00019F                     C1FLTOBJ2T      equ	415	;# 
 15848   0001A0                     C1MASK2         equ	416	;# 
 15849   0001A0                     C1MASK2L        equ	416	;# 
 15850   0001A1                     C1MASK2H        equ	417	;# 
 15851   0001A2                     C1MASK2U        equ	418	;# 
 15852   0001A3                     C1MASK2T        equ	419	;# 
 15853   0001A4                     C1FLTOBJ3       equ	420	;# 
 15854   0001A4                     C1FLTOBJ3L      equ	420	;# 
 15855   0001A5                     C1FLTOBJ3H      equ	421	;# 
 15856   0001A6                     C1FLTOBJ3U      equ	422	;# 
 15857   0001A7                     C1FLTOBJ3T      equ	423	;# 
 15858   0001A8                     C1MASK3         equ	424	;# 
 15859   0001A8                     C1MASK3L        equ	424	;# 
 15860   0001A9                     C1MASK3H        equ	425	;# 
 15861   0001AA                     C1MASK3U        equ	426	;# 
 15862   0001AB                     C1MASK3T        equ	427	;# 
 15863   0001AC                     C1FLTOBJ4       equ	428	;# 
 15864   0001AC                     C1FLTOBJ4L      equ	428	;# 
 15865   0001AD                     C1FLTOBJ4H      equ	429	;# 
 15866   0001AE                     C1FLTOBJ4U      equ	430	;# 
 15867   0001AF                     C1FLTOBJ4T      equ	431	;# 
 15868   0001B0                     C1MASK4         equ	432	;# 
 15869   0001B0                     C1MASK4L        equ	432	;# 
 15870   0001B1                     C1MASK4H        equ	433	;# 
 15871   0001B2                     C1MASK4U        equ	434	;# 
 15872   0001B3                     C1MASK4T        equ	435	;# 
 15873   0001B4                     C1FLTOBJ5       equ	436	;# 
 15874   0001B4                     C1FLTOBJ5L      equ	436	;# 
 15875   0001B5                     C1FLTOBJ5H      equ	437	;# 
 15876   0001B6                     C1FLTOBJ5U      equ	438	;# 
 15877   0001B7                     C1FLTOBJ5T      equ	439	;# 
 15878   0001B8                     C1MASK5         equ	440	;# 
 15879   0001B8                     C1MASK5L        equ	440	;# 
 15880   0001B9                     C1MASK5H        equ	441	;# 
 15881   0001BA                     C1MASK5U        equ	442	;# 
 15882   0001BB                     C1MASK5T        equ	443	;# 
 15883   0001BC                     C1FLTOBJ6       equ	444	;# 
 15884   0001BC                     C1FLTOBJ6L      equ	444	;# 
 15885   0001BD                     C1FLTOBJ6H      equ	445	;# 
 15886   0001BE                     C1FLTOBJ6U      equ	446	;# 
 15887   0001BF                     C1FLTOBJ6T      equ	447	;# 
 15888   0001C0                     C1MASK6         equ	448	;# 
 15889   0001C0                     C1MASK6L        equ	448	;# 
 15890   0001C1                     C1MASK6H        equ	449	;# 
 15891   0001C2                     C1MASK6U        equ	450	;# 
 15892   0001C3                     C1MASK6T        equ	451	;# 
 15893   0001C4                     C1FLTOBJ7       equ	452	;# 
 15894   0001C4                     C1FLTOBJ7L      equ	452	;# 
 15895   0001C5                     C1FLTOBJ7H      equ	453	;# 
 15896   0001C6                     C1FLTOBJ7U      equ	454	;# 
 15897   0001C7                     C1FLTOBJ7T      equ	455	;# 
 15898   0001C8                     C1MASK7         equ	456	;# 
 15899   0001C8                     C1MASK7L        equ	456	;# 
 15900   0001C9                     C1MASK7H        equ	457	;# 
 15901   0001CA                     C1MASK7U        equ	458	;# 
 15902   0001CB                     C1MASK7T        equ	459	;# 
 15903   0001CC                     C1FLTOBJ8       equ	460	;# 
 15904   0001CC                     C1FLTOBJ8L      equ	460	;# 
 15905   0001CD                     C1FLTOBJ8H      equ	461	;# 
 15906   0001CE                     C1FLTOBJ8U      equ	462	;# 
 15907   0001CF                     C1FLTOBJ8T      equ	463	;# 
 15908   0001D0                     C1MASK8         equ	464	;# 
 15909   0001D0                     C1MASK8L        equ	464	;# 
 15910   0001D1                     C1MASK8H        equ	465	;# 
 15911   0001D2                     C1MASK8U        equ	466	;# 
 15912   0001D3                     C1MASK8T        equ	467	;# 
 15913   0001D4                     C1FLTOBJ9       equ	468	;# 
 15914   0001D4                     C1FLTOBJ9L      equ	468	;# 
 15915   0001D5                     C1FLTOBJ9H      equ	469	;# 
 15916   0001D6                     C1FLTOBJ9U      equ	470	;# 
 15917   0001D7                     C1FLTOBJ9T      equ	471	;# 
 15918   0001D8                     C1MASK9         equ	472	;# 
 15919   0001D8                     C1MASK9L        equ	472	;# 
 15920   0001D9                     C1MASK9H        equ	473	;# 
 15921   0001DA                     C1MASK9U        equ	474	;# 
 15922   0001DB                     C1MASK9T        equ	475	;# 
 15923   0001DC                     C1FLTOBJ10      equ	476	;# 
 15924   0001DC                     C1FLTOBJ10L     equ	476	;# 
 15925   0001DD                     C1FLTOBJ10H     equ	477	;# 
 15926   0001DE                     C1FLTOBJ10U     equ	478	;# 
 15927   0001DF                     C1FLTOBJ10T     equ	479	;# 
 15928   0001E0                     C1MASK10        equ	480	;# 
 15929   0001E0                     C1MASK10L       equ	480	;# 
 15930   0001E1                     C1MASK10H       equ	481	;# 
 15931   0001E2                     C1MASK10U       equ	482	;# 
 15932   0001E3                     C1MASK10T       equ	483	;# 
 15933   0001E4                     C1FLTOBJ11      equ	484	;# 
 15934   0001E4                     C1FLTOBJ11L     equ	484	;# 
 15935   0001E5                     C1FLTOBJ11H     equ	485	;# 
 15936   0001E6                     C1FLTOBJ11U     equ	486	;# 
 15937   0001E7                     C1FLTOBJ11T     equ	487	;# 
 15938   0001E8                     C1MASK11        equ	488	;# 
 15939   0001E8                     C1MASK11L       equ	488	;# 
 15940   0001E9                     C1MASK11H       equ	489	;# 
 15941   0001EA                     C1MASK11U       equ	490	;# 
 15942   0001EB                     C1MASK11T       equ	491	;# 
 15943   000200                     PPSLOCK         equ	512	;# 
 15944   000201                     RA0PPS          equ	513	;# 
 15945   000202                     RA1PPS          equ	514	;# 
 15946   000203                     RA2PPS          equ	515	;# 
 15947   000204                     RA3PPS          equ	516	;# 
 15948   000205                     RA4PPS          equ	517	;# 
 15949   000206                     RA5PPS          equ	518	;# 
 15950   000207                     RA6PPS          equ	519	;# 
 15951   000208                     RA7PPS          equ	520	;# 
 15952   000209                     RB0PPS          equ	521	;# 
 15953   00020A                     RB1PPS          equ	522	;# 
 15954   00020B                     RB2PPS          equ	523	;# 
 15955   00020C                     RB3PPS          equ	524	;# 
 15956   00020D                     RB4PPS          equ	525	;# 
 15957   00020E                     RB5PPS          equ	526	;# 
 15958   00020F                     RB6PPS          equ	527	;# 
 15959   000210                     RB7PPS          equ	528	;# 
 15960   000211                     RC0PPS          equ	529	;# 
 15961   000212                     RC1PPS          equ	530	;# 
 15962   000213                     RC2PPS          equ	531	;# 
 15963   000214                     RC3PPS          equ	532	;# 
 15964   000215                     RC4PPS          equ	533	;# 
 15965   000216                     RC5PPS          equ	534	;# 
 15966   000217                     RC6PPS          equ	535	;# 
 15967   000218                     RC7PPS          equ	536	;# 
 15968   00023D                     CANRXPPS        equ	573	;# 
 15969   00023E                     INT0PPS         equ	574	;# 
 15970   00023F                     INT1PPS         equ	575	;# 
 15971   000240                     INT2PPS         equ	576	;# 
 15972   000241                     T0CKIPPS        equ	577	;# 
 15973   000242                     T1CKIPPS        equ	578	;# 
 15974   000243                     T1GPPS          equ	579	;# 
 15975   000244                     T3CKIPPS        equ	580	;# 
 15976   000245                     T3GPPS          equ	581	;# 
 15977   000246                     T5CKIPPS        equ	582	;# 
 15978   000247                     T5GPPS          equ	583	;# 
 15979   000248                     T2INPPS         equ	584	;# 
 15980   000249                     T4INPPS         equ	585	;# 
 15981   00024A                     T6INPPS         equ	586	;# 
 15982   00024B                     TUIN0PPS        equ	587	;# 
 15983   00024C                     TUIN1PPS        equ	588	;# 
 15984   00024F                     CCP1PPS         equ	591	;# 
 15985   000250                     CCP2PPS         equ	592	;# 
 15986   000251                     CCP3PPS         equ	593	;# 
 15987   000253                     PWM1ERSPPS      equ	595	;# 
 15988   000254                     PWM2ERSPPS      equ	596	;# 
 15989   000255                     PWM3ERSPPS      equ	597	;# 
 15990   000256                     PWM4ERSPPS      equ	598	;# 
 15991   000257                     PWMIN0PPS       equ	599	;# 
 15992   000258                     PWMIN1PPS       equ	600	;# 
 15993   000259                     SMT1WINPPS      equ	601	;# 
 15994   00025A                     SMT1SIGPPS      equ	602	;# 
 15995   00025B                     CWG1PPS         equ	603	;# 
 15996   00025B                     CWG1INPPS       equ	603	;# 
 15997   00025C                     CWG2PPS         equ	604	;# 
 15998   00025C                     CWG2INPPS       equ	604	;# 
 15999   00025D                     CWG3PPS         equ	605	;# 
 16000   00025D                     CWG3INPPS       equ	605	;# 
 16001   00025E                     MD1CARLPPS      equ	606	;# 
 16002   00025E                     MDCARLPPS       equ	606	;# 
 16003   00025F                     MD1CARHPPS      equ	607	;# 
 16004   00025F                     MDCARHPPS       equ	607	;# 
 16005   000260                     MD1SRCPPS       equ	608	;# 
 16006   000260                     MDSRCPPS        equ	608	;# 
 16007   000261                     CLCIN0PPS       equ	609	;# 
 16008   000262                     CLCIN1PPS       equ	610	;# 
 16009   000263                     CLCIN2PPS       equ	611	;# 
 16010   000264                     CLCIN3PPS       equ	612	;# 
 16011   000265                     CLCIN4PPS       equ	613	;# 
 16012   000266                     CLCIN5PPS       equ	614	;# 
 16013   000267                     CLCIN6PPS       equ	615	;# 
 16014   000268                     CLCIN7PPS       equ	616	;# 
 16015   000269                     ADACTPPS        equ	617	;# 
 16016   00026A                     SPI1SCKPPS      equ	618	;# 
 16017   00026B                     SPI1SDIPPS      equ	619	;# 
 16018   00026C                     SPI1SSPPS       equ	620	;# 
 16019   00026D                     SPI2SCKPPS      equ	621	;# 
 16020   00026E                     SPI2SDIPPS      equ	622	;# 
 16021   00026F                     SPI2SSPPS       equ	623	;# 
 16022   000270                     I2C1SDAPPS      equ	624	;# 
 16023   000271                     I2C1SCLPPS      equ	625	;# 
 16024   000272                     U1RXPPS         equ	626	;# 
 16025   000273                     U1CTSPPS        equ	627	;# 
 16026   000274                     U2RXPPS         equ	628	;# 
 16027   000275                     U2CTSPPS        equ	629	;# 
 16028   000276                     U3RXPPS         equ	630	;# 
 16029   000277                     U3CTSPPS        equ	631	;# 
 16030   000278                     U4RXPPS         equ	632	;# 
 16031   000279                     U4CTSPPS        equ	633	;# 
 16032   00027A                     U5RXPPS         equ	634	;# 
 16033   00027B                     U5CTSPPS        equ	635	;# 
 16034   000286                     RC4I2C          equ	646	;# 
 16035   000287                     RC3I2C          equ	647	;# 
 16036   000288                     RB2I2C          equ	648	;# 
 16037   000289                     RB1I2C          equ	649	;# 
 16038   00028A                     I2C1RXB         equ	650	;# 
 16039   00028B                     I2C1TXB         equ	651	;# 
 16040   00028C                     I2C1CNTL        equ	652	;# 
 16041   00028D                     I2C1CNTH        equ	653	;# 
 16042   00028E                     I2C1ADB0        equ	654	;# 
 16043   00028F                     I2C1ADB1        equ	655	;# 
 16044   000290                     I2C1ADR0        equ	656	;# 
 16045   000291                     I2C1ADR1        equ	657	;# 
 16046   000292                     I2C1ADR2        equ	658	;# 
 16047   000293                     I2C1ADR3        equ	659	;# 
 16048   000294                     I2C1CON0        equ	660	;# 
 16049   000295                     I2C1CON1        equ	661	;# 
 16050   000296                     I2C1CON2        equ	662	;# 
 16051   000297                     I2C1ERR         equ	663	;# 
 16052   000298                     I2C1STAT0       equ	664	;# 
 16053   000299                     I2C1STAT1       equ	665	;# 
 16054   00029A                     I2C1PIR         equ	666	;# 
 16055   00029B                     I2C1PIE         equ	667	;# 
 16056   00029C                     I2C1BTO         equ	668	;# 
 16057   00029D                     I2C1BAUD        equ	669	;# 
 16058   00029E                     I2C1CLK         equ	670	;# 
 16059   00029F                     I2C1BTOC        equ	671	;# 
 16060   0002A1                     U1RXB           equ	673	;# 
 16061   0002A1                     U1RXBL          equ	673	;# 
 16062   0002A2                     U1RXCHK         equ	674	;# 
 16063   0002A3                     U1TXB           equ	675	;# 
 16064   0002A3                     U1TXBL          equ	675	;# 
 16065   0002A4                     U1TXCHK         equ	676	;# 
 16066   0002A5                     U1P1            equ	677	;# 
 16067   0002A5                     U1P1L           equ	677	;# 
 16068   0002A6                     U1P1H           equ	678	;# 
 16069   0002A7                     U1P2            equ	679	;# 
 16070   0002A7                     U1P2L           equ	679	;# 
 16071   0002A8                     U1P2H           equ	680	;# 
 16072   0002A9                     U1P3            equ	681	;# 
 16073   0002A9                     U1P3L           equ	681	;# 
 16074   0002AA                     U1P3H           equ	682	;# 
 16075   0002AB                     U1CON0          equ	683	;# 
 16076   0002AC                     U1CON1          equ	684	;# 
 16077   0002AD                     U1CON2          equ	685	;# 
 16078   0002AE                     U1BRG           equ	686	;# 
 16079   0002AE                     U1BRGL          equ	686	;# 
 16080   0002AF                     U1BRGH          equ	687	;# 
 16081   0002B0                     U1FIFO          equ	688	;# 
 16082   0002B1                     U1UIR           equ	689	;# 
 16083   0002B2                     U1ERRIR         equ	690	;# 
 16084   0002B3                     U1ERRIE         equ	691	;# 
 16085   0002B4                     U2RXB           equ	692	;# 
 16086   0002B4                     U2RXBL          equ	692	;# 
 16087   0002B5                     U2RXCHK         equ	693	;# 
 16088   0002B6                     U2TXB           equ	694	;# 
 16089   0002B6                     U2TXBL          equ	694	;# 
 16090   0002B7                     U2TXCHK         equ	695	;# 
 16091   0002B8                     U2P1            equ	696	;# 
 16092   0002B8                     U2P1L           equ	696	;# 
 16093   0002B9                     U2P1H           equ	697	;# 
 16094   0002BA                     U2P2            equ	698	;# 
 16095   0002BA                     U2P2L           equ	698	;# 
 16096   0002BB                     U2P2H           equ	699	;# 
 16097   0002BC                     U2P3            equ	700	;# 
 16098   0002BC                     U2P3L           equ	700	;# 
 16099   0002BD                     U2P3H           equ	701	;# 
 16100   0002BE                     U2CON0          equ	702	;# 
 16101   0002BF                     U2CON1          equ	703	;# 
 16102   0002C0                     U2CON2          equ	704	;# 
 16103   0002C1                     U2BRG           equ	705	;# 
 16104   0002C1                     U2BRGL          equ	705	;# 
 16105   0002C2                     U2BRGH          equ	706	;# 
 16106   0002C3                     U2FIFO          equ	707	;# 
 16107   0002C4                     U2UIR           equ	708	;# 
 16108   0002C5                     U2ERRIR         equ	709	;# 
 16109   0002C6                     U2ERRIE         equ	710	;# 
 16110   0002C7                     U3RXB           equ	711	;# 
 16111   0002C7                     U3RXBL          equ	711	;# 
 16112   0002C9                     U3TXB           equ	713	;# 
 16113   0002C9                     U3TXBL          equ	713	;# 
 16114   0002CB                     U3P1            equ	715	;# 
 16115   0002CB                     U3P1L           equ	715	;# 
 16116   0002CD                     U3P2            equ	717	;# 
 16117   0002CD                     U3P2L           equ	717	;# 
 16118   0002CF                     U3P3            equ	719	;# 
 16119   0002CF                     U3P3L           equ	719	;# 
 16120   0002D1                     U3CON0          equ	721	;# 
 16121   0002D2                     U3CON1          equ	722	;# 
 16122   0002D3                     U3CON2          equ	723	;# 
 16123   0002D4                     U3BRG           equ	724	;# 
 16124   0002D4                     U3BRGL          equ	724	;# 
 16125   0002D5                     U3BRGH          equ	725	;# 
 16126   0002D6                     U3FIFO          equ	726	;# 
 16127   0002D7                     U3UIR           equ	727	;# 
 16128   0002D8                     U3ERRIR         equ	728	;# 
 16129   0002D9                     U3ERRIE         equ	729	;# 
 16130   0002DA                     U4RXB           equ	730	;# 
 16131   0002DA                     U4RXBL          equ	730	;# 
 16132   0002DC                     U4TXB           equ	732	;# 
 16133   0002DC                     U4TXBL          equ	732	;# 
 16134   0002DE                     U4P1            equ	734	;# 
 16135   0002DE                     U4P1L           equ	734	;# 
 16136   0002E0                     U4P2            equ	736	;# 
 16137   0002E0                     U4P2L           equ	736	;# 
 16138   0002E2                     U4P3            equ	738	;# 
 16139   0002E2                     U4P3L           equ	738	;# 
 16140   0002E4                     U4CON0          equ	740	;# 
 16141   0002E5                     U4CON1          equ	741	;# 
 16142   0002E6                     U4CON2          equ	742	;# 
 16143   0002E7                     U4BRG           equ	743	;# 
 16144   0002E7                     U4BRGL          equ	743	;# 
 16145   0002E8                     U4BRGH          equ	744	;# 
 16146   0002E9                     U4FIFO          equ	745	;# 
 16147   0002EA                     U4UIR           equ	746	;# 
 16148   0002EB                     U4ERRIR         equ	747	;# 
 16149   0002EC                     U4ERRIE         equ	748	;# 
 16150   0002ED                     U5RXB           equ	749	;# 
 16151   0002ED                     U5RXBL          equ	749	;# 
 16152   0002EF                     U5TXB           equ	751	;# 
 16153   0002EF                     U5TXBL          equ	751	;# 
 16154   0002F1                     U5P1            equ	753	;# 
 16155   0002F1                     U5P1L           equ	753	;# 
 16156   0002F3                     U5P2            equ	755	;# 
 16157   0002F3                     U5P2L           equ	755	;# 
 16158   0002F5                     U5P3            equ	757	;# 
 16159   0002F5                     U5P3L           equ	757	;# 
 16160   0002F7                     U5CON0          equ	759	;# 
 16161   0002F8                     U5CON1          equ	760	;# 
 16162   0002F9                     U5CON2          equ	761	;# 
 16163   0002FA                     U5BRG           equ	762	;# 
 16164   0002FA                     U5BRGL          equ	762	;# 
 16165   0002FB                     U5BRGH          equ	763	;# 
 16166   0002FC                     U5FIFO          equ	764	;# 
 16167   0002FD                     U5UIR           equ	765	;# 
 16168   0002FE                     U5ERRIR         equ	766	;# 
 16169   0002FF                     U5ERRIE         equ	767	;# 
 16170   000300                     SMT1TMR         equ	768	;# 
 16171   000300                     SMT1TMRL        equ	768	;# 
 16172   000301                     SMT1TMRH        equ	769	;# 
 16173   000302                     SMT1TMRU        equ	770	;# 
 16174   000303                     SMT1CPR         equ	771	;# 
 16175   000303                     SMT1CPRL        equ	771	;# 
 16176   000304                     SMT1CPRH        equ	772	;# 
 16177   000305                     SMT1CPRU        equ	773	;# 
 16178   000306                     SMT1CPW         equ	774	;# 
 16179   000306                     SMT1CPWL        equ	774	;# 
 16180   000307                     SMT1CPWH        equ	775	;# 
 16181   000308                     SMT1CPWU        equ	776	;# 
 16182   000309                     SMT1PR          equ	777	;# 
 16183   000309                     SMT1PRL         equ	777	;# 
 16184   00030A                     SMT1PRH         equ	778	;# 
 16185   00030B                     SMT1PRU         equ	779	;# 
 16186   00030C                     SMT1CON0        equ	780	;# 
 16187   00030D                     SMT1CON1        equ	781	;# 
 16188   00030E                     SMT1STAT        equ	782	;# 
 16189   00030F                     SMT1CLK         equ	783	;# 
 16190   000310                     SMT1SIG         equ	784	;# 
 16191   000311                     SMT1WIN         equ	785	;# 
 16192   000318                     TMR0L           equ	792	;# 
 16193   000318                     TMR0            equ	792	;# 
 16194   000319                     TMR0H           equ	793	;# 
 16195   000319                     PR0             equ	793	;# 
 16196   00031A                     T0CON0          equ	794	;# 
 16197   00031B                     T0CON1          equ	795	;# 
 16198   00031C                     TMR1            equ	796	;# 
 16199   00031C                     TMR1L           equ	796	;# 
 16200   00031D                     TMR1H           equ	797	;# 
 16201   00031E                     T1CON           equ	798	;# 
 16202   00031E                     TMR1CON         equ	798	;# 
 16203   00031F                     T1GCON          equ	799	;# 
 16204   00031F                     TMR1GCON        equ	799	;# 
 16205   000320                     T1GATE          equ	800	;# 
 16206   000320                     TMR1GATE        equ	800	;# 
 16207   000321                     T1CLK           equ	801	;# 
 16208   000321                     TMR1CLK         equ	801	;# 
 16209   000321                     PR1             equ	801	;# 
 16210   000322                     T2TMR           equ	802	;# 
 16211   000322                     TMR2            equ	802	;# 
 16212   000323                     T2PR            equ	803	;# 
 16213   000323                     PR2             equ	803	;# 
 16214   000324                     T2CON           equ	804	;# 
 16215   000325                     T2HLT           equ	805	;# 
 16216   000326                     T2CLKCON        equ	806	;# 
 16217   000326                     T2CLK           equ	806	;# 
 16218   000327                     T2RST           equ	807	;# 
 16219   000328                     TMR3            equ	808	;# 
 16220   000328                     TMR3L           equ	808	;# 
 16221   000329                     TMR3H           equ	809	;# 
 16222   00032A                     T3CON           equ	810	;# 
 16223   00032A                     TMR3CON         equ	810	;# 
 16224   00032B                     T3GCON          equ	811	;# 
 16225   00032B                     TMR3GCON        equ	811	;# 
 16226   00032C                     T3GATE          equ	812	;# 
 16227   00032C                     TMR3GATE        equ	812	;# 
 16228   00032D                     T3CLK           equ	813	;# 
 16229   00032D                     TMR3CLK         equ	813	;# 
 16230   00032D                     PR3             equ	813	;# 
 16231   00032E                     T4TMR           equ	814	;# 
 16232   00032E                     TMR4            equ	814	;# 
 16233   00032F                     T4PR            equ	815	;# 
 16234   00032F                     PR4             equ	815	;# 
 16235   000330                     T4CON           equ	816	;# 
 16236   000331                     T4HLT           equ	817	;# 
 16237   000332                     T4CLKCON        equ	818	;# 
 16238   000332                     T4CLK           equ	818	;# 
 16239   000333                     T4RST           equ	819	;# 
 16240   000334                     TMR5            equ	820	;# 
 16241   000334                     TMR5L           equ	820	;# 
 16242   000335                     TMR5H           equ	821	;# 
 16243   000336                     T5CON           equ	822	;# 
 16244   000336                     TMR5CON         equ	822	;# 
 16245   000337                     T5GCON          equ	823	;# 
 16246   000337                     TMR5GCON        equ	823	;# 
 16247   000338                     T5GATE          equ	824	;# 
 16248   000338                     TMR5GATE        equ	824	;# 
 16249   000339                     T5CLK           equ	825	;# 
 16250   000339                     TMR5CLK         equ	825	;# 
 16251   000339                     PR5             equ	825	;# 
 16252   00033A                     T6TMR           equ	826	;# 
 16253   00033A                     TMR6            equ	826	;# 
 16254   00033B                     T6PR            equ	827	;# 
 16255   00033B                     PR6             equ	827	;# 
 16256   00033C                     T6CON           equ	828	;# 
 16257   00033D                     T6HLT           equ	829	;# 
 16258   00033E                     T6CLKCON        equ	830	;# 
 16259   00033E                     T6CLK           equ	830	;# 
 16260   00033F                     T6RST           equ	831	;# 
 16261   000340                     CCPR1           equ	832	;# 
 16262   000340                     CCPR1L          equ	832	;# 
 16263   000341                     CCPR1H          equ	833	;# 
 16264   000342                     CCP1CON         equ	834	;# 
 16265   000343                     CCP1CAP         equ	835	;# 
 16266   000344                     CCPR2           equ	836	;# 
 16267   000344                     CCPR2L          equ	836	;# 
 16268   000345                     CCPR2H          equ	837	;# 
 16269   000346                     CCP2CON         equ	838	;# 
 16270   000347                     CCP2CAP         equ	839	;# 
 16271   000348                     CCPR3           equ	840	;# 
 16272   000348                     CCPR3L          equ	840	;# 
 16273   000349                     CCPR3H          equ	841	;# 
 16274   00034A                     CCP3CON         equ	842	;# 
 16275   00034B                     CCP3CAP         equ	843	;# 
 16276   00034C                     CCPTMRS0        equ	844	;# 
 16277   00034F                     CRCDATA         equ	847	;# 
 16278   00034F                     CRCDATAL        equ	847	;# 
 16279   000350                     CRCDATAH        equ	848	;# 
 16280   000351                     CRCDATAU        equ	849	;# 
 16281   000352                     CRCDATAT        equ	850	;# 
 16282   000353                     CRCOUT          equ	851	;# 
 16283   000353                     CRCSHFT         equ	851	;# 
 16284   000353                     CRCXOR          equ	851	;# 
 16285   000353                     CRCOUTL         equ	851	;# 
 16286   000353                     CRCSHFTL        equ	851	;# 
 16287   000353                     CRCSHIFTL       equ	851	;# 
 16288   000353                     CRCXORL         equ	851	;# 
 16289   000354                     CRCOUTH         equ	852	;# 
 16290   000354                     CRCSHFTH        equ	852	;# 
 16291   000354                     CRCSHIFTH       equ	852	;# 
 16292   000354                     CRCXORH         equ	852	;# 
 16293   000355                     CRCOUTU         equ	853	;# 
 16294   000355                     CRCSHFTU        equ	853	;# 
 16295   000355                     CRCSHIFTU       equ	853	;# 
 16296   000355                     CRCXORU         equ	853	;# 
 16297   000356                     CRCOUTT         equ	854	;# 
 16298   000356                     CRCSHFTT        equ	854	;# 
 16299   000356                     CRCSHIFTT       equ	854	;# 
 16300   000356                     CRCXORT         equ	854	;# 
 16301   000357                     CRCCON0         equ	855	;# 
 16302   000358                     CRCCON1         equ	856	;# 
 16303   000359                     CRCCON2         equ	857	;# 
 16304   00035A                     SCANLADR        equ	858	;# 
 16305   00035A                     SCANLADRL       equ	858	;# 
 16306   00035B                     SCANLADRH       equ	859	;# 
 16307   00035C                     SCANLADRU       equ	860	;# 
 16308   00035D                     SCANHADR        equ	861	;# 
 16309   00035D                     SCANHADRL       equ	861	;# 
 16310   00035E                     SCANHADRH       equ	862	;# 
 16311   00035F                     SCANHADRU       equ	863	;# 
 16312   000360                     SCANCON0        equ	864	;# 
 16313   000361                     SCANTRIG        equ	865	;# 
 16314   000362                     IPR0            equ	866	;# 
 16315   000363                     IPR1            equ	867	;# 
 16316   000364                     IPR2            equ	868	;# 
 16317   000365                     IPR3            equ	869	;# 
 16318   000366                     IPR4            equ	870	;# 
 16319   000367                     IPR5            equ	871	;# 
 16320   000368                     IPR6            equ	872	;# 
 16321   000369                     IPR7            equ	873	;# 
 16322   00036A                     IPR8            equ	874	;# 
 16323   00036B                     IPR9            equ	875	;# 
 16324   00036C                     IPR10           equ	876	;# 
 16325   00036D                     IPR11           equ	877	;# 
 16326   00036E                     IPR12           equ	878	;# 
 16327   00036F                     IPR13           equ	879	;# 
 16328   000370                     IPR14           equ	880	;# 
 16329   000371                     IPR15           equ	881	;# 
 16330   000373                     STATUS_CSHAD    equ	883	;# 
 16331   000374                     WREG_CSHAD      equ	884	;# 
 16332   000375                     BSR_CSHAD       equ	885	;# 
 16333   000376                     SHADCON         equ	886	;# 
 16334   000377                     STATUS_SHAD     equ	887	;# 
 16335   000378                     WREG_SHAD       equ	888	;# 
 16336   000379                     BSR_SHAD        equ	889	;# 
 16337   00037A                     PCLATH_SHAD     equ	890	;# 
 16338   00037B                     PCLATU_SHAD     equ	891	;# 
 16339   00037C                     FSR0SH          equ	892	;# 
 16340   00037C                     FSR0L_SHAD      equ	892	;# 
 16341   00037D                     FSR0H_SHAD      equ	893	;# 
 16342   00037E                     FSR1SH          equ	894	;# 
 16343   00037E                     FSR1L_SHAD      equ	894	;# 
 16344   00037F                     FSR1H_SHAD      equ	895	;# 
 16345   000380                     FSR2SH          equ	896	;# 
 16346   000380                     FSR2L_SHAD      equ	896	;# 
 16347   000381                     FSR2H_SHAD      equ	897	;# 
 16348   000382                     PRODSH          equ	898	;# 
 16349   000382                     PRODL_SHAD      equ	898	;# 
 16350   000383                     PRODH_SHAD      equ	899	;# 
 16351   000387                     TU16ACON0       equ	903	;# 
 16352   000388                     TU16ACON1       equ	904	;# 
 16353   000389                     TU16AHLT        equ	905	;# 
 16354   00038A                     TU16APS         equ	906	;# 
 16355   00038B                     TU16ATMR        equ	907	;# 
 16356   00038B                     TU16ACR         equ	907	;# 
 16357   00038B                     TU16ATMRL       equ	907	;# 
 16358   00038B                     TU16ACRL        equ	907	;# 
 16359   00038C                     TU16ATMRH       equ	908	;# 
 16360   00038C                     TU16ACRH        equ	908	;# 
 16361   00038D                     TU16APR         equ	909	;# 
 16362   00038D                     TU16APRL        equ	909	;# 
 16363   00038E                     TU16APRH        equ	910	;# 
 16364   00038F                     TU16ACLK        equ	911	;# 
 16365   000390                     TU16AERS        equ	912	;# 
 16366   000393                     TU16BCON0       equ	915	;# 
 16367   000394                     TU16BCON1       equ	916	;# 
 16368   000395                     TU16BHLT        equ	917	;# 
 16369   000396                     TU16BPS         equ	918	;# 
 16370   000397                     TU16BTMR        equ	919	;# 
 16371   000397                     TU16BCR         equ	919	;# 
 16372   000397                     TU16BTMRL       equ	919	;# 
 16373   000397                     TU16BCRL        equ	919	;# 
 16374   000398                     TU16BTMRH       equ	920	;# 
 16375   000398                     TU16BCRH        equ	920	;# 
 16376   000399                     TU16BPR         equ	921	;# 
 16377   000399                     TU16BPRL        equ	921	;# 
 16378   00039A                     TU16BPRH        equ	922	;# 
 16379   00039B                     TU16BCLK        equ	923	;# 
 16380   00039C                     TU16BERS        equ	924	;# 
 16381   0003BB                     TUCHAIN         equ	955	;# 
 16382   0003BC                     CWG1CLK         equ	956	;# 
 16383   0003BC                     CWG1CLKCON      equ	956	;# 
 16384   0003BD                     CWG1ISM         equ	957	;# 
 16385   0003BE                     CWG1DBR         equ	958	;# 
 16386   0003BF                     CWG1DBF         equ	959	;# 
 16387   0003C0                     CWG1CON0        equ	960	;# 
 16388   0003C1                     CWG1CON1        equ	961	;# 
 16389   0003C2                     CWG1AS0         equ	962	;# 
 16390   0003C3                     CWG1AS1         equ	963	;# 
 16391   0003C4                     CWG1STR         equ	964	;# 
 16392   0003C5                     CWG2CLK         equ	965	;# 
 16393   0003C5                     CWG2CLKCON      equ	965	;# 
 16394   0003C6                     CWG2ISM         equ	966	;# 
 16395   0003C7                     CWG2DBR         equ	967	;# 
 16396   0003C8                     CWG2DBF         equ	968	;# 
 16397   0003C9                     CWG2CON0        equ	969	;# 
 16398   0003CA                     CWG2CON1        equ	970	;# 
 16399   0003CB                     CWG2AS0         equ	971	;# 
 16400   0003CC                     CWG2AS1         equ	972	;# 
 16401   0003CD                     CWG2STR         equ	973	;# 
 16402   0003CE                     CWG3CLK         equ	974	;# 
 16403   0003CE                     CWG3CLKCON      equ	974	;# 
 16404   0003CF                     CWG3ISM         equ	975	;# 
 16405   0003D0                     CWG3DBR         equ	976	;# 
 16406   0003D1                     CWG3DBF         equ	977	;# 
 16407   0003D2                     CWG3CON0        equ	978	;# 
 16408   0003D3                     CWG3CON1        equ	979	;# 
 16409   0003D4                     CWG3AS0         equ	980	;# 
 16410   0003D5                     CWG3AS1         equ	981	;# 
 16411   0003D6                     CWG3STR         equ	982	;# 
 16412   0003D7                     FVRCON          equ	983	;# 
 16413   0003D8                     ADCPCON         equ	984	;# 
 16414   0003D8                     ADCP            equ	984	;# 
 16415   0003D9                     ADLTH           equ	985	;# 
 16416   0003D9                     ADLTHL          equ	985	;# 
 16417   0003DA                     ADLTHH          equ	986	;# 
 16418   0003DB                     ADUTH           equ	987	;# 
 16419   0003DB                     ADUTHL          equ	987	;# 
 16420   0003DC                     ADUTHH          equ	988	;# 
 16421   0003DD                     ADERR           equ	989	;# 
 16422   0003DD                     ADERRL          equ	989	;# 
 16423   0003DE                     ADERRH          equ	990	;# 
 16424   0003DF                     ADSTPT          equ	991	;# 
 16425   0003DF                     ADSTPTL         equ	991	;# 
 16426   0003E0                     ADSTPTH         equ	992	;# 
 16427   0003E1                     ADFLTR          equ	993	;# 
 16428   0003E1                     ADFLTRL         equ	993	;# 
 16429   0003E2                     ADFLTRH         equ	994	;# 
 16430   0003E3                     ADACC           equ	995	;# 
 16431   0003E3                     ADACCL          equ	995	;# 
 16432   0003E4                     ADACCH          equ	996	;# 
 16433   0003E5                     ADACCU          equ	997	;# 
 16434   0003E6                     ADCNT           equ	998	;# 
 16435   0003E7                     ADRPT           equ	999	;# 
 16436   0003E8                     ADPREV          equ	1000	;# 
 16437   0003E8                     ADPREVL         equ	1000	;# 
 16438   0003E9                     ADPREVH         equ	1001	;# 
 16439   0003EA                     ADRES           equ	1002	;# 
 16440   0003EA                     ADRESL          equ	1002	;# 
 16441   0003EB                     ADRESH          equ	1003	;# 
 16442   0003EC                     ADPCH           equ	1004	;# 
 16443   0003EE                     ADACQ           equ	1006	;# 
 16444   0003EE                     ADACQL          equ	1006	;# 
 16445   0003EF                     ADACQH          equ	1007	;# 
 16446   0003F0                     ADCAP           equ	1008	;# 
 16447   0003F1                     ADPRE           equ	1009	;# 
 16448   0003F1                     ADPREL          equ	1009	;# 
 16449   0003F2                     ADPREH          equ	1010	;# 
 16450   0003F3                     ADCON0          equ	1011	;# 
 16451   0003F4                     ADCON1          equ	1012	;# 
 16452   0003F5                     ADCON2          equ	1013	;# 
 16453   0003F6                     ADCON3          equ	1014	;# 
 16454   0003F7                     ADSTAT          equ	1015	;# 
 16455   0003F8                     ADREF           equ	1016	;# 
 16456   0003F9                     ADACT           equ	1017	;# 
 16457   0003FA                     ADCLK           equ	1018	;# 
 16458   0003FB                     ADCTX           equ	1019	;# 
 16459   0003FC                     ADCSEL1         equ	1020	;# 
 16460   0003FD                     ADCSEL2         equ	1021	;# 
 16461   0003FE                     ADCSEL3         equ	1022	;# 
 16462   0003FF                     ADCSEL4         equ	1023	;# 
 16463   000400                     ANSELA          equ	1024	;# 
 16464   000401                     WPUA            equ	1025	;# 
 16465   000402                     ODCONA          equ	1026	;# 
 16466   000403                     SLRCONA         equ	1027	;# 
 16467   000404                     INLVLA          equ	1028	;# 
 16468   000405                     IOCAP           equ	1029	;# 
 16469   000406                     IOCAN           equ	1030	;# 
 16470   000407                     IOCAF           equ	1031	;# 
 16471   000408                     ANSELB          equ	1032	;# 
 16472   000409                     WPUB            equ	1033	;# 
 16473   00040A                     ODCONB          equ	1034	;# 
 16474   00040B                     SLRCONB         equ	1035	;# 
 16475   00040C                     INLVLB          equ	1036	;# 
 16476   00040D                     IOCBP           equ	1037	;# 
 16477   00040E                     IOCBN           equ	1038	;# 
 16478   00040F                     IOCBF           equ	1039	;# 
 16479   000410                     ANSELC          equ	1040	;# 
 16480   000411                     WPUC            equ	1041	;# 
 16481   000412                     ODCONC          equ	1042	;# 
 16482   000413                     SLRCONC         equ	1043	;# 
 16483   000414                     INLVLC          equ	1044	;# 
 16484   000415                     IOCCP           equ	1045	;# 
 16485   000416                     IOCCN           equ	1046	;# 
 16486   000417                     IOCCF           equ	1047	;# 
 16487   000421                     WPUE            equ	1057	;# 
 16488   000424                     INLVLE          equ	1060	;# 
 16489   000425                     IOCEP           equ	1061	;# 
 16490   000426                     IOCEN           equ	1062	;# 
 16491   000427                     IOCEF           equ	1063	;# 
 16492   000440                     NCO1ACC         equ	1088	;# 
 16493   000440                     NCO1ACCL        equ	1088	;# 
 16494   000441                     NCO1ACCH        equ	1089	;# 
 16495   000442                     NCO1ACCU        equ	1090	;# 
 16496   000443                     NCO1INC         equ	1091	;# 
 16497   000443                     NCO1INCL        equ	1091	;# 
 16498   000444                     NCO1INCH        equ	1092	;# 
 16499   000445                     NCO1INCU        equ	1093	;# 
 16500   000446                     NCO1CON         equ	1094	;# 
 16501   000447                     NCO1CLK         equ	1095	;# 
 16502   000448                     NCO2ACC         equ	1096	;# 
 16503   000448                     NCO2ACCL        equ	1096	;# 
 16504   000449                     NCO2ACCH        equ	1097	;# 
 16505   00044A                     NCO2ACCU        equ	1098	;# 
 16506   00044B                     NCO2INC         equ	1099	;# 
 16507   00044B                     NCO2INCL        equ	1099	;# 
 16508   00044C                     NCO2INCH        equ	1100	;# 
 16509   00044D                     NCO2INCU        equ	1101	;# 
 16510   00044E                     NCO2CON         equ	1102	;# 
 16511   00044F                     NCO2CLK         equ	1103	;# 
 16512   000450                     NCO3ACC         equ	1104	;# 
 16513   000450                     NCO3ACCL        equ	1104	;# 
 16514   000451                     NCO3ACCH        equ	1105	;# 
 16515   000452                     NCO3ACCU        equ	1106	;# 
 16516   000453                     NCO3INC         equ	1107	;# 
 16517   000453                     NCO3INCL        equ	1107	;# 
 16518   000454                     NCO3INCH        equ	1108	;# 
 16519   000455                     NCO3INCU        equ	1109	;# 
 16520   000456                     NCO3CON         equ	1110	;# 
 16521   000457                     NCO3CLK         equ	1111	;# 
 16522   000458                     FSCMCON         equ	1112	;# 
 16523   000459                     IVTLOCK         equ	1113	;# 
 16524   00045A                     IVTAD           equ	1114	;# 
 16525   00045A                     IVTADL          equ	1114	;# 
 16526   00045B                     IVTADH          equ	1115	;# 
 16527   00045C                     IVTADU          equ	1116	;# 
 16528   00045D                     IVTBASE         equ	1117	;# 
 16529   00045D                     IVTBASEL        equ	1117	;# 
 16530   00045E                     IVTBASEH        equ	1118	;# 
 16531   00045F                     IVTBASEU        equ	1119	;# 
 16532   000460                     PWM1ERS         equ	1120	;# 
 16533   000461                     PWM1CLK         equ	1121	;# 
 16534   000462                     PWM1LDS         equ	1122	;# 
 16535   000463                     PWM1PR          equ	1123	;# 
 16536   000463                     PWM1PRL         equ	1123	;# 
 16537   000464                     PWM1PRH         equ	1124	;# 
 16538   000465                     PWM1CPRE        equ	1125	;# 
 16539   000466                     PWM1PIPOS       equ	1126	;# 
 16540   000467                     PWM1GIR         equ	1127	;# 
 16541   000468                     PWM1GIE         equ	1128	;# 
 16542   000469                     PWM1CON         equ	1129	;# 
 16543   00046A                     PWM1S1CFG       equ	1130	;# 
 16544   00046B                     PWM1S1P1        equ	1131	;# 
 16545   00046B                     PWM1S1P1L       equ	1131	;# 
 16546   00046C                     PWM1S1P1H       equ	1132	;# 
 16547   00046D                     PWM1S1P2        equ	1133	;# 
 16548   00046D                     PWM1S1P2L       equ	1133	;# 
 16549   00046E                     PWM1S1P2H       equ	1134	;# 
 16550   00046F                     PWM2ERS         equ	1135	;# 
 16551   000470                     PWM2CLK         equ	1136	;# 
 16552   000471                     PWM2LDS         equ	1137	;# 
 16553   000472                     PWM2PR          equ	1138	;# 
 16554   000472                     PWM2PRL         equ	1138	;# 
 16555   000473                     PWM2PRH         equ	1139	;# 
 16556   000474                     PWM2CPRE        equ	1140	;# 
 16557   000475                     PWM2PIPOS       equ	1141	;# 
 16558   000476                     PWM2GIR         equ	1142	;# 
 16559   000477                     PWM2GIE         equ	1143	;# 
 16560   000478                     PWM2CON         equ	1144	;# 
 16561   000479                     PWM2S1CFG       equ	1145	;# 
 16562   00047A                     PWM2S1P1        equ	1146	;# 
 16563   00047A                     PWM2S1P1L       equ	1146	;# 
 16564   00047B                     PWM2S1P1H       equ	1147	;# 
 16565   00047C                     PWM2S1P2        equ	1148	;# 
 16566   00047C                     PWM2S1P2L       equ	1148	;# 
 16567   00047D                     PWM2S1P2H       equ	1149	;# 
 16568   00047E                     PWM3ERS         equ	1150	;# 
 16569   00047F                     PWM3CLK         equ	1151	;# 
 16570   000480                     PWM3LDS         equ	1152	;# 
 16571   000481                     PWM3PR          equ	1153	;# 
 16572   000481                     PWM3PRL         equ	1153	;# 
 16573   000482                     PWM3PRH         equ	1154	;# 
 16574   000483                     PWM3CPRE        equ	1155	;# 
 16575   000484                     PWM3PIPOS       equ	1156	;# 
 16576   000485                     PWM3GIR         equ	1157	;# 
 16577   000486                     PWM3GIE         equ	1158	;# 
 16578   000487                     PWM3CON         equ	1159	;# 
 16579   000488                     PWM3S1CFG       equ	1160	;# 
 16580   000489                     PWM3S1P1        equ	1161	;# 
 16581   000489                     PWM3S1P1L       equ	1161	;# 
 16582   00048A                     PWM3S1P1H       equ	1162	;# 
 16583   00048B                     PWM3S1P2        equ	1163	;# 
 16584   00048B                     PWM3S1P2L       equ	1163	;# 
 16585   00048C                     PWM3S1P2H       equ	1164	;# 
 16586   00048D                     PWM4ERS         equ	1165	;# 
 16587   00048E                     PWM4CLK         equ	1166	;# 
 16588   00048F                     PWM4LDS         equ	1167	;# 
 16589   000490                     PWM4PR          equ	1168	;# 
 16590   000490                     PWM4PRL         equ	1168	;# 
 16591   000491                     PWM4PRH         equ	1169	;# 
 16592   000492                     PWM4CPRE        equ	1170	;# 
 16593   000493                     PWM4PIPOS       equ	1171	;# 
 16594   000494                     PWM4GIR         equ	1172	;# 
 16595   000495                     PWM4GIE         equ	1173	;# 
 16596   000496                     PWM4CON         equ	1174	;# 
 16597   000497                     PWM4S1CFG       equ	1175	;# 
 16598   000498                     PWM4S1P1        equ	1176	;# 
 16599   000498                     PWM4S1P1L       equ	1176	;# 
 16600   000499                     PWM4S1P1H       equ	1177	;# 
 16601   00049A                     PWM4S1P2        equ	1178	;# 
 16602   00049A                     PWM4S1P2L       equ	1178	;# 
 16603   00049B                     PWM4S1P2H       equ	1179	;# 
 16604   00049C                     PWMLOAD         equ	1180	;# 
 16605   00049D                     PWMEN           equ	1181	;# 
 16606   00049E                     PIE0            equ	1182	;# 
 16607   00049F                     PIE1            equ	1183	;# 
 16608   0004A0                     PIE2            equ	1184	;# 
 16609   0004A1                     PIE3            equ	1185	;# 
 16610   0004A2                     PIE4            equ	1186	;# 
 16611   0004A3                     PIE5            equ	1187	;# 
 16612   0004A4                     PIE6            equ	1188	;# 
 16613   0004A5                     PIE7            equ	1189	;# 
 16614   0004A6                     PIE8            equ	1190	;# 
 16615   0004A7                     PIE9            equ	1191	;# 
 16616   0004A8                     PIE10           equ	1192	;# 
 16617   0004A9                     PIE11           equ	1193	;# 
 16618   0004AA                     PIE12           equ	1194	;# 
 16619   0004AB                     PIE13           equ	1195	;# 
 16620   0004AC                     PIE14           equ	1196	;# 
 16621   0004AD                     PIE15           equ	1197	;# 
 16622   0004AE                     PIR0            equ	1198	;# 
 16623   0004AF                     PIR1            equ	1199	;# 
 16624   0004B0                     PIR2            equ	1200	;# 
 16625   0004B1                     PIR3            equ	1201	;# 
 16626   0004B2                     PIR4            equ	1202	;# 
 16627   0004B3                     PIR5            equ	1203	;# 
 16628   0004B4                     PIR6            equ	1204	;# 
 16629   0004B5                     PIR7            equ	1205	;# 
 16630   0004B6                     PIR8            equ	1206	;# 
 16631   0004B7                     PIR9            equ	1207	;# 
 16632   0004B8                     PIR10           equ	1208	;# 
 16633   0004B9                     PIR11           equ	1209	;# 
 16634   0004BA                     PIR12           equ	1210	;# 
 16635   0004BB                     PIR13           equ	1211	;# 
 16636   0004BC                     PIR14           equ	1212	;# 
 16637   0004BD                     PIR15           equ	1213	;# 
 16638   0004BE                     LATA            equ	1214	;# 
 16639   0004BF                     LATB            equ	1215	;# 
 16640   0004C0                     LATC            equ	1216	;# 
 16641   0004C6                     TRISA           equ	1222	;# 
 16642   0004C7                     TRISB           equ	1223	;# 
 16643   0004C8                     TRISC           equ	1224	;# 
 16644   0004CA                     TRISE           equ	1226	;# 
 16645   0004CE                     PORTA           equ	1230	;# 
 16646   0004CF                     PORTB           equ	1231	;# 
 16647   0004D0                     PORTC           equ	1232	;# 
 16648   0004D2                     PORTE           equ	1234	;# 
 16649   0004D6                     INTCON0         equ	1238	;# 
 16650   0004D7                     INTCON1         equ	1239	;# 
 16651   0004D8                     STATUS          equ	1240	;# 
 16652   0004D9                     FSR2            equ	1241	;# 
 16653   0004D9                     FSR2L           equ	1241	;# 
 16654   0004DA                     FSR2H           equ	1242	;# 
 16655   0004DB                     PLUSW2          equ	1243	;# 
 16656   0004DC                     PREINC2         equ	1244	;# 
 16657   0004DD                     POSTDEC2        equ	1245	;# 
 16658   0004DE                     POSTINC2        equ	1246	;# 
 16659   0004DF                     INDF2           equ	1247	;# 
 16660   0004E0                     BSR             equ	1248	;# 
 16661   0004E1                     FSR1            equ	1249	;# 
 16662   0004E1                     FSR1L           equ	1249	;# 
 16663   0004E2                     FSR1H           equ	1250	;# 
 16664   0004E3                     PLUSW1          equ	1251	;# 
 16665   0004E4                     PREINC1         equ	1252	;# 
 16666   0004E5                     POSTDEC1        equ	1253	;# 
 16667   0004E6                     POSTINC1        equ	1254	;# 
 16668   0004E7                     INDF1           equ	1255	;# 
 16669   0004E8                     WREG            equ	1256	;# 
 16670   0004E9                     FSR0            equ	1257	;# 
 16671   0004E9                     FSR0L           equ	1257	;# 
 16672   0004EA                     FSR0H           equ	1258	;# 
 16673   0004EB                     PLUSW0          equ	1259	;# 
 16674   0004EC                     PREINC0         equ	1260	;# 
 16675   0004ED                     POSTDEC0        equ	1261	;# 
 16676   0004EE                     POSTINC0        equ	1262	;# 
 16677   0004EF                     INDF0           equ	1263	;# 
 16678   0004F0                     PCON0           equ	1264	;# 
 16679   0004F1                     PCON1           equ	1265	;# 
 16680   0004F2                     CPUDOZE         equ	1266	;# 
 16681   0004F3                     PROD            equ	1267	;# 
 16682   0004F3                     PRODL           equ	1267	;# 
 16683   0004F4                     PRODH           equ	1268	;# 
 16684   0004F5                     TABLAT          equ	1269	;# 
 16685   0004F6                     TBLPTR          equ	1270	;# 
 16686   0004F6                     TBLPTRL         equ	1270	;# 
 16687   0004F7                     TBLPTRH         equ	1271	;# 
 16688   0004F8                     TBLPTRU         equ	1272	;# 
 16689   0004F9                     PCLAT           equ	1273	;# 
 16690   0004F9                     PCL             equ	1273	;# 
 16691   0004FA                     PCLATH          equ	1274	;# 
 16692   0004FB                     PCLATU          equ	1275	;# 
 16693   0004FC                     STKPTR          equ	1276	;# 
 16694   0004FD                     TOS             equ	1277	;# 
 16695   0004FD                     TOSL            equ	1277	;# 
 16696   0004FE                     TOSH            equ	1278	;# 
 16697   0004FF                     TOSU            equ	1279	;# 
 16698   000038                     BOOTREG         equ	56	;# 
 16699   000039                     CLKRCON         equ	57	;# 
 16700   00003A                     CLKRCLK         equ	58	;# 
 16701   000040                     NVMCON0         equ	64	;# 
 16702   000041                     NVMCON1         equ	65	;# 
 16703   000042                     NVMLOCK         equ	66	;# 
 16704   000043                     NVMADR          equ	67	;# 
 16705   000043                     NVMADRL         equ	67	;# 
 16706   000044                     NVMADRH         equ	68	;# 
 16707   000045                     NVMADRU         equ	69	;# 
 16708   000046                     NVMDAT          equ	70	;# 
 16709   000046                     NVMDATL         equ	70	;# 
 16710   000047                     NVMDATH         equ	71	;# 
 16711   000048                     VREGCON         equ	72	;# 
 16712   000049                     BORCON          equ	73	;# 
 16713   00004A                     HLVDCON0        equ	74	;# 
 16714   00004B                     HLVDCON1        equ	75	;# 
 16715   00004C                     ZCDCON          equ	76	;# 
 16716   000060                     PMD0            equ	96	;# 
 16717   000061                     PMD1            equ	97	;# 
 16718   000062                     PMD2            equ	98	;# 
 16719   000063                     PMD3            equ	99	;# 
 16720   000064                     PMD4            equ	100	;# 
 16721   000065                     PMD5            equ	101	;# 
 16722   000066                     PMD6            equ	102	;# 
 16723   000067                     PMD7            equ	103	;# 
 16724   000068                     PMD8            equ	104	;# 
 16725   00006A                     MD1CON0         equ	106	;# 
 16726   00006B                     MD1CON1         equ	107	;# 
 16727   00006C                     MD1SRC          equ	108	;# 
 16728   00006D                     MD1CARL         equ	109	;# 
 16729   00006E                     MD1CARH         equ	110	;# 
 16730   00006F                     CMOUT           equ	111	;# 
 16731   000070                     CM1CON0         equ	112	;# 
 16732   000071                     CM1CON1         equ	113	;# 
 16733   000072                     CM1NCH          equ	114	;# 
 16734   000073                     CM1PCH          equ	115	;# 
 16735   000074                     CM2CON0         equ	116	;# 
 16736   000075                     CM2CON1         equ	117	;# 
 16737   000076                     CM2NCH          equ	118	;# 
 16738   000077                     CM2PCH          equ	119	;# 
 16739   000078                     WDTCON0         equ	120	;# 
 16740   000079                     WDTCON1         equ	121	;# 
 16741   00007A                     WDTPSL          equ	122	;# 
 16742   00007B                     WDTPSH          equ	123	;# 
 16743   00007C                     WDTTMR          equ	124	;# 
 16744   00007D                     DAC1DAT         equ	125	;# 
 16745   00007D                     DAC1DATL        equ	125	;# 
 16746   00007F                     DAC1CON         equ	127	;# 
 16747   000080                     SPI1RXB         equ	128	;# 
 16748   000081                     SPI1TXB         equ	129	;# 
 16749   000082                     SPI1TCNT        equ	130	;# 
 16750   000082                     SPI1TCNTL       equ	130	;# 
 16751   000083                     SPI1TCNTH       equ	131	;# 
 16752   000084                     SPI1CON0        equ	132	;# 
 16753   000085                     SPI1CON1        equ	133	;# 
 16754   000086                     SPI1CON2        equ	134	;# 
 16755   000087                     SPI1STATUS      equ	135	;# 
 16756   000088                     SPI1TWIDTH      equ	136	;# 
 16757   000089                     SPI1BAUD        equ	137	;# 
 16758   00008A                     SPI1INTF        equ	138	;# 
 16759   00008B                     SPI1INTE        equ	139	;# 
 16760   00008C                     SPI1CLK         equ	140	;# 
 16761   00008D                     SPI2RXB         equ	141	;# 
 16762   00008E                     SPI2TXB         equ	142	;# 
 16763   00008F                     SPI2TCNT        equ	143	;# 
 16764   00008F                     SPI2TCNTL       equ	143	;# 
 16765   000090                     SPI2TCNTH       equ	144	;# 
 16766   000091                     SPI2CON0        equ	145	;# 
 16767   000092                     SPI2CON1        equ	146	;# 
 16768   000093                     SPI2CON2        equ	147	;# 
 16769   000094                     SPI2STATUS      equ	148	;# 
 16770   000095                     SPI2TWIDTH      equ	149	;# 
 16771   000096                     SPI2BAUD        equ	150	;# 
 16772   000097                     SPI2INTF        equ	151	;# 
 16773   000098                     SPI2INTE        equ	152	;# 
 16774   000099                     SPI2CLK         equ	153	;# 
 16775   0000AC                     ACTCON          equ	172	;# 
 16776   0000AD                     OSCCON1         equ	173	;# 
 16777   0000AE                     OSCCON2         equ	174	;# 
 16778   0000AF                     OSCCON3         equ	175	;# 
 16779   0000B0                     OSCTUNE         equ	176	;# 
 16780   0000B1                     OSCFRQ          equ	177	;# 
 16781   0000B1                     OSCFREQ         equ	177	;# 
 16782   0000B2                     OSCSTAT         equ	178	;# 
 16783   0000B2                     OSCSTAT1        equ	178	;# 
 16784   0000B3                     OSCEN           equ	179	;# 
 16785   0000B4                     PRLOCK          equ	180	;# 
 16786   0000B5                     SCANPR          equ	181	;# 
 16787   0000B6                     DMA1PR          equ	182	;# 
 16788   0000B7                     DMA2PR          equ	183	;# 
 16789   0000B8                     DMA3PR          equ	184	;# 
 16790   0000B9                     DMA4PR          equ	185	;# 
 16791   0000BA                     DMA5PR          equ	186	;# 
 16792   0000BB                     DMA6PR          equ	187	;# 
 16793   0000BC                     DMA7PR          equ	188	;# 
 16794   0000BD                     DMA8PR          equ	189	;# 
 16795   0000BE                     MAINPR          equ	190	;# 
 16796   0000BF                     ISRPR           equ	191	;# 
 16797   0000D4                     CLCDATA         equ	212	;# 
 16798   0000D5                     CLCSELECT       equ	213	;# 
 16799   0000D6                     CLCnCON         equ	214	;# 
 16800   0000D7                     CLCnPOL         equ	215	;# 
 16801   0000D8                     CLCnSEL0        equ	216	;# 
 16802   0000D9                     CLCnSEL1        equ	217	;# 
 16803   0000DA                     CLCnSEL2        equ	218	;# 
 16804   0000DB                     CLCnSEL3        equ	219	;# 
 16805   0000DC                     CLCnGLS0        equ	220	;# 
 16806   0000DD                     CLCnGLS1        equ	221	;# 
 16807   0000DE                     CLCnGLS2        equ	222	;# 
 16808   0000DF                     CLCnGLS3        equ	223	;# 
 16809   0000E8                     DMASELECT       equ	232	;# 
 16810   0000E9                     DMAnBUF         equ	233	;# 
 16811   0000EA                     DMAnDCNT        equ	234	;# 
 16812   0000EA                     DMAnDCNTL       equ	234	;# 
 16813   0000EB                     DMAnDCNTH       equ	235	;# 
 16814   0000EC                     DMAnDPTR        equ	236	;# 
 16815   0000EC                     DMAnDPTRL       equ	236	;# 
 16816   0000ED                     DMAnDPTRH       equ	237	;# 
 16817   0000EE                     DMAnDSZ         equ	238	;# 
 16818   0000EE                     DMAnDSZL        equ	238	;# 
 16819   0000EF                     DMAnDSZH        equ	239	;# 
 16820   0000F0                     DMAnDSA         equ	240	;# 
 16821   0000F0                     DMAnDSAL        equ	240	;# 
 16822   0000F1                     DMAnDSAH        equ	241	;# 
 16823   0000F2                     DMAnSCNT        equ	242	;# 
 16824   0000F2                     DMAnSCNTL       equ	242	;# 
 16825   0000F3                     DMAnSCNTH       equ	243	;# 
 16826   0000F4                     DMAnSPTR        equ	244	;# 
 16827   0000F4                     DMAnSPTRL       equ	244	;# 
 16828   0000F5                     DMAnSPTRH       equ	245	;# 
 16829   0000F6                     DMAnSPTRU       equ	246	;# 
 16830   0000F7                     DMAnSSZ         equ	247	;# 
 16831   0000F7                     DMAnSSZL        equ	247	;# 
 16832   0000F8                     DMAnSSZH        equ	248	;# 
 16833   0000F9                     DMAnSSA         equ	249	;# 
 16834   0000F9                     DMAnSSAL        equ	249	;# 
 16835   0000FA                     DMAnSSAH        equ	250	;# 
 16836   0000FB                     DMAnSSAU        equ	251	;# 
 16837   0000FC                     DMAnCON0        equ	252	;# 
 16838   0000FD                     DMAnCON1        equ	253	;# 
 16839   0000FE                     DMAnAIRQ        equ	254	;# 
 16840   0000FF                     DMAnSIRQ        equ	255	;# 
 16841   000100                     C1CONL          equ	256	;# 
 16842   000101                     C1CONH          equ	257	;# 
 16843   000102                     C1CONU          equ	258	;# 
 16844   000103                     C1CONT          equ	259	;# 
 16845   000104                     C1NBTCFGL       equ	260	;# 
 16846   000105                     C1NBTCFGH       equ	261	;# 
 16847   000106                     C1NBTCFGU       equ	262	;# 
 16848   000107                     C1NBTCFGT       equ	263	;# 
 16849   000108                     C1DBTCFGL       equ	264	;# 
 16850   000109                     C1DBTCFGH       equ	265	;# 
 16851   00010A                     C1DBTCFGU       equ	266	;# 
 16852   00010B                     C1DBTCFGT       equ	267	;# 
 16853   00010C                     C1TDCL          equ	268	;# 
 16854   00010D                     C1TDCH          equ	269	;# 
 16855   00010E                     C1TDCU          equ	270	;# 
 16856   000110                     C1TBC           equ	272	;# 
 16857   000110                     C1TBCL          equ	272	;# 
 16858   000111                     C1TBCH          equ	273	;# 
 16859   000112                     C1TBCU          equ	274	;# 
 16860   000113                     C1TBCT          equ	275	;# 
 16861   000114                     C1TSCONL        equ	276	;# 
 16862   000115                     C1TSCONH        equ	277	;# 
 16863   000116                     C1TSCONU        equ	278	;# 
 16864   000117                     C1TSCONT        equ	279	;# 
 16865   000118                     C1VECL          equ	280	;# 
 16866   000119                     C1VECH          equ	281	;# 
 16867   00011A                     C1VECU          equ	282	;# 
 16868   00011B                     C1VECT          equ	283	;# 
 16869   00011C                     C1INTL          equ	284	;# 
 16870   00011D                     C1INTH          equ	285	;# 
 16871   00011E                     C1INTU          equ	286	;# 
 16872   00011F                     C1INTT          equ	287	;# 
 16873   000120                     C1RXIF          equ	288	;# 
 16874   000120                     C1RXIFL         equ	288	;# 
 16875   000121                     C1RXIFH         equ	289	;# 
 16876   000122                     C1RXIFU         equ	290	;# 
 16877   000123                     C1RXIFT         equ	291	;# 
 16878   000124                     C1TXIF          equ	292	;# 
 16879   000124                     C1TXIFL         equ	292	;# 
 16880   000125                     C1TXIFH         equ	293	;# 
 16881   000126                     C1TXIFU         equ	294	;# 
 16882   000127                     C1TXIFT         equ	295	;# 
 16883   000128                     C1RXOVIF        equ	296	;# 
 16884   000128                     C1RXOVIFL       equ	296	;# 
 16885   000129                     C1RXOVIFH       equ	297	;# 
 16886   00012A                     C1RXOVIFU       equ	298	;# 
 16887   00012B                     C1RXOVIFT       equ	299	;# 
 16888   00012C                     C1TXATIF        equ	300	;# 
 16889   00012C                     C1TXATIFL       equ	300	;# 
 16890   00012D                     C1TXATIFH       equ	301	;# 
 16891   00012E                     C1TXATIFU       equ	302	;# 
 16892   00012F                     C1TXATIFT       equ	303	;# 
 16893   000130                     C1TXREQ         equ	304	;# 
 16894   000130                     C1TXREQL        equ	304	;# 
 16895   000131                     C1TXREQH        equ	305	;# 
 16896   000132                     C1TXREQU        equ	306	;# 
 16897   000133                     C1TXREQT        equ	307	;# 
 16898   000134                     C1TRECL         equ	308	;# 
 16899   000135                     C1TRECH         equ	309	;# 
 16900   000136                     C1TRECU         equ	310	;# 
 16901   000137                     C1TRECT         equ	311	;# 
 16902   000138                     C1BDIAG0L       equ	312	;# 
 16903   000139                     C1BDIAG0H       equ	313	;# 
 16904   00013C                     C1BDIAG1L       equ	316	;# 
 16905   00013D                     C1BDIAG1H       equ	317	;# 
 16906   00013E                     C1BDIAG1U       equ	318	;# 
 16907   00013F                     C1BDIAG1T       equ	319	;# 
 16908   000140                     C1TEFCONL       equ	320	;# 
 16909   000141                     C1TEFCONH       equ	321	;# 
 16910   000142                     C1TEFCONU       equ	322	;# 
 16911   000143                     C1TEFCONT       equ	323	;# 
 16912   000144                     C1TEFSTAL       equ	324	;# 
 16913   000145                     C1TEFSTAH       equ	325	;# 
 16914   000146                     C1TEFSTAU       equ	326	;# 
 16915   000147                     C1TEFSTAT       equ	327	;# 
 16916   000148                     C1TEFUA         equ	328	;# 
 16917   000148                     C1TEFUAL        equ	328	;# 
 16918   000149                     C1TEFUAH        equ	329	;# 
 16919   00014A                     C1TEFUAU        equ	330	;# 
 16920   00014B                     C1TEFUAT        equ	331	;# 
 16921   00014C                     C1FIFOBA        equ	332	;# 
 16922   00014C                     C1FIFOBAL       equ	332	;# 
 16923   00014D                     C1FIFOBAH       equ	333	;# 
 16924   00014E                     C1FIFOBAU       equ	334	;# 
 16925   00014F                     C1FIFOBAT       equ	335	;# 
 16926   000150                     C1TXQCONL       equ	336	;# 
 16927   000151                     C1TXQCONH       equ	337	;# 
 16928   000152                     C1TXQCONU       equ	338	;# 
 16929   000153                     C1TXQCONT       equ	339	;# 
 16930   000154                     C1TXQSTAL       equ	340	;# 
 16931   000155                     C1TXQSTAH       equ	341	;# 
 16932   000156                     C1TXQSTAU       equ	342	;# 
 16933   000157                     C1TXQSTAT       equ	343	;# 
 16934   000158                     C1TXQUA         equ	344	;# 
 16935   000158                     C1TXQUAL        equ	344	;# 
 16936   000159                     C1TXQUAH        equ	345	;# 
 16937   00015A                     C1TXQUAU        equ	346	;# 
 16938   00015B                     C1TXQUAT        equ	347	;# 
 16939   00015C                     C1FIFOCON1      equ	348	;# 
 16940   00015C                     C1FIFOCON1L     equ	348	;# 
 16941   00015D                     C1FIFOCON1H     equ	349	;# 
 16942   00015E                     C1FIFOCON1U     equ	350	;# 
 16943   00015F                     C1FIFOCON1T     equ	351	;# 
 16944   000160                     C1FIFOSTA1      equ	352	;# 
 16945   000160                     C1FIFOSTA1L     equ	352	;# 
 16946   000161                     C1FIFOSTA1H     equ	353	;# 
 16947   000162                     C1FIFOSTA1U     equ	354	;# 
 16948   000163                     C1FIFOSTA1T     equ	355	;# 
 16949   000164                     C1FIFOUA1       equ	356	;# 
 16950   000164                     C1FIFOUA1L      equ	356	;# 
 16951   000165                     C1FIFOUA1H      equ	357	;# 
 16952   000166                     C1FIFOUA1U      equ	358	;# 
 16953   000167                     C1FIFOUA1T      equ	359	;# 
 16954   000168                     C1FIFOCON2      equ	360	;# 
 16955   000168                     C1FIFOCON2L     equ	360	;# 
 16956   000169                     C1FIFOCON2H     equ	361	;# 
 16957   00016A                     C1FIFOCON2U     equ	362	;# 
 16958   00016B                     C1FIFOCON2T     equ	363	;# 
 16959   00016C                     C1FIFOSTA2      equ	364	;# 
 16960   00016C                     C1FIFOSTA2L     equ	364	;# 
 16961   00016D                     C1FIFOSTA2H     equ	365	;# 
 16962   00016E                     C1FIFOSTA2U     equ	366	;# 
 16963   00016F                     C1FIFOSTA2T     equ	367	;# 
 16964   000170                     C1FIFOUA2       equ	368	;# 
 16965   000170                     C1FIFOUA2L      equ	368	;# 
 16966   000171                     C1FIFOUA2H      equ	369	;# 
 16967   000172                     C1FIFOUA2U      equ	370	;# 
 16968   000173                     C1FIFOUA2T      equ	371	;# 
 16969   000174                     C1FIFOCON3      equ	372	;# 
 16970   000174                     C1FIFOCON3L     equ	372	;# 
 16971   000175                     C1FIFOCON3H     equ	373	;# 
 16972   000176                     C1FIFOCON3U     equ	374	;# 
 16973   000177                     C1FIFOCON3T     equ	375	;# 
 16974   000178                     C1FIFOSTA3      equ	376	;# 
 16975   000178                     C1FIFOSTA3L     equ	376	;# 
 16976   000179                     C1FIFOSTA3H     equ	377	;# 
 16977   00017A                     C1FIFOSTA3U     equ	378	;# 
 16978   00017B                     C1FIFOSTA3T     equ	379	;# 
 16979   00017C                     C1FIFOUA3       equ	380	;# 
 16980   00017C                     C1FIFOUA3L      equ	380	;# 
 16981   00017D                     C1FIFOUA3H      equ	381	;# 
 16982   00017E                     C1FIFOUA3U      equ	382	;# 
 16983   00017F                     C1FIFOUA3T      equ	383	;# 
 16984   000180                     C1FLTCON0L      equ	384	;# 
 16985   000181                     C1FLTCON0H      equ	385	;# 
 16986   000182                     C1FLTCON0U      equ	386	;# 
 16987   000183                     C1FLTCON0T      equ	387	;# 
 16988   000184                     C1FLTCON1L      equ	388	;# 
 16989   000185                     C1FLTCON1H      equ	389	;# 
 16990   000186                     C1FLTCON1U      equ	390	;# 
 16991   000187                     C1FLTCON1T      equ	391	;# 
 16992   000188                     C1FLTCON2L      equ	392	;# 
 16993   000189                     C1FLTCON2H      equ	393	;# 
 16994   00018A                     C1FLTCON2U      equ	394	;# 
 16995   00018B                     C1FLTCON2T      equ	395	;# 
 16996   00018C                     C1FLTOBJ0       equ	396	;# 
 16997   00018C                     C1FLTOBJ0L      equ	396	;# 
 16998   00018D                     C1FLTOBJ0H      equ	397	;# 
 16999   00018E                     C1FLTOBJ0U      equ	398	;# 
 17000   00018F                     C1FLTOBJ0T      equ	399	;# 
 17001   000190                     C1MASK0         equ	400	;# 
 17002   000190                     C1MASK0L        equ	400	;# 
 17003   000191                     C1MASK0H        equ	401	;# 
 17004   000192                     C1MASK0U        equ	402	;# 
 17005   000193                     C1MASK0T        equ	403	;# 
 17006   000194                     C1FLTOBJ1       equ	404	;# 
 17007   000194                     C1FLTOBJ1L      equ	404	;# 
 17008   000195                     C1FLTOBJ1H      equ	405	;# 
 17009   000196                     C1FLTOBJ1U      equ	406	;# 
 17010   000197                     C1FLTOBJ1T      equ	407	;# 
 17011   000198                     C1MASK1         equ	408	;# 
 17012   000198                     C1MASK1L        equ	408	;# 
 17013   000199                     C1MASK1H        equ	409	;# 
 17014   00019A                     C1MASK1U        equ	410	;# 
 17015   00019B                     C1MASK1T        equ	411	;# 
 17016   00019C                     C1FLTOBJ2       equ	412	;# 
 17017   00019C                     C1FLTOBJ2L      equ	412	;# 
 17018   00019D                     C1FLTOBJ2H      equ	413	;# 
 17019   00019E                     C1FLTOBJ2U      equ	414	;# 
 17020   00019F                     C1FLTOBJ2T      equ	415	;# 
 17021   0001A0                     C1MASK2         equ	416	;# 
 17022   0001A0                     C1MASK2L        equ	416	;# 
 17023   0001A1                     C1MASK2H        equ	417	;# 
 17024   0001A2                     C1MASK2U        equ	418	;# 
 17025   0001A3                     C1MASK2T        equ	419	;# 
 17026   0001A4                     C1FLTOBJ3       equ	420	;# 
 17027   0001A4                     C1FLTOBJ3L      equ	420	;# 
 17028   0001A5                     C1FLTOBJ3H      equ	421	;# 
 17029   0001A6                     C1FLTOBJ3U      equ	422	;# 
 17030   0001A7                     C1FLTOBJ3T      equ	423	;# 
 17031   0001A8                     C1MASK3         equ	424	;# 
 17032   0001A8                     C1MASK3L        equ	424	;# 
 17033   0001A9                     C1MASK3H        equ	425	;# 
 17034   0001AA                     C1MASK3U        equ	426	;# 
 17035   0001AB                     C1MASK3T        equ	427	;# 
 17036   0001AC                     C1FLTOBJ4       equ	428	;# 
 17037   0001AC                     C1FLTOBJ4L      equ	428	;# 
 17038   0001AD                     C1FLTOBJ4H      equ	429	;# 
 17039   0001AE                     C1FLTOBJ4U      equ	430	;# 
 17040   0001AF                     C1FLTOBJ4T      equ	431	;# 
 17041   0001B0                     C1MASK4         equ	432	;# 
 17042   0001B0                     C1MASK4L        equ	432	;# 
 17043   0001B1                     C1MASK4H        equ	433	;# 
 17044   0001B2                     C1MASK4U        equ	434	;# 
 17045   0001B3                     C1MASK4T        equ	435	;# 
 17046   0001B4                     C1FLTOBJ5       equ	436	;# 
 17047   0001B4                     C1FLTOBJ5L      equ	436	;# 
 17048   0001B5                     C1FLTOBJ5H      equ	437	;# 
 17049   0001B6                     C1FLTOBJ5U      equ	438	;# 
 17050   0001B7                     C1FLTOBJ5T      equ	439	;# 
 17051   0001B8                     C1MASK5         equ	440	;# 
 17052   0001B8                     C1MASK5L        equ	440	;# 
 17053   0001B9                     C1MASK5H        equ	441	;# 
 17054   0001BA                     C1MASK5U        equ	442	;# 
 17055   0001BB                     C1MASK5T        equ	443	;# 
 17056   0001BC                     C1FLTOBJ6       equ	444	;# 
 17057   0001BC                     C1FLTOBJ6L      equ	444	;# 
 17058   0001BD                     C1FLTOBJ6H      equ	445	;# 
 17059   0001BE                     C1FLTOBJ6U      equ	446	;# 
 17060   0001BF                     C1FLTOBJ6T      equ	447	;# 
 17061   0001C0                     C1MASK6         equ	448	;# 
 17062   0001C0                     C1MASK6L        equ	448	;# 
 17063   0001C1                     C1MASK6H        equ	449	;# 
 17064   0001C2                     C1MASK6U        equ	450	;# 
 17065   0001C3                     C1MASK6T        equ	451	;# 
 17066   0001C4                     C1FLTOBJ7       equ	452	;# 
 17067   0001C4                     C1FLTOBJ7L      equ	452	;# 
 17068   0001C5                     C1FLTOBJ7H      equ	453	;# 
 17069   0001C6                     C1FLTOBJ7U      equ	454	;# 
 17070   0001C7                     C1FLTOBJ7T      equ	455	;# 
 17071   0001C8                     C1MASK7         equ	456	;# 
 17072   0001C8                     C1MASK7L        equ	456	;# 
 17073   0001C9                     C1MASK7H        equ	457	;# 
 17074   0001CA                     C1MASK7U        equ	458	;# 
 17075   0001CB                     C1MASK7T        equ	459	;# 
 17076   0001CC                     C1FLTOBJ8       equ	460	;# 
 17077   0001CC                     C1FLTOBJ8L      equ	460	;# 
 17078   0001CD                     C1FLTOBJ8H      equ	461	;# 
 17079   0001CE                     C1FLTOBJ8U      equ	462	;# 
 17080   0001CF                     C1FLTOBJ8T      equ	463	;# 
 17081   0001D0                     C1MASK8         equ	464	;# 
 17082   0001D0                     C1MASK8L        equ	464	;# 
 17083   0001D1                     C1MASK8H        equ	465	;# 
 17084   0001D2                     C1MASK8U        equ	466	;# 
 17085   0001D3                     C1MASK8T        equ	467	;# 
 17086   0001D4                     C1FLTOBJ9       equ	468	;# 
 17087   0001D4                     C1FLTOBJ9L      equ	468	;# 
 17088   0001D5                     C1FLTOBJ9H      equ	469	;# 
 17089   0001D6                     C1FLTOBJ9U      equ	470	;# 
 17090   0001D7                     C1FLTOBJ9T      equ	471	;# 
 17091   0001D8                     C1MASK9         equ	472	;# 
 17092   0001D8                     C1MASK9L        equ	472	;# 
 17093   0001D9                     C1MASK9H        equ	473	;# 
 17094   0001DA                     C1MASK9U        equ	474	;# 
 17095   0001DB                     C1MASK9T        equ	475	;# 
 17096   0001DC                     C1FLTOBJ10      equ	476	;# 
 17097   0001DC                     C1FLTOBJ10L     equ	476	;# 
 17098   0001DD                     C1FLTOBJ10H     equ	477	;# 
 17099   0001DE                     C1FLTOBJ10U     equ	478	;# 
 17100   0001DF                     C1FLTOBJ10T     equ	479	;# 
 17101   0001E0                     C1MASK10        equ	480	;# 
 17102   0001E0                     C1MASK10L       equ	480	;# 
 17103   0001E1                     C1MASK10H       equ	481	;# 
 17104   0001E2                     C1MASK10U       equ	482	;# 
 17105   0001E3                     C1MASK10T       equ	483	;# 
 17106   0001E4                     C1FLTOBJ11      equ	484	;# 
 17107   0001E4                     C1FLTOBJ11L     equ	484	;# 
 17108   0001E5                     C1FLTOBJ11H     equ	485	;# 
 17109   0001E6                     C1FLTOBJ11U     equ	486	;# 
 17110   0001E7                     C1FLTOBJ11T     equ	487	;# 
 17111   0001E8                     C1MASK11        equ	488	;# 
 17112   0001E8                     C1MASK11L       equ	488	;# 
 17113   0001E9                     C1MASK11H       equ	489	;# 
 17114   0001EA                     C1MASK11U       equ	490	;# 
 17115   0001EB                     C1MASK11T       equ	491	;# 
 17116   000200                     PPSLOCK         equ	512	;# 
 17117   000201                     RA0PPS          equ	513	;# 
 17118   000202                     RA1PPS          equ	514	;# 
 17119   000203                     RA2PPS          equ	515	;# 
 17120   000204                     RA3PPS          equ	516	;# 
 17121   000205                     RA4PPS          equ	517	;# 
 17122   000206                     RA5PPS          equ	518	;# 
 17123   000207                     RA6PPS          equ	519	;# 
 17124   000208                     RA7PPS          equ	520	;# 
 17125   000209                     RB0PPS          equ	521	;# 
 17126   00020A                     RB1PPS          equ	522	;# 
 17127   00020B                     RB2PPS          equ	523	;# 
 17128   00020C                     RB3PPS          equ	524	;# 
 17129   00020D                     RB4PPS          equ	525	;# 
 17130   00020E                     RB5PPS          equ	526	;# 
 17131   00020F                     RB6PPS          equ	527	;# 
 17132   000210                     RB7PPS          equ	528	;# 
 17133   000211                     RC0PPS          equ	529	;# 
 17134   000212                     RC1PPS          equ	530	;# 
 17135   000213                     RC2PPS          equ	531	;# 
 17136   000214                     RC3PPS          equ	532	;# 
 17137   000215                     RC4PPS          equ	533	;# 
 17138   000216                     RC5PPS          equ	534	;# 
 17139   000217                     RC6PPS          equ	535	;# 
 17140   000218                     RC7PPS          equ	536	;# 
 17141   00023D                     CANRXPPS        equ	573	;# 
 17142   00023E                     INT0PPS         equ	574	;# 
 17143   00023F                     INT1PPS         equ	575	;# 
 17144   000240                     INT2PPS         equ	576	;# 
 17145   000241                     T0CKIPPS        equ	577	;# 
 17146   000242                     T1CKIPPS        equ	578	;# 
 17147   000243                     T1GPPS          equ	579	;# 
 17148   000244                     T3CKIPPS        equ	580	;# 
 17149   000245                     T3GPPS          equ	581	;# 
 17150   000246                     T5CKIPPS        equ	582	;# 
 17151   000247                     T5GPPS          equ	583	;# 
 17152   000248                     T2INPPS         equ	584	;# 
 17153   000249                     T4INPPS         equ	585	;# 
 17154   00024A                     T6INPPS         equ	586	;# 
 17155   00024B                     TUIN0PPS        equ	587	;# 
 17156   00024C                     TUIN1PPS        equ	588	;# 
 17157   00024F                     CCP1PPS         equ	591	;# 
 17158   000250                     CCP2PPS         equ	592	;# 
 17159   000251                     CCP3PPS         equ	593	;# 
 17160   000253                     PWM1ERSPPS      equ	595	;# 
 17161   000254                     PWM2ERSPPS      equ	596	;# 
 17162   000255                     PWM3ERSPPS      equ	597	;# 
 17163   000256                     PWM4ERSPPS      equ	598	;# 
 17164   000257                     PWMIN0PPS       equ	599	;# 
 17165   000258                     PWMIN1PPS       equ	600	;# 
 17166   000259                     SMT1WINPPS      equ	601	;# 
 17167   00025A                     SMT1SIGPPS      equ	602	;# 
 17168   00025B                     CWG1PPS         equ	603	;# 
 17169   00025B                     CWG1INPPS       equ	603	;# 
 17170   00025C                     CWG2PPS         equ	604	;# 
 17171   00025C                     CWG2INPPS       equ	604	;# 
 17172   00025D                     CWG3PPS         equ	605	;# 
 17173   00025D                     CWG3INPPS       equ	605	;# 
 17174   00025E                     MD1CARLPPS      equ	606	;# 
 17175   00025E                     MDCARLPPS       equ	606	;# 
 17176   00025F                     MD1CARHPPS      equ	607	;# 
 17177   00025F                     MDCARHPPS       equ	607	;# 
 17178   000260                     MD1SRCPPS       equ	608	;# 
 17179   000260                     MDSRCPPS        equ	608	;# 
 17180   000261                     CLCIN0PPS       equ	609	;# 
 17181   000262                     CLCIN1PPS       equ	610	;# 
 17182   000263                     CLCIN2PPS       equ	611	;# 
 17183   000264                     CLCIN3PPS       equ	612	;# 
 17184   000265                     CLCIN4PPS       equ	613	;# 
 17185   000266                     CLCIN5PPS       equ	614	;# 
 17186   000267                     CLCIN6PPS       equ	615	;# 
 17187   000268                     CLCIN7PPS       equ	616	;# 
 17188   000269                     ADACTPPS        equ	617	;# 
 17189   00026A                     SPI1SCKPPS      equ	618	;# 
 17190   00026B                     SPI1SDIPPS      equ	619	;# 
 17191   00026C                     SPI1SSPPS       equ	620	;# 
 17192   00026D                     SPI2SCKPPS      equ	621	;# 
 17193   00026E                     SPI2SDIPPS      equ	622	;# 
 17194   00026F                     SPI2SSPPS       equ	623	;# 
 17195   000270                     I2C1SDAPPS      equ	624	;# 
 17196   000271                     I2C1SCLPPS      equ	625	;# 
 17197   000272                     U1RXPPS         equ	626	;# 
 17198   000273                     U1CTSPPS        equ	627	;# 
 17199   000274                     U2RXPPS         equ	628	;# 
 17200   000275                     U2CTSPPS        equ	629	;# 
 17201   000276                     U3RXPPS         equ	630	;# 
 17202   000277                     U3CTSPPS        equ	631	;# 
 17203   000278                     U4RXPPS         equ	632	;# 
 17204   000279                     U4CTSPPS        equ	633	;# 
 17205   00027A                     U5RXPPS         equ	634	;# 
 17206   00027B                     U5CTSPPS        equ	635	;# 
 17207   000286                     RC4I2C          equ	646	;# 
 17208   000287                     RC3I2C          equ	647	;# 
 17209   000288                     RB2I2C          equ	648	;# 
 17210   000289                     RB1I2C          equ	649	;# 
 17211   00028A                     I2C1RXB         equ	650	;# 
 17212   00028B                     I2C1TXB         equ	651	;# 
 17213   00028C                     I2C1CNTL        equ	652	;# 
 17214   00028D                     I2C1CNTH        equ	653	;# 
 17215   00028E                     I2C1ADB0        equ	654	;# 
 17216   00028F                     I2C1ADB1        equ	655	;# 
 17217   000290                     I2C1ADR0        equ	656	;# 
 17218   000291                     I2C1ADR1        equ	657	;# 
 17219   000292                     I2C1ADR2        equ	658	;# 
 17220   000293                     I2C1ADR3        equ	659	;# 
 17221   000294                     I2C1CON0        equ	660	;# 
 17222   000295                     I2C1CON1        equ	661	;# 
 17223   000296                     I2C1CON2        equ	662	;# 
 17224   000297                     I2C1ERR         equ	663	;# 
 17225   000298                     I2C1STAT0       equ	664	;# 
 17226   000299                     I2C1STAT1       equ	665	;# 
 17227   00029A                     I2C1PIR         equ	666	;# 
 17228   00029B                     I2C1PIE         equ	667	;# 
 17229   00029C                     I2C1BTO         equ	668	;# 
 17230   00029D                     I2C1BAUD        equ	669	;# 
 17231   00029E                     I2C1CLK         equ	670	;# 
 17232   00029F                     I2C1BTOC        equ	671	;# 
 17233   0002A1                     U1RXB           equ	673	;# 
 17234   0002A1                     U1RXBL          equ	673	;# 
 17235   0002A2                     U1RXCHK         equ	674	;# 
 17236   0002A3                     U1TXB           equ	675	;# 
 17237   0002A3                     U1TXBL          equ	675	;# 
 17238   0002A4                     U1TXCHK         equ	676	;# 
 17239   0002A5                     U1P1            equ	677	;# 
 17240   0002A5                     U1P1L           equ	677	;# 
 17241   0002A6                     U1P1H           equ	678	;# 
 17242   0002A7                     U1P2            equ	679	;# 
 17243   0002A7                     U1P2L           equ	679	;# 
 17244   0002A8                     U1P2H           equ	680	;# 
 17245   0002A9                     U1P3            equ	681	;# 
 17246   0002A9                     U1P3L           equ	681	;# 
 17247   0002AA                     U1P3H           equ	682	;# 
 17248   0002AB                     U1CON0          equ	683	;# 
 17249   0002AC                     U1CON1          equ	684	;# 
 17250   0002AD                     U1CON2          equ	685	;# 
 17251   0002AE                     U1BRG           equ	686	;# 
 17252   0002AE                     U1BRGL          equ	686	;# 
 17253   0002AF                     U1BRGH          equ	687	;# 
 17254   0002B0                     U1FIFO          equ	688	;# 
 17255   0002B1                     U1UIR           equ	689	;# 
 17256   0002B2                     U1ERRIR         equ	690	;# 
 17257   0002B3                     U1ERRIE         equ	691	;# 
 17258   0002B4                     U2RXB           equ	692	;# 
 17259   0002B4                     U2RXBL          equ	692	;# 
 17260   0002B5                     U2RXCHK         equ	693	;# 
 17261   0002B6                     U2TXB           equ	694	;# 
 17262   0002B6                     U2TXBL          equ	694	;# 
 17263   0002B7                     U2TXCHK         equ	695	;# 
 17264   0002B8                     U2P1            equ	696	;# 
 17265   0002B8                     U2P1L           equ	696	;# 
 17266   0002B9                     U2P1H           equ	697	;# 
 17267   0002BA                     U2P2            equ	698	;# 
 17268   0002BA                     U2P2L           equ	698	;# 
 17269   0002BB                     U2P2H           equ	699	;# 
 17270   0002BC                     U2P3            equ	700	;# 
 17271   0002BC                     U2P3L           equ	700	;# 
 17272   0002BD                     U2P3H           equ	701	;# 
 17273   0002BE                     U2CON0          equ	702	;# 
 17274   0002BF                     U2CON1          equ	703	;# 
 17275   0002C0                     U2CON2          equ	704	;# 
 17276   0002C1                     U2BRG           equ	705	;# 
 17277   0002C1                     U2BRGL          equ	705	;# 
 17278   0002C2                     U2BRGH          equ	706	;# 
 17279   0002C3                     U2FIFO          equ	707	;# 
 17280   0002C4                     U2UIR           equ	708	;# 
 17281   0002C5                     U2ERRIR         equ	709	;# 
 17282   0002C6                     U2ERRIE         equ	710	;# 
 17283   0002C7                     U3RXB           equ	711	;# 
 17284   0002C7                     U3RXBL          equ	711	;# 
 17285   0002C9                     U3TXB           equ	713	;# 
 17286   0002C9                     U3TXBL          equ	713	;# 
 17287   0002CB                     U3P1            equ	715	;# 
 17288   0002CB                     U3P1L           equ	715	;# 
 17289   0002CD                     U3P2            equ	717	;# 
 17290   0002CD                     U3P2L           equ	717	;# 
 17291   0002CF                     U3P3            equ	719	;# 
 17292   0002CF                     U3P3L           equ	719	;# 
 17293   0002D1                     U3CON0          equ	721	;# 
 17294   0002D2                     U3CON1          equ	722	;# 
 17295   0002D3                     U3CON2          equ	723	;# 
 17296   0002D4                     U3BRG           equ	724	;# 
 17297   0002D4                     U3BRGL          equ	724	;# 
 17298   0002D5                     U3BRGH          equ	725	;# 
 17299   0002D6                     U3FIFO          equ	726	;# 
 17300   0002D7                     U3UIR           equ	727	;# 
 17301   0002D8                     U3ERRIR         equ	728	;# 
 17302   0002D9                     U3ERRIE         equ	729	;# 
 17303   0002DA                     U4RXB           equ	730	;# 
 17304   0002DA                     U4RXBL          equ	730	;# 
 17305   0002DC                     U4TXB           equ	732	;# 
 17306   0002DC                     U4TXBL          equ	732	;# 
 17307   0002DE                     U4P1            equ	734	;# 
 17308   0002DE                     U4P1L           equ	734	;# 
 17309   0002E0                     U4P2            equ	736	;# 
 17310   0002E0                     U4P2L           equ	736	;# 
 17311   0002E2                     U4P3            equ	738	;# 
 17312   0002E2                     U4P3L           equ	738	;# 
 17313   0002E4                     U4CON0          equ	740	;# 
 17314   0002E5                     U4CON1          equ	741	;# 
 17315   0002E6                     U4CON2          equ	742	;# 
 17316   0002E7                     U4BRG           equ	743	;# 
 17317   0002E7                     U4BRGL          equ	743	;# 
 17318   0002E8                     U4BRGH          equ	744	;# 
 17319   0002E9                     U4FIFO          equ	745	;# 
 17320   0002EA                     U4UIR           equ	746	;# 
 17321   0002EB                     U4ERRIR         equ	747	;# 
 17322   0002EC                     U4ERRIE         equ	748	;# 
 17323   0002ED                     U5RXB           equ	749	;# 
 17324   0002ED                     U5RXBL          equ	749	;# 
 17325   0002EF                     U5TXB           equ	751	;# 
 17326   0002EF                     U5TXBL          equ	751	;# 
 17327   0002F1                     U5P1            equ	753	;# 
 17328   0002F1                     U5P1L           equ	753	;# 
 17329   0002F3                     U5P2            equ	755	;# 
 17330   0002F3                     U5P2L           equ	755	;# 
 17331   0002F5                     U5P3            equ	757	;# 
 17332   0002F5                     U5P3L           equ	757	;# 
 17333   0002F7                     U5CON0          equ	759	;# 
 17334   0002F8                     U5CON1          equ	760	;# 
 17335   0002F9                     U5CON2          equ	761	;# 
 17336   0002FA                     U5BRG           equ	762	;# 
 17337   0002FA                     U5BRGL          equ	762	;# 
 17338   0002FB                     U5BRGH          equ	763	;# 
 17339   0002FC                     U5FIFO          equ	764	;# 
 17340   0002FD                     U5UIR           equ	765	;# 
 17341   0002FE                     U5ERRIR         equ	766	;# 
 17342   0002FF                     U5ERRIE         equ	767	;# 
 17343   000300                     SMT1TMR         equ	768	;# 
 17344   000300                     SMT1TMRL        equ	768	;# 
 17345   000301                     SMT1TMRH        equ	769	;# 
 17346   000302                     SMT1TMRU        equ	770	;# 
 17347   000303                     SMT1CPR         equ	771	;# 
 17348   000303                     SMT1CPRL        equ	771	;# 
 17349   000304                     SMT1CPRH        equ	772	;# 
 17350   000305                     SMT1CPRU        equ	773	;# 
 17351   000306                     SMT1CPW         equ	774	;# 
 17352   000306                     SMT1CPWL        equ	774	;# 
 17353   000307                     SMT1CPWH        equ	775	;# 
 17354   000308                     SMT1CPWU        equ	776	;# 
 17355   000309                     SMT1PR          equ	777	;# 
 17356   000309                     SMT1PRL         equ	777	;# 
 17357   00030A                     SMT1PRH         equ	778	;# 
 17358   00030B                     SMT1PRU         equ	779	;# 
 17359   00030C                     SMT1CON0        equ	780	;# 
 17360   00030D                     SMT1CON1        equ	781	;# 
 17361   00030E                     SMT1STAT        equ	782	;# 
 17362   00030F                     SMT1CLK         equ	783	;# 
 17363   000310                     SMT1SIG         equ	784	;# 
 17364   000311                     SMT1WIN         equ	785	;# 
 17365   000318                     TMR0L           equ	792	;# 
 17366   000318                     TMR0            equ	792	;# 
 17367   000319                     TMR0H           equ	793	;# 
 17368   000319                     PR0             equ	793	;# 
 17369   00031A                     T0CON0          equ	794	;# 
 17370   00031B                     T0CON1          equ	795	;# 
 17371   00031C                     TMR1            equ	796	;# 
 17372   00031C                     TMR1L           equ	796	;# 
 17373   00031D                     TMR1H           equ	797	;# 
 17374   00031E                     T1CON           equ	798	;# 
 17375   00031E                     TMR1CON         equ	798	;# 
 17376   00031F                     T1GCON          equ	799	;# 
 17377   00031F                     TMR1GCON        equ	799	;# 
 17378   000320                     T1GATE          equ	800	;# 
 17379   000320                     TMR1GATE        equ	800	;# 
 17380   000321                     T1CLK           equ	801	;# 
 17381   000321                     TMR1CLK         equ	801	;# 
 17382   000321                     PR1             equ	801	;# 
 17383   000322                     T2TMR           equ	802	;# 
 17384   000322                     TMR2            equ	802	;# 
 17385   000323                     T2PR            equ	803	;# 
 17386   000323                     PR2             equ	803	;# 
 17387   000324                     T2CON           equ	804	;# 
 17388   000325                     T2HLT           equ	805	;# 
 17389   000326                     T2CLKCON        equ	806	;# 
 17390   000326                     T2CLK           equ	806	;# 
 17391   000327                     T2RST           equ	807	;# 
 17392   000328                     TMR3            equ	808	;# 
 17393   000328                     TMR3L           equ	808	;# 
 17394   000329                     TMR3H           equ	809	;# 
 17395   00032A                     T3CON           equ	810	;# 
 17396   00032A                     TMR3CON         equ	810	;# 
 17397   00032B                     T3GCON          equ	811	;# 
 17398   00032B                     TMR3GCON        equ	811	;# 
 17399   00032C                     T3GATE          equ	812	;# 
 17400   00032C                     TMR3GATE        equ	812	;# 
 17401   00032D                     T3CLK           equ	813	;# 
 17402   00032D                     TMR3CLK         equ	813	;# 
 17403   00032D                     PR3             equ	813	;# 
 17404   00032E                     T4TMR           equ	814	;# 
 17405   00032E                     TMR4            equ	814	;# 
 17406   00032F                     T4PR            equ	815	;# 
 17407   00032F                     PR4             equ	815	;# 
 17408   000330                     T4CON           equ	816	;# 
 17409   000331                     T4HLT           equ	817	;# 
 17410   000332                     T4CLKCON        equ	818	;# 
 17411   000332                     T4CLK           equ	818	;# 
 17412   000333                     T4RST           equ	819	;# 
 17413   000334                     TMR5            equ	820	;# 
 17414   000334                     TMR5L           equ	820	;# 
 17415   000335                     TMR5H           equ	821	;# 
 17416   000336                     T5CON           equ	822	;# 
 17417   000336                     TMR5CON         equ	822	;# 
 17418   000337                     T5GCON          equ	823	;# 
 17419   000337                     TMR5GCON        equ	823	;# 
 17420   000338                     T5GATE          equ	824	;# 
 17421   000338                     TMR5GATE        equ	824	;# 
 17422   000339                     T5CLK           equ	825	;# 
 17423   000339                     TMR5CLK         equ	825	;# 
 17424   000339                     PR5             equ	825	;# 
 17425   00033A                     T6TMR           equ	826	;# 
 17426   00033A                     TMR6            equ	826	;# 
 17427   00033B                     T6PR            equ	827	;# 
 17428   00033B                     PR6             equ	827	;# 
 17429   00033C                     T6CON           equ	828	;# 
 17430   00033D                     T6HLT           equ	829	;# 
 17431   00033E                     T6CLKCON        equ	830	;# 
 17432   00033E                     T6CLK           equ	830	;# 
 17433   00033F                     T6RST           equ	831	;# 
 17434   000340                     CCPR1           equ	832	;# 
 17435   000340                     CCPR1L          equ	832	;# 
 17436   000341                     CCPR1H          equ	833	;# 
 17437   000342                     CCP1CON         equ	834	;# 
 17438   000343                     CCP1CAP         equ	835	;# 
 17439   000344                     CCPR2           equ	836	;# 
 17440   000344                     CCPR2L          equ	836	;# 
 17441   000345                     CCPR2H          equ	837	;# 
 17442   000346                     CCP2CON         equ	838	;# 
 17443   000347                     CCP2CAP         equ	839	;# 
 17444   000348                     CCPR3           equ	840	;# 
 17445   000348                     CCPR3L          equ	840	;# 
 17446   000349                     CCPR3H          equ	841	;# 
 17447   00034A                     CCP3CON         equ	842	;# 
 17448   00034B                     CCP3CAP         equ	843	;# 
 17449   00034C                     CCPTMRS0        equ	844	;# 
 17450   00034F                     CRCDATA         equ	847	;# 
 17451   00034F                     CRCDATAL        equ	847	;# 
 17452   000350                     CRCDATAH        equ	848	;# 
 17453   000351                     CRCDATAU        equ	849	;# 
 17454   000352                     CRCDATAT        equ	850	;# 
 17455   000353                     CRCOUT          equ	851	;# 
 17456   000353                     CRCSHFT         equ	851	;# 
 17457   000353                     CRCXOR          equ	851	;# 
 17458   000353                     CRCOUTL         equ	851	;# 
 17459   000353                     CRCSHFTL        equ	851	;# 
 17460   000353                     CRCSHIFTL       equ	851	;# 
 17461   000353                     CRCXORL         equ	851	;# 
 17462   000354                     CRCOUTH         equ	852	;# 
 17463   000354                     CRCSHFTH        equ	852	;# 
 17464   000354                     CRCSHIFTH       equ	852	;# 
 17465   000354                     CRCXORH         equ	852	;# 
 17466   000355                     CRCOUTU         equ	853	;# 
 17467   000355                     CRCSHFTU        equ	853	;# 
 17468   000355                     CRCSHIFTU       equ	853	;# 
 17469   000355                     CRCXORU         equ	853	;# 
 17470   000356                     CRCOUTT         equ	854	;# 
 17471   000356                     CRCSHFTT        equ	854	;# 
 17472   000356                     CRCSHIFTT       equ	854	;# 
 17473   000356                     CRCXORT         equ	854	;# 
 17474   000357                     CRCCON0         equ	855	;# 
 17475   000358                     CRCCON1         equ	856	;# 
 17476   000359                     CRCCON2         equ	857	;# 
 17477   00035A                     SCANLADR        equ	858	;# 
 17478   00035A                     SCANLADRL       equ	858	;# 
 17479   00035B                     SCANLADRH       equ	859	;# 
 17480   00035C                     SCANLADRU       equ	860	;# 
 17481   00035D                     SCANHADR        equ	861	;# 
 17482   00035D                     SCANHADRL       equ	861	;# 
 17483   00035E                     SCANHADRH       equ	862	;# 
 17484   00035F                     SCANHADRU       equ	863	;# 
 17485   000360                     SCANCON0        equ	864	;# 
 17486   000361                     SCANTRIG        equ	865	;# 
 17487   000362                     IPR0            equ	866	;# 
 17488   000363                     IPR1            equ	867	;# 
 17489   000364                     IPR2            equ	868	;# 
 17490   000365                     IPR3            equ	869	;# 
 17491   000366                     IPR4            equ	870	;# 
 17492   000367                     IPR5            equ	871	;# 
 17493   000368                     IPR6            equ	872	;# 
 17494   000369                     IPR7            equ	873	;# 
 17495   00036A                     IPR8            equ	874	;# 
 17496   00036B                     IPR9            equ	875	;# 
 17497   00036C                     IPR10           equ	876	;# 
 17498   00036D                     IPR11           equ	877	;# 
 17499   00036E                     IPR12           equ	878	;# 
 17500   00036F                     IPR13           equ	879	;# 
 17501   000370                     IPR14           equ	880	;# 
 17502   000371                     IPR15           equ	881	;# 
 17503   000373                     STATUS_CSHAD    equ	883	;# 
 17504   000374                     WREG_CSHAD      equ	884	;# 
 17505   000375                     BSR_CSHAD       equ	885	;# 
 17506   000376                     SHADCON         equ	886	;# 
 17507   000377                     STATUS_SHAD     equ	887	;# 
 17508   000378                     WREG_SHAD       equ	888	;# 
 17509   000379                     BSR_SHAD        equ	889	;# 
 17510   00037A                     PCLATH_SHAD     equ	890	;# 
 17511   00037B                     PCLATU_SHAD     equ	891	;# 
 17512   00037C                     FSR0SH          equ	892	;# 
 17513   00037C                     FSR0L_SHAD      equ	892	;# 
 17514   00037D                     FSR0H_SHAD      equ	893	;# 
 17515   00037E                     FSR1SH          equ	894	;# 
 17516   00037E                     FSR1L_SHAD      equ	894	;# 
 17517   00037F                     FSR1H_SHAD      equ	895	;# 
 17518   000380                     FSR2SH          equ	896	;# 
 17519   000380                     FSR2L_SHAD      equ	896	;# 
 17520   000381                     FSR2H_SHAD      equ	897	;# 
 17521   000382                     PRODSH          equ	898	;# 
 17522   000382                     PRODL_SHAD      equ	898	;# 
 17523   000383                     PRODH_SHAD      equ	899	;# 
 17524   000387                     TU16ACON0       equ	903	;# 
 17525   000388                     TU16ACON1       equ	904	;# 
 17526   000389                     TU16AHLT        equ	905	;# 
 17527   00038A                     TU16APS         equ	906	;# 
 17528   00038B                     TU16ATMR        equ	907	;# 
 17529   00038B                     TU16ACR         equ	907	;# 
 17530   00038B                     TU16ATMRL       equ	907	;# 
 17531   00038B                     TU16ACRL        equ	907	;# 
 17532   00038C                     TU16ATMRH       equ	908	;# 
 17533   00038C                     TU16ACRH        equ	908	;# 
 17534   00038D                     TU16APR         equ	909	;# 
 17535   00038D                     TU16APRL        equ	909	;# 
 17536   00038E                     TU16APRH        equ	910	;# 
 17537   00038F                     TU16ACLK        equ	911	;# 
 17538   000390                     TU16AERS        equ	912	;# 
 17539   000393                     TU16BCON0       equ	915	;# 
 17540   000394                     TU16BCON1       equ	916	;# 
 17541   000395                     TU16BHLT        equ	917	;# 
 17542   000396                     TU16BPS         equ	918	;# 
 17543   000397                     TU16BTMR        equ	919	;# 
 17544   000397                     TU16BCR         equ	919	;# 
 17545   000397                     TU16BTMRL       equ	919	;# 
 17546   000397                     TU16BCRL        equ	919	;# 
 17547   000398                     TU16BTMRH       equ	920	;# 
 17548   000398                     TU16BCRH        equ	920	;# 
 17549   000399                     TU16BPR         equ	921	;# 
 17550   000399                     TU16BPRL        equ	921	;# 
 17551   00039A                     TU16BPRH        equ	922	;# 
 17552   00039B                     TU16BCLK        equ	923	;# 
 17553   00039C                     TU16BERS        equ	924	;# 
 17554   0003BB                     TUCHAIN         equ	955	;# 
 17555   0003BC                     CWG1CLK         equ	956	;# 
 17556   0003BC                     CWG1CLKCON      equ	956	;# 
 17557   0003BD                     CWG1ISM         equ	957	;# 
 17558   0003BE                     CWG1DBR         equ	958	;# 
 17559   0003BF                     CWG1DBF         equ	959	;# 
 17560   0003C0                     CWG1CON0        equ	960	;# 
 17561   0003C1                     CWG1CON1        equ	961	;# 
 17562   0003C2                     CWG1AS0         equ	962	;# 
 17563   0003C3                     CWG1AS1         equ	963	;# 
 17564   0003C4                     CWG1STR         equ	964	;# 
 17565   0003C5                     CWG2CLK         equ	965	;# 
 17566   0003C5                     CWG2CLKCON      equ	965	;# 
 17567   0003C6                     CWG2ISM         equ	966	;# 
 17568   0003C7                     CWG2DBR         equ	967	;# 
 17569   0003C8                     CWG2DBF         equ	968	;# 
 17570   0003C9                     CWG2CON0        equ	969	;# 
 17571   0003CA                     CWG2CON1        equ	970	;# 
 17572   0003CB                     CWG2AS0         equ	971	;# 
 17573   0003CC                     CWG2AS1         equ	972	;# 
 17574   0003CD                     CWG2STR         equ	973	;# 
 17575   0003CE                     CWG3CLK         equ	974	;# 
 17576   0003CE                     CWG3CLKCON      equ	974	;# 
 17577   0003CF                     CWG3ISM         equ	975	;# 
 17578   0003D0                     CWG3DBR         equ	976	;# 
 17579   0003D1                     CWG3DBF         equ	977	;# 
 17580   0003D2                     CWG3CON0        equ	978	;# 
 17581   0003D3                     CWG3CON1        equ	979	;# 
 17582   0003D4                     CWG3AS0         equ	980	;# 
 17583   0003D5                     CWG3AS1         equ	981	;# 
 17584   0003D6                     CWG3STR         equ	982	;# 
 17585   0003D7                     FVRCON          equ	983	;# 
 17586   0003D8                     ADCPCON         equ	984	;# 
 17587   0003D8                     ADCP            equ	984	;# 
 17588   0003D9                     ADLTH           equ	985	;# 
 17589   0003D9                     ADLTHL          equ	985	;# 
 17590   0003DA                     ADLTHH          equ	986	;# 
 17591   0003DB                     ADUTH           equ	987	;# 
 17592   0003DB                     ADUTHL          equ	987	;# 
 17593   0003DC                     ADUTHH          equ	988	;# 
 17594   0003DD                     ADERR           equ	989	;# 
 17595   0003DD                     ADERRL          equ	989	;# 
 17596   0003DE                     ADERRH          equ	990	;# 
 17597   0003DF                     ADSTPT          equ	991	;# 
 17598   0003DF                     ADSTPTL         equ	991	;# 
 17599   0003E0                     ADSTPTH         equ	992	;# 
 17600   0003E1                     ADFLTR          equ	993	;# 
 17601   0003E1                     ADFLTRL         equ	993	;# 
 17602   0003E2                     ADFLTRH         equ	994	;# 
 17603   0003E3                     ADACC           equ	995	;# 
 17604   0003E3                     ADACCL          equ	995	;# 
 17605   0003E4                     ADACCH          equ	996	;# 
 17606   0003E5                     ADACCU          equ	997	;# 
 17607   0003E6                     ADCNT           equ	998	;# 
 17608   0003E7                     ADRPT           equ	999	;# 
 17609   0003E8                     ADPREV          equ	1000	;# 
 17610   0003E8                     ADPREVL         equ	1000	;# 
 17611   0003E9                     ADPREVH         equ	1001	;# 
 17612   0003EA                     ADRES           equ	1002	;# 
 17613   0003EA                     ADRESL          equ	1002	;# 
 17614   0003EB                     ADRESH          equ	1003	;# 
 17615   0003EC                     ADPCH           equ	1004	;# 
 17616   0003EE                     ADACQ           equ	1006	;# 
 17617   0003EE                     ADACQL          equ	1006	;# 
 17618   0003EF                     ADACQH          equ	1007	;# 
 17619   0003F0                     ADCAP           equ	1008	;# 
 17620   0003F1                     ADPRE           equ	1009	;# 
 17621   0003F1                     ADPREL          equ	1009	;# 
 17622   0003F2                     ADPREH          equ	1010	;# 
 17623   0003F3                     ADCON0          equ	1011	;# 
 17624   0003F4                     ADCON1          equ	1012	;# 
 17625   0003F5                     ADCON2          equ	1013	;# 
 17626   0003F6                     ADCON3          equ	1014	;# 
 17627   0003F7                     ADSTAT          equ	1015	;# 
 17628   0003F8                     ADREF           equ	1016	;# 
 17629   0003F9                     ADACT           equ	1017	;# 
 17630   0003FA                     ADCLK           equ	1018	;# 
 17631   0003FB                     ADCTX           equ	1019	;# 
 17632   0003FC                     ADCSEL1         equ	1020	;# 
 17633   0003FD                     ADCSEL2         equ	1021	;# 
 17634   0003FE                     ADCSEL3         equ	1022	;# 
 17635   0003FF                     ADCSEL4         equ	1023	;# 
 17636   000400                     ANSELA          equ	1024	;# 
 17637   000401                     WPUA            equ	1025	;# 
 17638   000402                     ODCONA          equ	1026	;# 
 17639   000403                     SLRCONA         equ	1027	;# 
 17640   000404                     INLVLA          equ	1028	;# 
 17641   000405                     IOCAP           equ	1029	;# 
 17642   000406                     IOCAN           equ	1030	;# 
 17643   000407                     IOCAF           equ	1031	;# 
 17644   000408                     ANSELB          equ	1032	;# 
 17645   000409                     WPUB            equ	1033	;# 
 17646   00040A                     ODCONB          equ	1034	;# 
 17647   00040B                     SLRCONB         equ	1035	;# 
 17648   00040C                     INLVLB          equ	1036	;# 
 17649   00040D                     IOCBP           equ	1037	;# 
 17650   00040E                     IOCBN           equ	1038	;# 
 17651   00040F                     IOCBF           equ	1039	;# 
 17652   000410                     ANSELC          equ	1040	;# 
 17653   000411                     WPUC            equ	1041	;# 
 17654   000412                     ODCONC          equ	1042	;# 
 17655   000413                     SLRCONC         equ	1043	;# 
 17656   000414                     INLVLC          equ	1044	;# 
 17657   000415                     IOCCP           equ	1045	;# 
 17658   000416                     IOCCN           equ	1046	;# 
 17659   000417                     IOCCF           equ	1047	;# 
 17660   000421                     WPUE            equ	1057	;# 
 17661   000424                     INLVLE          equ	1060	;# 
 17662   000425                     IOCEP           equ	1061	;# 
 17663   000426                     IOCEN           equ	1062	;# 
 17664   000427                     IOCEF           equ	1063	;# 
 17665   000440                     NCO1ACC         equ	1088	;# 
 17666   000440                     NCO1ACCL        equ	1088	;# 
 17667   000441                     NCO1ACCH        equ	1089	;# 
 17668   000442                     NCO1ACCU        equ	1090	;# 
 17669   000443                     NCO1INC         equ	1091	;# 
 17670   000443                     NCO1INCL        equ	1091	;# 
 17671   000444                     NCO1INCH        equ	1092	;# 
 17672   000445                     NCO1INCU        equ	1093	;# 
 17673   000446                     NCO1CON         equ	1094	;# 
 17674   000447                     NCO1CLK         equ	1095	;# 
 17675   000448                     NCO2ACC         equ	1096	;# 
 17676   000448                     NCO2ACCL        equ	1096	;# 
 17677   000449                     NCO2ACCH        equ	1097	;# 
 17678   00044A                     NCO2ACCU        equ	1098	;# 
 17679   00044B                     NCO2INC         equ	1099	;# 
 17680   00044B                     NCO2INCL        equ	1099	;# 
 17681   00044C                     NCO2INCH        equ	1100	;# 
 17682   00044D                     NCO2INCU        equ	1101	;# 
 17683   00044E                     NCO2CON         equ	1102	;# 
 17684   00044F                     NCO2CLK         equ	1103	;# 
 17685   000450                     NCO3ACC         equ	1104	;# 
 17686   000450                     NCO3ACCL        equ	1104	;# 
 17687   000451                     NCO3ACCH        equ	1105	;# 
 17688   000452                     NCO3ACCU        equ	1106	;# 
 17689   000453                     NCO3INC         equ	1107	;# 
 17690   000453                     NCO3INCL        equ	1107	;# 
 17691   000454                     NCO3INCH        equ	1108	;# 
 17692   000455                     NCO3INCU        equ	1109	;# 
 17693   000456                     NCO3CON         equ	1110	;# 
 17694   000457                     NCO3CLK         equ	1111	;# 
 17695   000458                     FSCMCON         equ	1112	;# 
 17696   000459                     IVTLOCK         equ	1113	;# 
 17697   00045A                     IVTAD           equ	1114	;# 
 17698   00045A                     IVTADL          equ	1114	;# 
 17699   00045B                     IVTADH          equ	1115	;# 
 17700   00045C                     IVTADU          equ	1116	;# 
 17701   00045D                     IVTBASE         equ	1117	;# 
 17702   00045D                     IVTBASEL        equ	1117	;# 
 17703   00045E                     IVTBASEH        equ	1118	;# 
 17704   00045F                     IVTBASEU        equ	1119	;# 
 17705   000460                     PWM1ERS         equ	1120	;# 
 17706   000461                     PWM1CLK         equ	1121	;# 
 17707   000462                     PWM1LDS         equ	1122	;# 
 17708   000463                     PWM1PR          equ	1123	;# 
 17709   000463                     PWM1PRL         equ	1123	;# 
 17710   000464                     PWM1PRH         equ	1124	;# 
 17711   000465                     PWM1CPRE        equ	1125	;# 
 17712   000466                     PWM1PIPOS       equ	1126	;# 
 17713   000467                     PWM1GIR         equ	1127	;# 
 17714   000468                     PWM1GIE         equ	1128	;# 
 17715   000469                     PWM1CON         equ	1129	;# 
 17716   00046A                     PWM1S1CFG       equ	1130	;# 
 17717   00046B                     PWM1S1P1        equ	1131	;# 
 17718   00046B                     PWM1S1P1L       equ	1131	;# 
 17719   00046C                     PWM1S1P1H       equ	1132	;# 
 17720   00046D                     PWM1S1P2        equ	1133	;# 
 17721   00046D                     PWM1S1P2L       equ	1133	;# 
 17722   00046E                     PWM1S1P2H       equ	1134	;# 
 17723   00046F                     PWM2ERS         equ	1135	;# 
 17724   000470                     PWM2CLK         equ	1136	;# 
 17725   000471                     PWM2LDS         equ	1137	;# 
 17726   000472                     PWM2PR          equ	1138	;# 
 17727   000472                     PWM2PRL         equ	1138	;# 
 17728   000473                     PWM2PRH         equ	1139	;# 
 17729   000474                     PWM2CPRE        equ	1140	;# 
 17730   000475                     PWM2PIPOS       equ	1141	;# 
 17731   000476                     PWM2GIR         equ	1142	;# 
 17732   000477                     PWM2GIE         equ	1143	;# 
 17733   000478                     PWM2CON         equ	1144	;# 
 17734   000479                     PWM2S1CFG       equ	1145	;# 
 17735   00047A                     PWM2S1P1        equ	1146	;# 
 17736   00047A                     PWM2S1P1L       equ	1146	;# 
 17737   00047B                     PWM2S1P1H       equ	1147	;# 
 17738   00047C                     PWM2S1P2        equ	1148	;# 
 17739   00047C                     PWM2S1P2L       equ	1148	;# 
 17740   00047D                     PWM2S1P2H       equ	1149	;# 
 17741   00047E                     PWM3ERS         equ	1150	;# 
 17742   00047F                     PWM3CLK         equ	1151	;# 
 17743   000480                     PWM3LDS         equ	1152	;# 
 17744   000481                     PWM3PR          equ	1153	;# 
 17745   000481                     PWM3PRL         equ	1153	;# 
 17746   000482                     PWM3PRH         equ	1154	;# 
 17747   000483                     PWM3CPRE        equ	1155	;# 
 17748   000484                     PWM3PIPOS       equ	1156	;# 
 17749   000485                     PWM3GIR         equ	1157	;# 
 17750   000486                     PWM3GIE         equ	1158	;# 
 17751   000487                     PWM3CON         equ	1159	;# 
 17752   000488                     PWM3S1CFG       equ	1160	;# 
 17753   000489                     PWM3S1P1        equ	1161	;# 
 17754   000489                     PWM3S1P1L       equ	1161	;# 
 17755   00048A                     PWM3S1P1H       equ	1162	;# 
 17756   00048B                     PWM3S1P2        equ	1163	;# 
 17757   00048B                     PWM3S1P2L       equ	1163	;# 
 17758   00048C                     PWM3S1P2H       equ	1164	;# 
 17759   00048D                     PWM4ERS         equ	1165	;# 
 17760   00048E                     PWM4CLK         equ	1166	;# 
 17761   00048F                     PWM4LDS         equ	1167	;# 
 17762   000490                     PWM4PR          equ	1168	;# 
 17763   000490                     PWM4PRL         equ	1168	;# 
 17764   000491                     PWM4PRH         equ	1169	;# 
 17765   000492                     PWM4CPRE        equ	1170	;# 
 17766   000493                     PWM4PIPOS       equ	1171	;# 
 17767   000494                     PWM4GIR         equ	1172	;# 
 17768   000495                     PWM4GIE         equ	1173	;# 
 17769   000496                     PWM4CON         equ	1174	;# 
 17770   000497                     PWM4S1CFG       equ	1175	;# 
 17771   000498                     PWM4S1P1        equ	1176	;# 
 17772   000498                     PWM4S1P1L       equ	1176	;# 
 17773   000499                     PWM4S1P1H       equ	1177	;# 
 17774   00049A                     PWM4S1P2        equ	1178	;# 
 17775   00049A                     PWM4S1P2L       equ	1178	;# 
 17776   00049B                     PWM4S1P2H       equ	1179	;# 
 17777   00049C                     PWMLOAD         equ	1180	;# 
 17778   00049D                     PWMEN           equ	1181	;# 
 17779   00049E                     PIE0            equ	1182	;# 
 17780   00049F                     PIE1            equ	1183	;# 
 17781   0004A0                     PIE2            equ	1184	;# 
 17782   0004A1                     PIE3            equ	1185	;# 
 17783   0004A2                     PIE4            equ	1186	;# 
 17784   0004A3                     PIE5            equ	1187	;# 
 17785   0004A4                     PIE6            equ	1188	;# 
 17786   0004A5                     PIE7            equ	1189	;# 
 17787   0004A6                     PIE8            equ	1190	;# 
 17788   0004A7                     PIE9            equ	1191	;# 
 17789   0004A8                     PIE10           equ	1192	;# 
 17790   0004A9                     PIE11           equ	1193	;# 
 17791   0004AA                     PIE12           equ	1194	;# 
 17792   0004AB                     PIE13           equ	1195	;# 
 17793   0004AC                     PIE14           equ	1196	;# 
 17794   0004AD                     PIE15           equ	1197	;# 
 17795   0004AE                     PIR0            equ	1198	;# 
 17796   0004AF                     PIR1            equ	1199	;# 
 17797   0004B0                     PIR2            equ	1200	;# 
 17798   0004B1                     PIR3            equ	1201	;# 
 17799   0004B2                     PIR4            equ	1202	;# 
 17800   0004B3                     PIR5            equ	1203	;# 
 17801   0004B4                     PIR6            equ	1204	;# 
 17802   0004B5                     PIR7            equ	1205	;# 
 17803   0004B6                     PIR8            equ	1206	;# 
 17804   0004B7                     PIR9            equ	1207	;# 
 17805   0004B8                     PIR10           equ	1208	;# 
 17806   0004B9                     PIR11           equ	1209	;# 
 17807   0004BA                     PIR12           equ	1210	;# 
 17808   0004BB                     PIR13           equ	1211	;# 
 17809   0004BC                     PIR14           equ	1212	;# 
 17810   0004BD                     PIR15           equ	1213	;# 
 17811   0004BE                     LATA            equ	1214	;# 
 17812   0004BF                     LATB            equ	1215	;# 
 17813   0004C0                     LATC            equ	1216	;# 
 17814   0004C6                     TRISA           equ	1222	;# 
 17815   0004C7                     TRISB           equ	1223	;# 
 17816   0004C8                     TRISC           equ	1224	;# 
 17817   0004CA                     TRISE           equ	1226	;# 
 17818   0004CE                     PORTA           equ	1230	;# 
 17819   0004CF                     PORTB           equ	1231	;# 
 17820   0004D0                     PORTC           equ	1232	;# 
 17821   0004D2                     PORTE           equ	1234	;# 
 17822   0004D6                     INTCON0         equ	1238	;# 
 17823   0004D7                     INTCON1         equ	1239	;# 
 17824   0004D8                     STATUS          equ	1240	;# 
 17825   0004D9                     FSR2            equ	1241	;# 
 17826   0004D9                     FSR2L           equ	1241	;# 
 17827   0004DA                     FSR2H           equ	1242	;# 
 17828   0004DB                     PLUSW2          equ	1243	;# 
 17829   0004DC                     PREINC2         equ	1244	;# 
 17830   0004DD                     POSTDEC2        equ	1245	;# 
 17831   0004DE                     POSTINC2        equ	1246	;# 
 17832   0004DF                     INDF2           equ	1247	;# 
 17833   0004E0                     BSR             equ	1248	;# 
 17834   0004E1                     FSR1            equ	1249	;# 
 17835   0004E1                     FSR1L           equ	1249	;# 
 17836   0004E2                     FSR1H           equ	1250	;# 
 17837   0004E3                     PLUSW1          equ	1251	;# 
 17838   0004E4                     PREINC1         equ	1252	;# 
 17839   0004E5                     POSTDEC1        equ	1253	;# 
 17840   0004E6                     POSTINC1        equ	1254	;# 
 17841   0004E7                     INDF1           equ	1255	;# 
 17842   0004E8                     WREG            equ	1256	;# 
 17843   0004E9                     FSR0            equ	1257	;# 
 17844   0004E9                     FSR0L           equ	1257	;# 
 17845   0004EA                     FSR0H           equ	1258	;# 
 17846   0004EB                     PLUSW0          equ	1259	;# 
 17847   0004EC                     PREINC0         equ	1260	;# 
 17848   0004ED                     POSTDEC0        equ	1261	;# 
 17849   0004EE                     POSTINC0        equ	1262	;# 
 17850   0004EF                     INDF0           equ	1263	;# 
 17851   0004F0                     PCON0           equ	1264	;# 
 17852   0004F1                     PCON1           equ	1265	;# 
 17853   0004F2                     CPUDOZE         equ	1266	;# 
 17854   0004F3                     PROD            equ	1267	;# 
 17855   0004F3                     PRODL           equ	1267	;# 
 17856   0004F4                     PRODH           equ	1268	;# 
 17857   0004F5                     TABLAT          equ	1269	;# 
 17858   0004F6                     TBLPTR          equ	1270	;# 
 17859   0004F6                     TBLPTRL         equ	1270	;# 
 17860   0004F7                     TBLPTRH         equ	1271	;# 
 17861   0004F8                     TBLPTRU         equ	1272	;# 
 17862   0004F9                     PCLAT           equ	1273	;# 
 17863   0004F9                     PCL             equ	1273	;# 
 17864   0004FA                     PCLATH          equ	1274	;# 
 17865   0004FB                     PCLATU          equ	1275	;# 
 17866   0004FC                     STKPTR          equ	1276	;# 
 17867   0004FD                     TOS             equ	1277	;# 
 17868   0004FD                     TOSL            equ	1277	;# 
 17869   0004FE                     TOSH            equ	1278	;# 
 17870   0004FF                     TOSU            equ	1279	;# 
 17871   000038                     BOOTREG         equ	56	;# 
 17872   000039                     CLKRCON         equ	57	;# 
 17873   00003A                     CLKRCLK         equ	58	;# 
 17874   000040                     NVMCON0         equ	64	;# 
 17875   000041                     NVMCON1         equ	65	;# 
 17876   000042                     NVMLOCK         equ	66	;# 
 17877   000043                     NVMADR          equ	67	;# 
 17878   000043                     NVMADRL         equ	67	;# 
 17879   000044                     NVMADRH         equ	68	;# 
 17880   000045                     NVMADRU         equ	69	;# 
 17881   000046                     NVMDAT          equ	70	;# 
 17882   000046                     NVMDATL         equ	70	;# 
 17883   000047                     NVMDATH         equ	71	;# 
 17884   000048                     VREGCON         equ	72	;# 
 17885   000049                     BORCON          equ	73	;# 
 17886   00004A                     HLVDCON0        equ	74	;# 
 17887   00004B                     HLVDCON1        equ	75	;# 
 17888   00004C                     ZCDCON          equ	76	;# 
 17889   000060                     PMD0            equ	96	;# 
 17890   000061                     PMD1            equ	97	;# 
 17891   000062                     PMD2            equ	98	;# 
 17892   000063                     PMD3            equ	99	;# 
 17893   000064                     PMD4            equ	100	;# 
 17894   000065                     PMD5            equ	101	;# 
 17895   000066                     PMD6            equ	102	;# 
 17896   000067                     PMD7            equ	103	;# 
 17897   000068                     PMD8            equ	104	;# 
 17898   00006A                     MD1CON0         equ	106	;# 
 17899   00006B                     MD1CON1         equ	107	;# 
 17900   00006C                     MD1SRC          equ	108	;# 
 17901   00006D                     MD1CARL         equ	109	;# 
 17902   00006E                     MD1CARH         equ	110	;# 
 17903   00006F                     CMOUT           equ	111	;# 
 17904   000070                     CM1CON0         equ	112	;# 
 17905   000071                     CM1CON1         equ	113	;# 
 17906   000072                     CM1NCH          equ	114	;# 
 17907   000073                     CM1PCH          equ	115	;# 
 17908   000074                     CM2CON0         equ	116	;# 
 17909   000075                     CM2CON1         equ	117	;# 
 17910   000076                     CM2NCH          equ	118	;# 
 17911   000077                     CM2PCH          equ	119	;# 
 17912   000078                     WDTCON0         equ	120	;# 
 17913   000079                     WDTCON1         equ	121	;# 
 17914   00007A                     WDTPSL          equ	122	;# 
 17915   00007B                     WDTPSH          equ	123	;# 
 17916   00007C                     WDTTMR          equ	124	;# 
 17917   00007D                     DAC1DAT         equ	125	;# 
 17918   00007D                     DAC1DATL        equ	125	;# 
 17919   00007F                     DAC1CON         equ	127	;# 
 17920   000080                     SPI1RXB         equ	128	;# 
 17921   000081                     SPI1TXB         equ	129	;# 
 17922   000082                     SPI1TCNT        equ	130	;# 
 17923   000082                     SPI1TCNTL       equ	130	;# 
 17924   000083                     SPI1TCNTH       equ	131	;# 
 17925   000084                     SPI1CON0        equ	132	;# 
 17926   000085                     SPI1CON1        equ	133	;# 
 17927   000086                     SPI1CON2        equ	134	;# 
 17928   000087                     SPI1STATUS      equ	135	;# 
 17929   000088                     SPI1TWIDTH      equ	136	;# 
 17930   000089                     SPI1BAUD        equ	137	;# 
 17931   00008A                     SPI1INTF        equ	138	;# 
 17932   00008B                     SPI1INTE        equ	139	;# 
 17933   00008C                     SPI1CLK         equ	140	;# 
 17934   00008D                     SPI2RXB         equ	141	;# 
 17935   00008E                     SPI2TXB         equ	142	;# 
 17936   00008F                     SPI2TCNT        equ	143	;# 
 17937   00008F                     SPI2TCNTL       equ	143	;# 
 17938   000090                     SPI2TCNTH       equ	144	;# 
 17939   000091                     SPI2CON0        equ	145	;# 
 17940   000092                     SPI2CON1        equ	146	;# 
 17941   000093                     SPI2CON2        equ	147	;# 
 17942   000094                     SPI2STATUS      equ	148	;# 
 17943   000095                     SPI2TWIDTH      equ	149	;# 
 17944   000096                     SPI2BAUD        equ	150	;# 
 17945   000097                     SPI2INTF        equ	151	;# 
 17946   000098                     SPI2INTE        equ	152	;# 
 17947   000099                     SPI2CLK         equ	153	;# 
 17948   0000AC                     ACTCON          equ	172	;# 
 17949   0000AD                     OSCCON1         equ	173	;# 
 17950   0000AE                     OSCCON2         equ	174	;# 
 17951   0000AF                     OSCCON3         equ	175	;# 
 17952   0000B0                     OSCTUNE         equ	176	;# 
 17953   0000B1                     OSCFRQ          equ	177	;# 
 17954   0000B1                     OSCFREQ         equ	177	;# 
 17955   0000B2                     OSCSTAT         equ	178	;# 
 17956   0000B2                     OSCSTAT1        equ	178	;# 
 17957   0000B3                     OSCEN           equ	179	;# 
 17958   0000B4                     PRLOCK          equ	180	;# 
 17959   0000B5                     SCANPR          equ	181	;# 
 17960   0000B6                     DMA1PR          equ	182	;# 
 17961   0000B7                     DMA2PR          equ	183	;# 
 17962   0000B8                     DMA3PR          equ	184	;# 
 17963   0000B9                     DMA4PR          equ	185	;# 
 17964   0000BA                     DMA5PR          equ	186	;# 
 17965   0000BB                     DMA6PR          equ	187	;# 
 17966   0000BC                     DMA7PR          equ	188	;# 
 17967   0000BD                     DMA8PR          equ	189	;# 
 17968   0000BE                     MAINPR          equ	190	;# 
 17969   0000BF                     ISRPR           equ	191	;# 
 17970   0000D4                     CLCDATA         equ	212	;# 
 17971   0000D5                     CLCSELECT       equ	213	;# 
 17972   0000D6                     CLCnCON         equ	214	;# 
 17973   0000D7                     CLCnPOL         equ	215	;# 
 17974   0000D8                     CLCnSEL0        equ	216	;# 
 17975   0000D9                     CLCnSEL1        equ	217	;# 
 17976   0000DA                     CLCnSEL2        equ	218	;# 
 17977   0000DB                     CLCnSEL3        equ	219	;# 
 17978   0000DC                     CLCnGLS0        equ	220	;# 
 17979   0000DD                     CLCnGLS1        equ	221	;# 
 17980   0000DE                     CLCnGLS2        equ	222	;# 
 17981   0000DF                     CLCnGLS3        equ	223	;# 
 17982   0000E8                     DMASELECT       equ	232	;# 
 17983   0000E9                     DMAnBUF         equ	233	;# 
 17984   0000EA                     DMAnDCNT        equ	234	;# 
 17985   0000EA                     DMAnDCNTL       equ	234	;# 
 17986   0000EB                     DMAnDCNTH       equ	235	;# 
 17987   0000EC                     DMAnDPTR        equ	236	;# 
 17988   0000EC                     DMAnDPTRL       equ	236	;# 
 17989   0000ED                     DMAnDPTRH       equ	237	;# 
 17990   0000EE                     DMAnDSZ         equ	238	;# 
 17991   0000EE                     DMAnDSZL        equ	238	;# 
 17992   0000EF                     DMAnDSZH        equ	239	;# 
 17993   0000F0                     DMAnDSA         equ	240	;# 
 17994   0000F0                     DMAnDSAL        equ	240	;# 
 17995   0000F1                     DMAnDSAH        equ	241	;# 
 17996   0000F2                     DMAnSCNT        equ	242	;# 
 17997   0000F2                     DMAnSCNTL       equ	242	;# 
 17998   0000F3                     DMAnSCNTH       equ	243	;# 
 17999   0000F4                     DMAnSPTR        equ	244	;# 
 18000   0000F4                     DMAnSPTRL       equ	244	;# 
 18001   0000F5                     DMAnSPTRH       equ	245	;# 
 18002   0000F6                     DMAnSPTRU       equ	246	;# 
 18003   0000F7                     DMAnSSZ         equ	247	;# 
 18004   0000F7                     DMAnSSZL        equ	247	;# 
 18005   0000F8                     DMAnSSZH        equ	248	;# 
 18006   0000F9                     DMAnSSA         equ	249	;# 
 18007   0000F9                     DMAnSSAL        equ	249	;# 
 18008   0000FA                     DMAnSSAH        equ	250	;# 
 18009   0000FB                     DMAnSSAU        equ	251	;# 
 18010   0000FC                     DMAnCON0        equ	252	;# 
 18011   0000FD                     DMAnCON1        equ	253	;# 
 18012   0000FE                     DMAnAIRQ        equ	254	;# 
 18013   0000FF                     DMAnSIRQ        equ	255	;# 
 18014   000100                     C1CONL          equ	256	;# 
 18015   000101                     C1CONH          equ	257	;# 
 18016   000102                     C1CONU          equ	258	;# 
 18017   000103                     C1CONT          equ	259	;# 
 18018   000104                     C1NBTCFGL       equ	260	;# 
 18019   000105                     C1NBTCFGH       equ	261	;# 
 18020   000106                     C1NBTCFGU       equ	262	;# 
 18021   000107                     C1NBTCFGT       equ	263	;# 
 18022   000108                     C1DBTCFGL       equ	264	;# 
 18023   000109                     C1DBTCFGH       equ	265	;# 
 18024   00010A                     C1DBTCFGU       equ	266	;# 
 18025   00010B                     C1DBTCFGT       equ	267	;# 
 18026   00010C                     C1TDCL          equ	268	;# 
 18027   00010D                     C1TDCH          equ	269	;# 
 18028   00010E                     C1TDCU          equ	270	;# 
 18029   000110                     C1TBC           equ	272	;# 
 18030   000110                     C1TBCL          equ	272	;# 
 18031   000111                     C1TBCH          equ	273	;# 
 18032   000112                     C1TBCU          equ	274	;# 
 18033   000113                     C1TBCT          equ	275	;# 
 18034   000114                     C1TSCONL        equ	276	;# 
 18035   000115                     C1TSCONH        equ	277	;# 
 18036   000116                     C1TSCONU        equ	278	;# 
 18037   000117                     C1TSCONT        equ	279	;# 
 18038   000118                     C1VECL          equ	280	;# 
 18039   000119                     C1VECH          equ	281	;# 
 18040   00011A                     C1VECU          equ	282	;# 
 18041   00011B                     C1VECT          equ	283	;# 
 18042   00011C                     C1INTL          equ	284	;# 
 18043   00011D                     C1INTH          equ	285	;# 
 18044   00011E                     C1INTU          equ	286	;# 
 18045   00011F                     C1INTT          equ	287	;# 
 18046   000120                     C1RXIF          equ	288	;# 
 18047   000120                     C1RXIFL         equ	288	;# 
 18048   000121                     C1RXIFH         equ	289	;# 
 18049   000122                     C1RXIFU         equ	290	;# 
 18050   000123                     C1RXIFT         equ	291	;# 
 18051   000124                     C1TXIF          equ	292	;# 
 18052   000124                     C1TXIFL         equ	292	;# 
 18053   000125                     C1TXIFH         equ	293	;# 
 18054   000126                     C1TXIFU         equ	294	;# 
 18055   000127                     C1TXIFT         equ	295	;# 
 18056   000128                     C1RXOVIF        equ	296	;# 
 18057   000128                     C1RXOVIFL       equ	296	;# 
 18058   000129                     C1RXOVIFH       equ	297	;# 
 18059   00012A                     C1RXOVIFU       equ	298	;# 
 18060   00012B                     C1RXOVIFT       equ	299	;# 
 18061   00012C                     C1TXATIF        equ	300	;# 
 18062   00012C                     C1TXATIFL       equ	300	;# 
 18063   00012D                     C1TXATIFH       equ	301	;# 
 18064   00012E                     C1TXATIFU       equ	302	;# 
 18065   00012F                     C1TXATIFT       equ	303	;# 
 18066   000130                     C1TXREQ         equ	304	;# 
 18067   000130                     C1TXREQL        equ	304	;# 
 18068   000131                     C1TXREQH        equ	305	;# 
 18069   000132                     C1TXREQU        equ	306	;# 
 18070   000133                     C1TXREQT        equ	307	;# 
 18071   000134                     C1TRECL         equ	308	;# 
 18072   000135                     C1TRECH         equ	309	;# 
 18073   000136                     C1TRECU         equ	310	;# 
 18074   000137                     C1TRECT         equ	311	;# 
 18075   000138                     C1BDIAG0L       equ	312	;# 
 18076   000139                     C1BDIAG0H       equ	313	;# 
 18077   00013C                     C1BDIAG1L       equ	316	;# 
 18078   00013D                     C1BDIAG1H       equ	317	;# 
 18079   00013E                     C1BDIAG1U       equ	318	;# 
 18080   00013F                     C1BDIAG1T       equ	319	;# 
 18081   000140                     C1TEFCONL       equ	320	;# 
 18082   000141                     C1TEFCONH       equ	321	;# 
 18083   000142                     C1TEFCONU       equ	322	;# 
 18084   000143                     C1TEFCONT       equ	323	;# 
 18085   000144                     C1TEFSTAL       equ	324	;# 
 18086   000145                     C1TEFSTAH       equ	325	;# 
 18087   000146                     C1TEFSTAU       equ	326	;# 
 18088   000147                     C1TEFSTAT       equ	327	;# 
 18089   000148                     C1TEFUA         equ	328	;# 
 18090   000148                     C1TEFUAL        equ	328	;# 
 18091   000149                     C1TEFUAH        equ	329	;# 
 18092   00014A                     C1TEFUAU        equ	330	;# 
 18093   00014B                     C1TEFUAT        equ	331	;# 
 18094   00014C                     C1FIFOBA        equ	332	;# 
 18095   00014C                     C1FIFOBAL       equ	332	;# 
 18096   00014D                     C1FIFOBAH       equ	333	;# 
 18097   00014E                     C1FIFOBAU       equ	334	;# 
 18098   00014F                     C1FIFOBAT       equ	335	;# 
 18099   000150                     C1TXQCONL       equ	336	;# 
 18100   000151                     C1TXQCONH       equ	337	;# 
 18101   000152                     C1TXQCONU       equ	338	;# 
 18102   000153                     C1TXQCONT       equ	339	;# 
 18103   000154                     C1TXQSTAL       equ	340	;# 
 18104   000155                     C1TXQSTAH       equ	341	;# 
 18105   000156                     C1TXQSTAU       equ	342	;# 
 18106   000157                     C1TXQSTAT       equ	343	;# 
 18107   000158                     C1TXQUA         equ	344	;# 
 18108   000158                     C1TXQUAL        equ	344	;# 
 18109   000159                     C1TXQUAH        equ	345	;# 
 18110   00015A                     C1TXQUAU        equ	346	;# 
 18111   00015B                     C1TXQUAT        equ	347	;# 
 18112   00015C                     C1FIFOCON1      equ	348	;# 
 18113   00015C                     C1FIFOCON1L     equ	348	;# 
 18114   00015D                     C1FIFOCON1H     equ	349	;# 
 18115   00015E                     C1FIFOCON1U     equ	350	;# 
 18116   00015F                     C1FIFOCON1T     equ	351	;# 
 18117   000160                     C1FIFOSTA1      equ	352	;# 
 18118   000160                     C1FIFOSTA1L     equ	352	;# 
 18119   000161                     C1FIFOSTA1H     equ	353	;# 
 18120   000162                     C1FIFOSTA1U     equ	354	;# 
 18121   000163                     C1FIFOSTA1T     equ	355	;# 
 18122   000164                     C1FIFOUA1       equ	356	;# 
 18123   000164                     C1FIFOUA1L      equ	356	;# 
 18124   000165                     C1FIFOUA1H      equ	357	;# 
 18125   000166                     C1FIFOUA1U      equ	358	;# 
 18126   000167                     C1FIFOUA1T      equ	359	;# 
 18127   000168                     C1FIFOCON2      equ	360	;# 
 18128   000168                     C1FIFOCON2L     equ	360	;# 
 18129   000169                     C1FIFOCON2H     equ	361	;# 
 18130   00016A                     C1FIFOCON2U     equ	362	;# 
 18131   00016B                     C1FIFOCON2T     equ	363	;# 
 18132   00016C                     C1FIFOSTA2      equ	364	;# 
 18133   00016C                     C1FIFOSTA2L     equ	364	;# 
 18134   00016D                     C1FIFOSTA2H     equ	365	;# 
 18135   00016E                     C1FIFOSTA2U     equ	366	;# 
 18136   00016F                     C1FIFOSTA2T     equ	367	;# 
 18137   000170                     C1FIFOUA2       equ	368	;# 
 18138   000170                     C1FIFOUA2L      equ	368	;# 
 18139   000171                     C1FIFOUA2H      equ	369	;# 
 18140   000172                     C1FIFOUA2U      equ	370	;# 
 18141   000173                     C1FIFOUA2T      equ	371	;# 
 18142   000174                     C1FIFOCON3      equ	372	;# 
 18143   000174                     C1FIFOCON3L     equ	372	;# 
 18144   000175                     C1FIFOCON3H     equ	373	;# 
 18145   000176                     C1FIFOCON3U     equ	374	;# 
 18146   000177                     C1FIFOCON3T     equ	375	;# 
 18147   000178                     C1FIFOSTA3      equ	376	;# 
 18148   000178                     C1FIFOSTA3L     equ	376	;# 
 18149   000179                     C1FIFOSTA3H     equ	377	;# 
 18150   00017A                     C1FIFOSTA3U     equ	378	;# 
 18151   00017B                     C1FIFOSTA3T     equ	379	;# 
 18152   00017C                     C1FIFOUA3       equ	380	;# 
 18153   00017C                     C1FIFOUA3L      equ	380	;# 
 18154   00017D                     C1FIFOUA3H      equ	381	;# 
 18155   00017E                     C1FIFOUA3U      equ	382	;# 
 18156   00017F                     C1FIFOUA3T      equ	383	;# 
 18157   000180                     C1FLTCON0L      equ	384	;# 
 18158   000181                     C1FLTCON0H      equ	385	;# 
 18159   000182                     C1FLTCON0U      equ	386	;# 
 18160   000183                     C1FLTCON0T      equ	387	;# 
 18161   000184                     C1FLTCON1L      equ	388	;# 
 18162   000185                     C1FLTCON1H      equ	389	;# 
 18163   000186                     C1FLTCON1U      equ	390	;# 
 18164   000187                     C1FLTCON1T      equ	391	;# 
 18165   000188                     C1FLTCON2L      equ	392	;# 
 18166   000189                     C1FLTCON2H      equ	393	;# 
 18167   00018A                     C1FLTCON2U      equ	394	;# 
 18168   00018B                     C1FLTCON2T      equ	395	;# 
 18169   00018C                     C1FLTOBJ0       equ	396	;# 
 18170   00018C                     C1FLTOBJ0L      equ	396	;# 
 18171   00018D                     C1FLTOBJ0H      equ	397	;# 
 18172   00018E                     C1FLTOBJ0U      equ	398	;# 
 18173   00018F                     C1FLTOBJ0T      equ	399	;# 
 18174   000190                     C1MASK0         equ	400	;# 
 18175   000190                     C1MASK0L        equ	400	;# 
 18176   000191                     C1MASK0H        equ	401	;# 
 18177   000192                     C1MASK0U        equ	402	;# 
 18178   000193                     C1MASK0T        equ	403	;# 
 18179   000194                     C1FLTOBJ1       equ	404	;# 
 18180   000194                     C1FLTOBJ1L      equ	404	;# 
 18181   000195                     C1FLTOBJ1H      equ	405	;# 
 18182   000196                     C1FLTOBJ1U      equ	406	;# 
 18183   000197                     C1FLTOBJ1T      equ	407	;# 
 18184   000198                     C1MASK1         equ	408	;# 
 18185   000198                     C1MASK1L        equ	408	;# 
 18186   000199                     C1MASK1H        equ	409	;# 
 18187   00019A                     C1MASK1U        equ	410	;# 
 18188   00019B                     C1MASK1T        equ	411	;# 
 18189   00019C                     C1FLTOBJ2       equ	412	;# 
 18190   00019C                     C1FLTOBJ2L      equ	412	;# 
 18191   00019D                     C1FLTOBJ2H      equ	413	;# 
 18192   00019E                     C1FLTOBJ2U      equ	414	;# 
 18193   00019F                     C1FLTOBJ2T      equ	415	;# 
 18194   0001A0                     C1MASK2         equ	416	;# 
 18195   0001A0                     C1MASK2L        equ	416	;# 
 18196   0001A1                     C1MASK2H        equ	417	;# 
 18197   0001A2                     C1MASK2U        equ	418	;# 
 18198   0001A3                     C1MASK2T        equ	419	;# 
 18199   0001A4                     C1FLTOBJ3       equ	420	;# 
 18200   0001A4                     C1FLTOBJ3L      equ	420	;# 
 18201   0001A5                     C1FLTOBJ3H      equ	421	;# 
 18202   0001A6                     C1FLTOBJ3U      equ	422	;# 
 18203   0001A7                     C1FLTOBJ3T      equ	423	;# 
 18204   0001A8                     C1MASK3         equ	424	;# 
 18205   0001A8                     C1MASK3L        equ	424	;# 
 18206   0001A9                     C1MASK3H        equ	425	;# 
 18207   0001AA                     C1MASK3U        equ	426	;# 
 18208   0001AB                     C1MASK3T        equ	427	;# 
 18209   0001AC                     C1FLTOBJ4       equ	428	;# 
 18210   0001AC                     C1FLTOBJ4L      equ	428	;# 
 18211   0001AD                     C1FLTOBJ4H      equ	429	;# 
 18212   0001AE                     C1FLTOBJ4U      equ	430	;# 
 18213   0001AF                     C1FLTOBJ4T      equ	431	;# 
 18214   0001B0                     C1MASK4         equ	432	;# 
 18215   0001B0                     C1MASK4L        equ	432	;# 
 18216   0001B1                     C1MASK4H        equ	433	;# 
 18217   0001B2                     C1MASK4U        equ	434	;# 
 18218   0001B3                     C1MASK4T        equ	435	;# 
 18219   0001B4                     C1FLTOBJ5       equ	436	;# 
 18220   0001B4                     C1FLTOBJ5L      equ	436	;# 
 18221   0001B5                     C1FLTOBJ5H      equ	437	;# 
 18222   0001B6                     C1FLTOBJ5U      equ	438	;# 
 18223   0001B7                     C1FLTOBJ5T      equ	439	;# 
 18224   0001B8                     C1MASK5         equ	440	;# 
 18225   0001B8                     C1MASK5L        equ	440	;# 
 18226   0001B9                     C1MASK5H        equ	441	;# 
 18227   0001BA                     C1MASK5U        equ	442	;# 
 18228   0001BB                     C1MASK5T        equ	443	;# 
 18229   0001BC                     C1FLTOBJ6       equ	444	;# 
 18230   0001BC                     C1FLTOBJ6L      equ	444	;# 
 18231   0001BD                     C1FLTOBJ6H      equ	445	;# 
 18232   0001BE                     C1FLTOBJ6U      equ	446	;# 
 18233   0001BF                     C1FLTOBJ6T      equ	447	;# 
 18234   0001C0                     C1MASK6         equ	448	;# 
 18235   0001C0                     C1MASK6L        equ	448	;# 
 18236   0001C1                     C1MASK6H        equ	449	;# 
 18237   0001C2                     C1MASK6U        equ	450	;# 
 18238   0001C3                     C1MASK6T        equ	451	;# 
 18239   0001C4                     C1FLTOBJ7       equ	452	;# 
 18240   0001C4                     C1FLTOBJ7L      equ	452	;# 
 18241   0001C5                     C1FLTOBJ7H      equ	453	;# 
 18242   0001C6                     C1FLTOBJ7U      equ	454	;# 
 18243   0001C7                     C1FLTOBJ7T      equ	455	;# 
 18244   0001C8                     C1MASK7         equ	456	;# 
 18245   0001C8                     C1MASK7L        equ	456	;# 
 18246   0001C9                     C1MASK7H        equ	457	;# 
 18247   0001CA                     C1MASK7U        equ	458	;# 
 18248   0001CB                     C1MASK7T        equ	459	;# 
 18249   0001CC                     C1FLTOBJ8       equ	460	;# 
 18250   0001CC                     C1FLTOBJ8L      equ	460	;# 
 18251   0001CD                     C1FLTOBJ8H      equ	461	;# 
 18252   0001CE                     C1FLTOBJ8U      equ	462	;# 
 18253   0001CF                     C1FLTOBJ8T      equ	463	;# 
 18254   0001D0                     C1MASK8         equ	464	;# 
 18255   0001D0                     C1MASK8L        equ	464	;# 
 18256   0001D1                     C1MASK8H        equ	465	;# 
 18257   0001D2                     C1MASK8U        equ	466	;# 
 18258   0001D3                     C1MASK8T        equ	467	;# 
 18259   0001D4                     C1FLTOBJ9       equ	468	;# 
 18260   0001D4                     C1FLTOBJ9L      equ	468	;# 
 18261   0001D5                     C1FLTOBJ9H      equ	469	;# 
 18262   0001D6                     C1FLTOBJ9U      equ	470	;# 
 18263   0001D7                     C1FLTOBJ9T      equ	471	;# 
 18264   0001D8                     C1MASK9         equ	472	;# 
 18265   0001D8                     C1MASK9L        equ	472	;# 
 18266   0001D9                     C1MASK9H        equ	473	;# 
 18267   0001DA                     C1MASK9U        equ	474	;# 
 18268   0001DB                     C1MASK9T        equ	475	;# 
 18269   0001DC                     C1FLTOBJ10      equ	476	;# 
 18270   0001DC                     C1FLTOBJ10L     equ	476	;# 
 18271   0001DD                     C1FLTOBJ10H     equ	477	;# 
 18272   0001DE                     C1FLTOBJ10U     equ	478	;# 
 18273   0001DF                     C1FLTOBJ10T     equ	479	;# 
 18274   0001E0                     C1MASK10        equ	480	;# 
 18275   0001E0                     C1MASK10L       equ	480	;# 
 18276   0001E1                     C1MASK10H       equ	481	;# 
 18277   0001E2                     C1MASK10U       equ	482	;# 
 18278   0001E3                     C1MASK10T       equ	483	;# 
 18279   0001E4                     C1FLTOBJ11      equ	484	;# 
 18280   0001E4                     C1FLTOBJ11L     equ	484	;# 
 18281   0001E5                     C1FLTOBJ11H     equ	485	;# 
 18282   0001E6                     C1FLTOBJ11U     equ	486	;# 
 18283   0001E7                     C1FLTOBJ11T     equ	487	;# 
 18284   0001E8                     C1MASK11        equ	488	;# 
 18285   0001E8                     C1MASK11L       equ	488	;# 
 18286   0001E9                     C1MASK11H       equ	489	;# 
 18287   0001EA                     C1MASK11U       equ	490	;# 
 18288   0001EB                     C1MASK11T       equ	491	;# 
 18289   000200                     PPSLOCK         equ	512	;# 
 18290   000201                     RA0PPS          equ	513	;# 
 18291   000202                     RA1PPS          equ	514	;# 
 18292   000203                     RA2PPS          equ	515	;# 
 18293   000204                     RA3PPS          equ	516	;# 
 18294   000205                     RA4PPS          equ	517	;# 
 18295   000206                     RA5PPS          equ	518	;# 
 18296   000207                     RA6PPS          equ	519	;# 
 18297   000208                     RA7PPS          equ	520	;# 
 18298   000209                     RB0PPS          equ	521	;# 
 18299   00020A                     RB1PPS          equ	522	;# 
 18300   00020B                     RB2PPS          equ	523	;# 
 18301   00020C                     RB3PPS          equ	524	;# 
 18302   00020D                     RB4PPS          equ	525	;# 
 18303   00020E                     RB5PPS          equ	526	;# 
 18304   00020F                     RB6PPS          equ	527	;# 
 18305   000210                     RB7PPS          equ	528	;# 
 18306   000211                     RC0PPS          equ	529	;# 
 18307   000212                     RC1PPS          equ	530	;# 
 18308   000213                     RC2PPS          equ	531	;# 
 18309   000214                     RC3PPS          equ	532	;# 
 18310   000215                     RC4PPS          equ	533	;# 
 18311   000216                     RC5PPS          equ	534	;# 
 18312   000217                     RC6PPS          equ	535	;# 
 18313   000218                     RC7PPS          equ	536	;# 
 18314   00023D                     CANRXPPS        equ	573	;# 
 18315   00023E                     INT0PPS         equ	574	;# 
 18316   00023F                     INT1PPS         equ	575	;# 
 18317   000240                     INT2PPS         equ	576	;# 
 18318   000241                     T0CKIPPS        equ	577	;# 
 18319   000242                     T1CKIPPS        equ	578	;# 
 18320   000243                     T1GPPS          equ	579	;# 
 18321   000244                     T3CKIPPS        equ	580	;# 
 18322   000245                     T3GPPS          equ	581	;# 
 18323   000246                     T5CKIPPS        equ	582	;# 
 18324   000247                     T5GPPS          equ	583	;# 
 18325   000248                     T2INPPS         equ	584	;# 
 18326   000249                     T4INPPS         equ	585	;# 
 18327   00024A                     T6INPPS         equ	586	;# 
 18328   00024B                     TUIN0PPS        equ	587	;# 
 18329   00024C                     TUIN1PPS        equ	588	;# 
 18330   00024F                     CCP1PPS         equ	591	;# 
 18331   000250                     CCP2PPS         equ	592	;# 
 18332   000251                     CCP3PPS         equ	593	;# 
 18333   000253                     PWM1ERSPPS      equ	595	;# 
 18334   000254                     PWM2ERSPPS      equ	596	;# 
 18335   000255                     PWM3ERSPPS      equ	597	;# 
 18336   000256                     PWM4ERSPPS      equ	598	;# 
 18337   000257                     PWMIN0PPS       equ	599	;# 
 18338   000258                     PWMIN1PPS       equ	600	;# 
 18339   000259                     SMT1WINPPS      equ	601	;# 
 18340   00025A                     SMT1SIGPPS      equ	602	;# 
 18341   00025B                     CWG1PPS         equ	603	;# 
 18342   00025B                     CWG1INPPS       equ	603	;# 
 18343   00025C                     CWG2PPS         equ	604	;# 
 18344   00025C                     CWG2INPPS       equ	604	;# 
 18345   00025D                     CWG3PPS         equ	605	;# 
 18346   00025D                     CWG3INPPS       equ	605	;# 
 18347   00025E                     MD1CARLPPS      equ	606	;# 
 18348   00025E                     MDCARLPPS       equ	606	;# 
 18349   00025F                     MD1CARHPPS      equ	607	;# 
 18350   00025F                     MDCARHPPS       equ	607	;# 
 18351   000260                     MD1SRCPPS       equ	608	;# 
 18352   000260                     MDSRCPPS        equ	608	;# 
 18353   000261                     CLCIN0PPS       equ	609	;# 
 18354   000262                     CLCIN1PPS       equ	610	;# 
 18355   000263                     CLCIN2PPS       equ	611	;# 
 18356   000264                     CLCIN3PPS       equ	612	;# 
 18357   000265                     CLCIN4PPS       equ	613	;# 
 18358   000266                     CLCIN5PPS       equ	614	;# 
 18359   000267                     CLCIN6PPS       equ	615	;# 
 18360   000268                     CLCIN7PPS       equ	616	;# 
 18361   000269                     ADACTPPS        equ	617	;# 
 18362   00026A                     SPI1SCKPPS      equ	618	;# 
 18363   00026B                     SPI1SDIPPS      equ	619	;# 
 18364   00026C                     SPI1SSPPS       equ	620	;# 
 18365   00026D                     SPI2SCKPPS      equ	621	;# 
 18366   00026E                     SPI2SDIPPS      equ	622	;# 
 18367   00026F                     SPI2SSPPS       equ	623	;# 
 18368   000270                     I2C1SDAPPS      equ	624	;# 
 18369   000271                     I2C1SCLPPS      equ	625	;# 
 18370   000272                     U1RXPPS         equ	626	;# 
 18371   000273                     U1CTSPPS        equ	627	;# 
 18372   000274                     U2RXPPS         equ	628	;# 
 18373   000275                     U2CTSPPS        equ	629	;# 
 18374   000276                     U3RXPPS         equ	630	;# 
 18375   000277                     U3CTSPPS        equ	631	;# 
 18376   000278                     U4RXPPS         equ	632	;# 
 18377   000279                     U4CTSPPS        equ	633	;# 
 18378   00027A                     U5RXPPS         equ	634	;# 
 18379   00027B                     U5CTSPPS        equ	635	;# 
 18380   000286                     RC4I2C          equ	646	;# 
 18381   000287                     RC3I2C          equ	647	;# 
 18382   000288                     RB2I2C          equ	648	;# 
 18383   000289                     RB1I2C          equ	649	;# 
 18384   00028A                     I2C1RXB         equ	650	;# 
 18385   00028B                     I2C1TXB         equ	651	;# 
 18386   00028C                     I2C1CNTL        equ	652	;# 
 18387   00028D                     I2C1CNTH        equ	653	;# 
 18388   00028E                     I2C1ADB0        equ	654	;# 
 18389   00028F                     I2C1ADB1        equ	655	;# 
 18390   000290                     I2C1ADR0        equ	656	;# 
 18391   000291                     I2C1ADR1        equ	657	;# 
 18392   000292                     I2C1ADR2        equ	658	;# 
 18393   000293                     I2C1ADR3        equ	659	;# 
 18394   000294                     I2C1CON0        equ	660	;# 
 18395   000295                     I2C1CON1        equ	661	;# 
 18396   000296                     I2C1CON2        equ	662	;# 
 18397   000297                     I2C1ERR         equ	663	;# 
 18398   000298                     I2C1STAT0       equ	664	;# 
 18399   000299                     I2C1STAT1       equ	665	;# 
 18400   00029A                     I2C1PIR         equ	666	;# 
 18401   00029B                     I2C1PIE         equ	667	;# 
 18402   00029C                     I2C1BTO         equ	668	;# 
 18403   00029D                     I2C1BAUD        equ	669	;# 
 18404   00029E                     I2C1CLK         equ	670	;# 
 18405   00029F                     I2C1BTOC        equ	671	;# 
 18406   0002A1                     U1RXB           equ	673	;# 
 18407   0002A1                     U1RXBL          equ	673	;# 
 18408   0002A2                     U1RXCHK         equ	674	;# 
 18409   0002A3                     U1TXB           equ	675	;# 
 18410   0002A3                     U1TXBL          equ	675	;# 
 18411   0002A4                     U1TXCHK         equ	676	;# 
 18412   0002A5                     U1P1            equ	677	;# 
 18413   0002A5                     U1P1L           equ	677	;# 
 18414   0002A6                     U1P1H           equ	678	;# 
 18415   0002A7                     U1P2            equ	679	;# 
 18416   0002A7                     U1P2L           equ	679	;# 
 18417   0002A8                     U1P2H           equ	680	;# 
 18418   0002A9                     U1P3            equ	681	;# 
 18419   0002A9                     U1P3L           equ	681	;# 
 18420   0002AA                     U1P3H           equ	682	;# 
 18421   0002AB                     U1CON0          equ	683	;# 
 18422   0002AC                     U1CON1          equ	684	;# 
 18423   0002AD                     U1CON2          equ	685	;# 
 18424   0002AE                     U1BRG           equ	686	;# 
 18425   0002AE                     U1BRGL          equ	686	;# 
 18426   0002AF                     U1BRGH          equ	687	;# 
 18427   0002B0                     U1FIFO          equ	688	;# 
 18428   0002B1                     U1UIR           equ	689	;# 
 18429   0002B2                     U1ERRIR         equ	690	;# 
 18430   0002B3                     U1ERRIE         equ	691	;# 
 18431   0002B4                     U2RXB           equ	692	;# 
 18432   0002B4                     U2RXBL          equ	692	;# 
 18433   0002B5                     U2RXCHK         equ	693	;# 
 18434   0002B6                     U2TXB           equ	694	;# 
 18435   0002B6                     U2TXBL          equ	694	;# 
 18436   0002B7                     U2TXCHK         equ	695	;# 
 18437   0002B8                     U2P1            equ	696	;# 
 18438   0002B8                     U2P1L           equ	696	;# 
 18439   0002B9                     U2P1H           equ	697	;# 
 18440   0002BA                     U2P2            equ	698	;# 
 18441   0002BA                     U2P2L           equ	698	;# 
 18442   0002BB                     U2P2H           equ	699	;# 
 18443   0002BC                     U2P3            equ	700	;# 
 18444   0002BC                     U2P3L           equ	700	;# 
 18445   0002BD                     U2P3H           equ	701	;# 
 18446   0002BE                     U2CON0          equ	702	;# 
 18447   0002BF                     U2CON1          equ	703	;# 
 18448   0002C0                     U2CON2          equ	704	;# 
 18449   0002C1                     U2BRG           equ	705	;# 
 18450   0002C1                     U2BRGL          equ	705	;# 
 18451   0002C2                     U2BRGH          equ	706	;# 
 18452   0002C3                     U2FIFO          equ	707	;# 
 18453   0002C4                     U2UIR           equ	708	;# 
 18454   0002C5                     U2ERRIR         equ	709	;# 
 18455   0002C6                     U2ERRIE         equ	710	;# 
 18456   0002C7                     U3RXB           equ	711	;# 
 18457   0002C7                     U3RXBL          equ	711	;# 
 18458   0002C9                     U3TXB           equ	713	;# 
 18459   0002C9                     U3TXBL          equ	713	;# 
 18460   0002CB                     U3P1            equ	715	;# 
 18461   0002CB                     U3P1L           equ	715	;# 
 18462   0002CD                     U3P2            equ	717	;# 
 18463   0002CD                     U3P2L           equ	717	;# 
 18464   0002CF                     U3P3            equ	719	;# 
 18465   0002CF                     U3P3L           equ	719	;# 
 18466   0002D1                     U3CON0          equ	721	;# 
 18467   0002D2                     U3CON1          equ	722	;# 
 18468   0002D3                     U3CON2          equ	723	;# 
 18469   0002D4                     U3BRG           equ	724	;# 
 18470   0002D4                     U3BRGL          equ	724	;# 
 18471   0002D5                     U3BRGH          equ	725	;# 
 18472   0002D6                     U3FIFO          equ	726	;# 
 18473   0002D7                     U3UIR           equ	727	;# 
 18474   0002D8                     U3ERRIR         equ	728	;# 
 18475   0002D9                     U3ERRIE         equ	729	;# 
 18476   0002DA                     U4RXB           equ	730	;# 
 18477   0002DA                     U4RXBL          equ	730	;# 
 18478   0002DC                     U4TXB           equ	732	;# 
 18479   0002DC                     U4TXBL          equ	732	;# 
 18480   0002DE                     U4P1            equ	734	;# 
 18481   0002DE                     U4P1L           equ	734	;# 
 18482   0002E0                     U4P2            equ	736	;# 
 18483   0002E0                     U4P2L           equ	736	;# 
 18484   0002E2                     U4P3            equ	738	;# 
 18485   0002E2                     U4P3L           equ	738	;# 
 18486   0002E4                     U4CON0          equ	740	;# 
 18487   0002E5                     U4CON1          equ	741	;# 
 18488   0002E6                     U4CON2          equ	742	;# 
 18489   0002E7                     U4BRG           equ	743	;# 
 18490   0002E7                     U4BRGL          equ	743	;# 
 18491   0002E8                     U4BRGH          equ	744	;# 
 18492   0002E9                     U4FIFO          equ	745	;# 
 18493   0002EA                     U4UIR           equ	746	;# 
 18494   0002EB                     U4ERRIR         equ	747	;# 
 18495   0002EC                     U4ERRIE         equ	748	;# 
 18496   0002ED                     U5RXB           equ	749	;# 
 18497   0002ED                     U5RXBL          equ	749	;# 
 18498   0002EF                     U5TXB           equ	751	;# 
 18499   0002EF                     U5TXBL          equ	751	;# 
 18500   0002F1                     U5P1            equ	753	;# 
 18501   0002F1                     U5P1L           equ	753	;# 
 18502   0002F3                     U5P2            equ	755	;# 
 18503   0002F3                     U5P2L           equ	755	;# 
 18504   0002F5                     U5P3            equ	757	;# 
 18505   0002F5                     U5P3L           equ	757	;# 
 18506   0002F7                     U5CON0          equ	759	;# 
 18507   0002F8                     U5CON1          equ	760	;# 
 18508   0002F9                     U5CON2          equ	761	;# 
 18509   0002FA                     U5BRG           equ	762	;# 
 18510   0002FA                     U5BRGL          equ	762	;# 
 18511   0002FB                     U5BRGH          equ	763	;# 
 18512   0002FC                     U5FIFO          equ	764	;# 
 18513   0002FD                     U5UIR           equ	765	;# 
 18514   0002FE                     U5ERRIR         equ	766	;# 
 18515   0002FF                     U5ERRIE         equ	767	;# 
 18516   000300                     SMT1TMR         equ	768	;# 
 18517   000300                     SMT1TMRL        equ	768	;# 
 18518   000301                     SMT1TMRH        equ	769	;# 
 18519   000302                     SMT1TMRU        equ	770	;# 
 18520   000303                     SMT1CPR         equ	771	;# 
 18521   000303                     SMT1CPRL        equ	771	;# 
 18522   000304                     SMT1CPRH        equ	772	;# 
 18523   000305                     SMT1CPRU        equ	773	;# 
 18524   000306                     SMT1CPW         equ	774	;# 
 18525   000306                     SMT1CPWL        equ	774	;# 
 18526   000307                     SMT1CPWH        equ	775	;# 
 18527   000308                     SMT1CPWU        equ	776	;# 
 18528   000309                     SMT1PR          equ	777	;# 
 18529   000309                     SMT1PRL         equ	777	;# 
 18530   00030A                     SMT1PRH         equ	778	;# 
 18531   00030B                     SMT1PRU         equ	779	;# 
 18532   00030C                     SMT1CON0        equ	780	;# 
 18533   00030D                     SMT1CON1        equ	781	;# 
 18534   00030E                     SMT1STAT        equ	782	;# 
 18535   00030F                     SMT1CLK         equ	783	;# 
 18536   000310                     SMT1SIG         equ	784	;# 
 18537   000311                     SMT1WIN         equ	785	;# 
 18538   000318                     TMR0L           equ	792	;# 
 18539   000318                     TMR0            equ	792	;# 
 18540   000319                     TMR0H           equ	793	;# 
 18541   000319                     PR0             equ	793	;# 
 18542   00031A                     T0CON0          equ	794	;# 
 18543   00031B                     T0CON1          equ	795	;# 
 18544   00031C                     TMR1            equ	796	;# 
 18545   00031C                     TMR1L           equ	796	;# 
 18546   00031D                     TMR1H           equ	797	;# 
 18547   00031E                     T1CON           equ	798	;# 
 18548   00031E                     TMR1CON         equ	798	;# 
 18549   00031F                     T1GCON          equ	799	;# 
 18550   00031F                     TMR1GCON        equ	799	;# 
 18551   000320                     T1GATE          equ	800	;# 
 18552   000320                     TMR1GATE        equ	800	;# 
 18553   000321                     T1CLK           equ	801	;# 
 18554   000321                     TMR1CLK         equ	801	;# 
 18555   000321                     PR1             equ	801	;# 
 18556   000322                     T2TMR           equ	802	;# 
 18557   000322                     TMR2            equ	802	;# 
 18558   000323                     T2PR            equ	803	;# 
 18559   000323                     PR2             equ	803	;# 
 18560   000324                     T2CON           equ	804	;# 
 18561   000325                     T2HLT           equ	805	;# 
 18562   000326                     T2CLKCON        equ	806	;# 
 18563   000326                     T2CLK           equ	806	;# 
 18564   000327                     T2RST           equ	807	;# 
 18565   000328                     TMR3            equ	808	;# 
 18566   000328                     TMR3L           equ	808	;# 
 18567   000329                     TMR3H           equ	809	;# 
 18568   00032A                     T3CON           equ	810	;# 
 18569   00032A                     TMR3CON         equ	810	;# 
 18570   00032B                     T3GCON          equ	811	;# 
 18571   00032B                     TMR3GCON        equ	811	;# 
 18572   00032C                     T3GATE          equ	812	;# 
 18573   00032C                     TMR3GATE        equ	812	;# 
 18574   00032D                     T3CLK           equ	813	;# 
 18575   00032D                     TMR3CLK         equ	813	;# 
 18576   00032D                     PR3             equ	813	;# 
 18577   00032E                     T4TMR           equ	814	;# 
 18578   00032E                     TMR4            equ	814	;# 
 18579   00032F                     T4PR            equ	815	;# 
 18580   00032F                     PR4             equ	815	;# 
 18581   000330                     T4CON           equ	816	;# 
 18582   000331                     T4HLT           equ	817	;# 
 18583   000332                     T4CLKCON        equ	818	;# 
 18584   000332                     T4CLK           equ	818	;# 
 18585   000333                     T4RST           equ	819	;# 
 18586   000334                     TMR5            equ	820	;# 
 18587   000334                     TMR5L           equ	820	;# 
 18588   000335                     TMR5H           equ	821	;# 
 18589   000336                     T5CON           equ	822	;# 
 18590   000336                     TMR5CON         equ	822	;# 
 18591   000337                     T5GCON          equ	823	;# 
 18592   000337                     TMR5GCON        equ	823	;# 
 18593   000338                     T5GATE          equ	824	;# 
 18594   000338                     TMR5GATE        equ	824	;# 
 18595   000339                     T5CLK           equ	825	;# 
 18596   000339                     TMR5CLK         equ	825	;# 
 18597   000339                     PR5             equ	825	;# 
 18598   00033A                     T6TMR           equ	826	;# 
 18599   00033A                     TMR6            equ	826	;# 
 18600   00033B                     T6PR            equ	827	;# 
 18601   00033B                     PR6             equ	827	;# 
 18602   00033C                     T6CON           equ	828	;# 
 18603   00033D                     T6HLT           equ	829	;# 
 18604   00033E                     T6CLKCON        equ	830	;# 
 18605   00033E                     T6CLK           equ	830	;# 
 18606   00033F                     T6RST           equ	831	;# 
 18607   000340                     CCPR1           equ	832	;# 
 18608   000340                     CCPR1L          equ	832	;# 
 18609   000341                     CCPR1H          equ	833	;# 
 18610   000342                     CCP1CON         equ	834	;# 
 18611   000343                     CCP1CAP         equ	835	;# 
 18612   000344                     CCPR2           equ	836	;# 
 18613   000344                     CCPR2L          equ	836	;# 
 18614   000345                     CCPR2H          equ	837	;# 
 18615   000346                     CCP2CON         equ	838	;# 
 18616   000347                     CCP2CAP         equ	839	;# 
 18617   000348                     CCPR3           equ	840	;# 
 18618   000348                     CCPR3L          equ	840	;# 
 18619   000349                     CCPR3H          equ	841	;# 
 18620   00034A                     CCP3CON         equ	842	;# 
 18621   00034B                     CCP3CAP         equ	843	;# 
 18622   00034C                     CCPTMRS0        equ	844	;# 
 18623   00034F                     CRCDATA         equ	847	;# 
 18624   00034F                     CRCDATAL        equ	847	;# 
 18625   000350                     CRCDATAH        equ	848	;# 
 18626   000351                     CRCDATAU        equ	849	;# 
 18627   000352                     CRCDATAT        equ	850	;# 
 18628   000353                     CRCOUT          equ	851	;# 
 18629   000353                     CRCSHFT         equ	851	;# 
 18630   000353                     CRCXOR          equ	851	;# 
 18631   000353                     CRCOUTL         equ	851	;# 
 18632   000353                     CRCSHFTL        equ	851	;# 
 18633   000353                     CRCSHIFTL       equ	851	;# 
 18634   000353                     CRCXORL         equ	851	;# 
 18635   000354                     CRCOUTH         equ	852	;# 
 18636   000354                     CRCSHFTH        equ	852	;# 
 18637   000354                     CRCSHIFTH       equ	852	;# 
 18638   000354                     CRCXORH         equ	852	;# 
 18639   000355                     CRCOUTU         equ	853	;# 
 18640   000355                     CRCSHFTU        equ	853	;# 
 18641   000355                     CRCSHIFTU       equ	853	;# 
 18642   000355                     CRCXORU         equ	853	;# 
 18643   000356                     CRCOUTT         equ	854	;# 
 18644   000356                     CRCSHFTT        equ	854	;# 
 18645   000356                     CRCSHIFTT       equ	854	;# 
 18646   000356                     CRCXORT         equ	854	;# 
 18647   000357                     CRCCON0         equ	855	;# 
 18648   000358                     CRCCON1         equ	856	;# 
 18649   000359                     CRCCON2         equ	857	;# 
 18650   00035A                     SCANLADR        equ	858	;# 
 18651   00035A                     SCANLADRL       equ	858	;# 
 18652   00035B                     SCANLADRH       equ	859	;# 
 18653   00035C                     SCANLADRU       equ	860	;# 
 18654   00035D                     SCANHADR        equ	861	;# 
 18655   00035D                     SCANHADRL       equ	861	;# 
 18656   00035E                     SCANHADRH       equ	862	;# 
 18657   00035F                     SCANHADRU       equ	863	;# 
 18658   000360                     SCANCON0        equ	864	;# 
 18659   000361                     SCANTRIG        equ	865	;# 
 18660   000362                     IPR0            equ	866	;# 
 18661   000363                     IPR1            equ	867	;# 
 18662   000364                     IPR2            equ	868	;# 
 18663   000365                     IPR3            equ	869	;# 
 18664   000366                     IPR4            equ	870	;# 
 18665   000367                     IPR5            equ	871	;# 
 18666   000368                     IPR6            equ	872	;# 
 18667   000369                     IPR7            equ	873	;# 
 18668   00036A                     IPR8            equ	874	;# 
 18669   00036B                     IPR9            equ	875	;# 
 18670   00036C                     IPR10           equ	876	;# 
 18671   00036D                     IPR11           equ	877	;# 
 18672   00036E                     IPR12           equ	878	;# 
 18673   00036F                     IPR13           equ	879	;# 
 18674   000370                     IPR14           equ	880	;# 
 18675   000371                     IPR15           equ	881	;# 
 18676   000373                     STATUS_CSHAD    equ	883	;# 
 18677   000374                     WREG_CSHAD      equ	884	;# 
 18678   000375                     BSR_CSHAD       equ	885	;# 
 18679   000376                     SHADCON         equ	886	;# 
 18680   000377                     STATUS_SHAD     equ	887	;# 
 18681   000378                     WREG_SHAD       equ	888	;# 
 18682   000379                     BSR_SHAD        equ	889	;# 
 18683   00037A                     PCLATH_SHAD     equ	890	;# 
 18684   00037B                     PCLATU_SHAD     equ	891	;# 
 18685   00037C                     FSR0SH          equ	892	;# 
 18686   00037C                     FSR0L_SHAD      equ	892	;# 
 18687   00037D                     FSR0H_SHAD      equ	893	;# 
 18688   00037E                     FSR1SH          equ	894	;# 
 18689   00037E                     FSR1L_SHAD      equ	894	;# 
 18690   00037F                     FSR1H_SHAD      equ	895	;# 
 18691   000380                     FSR2SH          equ	896	;# 
 18692   000380                     FSR2L_SHAD      equ	896	;# 
 18693   000381                     FSR2H_SHAD      equ	897	;# 
 18694   000382                     PRODSH          equ	898	;# 
 18695   000382                     PRODL_SHAD      equ	898	;# 
 18696   000383                     PRODH_SHAD      equ	899	;# 
 18697   000387                     TU16ACON0       equ	903	;# 
 18698   000388                     TU16ACON1       equ	904	;# 
 18699   000389                     TU16AHLT        equ	905	;# 
 18700   00038A                     TU16APS         equ	906	;# 
 18701   00038B                     TU16ATMR        equ	907	;# 
 18702   00038B                     TU16ACR         equ	907	;# 
 18703   00038B                     TU16ATMRL       equ	907	;# 
 18704   00038B                     TU16ACRL        equ	907	;# 
 18705   00038C                     TU16ATMRH       equ	908	;# 
 18706   00038C                     TU16ACRH        equ	908	;# 
 18707   00038D                     TU16APR         equ	909	;# 
 18708   00038D                     TU16APRL        equ	909	;# 
 18709   00038E                     TU16APRH        equ	910	;# 
 18710   00038F                     TU16ACLK        equ	911	;# 
 18711   000390                     TU16AERS        equ	912	;# 
 18712   000393                     TU16BCON0       equ	915	;# 
 18713   000394                     TU16BCON1       equ	916	;# 
 18714   000395                     TU16BHLT        equ	917	;# 
 18715   000396                     TU16BPS         equ	918	;# 
 18716   000397                     TU16BTMR        equ	919	;# 
 18717   000397                     TU16BCR         equ	919	;# 
 18718   000397                     TU16BTMRL       equ	919	;# 
 18719   000397                     TU16BCRL        equ	919	;# 
 18720   000398                     TU16BTMRH       equ	920	;# 
 18721   000398                     TU16BCRH        equ	920	;# 
 18722   000399                     TU16BPR         equ	921	;# 
 18723   000399                     TU16BPRL        equ	921	;# 
 18724   00039A                     TU16BPRH        equ	922	;# 
 18725   00039B                     TU16BCLK        equ	923	;# 
 18726   00039C                     TU16BERS        equ	924	;# 
 18727   0003BB                     TUCHAIN         equ	955	;# 
 18728   0003BC                     CWG1CLK         equ	956	;# 
 18729   0003BC                     CWG1CLKCON      equ	956	;# 
 18730   0003BD                     CWG1ISM         equ	957	;# 
 18731   0003BE                     CWG1DBR         equ	958	;# 
 18732   0003BF                     CWG1DBF         equ	959	;# 
 18733   0003C0                     CWG1CON0        equ	960	;# 
 18734   0003C1                     CWG1CON1        equ	961	;# 
 18735   0003C2                     CWG1AS0         equ	962	;# 
 18736   0003C3                     CWG1AS1         equ	963	;# 
 18737   0003C4                     CWG1STR         equ	964	;# 
 18738   0003C5                     CWG2CLK         equ	965	;# 
 18739   0003C5                     CWG2CLKCON      equ	965	;# 
 18740   0003C6                     CWG2ISM         equ	966	;# 
 18741   0003C7                     CWG2DBR         equ	967	;# 
 18742   0003C8                     CWG2DBF         equ	968	;# 
 18743   0003C9                     CWG2CON0        equ	969	;# 
 18744   0003CA                     CWG2CON1        equ	970	;# 
 18745   0003CB                     CWG2AS0         equ	971	;# 
 18746   0003CC                     CWG2AS1         equ	972	;# 
 18747   0003CD                     CWG2STR         equ	973	;# 
 18748   0003CE                     CWG3CLK         equ	974	;# 
 18749   0003CE                     CWG3CLKCON      equ	974	;# 
 18750   0003CF                     CWG3ISM         equ	975	;# 
 18751   0003D0                     CWG3DBR         equ	976	;# 
 18752   0003D1                     CWG3DBF         equ	977	;# 
 18753   0003D2                     CWG3CON0        equ	978	;# 
 18754   0003D3                     CWG3CON1        equ	979	;# 
 18755   0003D4                     CWG3AS0         equ	980	;# 
 18756   0003D5                     CWG3AS1         equ	981	;# 
 18757   0003D6                     CWG3STR         equ	982	;# 
 18758   0003D7                     FVRCON          equ	983	;# 
 18759   0003D8                     ADCPCON         equ	984	;# 
 18760   0003D8                     ADCP            equ	984	;# 
 18761   0003D9                     ADLTH           equ	985	;# 
 18762   0003D9                     ADLTHL          equ	985	;# 
 18763   0003DA                     ADLTHH          equ	986	;# 
 18764   0003DB                     ADUTH           equ	987	;# 
 18765   0003DB                     ADUTHL          equ	987	;# 
 18766   0003DC                     ADUTHH          equ	988	;# 
 18767   0003DD                     ADERR           equ	989	;# 
 18768   0003DD                     ADERRL          equ	989	;# 
 18769   0003DE                     ADERRH          equ	990	;# 
 18770   0003DF                     ADSTPT          equ	991	;# 
 18771   0003DF                     ADSTPTL         equ	991	;# 
 18772   0003E0                     ADSTPTH         equ	992	;# 
 18773   0003E1                     ADFLTR          equ	993	;# 
 18774   0003E1                     ADFLTRL         equ	993	;# 
 18775   0003E2                     ADFLTRH         equ	994	;# 
 18776   0003E3                     ADACC           equ	995	;# 
 18777   0003E3                     ADACCL          equ	995	;# 
 18778   0003E4                     ADACCH          equ	996	;# 
 18779   0003E5                     ADACCU          equ	997	;# 
 18780   0003E6                     ADCNT           equ	998	;# 
 18781   0003E7                     ADRPT           equ	999	;# 
 18782   0003E8                     ADPREV          equ	1000	;# 
 18783   0003E8                     ADPREVL         equ	1000	;# 
 18784   0003E9                     ADPREVH         equ	1001	;# 
 18785   0003EA                     ADRES           equ	1002	;# 
 18786   0003EA                     ADRESL          equ	1002	;# 
 18787   0003EB                     ADRESH          equ	1003	;# 
 18788   0003EC                     ADPCH           equ	1004	;# 
 18789   0003EE                     ADACQ           equ	1006	;# 
 18790   0003EE                     ADACQL          equ	1006	;# 
 18791   0003EF                     ADACQH          equ	1007	;# 
 18792   0003F0                     ADCAP           equ	1008	;# 
 18793   0003F1                     ADPRE           equ	1009	;# 
 18794   0003F1                     ADPREL          equ	1009	;# 
 18795   0003F2                     ADPREH          equ	1010	;# 
 18796   0003F3                     ADCON0          equ	1011	;# 
 18797   0003F4                     ADCON1          equ	1012	;# 
 18798   0003F5                     ADCON2          equ	1013	;# 
 18799   0003F6                     ADCON3          equ	1014	;# 
 18800   0003F7                     ADSTAT          equ	1015	;# 
 18801   0003F8                     ADREF           equ	1016	;# 
 18802   0003F9                     ADACT           equ	1017	;# 
 18803   0003FA                     ADCLK           equ	1018	;# 
 18804   0003FB                     ADCTX           equ	1019	;# 
 18805   0003FC                     ADCSEL1         equ	1020	;# 
 18806   0003FD                     ADCSEL2         equ	1021	;# 
 18807   0003FE                     ADCSEL3         equ	1022	;# 
 18808   0003FF                     ADCSEL4         equ	1023	;# 
 18809   000400                     ANSELA          equ	1024	;# 
 18810   000401                     WPUA            equ	1025	;# 
 18811   000402                     ODCONA          equ	1026	;# 
 18812   000403                     SLRCONA         equ	1027	;# 
 18813   000404                     INLVLA          equ	1028	;# 
 18814   000405                     IOCAP           equ	1029	;# 
 18815   000406                     IOCAN           equ	1030	;# 
 18816   000407                     IOCAF           equ	1031	;# 
 18817   000408                     ANSELB          equ	1032	;# 
 18818   000409                     WPUB            equ	1033	;# 
 18819   00040A                     ODCONB          equ	1034	;# 
 18820   00040B                     SLRCONB         equ	1035	;# 
 18821   00040C                     INLVLB          equ	1036	;# 
 18822   00040D                     IOCBP           equ	1037	;# 
 18823   00040E                     IOCBN           equ	1038	;# 
 18824   00040F                     IOCBF           equ	1039	;# 
 18825   000410                     ANSELC          equ	1040	;# 
 18826   000411                     WPUC            equ	1041	;# 
 18827   000412                     ODCONC          equ	1042	;# 
 18828   000413                     SLRCONC         equ	1043	;# 
 18829   000414                     INLVLC          equ	1044	;# 
 18830   000415                     IOCCP           equ	1045	;# 
 18831   000416                     IOCCN           equ	1046	;# 
 18832   000417                     IOCCF           equ	1047	;# 
 18833   000421                     WPUE            equ	1057	;# 
 18834   000424                     INLVLE          equ	1060	;# 
 18835   000425                     IOCEP           equ	1061	;# 
 18836   000426                     IOCEN           equ	1062	;# 
 18837   000427                     IOCEF           equ	1063	;# 
 18838   000440                     NCO1ACC         equ	1088	;# 
 18839   000440                     NCO1ACCL        equ	1088	;# 
 18840   000441                     NCO1ACCH        equ	1089	;# 
 18841   000442                     NCO1ACCU        equ	1090	;# 
 18842   000443                     NCO1INC         equ	1091	;# 
 18843   000443                     NCO1INCL        equ	1091	;# 
 18844   000444                     NCO1INCH        equ	1092	;# 
 18845   000445                     NCO1INCU        equ	1093	;# 
 18846   000446                     NCO1CON         equ	1094	;# 
 18847   000447                     NCO1CLK         equ	1095	;# 
 18848   000448                     NCO2ACC         equ	1096	;# 
 18849   000448                     NCO2ACCL        equ	1096	;# 
 18850   000449                     NCO2ACCH        equ	1097	;# 
 18851   00044A                     NCO2ACCU        equ	1098	;# 
 18852   00044B                     NCO2INC         equ	1099	;# 
 18853   00044B                     NCO2INCL        equ	1099	;# 
 18854   00044C                     NCO2INCH        equ	1100	;# 
 18855   00044D                     NCO2INCU        equ	1101	;# 
 18856   00044E                     NCO2CON         equ	1102	;# 
 18857   00044F                     NCO2CLK         equ	1103	;# 
 18858   000450                     NCO3ACC         equ	1104	;# 
 18859   000450                     NCO3ACCL        equ	1104	;# 
 18860   000451                     NCO3ACCH        equ	1105	;# 
 18861   000452                     NCO3ACCU        equ	1106	;# 
 18862   000453                     NCO3INC         equ	1107	;# 
 18863   000453                     NCO3INCL        equ	1107	;# 
 18864   000454                     NCO3INCH        equ	1108	;# 
 18865   000455                     NCO3INCU        equ	1109	;# 
 18866   000456                     NCO3CON         equ	1110	;# 
 18867   000457                     NCO3CLK         equ	1111	;# 
 18868   000458                     FSCMCON         equ	1112	;# 
 18869   000459                     IVTLOCK         equ	1113	;# 
 18870   00045A                     IVTAD           equ	1114	;# 
 18871   00045A                     IVTADL          equ	1114	;# 
 18872   00045B                     IVTADH          equ	1115	;# 
 18873   00045C                     IVTADU          equ	1116	;# 
 18874   00045D                     IVTBASE         equ	1117	;# 
 18875   00045D                     IVTBASEL        equ	1117	;# 
 18876   00045E                     IVTBASEH        equ	1118	;# 
 18877   00045F                     IVTBASEU        equ	1119	;# 
 18878   000460                     PWM1ERS         equ	1120	;# 
 18879   000461                     PWM1CLK         equ	1121	;# 
 18880   000462                     PWM1LDS         equ	1122	;# 
 18881   000463                     PWM1PR          equ	1123	;# 
 18882   000463                     PWM1PRL         equ	1123	;# 
 18883   000464                     PWM1PRH         equ	1124	;# 
 18884   000465                     PWM1CPRE        equ	1125	;# 
 18885   000466                     PWM1PIPOS       equ	1126	;# 
 18886   000467                     PWM1GIR         equ	1127	;# 
 18887   000468                     PWM1GIE         equ	1128	;# 
 18888   000469                     PWM1CON         equ	1129	;# 
 18889   00046A                     PWM1S1CFG       equ	1130	;# 
 18890   00046B                     PWM1S1P1        equ	1131	;# 
 18891   00046B                     PWM1S1P1L       equ	1131	;# 
 18892   00046C                     PWM1S1P1H       equ	1132	;# 
 18893   00046D                     PWM1S1P2        equ	1133	;# 
 18894   00046D                     PWM1S1P2L       equ	1133	;# 
 18895   00046E                     PWM1S1P2H       equ	1134	;# 
 18896   00046F                     PWM2ERS         equ	1135	;# 
 18897   000470                     PWM2CLK         equ	1136	;# 
 18898   000471                     PWM2LDS         equ	1137	;# 
 18899   000472                     PWM2PR          equ	1138	;# 
 18900   000472                     PWM2PRL         equ	1138	;# 
 18901   000473                     PWM2PRH         equ	1139	;# 
 18902   000474                     PWM2CPRE        equ	1140	;# 
 18903   000475                     PWM2PIPOS       equ	1141	;# 
 18904   000476                     PWM2GIR         equ	1142	;# 
 18905   000477                     PWM2GIE         equ	1143	;# 
 18906   000478                     PWM2CON         equ	1144	;# 
 18907   000479                     PWM2S1CFG       equ	1145	;# 
 18908   00047A                     PWM2S1P1        equ	1146	;# 
 18909   00047A                     PWM2S1P1L       equ	1146	;# 
 18910   00047B                     PWM2S1P1H       equ	1147	;# 
 18911   00047C                     PWM2S1P2        equ	1148	;# 
 18912   00047C                     PWM2S1P2L       equ	1148	;# 
 18913   00047D                     PWM2S1P2H       equ	1149	;# 
 18914   00047E                     PWM3ERS         equ	1150	;# 
 18915   00047F                     PWM3CLK         equ	1151	;# 
 18916   000480                     PWM3LDS         equ	1152	;# 
 18917   000481                     PWM3PR          equ	1153	;# 
 18918   000481                     PWM3PRL         equ	1153	;# 
 18919   000482                     PWM3PRH         equ	1154	;# 
 18920   000483                     PWM3CPRE        equ	1155	;# 
 18921   000484                     PWM3PIPOS       equ	1156	;# 
 18922   000485                     PWM3GIR         equ	1157	;# 
 18923   000486                     PWM3GIE         equ	1158	;# 
 18924   000487                     PWM3CON         equ	1159	;# 
 18925   000488                     PWM3S1CFG       equ	1160	;# 
 18926   000489                     PWM3S1P1        equ	1161	;# 
 18927   000489                     PWM3S1P1L       equ	1161	;# 
 18928   00048A                     PWM3S1P1H       equ	1162	;# 
 18929   00048B                     PWM3S1P2        equ	1163	;# 
 18930   00048B                     PWM3S1P2L       equ	1163	;# 
 18931   00048C                     PWM3S1P2H       equ	1164	;# 
 18932   00048D                     PWM4ERS         equ	1165	;# 
 18933   00048E                     PWM4CLK         equ	1166	;# 
 18934   00048F                     PWM4LDS         equ	1167	;# 
 18935   000490                     PWM4PR          equ	1168	;# 
 18936   000490                     PWM4PRL         equ	1168	;# 
 18937   000491                     PWM4PRH         equ	1169	;# 
 18938   000492                     PWM4CPRE        equ	1170	;# 
 18939   000493                     PWM4PIPOS       equ	1171	;# 
 18940   000494                     PWM4GIR         equ	1172	;# 
 18941   000495                     PWM4GIE         equ	1173	;# 
 18942   000496                     PWM4CON         equ	1174	;# 
 18943   000497                     PWM4S1CFG       equ	1175	;# 
 18944   000498                     PWM4S1P1        equ	1176	;# 
 18945   000498                     PWM4S1P1L       equ	1176	;# 
 18946   000499                     PWM4S1P1H       equ	1177	;# 
 18947   00049A                     PWM4S1P2        equ	1178	;# 
 18948   00049A                     PWM4S1P2L       equ	1178	;# 
 18949   00049B                     PWM4S1P2H       equ	1179	;# 
 18950   00049C                     PWMLOAD         equ	1180	;# 
 18951   00049D                     PWMEN           equ	1181	;# 
 18952   00049E                     PIE0            equ	1182	;# 
 18953   00049F                     PIE1            equ	1183	;# 
 18954   0004A0                     PIE2            equ	1184	;# 
 18955   0004A1                     PIE3            equ	1185	;# 
 18956   0004A2                     PIE4            equ	1186	;# 
 18957   0004A3                     PIE5            equ	1187	;# 
 18958   0004A4                     PIE6            equ	1188	;# 
 18959   0004A5                     PIE7            equ	1189	;# 
 18960   0004A6                     PIE8            equ	1190	;# 
 18961   0004A7                     PIE9            equ	1191	;# 
 18962   0004A8                     PIE10           equ	1192	;# 
 18963   0004A9                     PIE11           equ	1193	;# 
 18964   0004AA                     PIE12           equ	1194	;# 
 18965   0004AB                     PIE13           equ	1195	;# 
 18966   0004AC                     PIE14           equ	1196	;# 
 18967   0004AD                     PIE15           equ	1197	;# 
 18968   0004AE                     PIR0            equ	1198	;# 
 18969   0004AF                     PIR1            equ	1199	;# 
 18970   0004B0                     PIR2            equ	1200	;# 
 18971   0004B1                     PIR3            equ	1201	;# 
 18972   0004B2                     PIR4            equ	1202	;# 
 18973   0004B3                     PIR5            equ	1203	;# 
 18974   0004B4                     PIR6            equ	1204	;# 
 18975   0004B5                     PIR7            equ	1205	;# 
 18976   0004B6                     PIR8            equ	1206	;# 
 18977   0004B7                     PIR9            equ	1207	;# 
 18978   0004B8                     PIR10           equ	1208	;# 
 18979   0004B9                     PIR11           equ	1209	;# 
 18980   0004BA                     PIR12           equ	1210	;# 
 18981   0004BB                     PIR13           equ	1211	;# 
 18982   0004BC                     PIR14           equ	1212	;# 
 18983   0004BD                     PIR15           equ	1213	;# 
 18984   0004BE                     LATA            equ	1214	;# 
 18985   0004BF                     LATB            equ	1215	;# 
 18986   0004C0                     LATC            equ	1216	;# 
 18987   0004C6                     TRISA           equ	1222	;# 
 18988   0004C7                     TRISB           equ	1223	;# 
 18989   0004C8                     TRISC           equ	1224	;# 
 18990   0004CA                     TRISE           equ	1226	;# 
 18991   0004CE                     PORTA           equ	1230	;# 
 18992   0004CF                     PORTB           equ	1231	;# 
 18993   0004D0                     PORTC           equ	1232	;# 
 18994   0004D2                     PORTE           equ	1234	;# 
 18995   0004D6                     INTCON0         equ	1238	;# 
 18996   0004D7                     INTCON1         equ	1239	;# 
 18997   0004D8                     STATUS          equ	1240	;# 
 18998   0004D9                     FSR2            equ	1241	;# 
 18999   0004D9                     FSR2L           equ	1241	;# 
 19000   0004DA                     FSR2H           equ	1242	;# 
 19001   0004DB                     PLUSW2          equ	1243	;# 
 19002   0004DC                     PREINC2         equ	1244	;# 
 19003   0004DD                     POSTDEC2        equ	1245	;# 
 19004   0004DE                     POSTINC2        equ	1246	;# 
 19005   0004DF                     INDF2           equ	1247	;# 
 19006   0004E0                     BSR             equ	1248	;# 
 19007   0004E1                     FSR1            equ	1249	;# 
 19008   0004E1                     FSR1L           equ	1249	;# 
 19009   0004E2                     FSR1H           equ	1250	;# 
 19010   0004E3                     PLUSW1          equ	1251	;# 
 19011   0004E4                     PREINC1         equ	1252	;# 
 19012   0004E5                     POSTDEC1        equ	1253	;# 
 19013   0004E6                     POSTINC1        equ	1254	;# 
 19014   0004E7                     INDF1           equ	1255	;# 
 19015   0004E8                     WREG            equ	1256	;# 
 19016   0004E9                     FSR0            equ	1257	;# 
 19017   0004E9                     FSR0L           equ	1257	;# 
 19018   0004EA                     FSR0H           equ	1258	;# 
 19019   0004EB                     PLUSW0          equ	1259	;# 
 19020   0004EC                     PREINC0         equ	1260	;# 
 19021   0004ED                     POSTDEC0        equ	1261	;# 
 19022   0004EE                     POSTINC0        equ	1262	;# 
 19023   0004EF                     INDF0           equ	1263	;# 
 19024   0004F0                     PCON0           equ	1264	;# 
 19025   0004F1                     PCON1           equ	1265	;# 
 19026   0004F2                     CPUDOZE         equ	1266	;# 
 19027   0004F3                     PROD            equ	1267	;# 
 19028   0004F3                     PRODL           equ	1267	;# 
 19029   0004F4                     PRODH           equ	1268	;# 
 19030   0004F5                     TABLAT          equ	1269	;# 
 19031   0004F6                     TBLPTR          equ	1270	;# 
 19032   0004F6                     TBLPTRL         equ	1270	;# 
 19033   0004F7                     TBLPTRH         equ	1271	;# 
 19034   0004F8                     TBLPTRU         equ	1272	;# 
 19035   0004F9                     PCLAT           equ	1273	;# 
 19036   0004F9                     PCL             equ	1273	;# 
 19037   0004FA                     PCLATH          equ	1274	;# 
 19038   0004FB                     PCLATU          equ	1275	;# 
 19039   0004FC                     STKPTR          equ	1276	;# 
 19040   0004FD                     TOS             equ	1277	;# 
 19041   0004FD                     TOSL            equ	1277	;# 
 19042   0004FE                     TOSH            equ	1278	;# 
 19043   0004FF                     TOSU            equ	1279	;# 
 19044   000038                     BOOTREG         equ	56	;# 
 19045   000039                     CLKRCON         equ	57	;# 
 19046   00003A                     CLKRCLK         equ	58	;# 
 19047   000040                     NVMCON0         equ	64	;# 
 19048   000041                     NVMCON1         equ	65	;# 
 19049   000042                     NVMLOCK         equ	66	;# 
 19050   000043                     NVMADR          equ	67	;# 
 19051   000043                     NVMADRL         equ	67	;# 
 19052   000044                     NVMADRH         equ	68	;# 
 19053   000045                     NVMADRU         equ	69	;# 
 19054   000046                     NVMDAT          equ	70	;# 
 19055   000046                     NVMDATL         equ	70	;# 
 19056   000047                     NVMDATH         equ	71	;# 
 19057   000048                     VREGCON         equ	72	;# 
 19058   000049                     BORCON          equ	73	;# 
 19059   00004A                     HLVDCON0        equ	74	;# 
 19060   00004B                     HLVDCON1        equ	75	;# 
 19061   00004C                     ZCDCON          equ	76	;# 
 19062   000060                     PMD0            equ	96	;# 
 19063   000061                     PMD1            equ	97	;# 
 19064   000062                     PMD2            equ	98	;# 
 19065   000063                     PMD3            equ	99	;# 
 19066   000064                     PMD4            equ	100	;# 
 19067   000065                     PMD5            equ	101	;# 
 19068   000066                     PMD6            equ	102	;# 
 19069   000067                     PMD7            equ	103	;# 
 19070   000068                     PMD8            equ	104	;# 
 19071   00006A                     MD1CON0         equ	106	;# 
 19072   00006B                     MD1CON1         equ	107	;# 
 19073   00006C                     MD1SRC          equ	108	;# 
 19074   00006D                     MD1CARL         equ	109	;# 
 19075   00006E                     MD1CARH         equ	110	;# 
 19076   00006F                     CMOUT           equ	111	;# 
 19077   000070                     CM1CON0         equ	112	;# 
 19078   000071                     CM1CON1         equ	113	;# 
 19079   000072                     CM1NCH          equ	114	;# 
 19080   000073                     CM1PCH          equ	115	;# 
 19081   000074                     CM2CON0         equ	116	;# 
 19082   000075                     CM2CON1         equ	117	;# 
 19083   000076                     CM2NCH          equ	118	;# 
 19084   000077                     CM2PCH          equ	119	;# 
 19085   000078                     WDTCON0         equ	120	;# 
 19086   000079                     WDTCON1         equ	121	;# 
 19087   00007A                     WDTPSL          equ	122	;# 
 19088   00007B                     WDTPSH          equ	123	;# 
 19089   00007C                     WDTTMR          equ	124	;# 
 19090   00007D                     DAC1DAT         equ	125	;# 
 19091   00007D                     DAC1DATL        equ	125	;# 
 19092   00007F                     DAC1CON         equ	127	;# 
 19093   000080                     SPI1RXB         equ	128	;# 
 19094   000081                     SPI1TXB         equ	129	;# 
 19095   000082                     SPI1TCNT        equ	130	;# 
 19096   000082                     SPI1TCNTL       equ	130	;# 
 19097   000083                     SPI1TCNTH       equ	131	;# 
 19098   000084                     SPI1CON0        equ	132	;# 
 19099   000085                     SPI1CON1        equ	133	;# 
 19100   000086                     SPI1CON2        equ	134	;# 
 19101   000087                     SPI1STATUS      equ	135	;# 
 19102   000088                     SPI1TWIDTH      equ	136	;# 
 19103   000089                     SPI1BAUD        equ	137	;# 
 19104   00008A                     SPI1INTF        equ	138	;# 
 19105   00008B                     SPI1INTE        equ	139	;# 
 19106   00008C                     SPI1CLK         equ	140	;# 
 19107   00008D                     SPI2RXB         equ	141	;# 
 19108   00008E                     SPI2TXB         equ	142	;# 
 19109   00008F                     SPI2TCNT        equ	143	;# 
 19110   00008F                     SPI2TCNTL       equ	143	;# 
 19111   000090                     SPI2TCNTH       equ	144	;# 
 19112   000091                     SPI2CON0        equ	145	;# 
 19113   000092                     SPI2CON1        equ	146	;# 
 19114   000093                     SPI2CON2        equ	147	;# 
 19115   000094                     SPI2STATUS      equ	148	;# 
 19116   000095                     SPI2TWIDTH      equ	149	;# 
 19117   000096                     SPI2BAUD        equ	150	;# 
 19118   000097                     SPI2INTF        equ	151	;# 
 19119   000098                     SPI2INTE        equ	152	;# 
 19120   000099                     SPI2CLK         equ	153	;# 
 19121   0000AC                     ACTCON          equ	172	;# 
 19122   0000AD                     OSCCON1         equ	173	;# 
 19123   0000AE                     OSCCON2         equ	174	;# 
 19124   0000AF                     OSCCON3         equ	175	;# 
 19125   0000B0                     OSCTUNE         equ	176	;# 
 19126   0000B1                     OSCFRQ          equ	177	;# 
 19127   0000B1                     OSCFREQ         equ	177	;# 
 19128   0000B2                     OSCSTAT         equ	178	;# 
 19129   0000B2                     OSCSTAT1        equ	178	;# 
 19130   0000B3                     OSCEN           equ	179	;# 
 19131   0000B4                     PRLOCK          equ	180	;# 
 19132   0000B5                     SCANPR          equ	181	;# 
 19133   0000B6                     DMA1PR          equ	182	;# 
 19134   0000B7                     DMA2PR          equ	183	;# 
 19135   0000B8                     DMA3PR          equ	184	;# 
 19136   0000B9                     DMA4PR          equ	185	;# 
 19137   0000BA                     DMA5PR          equ	186	;# 
 19138   0000BB                     DMA6PR          equ	187	;# 
 19139   0000BC                     DMA7PR          equ	188	;# 
 19140   0000BD                     DMA8PR          equ	189	;# 
 19141   0000BE                     MAINPR          equ	190	;# 
 19142   0000BF                     ISRPR           equ	191	;# 
 19143   0000D4                     CLCDATA         equ	212	;# 
 19144   0000D5                     CLCSELECT       equ	213	;# 
 19145   0000D6                     CLCnCON         equ	214	;# 
 19146   0000D7                     CLCnPOL         equ	215	;# 
 19147   0000D8                     CLCnSEL0        equ	216	;# 
 19148   0000D9                     CLCnSEL1        equ	217	;# 
 19149   0000DA                     CLCnSEL2        equ	218	;# 
 19150   0000DB                     CLCnSEL3        equ	219	;# 
 19151   0000DC                     CLCnGLS0        equ	220	;# 
 19152   0000DD                     CLCnGLS1        equ	221	;# 
 19153   0000DE                     CLCnGLS2        equ	222	;# 
 19154   0000DF                     CLCnGLS3        equ	223	;# 
 19155   0000E8                     DMASELECT       equ	232	;# 
 19156   0000E9                     DMAnBUF         equ	233	;# 
 19157   0000EA                     DMAnDCNT        equ	234	;# 
 19158   0000EA                     DMAnDCNTL       equ	234	;# 
 19159   0000EB                     DMAnDCNTH       equ	235	;# 
 19160   0000EC                     DMAnDPTR        equ	236	;# 
 19161   0000EC                     DMAnDPTRL       equ	236	;# 
 19162   0000ED                     DMAnDPTRH       equ	237	;# 
 19163   0000EE                     DMAnDSZ         equ	238	;# 
 19164   0000EE                     DMAnDSZL        equ	238	;# 
 19165   0000EF                     DMAnDSZH        equ	239	;# 
 19166   0000F0                     DMAnDSA         equ	240	;# 
 19167   0000F0                     DMAnDSAL        equ	240	;# 
 19168   0000F1                     DMAnDSAH        equ	241	;# 
 19169   0000F2                     DMAnSCNT        equ	242	;# 
 19170   0000F2                     DMAnSCNTL       equ	242	;# 
 19171   0000F3                     DMAnSCNTH       equ	243	;# 
 19172   0000F4                     DMAnSPTR        equ	244	;# 
 19173   0000F4                     DMAnSPTRL       equ	244	;# 
 19174   0000F5                     DMAnSPTRH       equ	245	;# 
 19175   0000F6                     DMAnSPTRU       equ	246	;# 
 19176   0000F7                     DMAnSSZ         equ	247	;# 
 19177   0000F7                     DMAnSSZL        equ	247	;# 
 19178   0000F8                     DMAnSSZH        equ	248	;# 
 19179   0000F9                     DMAnSSA         equ	249	;# 
 19180   0000F9                     DMAnSSAL        equ	249	;# 
 19181   0000FA                     DMAnSSAH        equ	250	;# 
 19182   0000FB                     DMAnSSAU        equ	251	;# 
 19183   0000FC                     DMAnCON0        equ	252	;# 
 19184   0000FD                     DMAnCON1        equ	253	;# 
 19185   0000FE                     DMAnAIRQ        equ	254	;# 
 19186   0000FF                     DMAnSIRQ        equ	255	;# 
 19187   000100                     C1CONL          equ	256	;# 
 19188   000101                     C1CONH          equ	257	;# 
 19189   000102                     C1CONU          equ	258	;# 
 19190   000103                     C1CONT          equ	259	;# 
 19191   000104                     C1NBTCFGL       equ	260	;# 
 19192   000105                     C1NBTCFGH       equ	261	;# 
 19193   000106                     C1NBTCFGU       equ	262	;# 
 19194   000107                     C1NBTCFGT       equ	263	;# 
 19195   000108                     C1DBTCFGL       equ	264	;# 
 19196   000109                     C1DBTCFGH       equ	265	;# 
 19197   00010A                     C1DBTCFGU       equ	266	;# 
 19198   00010B                     C1DBTCFGT       equ	267	;# 
 19199   00010C                     C1TDCL          equ	268	;# 
 19200   00010D                     C1TDCH          equ	269	;# 
 19201   00010E                     C1TDCU          equ	270	;# 
 19202   000110                     C1TBC           equ	272	;# 
 19203   000110                     C1TBCL          equ	272	;# 
 19204   000111                     C1TBCH          equ	273	;# 
 19205   000112                     C1TBCU          equ	274	;# 
 19206   000113                     C1TBCT          equ	275	;# 
 19207   000114                     C1TSCONL        equ	276	;# 
 19208   000115                     C1TSCONH        equ	277	;# 
 19209   000116                     C1TSCONU        equ	278	;# 
 19210   000117                     C1TSCONT        equ	279	;# 
 19211   000118                     C1VECL          equ	280	;# 
 19212   000119                     C1VECH          equ	281	;# 
 19213   00011A                     C1VECU          equ	282	;# 
 19214   00011B                     C1VECT          equ	283	;# 
 19215   00011C                     C1INTL          equ	284	;# 
 19216   00011D                     C1INTH          equ	285	;# 
 19217   00011E                     C1INTU          equ	286	;# 
 19218   00011F                     C1INTT          equ	287	;# 
 19219   000120                     C1RXIF          equ	288	;# 
 19220   000120                     C1RXIFL         equ	288	;# 
 19221   000121                     C1RXIFH         equ	289	;# 
 19222   000122                     C1RXIFU         equ	290	;# 
 19223   000123                     C1RXIFT         equ	291	;# 
 19224   000124                     C1TXIF          equ	292	;# 
 19225   000124                     C1TXIFL         equ	292	;# 
 19226   000125                     C1TXIFH         equ	293	;# 
 19227   000126                     C1TXIFU         equ	294	;# 
 19228   000127                     C1TXIFT         equ	295	;# 
 19229   000128                     C1RXOVIF        equ	296	;# 
 19230   000128                     C1RXOVIFL       equ	296	;# 
 19231   000129                     C1RXOVIFH       equ	297	;# 
 19232   00012A                     C1RXOVIFU       equ	298	;# 
 19233   00012B                     C1RXOVIFT       equ	299	;# 
 19234   00012C                     C1TXATIF        equ	300	;# 
 19235   00012C                     C1TXATIFL       equ	300	;# 
 19236   00012D                     C1TXATIFH       equ	301	;# 
 19237   00012E                     C1TXATIFU       equ	302	;# 
 19238   00012F                     C1TXATIFT       equ	303	;# 
 19239   000130                     C1TXREQ         equ	304	;# 
 19240   000130                     C1TXREQL        equ	304	;# 
 19241   000131                     C1TXREQH        equ	305	;# 
 19242   000132                     C1TXREQU        equ	306	;# 
 19243   000133                     C1TXREQT        equ	307	;# 
 19244   000134                     C1TRECL         equ	308	;# 
 19245   000135                     C1TRECH         equ	309	;# 
 19246   000136                     C1TRECU         equ	310	;# 
 19247   000137                     C1TRECT         equ	311	;# 
 19248   000138                     C1BDIAG0L       equ	312	;# 
 19249   000139                     C1BDIAG0H       equ	313	;# 
 19250   00013C                     C1BDIAG1L       equ	316	;# 
 19251   00013D                     C1BDIAG1H       equ	317	;# 
 19252   00013E                     C1BDIAG1U       equ	318	;# 
 19253   00013F                     C1BDIAG1T       equ	319	;# 
 19254   000140                     C1TEFCONL       equ	320	;# 
 19255   000141                     C1TEFCONH       equ	321	;# 
 19256   000142                     C1TEFCONU       equ	322	;# 
 19257   000143                     C1TEFCONT       equ	323	;# 
 19258   000144                     C1TEFSTAL       equ	324	;# 
 19259   000145                     C1TEFSTAH       equ	325	;# 
 19260   000146                     C1TEFSTAU       equ	326	;# 
 19261   000147                     C1TEFSTAT       equ	327	;# 
 19262   000148                     C1TEFUA         equ	328	;# 
 19263   000148                     C1TEFUAL        equ	328	;# 
 19264   000149                     C1TEFUAH        equ	329	;# 
 19265   00014A                     C1TEFUAU        equ	330	;# 
 19266   00014B                     C1TEFUAT        equ	331	;# 
 19267   00014C                     C1FIFOBA        equ	332	;# 
 19268   00014C                     C1FIFOBAL       equ	332	;# 
 19269   00014D                     C1FIFOBAH       equ	333	;# 
 19270   00014E                     C1FIFOBAU       equ	334	;# 
 19271   00014F                     C1FIFOBAT       equ	335	;# 
 19272   000150                     C1TXQCONL       equ	336	;# 
 19273   000151                     C1TXQCONH       equ	337	;# 
 19274   000152                     C1TXQCONU       equ	338	;# 
 19275   000153                     C1TXQCONT       equ	339	;# 
 19276   000154                     C1TXQSTAL       equ	340	;# 
 19277   000155                     C1TXQSTAH       equ	341	;# 
 19278   000156                     C1TXQSTAU       equ	342	;# 
 19279   000157                     C1TXQSTAT       equ	343	;# 
 19280   000158                     C1TXQUA         equ	344	;# 
 19281   000158                     C1TXQUAL        equ	344	;# 
 19282   000159                     C1TXQUAH        equ	345	;# 
 19283   00015A                     C1TXQUAU        equ	346	;# 
 19284   00015B                     C1TXQUAT        equ	347	;# 
 19285   00015C                     C1FIFOCON1      equ	348	;# 
 19286   00015C                     C1FIFOCON1L     equ	348	;# 
 19287   00015D                     C1FIFOCON1H     equ	349	;# 
 19288   00015E                     C1FIFOCON1U     equ	350	;# 
 19289   00015F                     C1FIFOCON1T     equ	351	;# 
 19290   000160                     C1FIFOSTA1      equ	352	;# 
 19291   000160                     C1FIFOSTA1L     equ	352	;# 
 19292   000161                     C1FIFOSTA1H     equ	353	;# 
 19293   000162                     C1FIFOSTA1U     equ	354	;# 
 19294   000163                     C1FIFOSTA1T     equ	355	;# 
 19295   000164                     C1FIFOUA1       equ	356	;# 
 19296   000164                     C1FIFOUA1L      equ	356	;# 
 19297   000165                     C1FIFOUA1H      equ	357	;# 
 19298   000166                     C1FIFOUA1U      equ	358	;# 
 19299   000167                     C1FIFOUA1T      equ	359	;# 
 19300   000168                     C1FIFOCON2      equ	360	;# 
 19301   000168                     C1FIFOCON2L     equ	360	;# 
 19302   000169                     C1FIFOCON2H     equ	361	;# 
 19303   00016A                     C1FIFOCON2U     equ	362	;# 
 19304   00016B                     C1FIFOCON2T     equ	363	;# 
 19305   00016C                     C1FIFOSTA2      equ	364	;# 
 19306   00016C                     C1FIFOSTA2L     equ	364	;# 
 19307   00016D                     C1FIFOSTA2H     equ	365	;# 
 19308   00016E                     C1FIFOSTA2U     equ	366	;# 
 19309   00016F                     C1FIFOSTA2T     equ	367	;# 
 19310   000170                     C1FIFOUA2       equ	368	;# 
 19311   000170                     C1FIFOUA2L      equ	368	;# 
 19312   000171                     C1FIFOUA2H      equ	369	;# 
 19313   000172                     C1FIFOUA2U      equ	370	;# 
 19314   000173                     C1FIFOUA2T      equ	371	;# 
 19315   000174                     C1FIFOCON3      equ	372	;# 
 19316   000174                     C1FIFOCON3L     equ	372	;# 
 19317   000175                     C1FIFOCON3H     equ	373	;# 
 19318   000176                     C1FIFOCON3U     equ	374	;# 
 19319   000177                     C1FIFOCON3T     equ	375	;# 
 19320   000178                     C1FIFOSTA3      equ	376	;# 
 19321   000178                     C1FIFOSTA3L     equ	376	;# 
 19322   000179                     C1FIFOSTA3H     equ	377	;# 
 19323   00017A                     C1FIFOSTA3U     equ	378	;# 
 19324   00017B                     C1FIFOSTA3T     equ	379	;# 
 19325   00017C                     C1FIFOUA3       equ	380	;# 
 19326   00017C                     C1FIFOUA3L      equ	380	;# 
 19327   00017D                     C1FIFOUA3H      equ	381	;# 
 19328   00017E                     C1FIFOUA3U      equ	382	;# 
 19329   00017F                     C1FIFOUA3T      equ	383	;# 
 19330   000180                     C1FLTCON0L      equ	384	;# 
 19331   000181                     C1FLTCON0H      equ	385	;# 
 19332   000182                     C1FLTCON0U      equ	386	;# 
 19333   000183                     C1FLTCON0T      equ	387	;# 
 19334   000184                     C1FLTCON1L      equ	388	;# 
 19335   000185                     C1FLTCON1H      equ	389	;# 
 19336   000186                     C1FLTCON1U      equ	390	;# 
 19337   000187                     C1FLTCON1T      equ	391	;# 
 19338   000188                     C1FLTCON2L      equ	392	;# 
 19339   000189                     C1FLTCON2H      equ	393	;# 
 19340   00018A                     C1FLTCON2U      equ	394	;# 
 19341   00018B                     C1FLTCON2T      equ	395	;# 
 19342   00018C                     C1FLTOBJ0       equ	396	;# 
 19343   00018C                     C1FLTOBJ0L      equ	396	;# 
 19344   00018D                     C1FLTOBJ0H      equ	397	;# 
 19345   00018E                     C1FLTOBJ0U      equ	398	;# 
 19346   00018F                     C1FLTOBJ0T      equ	399	;# 
 19347   000190                     C1MASK0         equ	400	;# 
 19348   000190                     C1MASK0L        equ	400	;# 
 19349   000191                     C1MASK0H        equ	401	;# 
 19350   000192                     C1MASK0U        equ	402	;# 
 19351   000193                     C1MASK0T        equ	403	;# 
 19352   000194                     C1FLTOBJ1       equ	404	;# 
 19353   000194                     C1FLTOBJ1L      equ	404	;# 
 19354   000195                     C1FLTOBJ1H      equ	405	;# 
 19355   000196                     C1FLTOBJ1U      equ	406	;# 
 19356   000197                     C1FLTOBJ1T      equ	407	;# 
 19357   000198                     C1MASK1         equ	408	;# 
 19358   000198                     C1MASK1L        equ	408	;# 
 19359   000199                     C1MASK1H        equ	409	;# 
 19360   00019A                     C1MASK1U        equ	410	;# 
 19361   00019B                     C1MASK1T        equ	411	;# 
 19362   00019C                     C1FLTOBJ2       equ	412	;# 
 19363   00019C                     C1FLTOBJ2L      equ	412	;# 
 19364   00019D                     C1FLTOBJ2H      equ	413	;# 
 19365   00019E                     C1FLTOBJ2U      equ	414	;# 
 19366   00019F                     C1FLTOBJ2T      equ	415	;# 
 19367   0001A0                     C1MASK2         equ	416	;# 
 19368   0001A0                     C1MASK2L        equ	416	;# 
 19369   0001A1                     C1MASK2H        equ	417	;# 
 19370   0001A2                     C1MASK2U        equ	418	;# 
 19371   0001A3                     C1MASK2T        equ	419	;# 
 19372   0001A4                     C1FLTOBJ3       equ	420	;# 
 19373   0001A4                     C1FLTOBJ3L      equ	420	;# 
 19374   0001A5                     C1FLTOBJ3H      equ	421	;# 
 19375   0001A6                     C1FLTOBJ3U      equ	422	;# 
 19376   0001A7                     C1FLTOBJ3T      equ	423	;# 
 19377   0001A8                     C1MASK3         equ	424	;# 
 19378   0001A8                     C1MASK3L        equ	424	;# 
 19379   0001A9                     C1MASK3H        equ	425	;# 
 19380   0001AA                     C1MASK3U        equ	426	;# 
 19381   0001AB                     C1MASK3T        equ	427	;# 
 19382   0001AC                     C1FLTOBJ4       equ	428	;# 
 19383   0001AC                     C1FLTOBJ4L      equ	428	;# 
 19384   0001AD                     C1FLTOBJ4H      equ	429	;# 
 19385   0001AE                     C1FLTOBJ4U      equ	430	;# 
 19386   0001AF                     C1FLTOBJ4T      equ	431	;# 
 19387   0001B0                     C1MASK4         equ	432	;# 
 19388   0001B0                     C1MASK4L        equ	432	;# 
 19389   0001B1                     C1MASK4H        equ	433	;# 
 19390   0001B2                     C1MASK4U        equ	434	;# 
 19391   0001B3                     C1MASK4T        equ	435	;# 
 19392   0001B4                     C1FLTOBJ5       equ	436	;# 
 19393   0001B4                     C1FLTOBJ5L      equ	436	;# 
 19394   0001B5                     C1FLTOBJ5H      equ	437	;# 
 19395   0001B6                     C1FLTOBJ5U      equ	438	;# 
 19396   0001B7                     C1FLTOBJ5T      equ	439	;# 
 19397   0001B8                     C1MASK5         equ	440	;# 
 19398   0001B8                     C1MASK5L        equ	440	;# 
 19399   0001B9                     C1MASK5H        equ	441	;# 
 19400   0001BA                     C1MASK5U        equ	442	;# 
 19401   0001BB                     C1MASK5T        equ	443	;# 
 19402   0001BC                     C1FLTOBJ6       equ	444	;# 
 19403   0001BC                     C1FLTOBJ6L      equ	444	;# 
 19404   0001BD                     C1FLTOBJ6H      equ	445	;# 
 19405   0001BE                     C1FLTOBJ6U      equ	446	;# 
 19406   0001BF                     C1FLTOBJ6T      equ	447	;# 
 19407   0001C0                     C1MASK6         equ	448	;# 
 19408   0001C0                     C1MASK6L        equ	448	;# 
 19409   0001C1                     C1MASK6H        equ	449	;# 
 19410   0001C2                     C1MASK6U        equ	450	;# 
 19411   0001C3                     C1MASK6T        equ	451	;# 
 19412   0001C4                     C1FLTOBJ7       equ	452	;# 
 19413   0001C4                     C1FLTOBJ7L      equ	452	;# 
 19414   0001C5                     C1FLTOBJ7H      equ	453	;# 
 19415   0001C6                     C1FLTOBJ7U      equ	454	;# 
 19416   0001C7                     C1FLTOBJ7T      equ	455	;# 
 19417   0001C8                     C1MASK7         equ	456	;# 
 19418   0001C8                     C1MASK7L        equ	456	;# 
 19419   0001C9                     C1MASK7H        equ	457	;# 
 19420   0001CA                     C1MASK7U        equ	458	;# 
 19421   0001CB                     C1MASK7T        equ	459	;# 
 19422   0001CC                     C1FLTOBJ8       equ	460	;# 
 19423   0001CC                     C1FLTOBJ8L      equ	460	;# 
 19424   0001CD                     C1FLTOBJ8H      equ	461	;# 
 19425   0001CE                     C1FLTOBJ8U      equ	462	;# 
 19426   0001CF                     C1FLTOBJ8T      equ	463	;# 
 19427   0001D0                     C1MASK8         equ	464	;# 
 19428   0001D0                     C1MASK8L        equ	464	;# 
 19429   0001D1                     C1MASK8H        equ	465	;# 
 19430   0001D2                     C1MASK8U        equ	466	;# 
 19431   0001D3                     C1MASK8T        equ	467	;# 
 19432   0001D4                     C1FLTOBJ9       equ	468	;# 
 19433   0001D4                     C1FLTOBJ9L      equ	468	;# 
 19434   0001D5                     C1FLTOBJ9H      equ	469	;# 
 19435   0001D6                     C1FLTOBJ9U      equ	470	;# 
 19436   0001D7                     C1FLTOBJ9T      equ	471	;# 
 19437   0001D8                     C1MASK9         equ	472	;# 
 19438   0001D8                     C1MASK9L        equ	472	;# 
 19439   0001D9                     C1MASK9H        equ	473	;# 
 19440   0001DA                     C1MASK9U        equ	474	;# 
 19441   0001DB                     C1MASK9T        equ	475	;# 
 19442   0001DC                     C1FLTOBJ10      equ	476	;# 
 19443   0001DC                     C1FLTOBJ10L     equ	476	;# 
 19444   0001DD                     C1FLTOBJ10H     equ	477	;# 
 19445   0001DE                     C1FLTOBJ10U     equ	478	;# 
 19446   0001DF                     C1FLTOBJ10T     equ	479	;# 
 19447   0001E0                     C1MASK10        equ	480	;# 
 19448   0001E0                     C1MASK10L       equ	480	;# 
 19449   0001E1                     C1MASK10H       equ	481	;# 
 19450   0001E2                     C1MASK10U       equ	482	;# 
 19451   0001E3                     C1MASK10T       equ	483	;# 
 19452   0001E4                     C1FLTOBJ11      equ	484	;# 
 19453   0001E4                     C1FLTOBJ11L     equ	484	;# 
 19454   0001E5                     C1FLTOBJ11H     equ	485	;# 
 19455   0001E6                     C1FLTOBJ11U     equ	486	;# 
 19456   0001E7                     C1FLTOBJ11T     equ	487	;# 
 19457   0001E8                     C1MASK11        equ	488	;# 
 19458   0001E8                     C1MASK11L       equ	488	;# 
 19459   0001E9                     C1MASK11H       equ	489	;# 
 19460   0001EA                     C1MASK11U       equ	490	;# 
 19461   0001EB                     C1MASK11T       equ	491	;# 
 19462   000200                     PPSLOCK         equ	512	;# 
 19463   000201                     RA0PPS          equ	513	;# 
 19464   000202                     RA1PPS          equ	514	;# 
 19465   000203                     RA2PPS          equ	515	;# 
 19466   000204                     RA3PPS          equ	516	;# 
 19467   000205                     RA4PPS          equ	517	;# 
 19468   000206                     RA5PPS          equ	518	;# 
 19469   000207                     RA6PPS          equ	519	;# 
 19470   000208                     RA7PPS          equ	520	;# 
 19471   000209                     RB0PPS          equ	521	;# 
 19472   00020A                     RB1PPS          equ	522	;# 
 19473   00020B                     RB2PPS          equ	523	;# 
 19474   00020C                     RB3PPS          equ	524	;# 
 19475   00020D                     RB4PPS          equ	525	;# 
 19476   00020E                     RB5PPS          equ	526	;# 
 19477   00020F                     RB6PPS          equ	527	;# 
 19478   000210                     RB7PPS          equ	528	;# 
 19479   000211                     RC0PPS          equ	529	;# 
 19480   000212                     RC1PPS          equ	530	;# 
 19481   000213                     RC2PPS          equ	531	;# 
 19482   000214                     RC3PPS          equ	532	;# 
 19483   000215                     RC4PPS          equ	533	;# 
 19484   000216                     RC5PPS          equ	534	;# 
 19485   000217                     RC6PPS          equ	535	;# 
 19486   000218                     RC7PPS          equ	536	;# 
 19487   00023D                     CANRXPPS        equ	573	;# 
 19488   00023E                     INT0PPS         equ	574	;# 
 19489   00023F                     INT1PPS         equ	575	;# 
 19490   000240                     INT2PPS         equ	576	;# 
 19491   000241                     T0CKIPPS        equ	577	;# 
 19492   000242                     T1CKIPPS        equ	578	;# 
 19493   000243                     T1GPPS          equ	579	;# 
 19494   000244                     T3CKIPPS        equ	580	;# 
 19495   000245                     T3GPPS          equ	581	;# 
 19496   000246                     T5CKIPPS        equ	582	;# 
 19497   000247                     T5GPPS          equ	583	;# 
 19498   000248                     T2INPPS         equ	584	;# 
 19499   000249                     T4INPPS         equ	585	;# 
 19500   00024A                     T6INPPS         equ	586	;# 
 19501   00024B                     TUIN0PPS        equ	587	;# 
 19502   00024C                     TUIN1PPS        equ	588	;# 
 19503   00024F                     CCP1PPS         equ	591	;# 
 19504   000250                     CCP2PPS         equ	592	;# 
 19505   000251                     CCP3PPS         equ	593	;# 
 19506   000253                     PWM1ERSPPS      equ	595	;# 
 19507   000254                     PWM2ERSPPS      equ	596	;# 
 19508   000255                     PWM3ERSPPS      equ	597	;# 
 19509   000256                     PWM4ERSPPS      equ	598	;# 
 19510   000257                     PWMIN0PPS       equ	599	;# 
 19511   000258                     PWMIN1PPS       equ	600	;# 
 19512   000259                     SMT1WINPPS      equ	601	;# 
 19513   00025A                     SMT1SIGPPS      equ	602	;# 
 19514   00025B                     CWG1PPS         equ	603	;# 
 19515   00025B                     CWG1INPPS       equ	603	;# 
 19516   00025C                     CWG2PPS         equ	604	;# 
 19517   00025C                     CWG2INPPS       equ	604	;# 
 19518   00025D                     CWG3PPS         equ	605	;# 
 19519   00025D                     CWG3INPPS       equ	605	;# 
 19520   00025E                     MD1CARLPPS      equ	606	;# 
 19521   00025E                     MDCARLPPS       equ	606	;# 
 19522   00025F                     MD1CARHPPS      equ	607	;# 
 19523   00025F                     MDCARHPPS       equ	607	;# 
 19524   000260                     MD1SRCPPS       equ	608	;# 
 19525   000260                     MDSRCPPS        equ	608	;# 
 19526   000261                     CLCIN0PPS       equ	609	;# 
 19527   000262                     CLCIN1PPS       equ	610	;# 
 19528   000263                     CLCIN2PPS       equ	611	;# 
 19529   000264                     CLCIN3PPS       equ	612	;# 
 19530   000265                     CLCIN4PPS       equ	613	;# 
 19531   000266                     CLCIN5PPS       equ	614	;# 
 19532   000267                     CLCIN6PPS       equ	615	;# 
 19533   000268                     CLCIN7PPS       equ	616	;# 
 19534   000269                     ADACTPPS        equ	617	;# 
 19535   00026A                     SPI1SCKPPS      equ	618	;# 
 19536   00026B                     SPI1SDIPPS      equ	619	;# 
 19537   00026C                     SPI1SSPPS       equ	620	;# 
 19538   00026D                     SPI2SCKPPS      equ	621	;# 
 19539   00026E                     SPI2SDIPPS      equ	622	;# 
 19540   00026F                     SPI2SSPPS       equ	623	;# 
 19541   000270                     I2C1SDAPPS      equ	624	;# 
 19542   000271                     I2C1SCLPPS      equ	625	;# 
 19543   000272                     U1RXPPS         equ	626	;# 
 19544   000273                     U1CTSPPS        equ	627	;# 
 19545   000274                     U2RXPPS         equ	628	;# 
 19546   000275                     U2CTSPPS        equ	629	;# 
 19547   000276                     U3RXPPS         equ	630	;# 
 19548   000277                     U3CTSPPS        equ	631	;# 
 19549   000278                     U4RXPPS         equ	632	;# 
 19550   000279                     U4CTSPPS        equ	633	;# 
 19551   00027A                     U5RXPPS         equ	634	;# 
 19552   00027B                     U5CTSPPS        equ	635	;# 
 19553   000286                     RC4I2C          equ	646	;# 
 19554   000287                     RC3I2C          equ	647	;# 
 19555   000288                     RB2I2C          equ	648	;# 
 19556   000289                     RB1I2C          equ	649	;# 
 19557   00028A                     I2C1RXB         equ	650	;# 
 19558   00028B                     I2C1TXB         equ	651	;# 
 19559   00028C                     I2C1CNTL        equ	652	;# 
 19560   00028D                     I2C1CNTH        equ	653	;# 
 19561   00028E                     I2C1ADB0        equ	654	;# 
 19562   00028F                     I2C1ADB1        equ	655	;# 
 19563   000290                     I2C1ADR0        equ	656	;# 
 19564   000291                     I2C1ADR1        equ	657	;# 
 19565   000292                     I2C1ADR2        equ	658	;# 
 19566   000293                     I2C1ADR3        equ	659	;# 
 19567   000294                     I2C1CON0        equ	660	;# 
 19568   000295                     I2C1CON1        equ	661	;# 
 19569   000296                     I2C1CON2        equ	662	;# 
 19570   000297                     I2C1ERR         equ	663	;# 
 19571   000298                     I2C1STAT0       equ	664	;# 
 19572   000299                     I2C1STAT1       equ	665	;# 
 19573   00029A                     I2C1PIR         equ	666	;# 
 19574   00029B                     I2C1PIE         equ	667	;# 
 19575   00029C                     I2C1BTO         equ	668	;# 
 19576   00029D                     I2C1BAUD        equ	669	;# 
 19577   00029E                     I2C1CLK         equ	670	;# 
 19578   00029F                     I2C1BTOC        equ	671	;# 
 19579   0002A1                     U1RXB           equ	673	;# 
 19580   0002A1                     U1RXBL          equ	673	;# 
 19581   0002A2                     U1RXCHK         equ	674	;# 
 19582   0002A3                     U1TXB           equ	675	;# 
 19583   0002A3                     U1TXBL          equ	675	;# 
 19584   0002A4                     U1TXCHK         equ	676	;# 
 19585   0002A5                     U1P1            equ	677	;# 
 19586   0002A5                     U1P1L           equ	677	;# 
 19587   0002A6                     U1P1H           equ	678	;# 
 19588   0002A7                     U1P2            equ	679	;# 
 19589   0002A7                     U1P2L           equ	679	;# 
 19590   0002A8                     U1P2H           equ	680	;# 
 19591   0002A9                     U1P3            equ	681	;# 
 19592   0002A9                     U1P3L           equ	681	;# 
 19593   0002AA                     U1P3H           equ	682	;# 
 19594   0002AB                     U1CON0          equ	683	;# 
 19595   0002AC                     U1CON1          equ	684	;# 
 19596   0002AD                     U1CON2          equ	685	;# 
 19597   0002AE                     U1BRG           equ	686	;# 
 19598   0002AE                     U1BRGL          equ	686	;# 
 19599   0002AF                     U1BRGH          equ	687	;# 
 19600   0002B0                     U1FIFO          equ	688	;# 
 19601   0002B1                     U1UIR           equ	689	;# 
 19602   0002B2                     U1ERRIR         equ	690	;# 
 19603   0002B3                     U1ERRIE         equ	691	;# 
 19604   0002B4                     U2RXB           equ	692	;# 
 19605   0002B4                     U2RXBL          equ	692	;# 
 19606   0002B5                     U2RXCHK         equ	693	;# 
 19607   0002B6                     U2TXB           equ	694	;# 
 19608   0002B6                     U2TXBL          equ	694	;# 
 19609   0002B7                     U2TXCHK         equ	695	;# 
 19610   0002B8                     U2P1            equ	696	;# 
 19611   0002B8                     U2P1L           equ	696	;# 
 19612   0002B9                     U2P1H           equ	697	;# 
 19613   0002BA                     U2P2            equ	698	;# 
 19614   0002BA                     U2P2L           equ	698	;# 
 19615   0002BB                     U2P2H           equ	699	;# 
 19616   0002BC                     U2P3            equ	700	;# 
 19617   0002BC                     U2P3L           equ	700	;# 
 19618   0002BD                     U2P3H           equ	701	;# 
 19619   0002BE                     U2CON0          equ	702	;# 
 19620   0002BF                     U2CON1          equ	703	;# 
 19621   0002C0                     U2CON2          equ	704	;# 
 19622   0002C1                     U2BRG           equ	705	;# 
 19623   0002C1                     U2BRGL          equ	705	;# 
 19624   0002C2                     U2BRGH          equ	706	;# 
 19625   0002C3                     U2FIFO          equ	707	;# 
 19626   0002C4                     U2UIR           equ	708	;# 
 19627   0002C5                     U2ERRIR         equ	709	;# 
 19628   0002C6                     U2ERRIE         equ	710	;# 
 19629   0002C7                     U3RXB           equ	711	;# 
 19630   0002C7                     U3RXBL          equ	711	;# 
 19631   0002C9                     U3TXB           equ	713	;# 
 19632   0002C9                     U3TXBL          equ	713	;# 
 19633   0002CB                     U3P1            equ	715	;# 
 19634   0002CB                     U3P1L           equ	715	;# 
 19635   0002CD                     U3P2            equ	717	;# 
 19636   0002CD                     U3P2L           equ	717	;# 
 19637   0002CF                     U3P3            equ	719	;# 
 19638   0002CF                     U3P3L           equ	719	;# 
 19639   0002D1                     U3CON0          equ	721	;# 
 19640   0002D2                     U3CON1          equ	722	;# 
 19641   0002D3                     U3CON2          equ	723	;# 
 19642   0002D4                     U3BRG           equ	724	;# 
 19643   0002D4                     U3BRGL          equ	724	;# 
 19644   0002D5                     U3BRGH          equ	725	;# 
 19645   0002D6                     U3FIFO          equ	726	;# 
 19646   0002D7                     U3UIR           equ	727	;# 
 19647   0002D8                     U3ERRIR         equ	728	;# 
 19648   0002D9                     U3ERRIE         equ	729	;# 
 19649   0002DA                     U4RXB           equ	730	;# 
 19650   0002DA                     U4RXBL          equ	730	;# 
 19651   0002DC                     U4TXB           equ	732	;# 
 19652   0002DC                     U4TXBL          equ	732	;# 
 19653   0002DE                     U4P1            equ	734	;# 
 19654   0002DE                     U4P1L           equ	734	;# 
 19655   0002E0                     U4P2            equ	736	;# 
 19656   0002E0                     U4P2L           equ	736	;# 
 19657   0002E2                     U4P3            equ	738	;# 
 19658   0002E2                     U4P3L           equ	738	;# 
 19659   0002E4                     U4CON0          equ	740	;# 
 19660   0002E5                     U4CON1          equ	741	;# 
 19661   0002E6                     U4CON2          equ	742	;# 
 19662   0002E7                     U4BRG           equ	743	;# 
 19663   0002E7                     U4BRGL          equ	743	;# 
 19664   0002E8                     U4BRGH          equ	744	;# 
 19665   0002E9                     U4FIFO          equ	745	;# 
 19666   0002EA                     U4UIR           equ	746	;# 
 19667   0002EB                     U4ERRIR         equ	747	;# 
 19668   0002EC                     U4ERRIE         equ	748	;# 
 19669   0002ED                     U5RXB           equ	749	;# 
 19670   0002ED                     U5RXBL          equ	749	;# 
 19671   0002EF                     U5TXB           equ	751	;# 
 19672   0002EF                     U5TXBL          equ	751	;# 
 19673   0002F1                     U5P1            equ	753	;# 
 19674   0002F1                     U5P1L           equ	753	;# 
 19675   0002F3                     U5P2            equ	755	;# 
 19676   0002F3                     U5P2L           equ	755	;# 
 19677   0002F5                     U5P3            equ	757	;# 
 19678   0002F5                     U5P3L           equ	757	;# 
 19679   0002F7                     U5CON0          equ	759	;# 
 19680   0002F8                     U5CON1          equ	760	;# 
 19681   0002F9                     U5CON2          equ	761	;# 
 19682   0002FA                     U5BRG           equ	762	;# 
 19683   0002FA                     U5BRGL          equ	762	;# 
 19684   0002FB                     U5BRGH          equ	763	;# 
 19685   0002FC                     U5FIFO          equ	764	;# 
 19686   0002FD                     U5UIR           equ	765	;# 
 19687   0002FE                     U5ERRIR         equ	766	;# 
 19688   0002FF                     U5ERRIE         equ	767	;# 
 19689   000300                     SMT1TMR         equ	768	;# 
 19690   000300                     SMT1TMRL        equ	768	;# 
 19691   000301                     SMT1TMRH        equ	769	;# 
 19692   000302                     SMT1TMRU        equ	770	;# 
 19693   000303                     SMT1CPR         equ	771	;# 
 19694   000303                     SMT1CPRL        equ	771	;# 
 19695   000304                     SMT1CPRH        equ	772	;# 
 19696   000305                     SMT1CPRU        equ	773	;# 
 19697   000306                     SMT1CPW         equ	774	;# 
 19698   000306                     SMT1CPWL        equ	774	;# 
 19699   000307                     SMT1CPWH        equ	775	;# 
 19700   000308                     SMT1CPWU        equ	776	;# 
 19701   000309                     SMT1PR          equ	777	;# 
 19702   000309                     SMT1PRL         equ	777	;# 
 19703   00030A                     SMT1PRH         equ	778	;# 
 19704   00030B                     SMT1PRU         equ	779	;# 
 19705   00030C                     SMT1CON0        equ	780	;# 
 19706   00030D                     SMT1CON1        equ	781	;# 
 19707   00030E                     SMT1STAT        equ	782	;# 
 19708   00030F                     SMT1CLK         equ	783	;# 
 19709   000310                     SMT1SIG         equ	784	;# 
 19710   000311                     SMT1WIN         equ	785	;# 
 19711   000318                     TMR0L           equ	792	;# 
 19712   000318                     TMR0            equ	792	;# 
 19713   000319                     TMR0H           equ	793	;# 
 19714   000319                     PR0             equ	793	;# 
 19715   00031A                     T0CON0          equ	794	;# 
 19716   00031B                     T0CON1          equ	795	;# 
 19717   00031C                     TMR1            equ	796	;# 
 19718   00031C                     TMR1L           equ	796	;# 
 19719   00031D                     TMR1H           equ	797	;# 
 19720   00031E                     T1CON           equ	798	;# 
 19721   00031E                     TMR1CON         equ	798	;# 
 19722   00031F                     T1GCON          equ	799	;# 
 19723   00031F                     TMR1GCON        equ	799	;# 
 19724   000320                     T1GATE          equ	800	;# 
 19725   000320                     TMR1GATE        equ	800	;# 
 19726   000321                     T1CLK           equ	801	;# 
 19727   000321                     TMR1CLK         equ	801	;# 
 19728   000321                     PR1             equ	801	;# 
 19729   000322                     T2TMR           equ	802	;# 
 19730   000322                     TMR2            equ	802	;# 
 19731   000323                     T2PR            equ	803	;# 
 19732   000323                     PR2             equ	803	;# 
 19733   000324                     T2CON           equ	804	;# 
 19734   000325                     T2HLT           equ	805	;# 
 19735   000326                     T2CLKCON        equ	806	;# 
 19736   000326                     T2CLK           equ	806	;# 
 19737   000327                     T2RST           equ	807	;# 
 19738   000328                     TMR3            equ	808	;# 
 19739   000328                     TMR3L           equ	808	;# 
 19740   000329                     TMR3H           equ	809	;# 
 19741   00032A                     T3CON           equ	810	;# 
 19742   00032A                     TMR3CON         equ	810	;# 
 19743   00032B                     T3GCON          equ	811	;# 
 19744   00032B                     TMR3GCON        equ	811	;# 
 19745   00032C                     T3GATE          equ	812	;# 
 19746   00032C                     TMR3GATE        equ	812	;# 
 19747   00032D                     T3CLK           equ	813	;# 
 19748   00032D                     TMR3CLK         equ	813	;# 
 19749   00032D                     PR3             equ	813	;# 
 19750   00032E                     T4TMR           equ	814	;# 
 19751   00032E                     TMR4            equ	814	;# 
 19752   00032F                     T4PR            equ	815	;# 
 19753   00032F                     PR4             equ	815	;# 
 19754   000330                     T4CON           equ	816	;# 
 19755   000331                     T4HLT           equ	817	;# 
 19756   000332                     T4CLKCON        equ	818	;# 
 19757   000332                     T4CLK           equ	818	;# 
 19758   000333                     T4RST           equ	819	;# 
 19759   000334                     TMR5            equ	820	;# 
 19760   000334                     TMR5L           equ	820	;# 
 19761   000335                     TMR5H           equ	821	;# 
 19762   000336                     T5CON           equ	822	;# 
 19763   000336                     TMR5CON         equ	822	;# 
 19764   000337                     T5GCON          equ	823	;# 
 19765   000337                     TMR5GCON        equ	823	;# 
 19766   000338                     T5GATE          equ	824	;# 
 19767   000338                     TMR5GATE        equ	824	;# 
 19768   000339                     T5CLK           equ	825	;# 
 19769   000339                     TMR5CLK         equ	825	;# 
 19770   000339                     PR5             equ	825	;# 
 19771   00033A                     T6TMR           equ	826	;# 
 19772   00033A                     TMR6            equ	826	;# 
 19773   00033B                     T6PR            equ	827	;# 
 19774   00033B                     PR6             equ	827	;# 
 19775   00033C                     T6CON           equ	828	;# 
 19776   00033D                     T6HLT           equ	829	;# 
 19777   00033E                     T6CLKCON        equ	830	;# 
 19778   00033E                     T6CLK           equ	830	;# 
 19779   00033F                     T6RST           equ	831	;# 
 19780   000340                     CCPR1           equ	832	;# 
 19781   000340                     CCPR1L          equ	832	;# 
 19782   000341                     CCPR1H          equ	833	;# 
 19783   000342                     CCP1CON         equ	834	;# 
 19784   000343                     CCP1CAP         equ	835	;# 
 19785   000344                     CCPR2           equ	836	;# 
 19786   000344                     CCPR2L          equ	836	;# 
 19787   000345                     CCPR2H          equ	837	;# 
 19788   000346                     CCP2CON         equ	838	;# 
 19789   000347                     CCP2CAP         equ	839	;# 
 19790   000348                     CCPR3           equ	840	;# 
 19791   000348                     CCPR3L          equ	840	;# 
 19792   000349                     CCPR3H          equ	841	;# 
 19793   00034A                     CCP3CON         equ	842	;# 
 19794   00034B                     CCP3CAP         equ	843	;# 
 19795   00034C                     CCPTMRS0        equ	844	;# 
 19796   00034F                     CRCDATA         equ	847	;# 
 19797   00034F                     CRCDATAL        equ	847	;# 
 19798   000350                     CRCDATAH        equ	848	;# 
 19799   000351                     CRCDATAU        equ	849	;# 
 19800   000352                     CRCDATAT        equ	850	;# 
 19801   000353                     CRCOUT          equ	851	;# 
 19802   000353                     CRCSHFT         equ	851	;# 
 19803   000353                     CRCXOR          equ	851	;# 
 19804   000353                     CRCOUTL         equ	851	;# 
 19805   000353                     CRCSHFTL        equ	851	;# 
 19806   000353                     CRCSHIFTL       equ	851	;# 
 19807   000353                     CRCXORL         equ	851	;# 
 19808   000354                     CRCOUTH         equ	852	;# 
 19809   000354                     CRCSHFTH        equ	852	;# 
 19810   000354                     CRCSHIFTH       equ	852	;# 
 19811   000354                     CRCXORH         equ	852	;# 
 19812   000355                     CRCOUTU         equ	853	;# 
 19813   000355                     CRCSHFTU        equ	853	;# 
 19814   000355                     CRCSHIFTU       equ	853	;# 
 19815   000355                     CRCXORU         equ	853	;# 
 19816   000356                     CRCOUTT         equ	854	;# 
 19817   000356                     CRCSHFTT        equ	854	;# 
 19818   000356                     CRCSHIFTT       equ	854	;# 
 19819   000356                     CRCXORT         equ	854	;# 
 19820   000357                     CRCCON0         equ	855	;# 
 19821   000358                     CRCCON1         equ	856	;# 
 19822   000359                     CRCCON2         equ	857	;# 
 19823   00035A                     SCANLADR        equ	858	;# 
 19824   00035A                     SCANLADRL       equ	858	;# 
 19825   00035B                     SCANLADRH       equ	859	;# 
 19826   00035C                     SCANLADRU       equ	860	;# 
 19827   00035D                     SCANHADR        equ	861	;# 
 19828   00035D                     SCANHADRL       equ	861	;# 
 19829   00035E                     SCANHADRH       equ	862	;# 
 19830   00035F                     SCANHADRU       equ	863	;# 
 19831   000360                     SCANCON0        equ	864	;# 
 19832   000361                     SCANTRIG        equ	865	;# 
 19833   000362                     IPR0            equ	866	;# 
 19834   000363                     IPR1            equ	867	;# 
 19835   000364                     IPR2            equ	868	;# 
 19836   000365                     IPR3            equ	869	;# 
 19837   000366                     IPR4            equ	870	;# 
 19838   000367                     IPR5            equ	871	;# 
 19839   000368                     IPR6            equ	872	;# 
 19840   000369                     IPR7            equ	873	;# 
 19841   00036A                     IPR8            equ	874	;# 
 19842   00036B                     IPR9            equ	875	;# 
 19843   00036C                     IPR10           equ	876	;# 
 19844   00036D                     IPR11           equ	877	;# 
 19845   00036E                     IPR12           equ	878	;# 
 19846   00036F                     IPR13           equ	879	;# 
 19847   000370                     IPR14           equ	880	;# 
 19848   000371                     IPR15           equ	881	;# 
 19849   000373                     STATUS_CSHAD    equ	883	;# 
 19850   000374                     WREG_CSHAD      equ	884	;# 
 19851   000375                     BSR_CSHAD       equ	885	;# 
 19852   000376                     SHADCON         equ	886	;# 
 19853   000377                     STATUS_SHAD     equ	887	;# 
 19854   000378                     WREG_SHAD       equ	888	;# 
 19855   000379                     BSR_SHAD        equ	889	;# 
 19856   00037A                     PCLATH_SHAD     equ	890	;# 
 19857   00037B                     PCLATU_SHAD     equ	891	;# 
 19858   00037C                     FSR0SH          equ	892	;# 
 19859   00037C                     FSR0L_SHAD      equ	892	;# 
 19860   00037D                     FSR0H_SHAD      equ	893	;# 
 19861   00037E                     FSR1SH          equ	894	;# 
 19862   00037E                     FSR1L_SHAD      equ	894	;# 
 19863   00037F                     FSR1H_SHAD      equ	895	;# 
 19864   000380                     FSR2SH          equ	896	;# 
 19865   000380                     FSR2L_SHAD      equ	896	;# 
 19866   000381                     FSR2H_SHAD      equ	897	;# 
 19867   000382                     PRODSH          equ	898	;# 
 19868   000382                     PRODL_SHAD      equ	898	;# 
 19869   000383                     PRODH_SHAD      equ	899	;# 
 19870   000387                     TU16ACON0       equ	903	;# 
 19871   000388                     TU16ACON1       equ	904	;# 
 19872   000389                     TU16AHLT        equ	905	;# 
 19873   00038A                     TU16APS         equ	906	;# 
 19874   00038B                     TU16ATMR        equ	907	;# 
 19875   00038B                     TU16ACR         equ	907	;# 
 19876   00038B                     TU16ATMRL       equ	907	;# 
 19877   00038B                     TU16ACRL        equ	907	;# 
 19878   00038C                     TU16ATMRH       equ	908	;# 
 19879   00038C                     TU16ACRH        equ	908	;# 
 19880   00038D                     TU16APR         equ	909	;# 
 19881   00038D                     TU16APRL        equ	909	;# 
 19882   00038E                     TU16APRH        equ	910	;# 
 19883   00038F                     TU16ACLK        equ	911	;# 
 19884   000390                     TU16AERS        equ	912	;# 
 19885   000393                     TU16BCON0       equ	915	;# 
 19886   000394                     TU16BCON1       equ	916	;# 
 19887   000395                     TU16BHLT        equ	917	;# 
 19888   000396                     TU16BPS         equ	918	;# 
 19889   000397                     TU16BTMR        equ	919	;# 
 19890   000397                     TU16BCR         equ	919	;# 
 19891   000397                     TU16BTMRL       equ	919	;# 
 19892   000397                     TU16BCRL        equ	919	;# 
 19893   000398                     TU16BTMRH       equ	920	;# 
 19894   000398                     TU16BCRH        equ	920	;# 
 19895   000399                     TU16BPR         equ	921	;# 
 19896   000399                     TU16BPRL        equ	921	;# 
 19897   00039A                     TU16BPRH        equ	922	;# 
 19898   00039B                     TU16BCLK        equ	923	;# 
 19899   00039C                     TU16BERS        equ	924	;# 
 19900   0003BB                     TUCHAIN         equ	955	;# 
 19901   0003BC                     CWG1CLK         equ	956	;# 
 19902   0003BC                     CWG1CLKCON      equ	956	;# 
 19903   0003BD                     CWG1ISM         equ	957	;# 
 19904   0003BE                     CWG1DBR         equ	958	;# 
 19905   0003BF                     CWG1DBF         equ	959	;# 
 19906   0003C0                     CWG1CON0        equ	960	;# 
 19907   0003C1                     CWG1CON1        equ	961	;# 
 19908   0003C2                     CWG1AS0         equ	962	;# 
 19909   0003C3                     CWG1AS1         equ	963	;# 
 19910   0003C4                     CWG1STR         equ	964	;# 
 19911   0003C5                     CWG2CLK         equ	965	;# 
 19912   0003C5                     CWG2CLKCON      equ	965	;# 
 19913   0003C6                     CWG2ISM         equ	966	;# 
 19914   0003C7                     CWG2DBR         equ	967	;# 
 19915   0003C8                     CWG2DBF         equ	968	;# 
 19916   0003C9                     CWG2CON0        equ	969	;# 
 19917   0003CA                     CWG2CON1        equ	970	;# 
 19918   0003CB                     CWG2AS0         equ	971	;# 
 19919   0003CC                     CWG2AS1         equ	972	;# 
 19920   0003CD                     CWG2STR         equ	973	;# 
 19921   0003CE                     CWG3CLK         equ	974	;# 
 19922   0003CE                     CWG3CLKCON      equ	974	;# 
 19923   0003CF                     CWG3ISM         equ	975	;# 
 19924   0003D0                     CWG3DBR         equ	976	;# 
 19925   0003D1                     CWG3DBF         equ	977	;# 
 19926   0003D2                     CWG3CON0        equ	978	;# 
 19927   0003D3                     CWG3CON1        equ	979	;# 
 19928   0003D4                     CWG3AS0         equ	980	;# 
 19929   0003D5                     CWG3AS1         equ	981	;# 
 19930   0003D6                     CWG3STR         equ	982	;# 
 19931   0003D7                     FVRCON          equ	983	;# 
 19932   0003D8                     ADCPCON         equ	984	;# 
 19933   0003D8                     ADCP            equ	984	;# 
 19934   0003D9                     ADLTH           equ	985	;# 
 19935   0003D9                     ADLTHL          equ	985	;# 
 19936   0003DA                     ADLTHH          equ	986	;# 
 19937   0003DB                     ADUTH           equ	987	;# 
 19938   0003DB                     ADUTHL          equ	987	;# 
 19939   0003DC                     ADUTHH          equ	988	;# 
 19940   0003DD                     ADERR           equ	989	;# 
 19941   0003DD                     ADERRL          equ	989	;# 
 19942   0003DE                     ADERRH          equ	990	;# 
 19943   0003DF                     ADSTPT          equ	991	;# 
 19944   0003DF                     ADSTPTL         equ	991	;# 
 19945   0003E0                     ADSTPTH         equ	992	;# 
 19946   0003E1                     ADFLTR          equ	993	;# 
 19947   0003E1                     ADFLTRL         equ	993	;# 
 19948   0003E2                     ADFLTRH         equ	994	;# 
 19949   0003E3                     ADACC           equ	995	;# 
 19950   0003E3                     ADACCL          equ	995	;# 
 19951   0003E4                     ADACCH          equ	996	;# 
 19952   0003E5                     ADACCU          equ	997	;# 
 19953   0003E6                     ADCNT           equ	998	;# 
 19954   0003E7                     ADRPT           equ	999	;# 
 19955   0003E8                     ADPREV          equ	1000	;# 
 19956   0003E8                     ADPREVL         equ	1000	;# 
 19957   0003E9                     ADPREVH         equ	1001	;# 
 19958   0003EA                     ADRES           equ	1002	;# 
 19959   0003EA                     ADRESL          equ	1002	;# 
 19960   0003EB                     ADRESH          equ	1003	;# 
 19961   0003EC                     ADPCH           equ	1004	;# 
 19962   0003EE                     ADACQ           equ	1006	;# 
 19963   0003EE                     ADACQL          equ	1006	;# 
 19964   0003EF                     ADACQH          equ	1007	;# 
 19965   0003F0                     ADCAP           equ	1008	;# 
 19966   0003F1                     ADPRE           equ	1009	;# 
 19967   0003F1                     ADPREL          equ	1009	;# 
 19968   0003F2                     ADPREH          equ	1010	;# 
 19969   0003F3                     ADCON0          equ	1011	;# 
 19970   0003F4                     ADCON1          equ	1012	;# 
 19971   0003F5                     ADCON2          equ	1013	;# 
 19972   0003F6                     ADCON3          equ	1014	;# 
 19973   0003F7                     ADSTAT          equ	1015	;# 
 19974   0003F8                     ADREF           equ	1016	;# 
 19975   0003F9                     ADACT           equ	1017	;# 
 19976   0003FA                     ADCLK           equ	1018	;# 
 19977   0003FB                     ADCTX           equ	1019	;# 
 19978   0003FC                     ADCSEL1         equ	1020	;# 
 19979   0003FD                     ADCSEL2         equ	1021	;# 
 19980   0003FE                     ADCSEL3         equ	1022	;# 
 19981   0003FF                     ADCSEL4         equ	1023	;# 
 19982   000400                     ANSELA          equ	1024	;# 
 19983   000401                     WPUA            equ	1025	;# 
 19984   000402                     ODCONA          equ	1026	;# 
 19985   000403                     SLRCONA         equ	1027	;# 
 19986   000404                     INLVLA          equ	1028	;# 
 19987   000405                     IOCAP           equ	1029	;# 
 19988   000406                     IOCAN           equ	1030	;# 
 19989   000407                     IOCAF           equ	1031	;# 
 19990   000408                     ANSELB          equ	1032	;# 
 19991   000409                     WPUB            equ	1033	;# 
 19992   00040A                     ODCONB          equ	1034	;# 
 19993   00040B                     SLRCONB         equ	1035	;# 
 19994   00040C                     INLVLB          equ	1036	;# 
 19995   00040D                     IOCBP           equ	1037	;# 
 19996   00040E                     IOCBN           equ	1038	;# 
 19997   00040F                     IOCBF           equ	1039	;# 
 19998   000410                     ANSELC          equ	1040	;# 
 19999   000411                     WPUC            equ	1041	;# 
 20000   000412                     ODCONC          equ	1042	;# 
 20001   000413                     SLRCONC         equ	1043	;# 
 20002   000414                     INLVLC          equ	1044	;# 
 20003   000415                     IOCCP           equ	1045	;# 
 20004   000416                     IOCCN           equ	1046	;# 
 20005   000417                     IOCCF           equ	1047	;# 
 20006   000421                     WPUE            equ	1057	;# 
 20007   000424                     INLVLE          equ	1060	;# 
 20008   000425                     IOCEP           equ	1061	;# 
 20009   000426                     IOCEN           equ	1062	;# 
 20010   000427                     IOCEF           equ	1063	;# 
 20011   000440                     NCO1ACC         equ	1088	;# 
 20012   000440                     NCO1ACCL        equ	1088	;# 
 20013   000441                     NCO1ACCH        equ	1089	;# 
 20014   000442                     NCO1ACCU        equ	1090	;# 
 20015   000443                     NCO1INC         equ	1091	;# 
 20016   000443                     NCO1INCL        equ	1091	;# 
 20017   000444                     NCO1INCH        equ	1092	;# 
 20018   000445                     NCO1INCU        equ	1093	;# 
 20019   000446                     NCO1CON         equ	1094	;# 
 20020   000447                     NCO1CLK         equ	1095	;# 
 20021   000448                     NCO2ACC         equ	1096	;# 
 20022   000448                     NCO2ACCL        equ	1096	;# 
 20023   000449                     NCO2ACCH        equ	1097	;# 
 20024   00044A                     NCO2ACCU        equ	1098	;# 
 20025   00044B                     NCO2INC         equ	1099	;# 
 20026   00044B                     NCO2INCL        equ	1099	;# 
 20027   00044C                     NCO2INCH        equ	1100	;# 
 20028   00044D                     NCO2INCU        equ	1101	;# 
 20029   00044E                     NCO2CON         equ	1102	;# 
 20030   00044F                     NCO2CLK         equ	1103	;# 
 20031   000450                     NCO3ACC         equ	1104	;# 
 20032   000450                     NCO3ACCL        equ	1104	;# 
 20033   000451                     NCO3ACCH        equ	1105	;# 
 20034   000452                     NCO3ACCU        equ	1106	;# 
 20035   000453                     NCO3INC         equ	1107	;# 
 20036   000453                     NCO3INCL        equ	1107	;# 
 20037   000454                     NCO3INCH        equ	1108	;# 
 20038   000455                     NCO3INCU        equ	1109	;# 
 20039   000456                     NCO3CON         equ	1110	;# 
 20040   000457                     NCO3CLK         equ	1111	;# 
 20041   000458                     FSCMCON         equ	1112	;# 
 20042   000459                     IVTLOCK         equ	1113	;# 
 20043   00045A                     IVTAD           equ	1114	;# 
 20044   00045A                     IVTADL          equ	1114	;# 
 20045   00045B                     IVTADH          equ	1115	;# 
 20046   00045C                     IVTADU          equ	1116	;# 
 20047   00045D                     IVTBASE         equ	1117	;# 
 20048   00045D                     IVTBASEL        equ	1117	;# 
 20049   00045E                     IVTBASEH        equ	1118	;# 
 20050   00045F                     IVTBASEU        equ	1119	;# 
 20051   000460                     PWM1ERS         equ	1120	;# 
 20052   000461                     PWM1CLK         equ	1121	;# 
 20053   000462                     PWM1LDS         equ	1122	;# 
 20054   000463                     PWM1PR          equ	1123	;# 
 20055   000463                     PWM1PRL         equ	1123	;# 
 20056   000464                     PWM1PRH         equ	1124	;# 
 20057   000465                     PWM1CPRE        equ	1125	;# 
 20058   000466                     PWM1PIPOS       equ	1126	;# 
 20059   000467                     PWM1GIR         equ	1127	;# 
 20060   000468                     PWM1GIE         equ	1128	;# 
 20061   000469                     PWM1CON         equ	1129	;# 
 20062   00046A                     PWM1S1CFG       equ	1130	;# 
 20063   00046B                     PWM1S1P1        equ	1131	;# 
 20064   00046B                     PWM1S1P1L       equ	1131	;# 
 20065   00046C                     PWM1S1P1H       equ	1132	;# 
 20066   00046D                     PWM1S1P2        equ	1133	;# 
 20067   00046D                     PWM1S1P2L       equ	1133	;# 
 20068   00046E                     PWM1S1P2H       equ	1134	;# 
 20069   00046F                     PWM2ERS         equ	1135	;# 
 20070   000470                     PWM2CLK         equ	1136	;# 
 20071   000471                     PWM2LDS         equ	1137	;# 
 20072   000472                     PWM2PR          equ	1138	;# 
 20073   000472                     PWM2PRL         equ	1138	;# 
 20074   000473                     PWM2PRH         equ	1139	;# 
 20075   000474                     PWM2CPRE        equ	1140	;# 
 20076   000475                     PWM2PIPOS       equ	1141	;# 
 20077   000476                     PWM2GIR         equ	1142	;# 
 20078   000477                     PWM2GIE         equ	1143	;# 
 20079   000478                     PWM2CON         equ	1144	;# 
 20080   000479                     PWM2S1CFG       equ	1145	;# 
 20081   00047A                     PWM2S1P1        equ	1146	;# 
 20082   00047A                     PWM2S1P1L       equ	1146	;# 
 20083   00047B                     PWM2S1P1H       equ	1147	;# 
 20084   00047C                     PWM2S1P2        equ	1148	;# 
 20085   00047C                     PWM2S1P2L       equ	1148	;# 
 20086   00047D                     PWM2S1P2H       equ	1149	;# 
 20087   00047E                     PWM3ERS         equ	1150	;# 
 20088   00047F                     PWM3CLK         equ	1151	;# 
 20089   000480                     PWM3LDS         equ	1152	;# 
 20090   000481                     PWM3PR          equ	1153	;# 
 20091   000481                     PWM3PRL         equ	1153	;# 
 20092   000482                     PWM3PRH         equ	1154	;# 
 20093   000483                     PWM3CPRE        equ	1155	;# 
 20094   000484                     PWM3PIPOS       equ	1156	;# 
 20095   000485                     PWM3GIR         equ	1157	;# 
 20096   000486                     PWM3GIE         equ	1158	;# 
 20097   000487                     PWM3CON         equ	1159	;# 
 20098   000488                     PWM3S1CFG       equ	1160	;# 
 20099   000489                     PWM3S1P1        equ	1161	;# 
 20100   000489                     PWM3S1P1L       equ	1161	;# 
 20101   00048A                     PWM3S1P1H       equ	1162	;# 
 20102   00048B                     PWM3S1P2        equ	1163	;# 
 20103   00048B                     PWM3S1P2L       equ	1163	;# 
 20104   00048C                     PWM3S1P2H       equ	1164	;# 
 20105   00048D                     PWM4ERS         equ	1165	;# 
 20106   00048E                     PWM4CLK         equ	1166	;# 
 20107   00048F                     PWM4LDS         equ	1167	;# 
 20108   000490                     PWM4PR          equ	1168	;# 
 20109   000490                     PWM4PRL         equ	1168	;# 
 20110   000491                     PWM4PRH         equ	1169	;# 
 20111   000492                     PWM4CPRE        equ	1170	;# 
 20112   000493                     PWM4PIPOS       equ	1171	;# 
 20113   000494                     PWM4GIR         equ	1172	;# 
 20114   000495                     PWM4GIE         equ	1173	;# 
 20115   000496                     PWM4CON         equ	1174	;# 
 20116   000497                     PWM4S1CFG       equ	1175	;# 
 20117   000498                     PWM4S1P1        equ	1176	;# 
 20118   000498                     PWM4S1P1L       equ	1176	;# 
 20119   000499                     PWM4S1P1H       equ	1177	;# 
 20120   00049A                     PWM4S1P2        equ	1178	;# 
 20121   00049A                     PWM4S1P2L       equ	1178	;# 
 20122   00049B                     PWM4S1P2H       equ	1179	;# 
 20123   00049C                     PWMLOAD         equ	1180	;# 
 20124   00049D                     PWMEN           equ	1181	;# 
 20125   00049E                     PIE0            equ	1182	;# 
 20126   00049F                     PIE1            equ	1183	;# 
 20127   0004A0                     PIE2            equ	1184	;# 
 20128   0004A1                     PIE3            equ	1185	;# 
 20129   0004A2                     PIE4            equ	1186	;# 
 20130   0004A3                     PIE5            equ	1187	;# 
 20131   0004A4                     PIE6            equ	1188	;# 
 20132   0004A5                     PIE7            equ	1189	;# 
 20133   0004A6                     PIE8            equ	1190	;# 
 20134   0004A7                     PIE9            equ	1191	;# 
 20135   0004A8                     PIE10           equ	1192	;# 
 20136   0004A9                     PIE11           equ	1193	;# 
 20137   0004AA                     PIE12           equ	1194	;# 
 20138   0004AB                     PIE13           equ	1195	;# 
 20139   0004AC                     PIE14           equ	1196	;# 
 20140   0004AD                     PIE15           equ	1197	;# 
 20141   0004AE                     PIR0            equ	1198	;# 
 20142   0004AF                     PIR1            equ	1199	;# 
 20143   0004B0                     PIR2            equ	1200	;# 
 20144   0004B1                     PIR3            equ	1201	;# 
 20145   0004B2                     PIR4            equ	1202	;# 
 20146   0004B3                     PIR5            equ	1203	;# 
 20147   0004B4                     PIR6            equ	1204	;# 
 20148   0004B5                     PIR7            equ	1205	;# 
 20149   0004B6                     PIR8            equ	1206	;# 
 20150   0004B7                     PIR9            equ	1207	;# 
 20151   0004B8                     PIR10           equ	1208	;# 
 20152   0004B9                     PIR11           equ	1209	;# 
 20153   0004BA                     PIR12           equ	1210	;# 
 20154   0004BB                     PIR13           equ	1211	;# 
 20155   0004BC                     PIR14           equ	1212	;# 
 20156   0004BD                     PIR15           equ	1213	;# 
 20157   0004BE                     LATA            equ	1214	;# 
 20158   0004BF                     LATB            equ	1215	;# 
 20159   0004C0                     LATC            equ	1216	;# 
 20160   0004C6                     TRISA           equ	1222	;# 
 20161   0004C7                     TRISB           equ	1223	;# 
 20162   0004C8                     TRISC           equ	1224	;# 
 20163   0004CA                     TRISE           equ	1226	;# 
 20164   0004CE                     PORTA           equ	1230	;# 
 20165   0004CF                     PORTB           equ	1231	;# 
 20166   0004D0                     PORTC           equ	1232	;# 
 20167   0004D2                     PORTE           equ	1234	;# 
 20168   0004D6                     INTCON0         equ	1238	;# 
 20169   0004D7                     INTCON1         equ	1239	;# 
 20170   0004D8                     STATUS          equ	1240	;# 
 20171   0004D9                     FSR2            equ	1241	;# 
 20172   0004D9                     FSR2L           equ	1241	;# 
 20173   0004DA                     FSR2H           equ	1242	;# 
 20174   0004DB                     PLUSW2          equ	1243	;# 
 20175   0004DC                     PREINC2         equ	1244	;# 
 20176   0004DD                     POSTDEC2        equ	1245	;# 
 20177   0004DE                     POSTINC2        equ	1246	;# 
 20178   0004DF                     INDF2           equ	1247	;# 
 20179   0004E0                     BSR             equ	1248	;# 
 20180   0004E1                     FSR1            equ	1249	;# 
 20181   0004E1                     FSR1L           equ	1249	;# 
 20182   0004E2                     FSR1H           equ	1250	;# 
 20183   0004E3                     PLUSW1          equ	1251	;# 
 20184   0004E4                     PREINC1         equ	1252	;# 
 20185   0004E5                     POSTDEC1        equ	1253	;# 
 20186   0004E6                     POSTINC1        equ	1254	;# 
 20187   0004E7                     INDF1           equ	1255	;# 
 20188   0004E8                     WREG            equ	1256	;# 
 20189   0004E9                     FSR0            equ	1257	;# 
 20190   0004E9                     FSR0L           equ	1257	;# 
 20191   0004EA                     FSR0H           equ	1258	;# 
 20192   0004EB                     PLUSW0          equ	1259	;# 
 20193   0004EC                     PREINC0         equ	1260	;# 
 20194   0004ED                     POSTDEC0        equ	1261	;# 
 20195   0004EE                     POSTINC0        equ	1262	;# 
 20196   0004EF                     INDF0           equ	1263	;# 
 20197   0004F0                     PCON0           equ	1264	;# 
 20198   0004F1                     PCON1           equ	1265	;# 
 20199   0004F2                     CPUDOZE         equ	1266	;# 
 20200   0004F3                     PROD            equ	1267	;# 
 20201   0004F3                     PRODL           equ	1267	;# 
 20202   0004F4                     PRODH           equ	1268	;# 
 20203   0004F5                     TABLAT          equ	1269	;# 
 20204   0004F6                     TBLPTR          equ	1270	;# 
 20205   0004F6                     TBLPTRL         equ	1270	;# 
 20206   0004F7                     TBLPTRH         equ	1271	;# 
 20207   0004F8                     TBLPTRU         equ	1272	;# 
 20208   0004F9                     PCLAT           equ	1273	;# 
 20209   0004F9                     PCL             equ	1273	;# 
 20210   0004FA                     PCLATH          equ	1274	;# 
 20211   0004FB                     PCLATU          equ	1275	;# 
 20212   0004FC                     STKPTR          equ	1276	;# 
 20213   0004FD                     TOS             equ	1277	;# 
 20214   0004FD                     TOSL            equ	1277	;# 
 20215   0004FE                     TOSH            equ	1278	;# 
 20216   0004FF                     TOSU            equ	1279	;# 
 20217   000038                     BOOTREG         equ	56	;# 
 20218   000039                     CLKRCON         equ	57	;# 
 20219   00003A                     CLKRCLK         equ	58	;# 
 20220   000040                     NVMCON0         equ	64	;# 
 20221   000041                     NVMCON1         equ	65	;# 
 20222   000042                     NVMLOCK         equ	66	;# 
 20223   000043                     NVMADR          equ	67	;# 
 20224   000043                     NVMADRL         equ	67	;# 
 20225   000044                     NVMADRH         equ	68	;# 
 20226   000045                     NVMADRU         equ	69	;# 
 20227   000046                     NVMDAT          equ	70	;# 
 20228   000046                     NVMDATL         equ	70	;# 
 20229   000047                     NVMDATH         equ	71	;# 
 20230   000048                     VREGCON         equ	72	;# 
 20231   000049                     BORCON          equ	73	;# 
 20232   00004A                     HLVDCON0        equ	74	;# 
 20233   00004B                     HLVDCON1        equ	75	;# 
 20234   00004C                     ZCDCON          equ	76	;# 
 20235   000060                     PMD0            equ	96	;# 
 20236   000061                     PMD1            equ	97	;# 
 20237   000062                     PMD2            equ	98	;# 
 20238   000063                     PMD3            equ	99	;# 
 20239   000064                     PMD4            equ	100	;# 
 20240   000065                     PMD5            equ	101	;# 
 20241   000066                     PMD6            equ	102	;# 
 20242   000067                     PMD7            equ	103	;# 
 20243   000068                     PMD8            equ	104	;# 
 20244   00006A                     MD1CON0         equ	106	;# 
 20245   00006B                     MD1CON1         equ	107	;# 
 20246   00006C                     MD1SRC          equ	108	;# 
 20247   00006D                     MD1CARL         equ	109	;# 
 20248   00006E                     MD1CARH         equ	110	;# 
 20249   00006F                     CMOUT           equ	111	;# 
 20250   000070                     CM1CON0         equ	112	;# 
 20251   000071                     CM1CON1         equ	113	;# 
 20252   000072                     CM1NCH          equ	114	;# 
 20253   000073                     CM1PCH          equ	115	;# 
 20254   000074                     CM2CON0         equ	116	;# 
 20255   000075                     CM2CON1         equ	117	;# 
 20256   000076                     CM2NCH          equ	118	;# 
 20257   000077                     CM2PCH          equ	119	;# 
 20258   000078                     WDTCON0         equ	120	;# 
 20259   000079                     WDTCON1         equ	121	;# 
 20260   00007A                     WDTPSL          equ	122	;# 
 20261   00007B                     WDTPSH          equ	123	;# 
 20262   00007C                     WDTTMR          equ	124	;# 
 20263   00007D                     DAC1DAT         equ	125	;# 
 20264   00007D                     DAC1DATL        equ	125	;# 
 20265   00007F                     DAC1CON         equ	127	;# 
 20266   000080                     SPI1RXB         equ	128	;# 
 20267   000081                     SPI1TXB         equ	129	;# 
 20268   000082                     SPI1TCNT        equ	130	;# 
 20269   000082                     SPI1TCNTL       equ	130	;# 
 20270   000083                     SPI1TCNTH       equ	131	;# 
 20271   000084                     SPI1CON0        equ	132	;# 
 20272   000085                     SPI1CON1        equ	133	;# 
 20273   000086                     SPI1CON2        equ	134	;# 
 20274   000087                     SPI1STATUS      equ	135	;# 
 20275   000088                     SPI1TWIDTH      equ	136	;# 
 20276   000089                     SPI1BAUD        equ	137	;# 
 20277   00008A                     SPI1INTF        equ	138	;# 
 20278   00008B                     SPI1INTE        equ	139	;# 
 20279   00008C                     SPI1CLK         equ	140	;# 
 20280   00008D                     SPI2RXB         equ	141	;# 
 20281   00008E                     SPI2TXB         equ	142	;# 
 20282   00008F                     SPI2TCNT        equ	143	;# 
 20283   00008F                     SPI2TCNTL       equ	143	;# 
 20284   000090                     SPI2TCNTH       equ	144	;# 
 20285   000091                     SPI2CON0        equ	145	;# 
 20286   000092                     SPI2CON1        equ	146	;# 
 20287   000093                     SPI2CON2        equ	147	;# 
 20288   000094                     SPI2STATUS      equ	148	;# 
 20289   000095                     SPI2TWIDTH      equ	149	;# 
 20290   000096                     SPI2BAUD        equ	150	;# 
 20291   000097                     SPI2INTF        equ	151	;# 
 20292   000098                     SPI2INTE        equ	152	;# 
 20293   000099                     SPI2CLK         equ	153	;# 
 20294   0000AC                     ACTCON          equ	172	;# 
 20295   0000AD                     OSCCON1         equ	173	;# 
 20296   0000AE                     OSCCON2         equ	174	;# 
 20297   0000AF                     OSCCON3         equ	175	;# 
 20298   0000B0                     OSCTUNE         equ	176	;# 
 20299   0000B1                     OSCFRQ          equ	177	;# 
 20300   0000B1                     OSCFREQ         equ	177	;# 
 20301   0000B2                     OSCSTAT         equ	178	;# 
 20302   0000B2                     OSCSTAT1        equ	178	;# 
 20303   0000B3                     OSCEN           equ	179	;# 
 20304   0000B4                     PRLOCK          equ	180	;# 
 20305   0000B5                     SCANPR          equ	181	;# 
 20306   0000B6                     DMA1PR          equ	182	;# 
 20307   0000B7                     DMA2PR          equ	183	;# 
 20308   0000B8                     DMA3PR          equ	184	;# 
 20309   0000B9                     DMA4PR          equ	185	;# 
 20310   0000BA                     DMA5PR          equ	186	;# 
 20311   0000BB                     DMA6PR          equ	187	;# 
 20312   0000BC                     DMA7PR          equ	188	;# 
 20313   0000BD                     DMA8PR          equ	189	;# 
 20314   0000BE                     MAINPR          equ	190	;# 
 20315   0000BF                     ISRPR           equ	191	;# 
 20316   0000D4                     CLCDATA         equ	212	;# 
 20317   0000D5                     CLCSELECT       equ	213	;# 
 20318   0000D6                     CLCnCON         equ	214	;# 
 20319   0000D7                     CLCnPOL         equ	215	;# 
 20320   0000D8                     CLCnSEL0        equ	216	;# 
 20321   0000D9                     CLCnSEL1        equ	217	;# 
 20322   0000DA                     CLCnSEL2        equ	218	;# 
 20323   0000DB                     CLCnSEL3        equ	219	;# 
 20324   0000DC                     CLCnGLS0        equ	220	;# 
 20325   0000DD                     CLCnGLS1        equ	221	;# 
 20326   0000DE                     CLCnGLS2        equ	222	;# 
 20327   0000DF                     CLCnGLS3        equ	223	;# 
 20328   0000E8                     DMASELECT       equ	232	;# 
 20329   0000E9                     DMAnBUF         equ	233	;# 
 20330   0000EA                     DMAnDCNT        equ	234	;# 
 20331   0000EA                     DMAnDCNTL       equ	234	;# 
 20332   0000EB                     DMAnDCNTH       equ	235	;# 
 20333   0000EC                     DMAnDPTR        equ	236	;# 
 20334   0000EC                     DMAnDPTRL       equ	236	;# 
 20335   0000ED                     DMAnDPTRH       equ	237	;# 
 20336   0000EE                     DMAnDSZ         equ	238	;# 
 20337   0000EE                     DMAnDSZL        equ	238	;# 
 20338   0000EF                     DMAnDSZH        equ	239	;# 
 20339   0000F0                     DMAnDSA         equ	240	;# 
 20340   0000F0                     DMAnDSAL        equ	240	;# 
 20341   0000F1                     DMAnDSAH        equ	241	;# 
 20342   0000F2                     DMAnSCNT        equ	242	;# 
 20343   0000F2                     DMAnSCNTL       equ	242	;# 
 20344   0000F3                     DMAnSCNTH       equ	243	;# 
 20345   0000F4                     DMAnSPTR        equ	244	;# 
 20346   0000F4                     DMAnSPTRL       equ	244	;# 
 20347   0000F5                     DMAnSPTRH       equ	245	;# 
 20348   0000F6                     DMAnSPTRU       equ	246	;# 
 20349   0000F7                     DMAnSSZ         equ	247	;# 
 20350   0000F7                     DMAnSSZL        equ	247	;# 
 20351   0000F8                     DMAnSSZH        equ	248	;# 
 20352   0000F9                     DMAnSSA         equ	249	;# 
 20353   0000F9                     DMAnSSAL        equ	249	;# 
 20354   0000FA                     DMAnSSAH        equ	250	;# 
 20355   0000FB                     DMAnSSAU        equ	251	;# 
 20356   0000FC                     DMAnCON0        equ	252	;# 
 20357   0000FD                     DMAnCON1        equ	253	;# 
 20358   0000FE                     DMAnAIRQ        equ	254	;# 
 20359   0000FF                     DMAnSIRQ        equ	255	;# 
 20360   000100                     C1CONL          equ	256	;# 
 20361   000101                     C1CONH          equ	257	;# 
 20362   000102                     C1CONU          equ	258	;# 
 20363   000103                     C1CONT          equ	259	;# 
 20364   000104                     C1NBTCFGL       equ	260	;# 
 20365   000105                     C1NBTCFGH       equ	261	;# 
 20366   000106                     C1NBTCFGU       equ	262	;# 
 20367   000107                     C1NBTCFGT       equ	263	;# 
 20368   000108                     C1DBTCFGL       equ	264	;# 
 20369   000109                     C1DBTCFGH       equ	265	;# 
 20370   00010A                     C1DBTCFGU       equ	266	;# 
 20371   00010B                     C1DBTCFGT       equ	267	;# 
 20372   00010C                     C1TDCL          equ	268	;# 
 20373   00010D                     C1TDCH          equ	269	;# 
 20374   00010E                     C1TDCU          equ	270	;# 
 20375   000110                     C1TBC           equ	272	;# 
 20376   000110                     C1TBCL          equ	272	;# 
 20377   000111                     C1TBCH          equ	273	;# 
 20378   000112                     C1TBCU          equ	274	;# 
 20379   000113                     C1TBCT          equ	275	;# 
 20380   000114                     C1TSCONL        equ	276	;# 
 20381   000115                     C1TSCONH        equ	277	;# 
 20382   000116                     C1TSCONU        equ	278	;# 
 20383   000117                     C1TSCONT        equ	279	;# 
 20384   000118                     C1VECL          equ	280	;# 
 20385   000119                     C1VECH          equ	281	;# 
 20386   00011A                     C1VECU          equ	282	;# 
 20387   00011B                     C1VECT          equ	283	;# 
 20388   00011C                     C1INTL          equ	284	;# 
 20389   00011D                     C1INTH          equ	285	;# 
 20390   00011E                     C1INTU          equ	286	;# 
 20391   00011F                     C1INTT          equ	287	;# 
 20392   000120                     C1RXIF          equ	288	;# 
 20393   000120                     C1RXIFL         equ	288	;# 
 20394   000121                     C1RXIFH         equ	289	;# 
 20395   000122                     C1RXIFU         equ	290	;# 
 20396   000123                     C1RXIFT         equ	291	;# 
 20397   000124                     C1TXIF          equ	292	;# 
 20398   000124                     C1TXIFL         equ	292	;# 
 20399   000125                     C1TXIFH         equ	293	;# 
 20400   000126                     C1TXIFU         equ	294	;# 
 20401   000127                     C1TXIFT         equ	295	;# 
 20402   000128                     C1RXOVIF        equ	296	;# 
 20403   000128                     C1RXOVIFL       equ	296	;# 
 20404   000129                     C1RXOVIFH       equ	297	;# 
 20405   00012A                     C1RXOVIFU       equ	298	;# 
 20406   00012B                     C1RXOVIFT       equ	299	;# 
 20407   00012C                     C1TXATIF        equ	300	;# 
 20408   00012C                     C1TXATIFL       equ	300	;# 
 20409   00012D                     C1TXATIFH       equ	301	;# 
 20410   00012E                     C1TXATIFU       equ	302	;# 
 20411   00012F                     C1TXATIFT       equ	303	;# 
 20412   000130                     C1TXREQ         equ	304	;# 
 20413   000130                     C1TXREQL        equ	304	;# 
 20414   000131                     C1TXREQH        equ	305	;# 
 20415   000132                     C1TXREQU        equ	306	;# 
 20416   000133                     C1TXREQT        equ	307	;# 
 20417   000134                     C1TRECL         equ	308	;# 
 20418   000135                     C1TRECH         equ	309	;# 
 20419   000136                     C1TRECU         equ	310	;# 
 20420   000137                     C1TRECT         equ	311	;# 
 20421   000138                     C1BDIAG0L       equ	312	;# 
 20422   000139                     C1BDIAG0H       equ	313	;# 
 20423   00013C                     C1BDIAG1L       equ	316	;# 
 20424   00013D                     C1BDIAG1H       equ	317	;# 
 20425   00013E                     C1BDIAG1U       equ	318	;# 
 20426   00013F                     C1BDIAG1T       equ	319	;# 
 20427   000140                     C1TEFCONL       equ	320	;# 
 20428   000141                     C1TEFCONH       equ	321	;# 
 20429   000142                     C1TEFCONU       equ	322	;# 
 20430   000143                     C1TEFCONT       equ	323	;# 
 20431   000144                     C1TEFSTAL       equ	324	;# 
 20432   000145                     C1TEFSTAH       equ	325	;# 
 20433   000146                     C1TEFSTAU       equ	326	;# 
 20434   000147                     C1TEFSTAT       equ	327	;# 
 20435   000148                     C1TEFUA         equ	328	;# 
 20436   000148                     C1TEFUAL        equ	328	;# 
 20437   000149                     C1TEFUAH        equ	329	;# 
 20438   00014A                     C1TEFUAU        equ	330	;# 
 20439   00014B                     C1TEFUAT        equ	331	;# 
 20440   00014C                     C1FIFOBA        equ	332	;# 
 20441   00014C                     C1FIFOBAL       equ	332	;# 
 20442   00014D                     C1FIFOBAH       equ	333	;# 
 20443   00014E                     C1FIFOBAU       equ	334	;# 
 20444   00014F                     C1FIFOBAT       equ	335	;# 
 20445   000150                     C1TXQCONL       equ	336	;# 
 20446   000151                     C1TXQCONH       equ	337	;# 
 20447   000152                     C1TXQCONU       equ	338	;# 
 20448   000153                     C1TXQCONT       equ	339	;# 
 20449   000154                     C1TXQSTAL       equ	340	;# 
 20450   000155                     C1TXQSTAH       equ	341	;# 
 20451   000156                     C1TXQSTAU       equ	342	;# 
 20452   000157                     C1TXQSTAT       equ	343	;# 
 20453   000158                     C1TXQUA         equ	344	;# 
 20454   000158                     C1TXQUAL        equ	344	;# 
 20455   000159                     C1TXQUAH        equ	345	;# 
 20456   00015A                     C1TXQUAU        equ	346	;# 
 20457   00015B                     C1TXQUAT        equ	347	;# 
 20458   00015C                     C1FIFOCON1      equ	348	;# 
 20459   00015C                     C1FIFOCON1L     equ	348	;# 
 20460   00015D                     C1FIFOCON1H     equ	349	;# 
 20461   00015E                     C1FIFOCON1U     equ	350	;# 
 20462   00015F                     C1FIFOCON1T     equ	351	;# 
 20463   000160                     C1FIFOSTA1      equ	352	;# 
 20464   000160                     C1FIFOSTA1L     equ	352	;# 
 20465   000161                     C1FIFOSTA1H     equ	353	;# 
 20466   000162                     C1FIFOSTA1U     equ	354	;# 
 20467   000163                     C1FIFOSTA1T     equ	355	;# 
 20468   000164                     C1FIFOUA1       equ	356	;# 
 20469   000164                     C1FIFOUA1L      equ	356	;# 
 20470   000165                     C1FIFOUA1H      equ	357	;# 
 20471   000166                     C1FIFOUA1U      equ	358	;# 
 20472   000167                     C1FIFOUA1T      equ	359	;# 
 20473   000168                     C1FIFOCON2      equ	360	;# 
 20474   000168                     C1FIFOCON2L     equ	360	;# 
 20475   000169                     C1FIFOCON2H     equ	361	;# 
 20476   00016A                     C1FIFOCON2U     equ	362	;# 
 20477   00016B                     C1FIFOCON2T     equ	363	;# 
 20478   00016C                     C1FIFOSTA2      equ	364	;# 
 20479   00016C                     C1FIFOSTA2L     equ	364	;# 
 20480   00016D                     C1FIFOSTA2H     equ	365	;# 
 20481   00016E                     C1FIFOSTA2U     equ	366	;# 
 20482   00016F                     C1FIFOSTA2T     equ	367	;# 
 20483   000170                     C1FIFOUA2       equ	368	;# 
 20484   000170                     C1FIFOUA2L      equ	368	;# 
 20485   000171                     C1FIFOUA2H      equ	369	;# 
 20486   000172                     C1FIFOUA2U      equ	370	;# 
 20487   000173                     C1FIFOUA2T      equ	371	;# 
 20488   000174                     C1FIFOCON3      equ	372	;# 
 20489   000174                     C1FIFOCON3L     equ	372	;# 
 20490   000175                     C1FIFOCON3H     equ	373	;# 
 20491   000176                     C1FIFOCON3U     equ	374	;# 
 20492   000177                     C1FIFOCON3T     equ	375	;# 
 20493   000178                     C1FIFOSTA3      equ	376	;# 
 20494   000178                     C1FIFOSTA3L     equ	376	;# 
 20495   000179                     C1FIFOSTA3H     equ	377	;# 
 20496   00017A                     C1FIFOSTA3U     equ	378	;# 
 20497   00017B                     C1FIFOSTA3T     equ	379	;# 
 20498   00017C                     C1FIFOUA3       equ	380	;# 
 20499   00017C                     C1FIFOUA3L      equ	380	;# 
 20500   00017D                     C1FIFOUA3H      equ	381	;# 
 20501   00017E                     C1FIFOUA3U      equ	382	;# 
 20502   00017F                     C1FIFOUA3T      equ	383	;# 
 20503   000180                     C1FLTCON0L      equ	384	;# 
 20504   000181                     C1FLTCON0H      equ	385	;# 
 20505   000182                     C1FLTCON0U      equ	386	;# 
 20506   000183                     C1FLTCON0T      equ	387	;# 
 20507   000184                     C1FLTCON1L      equ	388	;# 
 20508   000185                     C1FLTCON1H      equ	389	;# 
 20509   000186                     C1FLTCON1U      equ	390	;# 
 20510   000187                     C1FLTCON1T      equ	391	;# 
 20511   000188                     C1FLTCON2L      equ	392	;# 
 20512   000189                     C1FLTCON2H      equ	393	;# 
 20513   00018A                     C1FLTCON2U      equ	394	;# 
 20514   00018B                     C1FLTCON2T      equ	395	;# 
 20515   00018C                     C1FLTOBJ0       equ	396	;# 
 20516   00018C                     C1FLTOBJ0L      equ	396	;# 
 20517   00018D                     C1FLTOBJ0H      equ	397	;# 
 20518   00018E                     C1FLTOBJ0U      equ	398	;# 
 20519   00018F                     C1FLTOBJ0T      equ	399	;# 
 20520   000190                     C1MASK0         equ	400	;# 
 20521   000190                     C1MASK0L        equ	400	;# 
 20522   000191                     C1MASK0H        equ	401	;# 
 20523   000192                     C1MASK0U        equ	402	;# 
 20524   000193                     C1MASK0T        equ	403	;# 
 20525   000194                     C1FLTOBJ1       equ	404	;# 
 20526   000194                     C1FLTOBJ1L      equ	404	;# 
 20527   000195                     C1FLTOBJ1H      equ	405	;# 
 20528   000196                     C1FLTOBJ1U      equ	406	;# 
 20529   000197                     C1FLTOBJ1T      equ	407	;# 
 20530   000198                     C1MASK1         equ	408	;# 
 20531   000198                     C1MASK1L        equ	408	;# 
 20532   000199                     C1MASK1H        equ	409	;# 
 20533   00019A                     C1MASK1U        equ	410	;# 
 20534   00019B                     C1MASK1T        equ	411	;# 
 20535   00019C                     C1FLTOBJ2       equ	412	;# 
 20536   00019C                     C1FLTOBJ2L      equ	412	;# 
 20537   00019D                     C1FLTOBJ2H      equ	413	;# 
 20538   00019E                     C1FLTOBJ2U      equ	414	;# 
 20539   00019F                     C1FLTOBJ2T      equ	415	;# 
 20540   0001A0                     C1MASK2         equ	416	;# 
 20541   0001A0                     C1MASK2L        equ	416	;# 
 20542   0001A1                     C1MASK2H        equ	417	;# 
 20543   0001A2                     C1MASK2U        equ	418	;# 
 20544   0001A3                     C1MASK2T        equ	419	;# 
 20545   0001A4                     C1FLTOBJ3       equ	420	;# 
 20546   0001A4                     C1FLTOBJ3L      equ	420	;# 
 20547   0001A5                     C1FLTOBJ3H      equ	421	;# 
 20548   0001A6                     C1FLTOBJ3U      equ	422	;# 
 20549   0001A7                     C1FLTOBJ3T      equ	423	;# 
 20550   0001A8                     C1MASK3         equ	424	;# 
 20551   0001A8                     C1MASK3L        equ	424	;# 
 20552   0001A9                     C1MASK3H        equ	425	;# 
 20553   0001AA                     C1MASK3U        equ	426	;# 
 20554   0001AB                     C1MASK3T        equ	427	;# 
 20555   0001AC                     C1FLTOBJ4       equ	428	;# 
 20556   0001AC                     C1FLTOBJ4L      equ	428	;# 
 20557   0001AD                     C1FLTOBJ4H      equ	429	;# 
 20558   0001AE                     C1FLTOBJ4U      equ	430	;# 
 20559   0001AF                     C1FLTOBJ4T      equ	431	;# 
 20560   0001B0                     C1MASK4         equ	432	;# 
 20561   0001B0                     C1MASK4L        equ	432	;# 
 20562   0001B1                     C1MASK4H        equ	433	;# 
 20563   0001B2                     C1MASK4U        equ	434	;# 
 20564   0001B3                     C1MASK4T        equ	435	;# 
 20565   0001B4                     C1FLTOBJ5       equ	436	;# 
 20566   0001B4                     C1FLTOBJ5L      equ	436	;# 
 20567   0001B5                     C1FLTOBJ5H      equ	437	;# 
 20568   0001B6                     C1FLTOBJ5U      equ	438	;# 
 20569   0001B7                     C1FLTOBJ5T      equ	439	;# 
 20570   0001B8                     C1MASK5         equ	440	;# 
 20571   0001B8                     C1MASK5L        equ	440	;# 
 20572   0001B9                     C1MASK5H        equ	441	;# 
 20573   0001BA                     C1MASK5U        equ	442	;# 
 20574   0001BB                     C1MASK5T        equ	443	;# 
 20575   0001BC                     C1FLTOBJ6       equ	444	;# 
 20576   0001BC                     C1FLTOBJ6L      equ	444	;# 
 20577   0001BD                     C1FLTOBJ6H      equ	445	;# 
 20578   0001BE                     C1FLTOBJ6U      equ	446	;# 
 20579   0001BF                     C1FLTOBJ6T      equ	447	;# 
 20580   0001C0                     C1MASK6         equ	448	;# 
 20581   0001C0                     C1MASK6L        equ	448	;# 
 20582   0001C1                     C1MASK6H        equ	449	;# 
 20583   0001C2                     C1MASK6U        equ	450	;# 
 20584   0001C3                     C1MASK6T        equ	451	;# 
 20585   0001C4                     C1FLTOBJ7       equ	452	;# 
 20586   0001C4                     C1FLTOBJ7L      equ	452	;# 
 20587   0001C5                     C1FLTOBJ7H      equ	453	;# 
 20588   0001C6                     C1FLTOBJ7U      equ	454	;# 
 20589   0001C7                     C1FLTOBJ7T      equ	455	;# 
 20590   0001C8                     C1MASK7         equ	456	;# 
 20591   0001C8                     C1MASK7L        equ	456	;# 
 20592   0001C9                     C1MASK7H        equ	457	;# 
 20593   0001CA                     C1MASK7U        equ	458	;# 
 20594   0001CB                     C1MASK7T        equ	459	;# 
 20595   0001CC                     C1FLTOBJ8       equ	460	;# 
 20596   0001CC                     C1FLTOBJ8L      equ	460	;# 
 20597   0001CD                     C1FLTOBJ8H      equ	461	;# 
 20598   0001CE                     C1FLTOBJ8U      equ	462	;# 
 20599   0001CF                     C1FLTOBJ8T      equ	463	;# 
 20600   0001D0                     C1MASK8         equ	464	;# 
 20601   0001D0                     C1MASK8L        equ	464	;# 
 20602   0001D1                     C1MASK8H        equ	465	;# 
 20603   0001D2                     C1MASK8U        equ	466	;# 
 20604   0001D3                     C1MASK8T        equ	467	;# 
 20605   0001D4                     C1FLTOBJ9       equ	468	;# 
 20606   0001D4                     C1FLTOBJ9L      equ	468	;# 
 20607   0001D5                     C1FLTOBJ9H      equ	469	;# 
 20608   0001D6                     C1FLTOBJ9U      equ	470	;# 
 20609   0001D7                     C1FLTOBJ9T      equ	471	;# 
 20610   0001D8                     C1MASK9         equ	472	;# 
 20611   0001D8                     C1MASK9L        equ	472	;# 
 20612   0001D9                     C1MASK9H        equ	473	;# 
 20613   0001DA                     C1MASK9U        equ	474	;# 
 20614   0001DB                     C1MASK9T        equ	475	;# 
 20615   0001DC                     C1FLTOBJ10      equ	476	;# 
 20616   0001DC                     C1FLTOBJ10L     equ	476	;# 
 20617   0001DD                     C1FLTOBJ10H     equ	477	;# 
 20618   0001DE                     C1FLTOBJ10U     equ	478	;# 
 20619   0001DF                     C1FLTOBJ10T     equ	479	;# 
 20620   0001E0                     C1MASK10        equ	480	;# 
 20621   0001E0                     C1MASK10L       equ	480	;# 
 20622   0001E1                     C1MASK10H       equ	481	;# 
 20623   0001E2                     C1MASK10U       equ	482	;# 
 20624   0001E3                     C1MASK10T       equ	483	;# 
 20625   0001E4                     C1FLTOBJ11      equ	484	;# 
 20626   0001E4                     C1FLTOBJ11L     equ	484	;# 
 20627   0001E5                     C1FLTOBJ11H     equ	485	;# 
 20628   0001E6                     C1FLTOBJ11U     equ	486	;# 
 20629   0001E7                     C1FLTOBJ11T     equ	487	;# 
 20630   0001E8                     C1MASK11        equ	488	;# 
 20631   0001E8                     C1MASK11L       equ	488	;# 
 20632   0001E9                     C1MASK11H       equ	489	;# 
 20633   0001EA                     C1MASK11U       equ	490	;# 
 20634   0001EB                     C1MASK11T       equ	491	;# 
 20635   000200                     PPSLOCK         equ	512	;# 
 20636   000201                     RA0PPS          equ	513	;# 
 20637   000202                     RA1PPS          equ	514	;# 
 20638   000203                     RA2PPS          equ	515	;# 
 20639   000204                     RA3PPS          equ	516	;# 
 20640   000205                     RA4PPS          equ	517	;# 
 20641   000206                     RA5PPS          equ	518	;# 
 20642   000207                     RA6PPS          equ	519	;# 
 20643   000208                     RA7PPS          equ	520	;# 
 20644   000209                     RB0PPS          equ	521	;# 
 20645   00020A                     RB1PPS          equ	522	;# 
 20646   00020B                     RB2PPS          equ	523	;# 
 20647   00020C                     RB3PPS          equ	524	;# 
 20648   00020D                     RB4PPS          equ	525	;# 
 20649   00020E                     RB5PPS          equ	526	;# 
 20650   00020F                     RB6PPS          equ	527	;# 
 20651   000210                     RB7PPS          equ	528	;# 
 20652   000211                     RC0PPS          equ	529	;# 
 20653   000212                     RC1PPS          equ	530	;# 
 20654   000213                     RC2PPS          equ	531	;# 
 20655   000214                     RC3PPS          equ	532	;# 
 20656   000215                     RC4PPS          equ	533	;# 
 20657   000216                     RC5PPS          equ	534	;# 
 20658   000217                     RC6PPS          equ	535	;# 
 20659   000218                     RC7PPS          equ	536	;# 
 20660   00023D                     CANRXPPS        equ	573	;# 
 20661   00023E                     INT0PPS         equ	574	;# 
 20662   00023F                     INT1PPS         equ	575	;# 
 20663   000240                     INT2PPS         equ	576	;# 
 20664   000241                     T0CKIPPS        equ	577	;# 
 20665   000242                     T1CKIPPS        equ	578	;# 
 20666   000243                     T1GPPS          equ	579	;# 
 20667   000244                     T3CKIPPS        equ	580	;# 
 20668   000245                     T3GPPS          equ	581	;# 
 20669   000246                     T5CKIPPS        equ	582	;# 
 20670   000247                     T5GPPS          equ	583	;# 
 20671   000248                     T2INPPS         equ	584	;# 
 20672   000249                     T4INPPS         equ	585	;# 
 20673   00024A                     T6INPPS         equ	586	;# 
 20674   00024B                     TUIN0PPS        equ	587	;# 
 20675   00024C                     TUIN1PPS        equ	588	;# 
 20676   00024F                     CCP1PPS         equ	591	;# 
 20677   000250                     CCP2PPS         equ	592	;# 
 20678   000251                     CCP3PPS         equ	593	;# 
 20679   000253                     PWM1ERSPPS      equ	595	;# 
 20680   000254                     PWM2ERSPPS      equ	596	;# 
 20681   000255                     PWM3ERSPPS      equ	597	;# 
 20682   000256                     PWM4ERSPPS      equ	598	;# 
 20683   000257                     PWMIN0PPS       equ	599	;# 
 20684   000258                     PWMIN1PPS       equ	600	;# 
 20685   000259                     SMT1WINPPS      equ	601	;# 
 20686   00025A                     SMT1SIGPPS      equ	602	;# 
 20687   00025B                     CWG1PPS         equ	603	;# 
 20688   00025B                     CWG1INPPS       equ	603	;# 
 20689   00025C                     CWG2PPS         equ	604	;# 
 20690   00025C                     CWG2INPPS       equ	604	;# 
 20691   00025D                     CWG3PPS         equ	605	;# 
 20692   00025D                     CWG3INPPS       equ	605	;# 
 20693   00025E                     MD1CARLPPS      equ	606	;# 
 20694   00025E                     MDCARLPPS       equ	606	;# 
 20695   00025F                     MD1CARHPPS      equ	607	;# 
 20696   00025F                     MDCARHPPS       equ	607	;# 
 20697   000260                     MD1SRCPPS       equ	608	;# 
 20698   000260                     MDSRCPPS        equ	608	;# 
 20699   000261                     CLCIN0PPS       equ	609	;# 
 20700   000262                     CLCIN1PPS       equ	610	;# 
 20701   000263                     CLCIN2PPS       equ	611	;# 
 20702   000264                     CLCIN3PPS       equ	612	;# 
 20703   000265                     CLCIN4PPS       equ	613	;# 
 20704   000266                     CLCIN5PPS       equ	614	;# 
 20705   000267                     CLCIN6PPS       equ	615	;# 
 20706   000268                     CLCIN7PPS       equ	616	;# 
 20707   000269                     ADACTPPS        equ	617	;# 
 20708   00026A                     SPI1SCKPPS      equ	618	;# 
 20709   00026B                     SPI1SDIPPS      equ	619	;# 
 20710   00026C                     SPI1SSPPS       equ	620	;# 
 20711   00026D                     SPI2SCKPPS      equ	621	;# 
 20712   00026E                     SPI2SDIPPS      equ	622	;# 
 20713   00026F                     SPI2SSPPS       equ	623	;# 
 20714   000270                     I2C1SDAPPS      equ	624	;# 
 20715   000271                     I2C1SCLPPS      equ	625	;# 
 20716   000272                     U1RXPPS         equ	626	;# 
 20717   000273                     U1CTSPPS        equ	627	;# 
 20718   000274                     U2RXPPS         equ	628	;# 
 20719   000275                     U2CTSPPS        equ	629	;# 
 20720   000276                     U3RXPPS         equ	630	;# 
 20721   000277                     U3CTSPPS        equ	631	;# 
 20722   000278                     U4RXPPS         equ	632	;# 
 20723   000279                     U4CTSPPS        equ	633	;# 
 20724   00027A                     U5RXPPS         equ	634	;# 
 20725   00027B                     U5CTSPPS        equ	635	;# 
 20726   000286                     RC4I2C          equ	646	;# 
 20727   000287                     RC3I2C          equ	647	;# 
 20728   000288                     RB2I2C          equ	648	;# 
 20729   000289                     RB1I2C          equ	649	;# 
 20730   00028A                     I2C1RXB         equ	650	;# 
 20731   00028B                     I2C1TXB         equ	651	;# 
 20732   00028C                     I2C1CNTL        equ	652	;# 
 20733   00028D                     I2C1CNTH        equ	653	;# 
 20734   00028E                     I2C1ADB0        equ	654	;# 
 20735   00028F                     I2C1ADB1        equ	655	;# 
 20736   000290                     I2C1ADR0        equ	656	;# 
 20737   000291                     I2C1ADR1        equ	657	;# 
 20738   000292                     I2C1ADR2        equ	658	;# 
 20739   000293                     I2C1ADR3        equ	659	;# 
 20740   000294                     I2C1CON0        equ	660	;# 
 20741   000295                     I2C1CON1        equ	661	;# 
 20742   000296                     I2C1CON2        equ	662	;# 
 20743   000297                     I2C1ERR         equ	663	;# 
 20744   000298                     I2C1STAT0       equ	664	;# 
 20745   000299                     I2C1STAT1       equ	665	;# 
 20746   00029A                     I2C1PIR         equ	666	;# 
 20747   00029B                     I2C1PIE         equ	667	;# 
 20748   00029C                     I2C1BTO         equ	668	;# 
 20749   00029D                     I2C1BAUD        equ	669	;# 
 20750   00029E                     I2C1CLK         equ	670	;# 
 20751   00029F                     I2C1BTOC        equ	671	;# 
 20752   0002A1                     U1RXB           equ	673	;# 
 20753   0002A1                     U1RXBL          equ	673	;# 
 20754   0002A2                     U1RXCHK         equ	674	;# 
 20755   0002A3                     U1TXB           equ	675	;# 
 20756   0002A3                     U1TXBL          equ	675	;# 
 20757   0002A4                     U1TXCHK         equ	676	;# 
 20758   0002A5                     U1P1            equ	677	;# 
 20759   0002A5                     U1P1L           equ	677	;# 
 20760   0002A6                     U1P1H           equ	678	;# 
 20761   0002A7                     U1P2            equ	679	;# 
 20762   0002A7                     U1P2L           equ	679	;# 
 20763   0002A8                     U1P2H           equ	680	;# 
 20764   0002A9                     U1P3            equ	681	;# 
 20765   0002A9                     U1P3L           equ	681	;# 
 20766   0002AA                     U1P3H           equ	682	;# 
 20767   0002AB                     U1CON0          equ	683	;# 
 20768   0002AC                     U1CON1          equ	684	;# 
 20769   0002AD                     U1CON2          equ	685	;# 
 20770   0002AE                     U1BRG           equ	686	;# 
 20771   0002AE                     U1BRGL          equ	686	;# 
 20772   0002AF                     U1BRGH          equ	687	;# 
 20773   0002B0                     U1FIFO          equ	688	;# 
 20774   0002B1                     U1UIR           equ	689	;# 
 20775   0002B2                     U1ERRIR         equ	690	;# 
 20776   0002B3                     U1ERRIE         equ	691	;# 
 20777   0002B4                     U2RXB           equ	692	;# 
 20778   0002B4                     U2RXBL          equ	692	;# 
 20779   0002B5                     U2RXCHK         equ	693	;# 
 20780   0002B6                     U2TXB           equ	694	;# 
 20781   0002B6                     U2TXBL          equ	694	;# 
 20782   0002B7                     U2TXCHK         equ	695	;# 
 20783   0002B8                     U2P1            equ	696	;# 
 20784   0002B8                     U2P1L           equ	696	;# 
 20785   0002B9                     U2P1H           equ	697	;# 
 20786   0002BA                     U2P2            equ	698	;# 
 20787   0002BA                     U2P2L           equ	698	;# 
 20788   0002BB                     U2P2H           equ	699	;# 
 20789   0002BC                     U2P3            equ	700	;# 
 20790   0002BC                     U2P3L           equ	700	;# 
 20791   0002BD                     U2P3H           equ	701	;# 
 20792   0002BE                     U2CON0          equ	702	;# 
 20793   0002BF                     U2CON1          equ	703	;# 
 20794   0002C0                     U2CON2          equ	704	;# 
 20795   0002C1                     U2BRG           equ	705	;# 
 20796   0002C1                     U2BRGL          equ	705	;# 
 20797   0002C2                     U2BRGH          equ	706	;# 
 20798   0002C3                     U2FIFO          equ	707	;# 
 20799   0002C4                     U2UIR           equ	708	;# 
 20800   0002C5                     U2ERRIR         equ	709	;# 
 20801   0002C6                     U2ERRIE         equ	710	;# 
 20802   0002C7                     U3RXB           equ	711	;# 
 20803   0002C7                     U3RXBL          equ	711	;# 
 20804   0002C9                     U3TXB           equ	713	;# 
 20805   0002C9                     U3TXBL          equ	713	;# 
 20806   0002CB                     U3P1            equ	715	;# 
 20807   0002CB                     U3P1L           equ	715	;# 
 20808   0002CD                     U3P2            equ	717	;# 
 20809   0002CD                     U3P2L           equ	717	;# 
 20810   0002CF                     U3P3            equ	719	;# 
 20811   0002CF                     U3P3L           equ	719	;# 
 20812   0002D1                     U3CON0          equ	721	;# 
 20813   0002D2                     U3CON1          equ	722	;# 
 20814   0002D3                     U3CON2          equ	723	;# 
 20815   0002D4                     U3BRG           equ	724	;# 
 20816   0002D4                     U3BRGL          equ	724	;# 
 20817   0002D5                     U3BRGH          equ	725	;# 
 20818   0002D6                     U3FIFO          equ	726	;# 
 20819   0002D7                     U3UIR           equ	727	;# 
 20820   0002D8                     U3ERRIR         equ	728	;# 
 20821   0002D9                     U3ERRIE         equ	729	;# 
 20822   0002DA                     U4RXB           equ	730	;# 
 20823   0002DA                     U4RXBL          equ	730	;# 
 20824   0002DC                     U4TXB           equ	732	;# 
 20825   0002DC                     U4TXBL          equ	732	;# 
 20826   0002DE                     U4P1            equ	734	;# 
 20827   0002DE                     U4P1L           equ	734	;# 
 20828   0002E0                     U4P2            equ	736	;# 
 20829   0002E0                     U4P2L           equ	736	;# 
 20830   0002E2                     U4P3            equ	738	;# 
 20831   0002E2                     U4P3L           equ	738	;# 
 20832   0002E4                     U4CON0          equ	740	;# 
 20833   0002E5                     U4CON1          equ	741	;# 
 20834   0002E6                     U4CON2          equ	742	;# 
 20835   0002E7                     U4BRG           equ	743	;# 
 20836   0002E7                     U4BRGL          equ	743	;# 
 20837   0002E8                     U4BRGH          equ	744	;# 
 20838   0002E9                     U4FIFO          equ	745	;# 
 20839   0002EA                     U4UIR           equ	746	;# 
 20840   0002EB                     U4ERRIR         equ	747	;# 
 20841   0002EC                     U4ERRIE         equ	748	;# 
 20842   0002ED                     U5RXB           equ	749	;# 
 20843   0002ED                     U5RXBL          equ	749	;# 
 20844   0002EF                     U5TXB           equ	751	;# 
 20845   0002EF                     U5TXBL          equ	751	;# 
 20846   0002F1                     U5P1            equ	753	;# 
 20847   0002F1                     U5P1L           equ	753	;# 
 20848   0002F3                     U5P2            equ	755	;# 
 20849   0002F3                     U5P2L           equ	755	;# 
 20850   0002F5                     U5P3            equ	757	;# 
 20851   0002F5                     U5P3L           equ	757	;# 
 20852   0002F7                     U5CON0          equ	759	;# 
 20853   0002F8                     U5CON1          equ	760	;# 
 20854   0002F9                     U5CON2          equ	761	;# 
 20855   0002FA                     U5BRG           equ	762	;# 
 20856   0002FA                     U5BRGL          equ	762	;# 
 20857   0002FB                     U5BRGH          equ	763	;# 
 20858   0002FC                     U5FIFO          equ	764	;# 
 20859   0002FD                     U5UIR           equ	765	;# 
 20860   0002FE                     U5ERRIR         equ	766	;# 
 20861   0002FF                     U5ERRIE         equ	767	;# 
 20862   000300                     SMT1TMR         equ	768	;# 
 20863   000300                     SMT1TMRL        equ	768	;# 
 20864   000301                     SMT1TMRH        equ	769	;# 
 20865   000302                     SMT1TMRU        equ	770	;# 
 20866   000303                     SMT1CPR         equ	771	;# 
 20867   000303                     SMT1CPRL        equ	771	;# 
 20868   000304                     SMT1CPRH        equ	772	;# 
 20869   000305                     SMT1CPRU        equ	773	;# 
 20870   000306                     SMT1CPW         equ	774	;# 
 20871   000306                     SMT1CPWL        equ	774	;# 
 20872   000307                     SMT1CPWH        equ	775	;# 
 20873   000308                     SMT1CPWU        equ	776	;# 
 20874   000309                     SMT1PR          equ	777	;# 
 20875   000309                     SMT1PRL         equ	777	;# 
 20876   00030A                     SMT1PRH         equ	778	;# 
 20877   00030B                     SMT1PRU         equ	779	;# 
 20878   00030C                     SMT1CON0        equ	780	;# 
 20879   00030D                     SMT1CON1        equ	781	;# 
 20880   00030E                     SMT1STAT        equ	782	;# 
 20881   00030F                     SMT1CLK         equ	783	;# 
 20882   000310                     SMT1SIG         equ	784	;# 
 20883   000311                     SMT1WIN         equ	785	;# 
 20884   000318                     TMR0L           equ	792	;# 
 20885   000318                     TMR0            equ	792	;# 
 20886   000319                     TMR0H           equ	793	;# 
 20887   000319                     PR0             equ	793	;# 
 20888   00031A                     T0CON0          equ	794	;# 
 20889   00031B                     T0CON1          equ	795	;# 
 20890   00031C                     TMR1            equ	796	;# 
 20891   00031C                     TMR1L           equ	796	;# 
 20892   00031D                     TMR1H           equ	797	;# 
 20893   00031E                     T1CON           equ	798	;# 
 20894   00031E                     TMR1CON         equ	798	;# 
 20895   00031F                     T1GCON          equ	799	;# 
 20896   00031F                     TMR1GCON        equ	799	;# 
 20897   000320                     T1GATE          equ	800	;# 
 20898   000320                     TMR1GATE        equ	800	;# 
 20899   000321                     T1CLK           equ	801	;# 
 20900   000321                     TMR1CLK         equ	801	;# 
 20901   000321                     PR1             equ	801	;# 
 20902   000322                     T2TMR           equ	802	;# 
 20903   000322                     TMR2            equ	802	;# 
 20904   000323                     T2PR            equ	803	;# 
 20905   000323                     PR2             equ	803	;# 
 20906   000324                     T2CON           equ	804	;# 
 20907   000325                     T2HLT           equ	805	;# 
 20908   000326                     T2CLKCON        equ	806	;# 
 20909   000326                     T2CLK           equ	806	;# 
 20910   000327                     T2RST           equ	807	;# 
 20911   000328                     TMR3            equ	808	;# 
 20912   000328                     TMR3L           equ	808	;# 
 20913   000329                     TMR3H           equ	809	;# 
 20914   00032A                     T3CON           equ	810	;# 
 20915   00032A                     TMR3CON         equ	810	;# 
 20916   00032B                     T3GCON          equ	811	;# 
 20917   00032B                     TMR3GCON        equ	811	;# 
 20918   00032C                     T3GATE          equ	812	;# 
 20919   00032C                     TMR3GATE        equ	812	;# 
 20920   00032D                     T3CLK           equ	813	;# 
 20921   00032D                     TMR3CLK         equ	813	;# 
 20922   00032D                     PR3             equ	813	;# 
 20923   00032E                     T4TMR           equ	814	;# 
 20924   00032E                     TMR4            equ	814	;# 
 20925   00032F                     T4PR            equ	815	;# 
 20926   00032F                     PR4             equ	815	;# 
 20927   000330                     T4CON           equ	816	;# 
 20928   000331                     T4HLT           equ	817	;# 
 20929   000332                     T4CLKCON        equ	818	;# 
 20930   000332                     T4CLK           equ	818	;# 
 20931   000333                     T4RST           equ	819	;# 
 20932   000334                     TMR5            equ	820	;# 
 20933   000334                     TMR5L           equ	820	;# 
 20934   000335                     TMR5H           equ	821	;# 
 20935   000336                     T5CON           equ	822	;# 
 20936   000336                     TMR5CON         equ	822	;# 
 20937   000337                     T5GCON          equ	823	;# 
 20938   000337                     TMR5GCON        equ	823	;# 
 20939   000338                     T5GATE          equ	824	;# 
 20940   000338                     TMR5GATE        equ	824	;# 
 20941   000339                     T5CLK           equ	825	;# 
 20942   000339                     TMR5CLK         equ	825	;# 
 20943   000339                     PR5             equ	825	;# 
 20944   00033A                     T6TMR           equ	826	;# 
 20945   00033A                     TMR6            equ	826	;# 
 20946   00033B                     T6PR            equ	827	;# 
 20947   00033B                     PR6             equ	827	;# 
 20948   00033C                     T6CON           equ	828	;# 
 20949   00033D                     T6HLT           equ	829	;# 
 20950   00033E                     T6CLKCON        equ	830	;# 
 20951   00033E                     T6CLK           equ	830	;# 
 20952   00033F                     T6RST           equ	831	;# 
 20953   000340                     CCPR1           equ	832	;# 
 20954   000340                     CCPR1L          equ	832	;# 
 20955   000341                     CCPR1H          equ	833	;# 
 20956   000342                     CCP1CON         equ	834	;# 
 20957   000343                     CCP1CAP         equ	835	;# 
 20958   000344                     CCPR2           equ	836	;# 
 20959   000344                     CCPR2L          equ	836	;# 
 20960   000345                     CCPR2H          equ	837	;# 
 20961   000346                     CCP2CON         equ	838	;# 
 20962   000347                     CCP2CAP         equ	839	;# 
 20963   000348                     CCPR3           equ	840	;# 
 20964   000348                     CCPR3L          equ	840	;# 
 20965   000349                     CCPR3H          equ	841	;# 
 20966   00034A                     CCP3CON         equ	842	;# 
 20967   00034B                     CCP3CAP         equ	843	;# 
 20968   00034C                     CCPTMRS0        equ	844	;# 
 20969   00034F                     CRCDATA         equ	847	;# 
 20970   00034F                     CRCDATAL        equ	847	;# 
 20971   000350                     CRCDATAH        equ	848	;# 
 20972   000351                     CRCDATAU        equ	849	;# 
 20973   000352                     CRCDATAT        equ	850	;# 
 20974   000353                     CRCOUT          equ	851	;# 
 20975   000353                     CRCSHFT         equ	851	;# 
 20976   000353                     CRCXOR          equ	851	;# 
 20977   000353                     CRCOUTL         equ	851	;# 
 20978   000353                     CRCSHFTL        equ	851	;# 
 20979   000353                     CRCSHIFTL       equ	851	;# 
 20980   000353                     CRCXORL         equ	851	;# 
 20981   000354                     CRCOUTH         equ	852	;# 
 20982   000354                     CRCSHFTH        equ	852	;# 
 20983   000354                     CRCSHIFTH       equ	852	;# 
 20984   000354                     CRCXORH         equ	852	;# 
 20985   000355                     CRCOUTU         equ	853	;# 
 20986   000355                     CRCSHFTU        equ	853	;# 
 20987   000355                     CRCSHIFTU       equ	853	;# 
 20988   000355                     CRCXORU         equ	853	;# 
 20989   000356                     CRCOUTT         equ	854	;# 
 20990   000356                     CRCSHFTT        equ	854	;# 
 20991   000356                     CRCSHIFTT       equ	854	;# 
 20992   000356                     CRCXORT         equ	854	;# 
 20993   000357                     CRCCON0         equ	855	;# 
 20994   000358                     CRCCON1         equ	856	;# 
 20995   000359                     CRCCON2         equ	857	;# 
 20996   00035A                     SCANLADR        equ	858	;# 
 20997   00035A                     SCANLADRL       equ	858	;# 
 20998   00035B                     SCANLADRH       equ	859	;# 
 20999   00035C                     SCANLADRU       equ	860	;# 
 21000   00035D                     SCANHADR        equ	861	;# 
 21001   00035D                     SCANHADRL       equ	861	;# 
 21002   00035E                     SCANHADRH       equ	862	;# 
 21003   00035F                     SCANHADRU       equ	863	;# 
 21004   000360                     SCANCON0        equ	864	;# 
 21005   000361                     SCANTRIG        equ	865	;# 
 21006   000362                     IPR0            equ	866	;# 
 21007   000363                     IPR1            equ	867	;# 
 21008   000364                     IPR2            equ	868	;# 
 21009   000365                     IPR3            equ	869	;# 
 21010   000366                     IPR4            equ	870	;# 
 21011   000367                     IPR5            equ	871	;# 
 21012   000368                     IPR6            equ	872	;# 
 21013   000369                     IPR7            equ	873	;# 
 21014   00036A                     IPR8            equ	874	;# 
 21015   00036B                     IPR9            equ	875	;# 
 21016   00036C                     IPR10           equ	876	;# 
 21017   00036D                     IPR11           equ	877	;# 
 21018   00036E                     IPR12           equ	878	;# 
 21019   00036F                     IPR13           equ	879	;# 
 21020   000370                     IPR14           equ	880	;# 
 21021   000371                     IPR15           equ	881	;# 
 21022   000373                     STATUS_CSHAD    equ	883	;# 
 21023   000374                     WREG_CSHAD      equ	884	;# 
 21024   000375                     BSR_CSHAD       equ	885	;# 
 21025   000376                     SHADCON         equ	886	;# 
 21026   000377                     STATUS_SHAD     equ	887	;# 
 21027   000378                     WREG_SHAD       equ	888	;# 
 21028   000379                     BSR_SHAD        equ	889	;# 
 21029   00037A                     PCLATH_SHAD     equ	890	;# 
 21030   00037B                     PCLATU_SHAD     equ	891	;# 
 21031   00037C                     FSR0SH          equ	892	;# 
 21032   00037C                     FSR0L_SHAD      equ	892	;# 
 21033   00037D                     FSR0H_SHAD      equ	893	;# 
 21034   00037E                     FSR1SH          equ	894	;# 
 21035   00037E                     FSR1L_SHAD      equ	894	;# 
 21036   00037F                     FSR1H_SHAD      equ	895	;# 
 21037   000380                     FSR2SH          equ	896	;# 
 21038   000380                     FSR2L_SHAD      equ	896	;# 
 21039   000381                     FSR2H_SHAD      equ	897	;# 
 21040   000382                     PRODSH          equ	898	;# 
 21041   000382                     PRODL_SHAD      equ	898	;# 
 21042   000383                     PRODH_SHAD      equ	899	;# 
 21043   000387                     TU16ACON0       equ	903	;# 
 21044   000388                     TU16ACON1       equ	904	;# 
 21045   000389                     TU16AHLT        equ	905	;# 
 21046   00038A                     TU16APS         equ	906	;# 
 21047   00038B                     TU16ATMR        equ	907	;# 
 21048   00038B                     TU16ACR         equ	907	;# 
 21049   00038B                     TU16ATMRL       equ	907	;# 
 21050   00038B                     TU16ACRL        equ	907	;# 
 21051   00038C                     TU16ATMRH       equ	908	;# 
 21052   00038C                     TU16ACRH        equ	908	;# 
 21053   00038D                     TU16APR         equ	909	;# 
 21054   00038D                     TU16APRL        equ	909	;# 
 21055   00038E                     TU16APRH        equ	910	;# 
 21056   00038F                     TU16ACLK        equ	911	;# 
 21057   000390                     TU16AERS        equ	912	;# 
 21058   000393                     TU16BCON0       equ	915	;# 
 21059   000394                     TU16BCON1       equ	916	;# 
 21060   000395                     TU16BHLT        equ	917	;# 
 21061   000396                     TU16BPS         equ	918	;# 
 21062   000397                     TU16BTMR        equ	919	;# 
 21063   000397                     TU16BCR         equ	919	;# 
 21064   000397                     TU16BTMRL       equ	919	;# 
 21065   000397                     TU16BCRL        equ	919	;# 
 21066   000398                     TU16BTMRH       equ	920	;# 
 21067   000398                     TU16BCRH        equ	920	;# 
 21068   000399                     TU16BPR         equ	921	;# 
 21069   000399                     TU16BPRL        equ	921	;# 
 21070   00039A                     TU16BPRH        equ	922	;# 
 21071   00039B                     TU16BCLK        equ	923	;# 
 21072   00039C                     TU16BERS        equ	924	;# 
 21073   0003BB                     TUCHAIN         equ	955	;# 
 21074   0003BC                     CWG1CLK         equ	956	;# 
 21075   0003BC                     CWG1CLKCON      equ	956	;# 
 21076   0003BD                     CWG1ISM         equ	957	;# 
 21077   0003BE                     CWG1DBR         equ	958	;# 
 21078   0003BF                     CWG1DBF         equ	959	;# 
 21079   0003C0                     CWG1CON0        equ	960	;# 
 21080   0003C1                     CWG1CON1        equ	961	;# 
 21081   0003C2                     CWG1AS0         equ	962	;# 
 21082   0003C3                     CWG1AS1         equ	963	;# 
 21083   0003C4                     CWG1STR         equ	964	;# 
 21084   0003C5                     CWG2CLK         equ	965	;# 
 21085   0003C5                     CWG2CLKCON      equ	965	;# 
 21086   0003C6                     CWG2ISM         equ	966	;# 
 21087   0003C7                     CWG2DBR         equ	967	;# 
 21088   0003C8                     CWG2DBF         equ	968	;# 
 21089   0003C9                     CWG2CON0        equ	969	;# 
 21090   0003CA                     CWG2CON1        equ	970	;# 
 21091   0003CB                     CWG2AS0         equ	971	;# 
 21092   0003CC                     CWG2AS1         equ	972	;# 
 21093   0003CD                     CWG2STR         equ	973	;# 
 21094   0003CE                     CWG3CLK         equ	974	;# 
 21095   0003CE                     CWG3CLKCON      equ	974	;# 
 21096   0003CF                     CWG3ISM         equ	975	;# 
 21097   0003D0                     CWG3DBR         equ	976	;# 
 21098   0003D1                     CWG3DBF         equ	977	;# 
 21099   0003D2                     CWG3CON0        equ	978	;# 
 21100   0003D3                     CWG3CON1        equ	979	;# 
 21101   0003D4                     CWG3AS0         equ	980	;# 
 21102   0003D5                     CWG3AS1         equ	981	;# 
 21103   0003D6                     CWG3STR         equ	982	;# 
 21104   0003D7                     FVRCON          equ	983	;# 
 21105   0003D8                     ADCPCON         equ	984	;# 
 21106   0003D8                     ADCP            equ	984	;# 
 21107   0003D9                     ADLTH           equ	985	;# 
 21108   0003D9                     ADLTHL          equ	985	;# 
 21109   0003DA                     ADLTHH          equ	986	;# 
 21110   0003DB                     ADUTH           equ	987	;# 
 21111   0003DB                     ADUTHL          equ	987	;# 
 21112   0003DC                     ADUTHH          equ	988	;# 
 21113   0003DD                     ADERR           equ	989	;# 
 21114   0003DD                     ADERRL          equ	989	;# 
 21115   0003DE                     ADERRH          equ	990	;# 
 21116   0003DF                     ADSTPT          equ	991	;# 
 21117   0003DF                     ADSTPTL         equ	991	;# 
 21118   0003E0                     ADSTPTH         equ	992	;# 
 21119   0003E1                     ADFLTR          equ	993	;# 
 21120   0003E1                     ADFLTRL         equ	993	;# 
 21121   0003E2                     ADFLTRH         equ	994	;# 
 21122   0003E3                     ADACC           equ	995	;# 
 21123   0003E3                     ADACCL          equ	995	;# 
 21124   0003E4                     ADACCH          equ	996	;# 
 21125   0003E5                     ADACCU          equ	997	;# 
 21126   0003E6                     ADCNT           equ	998	;# 
 21127   0003E7                     ADRPT           equ	999	;# 
 21128   0003E8                     ADPREV          equ	1000	;# 
 21129   0003E8                     ADPREVL         equ	1000	;# 
 21130   0003E9                     ADPREVH         equ	1001	;# 
 21131   0003EA                     ADRES           equ	1002	;# 
 21132   0003EA                     ADRESL          equ	1002	;# 
 21133   0003EB                     ADRESH          equ	1003	;# 
 21134   0003EC                     ADPCH           equ	1004	;# 
 21135   0003EE                     ADACQ           equ	1006	;# 
 21136   0003EE                     ADACQL          equ	1006	;# 
 21137   0003EF                     ADACQH          equ	1007	;# 
 21138   0003F0                     ADCAP           equ	1008	;# 
 21139   0003F1                     ADPRE           equ	1009	;# 
 21140   0003F1                     ADPREL          equ	1009	;# 
 21141   0003F2                     ADPREH          equ	1010	;# 
 21142   0003F3                     ADCON0          equ	1011	;# 
 21143   0003F4                     ADCON1          equ	1012	;# 
 21144   0003F5                     ADCON2          equ	1013	;# 
 21145   0003F6                     ADCON3          equ	1014	;# 
 21146   0003F7                     ADSTAT          equ	1015	;# 
 21147   0003F8                     ADREF           equ	1016	;# 
 21148   0003F9                     ADACT           equ	1017	;# 
 21149   0003FA                     ADCLK           equ	1018	;# 
 21150   0003FB                     ADCTX           equ	1019	;# 
 21151   0003FC                     ADCSEL1         equ	1020	;# 
 21152   0003FD                     ADCSEL2         equ	1021	;# 
 21153   0003FE                     ADCSEL3         equ	1022	;# 
 21154   0003FF                     ADCSEL4         equ	1023	;# 
 21155   000400                     ANSELA          equ	1024	;# 
 21156   000401                     WPUA            equ	1025	;# 
 21157   000402                     ODCONA          equ	1026	;# 
 21158   000403                     SLRCONA         equ	1027	;# 
 21159   000404                     INLVLA          equ	1028	;# 
 21160   000405                     IOCAP           equ	1029	;# 
 21161   000406                     IOCAN           equ	1030	;# 
 21162   000407                     IOCAF           equ	1031	;# 
 21163   000408                     ANSELB          equ	1032	;# 
 21164   000409                     WPUB            equ	1033	;# 
 21165   00040A                     ODCONB          equ	1034	;# 
 21166   00040B                     SLRCONB         equ	1035	;# 
 21167   00040C                     INLVLB          equ	1036	;# 
 21168   00040D                     IOCBP           equ	1037	;# 
 21169   00040E                     IOCBN           equ	1038	;# 
 21170   00040F                     IOCBF           equ	1039	;# 
 21171   000410                     ANSELC          equ	1040	;# 
 21172   000411                     WPUC            equ	1041	;# 
 21173   000412                     ODCONC          equ	1042	;# 
 21174   000413                     SLRCONC         equ	1043	;# 
 21175   000414                     INLVLC          equ	1044	;# 
 21176   000415                     IOCCP           equ	1045	;# 
 21177   000416                     IOCCN           equ	1046	;# 
 21178   000417                     IOCCF           equ	1047	;# 
 21179   000421                     WPUE            equ	1057	;# 
 21180   000424                     INLVLE          equ	1060	;# 
 21181   000425                     IOCEP           equ	1061	;# 
 21182   000426                     IOCEN           equ	1062	;# 
 21183   000427                     IOCEF           equ	1063	;# 
 21184   000440                     NCO1ACC         equ	1088	;# 
 21185   000440                     NCO1ACCL        equ	1088	;# 
 21186   000441                     NCO1ACCH        equ	1089	;# 
 21187   000442                     NCO1ACCU        equ	1090	;# 
 21188   000443                     NCO1INC         equ	1091	;# 
 21189   000443                     NCO1INCL        equ	1091	;# 
 21190   000444                     NCO1INCH        equ	1092	;# 
 21191   000445                     NCO1INCU        equ	1093	;# 
 21192   000446                     NCO1CON         equ	1094	;# 
 21193   000447                     NCO1CLK         equ	1095	;# 
 21194   000448                     NCO2ACC         equ	1096	;# 
 21195   000448                     NCO2ACCL        equ	1096	;# 
 21196   000449                     NCO2ACCH        equ	1097	;# 
 21197   00044A                     NCO2ACCU        equ	1098	;# 
 21198   00044B                     NCO2INC         equ	1099	;# 
 21199   00044B                     NCO2INCL        equ	1099	;# 
 21200   00044C                     NCO2INCH        equ	1100	;# 
 21201   00044D                     NCO2INCU        equ	1101	;# 
 21202   00044E                     NCO2CON         equ	1102	;# 
 21203   00044F                     NCO2CLK         equ	1103	;# 
 21204   000450                     NCO3ACC         equ	1104	;# 
 21205   000450                     NCO3ACCL        equ	1104	;# 
 21206   000451                     NCO3ACCH        equ	1105	;# 
 21207   000452                     NCO3ACCU        equ	1106	;# 
 21208   000453                     NCO3INC         equ	1107	;# 
 21209   000453                     NCO3INCL        equ	1107	;# 
 21210   000454                     NCO3INCH        equ	1108	;# 
 21211   000455                     NCO3INCU        equ	1109	;# 
 21212   000456                     NCO3CON         equ	1110	;# 
 21213   000457                     NCO3CLK         equ	1111	;# 
 21214   000458                     FSCMCON         equ	1112	;# 
 21215   000459                     IVTLOCK         equ	1113	;# 
 21216   00045A                     IVTAD           equ	1114	;# 
 21217   00045A                     IVTADL          equ	1114	;# 
 21218   00045B                     IVTADH          equ	1115	;# 
 21219   00045C                     IVTADU          equ	1116	;# 
 21220   00045D                     IVTBASE         equ	1117	;# 
 21221   00045D                     IVTBASEL        equ	1117	;# 
 21222   00045E                     IVTBASEH        equ	1118	;# 
 21223   00045F                     IVTBASEU        equ	1119	;# 
 21224   000460                     PWM1ERS         equ	1120	;# 
 21225   000461                     PWM1CLK         equ	1121	;# 
 21226   000462                     PWM1LDS         equ	1122	;# 
 21227   000463                     PWM1PR          equ	1123	;# 
 21228   000463                     PWM1PRL         equ	1123	;# 
 21229   000464                     PWM1PRH         equ	1124	;# 
 21230   000465                     PWM1CPRE        equ	1125	;# 
 21231   000466                     PWM1PIPOS       equ	1126	;# 
 21232   000467                     PWM1GIR         equ	1127	;# 
 21233   000468                     PWM1GIE         equ	1128	;# 
 21234   000469                     PWM1CON         equ	1129	;# 
 21235   00046A                     PWM1S1CFG       equ	1130	;# 
 21236   00046B                     PWM1S1P1        equ	1131	;# 
 21237   00046B                     PWM1S1P1L       equ	1131	;# 
 21238   00046C                     PWM1S1P1H       equ	1132	;# 
 21239   00046D                     PWM1S1P2        equ	1133	;# 
 21240   00046D                     PWM1S1P2L       equ	1133	;# 
 21241   00046E                     PWM1S1P2H       equ	1134	;# 
 21242   00046F                     PWM2ERS         equ	1135	;# 
 21243   000470                     PWM2CLK         equ	1136	;# 
 21244   000471                     PWM2LDS         equ	1137	;# 
 21245   000472                     PWM2PR          equ	1138	;# 
 21246   000472                     PWM2PRL         equ	1138	;# 
 21247   000473                     PWM2PRH         equ	1139	;# 
 21248   000474                     PWM2CPRE        equ	1140	;# 
 21249   000475                     PWM2PIPOS       equ	1141	;# 
 21250   000476                     PWM2GIR         equ	1142	;# 
 21251   000477                     PWM2GIE         equ	1143	;# 
 21252   000478                     PWM2CON         equ	1144	;# 
 21253   000479                     PWM2S1CFG       equ	1145	;# 
 21254   00047A                     PWM2S1P1        equ	1146	;# 
 21255   00047A                     PWM2S1P1L       equ	1146	;# 
 21256   00047B                     PWM2S1P1H       equ	1147	;# 
 21257   00047C                     PWM2S1P2        equ	1148	;# 
 21258   00047C                     PWM2S1P2L       equ	1148	;# 
 21259   00047D                     PWM2S1P2H       equ	1149	;# 
 21260   00047E                     PWM3ERS         equ	1150	;# 
 21261   00047F                     PWM3CLK         equ	1151	;# 
 21262   000480                     PWM3LDS         equ	1152	;# 
 21263   000481                     PWM3PR          equ	1153	;# 
 21264   000481                     PWM3PRL         equ	1153	;# 
 21265   000482                     PWM3PRH         equ	1154	;# 
 21266   000483                     PWM3CPRE        equ	1155	;# 
 21267   000484                     PWM3PIPOS       equ	1156	;# 
 21268   000485                     PWM3GIR         equ	1157	;# 
 21269   000486                     PWM3GIE         equ	1158	;# 
 21270   000487                     PWM3CON         equ	1159	;# 
 21271   000488                     PWM3S1CFG       equ	1160	;# 
 21272   000489                     PWM3S1P1        equ	1161	;# 
 21273   000489                     PWM3S1P1L       equ	1161	;# 
 21274   00048A                     PWM3S1P1H       equ	1162	;# 
 21275   00048B                     PWM3S1P2        equ	1163	;# 
 21276   00048B                     PWM3S1P2L       equ	1163	;# 
 21277   00048C                     PWM3S1P2H       equ	1164	;# 
 21278   00048D                     PWM4ERS         equ	1165	;# 
 21279   00048E                     PWM4CLK         equ	1166	;# 
 21280   00048F                     PWM4LDS         equ	1167	;# 
 21281   000490                     PWM4PR          equ	1168	;# 
 21282   000490                     PWM4PRL         equ	1168	;# 
 21283   000491                     PWM4PRH         equ	1169	;# 
 21284   000492                     PWM4CPRE        equ	1170	;# 
 21285   000493                     PWM4PIPOS       equ	1171	;# 
 21286   000494                     PWM4GIR         equ	1172	;# 
 21287   000495                     PWM4GIE         equ	1173	;# 
 21288   000496                     PWM4CON         equ	1174	;# 
 21289   000497                     PWM4S1CFG       equ	1175	;# 
 21290   000498                     PWM4S1P1        equ	1176	;# 
 21291   000498                     PWM4S1P1L       equ	1176	;# 
 21292   000499                     PWM4S1P1H       equ	1177	;# 
 21293   00049A                     PWM4S1P2        equ	1178	;# 
 21294   00049A                     PWM4S1P2L       equ	1178	;# 
 21295   00049B                     PWM4S1P2H       equ	1179	;# 
 21296   00049C                     PWMLOAD         equ	1180	;# 
 21297   00049D                     PWMEN           equ	1181	;# 
 21298   00049E                     PIE0            equ	1182	;# 
 21299   00049F                     PIE1            equ	1183	;# 
 21300   0004A0                     PIE2            equ	1184	;# 
 21301   0004A1                     PIE3            equ	1185	;# 
 21302   0004A2                     PIE4            equ	1186	;# 
 21303   0004A3                     PIE5            equ	1187	;# 
 21304   0004A4                     PIE6            equ	1188	;# 
 21305   0004A5                     PIE7            equ	1189	;# 
 21306   0004A6                     PIE8            equ	1190	;# 
 21307   0004A7                     PIE9            equ	1191	;# 
 21308   0004A8                     PIE10           equ	1192	;# 
 21309   0004A9                     PIE11           equ	1193	;# 
 21310   0004AA                     PIE12           equ	1194	;# 
 21311   0004AB                     PIE13           equ	1195	;# 
 21312   0004AC                     PIE14           equ	1196	;# 
 21313   0004AD                     PIE15           equ	1197	;# 
 21314   0004AE                     PIR0            equ	1198	;# 
 21315   0004AF                     PIR1            equ	1199	;# 
 21316   0004B0                     PIR2            equ	1200	;# 
 21317   0004B1                     PIR3            equ	1201	;# 
 21318   0004B2                     PIR4            equ	1202	;# 
 21319   0004B3                     PIR5            equ	1203	;# 
 21320   0004B4                     PIR6            equ	1204	;# 
 21321   0004B5                     PIR7            equ	1205	;# 
 21322   0004B6                     PIR8            equ	1206	;# 
 21323   0004B7                     PIR9            equ	1207	;# 
 21324   0004B8                     PIR10           equ	1208	;# 
 21325   0004B9                     PIR11           equ	1209	;# 
 21326   0004BA                     PIR12           equ	1210	;# 
 21327   0004BB                     PIR13           equ	1211	;# 
 21328   0004BC                     PIR14           equ	1212	;# 
 21329   0004BD                     PIR15           equ	1213	;# 
 21330   0004BE                     LATA            equ	1214	;# 
 21331   0004BF                     LATB            equ	1215	;# 
 21332   0004C0                     LATC            equ	1216	;# 
 21333   0004C6                     TRISA           equ	1222	;# 
 21334   0004C7                     TRISB           equ	1223	;# 
 21335   0004C8                     TRISC           equ	1224	;# 
 21336   0004CA                     TRISE           equ	1226	;# 
 21337   0004CE                     PORTA           equ	1230	;# 
 21338   0004CF                     PORTB           equ	1231	;# 
 21339   0004D0                     PORTC           equ	1232	;# 
 21340   0004D2                     PORTE           equ	1234	;# 
 21341   0004D6                     INTCON0         equ	1238	;# 
 21342   0004D7                     INTCON1         equ	1239	;# 
 21343   0004D8                     STATUS          equ	1240	;# 
 21344   0004D9                     FSR2            equ	1241	;# 
 21345   0004D9                     FSR2L           equ	1241	;# 
 21346   0004DA                     FSR2H           equ	1242	;# 
 21347   0004DB                     PLUSW2          equ	1243	;# 
 21348   0004DC                     PREINC2         equ	1244	;# 
 21349   0004DD                     POSTDEC2        equ	1245	;# 
 21350   0004DE                     POSTINC2        equ	1246	;# 
 21351   0004DF                     INDF2           equ	1247	;# 
 21352   0004E0                     BSR             equ	1248	;# 
 21353   0004E1                     FSR1            equ	1249	;# 
 21354   0004E1                     FSR1L           equ	1249	;# 
 21355   0004E2                     FSR1H           equ	1250	;# 
 21356   0004E3                     PLUSW1          equ	1251	;# 
 21357   0004E4                     PREINC1         equ	1252	;# 
 21358   0004E5                     POSTDEC1        equ	1253	;# 
 21359   0004E6                     POSTINC1        equ	1254	;# 
 21360   0004E7                     INDF1           equ	1255	;# 
 21361   0004E8                     WREG            equ	1256	;# 
 21362   0004E9                     FSR0            equ	1257	;# 
 21363   0004E9                     FSR0L           equ	1257	;# 
 21364   0004EA                     FSR0H           equ	1258	;# 
 21365   0004EB                     PLUSW0          equ	1259	;# 
 21366   0004EC                     PREINC0         equ	1260	;# 
 21367   0004ED                     POSTDEC0        equ	1261	;# 
 21368   0004EE                     POSTINC0        equ	1262	;# 
 21369   0004EF                     INDF0           equ	1263	;# 
 21370   0004F0                     PCON0           equ	1264	;# 
 21371   0004F1                     PCON1           equ	1265	;# 
 21372   0004F2                     CPUDOZE         equ	1266	;# 
 21373   0004F3                     PROD            equ	1267	;# 
 21374   0004F3                     PRODL           equ	1267	;# 
 21375   0004F4                     PRODH           equ	1268	;# 
 21376   0004F5                     TABLAT          equ	1269	;# 
 21377   0004F6                     TBLPTR          equ	1270	;# 
 21378   0004F6                     TBLPTRL         equ	1270	;# 
 21379   0004F7                     TBLPTRH         equ	1271	;# 
 21380   0004F8                     TBLPTRU         equ	1272	;# 
 21381   0004F9                     PCLAT           equ	1273	;# 
 21382   0004F9                     PCL             equ	1273	;# 
 21383   0004FA                     PCLATH          equ	1274	;# 
 21384   0004FB                     PCLATU          equ	1275	;# 
 21385   0004FC                     STKPTR          equ	1276	;# 
 21386   0004FD                     TOS             equ	1277	;# 
 21387   0004FD                     TOSL            equ	1277	;# 
 21388   0004FE                     TOSH            equ	1278	;# 
 21389   0004FF                     TOSU            equ	1279	;# 
 21390   000038                     BOOTREG         equ	56	;# 
 21391   000039                     CLKRCON         equ	57	;# 
 21392   00003A                     CLKRCLK         equ	58	;# 
 21393   000040                     NVMCON0         equ	64	;# 
 21394   000041                     NVMCON1         equ	65	;# 
 21395   000042                     NVMLOCK         equ	66	;# 
 21396   000043                     NVMADR          equ	67	;# 
 21397   000043                     NVMADRL         equ	67	;# 
 21398   000044                     NVMADRH         equ	68	;# 
 21399   000045                     NVMADRU         equ	69	;# 
 21400   000046                     NVMDAT          equ	70	;# 
 21401   000046                     NVMDATL         equ	70	;# 
 21402   000047                     NVMDATH         equ	71	;# 
 21403   000048                     VREGCON         equ	72	;# 
 21404   000049                     BORCON          equ	73	;# 
 21405   00004A                     HLVDCON0        equ	74	;# 
 21406   00004B                     HLVDCON1        equ	75	;# 
 21407   00004C                     ZCDCON          equ	76	;# 
 21408   000060                     PMD0            equ	96	;# 
 21409   000061                     PMD1            equ	97	;# 
 21410   000062                     PMD2            equ	98	;# 
 21411   000063                     PMD3            equ	99	;# 
 21412   000064                     PMD4            equ	100	;# 
 21413   000065                     PMD5            equ	101	;# 
 21414   000066                     PMD6            equ	102	;# 
 21415   000067                     PMD7            equ	103	;# 
 21416   000068                     PMD8            equ	104	;# 
 21417   00006A                     MD1CON0         equ	106	;# 
 21418   00006B                     MD1CON1         equ	107	;# 
 21419   00006C                     MD1SRC          equ	108	;# 
 21420   00006D                     MD1CARL         equ	109	;# 
 21421   00006E                     MD1CARH         equ	110	;# 
 21422   00006F                     CMOUT           equ	111	;# 
 21423   000070                     CM1CON0         equ	112	;# 
 21424   000071                     CM1CON1         equ	113	;# 
 21425   000072                     CM1NCH          equ	114	;# 
 21426   000073                     CM1PCH          equ	115	;# 
 21427   000074                     CM2CON0         equ	116	;# 
 21428   000075                     CM2CON1         equ	117	;# 
 21429   000076                     CM2NCH          equ	118	;# 
 21430   000077                     CM2PCH          equ	119	;# 
 21431   000078                     WDTCON0         equ	120	;# 
 21432   000079                     WDTCON1         equ	121	;# 
 21433   00007A                     WDTPSL          equ	122	;# 
 21434   00007B                     WDTPSH          equ	123	;# 
 21435   00007C                     WDTTMR          equ	124	;# 
 21436   00007D                     DAC1DAT         equ	125	;# 
 21437   00007D                     DAC1DATL        equ	125	;# 
 21438   00007F                     DAC1CON         equ	127	;# 
 21439   000080                     SPI1RXB         equ	128	;# 
 21440   000081                     SPI1TXB         equ	129	;# 
 21441   000082                     SPI1TCNT        equ	130	;# 
 21442   000082                     SPI1TCNTL       equ	130	;# 
 21443   000083                     SPI1TCNTH       equ	131	;# 
 21444   000084                     SPI1CON0        equ	132	;# 
 21445   000085                     SPI1CON1        equ	133	;# 
 21446   000086                     SPI1CON2        equ	134	;# 
 21447   000087                     SPI1STATUS      equ	135	;# 
 21448   000088                     SPI1TWIDTH      equ	136	;# 
 21449   000089                     SPI1BAUD        equ	137	;# 
 21450   00008A                     SPI1INTF        equ	138	;# 
 21451   00008B                     SPI1INTE        equ	139	;# 
 21452   00008C                     SPI1CLK         equ	140	;# 
 21453   00008D                     SPI2RXB         equ	141	;# 
 21454   00008E                     SPI2TXB         equ	142	;# 
 21455   00008F                     SPI2TCNT        equ	143	;# 
 21456   00008F                     SPI2TCNTL       equ	143	;# 
 21457   000090                     SPI2TCNTH       equ	144	;# 
 21458   000091                     SPI2CON0        equ	145	;# 
 21459   000092                     SPI2CON1        equ	146	;# 
 21460   000093                     SPI2CON2        equ	147	;# 
 21461   000094                     SPI2STATUS      equ	148	;# 
 21462   000095                     SPI2TWIDTH      equ	149	;# 
 21463   000096                     SPI2BAUD        equ	150	;# 
 21464   000097                     SPI2INTF        equ	151	;# 
 21465   000098                     SPI2INTE        equ	152	;# 
 21466   000099                     SPI2CLK         equ	153	;# 
 21467   0000AC                     ACTCON          equ	172	;# 
 21468   0000AD                     OSCCON1         equ	173	;# 
 21469   0000AE                     OSCCON2         equ	174	;# 
 21470   0000AF                     OSCCON3         equ	175	;# 
 21471   0000B0                     OSCTUNE         equ	176	;# 
 21472   0000B1                     OSCFRQ          equ	177	;# 
 21473   0000B1                     OSCFREQ         equ	177	;# 
 21474   0000B2                     OSCSTAT         equ	178	;# 
 21475   0000B2                     OSCSTAT1        equ	178	;# 
 21476   0000B3                     OSCEN           equ	179	;# 
 21477   0000B4                     PRLOCK          equ	180	;# 
 21478   0000B5                     SCANPR          equ	181	;# 
 21479   0000B6                     DMA1PR          equ	182	;# 
 21480   0000B7                     DMA2PR          equ	183	;# 
 21481   0000B8                     DMA3PR          equ	184	;# 
 21482   0000B9                     DMA4PR          equ	185	;# 
 21483   0000BA                     DMA5PR          equ	186	;# 
 21484   0000BB                     DMA6PR          equ	187	;# 
 21485   0000BC                     DMA7PR          equ	188	;# 
 21486   0000BD                     DMA8PR          equ	189	;# 
 21487   0000BE                     MAINPR          equ	190	;# 
 21488   0000BF                     ISRPR           equ	191	;# 
 21489   0000D4                     CLCDATA         equ	212	;# 
 21490   0000D5                     CLCSELECT       equ	213	;# 
 21491   0000D6                     CLCnCON         equ	214	;# 
 21492   0000D7                     CLCnPOL         equ	215	;# 
 21493   0000D8                     CLCnSEL0        equ	216	;# 
 21494   0000D9                     CLCnSEL1        equ	217	;# 
 21495   0000DA                     CLCnSEL2        equ	218	;# 
 21496   0000DB                     CLCnSEL3        equ	219	;# 
 21497   0000DC                     CLCnGLS0        equ	220	;# 
 21498   0000DD                     CLCnGLS1        equ	221	;# 
 21499   0000DE                     CLCnGLS2        equ	222	;# 
 21500   0000DF                     CLCnGLS3        equ	223	;# 
 21501   0000E8                     DMASELECT       equ	232	;# 
 21502   0000E9                     DMAnBUF         equ	233	;# 
 21503   0000EA                     DMAnDCNT        equ	234	;# 
 21504   0000EA                     DMAnDCNTL       equ	234	;# 
 21505   0000EB                     DMAnDCNTH       equ	235	;# 
 21506   0000EC                     DMAnDPTR        equ	236	;# 
 21507   0000EC                     DMAnDPTRL       equ	236	;# 
 21508   0000ED                     DMAnDPTRH       equ	237	;# 
 21509   0000EE                     DMAnDSZ         equ	238	;# 
 21510   0000EE                     DMAnDSZL        equ	238	;# 
 21511   0000EF                     DMAnDSZH        equ	239	;# 
 21512   0000F0                     DMAnDSA         equ	240	;# 
 21513   0000F0                     DMAnDSAL        equ	240	;# 
 21514   0000F1                     DMAnDSAH        equ	241	;# 
 21515   0000F2                     DMAnSCNT        equ	242	;# 
 21516   0000F2                     DMAnSCNTL       equ	242	;# 
 21517   0000F3                     DMAnSCNTH       equ	243	;# 
 21518   0000F4                     DMAnSPTR        equ	244	;# 
 21519   0000F4                     DMAnSPTRL       equ	244	;# 
 21520   0000F5                     DMAnSPTRH       equ	245	;# 
 21521   0000F6                     DMAnSPTRU       equ	246	;# 
 21522   0000F7                     DMAnSSZ         equ	247	;# 
 21523   0000F7                     DMAnSSZL        equ	247	;# 
 21524   0000F8                     DMAnSSZH        equ	248	;# 
 21525   0000F9                     DMAnSSA         equ	249	;# 
 21526   0000F9                     DMAnSSAL        equ	249	;# 
 21527   0000FA                     DMAnSSAH        equ	250	;# 
 21528   0000FB                     DMAnSSAU        equ	251	;# 
 21529   0000FC                     DMAnCON0        equ	252	;# 
 21530   0000FD                     DMAnCON1        equ	253	;# 
 21531   0000FE                     DMAnAIRQ        equ	254	;# 
 21532   0000FF                     DMAnSIRQ        equ	255	;# 
 21533   000100                     C1CONL          equ	256	;# 
 21534   000101                     C1CONH          equ	257	;# 
 21535   000102                     C1CONU          equ	258	;# 
 21536   000103                     C1CONT          equ	259	;# 
 21537   000104                     C1NBTCFGL       equ	260	;# 
 21538   000105                     C1NBTCFGH       equ	261	;# 
 21539   000106                     C1NBTCFGU       equ	262	;# 
 21540   000107                     C1NBTCFGT       equ	263	;# 
 21541   000108                     C1DBTCFGL       equ	264	;# 
 21542   000109                     C1DBTCFGH       equ	265	;# 
 21543   00010A                     C1DBTCFGU       equ	266	;# 
 21544   00010B                     C1DBTCFGT       equ	267	;# 
 21545   00010C                     C1TDCL          equ	268	;# 
 21546   00010D                     C1TDCH          equ	269	;# 
 21547   00010E                     C1TDCU          equ	270	;# 
 21548   000110                     C1TBC           equ	272	;# 
 21549   000110                     C1TBCL          equ	272	;# 
 21550   000111                     C1TBCH          equ	273	;# 
 21551   000112                     C1TBCU          equ	274	;# 
 21552   000113                     C1TBCT          equ	275	;# 
 21553   000114                     C1TSCONL        equ	276	;# 
 21554   000115                     C1TSCONH        equ	277	;# 
 21555   000116                     C1TSCONU        equ	278	;# 
 21556   000117                     C1TSCONT        equ	279	;# 
 21557   000118                     C1VECL          equ	280	;# 
 21558   000119                     C1VECH          equ	281	;# 
 21559   00011A                     C1VECU          equ	282	;# 
 21560   00011B                     C1VECT          equ	283	;# 
 21561   00011C                     C1INTL          equ	284	;# 
 21562   00011D                     C1INTH          equ	285	;# 
 21563   00011E                     C1INTU          equ	286	;# 
 21564   00011F                     C1INTT          equ	287	;# 
 21565   000120                     C1RXIF          equ	288	;# 
 21566   000120                     C1RXIFL         equ	288	;# 
 21567   000121                     C1RXIFH         equ	289	;# 
 21568   000122                     C1RXIFU         equ	290	;# 
 21569   000123                     C1RXIFT         equ	291	;# 
 21570   000124                     C1TXIF          equ	292	;# 
 21571   000124                     C1TXIFL         equ	292	;# 
 21572   000125                     C1TXIFH         equ	293	;# 
 21573   000126                     C1TXIFU         equ	294	;# 
 21574   000127                     C1TXIFT         equ	295	;# 
 21575   000128                     C1RXOVIF        equ	296	;# 
 21576   000128                     C1RXOVIFL       equ	296	;# 
 21577   000129                     C1RXOVIFH       equ	297	;# 
 21578   00012A                     C1RXOVIFU       equ	298	;# 
 21579   00012B                     C1RXOVIFT       equ	299	;# 
 21580   00012C                     C1TXATIF        equ	300	;# 
 21581   00012C                     C1TXATIFL       equ	300	;# 
 21582   00012D                     C1TXATIFH       equ	301	;# 
 21583   00012E                     C1TXATIFU       equ	302	;# 
 21584   00012F                     C1TXATIFT       equ	303	;# 
 21585   000130                     C1TXREQ         equ	304	;# 
 21586   000130                     C1TXREQL        equ	304	;# 
 21587   000131                     C1TXREQH        equ	305	;# 
 21588   000132                     C1TXREQU        equ	306	;# 
 21589   000133                     C1TXREQT        equ	307	;# 
 21590   000134                     C1TRECL         equ	308	;# 
 21591   000135                     C1TRECH         equ	309	;# 
 21592   000136                     C1TRECU         equ	310	;# 
 21593   000137                     C1TRECT         equ	311	;# 
 21594   000138                     C1BDIAG0L       equ	312	;# 
 21595   000139                     C1BDIAG0H       equ	313	;# 
 21596   00013C                     C1BDIAG1L       equ	316	;# 
 21597   00013D                     C1BDIAG1H       equ	317	;# 
 21598   00013E                     C1BDIAG1U       equ	318	;# 
 21599   00013F                     C1BDIAG1T       equ	319	;# 
 21600   000140                     C1TEFCONL       equ	320	;# 
 21601   000141                     C1TEFCONH       equ	321	;# 
 21602   000142                     C1TEFCONU       equ	322	;# 
 21603   000143                     C1TEFCONT       equ	323	;# 
 21604   000144                     C1TEFSTAL       equ	324	;# 
 21605   000145                     C1TEFSTAH       equ	325	;# 
 21606   000146                     C1TEFSTAU       equ	326	;# 
 21607   000147                     C1TEFSTAT       equ	327	;# 
 21608   000148                     C1TEFUA         equ	328	;# 
 21609   000148                     C1TEFUAL        equ	328	;# 
 21610   000149                     C1TEFUAH        equ	329	;# 
 21611   00014A                     C1TEFUAU        equ	330	;# 
 21612   00014B                     C1TEFUAT        equ	331	;# 
 21613   00014C                     C1FIFOBA        equ	332	;# 
 21614   00014C                     C1FIFOBAL       equ	332	;# 
 21615   00014D                     C1FIFOBAH       equ	333	;# 
 21616   00014E                     C1FIFOBAU       equ	334	;# 
 21617   00014F                     C1FIFOBAT       equ	335	;# 
 21618   000150                     C1TXQCONL       equ	336	;# 
 21619   000151                     C1TXQCONH       equ	337	;# 
 21620   000152                     C1TXQCONU       equ	338	;# 
 21621   000153                     C1TXQCONT       equ	339	;# 
 21622   000154                     C1TXQSTAL       equ	340	;# 
 21623   000155                     C1TXQSTAH       equ	341	;# 
 21624   000156                     C1TXQSTAU       equ	342	;# 
 21625   000157                     C1TXQSTAT       equ	343	;# 
 21626   000158                     C1TXQUA         equ	344	;# 
 21627   000158                     C1TXQUAL        equ	344	;# 
 21628   000159                     C1TXQUAH        equ	345	;# 
 21629   00015A                     C1TXQUAU        equ	346	;# 
 21630   00015B                     C1TXQUAT        equ	347	;# 
 21631   00015C                     C1FIFOCON1      equ	348	;# 
 21632   00015C                     C1FIFOCON1L     equ	348	;# 
 21633   00015D                     C1FIFOCON1H     equ	349	;# 
 21634   00015E                     C1FIFOCON1U     equ	350	;# 
 21635   00015F                     C1FIFOCON1T     equ	351	;# 
 21636   000160                     C1FIFOSTA1      equ	352	;# 
 21637   000160                     C1FIFOSTA1L     equ	352	;# 
 21638   000161                     C1FIFOSTA1H     equ	353	;# 
 21639   000162                     C1FIFOSTA1U     equ	354	;# 
 21640   000163                     C1FIFOSTA1T     equ	355	;# 
 21641   000164                     C1FIFOUA1       equ	356	;# 
 21642   000164                     C1FIFOUA1L      equ	356	;# 
 21643   000165                     C1FIFOUA1H      equ	357	;# 
 21644   000166                     C1FIFOUA1U      equ	358	;# 
 21645   000167                     C1FIFOUA1T      equ	359	;# 
 21646   000168                     C1FIFOCON2      equ	360	;# 
 21647   000168                     C1FIFOCON2L     equ	360	;# 
 21648   000169                     C1FIFOCON2H     equ	361	;# 
 21649   00016A                     C1FIFOCON2U     equ	362	;# 
 21650   00016B                     C1FIFOCON2T     equ	363	;# 
 21651   00016C                     C1FIFOSTA2      equ	364	;# 
 21652   00016C                     C1FIFOSTA2L     equ	364	;# 
 21653   00016D                     C1FIFOSTA2H     equ	365	;# 
 21654   00016E                     C1FIFOSTA2U     equ	366	;# 
 21655   00016F                     C1FIFOSTA2T     equ	367	;# 
 21656   000170                     C1FIFOUA2       equ	368	;# 
 21657   000170                     C1FIFOUA2L      equ	368	;# 
 21658   000171                     C1FIFOUA2H      equ	369	;# 
 21659   000172                     C1FIFOUA2U      equ	370	;# 
 21660   000173                     C1FIFOUA2T      equ	371	;# 
 21661   000174                     C1FIFOCON3      equ	372	;# 
 21662   000174                     C1FIFOCON3L     equ	372	;# 
 21663   000175                     C1FIFOCON3H     equ	373	;# 
 21664   000176                     C1FIFOCON3U     equ	374	;# 
 21665   000177                     C1FIFOCON3T     equ	375	;# 
 21666   000178                     C1FIFOSTA3      equ	376	;# 
 21667   000178                     C1FIFOSTA3L     equ	376	;# 
 21668   000179                     C1FIFOSTA3H     equ	377	;# 
 21669   00017A                     C1FIFOSTA3U     equ	378	;# 
 21670   00017B                     C1FIFOSTA3T     equ	379	;# 
 21671   00017C                     C1FIFOUA3       equ	380	;# 
 21672   00017C                     C1FIFOUA3L      equ	380	;# 
 21673   00017D                     C1FIFOUA3H      equ	381	;# 
 21674   00017E                     C1FIFOUA3U      equ	382	;# 
 21675   00017F                     C1FIFOUA3T      equ	383	;# 
 21676   000180                     C1FLTCON0L      equ	384	;# 
 21677   000181                     C1FLTCON0H      equ	385	;# 
 21678   000182                     C1FLTCON0U      equ	386	;# 
 21679   000183                     C1FLTCON0T      equ	387	;# 
 21680   000184                     C1FLTCON1L      equ	388	;# 
 21681   000185                     C1FLTCON1H      equ	389	;# 
 21682   000186                     C1FLTCON1U      equ	390	;# 
 21683   000187                     C1FLTCON1T      equ	391	;# 
 21684   000188                     C1FLTCON2L      equ	392	;# 
 21685   000189                     C1FLTCON2H      equ	393	;# 
 21686   00018A                     C1FLTCON2U      equ	394	;# 
 21687   00018B                     C1FLTCON2T      equ	395	;# 
 21688   00018C                     C1FLTOBJ0       equ	396	;# 
 21689   00018C                     C1FLTOBJ0L      equ	396	;# 
 21690   00018D                     C1FLTOBJ0H      equ	397	;# 
 21691   00018E                     C1FLTOBJ0U      equ	398	;# 
 21692   00018F                     C1FLTOBJ0T      equ	399	;# 
 21693   000190                     C1MASK0         equ	400	;# 
 21694   000190                     C1MASK0L        equ	400	;# 
 21695   000191                     C1MASK0H        equ	401	;# 
 21696   000192                     C1MASK0U        equ	402	;# 
 21697   000193                     C1MASK0T        equ	403	;# 
 21698   000194                     C1FLTOBJ1       equ	404	;# 
 21699   000194                     C1FLTOBJ1L      equ	404	;# 
 21700   000195                     C1FLTOBJ1H      equ	405	;# 
 21701   000196                     C1FLTOBJ1U      equ	406	;# 
 21702   000197                     C1FLTOBJ1T      equ	407	;# 
 21703   000198                     C1MASK1         equ	408	;# 
 21704   000198                     C1MASK1L        equ	408	;# 
 21705   000199                     C1MASK1H        equ	409	;# 
 21706   00019A                     C1MASK1U        equ	410	;# 
 21707   00019B                     C1MASK1T        equ	411	;# 
 21708   00019C                     C1FLTOBJ2       equ	412	;# 
 21709   00019C                     C1FLTOBJ2L      equ	412	;# 
 21710   00019D                     C1FLTOBJ2H      equ	413	;# 
 21711   00019E                     C1FLTOBJ2U      equ	414	;# 
 21712   00019F                     C1FLTOBJ2T      equ	415	;# 
 21713   0001A0                     C1MASK2         equ	416	;# 
 21714   0001A0                     C1MASK2L        equ	416	;# 
 21715   0001A1                     C1MASK2H        equ	417	;# 
 21716   0001A2                     C1MASK2U        equ	418	;# 
 21717   0001A3                     C1MASK2T        equ	419	;# 
 21718   0001A4                     C1FLTOBJ3       equ	420	;# 
 21719   0001A4                     C1FLTOBJ3L      equ	420	;# 
 21720   0001A5                     C1FLTOBJ3H      equ	421	;# 
 21721   0001A6                     C1FLTOBJ3U      equ	422	;# 
 21722   0001A7                     C1FLTOBJ3T      equ	423	;# 
 21723   0001A8                     C1MASK3         equ	424	;# 
 21724   0001A8                     C1MASK3L        equ	424	;# 
 21725   0001A9                     C1MASK3H        equ	425	;# 
 21726   0001AA                     C1MASK3U        equ	426	;# 
 21727   0001AB                     C1MASK3T        equ	427	;# 
 21728   0001AC                     C1FLTOBJ4       equ	428	;# 
 21729   0001AC                     C1FLTOBJ4L      equ	428	;# 
 21730   0001AD                     C1FLTOBJ4H      equ	429	;# 
 21731   0001AE                     C1FLTOBJ4U      equ	430	;# 
 21732   0001AF                     C1FLTOBJ4T      equ	431	;# 
 21733   0001B0                     C1MASK4         equ	432	;# 
 21734   0001B0                     C1MASK4L        equ	432	;# 
 21735   0001B1                     C1MASK4H        equ	433	;# 
 21736   0001B2                     C1MASK4U        equ	434	;# 
 21737   0001B3                     C1MASK4T        equ	435	;# 
 21738   0001B4                     C1FLTOBJ5       equ	436	;# 
 21739   0001B4                     C1FLTOBJ5L      equ	436	;# 
 21740   0001B5                     C1FLTOBJ5H      equ	437	;# 
 21741   0001B6                     C1FLTOBJ5U      equ	438	;# 
 21742   0001B7                     C1FLTOBJ5T      equ	439	;# 
 21743   0001B8                     C1MASK5         equ	440	;# 
 21744   0001B8                     C1MASK5L        equ	440	;# 
 21745   0001B9                     C1MASK5H        equ	441	;# 
 21746   0001BA                     C1MASK5U        equ	442	;# 
 21747   0001BB                     C1MASK5T        equ	443	;# 
 21748   0001BC                     C1FLTOBJ6       equ	444	;# 
 21749   0001BC                     C1FLTOBJ6L      equ	444	;# 
 21750   0001BD                     C1FLTOBJ6H      equ	445	;# 
 21751   0001BE                     C1FLTOBJ6U      equ	446	;# 
 21752   0001BF                     C1FLTOBJ6T      equ	447	;# 
 21753   0001C0                     C1MASK6         equ	448	;# 
 21754   0001C0                     C1MASK6L        equ	448	;# 
 21755   0001C1                     C1MASK6H        equ	449	;# 
 21756   0001C2                     C1MASK6U        equ	450	;# 
 21757   0001C3                     C1MASK6T        equ	451	;# 
 21758   0001C4                     C1FLTOBJ7       equ	452	;# 
 21759   0001C4                     C1FLTOBJ7L      equ	452	;# 
 21760   0001C5                     C1FLTOBJ7H      equ	453	;# 
 21761   0001C6                     C1FLTOBJ7U      equ	454	;# 
 21762   0001C7                     C1FLTOBJ7T      equ	455	;# 
 21763   0001C8                     C1MASK7         equ	456	;# 
 21764   0001C8                     C1MASK7L        equ	456	;# 
 21765   0001C9                     C1MASK7H        equ	457	;# 
 21766   0001CA                     C1MASK7U        equ	458	;# 
 21767   0001CB                     C1MASK7T        equ	459	;# 
 21768   0001CC                     C1FLTOBJ8       equ	460	;# 
 21769   0001CC                     C1FLTOBJ8L      equ	460	;# 
 21770   0001CD                     C1FLTOBJ8H      equ	461	;# 
 21771   0001CE                     C1FLTOBJ8U      equ	462	;# 
 21772   0001CF                     C1FLTOBJ8T      equ	463	;# 
 21773   0001D0                     C1MASK8         equ	464	;# 
 21774   0001D0                     C1MASK8L        equ	464	;# 
 21775   0001D1                     C1MASK8H        equ	465	;# 
 21776   0001D2                     C1MASK8U        equ	466	;# 
 21777   0001D3                     C1MASK8T        equ	467	;# 
 21778   0001D4                     C1FLTOBJ9       equ	468	;# 
 21779   0001D4                     C1FLTOBJ9L      equ	468	;# 
 21780   0001D5                     C1FLTOBJ9H      equ	469	;# 
 21781   0001D6                     C1FLTOBJ9U      equ	470	;# 
 21782   0001D7                     C1FLTOBJ9T      equ	471	;# 
 21783   0001D8                     C1MASK9         equ	472	;# 
 21784   0001D8                     C1MASK9L        equ	472	;# 
 21785   0001D9                     C1MASK9H        equ	473	;# 
 21786   0001DA                     C1MASK9U        equ	474	;# 
 21787   0001DB                     C1MASK9T        equ	475	;# 
 21788   0001DC                     C1FLTOBJ10      equ	476	;# 
 21789   0001DC                     C1FLTOBJ10L     equ	476	;# 
 21790   0001DD                     C1FLTOBJ10H     equ	477	;# 
 21791   0001DE                     C1FLTOBJ10U     equ	478	;# 
 21792   0001DF                     C1FLTOBJ10T     equ	479	;# 
 21793   0001E0                     C1MASK10        equ	480	;# 
 21794   0001E0                     C1MASK10L       equ	480	;# 
 21795   0001E1                     C1MASK10H       equ	481	;# 
 21796   0001E2                     C1MASK10U       equ	482	;# 
 21797   0001E3                     C1MASK10T       equ	483	;# 
 21798   0001E4                     C1FLTOBJ11      equ	484	;# 
 21799   0001E4                     C1FLTOBJ11L     equ	484	;# 
 21800   0001E5                     C1FLTOBJ11H     equ	485	;# 
 21801   0001E6                     C1FLTOBJ11U     equ	486	;# 
 21802   0001E7                     C1FLTOBJ11T     equ	487	;# 
 21803   0001E8                     C1MASK11        equ	488	;# 
 21804   0001E8                     C1MASK11L       equ	488	;# 
 21805   0001E9                     C1MASK11H       equ	489	;# 
 21806   0001EA                     C1MASK11U       equ	490	;# 
 21807   0001EB                     C1MASK11T       equ	491	;# 
 21808   000200                     PPSLOCK         equ	512	;# 
 21809   000201                     RA0PPS          equ	513	;# 
 21810   000202                     RA1PPS          equ	514	;# 
 21811   000203                     RA2PPS          equ	515	;# 
 21812   000204                     RA3PPS          equ	516	;# 
 21813   000205                     RA4PPS          equ	517	;# 
 21814   000206                     RA5PPS          equ	518	;# 
 21815   000207                     RA6PPS          equ	519	;# 
 21816   000208                     RA7PPS          equ	520	;# 
 21817   000209                     RB0PPS          equ	521	;# 
 21818   00020A                     RB1PPS          equ	522	;# 
 21819   00020B                     RB2PPS          equ	523	;# 
 21820   00020C                     RB3PPS          equ	524	;# 
 21821   00020D                     RB4PPS          equ	525	;# 
 21822   00020E                     RB5PPS          equ	526	;# 
 21823   00020F                     RB6PPS          equ	527	;# 
 21824   000210                     RB7PPS          equ	528	;# 
 21825   000211                     RC0PPS          equ	529	;# 
 21826   000212                     RC1PPS          equ	530	;# 
 21827   000213                     RC2PPS          equ	531	;# 
 21828   000214                     RC3PPS          equ	532	;# 
 21829   000215                     RC4PPS          equ	533	;# 
 21830   000216                     RC5PPS          equ	534	;# 
 21831   000217                     RC6PPS          equ	535	;# 
 21832   000218                     RC7PPS          equ	536	;# 
 21833   00023D                     CANRXPPS        equ	573	;# 
 21834   00023E                     INT0PPS         equ	574	;# 
 21835   00023F                     INT1PPS         equ	575	;# 
 21836   000240                     INT2PPS         equ	576	;# 
 21837   000241                     T0CKIPPS        equ	577	;# 
 21838   000242                     T1CKIPPS        equ	578	;# 
 21839   000243                     T1GPPS          equ	579	;# 
 21840   000244                     T3CKIPPS        equ	580	;# 
 21841   000245                     T3GPPS          equ	581	;# 
 21842   000246                     T5CKIPPS        equ	582	;# 
 21843   000247                     T5GPPS          equ	583	;# 
 21844   000248                     T2INPPS         equ	584	;# 
 21845   000249                     T4INPPS         equ	585	;# 
 21846   00024A                     T6INPPS         equ	586	;# 
 21847   00024B                     TUIN0PPS        equ	587	;# 
 21848   00024C                     TUIN1PPS        equ	588	;# 
 21849   00024F                     CCP1PPS         equ	591	;# 
 21850   000250                     CCP2PPS         equ	592	;# 
 21851   000251                     CCP3PPS         equ	593	;# 
 21852   000253                     PWM1ERSPPS      equ	595	;# 
 21853   000254                     PWM2ERSPPS      equ	596	;# 
 21854   000255                     PWM3ERSPPS      equ	597	;# 
 21855   000256                     PWM4ERSPPS      equ	598	;# 
 21856   000257                     PWMIN0PPS       equ	599	;# 
 21857   000258                     PWMIN1PPS       equ	600	;# 
 21858   000259                     SMT1WINPPS      equ	601	;# 
 21859   00025A                     SMT1SIGPPS      equ	602	;# 
 21860   00025B                     CWG1PPS         equ	603	;# 
 21861   00025B                     CWG1INPPS       equ	603	;# 
 21862   00025C                     CWG2PPS         equ	604	;# 
 21863   00025C                     CWG2INPPS       equ	604	;# 
 21864   00025D                     CWG3PPS         equ	605	;# 
 21865   00025D                     CWG3INPPS       equ	605	;# 
 21866   00025E                     MD1CARLPPS      equ	606	;# 
 21867   00025E                     MDCARLPPS       equ	606	;# 
 21868   00025F                     MD1CARHPPS      equ	607	;# 
 21869   00025F                     MDCARHPPS       equ	607	;# 
 21870   000260                     MD1SRCPPS       equ	608	;# 
 21871   000260                     MDSRCPPS        equ	608	;# 
 21872   000261                     CLCIN0PPS       equ	609	;# 
 21873   000262                     CLCIN1PPS       equ	610	;# 
 21874   000263                     CLCIN2PPS       equ	611	;# 
 21875   000264                     CLCIN3PPS       equ	612	;# 
 21876   000265                     CLCIN4PPS       equ	613	;# 
 21877   000266                     CLCIN5PPS       equ	614	;# 
 21878   000267                     CLCIN6PPS       equ	615	;# 
 21879   000268                     CLCIN7PPS       equ	616	;# 
 21880   000269                     ADACTPPS        equ	617	;# 
 21881   00026A                     SPI1SCKPPS      equ	618	;# 
 21882   00026B                     SPI1SDIPPS      equ	619	;# 
 21883   00026C                     SPI1SSPPS       equ	620	;# 
 21884   00026D                     SPI2SCKPPS      equ	621	;# 
 21885   00026E                     SPI2SDIPPS      equ	622	;# 
 21886   00026F                     SPI2SSPPS       equ	623	;# 
 21887   000270                     I2C1SDAPPS      equ	624	;# 
 21888   000271                     I2C1SCLPPS      equ	625	;# 
 21889   000272                     U1RXPPS         equ	626	;# 
 21890   000273                     U1CTSPPS        equ	627	;# 
 21891   000274                     U2RXPPS         equ	628	;# 
 21892   000275                     U2CTSPPS        equ	629	;# 
 21893   000276                     U3RXPPS         equ	630	;# 
 21894   000277                     U3CTSPPS        equ	631	;# 
 21895   000278                     U4RXPPS         equ	632	;# 
 21896   000279                     U4CTSPPS        equ	633	;# 
 21897   00027A                     U5RXPPS         equ	634	;# 
 21898   00027B                     U5CTSPPS        equ	635	;# 
 21899   000286                     RC4I2C          equ	646	;# 
 21900   000287                     RC3I2C          equ	647	;# 
 21901   000288                     RB2I2C          equ	648	;# 
 21902   000289                     RB1I2C          equ	649	;# 
 21903   00028A                     I2C1RXB         equ	650	;# 
 21904   00028B                     I2C1TXB         equ	651	;# 
 21905   00028C                     I2C1CNTL        equ	652	;# 
 21906   00028D                     I2C1CNTH        equ	653	;# 
 21907   00028E                     I2C1ADB0        equ	654	;# 
 21908   00028F                     I2C1ADB1        equ	655	;# 
 21909   000290                     I2C1ADR0        equ	656	;# 
 21910   000291                     I2C1ADR1        equ	657	;# 
 21911   000292                     I2C1ADR2        equ	658	;# 
 21912   000293                     I2C1ADR3        equ	659	;# 
 21913   000294                     I2C1CON0        equ	660	;# 
 21914   000295                     I2C1CON1        equ	661	;# 
 21915   000296                     I2C1CON2        equ	662	;# 
 21916   000297                     I2C1ERR         equ	663	;# 
 21917   000298                     I2C1STAT0       equ	664	;# 
 21918   000299                     I2C1STAT1       equ	665	;# 
 21919   00029A                     I2C1PIR         equ	666	;# 
 21920   00029B                     I2C1PIE         equ	667	;# 
 21921   00029C                     I2C1BTO         equ	668	;# 
 21922   00029D                     I2C1BAUD        equ	669	;# 
 21923   00029E                     I2C1CLK         equ	670	;# 
 21924   00029F                     I2C1BTOC        equ	671	;# 
 21925   0002A1                     U1RXB           equ	673	;# 
 21926   0002A1                     U1RXBL          equ	673	;# 
 21927   0002A2                     U1RXCHK         equ	674	;# 
 21928   0002A3                     U1TXB           equ	675	;# 
 21929   0002A3                     U1TXBL          equ	675	;# 
 21930   0002A4                     U1TXCHK         equ	676	;# 
 21931   0002A5                     U1P1            equ	677	;# 
 21932   0002A5                     U1P1L           equ	677	;# 
 21933   0002A6                     U1P1H           equ	678	;# 
 21934   0002A7                     U1P2            equ	679	;# 
 21935   0002A7                     U1P2L           equ	679	;# 
 21936   0002A8                     U1P2H           equ	680	;# 
 21937   0002A9                     U1P3            equ	681	;# 
 21938   0002A9                     U1P3L           equ	681	;# 
 21939   0002AA                     U1P3H           equ	682	;# 
 21940   0002AB                     U1CON0          equ	683	;# 
 21941   0002AC                     U1CON1          equ	684	;# 
 21942   0002AD                     U1CON2          equ	685	;# 
 21943   0002AE                     U1BRG           equ	686	;# 
 21944   0002AE                     U1BRGL          equ	686	;# 
 21945   0002AF                     U1BRGH          equ	687	;# 
 21946   0002B0                     U1FIFO          equ	688	;# 
 21947   0002B1                     U1UIR           equ	689	;# 
 21948   0002B2                     U1ERRIR         equ	690	;# 
 21949   0002B3                     U1ERRIE         equ	691	;# 
 21950   0002B4                     U2RXB           equ	692	;# 
 21951   0002B4                     U2RXBL          equ	692	;# 
 21952   0002B5                     U2RXCHK         equ	693	;# 
 21953   0002B6                     U2TXB           equ	694	;# 
 21954   0002B6                     U2TXBL          equ	694	;# 
 21955   0002B7                     U2TXCHK         equ	695	;# 
 21956   0002B8                     U2P1            equ	696	;# 
 21957   0002B8                     U2P1L           equ	696	;# 
 21958   0002B9                     U2P1H           equ	697	;# 
 21959   0002BA                     U2P2            equ	698	;# 
 21960   0002BA                     U2P2L           equ	698	;# 
 21961   0002BB                     U2P2H           equ	699	;# 
 21962   0002BC                     U2P3            equ	700	;# 
 21963   0002BC                     U2P3L           equ	700	;# 
 21964   0002BD                     U2P3H           equ	701	;# 
 21965   0002BE                     U2CON0          equ	702	;# 
 21966   0002BF                     U2CON1          equ	703	;# 
 21967   0002C0                     U2CON2          equ	704	;# 
 21968   0002C1                     U2BRG           equ	705	;# 
 21969   0002C1                     U2BRGL          equ	705	;# 
 21970   0002C2                     U2BRGH          equ	706	;# 
 21971   0002C3                     U2FIFO          equ	707	;# 
 21972   0002C4                     U2UIR           equ	708	;# 
 21973   0002C5                     U2ERRIR         equ	709	;# 
 21974   0002C6                     U2ERRIE         equ	710	;# 
 21975   0002C7                     U3RXB           equ	711	;# 
 21976   0002C7                     U3RXBL          equ	711	;# 
 21977   0002C9                     U3TXB           equ	713	;# 
 21978   0002C9                     U3TXBL          equ	713	;# 
 21979   0002CB                     U3P1            equ	715	;# 
 21980   0002CB                     U3P1L           equ	715	;# 
 21981   0002CD                     U3P2            equ	717	;# 
 21982   0002CD                     U3P2L           equ	717	;# 
 21983   0002CF                     U3P3            equ	719	;# 
 21984   0002CF                     U3P3L           equ	719	;# 
 21985   0002D1                     U3CON0          equ	721	;# 
 21986   0002D2                     U3CON1          equ	722	;# 
 21987   0002D3                     U3CON2          equ	723	;# 
 21988   0002D4                     U3BRG           equ	724	;# 
 21989   0002D4                     U3BRGL          equ	724	;# 
 21990   0002D5                     U3BRGH          equ	725	;# 
 21991   0002D6                     U3FIFO          equ	726	;# 
 21992   0002D7                     U3UIR           equ	727	;# 
 21993   0002D8                     U3ERRIR         equ	728	;# 
 21994   0002D9                     U3ERRIE         equ	729	;# 
 21995   0002DA                     U4RXB           equ	730	;# 
 21996   0002DA                     U4RXBL          equ	730	;# 
 21997   0002DC                     U4TXB           equ	732	;# 
 21998   0002DC                     U4TXBL          equ	732	;# 
 21999   0002DE                     U4P1            equ	734	;# 
 22000   0002DE                     U4P1L           equ	734	;# 
 22001   0002E0                     U4P2            equ	736	;# 
 22002   0002E0                     U4P2L           equ	736	;# 
 22003   0002E2                     U4P3            equ	738	;# 
 22004   0002E2                     U4P3L           equ	738	;# 
 22005   0002E4                     U4CON0          equ	740	;# 
 22006   0002E5                     U4CON1          equ	741	;# 
 22007   0002E6                     U4CON2          equ	742	;# 
 22008   0002E7                     U4BRG           equ	743	;# 
 22009   0002E7                     U4BRGL          equ	743	;# 
 22010   0002E8                     U4BRGH          equ	744	;# 
 22011   0002E9                     U4FIFO          equ	745	;# 
 22012   0002EA                     U4UIR           equ	746	;# 
 22013   0002EB                     U4ERRIR         equ	747	;# 
 22014   0002EC                     U4ERRIE         equ	748	;# 
 22015   0002ED                     U5RXB           equ	749	;# 
 22016   0002ED                     U5RXBL          equ	749	;# 
 22017   0002EF                     U5TXB           equ	751	;# 
 22018   0002EF                     U5TXBL          equ	751	;# 
 22019   0002F1                     U5P1            equ	753	;# 
 22020   0002F1                     U5P1L           equ	753	;# 
 22021   0002F3                     U5P2            equ	755	;# 
 22022   0002F3                     U5P2L           equ	755	;# 
 22023   0002F5                     U5P3            equ	757	;# 
 22024   0002F5                     U5P3L           equ	757	;# 
 22025   0002F7                     U5CON0          equ	759	;# 
 22026   0002F8                     U5CON1          equ	760	;# 
 22027   0002F9                     U5CON2          equ	761	;# 
 22028   0002FA                     U5BRG           equ	762	;# 
 22029   0002FA                     U5BRGL          equ	762	;# 
 22030   0002FB                     U5BRGH          equ	763	;# 
 22031   0002FC                     U5FIFO          equ	764	;# 
 22032   0002FD                     U5UIR           equ	765	;# 
 22033   0002FE                     U5ERRIR         equ	766	;# 
 22034   0002FF                     U5ERRIE         equ	767	;# 
 22035   000300                     SMT1TMR         equ	768	;# 
 22036   000300                     SMT1TMRL        equ	768	;# 
 22037   000301                     SMT1TMRH        equ	769	;# 
 22038   000302                     SMT1TMRU        equ	770	;# 
 22039   000303                     SMT1CPR         equ	771	;# 
 22040   000303                     SMT1CPRL        equ	771	;# 
 22041   000304                     SMT1CPRH        equ	772	;# 
 22042   000305                     SMT1CPRU        equ	773	;# 
 22043   000306                     SMT1CPW         equ	774	;# 
 22044   000306                     SMT1CPWL        equ	774	;# 
 22045   000307                     SMT1CPWH        equ	775	;# 
 22046   000308                     SMT1CPWU        equ	776	;# 
 22047   000309                     SMT1PR          equ	777	;# 
 22048   000309                     SMT1PRL         equ	777	;# 
 22049   00030A                     SMT1PRH         equ	778	;# 
 22050   00030B                     SMT1PRU         equ	779	;# 
 22051   00030C                     SMT1CON0        equ	780	;# 
 22052   00030D                     SMT1CON1        equ	781	;# 
 22053   00030E                     SMT1STAT        equ	782	;# 
 22054   00030F                     SMT1CLK         equ	783	;# 
 22055   000310                     SMT1SIG         equ	784	;# 
 22056   000311                     SMT1WIN         equ	785	;# 
 22057   000318                     TMR0L           equ	792	;# 
 22058   000318                     TMR0            equ	792	;# 
 22059   000319                     TMR0H           equ	793	;# 
 22060   000319                     PR0             equ	793	;# 
 22061   00031A                     T0CON0          equ	794	;# 
 22062   00031B                     T0CON1          equ	795	;# 
 22063   00031C                     TMR1            equ	796	;# 
 22064   00031C                     TMR1L           equ	796	;# 
 22065   00031D                     TMR1H           equ	797	;# 
 22066   00031E                     T1CON           equ	798	;# 
 22067   00031E                     TMR1CON         equ	798	;# 
 22068   00031F                     T1GCON          equ	799	;# 
 22069   00031F                     TMR1GCON        equ	799	;# 
 22070   000320                     T1GATE          equ	800	;# 
 22071   000320                     TMR1GATE        equ	800	;# 
 22072   000321                     T1CLK           equ	801	;# 
 22073   000321                     TMR1CLK         equ	801	;# 
 22074   000321                     PR1             equ	801	;# 
 22075   000322                     T2TMR           equ	802	;# 
 22076   000322                     TMR2            equ	802	;# 
 22077   000323                     T2PR            equ	803	;# 
 22078   000323                     PR2             equ	803	;# 
 22079   000324                     T2CON           equ	804	;# 
 22080   000325                     T2HLT           equ	805	;# 
 22081   000326                     T2CLKCON        equ	806	;# 
 22082   000326                     T2CLK           equ	806	;# 
 22083   000327                     T2RST           equ	807	;# 
 22084   000328                     TMR3            equ	808	;# 
 22085   000328                     TMR3L           equ	808	;# 
 22086   000329                     TMR3H           equ	809	;# 
 22087   00032A                     T3CON           equ	810	;# 
 22088   00032A                     TMR3CON         equ	810	;# 
 22089   00032B                     T3GCON          equ	811	;# 
 22090   00032B                     TMR3GCON        equ	811	;# 
 22091   00032C                     T3GATE          equ	812	;# 
 22092   00032C                     TMR3GATE        equ	812	;# 
 22093   00032D                     T3CLK           equ	813	;# 
 22094   00032D                     TMR3CLK         equ	813	;# 
 22095   00032D                     PR3             equ	813	;# 
 22096   00032E                     T4TMR           equ	814	;# 
 22097   00032E                     TMR4            equ	814	;# 
 22098   00032F                     T4PR            equ	815	;# 
 22099   00032F                     PR4             equ	815	;# 
 22100   000330                     T4CON           equ	816	;# 
 22101   000331                     T4HLT           equ	817	;# 
 22102   000332                     T4CLKCON        equ	818	;# 
 22103   000332                     T4CLK           equ	818	;# 
 22104   000333                     T4RST           equ	819	;# 
 22105   000334                     TMR5            equ	820	;# 
 22106   000334                     TMR5L           equ	820	;# 
 22107   000335                     TMR5H           equ	821	;# 
 22108   000336                     T5CON           equ	822	;# 
 22109   000336                     TMR5CON         equ	822	;# 
 22110   000337                     T5GCON          equ	823	;# 
 22111   000337                     TMR5GCON        equ	823	;# 
 22112   000338                     T5GATE          equ	824	;# 
 22113   000338                     TMR5GATE        equ	824	;# 
 22114   000339                     T5CLK           equ	825	;# 
 22115   000339                     TMR5CLK         equ	825	;# 
 22116   000339                     PR5             equ	825	;# 
 22117   00033A                     T6TMR           equ	826	;# 
 22118   00033A                     TMR6            equ	826	;# 
 22119   00033B                     T6PR            equ	827	;# 
 22120   00033B                     PR6             equ	827	;# 
 22121   00033C                     T6CON           equ	828	;# 
 22122   00033D                     T6HLT           equ	829	;# 
 22123   00033E                     T6CLKCON        equ	830	;# 
 22124   00033E                     T6CLK           equ	830	;# 
 22125   00033F                     T6RST           equ	831	;# 
 22126   000340                     CCPR1           equ	832	;# 
 22127   000340                     CCPR1L          equ	832	;# 
 22128   000341                     CCPR1H          equ	833	;# 
 22129   000342                     CCP1CON         equ	834	;# 
 22130   000343                     CCP1CAP         equ	835	;# 
 22131   000344                     CCPR2           equ	836	;# 
 22132   000344                     CCPR2L          equ	836	;# 
 22133   000345                     CCPR2H          equ	837	;# 
 22134   000346                     CCP2CON         equ	838	;# 
 22135   000347                     CCP2CAP         equ	839	;# 
 22136   000348                     CCPR3           equ	840	;# 
 22137   000348                     CCPR3L          equ	840	;# 
 22138   000349                     CCPR3H          equ	841	;# 
 22139   00034A                     CCP3CON         equ	842	;# 
 22140   00034B                     CCP3CAP         equ	843	;# 
 22141   00034C                     CCPTMRS0        equ	844	;# 
 22142   00034F                     CRCDATA         equ	847	;# 
 22143   00034F                     CRCDATAL        equ	847	;# 
 22144   000350                     CRCDATAH        equ	848	;# 
 22145   000351                     CRCDATAU        equ	849	;# 
 22146   000352                     CRCDATAT        equ	850	;# 
 22147   000353                     CRCOUT          equ	851	;# 
 22148   000353                     CRCSHFT         equ	851	;# 
 22149   000353                     CRCXOR          equ	851	;# 
 22150   000353                     CRCOUTL         equ	851	;# 
 22151   000353                     CRCSHFTL        equ	851	;# 
 22152   000353                     CRCSHIFTL       equ	851	;# 
 22153   000353                     CRCXORL         equ	851	;# 
 22154   000354                     CRCOUTH         equ	852	;# 
 22155   000354                     CRCSHFTH        equ	852	;# 
 22156   000354                     CRCSHIFTH       equ	852	;# 
 22157   000354                     CRCXORH         equ	852	;# 
 22158   000355                     CRCOUTU         equ	853	;# 
 22159   000355                     CRCSHFTU        equ	853	;# 
 22160   000355                     CRCSHIFTU       equ	853	;# 
 22161   000355                     CRCXORU         equ	853	;# 
 22162   000356                     CRCOUTT         equ	854	;# 
 22163   000356                     CRCSHFTT        equ	854	;# 
 22164   000356                     CRCSHIFTT       equ	854	;# 
 22165   000356                     CRCXORT         equ	854	;# 
 22166   000357                     CRCCON0         equ	855	;# 
 22167   000358                     CRCCON1         equ	856	;# 
 22168   000359                     CRCCON2         equ	857	;# 
 22169   00035A                     SCANLADR        equ	858	;# 
 22170   00035A                     SCANLADRL       equ	858	;# 
 22171   00035B                     SCANLADRH       equ	859	;# 
 22172   00035C                     SCANLADRU       equ	860	;# 
 22173   00035D                     SCANHADR        equ	861	;# 
 22174   00035D                     SCANHADRL       equ	861	;# 
 22175   00035E                     SCANHADRH       equ	862	;# 
 22176   00035F                     SCANHADRU       equ	863	;# 
 22177   000360                     SCANCON0        equ	864	;# 
 22178   000361                     SCANTRIG        equ	865	;# 
 22179   000362                     IPR0            equ	866	;# 
 22180   000363                     IPR1            equ	867	;# 
 22181   000364                     IPR2            equ	868	;# 
 22182   000365                     IPR3            equ	869	;# 
 22183   000366                     IPR4            equ	870	;# 
 22184   000367                     IPR5            equ	871	;# 
 22185   000368                     IPR6            equ	872	;# 
 22186   000369                     IPR7            equ	873	;# 
 22187   00036A                     IPR8            equ	874	;# 
 22188   00036B                     IPR9            equ	875	;# 
 22189   00036C                     IPR10           equ	876	;# 
 22190   00036D                     IPR11           equ	877	;# 
 22191   00036E                     IPR12           equ	878	;# 
 22192   00036F                     IPR13           equ	879	;# 
 22193   000370                     IPR14           equ	880	;# 
 22194   000371                     IPR15           equ	881	;# 
 22195   000373                     STATUS_CSHAD    equ	883	;# 
 22196   000374                     WREG_CSHAD      equ	884	;# 
 22197   000375                     BSR_CSHAD       equ	885	;# 
 22198   000376                     SHADCON         equ	886	;# 
 22199   000377                     STATUS_SHAD     equ	887	;# 
 22200   000378                     WREG_SHAD       equ	888	;# 
 22201   000379                     BSR_SHAD        equ	889	;# 
 22202   00037A                     PCLATH_SHAD     equ	890	;# 
 22203   00037B                     PCLATU_SHAD     equ	891	;# 
 22204   00037C                     FSR0SH          equ	892	;# 
 22205   00037C                     FSR0L_SHAD      equ	892	;# 
 22206   00037D                     FSR0H_SHAD      equ	893	;# 
 22207   00037E                     FSR1SH          equ	894	;# 
 22208   00037E                     FSR1L_SHAD      equ	894	;# 
 22209   00037F                     FSR1H_SHAD      equ	895	;# 
 22210   000380                     FSR2SH          equ	896	;# 
 22211   000380                     FSR2L_SHAD      equ	896	;# 
 22212   000381                     FSR2H_SHAD      equ	897	;# 
 22213   000382                     PRODSH          equ	898	;# 
 22214   000382                     PRODL_SHAD      equ	898	;# 
 22215   000383                     PRODH_SHAD      equ	899	;# 
 22216   000387                     TU16ACON0       equ	903	;# 
 22217   000388                     TU16ACON1       equ	904	;# 
 22218   000389                     TU16AHLT        equ	905	;# 
 22219   00038A                     TU16APS         equ	906	;# 
 22220   00038B                     TU16ATMR        equ	907	;# 
 22221   00038B                     TU16ACR         equ	907	;# 
 22222   00038B                     TU16ATMRL       equ	907	;# 
 22223   00038B                     TU16ACRL        equ	907	;# 
 22224   00038C                     TU16ATMRH       equ	908	;# 
 22225   00038C                     TU16ACRH        equ	908	;# 
 22226   00038D                     TU16APR         equ	909	;# 
 22227   00038D                     TU16APRL        equ	909	;# 
 22228   00038E                     TU16APRH        equ	910	;# 
 22229   00038F                     TU16ACLK        equ	911	;# 
 22230   000390                     TU16AERS        equ	912	;# 
 22231   000393                     TU16BCON0       equ	915	;# 
 22232   000394                     TU16BCON1       equ	916	;# 
 22233   000395                     TU16BHLT        equ	917	;# 
 22234   000396                     TU16BPS         equ	918	;# 
 22235   000397                     TU16BTMR        equ	919	;# 
 22236   000397                     TU16BCR         equ	919	;# 
 22237   000397                     TU16BTMRL       equ	919	;# 
 22238   000397                     TU16BCRL        equ	919	;# 
 22239   000398                     TU16BTMRH       equ	920	;# 
 22240   000398                     TU16BCRH        equ	920	;# 
 22241   000399                     TU16BPR         equ	921	;# 
 22242   000399                     TU16BPRL        equ	921	;# 
 22243   00039A                     TU16BPRH        equ	922	;# 
 22244   00039B                     TU16BCLK        equ	923	;# 
 22245   00039C                     TU16BERS        equ	924	;# 
 22246   0003BB                     TUCHAIN         equ	955	;# 
 22247   0003BC                     CWG1CLK         equ	956	;# 
 22248   0003BC                     CWG1CLKCON      equ	956	;# 
 22249   0003BD                     CWG1ISM         equ	957	;# 
 22250   0003BE                     CWG1DBR         equ	958	;# 
 22251   0003BF                     CWG1DBF         equ	959	;# 
 22252   0003C0                     CWG1CON0        equ	960	;# 
 22253   0003C1                     CWG1CON1        equ	961	;# 
 22254   0003C2                     CWG1AS0         equ	962	;# 
 22255   0003C3                     CWG1AS1         equ	963	;# 
 22256   0003C4                     CWG1STR         equ	964	;# 
 22257   0003C5                     CWG2CLK         equ	965	;# 
 22258   0003C5                     CWG2CLKCON      equ	965	;# 
 22259   0003C6                     CWG2ISM         equ	966	;# 
 22260   0003C7                     CWG2DBR         equ	967	;# 
 22261   0003C8                     CWG2DBF         equ	968	;# 
 22262   0003C9                     CWG2CON0        equ	969	;# 
 22263   0003CA                     CWG2CON1        equ	970	;# 
 22264   0003CB                     CWG2AS0         equ	971	;# 
 22265   0003CC                     CWG2AS1         equ	972	;# 
 22266   0003CD                     CWG2STR         equ	973	;# 
 22267   0003CE                     CWG3CLK         equ	974	;# 
 22268   0003CE                     CWG3CLKCON      equ	974	;# 
 22269   0003CF                     CWG3ISM         equ	975	;# 
 22270   0003D0                     CWG3DBR         equ	976	;# 
 22271   0003D1                     CWG3DBF         equ	977	;# 
 22272   0003D2                     CWG3CON0        equ	978	;# 
 22273   0003D3                     CWG3CON1        equ	979	;# 
 22274   0003D4                     CWG3AS0         equ	980	;# 
 22275   0003D5                     CWG3AS1         equ	981	;# 
 22276   0003D6                     CWG3STR         equ	982	;# 
 22277   0003D7                     FVRCON          equ	983	;# 
 22278   0003D8                     ADCPCON         equ	984	;# 
 22279   0003D8                     ADCP            equ	984	;# 
 22280   0003D9                     ADLTH           equ	985	;# 
 22281   0003D9                     ADLTHL          equ	985	;# 
 22282   0003DA                     ADLTHH          equ	986	;# 
 22283   0003DB                     ADUTH           equ	987	;# 
 22284   0003DB                     ADUTHL          equ	987	;# 
 22285   0003DC                     ADUTHH          equ	988	;# 
 22286   0003DD                     ADERR           equ	989	;# 
 22287   0003DD                     ADERRL          equ	989	;# 
 22288   0003DE                     ADERRH          equ	990	;# 
 22289   0003DF                     ADSTPT          equ	991	;# 
 22290   0003DF                     ADSTPTL         equ	991	;# 
 22291   0003E0                     ADSTPTH         equ	992	;# 
 22292   0003E1                     ADFLTR          equ	993	;# 
 22293   0003E1                     ADFLTRL         equ	993	;# 
 22294   0003E2                     ADFLTRH         equ	994	;# 
 22295   0003E3                     ADACC           equ	995	;# 
 22296   0003E3                     ADACCL          equ	995	;# 
 22297   0003E4                     ADACCH          equ	996	;# 
 22298   0003E5                     ADACCU          equ	997	;# 
 22299   0003E6                     ADCNT           equ	998	;# 
 22300   0003E7                     ADRPT           equ	999	;# 
 22301   0003E8                     ADPREV          equ	1000	;# 
 22302   0003E8                     ADPREVL         equ	1000	;# 
 22303   0003E9                     ADPREVH         equ	1001	;# 
 22304   0003EA                     ADRES           equ	1002	;# 
 22305   0003EA                     ADRESL          equ	1002	;# 
 22306   0003EB                     ADRESH          equ	1003	;# 
 22307   0003EC                     ADPCH           equ	1004	;# 
 22308   0003EE                     ADACQ           equ	1006	;# 
 22309   0003EE                     ADACQL          equ	1006	;# 
 22310   0003EF                     ADACQH          equ	1007	;# 
 22311   0003F0                     ADCAP           equ	1008	;# 
 22312   0003F1                     ADPRE           equ	1009	;# 
 22313   0003F1                     ADPREL          equ	1009	;# 
 22314   0003F2                     ADPREH          equ	1010	;# 
 22315   0003F3                     ADCON0          equ	1011	;# 
 22316   0003F4                     ADCON1          equ	1012	;# 
 22317   0003F5                     ADCON2          equ	1013	;# 
 22318   0003F6                     ADCON3          equ	1014	;# 
 22319   0003F7                     ADSTAT          equ	1015	;# 
 22320   0003F8                     ADREF           equ	1016	;# 
 22321   0003F9                     ADACT           equ	1017	;# 
 22322   0003FA                     ADCLK           equ	1018	;# 
 22323   0003FB                     ADCTX           equ	1019	;# 
 22324   0003FC                     ADCSEL1         equ	1020	;# 
 22325   0003FD                     ADCSEL2         equ	1021	;# 
 22326   0003FE                     ADCSEL3         equ	1022	;# 
 22327   0003FF                     ADCSEL4         equ	1023	;# 
 22328   000400                     ANSELA          equ	1024	;# 
 22329   000401                     WPUA            equ	1025	;# 
 22330   000402                     ODCONA          equ	1026	;# 
 22331   000403                     SLRCONA         equ	1027	;# 
 22332   000404                     INLVLA          equ	1028	;# 
 22333   000405                     IOCAP           equ	1029	;# 
 22334   000406                     IOCAN           equ	1030	;# 
 22335   000407                     IOCAF           equ	1031	;# 
 22336   000408                     ANSELB          equ	1032	;# 
 22337   000409                     WPUB            equ	1033	;# 
 22338   00040A                     ODCONB          equ	1034	;# 
 22339   00040B                     SLRCONB         equ	1035	;# 
 22340   00040C                     INLVLB          equ	1036	;# 
 22341   00040D                     IOCBP           equ	1037	;# 
 22342   00040E                     IOCBN           equ	1038	;# 
 22343   00040F                     IOCBF           equ	1039	;# 
 22344   000410                     ANSELC          equ	1040	;# 
 22345   000411                     WPUC            equ	1041	;# 
 22346   000412                     ODCONC          equ	1042	;# 
 22347   000413                     SLRCONC         equ	1043	;# 
 22348   000414                     INLVLC          equ	1044	;# 
 22349   000415                     IOCCP           equ	1045	;# 
 22350   000416                     IOCCN           equ	1046	;# 
 22351   000417                     IOCCF           equ	1047	;# 
 22352   000421                     WPUE            equ	1057	;# 
 22353   000424                     INLVLE          equ	1060	;# 
 22354   000425                     IOCEP           equ	1061	;# 
 22355   000426                     IOCEN           equ	1062	;# 
 22356   000427                     IOCEF           equ	1063	;# 
 22357   000440                     NCO1ACC         equ	1088	;# 
 22358   000440                     NCO1ACCL        equ	1088	;# 
 22359   000441                     NCO1ACCH        equ	1089	;# 
 22360   000442                     NCO1ACCU        equ	1090	;# 
 22361   000443                     NCO1INC         equ	1091	;# 
 22362   000443                     NCO1INCL        equ	1091	;# 
 22363   000444                     NCO1INCH        equ	1092	;# 
 22364   000445                     NCO1INCU        equ	1093	;# 
 22365   000446                     NCO1CON         equ	1094	;# 
 22366   000447                     NCO1CLK         equ	1095	;# 
 22367   000448                     NCO2ACC         equ	1096	;# 
 22368   000448                     NCO2ACCL        equ	1096	;# 
 22369   000449                     NCO2ACCH        equ	1097	;# 
 22370   00044A                     NCO2ACCU        equ	1098	;# 
 22371   00044B                     NCO2INC         equ	1099	;# 
 22372   00044B                     NCO2INCL        equ	1099	;# 
 22373   00044C                     NCO2INCH        equ	1100	;# 
 22374   00044D                     NCO2INCU        equ	1101	;# 
 22375   00044E                     NCO2CON         equ	1102	;# 
 22376   00044F                     NCO2CLK         equ	1103	;# 
 22377   000450                     NCO3ACC         equ	1104	;# 
 22378   000450                     NCO3ACCL        equ	1104	;# 
 22379   000451                     NCO3ACCH        equ	1105	;# 
 22380   000452                     NCO3ACCU        equ	1106	;# 
 22381   000453                     NCO3INC         equ	1107	;# 
 22382   000453                     NCO3INCL        equ	1107	;# 
 22383   000454                     NCO3INCH        equ	1108	;# 
 22384   000455                     NCO3INCU        equ	1109	;# 
 22385   000456                     NCO3CON         equ	1110	;# 
 22386   000457                     NCO3CLK         equ	1111	;# 
 22387   000458                     FSCMCON         equ	1112	;# 
 22388   000459                     IVTLOCK         equ	1113	;# 
 22389   00045A                     IVTAD           equ	1114	;# 
 22390   00045A                     IVTADL          equ	1114	;# 
 22391   00045B                     IVTADH          equ	1115	;# 
 22392   00045C                     IVTADU          equ	1116	;# 
 22393   00045D                     IVTBASE         equ	1117	;# 
 22394   00045D                     IVTBASEL        equ	1117	;# 
 22395   00045E                     IVTBASEH        equ	1118	;# 
 22396   00045F                     IVTBASEU        equ	1119	;# 
 22397   000460                     PWM1ERS         equ	1120	;# 
 22398   000461                     PWM1CLK         equ	1121	;# 
 22399   000462                     PWM1LDS         equ	1122	;# 
 22400   000463                     PWM1PR          equ	1123	;# 
 22401   000463                     PWM1PRL         equ	1123	;# 
 22402   000464                     PWM1PRH         equ	1124	;# 
 22403   000465                     PWM1CPRE        equ	1125	;# 
 22404   000466                     PWM1PIPOS       equ	1126	;# 
 22405   000467                     PWM1GIR         equ	1127	;# 
 22406   000468                     PWM1GIE         equ	1128	;# 
 22407   000469                     PWM1CON         equ	1129	;# 
 22408   00046A                     PWM1S1CFG       equ	1130	;# 
 22409   00046B                     PWM1S1P1        equ	1131	;# 
 22410   00046B                     PWM1S1P1L       equ	1131	;# 
 22411   00046C                     PWM1S1P1H       equ	1132	;# 
 22412   00046D                     PWM1S1P2        equ	1133	;# 
 22413   00046D                     PWM1S1P2L       equ	1133	;# 
 22414   00046E                     PWM1S1P2H       equ	1134	;# 
 22415   00046F                     PWM2ERS         equ	1135	;# 
 22416   000470                     PWM2CLK         equ	1136	;# 
 22417   000471                     PWM2LDS         equ	1137	;# 
 22418   000472                     PWM2PR          equ	1138	;# 
 22419   000472                     PWM2PRL         equ	1138	;# 
 22420   000473                     PWM2PRH         equ	1139	;# 
 22421   000474                     PWM2CPRE        equ	1140	;# 
 22422   000475                     PWM2PIPOS       equ	1141	;# 
 22423   000476                     PWM2GIR         equ	1142	;# 
 22424   000477                     PWM2GIE         equ	1143	;# 
 22425   000478                     PWM2CON         equ	1144	;# 
 22426   000479                     PWM2S1CFG       equ	1145	;# 
 22427   00047A                     PWM2S1P1        equ	1146	;# 
 22428   00047A                     PWM2S1P1L       equ	1146	;# 
 22429   00047B                     PWM2S1P1H       equ	1147	;# 
 22430   00047C                     PWM2S1P2        equ	1148	;# 
 22431   00047C                     PWM2S1P2L       equ	1148	;# 
 22432   00047D                     PWM2S1P2H       equ	1149	;# 
 22433   00047E                     PWM3ERS         equ	1150	;# 
 22434   00047F                     PWM3CLK         equ	1151	;# 
 22435   000480                     PWM3LDS         equ	1152	;# 
 22436   000481                     PWM3PR          equ	1153	;# 
 22437   000481                     PWM3PRL         equ	1153	;# 
 22438   000482                     PWM3PRH         equ	1154	;# 
 22439   000483                     PWM3CPRE        equ	1155	;# 
 22440   000484                     PWM3PIPOS       equ	1156	;# 
 22441   000485                     PWM3GIR         equ	1157	;# 
 22442   000486                     PWM3GIE         equ	1158	;# 
 22443   000487                     PWM3CON         equ	1159	;# 
 22444   000488                     PWM3S1CFG       equ	1160	;# 
 22445   000489                     PWM3S1P1        equ	1161	;# 
 22446   000489                     PWM3S1P1L       equ	1161	;# 
 22447   00048A                     PWM3S1P1H       equ	1162	;# 
 22448   00048B                     PWM3S1P2        equ	1163	;# 
 22449   00048B                     PWM3S1P2L       equ	1163	;# 
 22450   00048C                     PWM3S1P2H       equ	1164	;# 
 22451   00048D                     PWM4ERS         equ	1165	;# 
 22452   00048E                     PWM4CLK         equ	1166	;# 
 22453   00048F                     PWM4LDS         equ	1167	;# 
 22454   000490                     PWM4PR          equ	1168	;# 
 22455   000490                     PWM4PRL         equ	1168	;# 
 22456   000491                     PWM4PRH         equ	1169	;# 
 22457   000492                     PWM4CPRE        equ	1170	;# 
 22458   000493                     PWM4PIPOS       equ	1171	;# 
 22459   000494                     PWM4GIR         equ	1172	;# 
 22460   000495                     PWM4GIE         equ	1173	;# 
 22461   000496                     PWM4CON         equ	1174	;# 
 22462   000497                     PWM4S1CFG       equ	1175	;# 
 22463   000498                     PWM4S1P1        equ	1176	;# 
 22464   000498                     PWM4S1P1L       equ	1176	;# 
 22465   000499                     PWM4S1P1H       equ	1177	;# 
 22466   00049A                     PWM4S1P2        equ	1178	;# 
 22467   00049A                     PWM4S1P2L       equ	1178	;# 
 22468   00049B                     PWM4S1P2H       equ	1179	;# 
 22469   00049C                     PWMLOAD         equ	1180	;# 
 22470   00049D                     PWMEN           equ	1181	;# 
 22471   00049E                     PIE0            equ	1182	;# 
 22472   00049F                     PIE1            equ	1183	;# 
 22473   0004A0                     PIE2            equ	1184	;# 
 22474   0004A1                     PIE3            equ	1185	;# 
 22475   0004A2                     PIE4            equ	1186	;# 
 22476   0004A3                     PIE5            equ	1187	;# 
 22477   0004A4                     PIE6            equ	1188	;# 
 22478   0004A5                     PIE7            equ	1189	;# 
 22479   0004A6                     PIE8            equ	1190	;# 
 22480   0004A7                     PIE9            equ	1191	;# 
 22481   0004A8                     PIE10           equ	1192	;# 
 22482   0004A9                     PIE11           equ	1193	;# 
 22483   0004AA                     PIE12           equ	1194	;# 
 22484   0004AB                     PIE13           equ	1195	;# 
 22485   0004AC                     PIE14           equ	1196	;# 
 22486   0004AD                     PIE15           equ	1197	;# 
 22487   0004AE                     PIR0            equ	1198	;# 
 22488   0004AF                     PIR1            equ	1199	;# 
 22489   0004B0                     PIR2            equ	1200	;# 
 22490   0004B1                     PIR3            equ	1201	;# 
 22491   0004B2                     PIR4            equ	1202	;# 
 22492   0004B3                     PIR5            equ	1203	;# 
 22493   0004B4                     PIR6            equ	1204	;# 
 22494   0004B5                     PIR7            equ	1205	;# 
 22495   0004B6                     PIR8            equ	1206	;# 
 22496   0004B7                     PIR9            equ	1207	;# 
 22497   0004B8                     PIR10           equ	1208	;# 
 22498   0004B9                     PIR11           equ	1209	;# 
 22499   0004BA                     PIR12           equ	1210	;# 
 22500   0004BB                     PIR13           equ	1211	;# 
 22501   0004BC                     PIR14           equ	1212	;# 
 22502   0004BD                     PIR15           equ	1213	;# 
 22503   0004BE                     LATA            equ	1214	;# 
 22504   0004BF                     LATB            equ	1215	;# 
 22505   0004C0                     LATC            equ	1216	;# 
 22506   0004C6                     TRISA           equ	1222	;# 
 22507   0004C7                     TRISB           equ	1223	;# 
 22508   0004C8                     TRISC           equ	1224	;# 
 22509   0004CA                     TRISE           equ	1226	;# 
 22510   0004CE                     PORTA           equ	1230	;# 
 22511   0004CF                     PORTB           equ	1231	;# 
 22512   0004D0                     PORTC           equ	1232	;# 
 22513   0004D2                     PORTE           equ	1234	;# 
 22514   0004D6                     INTCON0         equ	1238	;# 
 22515   0004D7                     INTCON1         equ	1239	;# 
 22516   0004D8                     STATUS          equ	1240	;# 
 22517   0004D9                     FSR2            equ	1241	;# 
 22518   0004D9                     FSR2L           equ	1241	;# 
 22519   0004DA                     FSR2H           equ	1242	;# 
 22520   0004DB                     PLUSW2          equ	1243	;# 
 22521   0004DC                     PREINC2         equ	1244	;# 
 22522   0004DD                     POSTDEC2        equ	1245	;# 
 22523   0004DE                     POSTINC2        equ	1246	;# 
 22524   0004DF                     INDF2           equ	1247	;# 
 22525   0004E0                     BSR             equ	1248	;# 
 22526   0004E1                     FSR1            equ	1249	;# 
 22527   0004E1                     FSR1L           equ	1249	;# 
 22528   0004E2                     FSR1H           equ	1250	;# 
 22529   0004E3                     PLUSW1          equ	1251	;# 
 22530   0004E4                     PREINC1         equ	1252	;# 
 22531   0004E5                     POSTDEC1        equ	1253	;# 
 22532   0004E6                     POSTINC1        equ	1254	;# 
 22533   0004E7                     INDF1           equ	1255	;# 
 22534   0004E8                     WREG            equ	1256	;# 
 22535   0004E9                     FSR0            equ	1257	;# 
 22536   0004E9                     FSR0L           equ	1257	;# 
 22537   0004EA                     FSR0H           equ	1258	;# 
 22538   0004EB                     PLUSW0          equ	1259	;# 
 22539   0004EC                     PREINC0         equ	1260	;# 
 22540   0004ED                     POSTDEC0        equ	1261	;# 
 22541   0004EE                     POSTINC0        equ	1262	;# 
 22542   0004EF                     INDF0           equ	1263	;# 
 22543   0004F0                     PCON0           equ	1264	;# 
 22544   0004F1                     PCON1           equ	1265	;# 
 22545   0004F2                     CPUDOZE         equ	1266	;# 
 22546   0004F3                     PROD            equ	1267	;# 
 22547   0004F3                     PRODL           equ	1267	;# 
 22548   0004F4                     PRODH           equ	1268	;# 
 22549   0004F5                     TABLAT          equ	1269	;# 
 22550   0004F6                     TBLPTR          equ	1270	;# 
 22551   0004F6                     TBLPTRL         equ	1270	;# 
 22552   0004F7                     TBLPTRH         equ	1271	;# 
 22553   0004F8                     TBLPTRU         equ	1272	;# 
 22554   0004F9                     PCLAT           equ	1273	;# 
 22555   0004F9                     PCL             equ	1273	;# 
 22556   0004FA                     PCLATH          equ	1274	;# 
 22557   0004FB                     PCLATU          equ	1275	;# 
 22558   0004FC                     STKPTR          equ	1276	;# 
 22559   0004FD                     TOS             equ	1277	;# 
 22560   0004FD                     TOSL            equ	1277	;# 
 22561   0004FE                     TOSH            equ	1278	;# 
 22562   0004FF                     TOSU            equ	1279	;# 
 22563   3803FA                     	org	1018	;# 
 22564   3803FA  FF                 	db	255	;# 
 22565   000038                     BOOTREG         equ	56	;# 
 22566   000039                     CLKRCON         equ	57	;# 
 22567   00003A                     CLKRCLK         equ	58	;# 
 22568   000040                     NVMCON0         equ	64	;# 
 22569   000041                     NVMCON1         equ	65	;# 
 22570   000042                     NVMLOCK         equ	66	;# 
 22571   000043                     NVMADR          equ	67	;# 
 22572   000043                     NVMADRL         equ	67	;# 
 22573   000044                     NVMADRH         equ	68	;# 
 22574   000045                     NVMADRU         equ	69	;# 
 22575   000046                     NVMDAT          equ	70	;# 
 22576   000046                     NVMDATL         equ	70	;# 
 22577   000047                     NVMDATH         equ	71	;# 
 22578   000048                     VREGCON         equ	72	;# 
 22579   000049                     BORCON          equ	73	;# 
 22580   00004A                     HLVDCON0        equ	74	;# 
 22581   00004B                     HLVDCON1        equ	75	;# 
 22582   00004C                     ZCDCON          equ	76	;# 
 22583   000060                     PMD0            equ	96	;# 
 22584   000061                     PMD1            equ	97	;# 
 22585   000062                     PMD2            equ	98	;# 
 22586   000063                     PMD3            equ	99	;# 
 22587   000064                     PMD4            equ	100	;# 
 22588   000065                     PMD5            equ	101	;# 
 22589   000066                     PMD6            equ	102	;# 
 22590   000067                     PMD7            equ	103	;# 
 22591   000068                     PMD8            equ	104	;# 
 22592   00006A                     MD1CON0         equ	106	;# 
 22593   00006B                     MD1CON1         equ	107	;# 
 22594   00006C                     MD1SRC          equ	108	;# 
 22595   00006D                     MD1CARL         equ	109	;# 
 22596   00006E                     MD1CARH         equ	110	;# 
 22597   00006F                     CMOUT           equ	111	;# 
 22598   000070                     CM1CON0         equ	112	;# 
 22599   000071                     CM1CON1         equ	113	;# 
 22600   000072                     CM1NCH          equ	114	;# 
 22601   000073                     CM1PCH          equ	115	;# 
 22602   000074                     CM2CON0         equ	116	;# 
 22603   000075                     CM2CON1         equ	117	;# 
 22604   000076                     CM2NCH          equ	118	;# 
 22605   000077                     CM2PCH          equ	119	;# 
 22606   000078                     WDTCON0         equ	120	;# 
 22607   000079                     WDTCON1         equ	121	;# 
 22608   00007A                     WDTPSL          equ	122	;# 
 22609   00007B                     WDTPSH          equ	123	;# 
 22610   00007C                     WDTTMR          equ	124	;# 
 22611   00007D                     DAC1DAT         equ	125	;# 
 22612   00007D                     DAC1DATL        equ	125	;# 
 22613   00007F                     DAC1CON         equ	127	;# 
 22614   000080                     SPI1RXB         equ	128	;# 
 22615   000081                     SPI1TXB         equ	129	;# 
 22616   000082                     SPI1TCNT        equ	130	;# 
 22617   000082                     SPI1TCNTL       equ	130	;# 
 22618   000083                     SPI1TCNTH       equ	131	;# 
 22619   000084                     SPI1CON0        equ	132	;# 
 22620   000085                     SPI1CON1        equ	133	;# 
 22621   000086                     SPI1CON2        equ	134	;# 
 22622   000087                     SPI1STATUS      equ	135	;# 
 22623   000088                     SPI1TWIDTH      equ	136	;# 
 22624   000089                     SPI1BAUD        equ	137	;# 
 22625   00008A                     SPI1INTF        equ	138	;# 
 22626   00008B                     SPI1INTE        equ	139	;# 
 22627   00008C                     SPI1CLK         equ	140	;# 
 22628   00008D                     SPI2RXB         equ	141	;# 
 22629   00008E                     SPI2TXB         equ	142	;# 
 22630   00008F                     SPI2TCNT        equ	143	;# 
 22631   00008F                     SPI2TCNTL       equ	143	;# 
 22632   000090                     SPI2TCNTH       equ	144	;# 
 22633   000091                     SPI2CON0        equ	145	;# 
 22634   000092                     SPI2CON1        equ	146	;# 
 22635   000093                     SPI2CON2        equ	147	;# 
 22636   000094                     SPI2STATUS      equ	148	;# 
 22637   000095                     SPI2TWIDTH      equ	149	;# 
 22638   000096                     SPI2BAUD        equ	150	;# 
 22639   000097                     SPI2INTF        equ	151	;# 
 22640   000098                     SPI2INTE        equ	152	;# 
 22641   000099                     SPI2CLK         equ	153	;# 
 22642   0000AC                     ACTCON          equ	172	;# 
 22643   0000AD                     OSCCON1         equ	173	;# 
 22644   0000AE                     OSCCON2         equ	174	;# 
 22645   0000AF                     OSCCON3         equ	175	;# 
 22646   0000B0                     OSCTUNE         equ	176	;# 
 22647   0000B1                     OSCFRQ          equ	177	;# 
 22648   0000B1                     OSCFREQ         equ	177	;# 
 22649   0000B2                     OSCSTAT         equ	178	;# 
 22650   0000B2                     OSCSTAT1        equ	178	;# 
 22651   0000B3                     OSCEN           equ	179	;# 
 22652   0000B4                     PRLOCK          equ	180	;# 
 22653   0000B5                     SCANPR          equ	181	;# 
 22654   0000B6                     DMA1PR          equ	182	;# 
 22655   0000B7                     DMA2PR          equ	183	;# 
 22656   0000B8                     DMA3PR          equ	184	;# 
 22657   0000B9                     DMA4PR          equ	185	;# 
 22658   0000BA                     DMA5PR          equ	186	;# 
 22659   0000BB                     DMA6PR          equ	187	;# 
 22660   0000BC                     DMA7PR          equ	188	;# 
 22661   0000BD                     DMA8PR          equ	189	;# 
 22662   0000BE                     MAINPR          equ	190	;# 
 22663   0000BF                     ISRPR           equ	191	;# 
 22664   0000D4                     CLCDATA         equ	212	;# 
 22665   0000D5                     CLCSELECT       equ	213	;# 
 22666   0000D6                     CLCnCON         equ	214	;# 
 22667   0000D7                     CLCnPOL         equ	215	;# 
 22668   0000D8                     CLCnSEL0        equ	216	;# 
 22669   0000D9                     CLCnSEL1        equ	217	;# 
 22670   0000DA                     CLCnSEL2        equ	218	;# 
 22671   0000DB                     CLCnSEL3        equ	219	;# 
 22672   0000DC                     CLCnGLS0        equ	220	;# 
 22673   0000DD                     CLCnGLS1        equ	221	;# 
 22674   0000DE                     CLCnGLS2        equ	222	;# 
 22675   0000DF                     CLCnGLS3        equ	223	;# 
 22676   0000E8                     DMASELECT       equ	232	;# 
 22677   0000E9                     DMAnBUF         equ	233	;# 
 22678   0000EA                     DMAnDCNT        equ	234	;# 
 22679   0000EA                     DMAnDCNTL       equ	234	;# 
 22680   0000EB                     DMAnDCNTH       equ	235	;# 
 22681   0000EC                     DMAnDPTR        equ	236	;# 
 22682   0000EC                     DMAnDPTRL       equ	236	;# 
 22683   0000ED                     DMAnDPTRH       equ	237	;# 
 22684   0000EE                     DMAnDSZ         equ	238	;# 
 22685   0000EE                     DMAnDSZL        equ	238	;# 
 22686   0000EF                     DMAnDSZH        equ	239	;# 
 22687   0000F0                     DMAnDSA         equ	240	;# 
 22688   0000F0                     DMAnDSAL        equ	240	;# 
 22689   0000F1                     DMAnDSAH        equ	241	;# 
 22690   0000F2                     DMAnSCNT        equ	242	;# 
 22691   0000F2                     DMAnSCNTL       equ	242	;# 
 22692   0000F3                     DMAnSCNTH       equ	243	;# 
 22693   0000F4                     DMAnSPTR        equ	244	;# 
 22694   0000F4                     DMAnSPTRL       equ	244	;# 
 22695   0000F5                     DMAnSPTRH       equ	245	;# 
 22696   0000F6                     DMAnSPTRU       equ	246	;# 
 22697   0000F7                     DMAnSSZ         equ	247	;# 
 22698   0000F7                     DMAnSSZL        equ	247	;# 
 22699   0000F8                     DMAnSSZH        equ	248	;# 
 22700   0000F9                     DMAnSSA         equ	249	;# 
 22701   0000F9                     DMAnSSAL        equ	249	;# 
 22702   0000FA                     DMAnSSAH        equ	250	;# 
 22703   0000FB                     DMAnSSAU        equ	251	;# 
 22704   0000FC                     DMAnCON0        equ	252	;# 
 22705   0000FD                     DMAnCON1        equ	253	;# 
 22706   0000FE                     DMAnAIRQ        equ	254	;# 
 22707   0000FF                     DMAnSIRQ        equ	255	;# 
 22708   000100                     C1CONL          equ	256	;# 
 22709   000101                     C1CONH          equ	257	;# 
 22710   000102                     C1CONU          equ	258	;# 
 22711   000103                     C1CONT          equ	259	;# 
 22712   000104                     C1NBTCFGL       equ	260	;# 
 22713   000105                     C1NBTCFGH       equ	261	;# 
 22714   000106                     C1NBTCFGU       equ	262	;# 
 22715   000107                     C1NBTCFGT       equ	263	;# 
 22716   000108                     C1DBTCFGL       equ	264	;# 
 22717   000109                     C1DBTCFGH       equ	265	;# 
 22718   00010A                     C1DBTCFGU       equ	266	;# 
 22719   00010B                     C1DBTCFGT       equ	267	;# 
 22720   00010C                     C1TDCL          equ	268	;# 
 22721   00010D                     C1TDCH          equ	269	;# 
 22722   00010E                     C1TDCU          equ	270	;# 
 22723   000110                     C1TBC           equ	272	;# 
 22724   000110                     C1TBCL          equ	272	;# 
 22725   000111                     C1TBCH          equ	273	;# 
 22726   000112                     C1TBCU          equ	274	;# 
 22727   000113                     C1TBCT          equ	275	;# 
 22728   000114                     C1TSCONL        equ	276	;# 
 22729   000115                     C1TSCONH        equ	277	;# 
 22730   000116                     C1TSCONU        equ	278	;# 
 22731   000117                     C1TSCONT        equ	279	;# 
 22732   000118                     C1VECL          equ	280	;# 
 22733   000119                     C1VECH          equ	281	;# 
 22734   00011A                     C1VECU          equ	282	;# 
 22735   00011B                     C1VECT          equ	283	;# 
 22736   00011C                     C1INTL          equ	284	;# 
 22737   00011D                     C1INTH          equ	285	;# 
 22738   00011E                     C1INTU          equ	286	;# 
 22739   00011F                     C1INTT          equ	287	;# 
 22740   000120                     C1RXIF          equ	288	;# 
 22741   000120                     C1RXIFL         equ	288	;# 
 22742   000121                     C1RXIFH         equ	289	;# 
 22743   000122                     C1RXIFU         equ	290	;# 
 22744   000123                     C1RXIFT         equ	291	;# 
 22745   000124                     C1TXIF          equ	292	;# 
 22746   000124                     C1TXIFL         equ	292	;# 
 22747   000125                     C1TXIFH         equ	293	;# 
 22748   000126                     C1TXIFU         equ	294	;# 
 22749   000127                     C1TXIFT         equ	295	;# 
 22750   000128                     C1RXOVIF        equ	296	;# 
 22751   000128                     C1RXOVIFL       equ	296	;# 
 22752   000129                     C1RXOVIFH       equ	297	;# 
 22753   00012A                     C1RXOVIFU       equ	298	;# 
 22754   00012B                     C1RXOVIFT       equ	299	;# 
 22755   00012C                     C1TXATIF        equ	300	;# 
 22756   00012C                     C1TXATIFL       equ	300	;# 
 22757   00012D                     C1TXATIFH       equ	301	;# 
 22758   00012E                     C1TXATIFU       equ	302	;# 
 22759   00012F                     C1TXATIFT       equ	303	;# 
 22760   000130                     C1TXREQ         equ	304	;# 
 22761   000130                     C1TXREQL        equ	304	;# 
 22762   000131                     C1TXREQH        equ	305	;# 
 22763   000132                     C1TXREQU        equ	306	;# 
 22764   000133                     C1TXREQT        equ	307	;# 
 22765   000134                     C1TRECL         equ	308	;# 
 22766   000135                     C1TRECH         equ	309	;# 
 22767   000136                     C1TRECU         equ	310	;# 
 22768   000137                     C1TRECT         equ	311	;# 
 22769   000138                     C1BDIAG0L       equ	312	;# 
 22770   000139                     C1BDIAG0H       equ	313	;# 
 22771   00013C                     C1BDIAG1L       equ	316	;# 
 22772   00013D                     C1BDIAG1H       equ	317	;# 
 22773   00013E                     C1BDIAG1U       equ	318	;# 
 22774   00013F                     C1BDIAG1T       equ	319	;# 
 22775   000140                     C1TEFCONL       equ	320	;# 
 22776   000141                     C1TEFCONH       equ	321	;# 
 22777   000142                     C1TEFCONU       equ	322	;# 
 22778   000143                     C1TEFCONT       equ	323	;# 
 22779   000144                     C1TEFSTAL       equ	324	;# 
 22780   000145                     C1TEFSTAH       equ	325	;# 
 22781   000146                     C1TEFSTAU       equ	326	;# 
 22782   000147                     C1TEFSTAT       equ	327	;# 
 22783   000148                     C1TEFUA         equ	328	;# 
 22784   000148                     C1TEFUAL        equ	328	;# 
 22785   000149                     C1TEFUAH        equ	329	;# 
 22786   00014A                     C1TEFUAU        equ	330	;# 
 22787   00014B                     C1TEFUAT        equ	331	;# 
 22788   00014C                     C1FIFOBA        equ	332	;# 
 22789   00014C                     C1FIFOBAL       equ	332	;# 
 22790   00014D                     C1FIFOBAH       equ	333	;# 
 22791   00014E                     C1FIFOBAU       equ	334	;# 
 22792   00014F                     C1FIFOBAT       equ	335	;# 
 22793   000150                     C1TXQCONL       equ	336	;# 
 22794   000151                     C1TXQCONH       equ	337	;# 
 22795   000152                     C1TXQCONU       equ	338	;# 
 22796   000153                     C1TXQCONT       equ	339	;# 
 22797   000154                     C1TXQSTAL       equ	340	;# 
 22798   000155                     C1TXQSTAH       equ	341	;# 
 22799   000156                     C1TXQSTAU       equ	342	;# 
 22800   000157                     C1TXQSTAT       equ	343	;# 
 22801   000158                     C1TXQUA         equ	344	;# 
 22802   000158                     C1TXQUAL        equ	344	;# 
 22803   000159                     C1TXQUAH        equ	345	;# 
 22804   00015A                     C1TXQUAU        equ	346	;# 
 22805   00015B                     C1TXQUAT        equ	347	;# 
 22806   00015C                     C1FIFOCON1      equ	348	;# 
 22807   00015C                     C1FIFOCON1L     equ	348	;# 
 22808   00015D                     C1FIFOCON1H     equ	349	;# 
 22809   00015E                     C1FIFOCON1U     equ	350	;# 
 22810   00015F                     C1FIFOCON1T     equ	351	;# 
 22811   000160                     C1FIFOSTA1      equ	352	;# 
 22812   000160                     C1FIFOSTA1L     equ	352	;# 
 22813   000161                     C1FIFOSTA1H     equ	353	;# 
 22814   000162                     C1FIFOSTA1U     equ	354	;# 
 22815   000163                     C1FIFOSTA1T     equ	355	;# 
 22816   000164                     C1FIFOUA1       equ	356	;# 
 22817   000164                     C1FIFOUA1L      equ	356	;# 
 22818   000165                     C1FIFOUA1H      equ	357	;# 
 22819   000166                     C1FIFOUA1U      equ	358	;# 
 22820   000167                     C1FIFOUA1T      equ	359	;# 
 22821   000168                     C1FIFOCON2      equ	360	;# 
 22822   000168                     C1FIFOCON2L     equ	360	;# 
 22823   000169                     C1FIFOCON2H     equ	361	;# 
 22824   00016A                     C1FIFOCON2U     equ	362	;# 
 22825   00016B                     C1FIFOCON2T     equ	363	;# 
 22826   00016C                     C1FIFOSTA2      equ	364	;# 
 22827   00016C                     C1FIFOSTA2L     equ	364	;# 
 22828   00016D                     C1FIFOSTA2H     equ	365	;# 
 22829   00016E                     C1FIFOSTA2U     equ	366	;# 
 22830   00016F                     C1FIFOSTA2T     equ	367	;# 
 22831   000170                     C1FIFOUA2       equ	368	;# 
 22832   000170                     C1FIFOUA2L      equ	368	;# 
 22833   000171                     C1FIFOUA2H      equ	369	;# 
 22834   000172                     C1FIFOUA2U      equ	370	;# 
 22835   000173                     C1FIFOUA2T      equ	371	;# 
 22836   000174                     C1FIFOCON3      equ	372	;# 
 22837   000174                     C1FIFOCON3L     equ	372	;# 
 22838   000175                     C1FIFOCON3H     equ	373	;# 
 22839   000176                     C1FIFOCON3U     equ	374	;# 
 22840   000177                     C1FIFOCON3T     equ	375	;# 
 22841   000178                     C1FIFOSTA3      equ	376	;# 
 22842   000178                     C1FIFOSTA3L     equ	376	;# 
 22843   000179                     C1FIFOSTA3H     equ	377	;# 
 22844   00017A                     C1FIFOSTA3U     equ	378	;# 
 22845   00017B                     C1FIFOSTA3T     equ	379	;# 
 22846   00017C                     C1FIFOUA3       equ	380	;# 
 22847   00017C                     C1FIFOUA3L      equ	380	;# 
 22848   00017D                     C1FIFOUA3H      equ	381	;# 
 22849   00017E                     C1FIFOUA3U      equ	382	;# 
 22850   00017F                     C1FIFOUA3T      equ	383	;# 
 22851   000180                     C1FLTCON0L      equ	384	;# 
 22852   000181                     C1FLTCON0H      equ	385	;# 
 22853   000182                     C1FLTCON0U      equ	386	;# 
 22854   000183                     C1FLTCON0T      equ	387	;# 
 22855   000184                     C1FLTCON1L      equ	388	;# 
 22856   000185                     C1FLTCON1H      equ	389	;# 
 22857   000186                     C1FLTCON1U      equ	390	;# 
 22858   000187                     C1FLTCON1T      equ	391	;# 
 22859   000188                     C1FLTCON2L      equ	392	;# 
 22860   000189                     C1FLTCON2H      equ	393	;# 
 22861   00018A                     C1FLTCON2U      equ	394	;# 
 22862   00018B                     C1FLTCON2T      equ	395	;# 
 22863   00018C                     C1FLTOBJ0       equ	396	;# 
 22864   00018C                     C1FLTOBJ0L      equ	396	;# 
 22865   00018D                     C1FLTOBJ0H      equ	397	;# 
 22866   00018E                     C1FLTOBJ0U      equ	398	;# 
 22867   00018F                     C1FLTOBJ0T      equ	399	;# 
 22868   000190                     C1MASK0         equ	400	;# 
 22869   000190                     C1MASK0L        equ	400	;# 
 22870   000191                     C1MASK0H        equ	401	;# 
 22871   000192                     C1MASK0U        equ	402	;# 
 22872   000193                     C1MASK0T        equ	403	;# 
 22873   000194                     C1FLTOBJ1       equ	404	;# 
 22874   000194                     C1FLTOBJ1L      equ	404	;# 
 22875   000195                     C1FLTOBJ1H      equ	405	;# 
 22876   000196                     C1FLTOBJ1U      equ	406	;# 
 22877   000197                     C1FLTOBJ1T      equ	407	;# 
 22878   000198                     C1MASK1         equ	408	;# 
 22879   000198                     C1MASK1L        equ	408	;# 
 22880   000199                     C1MASK1H        equ	409	;# 
 22881   00019A                     C1MASK1U        equ	410	;# 
 22882   00019B                     C1MASK1T        equ	411	;# 
 22883   00019C                     C1FLTOBJ2       equ	412	;# 
 22884   00019C                     C1FLTOBJ2L      equ	412	;# 
 22885   00019D                     C1FLTOBJ2H      equ	413	;# 
 22886   00019E                     C1FLTOBJ2U      equ	414	;# 
 22887   00019F                     C1FLTOBJ2T      equ	415	;# 
 22888   0001A0                     C1MASK2         equ	416	;# 
 22889   0001A0                     C1MASK2L        equ	416	;# 
 22890   0001A1                     C1MASK2H        equ	417	;# 
 22891   0001A2                     C1MASK2U        equ	418	;# 
 22892   0001A3                     C1MASK2T        equ	419	;# 
 22893   0001A4                     C1FLTOBJ3       equ	420	;# 
 22894   0001A4                     C1FLTOBJ3L      equ	420	;# 
 22895   0001A5                     C1FLTOBJ3H      equ	421	;# 
 22896   0001A6                     C1FLTOBJ3U      equ	422	;# 
 22897   0001A7                     C1FLTOBJ3T      equ	423	;# 
 22898   0001A8                     C1MASK3         equ	424	;# 
 22899   0001A8                     C1MASK3L        equ	424	;# 
 22900   0001A9                     C1MASK3H        equ	425	;# 
 22901   0001AA                     C1MASK3U        equ	426	;# 
 22902   0001AB                     C1MASK3T        equ	427	;# 
 22903   0001AC                     C1FLTOBJ4       equ	428	;# 
 22904   0001AC                     C1FLTOBJ4L      equ	428	;# 
 22905   0001AD                     C1FLTOBJ4H      equ	429	;# 
 22906   0001AE                     C1FLTOBJ4U      equ	430	;# 
 22907   0001AF                     C1FLTOBJ4T      equ	431	;# 
 22908   0001B0                     C1MASK4         equ	432	;# 
 22909   0001B0                     C1MASK4L        equ	432	;# 
 22910   0001B1                     C1MASK4H        equ	433	;# 
 22911   0001B2                     C1MASK4U        equ	434	;# 
 22912   0001B3                     C1MASK4T        equ	435	;# 
 22913   0001B4                     C1FLTOBJ5       equ	436	;# 
 22914   0001B4                     C1FLTOBJ5L      equ	436	;# 
 22915   0001B5                     C1FLTOBJ5H      equ	437	;# 
 22916   0001B6                     C1FLTOBJ5U      equ	438	;# 
 22917   0001B7                     C1FLTOBJ5T      equ	439	;# 
 22918   0001B8                     C1MASK5         equ	440	;# 
 22919   0001B8                     C1MASK5L        equ	440	;# 
 22920   0001B9                     C1MASK5H        equ	441	;# 
 22921   0001BA                     C1MASK5U        equ	442	;# 
 22922   0001BB                     C1MASK5T        equ	443	;# 
 22923   0001BC                     C1FLTOBJ6       equ	444	;# 
 22924   0001BC                     C1FLTOBJ6L      equ	444	;# 
 22925   0001BD                     C1FLTOBJ6H      equ	445	;# 
 22926   0001BE                     C1FLTOBJ6U      equ	446	;# 
 22927   0001BF                     C1FLTOBJ6T      equ	447	;# 
 22928   0001C0                     C1MASK6         equ	448	;# 
 22929   0001C0                     C1MASK6L        equ	448	;# 
 22930   0001C1                     C1MASK6H        equ	449	;# 
 22931   0001C2                     C1MASK6U        equ	450	;# 
 22932   0001C3                     C1MASK6T        equ	451	;# 
 22933   0001C4                     C1FLTOBJ7       equ	452	;# 
 22934   0001C4                     C1FLTOBJ7L      equ	452	;# 
 22935   0001C5                     C1FLTOBJ7H      equ	453	;# 
 22936   0001C6                     C1FLTOBJ7U      equ	454	;# 
 22937   0001C7                     C1FLTOBJ7T      equ	455	;# 
 22938   0001C8                     C1MASK7         equ	456	;# 
 22939   0001C8                     C1MASK7L        equ	456	;# 
 22940   0001C9                     C1MASK7H        equ	457	;# 
 22941   0001CA                     C1MASK7U        equ	458	;# 
 22942   0001CB                     C1MASK7T        equ	459	;# 
 22943   0001CC                     C1FLTOBJ8       equ	460	;# 
 22944   0001CC                     C1FLTOBJ8L      equ	460	;# 
 22945   0001CD                     C1FLTOBJ8H      equ	461	;# 
 22946   0001CE                     C1FLTOBJ8U      equ	462	;# 
 22947   0001CF                     C1FLTOBJ8T      equ	463	;# 
 22948   0001D0                     C1MASK8         equ	464	;# 
 22949   0001D0                     C1MASK8L        equ	464	;# 
 22950   0001D1                     C1MASK8H        equ	465	;# 
 22951   0001D2                     C1MASK8U        equ	466	;# 
 22952   0001D3                     C1MASK8T        equ	467	;# 
 22953   0001D4                     C1FLTOBJ9       equ	468	;# 
 22954   0001D4                     C1FLTOBJ9L      equ	468	;# 
 22955   0001D5                     C1FLTOBJ9H      equ	469	;# 
 22956   0001D6                     C1FLTOBJ9U      equ	470	;# 
 22957   0001D7                     C1FLTOBJ9T      equ	471	;# 
 22958   0001D8                     C1MASK9         equ	472	;# 
 22959   0001D8                     C1MASK9L        equ	472	;# 
 22960   0001D9                     C1MASK9H        equ	473	;# 
 22961   0001DA                     C1MASK9U        equ	474	;# 
 22962   0001DB                     C1MASK9T        equ	475	;# 
 22963   0001DC                     C1FLTOBJ10      equ	476	;# 
 22964   0001DC                     C1FLTOBJ10L     equ	476	;# 
 22965   0001DD                     C1FLTOBJ10H     equ	477	;# 
 22966   0001DE                     C1FLTOBJ10U     equ	478	;# 
 22967   0001DF                     C1FLTOBJ10T     equ	479	;# 
 22968   0001E0                     C1MASK10        equ	480	;# 
 22969   0001E0                     C1MASK10L       equ	480	;# 
 22970   0001E1                     C1MASK10H       equ	481	;# 
 22971   0001E2                     C1MASK10U       equ	482	;# 
 22972   0001E3                     C1MASK10T       equ	483	;# 
 22973   0001E4                     C1FLTOBJ11      equ	484	;# 
 22974   0001E4                     C1FLTOBJ11L     equ	484	;# 
 22975   0001E5                     C1FLTOBJ11H     equ	485	;# 
 22976   0001E6                     C1FLTOBJ11U     equ	486	;# 
 22977   0001E7                     C1FLTOBJ11T     equ	487	;# 
 22978   0001E8                     C1MASK11        equ	488	;# 
 22979   0001E8                     C1MASK11L       equ	488	;# 
 22980   0001E9                     C1MASK11H       equ	489	;# 
 22981   0001EA                     C1MASK11U       equ	490	;# 
 22982   0001EB                     C1MASK11T       equ	491	;# 
 22983   000200                     PPSLOCK         equ	512	;# 
 22984   000201                     RA0PPS          equ	513	;# 
 22985   000202                     RA1PPS          equ	514	;# 
 22986   000203                     RA2PPS          equ	515	;# 
 22987   000204                     RA3PPS          equ	516	;# 
 22988   000205                     RA4PPS          equ	517	;# 
 22989   000206                     RA5PPS          equ	518	;# 
 22990   000207                     RA6PPS          equ	519	;# 
 22991   000208                     RA7PPS          equ	520	;# 
 22992   000209                     RB0PPS          equ	521	;# 
 22993   00020A                     RB1PPS          equ	522	;# 
 22994   00020B                     RB2PPS          equ	523	;# 
 22995   00020C                     RB3PPS          equ	524	;# 
 22996   00020D                     RB4PPS          equ	525	;# 
 22997   00020E                     RB5PPS          equ	526	;# 
 22998   00020F                     RB6PPS          equ	527	;# 
 22999   000210                     RB7PPS          equ	528	;# 
 23000   000211                     RC0PPS          equ	529	;# 
 23001   000212                     RC1PPS          equ	530	;# 
 23002   000213                     RC2PPS          equ	531	;# 
 23003   000214                     RC3PPS          equ	532	;# 
 23004   000215                     RC4PPS          equ	533	;# 
 23005   000216                     RC5PPS          equ	534	;# 
 23006   000217                     RC6PPS          equ	535	;# 
 23007   000218                     RC7PPS          equ	536	;# 
 23008   00023D                     CANRXPPS        equ	573	;# 
 23009   00023E                     INT0PPS         equ	574	;# 
 23010   00023F                     INT1PPS         equ	575	;# 
 23011   000240                     INT2PPS         equ	576	;# 
 23012   000241                     T0CKIPPS        equ	577	;# 
 23013   000242                     T1CKIPPS        equ	578	;# 
 23014   000243                     T1GPPS          equ	579	;# 
 23015   000244                     T3CKIPPS        equ	580	;# 
 23016   000245                     T3GPPS          equ	581	;# 
 23017   000246                     T5CKIPPS        equ	582	;# 
 23018   000247                     T5GPPS          equ	583	;# 
 23019   000248                     T2INPPS         equ	584	;# 
 23020   000249                     T4INPPS         equ	585	;# 
 23021   00024A                     T6INPPS         equ	586	;# 
 23022   00024B                     TUIN0PPS        equ	587	;# 
 23023   00024C                     TUIN1PPS        equ	588	;# 
 23024   00024F                     CCP1PPS         equ	591	;# 
 23025   000250                     CCP2PPS         equ	592	;# 
 23026   000251                     CCP3PPS         equ	593	;# 
 23027   000253                     PWM1ERSPPS      equ	595	;# 
 23028   000254                     PWM2ERSPPS      equ	596	;# 
 23029   000255                     PWM3ERSPPS      equ	597	;# 
 23030   000256                     PWM4ERSPPS      equ	598	;# 
 23031   000257                     PWMIN0PPS       equ	599	;# 
 23032   000258                     PWMIN1PPS       equ	600	;# 
 23033   000259                     SMT1WINPPS      equ	601	;# 
 23034   00025A                     SMT1SIGPPS      equ	602	;# 
 23035   00025B                     CWG1PPS         equ	603	;# 
 23036   00025B                     CWG1INPPS       equ	603	;# 
 23037   00025C                     CWG2PPS         equ	604	;# 
 23038   00025C                     CWG2INPPS       equ	604	;# 
 23039   00025D                     CWG3PPS         equ	605	;# 
 23040   00025D                     CWG3INPPS       equ	605	;# 
 23041   00025E                     MD1CARLPPS      equ	606	;# 
 23042   00025E                     MDCARLPPS       equ	606	;# 
 23043   00025F                     MD1CARHPPS      equ	607	;# 
 23044   00025F                     MDCARHPPS       equ	607	;# 
 23045   000260                     MD1SRCPPS       equ	608	;# 
 23046   000260                     MDSRCPPS        equ	608	;# 
 23047   000261                     CLCIN0PPS       equ	609	;# 
 23048   000262                     CLCIN1PPS       equ	610	;# 
 23049   000263                     CLCIN2PPS       equ	611	;# 
 23050   000264                     CLCIN3PPS       equ	612	;# 
 23051   000265                     CLCIN4PPS       equ	613	;# 
 23052   000266                     CLCIN5PPS       equ	614	;# 
 23053   000267                     CLCIN6PPS       equ	615	;# 
 23054   000268                     CLCIN7PPS       equ	616	;# 
 23055   000269                     ADACTPPS        equ	617	;# 
 23056   00026A                     SPI1SCKPPS      equ	618	;# 
 23057   00026B                     SPI1SDIPPS      equ	619	;# 
 23058   00026C                     SPI1SSPPS       equ	620	;# 
 23059   00026D                     SPI2SCKPPS      equ	621	;# 
 23060   00026E                     SPI2SDIPPS      equ	622	;# 
 23061   00026F                     SPI2SSPPS       equ	623	;# 
 23062   000270                     I2C1SDAPPS      equ	624	;# 
 23063   000271                     I2C1SCLPPS      equ	625	;# 
 23064   000272                     U1RXPPS         equ	626	;# 
 23065   000273                     U1CTSPPS        equ	627	;# 
 23066   000274                     U2RXPPS         equ	628	;# 
 23067   000275                     U2CTSPPS        equ	629	;# 
 23068   000276                     U3RXPPS         equ	630	;# 
 23069   000277                     U3CTSPPS        equ	631	;# 
 23070   000278                     U4RXPPS         equ	632	;# 
 23071   000279                     U4CTSPPS        equ	633	;# 
 23072   00027A                     U5RXPPS         equ	634	;# 
 23073   00027B                     U5CTSPPS        equ	635	;# 
 23074   000286                     RC4I2C          equ	646	;# 
 23075   000287                     RC3I2C          equ	647	;# 
 23076   000288                     RB2I2C          equ	648	;# 
 23077   000289                     RB1I2C          equ	649	;# 
 23078   00028A                     I2C1RXB         equ	650	;# 
 23079   00028B                     I2C1TXB         equ	651	;# 
 23080   00028C                     I2C1CNTL        equ	652	;# 
 23081   00028D                     I2C1CNTH        equ	653	;# 
 23082   00028E                     I2C1ADB0        equ	654	;# 
 23083   00028F                     I2C1ADB1        equ	655	;# 
 23084   000290                     I2C1ADR0        equ	656	;# 
 23085   000291                     I2C1ADR1        equ	657	;# 
 23086   000292                     I2C1ADR2        equ	658	;# 
 23087   000293                     I2C1ADR3        equ	659	;# 
 23088   000294                     I2C1CON0        equ	660	;# 
 23089   000295                     I2C1CON1        equ	661	;# 
 23090   000296                     I2C1CON2        equ	662	;# 
 23091   000297                     I2C1ERR         equ	663	;# 
 23092   000298                     I2C1STAT0       equ	664	;# 
 23093   000299                     I2C1STAT1       equ	665	;# 
 23094   00029A                     I2C1PIR         equ	666	;# 
 23095   00029B                     I2C1PIE         equ	667	;# 
 23096   00029C                     I2C1BTO         equ	668	;# 
 23097   00029D                     I2C1BAUD        equ	669	;# 
 23098   00029E                     I2C1CLK         equ	670	;# 
 23099   00029F                     I2C1BTOC        equ	671	;# 
 23100   0002A1                     U1RXB           equ	673	;# 
 23101   0002A1                     U1RXBL          equ	673	;# 
 23102   0002A2                     U1RXCHK         equ	674	;# 
 23103   0002A3                     U1TXB           equ	675	;# 
 23104   0002A3                     U1TXBL          equ	675	;# 
 23105   0002A4                     U1TXCHK         equ	676	;# 
 23106   0002A5                     U1P1            equ	677	;# 
 23107   0002A5                     U1P1L           equ	677	;# 
 23108   0002A6                     U1P1H           equ	678	;# 
 23109   0002A7                     U1P2            equ	679	;# 
 23110   0002A7                     U1P2L           equ	679	;# 
 23111   0002A8                     U1P2H           equ	680	;# 
 23112   0002A9                     U1P3            equ	681	;# 
 23113   0002A9                     U1P3L           equ	681	;# 
 23114   0002AA                     U1P3H           equ	682	;# 
 23115   0002AB                     U1CON0          equ	683	;# 
 23116   0002AC                     U1CON1          equ	684	;# 
 23117   0002AD                     U1CON2          equ	685	;# 
 23118   0002AE                     U1BRG           equ	686	;# 
 23119   0002AE                     U1BRGL          equ	686	;# 
 23120   0002AF                     U1BRGH          equ	687	;# 
 23121   0002B0                     U1FIFO          equ	688	;# 
 23122   0002B1                     U1UIR           equ	689	;# 
 23123   0002B2                     U1ERRIR         equ	690	;# 
 23124   0002B3                     U1ERRIE         equ	691	;# 
 23125   0002B4                     U2RXB           equ	692	;# 
 23126   0002B4                     U2RXBL          equ	692	;# 
 23127   0002B5                     U2RXCHK         equ	693	;# 
 23128   0002B6                     U2TXB           equ	694	;# 
 23129   0002B6                     U2TXBL          equ	694	;# 
 23130   0002B7                     U2TXCHK         equ	695	;# 
 23131   0002B8                     U2P1            equ	696	;# 
 23132   0002B8                     U2P1L           equ	696	;# 
 23133   0002B9                     U2P1H           equ	697	;# 
 23134   0002BA                     U2P2            equ	698	;# 
 23135   0002BA                     U2P2L           equ	698	;# 
 23136   0002BB                     U2P2H           equ	699	;# 
 23137   0002BC                     U2P3            equ	700	;# 
 23138   0002BC                     U2P3L           equ	700	;# 
 23139   0002BD                     U2P3H           equ	701	;# 
 23140   0002BE                     U2CON0          equ	702	;# 
 23141   0002BF                     U2CON1          equ	703	;# 
 23142   0002C0                     U2CON2          equ	704	;# 
 23143   0002C1                     U2BRG           equ	705	;# 
 23144   0002C1                     U2BRGL          equ	705	;# 
 23145   0002C2                     U2BRGH          equ	706	;# 
 23146   0002C3                     U2FIFO          equ	707	;# 
 23147   0002C4                     U2UIR           equ	708	;# 
 23148   0002C5                     U2ERRIR         equ	709	;# 
 23149   0002C6                     U2ERRIE         equ	710	;# 
 23150   0002C7                     U3RXB           equ	711	;# 
 23151   0002C7                     U3RXBL          equ	711	;# 
 23152   0002C9                     U3TXB           equ	713	;# 
 23153   0002C9                     U3TXBL          equ	713	;# 
 23154   0002CB                     U3P1            equ	715	;# 
 23155   0002CB                     U3P1L           equ	715	;# 
 23156   0002CD                     U3P2            equ	717	;# 
 23157   0002CD                     U3P2L           equ	717	;# 
 23158   0002CF                     U3P3            equ	719	;# 
 23159   0002CF                     U3P3L           equ	719	;# 
 23160   0002D1                     U3CON0          equ	721	;# 
 23161   0002D2                     U3CON1          equ	722	;# 
 23162   0002D3                     U3CON2          equ	723	;# 
 23163   0002D4                     U3BRG           equ	724	;# 
 23164   0002D4                     U3BRGL          equ	724	;# 
 23165   0002D5                     U3BRGH          equ	725	;# 
 23166   0002D6                     U3FIFO          equ	726	;# 
 23167   0002D7                     U3UIR           equ	727	;# 
 23168   0002D8                     U3ERRIR         equ	728	;# 
 23169   0002D9                     U3ERRIE         equ	729	;# 
 23170   0002DA                     U4RXB           equ	730	;# 
 23171   0002DA                     U4RXBL          equ	730	;# 
 23172   0002DC                     U4TXB           equ	732	;# 
 23173   0002DC                     U4TXBL          equ	732	;# 
 23174   0002DE                     U4P1            equ	734	;# 
 23175   0002DE                     U4P1L           equ	734	;# 
 23176   0002E0                     U4P2            equ	736	;# 
 23177   0002E0                     U4P2L           equ	736	;# 
 23178   0002E2                     U4P3            equ	738	;# 
 23179   0002E2                     U4P3L           equ	738	;# 
 23180   0002E4                     U4CON0          equ	740	;# 
 23181   0002E5                     U4CON1          equ	741	;# 
 23182   0002E6                     U4CON2          equ	742	;# 
 23183   0002E7                     U4BRG           equ	743	;# 
 23184   0002E7                     U4BRGL          equ	743	;# 
 23185   0002E8                     U4BRGH          equ	744	;# 
 23186   0002E9                     U4FIFO          equ	745	;# 
 23187   0002EA                     U4UIR           equ	746	;# 
 23188   0002EB                     U4ERRIR         equ	747	;# 
 23189   0002EC                     U4ERRIE         equ	748	;# 
 23190   0002ED                     U5RXB           equ	749	;# 
 23191   0002ED                     U5RXBL          equ	749	;# 
 23192   0002EF                     U5TXB           equ	751	;# 
 23193   0002EF                     U5TXBL          equ	751	;# 
 23194   0002F1                     U5P1            equ	753	;# 
 23195   0002F1                     U5P1L           equ	753	;# 
 23196   0002F3                     U5P2            equ	755	;# 
 23197   0002F3                     U5P2L           equ	755	;# 
 23198   0002F5                     U5P3            equ	757	;# 
 23199   0002F5                     U5P3L           equ	757	;# 
 23200   0002F7                     U5CON0          equ	759	;# 
 23201   0002F8                     U5CON1          equ	760	;# 
 23202   0002F9                     U5CON2          equ	761	;# 
 23203   0002FA                     U5BRG           equ	762	;# 
 23204   0002FA                     U5BRGL          equ	762	;# 
 23205   0002FB                     U5BRGH          equ	763	;# 
 23206   0002FC                     U5FIFO          equ	764	;# 
 23207   0002FD                     U5UIR           equ	765	;# 
 23208   0002FE                     U5ERRIR         equ	766	;# 
 23209   0002FF                     U5ERRIE         equ	767	;# 
 23210   000300                     SMT1TMR         equ	768	;# 
 23211   000300                     SMT1TMRL        equ	768	;# 
 23212   000301                     SMT1TMRH        equ	769	;# 
 23213   000302                     SMT1TMRU        equ	770	;# 
 23214   000303                     SMT1CPR         equ	771	;# 
 23215   000303                     SMT1CPRL        equ	771	;# 
 23216   000304                     SMT1CPRH        equ	772	;# 
 23217   000305                     SMT1CPRU        equ	773	;# 
 23218   000306                     SMT1CPW         equ	774	;# 
 23219   000306                     SMT1CPWL        equ	774	;# 
 23220   000307                     SMT1CPWH        equ	775	;# 
 23221   000308                     SMT1CPWU        equ	776	;# 
 23222   000309                     SMT1PR          equ	777	;# 
 23223   000309                     SMT1PRL         equ	777	;# 
 23224   00030A                     SMT1PRH         equ	778	;# 
 23225   00030B                     SMT1PRU         equ	779	;# 
 23226   00030C                     SMT1CON0        equ	780	;# 
 23227   00030D                     SMT1CON1        equ	781	;# 
 23228   00030E                     SMT1STAT        equ	782	;# 
 23229   00030F                     SMT1CLK         equ	783	;# 
 23230   000310                     SMT1SIG         equ	784	;# 
 23231   000311                     SMT1WIN         equ	785	;# 
 23232   000318                     TMR0L           equ	792	;# 
 23233   000318                     TMR0            equ	792	;# 
 23234   000319                     TMR0H           equ	793	;# 
 23235   000319                     PR0             equ	793	;# 
 23236   00031A                     T0CON0          equ	794	;# 
 23237   00031B                     T0CON1          equ	795	;# 
 23238   00031C                     TMR1            equ	796	;# 
 23239   00031C                     TMR1L           equ	796	;# 
 23240   00031D                     TMR1H           equ	797	;# 
 23241   00031E                     T1CON           equ	798	;# 
 23242   00031E                     TMR1CON         equ	798	;# 
 23243   00031F                     T1GCON          equ	799	;# 
 23244   00031F                     TMR1GCON        equ	799	;# 
 23245   000320                     T1GATE          equ	800	;# 
 23246   000320                     TMR1GATE        equ	800	;# 
 23247   000321                     T1CLK           equ	801	;# 
 23248   000321                     TMR1CLK         equ	801	;# 
 23249   000321                     PR1             equ	801	;# 
 23250   000322                     T2TMR           equ	802	;# 
 23251   000322                     TMR2            equ	802	;# 
 23252   000323                     T2PR            equ	803	;# 
 23253   000323                     PR2             equ	803	;# 
 23254   000324                     T2CON           equ	804	;# 
 23255   000325                     T2HLT           equ	805	;# 
 23256   000326                     T2CLKCON        equ	806	;# 
 23257   000326                     T2CLK           equ	806	;# 
 23258   000327                     T2RST           equ	807	;# 
 23259   000328                     TMR3            equ	808	;# 
 23260   000328                     TMR3L           equ	808	;# 
 23261   000329                     TMR3H           equ	809	;# 
 23262   00032A                     T3CON           equ	810	;# 
 23263   00032A                     TMR3CON         equ	810	;# 
 23264   00032B                     T3GCON          equ	811	;# 
 23265   00032B                     TMR3GCON        equ	811	;# 
 23266   00032C                     T3GATE          equ	812	;# 
 23267   00032C                     TMR3GATE        equ	812	;# 
 23268   00032D                     T3CLK           equ	813	;# 
 23269   00032D                     TMR3CLK         equ	813	;# 
 23270   00032D                     PR3             equ	813	;# 
 23271   00032E                     T4TMR           equ	814	;# 
 23272   00032E                     TMR4            equ	814	;# 
 23273   00032F                     T4PR            equ	815	;# 
 23274   00032F                     PR4             equ	815	;# 
 23275   000330                     T4CON           equ	816	;# 
 23276   000331                     T4HLT           equ	817	;# 
 23277   000332                     T4CLKCON        equ	818	;# 
 23278   000332                     T4CLK           equ	818	;# 
 23279   000333                     T4RST           equ	819	;# 
 23280   000334                     TMR5            equ	820	;# 
 23281   000334                     TMR5L           equ	820	;# 
 23282   000335                     TMR5H           equ	821	;# 
 23283   000336                     T5CON           equ	822	;# 
 23284   000336                     TMR5CON         equ	822	;# 
 23285   000337                     T5GCON          equ	823	;# 
 23286   000337                     TMR5GCON        equ	823	;# 
 23287   000338                     T5GATE          equ	824	;# 
 23288   000338                     TMR5GATE        equ	824	;# 
 23289   000339                     T5CLK           equ	825	;# 
 23290   000339                     TMR5CLK         equ	825	;# 
 23291   000339                     PR5             equ	825	;# 
 23292   00033A                     T6TMR           equ	826	;# 
 23293   00033A                     TMR6            equ	826	;# 
 23294   00033B                     T6PR            equ	827	;# 
 23295   00033B                     PR6             equ	827	;# 
 23296   00033C                     T6CON           equ	828	;# 
 23297   00033D                     T6HLT           equ	829	;# 
 23298   00033E                     T6CLKCON        equ	830	;# 
 23299   00033E                     T6CLK           equ	830	;# 
 23300   00033F                     T6RST           equ	831	;# 
 23301   000340                     CCPR1           equ	832	;# 
 23302   000340                     CCPR1L          equ	832	;# 
 23303   000341                     CCPR1H          equ	833	;# 
 23304   000342                     CCP1CON         equ	834	;# 
 23305   000343                     CCP1CAP         equ	835	;# 
 23306   000344                     CCPR2           equ	836	;# 
 23307   000344                     CCPR2L          equ	836	;# 
 23308   000345                     CCPR2H          equ	837	;# 
 23309   000346                     CCP2CON         equ	838	;# 
 23310   000347                     CCP2CAP         equ	839	;# 
 23311   000348                     CCPR3           equ	840	;# 
 23312   000348                     CCPR3L          equ	840	;# 
 23313   000349                     CCPR3H          equ	841	;# 
 23314   00034A                     CCP3CON         equ	842	;# 
 23315   00034B                     CCP3CAP         equ	843	;# 
 23316   00034C                     CCPTMRS0        equ	844	;# 
 23317   00034F                     CRCDATA         equ	847	;# 
 23318   00034F                     CRCDATAL        equ	847	;# 
 23319   000350                     CRCDATAH        equ	848	;# 
 23320   000351                     CRCDATAU        equ	849	;# 
 23321   000352                     CRCDATAT        equ	850	;# 
 23322   000353                     CRCOUT          equ	851	;# 
 23323   000353                     CRCSHFT         equ	851	;# 
 23324   000353                     CRCXOR          equ	851	;# 
 23325   000353                     CRCOUTL         equ	851	;# 
 23326   000353                     CRCSHFTL        equ	851	;# 
 23327   000353                     CRCSHIFTL       equ	851	;# 
 23328   000353                     CRCXORL         equ	851	;# 
 23329   000354                     CRCOUTH         equ	852	;# 
 23330   000354                     CRCSHFTH        equ	852	;# 
 23331   000354                     CRCSHIFTH       equ	852	;# 
 23332   000354                     CRCXORH         equ	852	;# 
 23333   000355                     CRCOUTU         equ	853	;# 
 23334   000355                     CRCSHFTU        equ	853	;# 
 23335   000355                     CRCSHIFTU       equ	853	;# 
 23336   000355                     CRCXORU         equ	853	;# 
 23337   000356                     CRCOUTT         equ	854	;# 
 23338   000356                     CRCSHFTT        equ	854	;# 
 23339   000356                     CRCSHIFTT       equ	854	;# 
 23340   000356                     CRCXORT         equ	854	;# 
 23341   000357                     CRCCON0         equ	855	;# 
 23342   000358                     CRCCON1         equ	856	;# 
 23343   000359                     CRCCON2         equ	857	;# 
 23344   00035A                     SCANLADR        equ	858	;# 
 23345   00035A                     SCANLADRL       equ	858	;# 
 23346   00035B                     SCANLADRH       equ	859	;# 
 23347   00035C                     SCANLADRU       equ	860	;# 
 23348   00035D                     SCANHADR        equ	861	;# 
 23349   00035D                     SCANHADRL       equ	861	;# 
 23350   00035E                     SCANHADRH       equ	862	;# 
 23351   00035F                     SCANHADRU       equ	863	;# 
 23352   000360                     SCANCON0        equ	864	;# 
 23353   000361                     SCANTRIG        equ	865	;# 
 23354   000362                     IPR0            equ	866	;# 
 23355   000363                     IPR1            equ	867	;# 
 23356   000364                     IPR2            equ	868	;# 
 23357   000365                     IPR3            equ	869	;# 
 23358   000366                     IPR4            equ	870	;# 
 23359   000367                     IPR5            equ	871	;# 
 23360   000368                     IPR6            equ	872	;# 
 23361   000369                     IPR7            equ	873	;# 
 23362   00036A                     IPR8            equ	874	;# 
 23363   00036B                     IPR9            equ	875	;# 
 23364   00036C                     IPR10           equ	876	;# 
 23365   00036D                     IPR11           equ	877	;# 
 23366   00036E                     IPR12           equ	878	;# 
 23367   00036F                     IPR13           equ	879	;# 
 23368   000370                     IPR14           equ	880	;# 
 23369   000371                     IPR15           equ	881	;# 
 23370   000373                     STATUS_CSHAD    equ	883	;# 
 23371   000374                     WREG_CSHAD      equ	884	;# 
 23372   000375                     BSR_CSHAD       equ	885	;# 
 23373   000376                     SHADCON         equ	886	;# 
 23374   000377                     STATUS_SHAD     equ	887	;# 
 23375   000378                     WREG_SHAD       equ	888	;# 
 23376   000379                     BSR_SHAD        equ	889	;# 
 23377   00037A                     PCLATH_SHAD     equ	890	;# 
 23378   00037B                     PCLATU_SHAD     equ	891	;# 
 23379   00037C                     FSR0SH          equ	892	;# 
 23380   00037C                     FSR0L_SHAD      equ	892	;# 
 23381   00037D                     FSR0H_SHAD      equ	893	;# 
 23382   00037E                     FSR1SH          equ	894	;# 
 23383   00037E                     FSR1L_SHAD      equ	894	;# 
 23384   00037F                     FSR1H_SHAD      equ	895	;# 
 23385   000380                     FSR2SH          equ	896	;# 
 23386   000380                     FSR2L_SHAD      equ	896	;# 
 23387   000381                     FSR2H_SHAD      equ	897	;# 
 23388   000382                     PRODSH          equ	898	;# 
 23389   000382                     PRODL_SHAD      equ	898	;# 
 23390   000383                     PRODH_SHAD      equ	899	;# 
 23391   000387                     TU16ACON0       equ	903	;# 
 23392   000388                     TU16ACON1       equ	904	;# 
 23393   000389                     TU16AHLT        equ	905	;# 
 23394   00038A                     TU16APS         equ	906	;# 
 23395   00038B                     TU16ATMR        equ	907	;# 
 23396   00038B                     TU16ACR         equ	907	;# 
 23397   00038B                     TU16ATMRL       equ	907	;# 
 23398   00038B                     TU16ACRL        equ	907	;# 
 23399   00038C                     TU16ATMRH       equ	908	;# 
 23400   00038C                     TU16ACRH        equ	908	;# 
 23401   00038D                     TU16APR         equ	909	;# 
 23402   00038D                     TU16APRL        equ	909	;# 
 23403   00038E                     TU16APRH        equ	910	;# 
 23404   00038F                     TU16ACLK        equ	911	;# 
 23405   000390                     TU16AERS        equ	912	;# 
 23406   000393                     TU16BCON0       equ	915	;# 
 23407   000394                     TU16BCON1       equ	916	;# 
 23408   000395                     TU16BHLT        equ	917	;# 
 23409   000396                     TU16BPS         equ	918	;# 
 23410   000397                     TU16BTMR        equ	919	;# 
 23411   000397                     TU16BCR         equ	919	;# 
 23412   000397                     TU16BTMRL       equ	919	;# 
 23413   000397                     TU16BCRL        equ	919	;# 
 23414   000398                     TU16BTMRH       equ	920	;# 
 23415   000398                     TU16BCRH        equ	920	;# 
 23416   000399                     TU16BPR         equ	921	;# 
 23417   000399                     TU16BPRL        equ	921	;# 
 23418   00039A                     TU16BPRH        equ	922	;# 
 23419   00039B                     TU16BCLK        equ	923	;# 
 23420   00039C                     TU16BERS        equ	924	;# 
 23421   0003BB                     TUCHAIN         equ	955	;# 
 23422   0003BC                     CWG1CLK         equ	956	;# 
 23423   0003BC                     CWG1CLKCON      equ	956	;# 
 23424   0003BD                     CWG1ISM         equ	957	;# 
 23425   0003BE                     CWG1DBR         equ	958	;# 
 23426   0003BF                     CWG1DBF         equ	959	;# 
 23427   0003C0                     CWG1CON0        equ	960	;# 
 23428   0003C1                     CWG1CON1        equ	961	;# 
 23429   0003C2                     CWG1AS0         equ	962	;# 
 23430   0003C3                     CWG1AS1         equ	963	;# 
 23431   0003C4                     CWG1STR         equ	964	;# 
 23432   0003C5                     CWG2CLK         equ	965	;# 
 23433   0003C5                     CWG2CLKCON      equ	965	;# 
 23434   0003C6                     CWG2ISM         equ	966	;# 
 23435   0003C7                     CWG2DBR         equ	967	;# 
 23436   0003C8                     CWG2DBF         equ	968	;# 
 23437   0003C9                     CWG2CON0        equ	969	;# 
 23438   0003CA                     CWG2CON1        equ	970	;# 
 23439   0003CB                     CWG2AS0         equ	971	;# 
 23440   0003CC                     CWG2AS1         equ	972	;# 
 23441   0003CD                     CWG2STR         equ	973	;# 
 23442   0003CE                     CWG3CLK         equ	974	;# 
 23443   0003CE                     CWG3CLKCON      equ	974	;# 
 23444   0003CF                     CWG3ISM         equ	975	;# 
 23445   0003D0                     CWG3DBR         equ	976	;# 
 23446   0003D1                     CWG3DBF         equ	977	;# 
 23447   0003D2                     CWG3CON0        equ	978	;# 
 23448   0003D3                     CWG3CON1        equ	979	;# 
 23449   0003D4                     CWG3AS0         equ	980	;# 
 23450   0003D5                     CWG3AS1         equ	981	;# 
 23451   0003D6                     CWG3STR         equ	982	;# 
 23452   0003D7                     FVRCON          equ	983	;# 
 23453   0003D8                     ADCPCON         equ	984	;# 
 23454   0003D8                     ADCP            equ	984	;# 
 23455   0003D9                     ADLTH           equ	985	;# 
 23456   0003D9                     ADLTHL          equ	985	;# 
 23457   0003DA                     ADLTHH          equ	986	;# 
 23458   0003DB                     ADUTH           equ	987	;# 
 23459   0003DB                     ADUTHL          equ	987	;# 
 23460   0003DC                     ADUTHH          equ	988	;# 
 23461   0003DD                     ADERR           equ	989	;# 
 23462   0003DD                     ADERRL          equ	989	;# 
 23463   0003DE                     ADERRH          equ	990	;# 
 23464   0003DF                     ADSTPT          equ	991	;# 
 23465   0003DF                     ADSTPTL         equ	991	;# 
 23466   0003E0                     ADSTPTH         equ	992	;# 
 23467   0003E1                     ADFLTR          equ	993	;# 
 23468   0003E1                     ADFLTRL         equ	993	;# 
 23469   0003E2                     ADFLTRH         equ	994	;# 
 23470   0003E3                     ADACC           equ	995	;# 
 23471   0003E3                     ADACCL          equ	995	;# 
 23472   0003E4                     ADACCH          equ	996	;# 
 23473   0003E5                     ADACCU          equ	997	;# 
 23474   0003E6                     ADCNT           equ	998	;# 
 23475   0003E7                     ADRPT           equ	999	;# 
 23476   0003E8                     ADPREV          equ	1000	;# 
 23477   0003E8                     ADPREVL         equ	1000	;# 
 23478   0003E9                     ADPREVH         equ	1001	;# 
 23479   0003EA                     ADRES           equ	1002	;# 
 23480   0003EA                     ADRESL          equ	1002	;# 
 23481   0003EB                     ADRESH          equ	1003	;# 
 23482   0003EC                     ADPCH           equ	1004	;# 
 23483   0003EE                     ADACQ           equ	1006	;# 
 23484   0003EE                     ADACQL          equ	1006	;# 
 23485   0003EF                     ADACQH          equ	1007	;# 
 23486   0003F0                     ADCAP           equ	1008	;# 
 23487   0003F1                     ADPRE           equ	1009	;# 
 23488   0003F1                     ADPREL          equ	1009	;# 
 23489   0003F2                     ADPREH          equ	1010	;# 
 23490   0003F3                     ADCON0          equ	1011	;# 
 23491   0003F4                     ADCON1          equ	1012	;# 
 23492   0003F5                     ADCON2          equ	1013	;# 
 23493   0003F6                     ADCON3          equ	1014	;# 
 23494   0003F7                     ADSTAT          equ	1015	;# 
 23495   0003F8                     ADREF           equ	1016	;# 
 23496   0003F9                     ADACT           equ	1017	;# 
 23497   0003FA                     ADCLK           equ	1018	;# 
 23498   0003FB                     ADCTX           equ	1019	;# 
 23499   0003FC                     ADCSEL1         equ	1020	;# 
 23500   0003FD                     ADCSEL2         equ	1021	;# 
 23501   0003FE                     ADCSEL3         equ	1022	;# 
 23502   0003FF                     ADCSEL4         equ	1023	;# 
 23503   000400                     ANSELA          equ	1024	;# 
 23504   000401                     WPUA            equ	1025	;# 
 23505   000402                     ODCONA          equ	1026	;# 
 23506   000403                     SLRCONA         equ	1027	;# 
 23507   000404                     INLVLA          equ	1028	;# 
 23508   000405                     IOCAP           equ	1029	;# 
 23509   000406                     IOCAN           equ	1030	;# 
 23510   000407                     IOCAF           equ	1031	;# 
 23511   000408                     ANSELB          equ	1032	;# 
 23512   000409                     WPUB            equ	1033	;# 
 23513   00040A                     ODCONB          equ	1034	;# 
 23514   00040B                     SLRCONB         equ	1035	;# 
 23515   00040C                     INLVLB          equ	1036	;# 
 23516   00040D                     IOCBP           equ	1037	;# 
 23517   00040E                     IOCBN           equ	1038	;# 
 23518   00040F                     IOCBF           equ	1039	;# 
 23519   000410                     ANSELC          equ	1040	;# 
 23520   000411                     WPUC            equ	1041	;# 
 23521   000412                     ODCONC          equ	1042	;# 
 23522   000413                     SLRCONC         equ	1043	;# 
 23523   000414                     INLVLC          equ	1044	;# 
 23524   000415                     IOCCP           equ	1045	;# 
 23525   000416                     IOCCN           equ	1046	;# 
 23526   000417                     IOCCF           equ	1047	;# 
 23527   000421                     WPUE            equ	1057	;# 
 23528   000424                     INLVLE          equ	1060	;# 
 23529   000425                     IOCEP           equ	1061	;# 
 23530   000426                     IOCEN           equ	1062	;# 
 23531   000427                     IOCEF           equ	1063	;# 
 23532   000440                     NCO1ACC         equ	1088	;# 
 23533   000440                     NCO1ACCL        equ	1088	;# 
 23534   000441                     NCO1ACCH        equ	1089	;# 
 23535   000442                     NCO1ACCU        equ	1090	;# 
 23536   000443                     NCO1INC         equ	1091	;# 
 23537   000443                     NCO1INCL        equ	1091	;# 
 23538   000444                     NCO1INCH        equ	1092	;# 
 23539   000445                     NCO1INCU        equ	1093	;# 
 23540   000446                     NCO1CON         equ	1094	;# 
 23541   000447                     NCO1CLK         equ	1095	;# 
 23542   000448                     NCO2ACC         equ	1096	;# 
 23543   000448                     NCO2ACCL        equ	1096	;# 
 23544   000449                     NCO2ACCH        equ	1097	;# 
 23545   00044A                     NCO2ACCU        equ	1098	;# 
 23546   00044B                     NCO2INC         equ	1099	;# 
 23547   00044B                     NCO2INCL        equ	1099	;# 
 23548   00044C                     NCO2INCH        equ	1100	;# 
 23549   00044D                     NCO2INCU        equ	1101	;# 
 23550   00044E                     NCO2CON         equ	1102	;# 
 23551   00044F                     NCO2CLK         equ	1103	;# 
 23552   000450                     NCO3ACC         equ	1104	;# 
 23553   000450                     NCO3ACCL        equ	1104	;# 
 23554   000451                     NCO3ACCH        equ	1105	;# 
 23555   000452                     NCO3ACCU        equ	1106	;# 
 23556   000453                     NCO3INC         equ	1107	;# 
 23557   000453                     NCO3INCL        equ	1107	;# 
 23558   000454                     NCO3INCH        equ	1108	;# 
 23559   000455                     NCO3INCU        equ	1109	;# 
 23560   000456                     NCO3CON         equ	1110	;# 
 23561   000457                     NCO3CLK         equ	1111	;# 
 23562   000458                     FSCMCON         equ	1112	;# 
 23563   000459                     IVTLOCK         equ	1113	;# 
 23564   00045A                     IVTAD           equ	1114	;# 
 23565   00045A                     IVTADL          equ	1114	;# 
 23566   00045B                     IVTADH          equ	1115	;# 
 23567   00045C                     IVTADU          equ	1116	;# 
 23568   00045D                     IVTBASE         equ	1117	;# 
 23569   00045D                     IVTBASEL        equ	1117	;# 
 23570   00045E                     IVTBASEH        equ	1118	;# 
 23571   00045F                     IVTBASEU        equ	1119	;# 
 23572   000460                     PWM1ERS         equ	1120	;# 
 23573   000461                     PWM1CLK         equ	1121	;# 
 23574   000462                     PWM1LDS         equ	1122	;# 
 23575   000463                     PWM1PR          equ	1123	;# 
 23576   000463                     PWM1PRL         equ	1123	;# 
 23577   000464                     PWM1PRH         equ	1124	;# 
 23578   000465                     PWM1CPRE        equ	1125	;# 
 23579   000466                     PWM1PIPOS       equ	1126	;# 
 23580   000467                     PWM1GIR         equ	1127	;# 
 23581   000468                     PWM1GIE         equ	1128	;# 
 23582   000469                     PWM1CON         equ	1129	;# 
 23583   00046A                     PWM1S1CFG       equ	1130	;# 
 23584   00046B                     PWM1S1P1        equ	1131	;# 
 23585   00046B                     PWM1S1P1L       equ	1131	;# 
 23586   00046C                     PWM1S1P1H       equ	1132	;# 
 23587   00046D                     PWM1S1P2        equ	1133	;# 
 23588   00046D                     PWM1S1P2L       equ	1133	;# 
 23589   00046E                     PWM1S1P2H       equ	1134	;# 
 23590   00046F                     PWM2ERS         equ	1135	;# 
 23591   000470                     PWM2CLK         equ	1136	;# 
 23592   000471                     PWM2LDS         equ	1137	;# 
 23593   000472                     PWM2PR          equ	1138	;# 
 23594   000472                     PWM2PRL         equ	1138	;# 
 23595   000473                     PWM2PRH         equ	1139	;# 
 23596   000474                     PWM2CPRE        equ	1140	;# 
 23597   000475                     PWM2PIPOS       equ	1141	;# 
 23598   000476                     PWM2GIR         equ	1142	;# 
 23599   000477                     PWM2GIE         equ	1143	;# 
 23600   000478                     PWM2CON         equ	1144	;# 
 23601   000479                     PWM2S1CFG       equ	1145	;# 
 23602   00047A                     PWM2S1P1        equ	1146	;# 
 23603   00047A                     PWM2S1P1L       equ	1146	;# 
 23604   00047B                     PWM2S1P1H       equ	1147	;# 
 23605   00047C                     PWM2S1P2        equ	1148	;# 
 23606   00047C                     PWM2S1P2L       equ	1148	;# 
 23607   00047D                     PWM2S1P2H       equ	1149	;# 
 23608   00047E                     PWM3ERS         equ	1150	;# 
 23609   00047F                     PWM3CLK         equ	1151	;# 
 23610   000480                     PWM3LDS         equ	1152	;# 
 23611   000481                     PWM3PR          equ	1153	;# 
 23612   000481                     PWM3PRL         equ	1153	;# 
 23613   000482                     PWM3PRH         equ	1154	;# 
 23614   000483                     PWM3CPRE        equ	1155	;# 
 23615   000484                     PWM3PIPOS       equ	1156	;# 
 23616   000485                     PWM3GIR         equ	1157	;# 
 23617   000486                     PWM3GIE         equ	1158	;# 
 23618   000487                     PWM3CON         equ	1159	;# 
 23619   000488                     PWM3S1CFG       equ	1160	;# 
 23620   000489                     PWM3S1P1        equ	1161	;# 
 23621   000489                     PWM3S1P1L       equ	1161	;# 
 23622   00048A                     PWM3S1P1H       equ	1162	;# 
 23623   00048B                     PWM3S1P2        equ	1163	;# 
 23624   00048B                     PWM3S1P2L       equ	1163	;# 
 23625   00048C                     PWM3S1P2H       equ	1164	;# 
 23626   00048D                     PWM4ERS         equ	1165	;# 
 23627   00048E                     PWM4CLK         equ	1166	;# 
 23628   00048F                     PWM4LDS         equ	1167	;# 
 23629   000490                     PWM4PR          equ	1168	;# 
 23630   000490                     PWM4PRL         equ	1168	;# 
 23631   000491                     PWM4PRH         equ	1169	;# 
 23632   000492                     PWM4CPRE        equ	1170	;# 
 23633   000493                     PWM4PIPOS       equ	1171	;# 
 23634   000494                     PWM4GIR         equ	1172	;# 
 23635   000495                     PWM4GIE         equ	1173	;# 
 23636   000496                     PWM4CON         equ	1174	;# 
 23637   000497                     PWM4S1CFG       equ	1175	;# 
 23638   000498                     PWM4S1P1        equ	1176	;# 
 23639   000498                     PWM4S1P1L       equ	1176	;# 
 23640   000499                     PWM4S1P1H       equ	1177	;# 
 23641   00049A                     PWM4S1P2        equ	1178	;# 
 23642   00049A                     PWM4S1P2L       equ	1178	;# 
 23643   00049B                     PWM4S1P2H       equ	1179	;# 
 23644   00049C                     PWMLOAD         equ	1180	;# 
 23645   00049D                     PWMEN           equ	1181	;# 
 23646   00049E                     PIE0            equ	1182	;# 
 23647   00049F                     PIE1            equ	1183	;# 
 23648   0004A0                     PIE2            equ	1184	;# 
 23649   0004A1                     PIE3            equ	1185	;# 
 23650   0004A2                     PIE4            equ	1186	;# 
 23651   0004A3                     PIE5            equ	1187	;# 
 23652   0004A4                     PIE6            equ	1188	;# 
 23653   0004A5                     PIE7            equ	1189	;# 
 23654   0004A6                     PIE8            equ	1190	;# 
 23655   0004A7                     PIE9            equ	1191	;# 
 23656   0004A8                     PIE10           equ	1192	;# 
 23657   0004A9                     PIE11           equ	1193	;# 
 23658   0004AA                     PIE12           equ	1194	;# 
 23659   0004AB                     PIE13           equ	1195	;# 
 23660   0004AC                     PIE14           equ	1196	;# 
 23661   0004AD                     PIE15           equ	1197	;# 
 23662   0004AE                     PIR0            equ	1198	;# 
 23663   0004AF                     PIR1            equ	1199	;# 
 23664   0004B0                     PIR2            equ	1200	;# 
 23665   0004B1                     PIR3            equ	1201	;# 
 23666   0004B2                     PIR4            equ	1202	;# 
 23667   0004B3                     PIR5            equ	1203	;# 
 23668   0004B4                     PIR6            equ	1204	;# 
 23669   0004B5                     PIR7            equ	1205	;# 
 23670   0004B6                     PIR8            equ	1206	;# 
 23671   0004B7                     PIR9            equ	1207	;# 
 23672   0004B8                     PIR10           equ	1208	;# 
 23673   0004B9                     PIR11           equ	1209	;# 
 23674   0004BA                     PIR12           equ	1210	;# 
 23675   0004BB                     PIR13           equ	1211	;# 
 23676   0004BC                     PIR14           equ	1212	;# 
 23677   0004BD                     PIR15           equ	1213	;# 
 23678   0004BE                     LATA            equ	1214	;# 
 23679   0004BF                     LATB            equ	1215	;# 
 23680   0004C0                     LATC            equ	1216	;# 
 23681   0004C6                     TRISA           equ	1222	;# 
 23682   0004C7                     TRISB           equ	1223	;# 
 23683   0004C8                     TRISC           equ	1224	;# 
 23684   0004CA                     TRISE           equ	1226	;# 
 23685   0004CE                     PORTA           equ	1230	;# 
 23686   0004CF                     PORTB           equ	1231	;# 
 23687   0004D0                     PORTC           equ	1232	;# 
 23688   0004D2                     PORTE           equ	1234	;# 
 23689   0004D6                     INTCON0         equ	1238	;# 
 23690   0004D7                     INTCON1         equ	1239	;# 
 23691   0004D8                     STATUS          equ	1240	;# 
 23692   0004D9                     FSR2            equ	1241	;# 
 23693   0004D9                     FSR2L           equ	1241	;# 
 23694   0004DA                     FSR2H           equ	1242	;# 
 23695   0004DB                     PLUSW2          equ	1243	;# 
 23696   0004DC                     PREINC2         equ	1244	;# 
 23697   0004DD                     POSTDEC2        equ	1245	;# 
 23698   0004DE                     POSTINC2        equ	1246	;# 
 23699   0004DF                     INDF2           equ	1247	;# 
 23700   0004E0                     BSR             equ	1248	;# 
 23701   0004E1                     FSR1            equ	1249	;# 
 23702   0004E1                     FSR1L           equ	1249	;# 
 23703   0004E2                     FSR1H           equ	1250	;# 
 23704   0004E3                     PLUSW1          equ	1251	;# 
 23705   0004E4                     PREINC1         equ	1252	;# 
 23706   0004E5                     POSTDEC1        equ	1253	;# 
 23707   0004E6                     POSTINC1        equ	1254	;# 
 23708   0004E7                     INDF1           equ	1255	;# 
 23709   0004E8                     WREG            equ	1256	;# 
 23710   0004E9                     FSR0            equ	1257	;# 
 23711   0004E9                     FSR0L           equ	1257	;# 
 23712   0004EA                     FSR0H           equ	1258	;# 
 23713   0004EB                     PLUSW0          equ	1259	;# 
 23714   0004EC                     PREINC0         equ	1260	;# 
 23715   0004ED                     POSTDEC0        equ	1261	;# 
 23716   0004EE                     POSTINC0        equ	1262	;# 
 23717   0004EF                     INDF0           equ	1263	;# 
 23718   0004F0                     PCON0           equ	1264	;# 
 23719   0004F1                     PCON1           equ	1265	;# 
 23720   0004F2                     CPUDOZE         equ	1266	;# 
 23721   0004F3                     PROD            equ	1267	;# 
 23722   0004F3                     PRODL           equ	1267	;# 
 23723   0004F4                     PRODH           equ	1268	;# 
 23724   0004F5                     TABLAT          equ	1269	;# 
 23725   0004F6                     TBLPTR          equ	1270	;# 
 23726   0004F6                     TBLPTRL         equ	1270	;# 
 23727   0004F7                     TBLPTRH         equ	1271	;# 
 23728   0004F8                     TBLPTRU         equ	1272	;# 
 23729   0004F9                     PCLAT           equ	1273	;# 
 23730   0004F9                     PCL             equ	1273	;# 
 23731   0004FA                     PCLATH          equ	1274	;# 
 23732   0004FB                     PCLATU          equ	1275	;# 
 23733   0004FC                     STKPTR          equ	1276	;# 
 23734   0004FD                     TOS             equ	1277	;# 
 23735   0004FD                     TOSL            equ	1277	;# 
 23736   0004FE                     TOSH            equ	1278	;# 
 23737   0004FF                     TOSU            equ	1279	;# 
 23738   000038                     BOOTREG         equ	56	;# 
 23739   000039                     CLKRCON         equ	57	;# 
 23740   00003A                     CLKRCLK         equ	58	;# 
 23741   000040                     NVMCON0         equ	64	;# 
 23742   000041                     NVMCON1         equ	65	;# 
 23743   000042                     NVMLOCK         equ	66	;# 
 23744   000043                     NVMADR          equ	67	;# 
 23745   000043                     NVMADRL         equ	67	;# 
 23746   000044                     NVMADRH         equ	68	;# 
 23747   000045                     NVMADRU         equ	69	;# 
 23748   000046                     NVMDAT          equ	70	;# 
 23749   000046                     NVMDATL         equ	70	;# 
 23750   000047                     NVMDATH         equ	71	;# 
 23751   000048                     VREGCON         equ	72	;# 
 23752   000049                     BORCON          equ	73	;# 
 23753   00004A                     HLVDCON0        equ	74	;# 
 23754   00004B                     HLVDCON1        equ	75	;# 
 23755   00004C                     ZCDCON          equ	76	;# 
 23756   000060                     PMD0            equ	96	;# 
 23757   000061                     PMD1            equ	97	;# 
 23758   000062                     PMD2            equ	98	;# 
 23759   000063                     PMD3            equ	99	;# 
 23760   000064                     PMD4            equ	100	;# 
 23761   000065                     PMD5            equ	101	;# 
 23762   000066                     PMD6            equ	102	;# 
 23763   000067                     PMD7            equ	103	;# 
 23764   000068                     PMD8            equ	104	;# 
 23765   00006A                     MD1CON0         equ	106	;# 
 23766   00006B                     MD1CON1         equ	107	;# 
 23767   00006C                     MD1SRC          equ	108	;# 
 23768   00006D                     MD1CARL         equ	109	;# 
 23769   00006E                     MD1CARH         equ	110	;# 
 23770   00006F                     CMOUT           equ	111	;# 
 23771   000070                     CM1CON0         equ	112	;# 
 23772   000071                     CM1CON1         equ	113	;# 
 23773   000072                     CM1NCH          equ	114	;# 
 23774   000073                     CM1PCH          equ	115	;# 
 23775   000074                     CM2CON0         equ	116	;# 
 23776   000075                     CM2CON1         equ	117	;# 
 23777   000076                     CM2NCH          equ	118	;# 
 23778   000077                     CM2PCH          equ	119	;# 
 23779   000078                     WDTCON0         equ	120	;# 
 23780   000079                     WDTCON1         equ	121	;# 
 23781   00007A                     WDTPSL          equ	122	;# 
 23782   00007B                     WDTPSH          equ	123	;# 
 23783   00007C                     WDTTMR          equ	124	;# 
 23784   00007D                     DAC1DAT         equ	125	;# 
 23785   00007D                     DAC1DATL        equ	125	;# 
 23786   00007F                     DAC1CON         equ	127	;# 
 23787   000080                     SPI1RXB         equ	128	;# 
 23788   000081                     SPI1TXB         equ	129	;# 
 23789   000082                     SPI1TCNT        equ	130	;# 
 23790   000082                     SPI1TCNTL       equ	130	;# 
 23791   000083                     SPI1TCNTH       equ	131	;# 
 23792   000084                     SPI1CON0        equ	132	;# 
 23793   000085                     SPI1CON1        equ	133	;# 
 23794   000086                     SPI1CON2        equ	134	;# 
 23795   000087                     SPI1STATUS      equ	135	;# 
 23796   000088                     SPI1TWIDTH      equ	136	;# 
 23797   000089                     SPI1BAUD        equ	137	;# 
 23798   00008A                     SPI1INTF        equ	138	;# 
 23799   00008B                     SPI1INTE        equ	139	;# 
 23800   00008C                     SPI1CLK         equ	140	;# 
 23801   00008D                     SPI2RXB         equ	141	;# 
 23802   00008E                     SPI2TXB         equ	142	;# 
 23803   00008F                     SPI2TCNT        equ	143	;# 
 23804   00008F                     SPI2TCNTL       equ	143	;# 
 23805   000090                     SPI2TCNTH       equ	144	;# 
 23806   000091                     SPI2CON0        equ	145	;# 
 23807   000092                     SPI2CON1        equ	146	;# 
 23808   000093                     SPI2CON2        equ	147	;# 
 23809   000094                     SPI2STATUS      equ	148	;# 
 23810   000095                     SPI2TWIDTH      equ	149	;# 
 23811   000096                     SPI2BAUD        equ	150	;# 
 23812   000097                     SPI2INTF        equ	151	;# 
 23813   000098                     SPI2INTE        equ	152	;# 
 23814   000099                     SPI2CLK         equ	153	;# 
 23815   0000AC                     ACTCON          equ	172	;# 
 23816   0000AD                     OSCCON1         equ	173	;# 
 23817   0000AE                     OSCCON2         equ	174	;# 
 23818   0000AF                     OSCCON3         equ	175	;# 
 23819   0000B0                     OSCTUNE         equ	176	;# 
 23820   0000B1                     OSCFRQ          equ	177	;# 
 23821   0000B1                     OSCFREQ         equ	177	;# 
 23822   0000B2                     OSCSTAT         equ	178	;# 
 23823   0000B2                     OSCSTAT1        equ	178	;# 
 23824   0000B3                     OSCEN           equ	179	;# 
 23825   0000B4                     PRLOCK          equ	180	;# 
 23826   0000B5                     SCANPR          equ	181	;# 
 23827   0000B6                     DMA1PR          equ	182	;# 
 23828   0000B7                     DMA2PR          equ	183	;# 
 23829   0000B8                     DMA3PR          equ	184	;# 
 23830   0000B9                     DMA4PR          equ	185	;# 
 23831   0000BA                     DMA5PR          equ	186	;# 
 23832   0000BB                     DMA6PR          equ	187	;# 
 23833   0000BC                     DMA7PR          equ	188	;# 
 23834   0000BD                     DMA8PR          equ	189	;# 
 23835   0000BE                     MAINPR          equ	190	;# 
 23836   0000BF                     ISRPR           equ	191	;# 
 23837   0000D4                     CLCDATA         equ	212	;# 
 23838   0000D5                     CLCSELECT       equ	213	;# 
 23839   0000D6                     CLCnCON         equ	214	;# 
 23840   0000D7                     CLCnPOL         equ	215	;# 
 23841   0000D8                     CLCnSEL0        equ	216	;# 
 23842   0000D9                     CLCnSEL1        equ	217	;# 
 23843   0000DA                     CLCnSEL2        equ	218	;# 
 23844   0000DB                     CLCnSEL3        equ	219	;# 
 23845   0000DC                     CLCnGLS0        equ	220	;# 
 23846   0000DD                     CLCnGLS1        equ	221	;# 
 23847   0000DE                     CLCnGLS2        equ	222	;# 
 23848   0000DF                     CLCnGLS3        equ	223	;# 
 23849   0000E8                     DMASELECT       equ	232	;# 
 23850   0000E9                     DMAnBUF         equ	233	;# 
 23851   0000EA                     DMAnDCNT        equ	234	;# 
 23852   0000EA                     DMAnDCNTL       equ	234	;# 
 23853   0000EB                     DMAnDCNTH       equ	235	;# 
 23854   0000EC                     DMAnDPTR        equ	236	;# 
 23855   0000EC                     DMAnDPTRL       equ	236	;# 
 23856   0000ED                     DMAnDPTRH       equ	237	;# 
 23857   0000EE                     DMAnDSZ         equ	238	;# 
 23858   0000EE                     DMAnDSZL        equ	238	;# 
 23859   0000EF                     DMAnDSZH        equ	239	;# 
 23860   0000F0                     DMAnDSA         equ	240	;# 
 23861   0000F0                     DMAnDSAL        equ	240	;# 
 23862   0000F1                     DMAnDSAH        equ	241	;# 
 23863   0000F2                     DMAnSCNT        equ	242	;# 
 23864   0000F2                     DMAnSCNTL       equ	242	;# 
 23865   0000F3                     DMAnSCNTH       equ	243	;# 
 23866   0000F4                     DMAnSPTR        equ	244	;# 
 23867   0000F4                     DMAnSPTRL       equ	244	;# 
 23868   0000F5                     DMAnSPTRH       equ	245	;# 
 23869   0000F6                     DMAnSPTRU       equ	246	;# 
 23870   0000F7                     DMAnSSZ         equ	247	;# 
 23871   0000F7                     DMAnSSZL        equ	247	;# 
 23872   0000F8                     DMAnSSZH        equ	248	;# 
 23873   0000F9                     DMAnSSA         equ	249	;# 
 23874   0000F9                     DMAnSSAL        equ	249	;# 
 23875   0000FA                     DMAnSSAH        equ	250	;# 
 23876   0000FB                     DMAnSSAU        equ	251	;# 
 23877   0000FC                     DMAnCON0        equ	252	;# 
 23878   0000FD                     DMAnCON1        equ	253	;# 
 23879   0000FE                     DMAnAIRQ        equ	254	;# 
 23880   0000FF                     DMAnSIRQ        equ	255	;# 
 23881   000100                     C1CONL          equ	256	;# 
 23882   000101                     C1CONH          equ	257	;# 
 23883   000102                     C1CONU          equ	258	;# 
 23884   000103                     C1CONT          equ	259	;# 
 23885   000104                     C1NBTCFGL       equ	260	;# 
 23886   000105                     C1NBTCFGH       equ	261	;# 
 23887   000106                     C1NBTCFGU       equ	262	;# 
 23888   000107                     C1NBTCFGT       equ	263	;# 
 23889   000108                     C1DBTCFGL       equ	264	;# 
 23890   000109                     C1DBTCFGH       equ	265	;# 
 23891   00010A                     C1DBTCFGU       equ	266	;# 
 23892   00010B                     C1DBTCFGT       equ	267	;# 
 23893   00010C                     C1TDCL          equ	268	;# 
 23894   00010D                     C1TDCH          equ	269	;# 
 23895   00010E                     C1TDCU          equ	270	;# 
 23896   000110                     C1TBC           equ	272	;# 
 23897   000110                     C1TBCL          equ	272	;# 
 23898   000111                     C1TBCH          equ	273	;# 
 23899   000112                     C1TBCU          equ	274	;# 
 23900   000113                     C1TBCT          equ	275	;# 
 23901   000114                     C1TSCONL        equ	276	;# 
 23902   000115                     C1TSCONH        equ	277	;# 
 23903   000116                     C1TSCONU        equ	278	;# 
 23904   000117                     C1TSCONT        equ	279	;# 
 23905   000118                     C1VECL          equ	280	;# 
 23906   000119                     C1VECH          equ	281	;# 
 23907   00011A                     C1VECU          equ	282	;# 
 23908   00011B                     C1VECT          equ	283	;# 
 23909   00011C                     C1INTL          equ	284	;# 
 23910   00011D                     C1INTH          equ	285	;# 
 23911   00011E                     C1INTU          equ	286	;# 
 23912   00011F                     C1INTT          equ	287	;# 
 23913   000120                     C1RXIF          equ	288	;# 
 23914   000120                     C1RXIFL         equ	288	;# 
 23915   000121                     C1RXIFH         equ	289	;# 
 23916   000122                     C1RXIFU         equ	290	;# 
 23917   000123                     C1RXIFT         equ	291	;# 
 23918   000124                     C1TXIF          equ	292	;# 
 23919   000124                     C1TXIFL         equ	292	;# 
 23920   000125                     C1TXIFH         equ	293	;# 
 23921   000126                     C1TXIFU         equ	294	;# 
 23922   000127                     C1TXIFT         equ	295	;# 
 23923   000128                     C1RXOVIF        equ	296	;# 
 23924   000128                     C1RXOVIFL       equ	296	;# 
 23925   000129                     C1RXOVIFH       equ	297	;# 
 23926   00012A                     C1RXOVIFU       equ	298	;# 
 23927   00012B                     C1RXOVIFT       equ	299	;# 
 23928   00012C                     C1TXATIF        equ	300	;# 
 23929   00012C                     C1TXATIFL       equ	300	;# 
 23930   00012D                     C1TXATIFH       equ	301	;# 
 23931   00012E                     C1TXATIFU       equ	302	;# 
 23932   00012F                     C1TXATIFT       equ	303	;# 
 23933   000130                     C1TXREQ         equ	304	;# 
 23934   000130                     C1TXREQL        equ	304	;# 
 23935   000131                     C1TXREQH        equ	305	;# 
 23936   000132                     C1TXREQU        equ	306	;# 
 23937   000133                     C1TXREQT        equ	307	;# 
 23938   000134                     C1TRECL         equ	308	;# 
 23939   000135                     C1TRECH         equ	309	;# 
 23940   000136                     C1TRECU         equ	310	;# 
 23941   000137                     C1TRECT         equ	311	;# 
 23942   000138                     C1BDIAG0L       equ	312	;# 
 23943   000139                     C1BDIAG0H       equ	313	;# 
 23944   00013C                     C1BDIAG1L       equ	316	;# 
 23945   00013D                     C1BDIAG1H       equ	317	;# 
 23946   00013E                     C1BDIAG1U       equ	318	;# 
 23947   00013F                     C1BDIAG1T       equ	319	;# 
 23948   000140                     C1TEFCONL       equ	320	;# 
 23949   000141                     C1TEFCONH       equ	321	;# 
 23950   000142                     C1TEFCONU       equ	322	;# 
 23951   000143                     C1TEFCONT       equ	323	;# 
 23952   000144                     C1TEFSTAL       equ	324	;# 
 23953   000145                     C1TEFSTAH       equ	325	;# 
 23954   000146                     C1TEFSTAU       equ	326	;# 
 23955   000147                     C1TEFSTAT       equ	327	;# 
 23956   000148                     C1TEFUA         equ	328	;# 
 23957   000148                     C1TEFUAL        equ	328	;# 
 23958   000149                     C1TEFUAH        equ	329	;# 
 23959   00014A                     C1TEFUAU        equ	330	;# 
 23960   00014B                     C1TEFUAT        equ	331	;# 
 23961   00014C                     C1FIFOBA        equ	332	;# 
 23962   00014C                     C1FIFOBAL       equ	332	;# 
 23963   00014D                     C1FIFOBAH       equ	333	;# 
 23964   00014E                     C1FIFOBAU       equ	334	;# 
 23965   00014F                     C1FIFOBAT       equ	335	;# 
 23966   000150                     C1TXQCONL       equ	336	;# 
 23967   000151                     C1TXQCONH       equ	337	;# 
 23968   000152                     C1TXQCONU       equ	338	;# 
 23969   000153                     C1TXQCONT       equ	339	;# 
 23970   000154                     C1TXQSTAL       equ	340	;# 
 23971   000155                     C1TXQSTAH       equ	341	;# 
 23972   000156                     C1TXQSTAU       equ	342	;# 
 23973   000157                     C1TXQSTAT       equ	343	;# 
 23974   000158                     C1TXQUA         equ	344	;# 
 23975   000158                     C1TXQUAL        equ	344	;# 
 23976   000159                     C1TXQUAH        equ	345	;# 
 23977   00015A                     C1TXQUAU        equ	346	;# 
 23978   00015B                     C1TXQUAT        equ	347	;# 
 23979   00015C                     C1FIFOCON1      equ	348	;# 
 23980   00015C                     C1FIFOCON1L     equ	348	;# 
 23981   00015D                     C1FIFOCON1H     equ	349	;# 
 23982   00015E                     C1FIFOCON1U     equ	350	;# 
 23983   00015F                     C1FIFOCON1T     equ	351	;# 
 23984   000160                     C1FIFOSTA1      equ	352	;# 
 23985   000160                     C1FIFOSTA1L     equ	352	;# 
 23986   000161                     C1FIFOSTA1H     equ	353	;# 
 23987   000162                     C1FIFOSTA1U     equ	354	;# 
 23988   000163                     C1FIFOSTA1T     equ	355	;# 
 23989   000164                     C1FIFOUA1       equ	356	;# 
 23990   000164                     C1FIFOUA1L      equ	356	;# 
 23991   000165                     C1FIFOUA1H      equ	357	;# 
 23992   000166                     C1FIFOUA1U      equ	358	;# 
 23993   000167                     C1FIFOUA1T      equ	359	;# 
 23994   000168                     C1FIFOCON2      equ	360	;# 
 23995   000168                     C1FIFOCON2L     equ	360	;# 
 23996   000169                     C1FIFOCON2H     equ	361	;# 
 23997   00016A                     C1FIFOCON2U     equ	362	;# 
 23998   00016B                     C1FIFOCON2T     equ	363	;# 
 23999   00016C                     C1FIFOSTA2      equ	364	;# 
 24000   00016C                     C1FIFOSTA2L     equ	364	;# 
 24001   00016D                     C1FIFOSTA2H     equ	365	;# 
 24002   00016E                     C1FIFOSTA2U     equ	366	;# 
 24003   00016F                     C1FIFOSTA2T     equ	367	;# 
 24004   000170                     C1FIFOUA2       equ	368	;# 
 24005   000170                     C1FIFOUA2L      equ	368	;# 
 24006   000171                     C1FIFOUA2H      equ	369	;# 
 24007   000172                     C1FIFOUA2U      equ	370	;# 
 24008   000173                     C1FIFOUA2T      equ	371	;# 
 24009   000174                     C1FIFOCON3      equ	372	;# 
 24010   000174                     C1FIFOCON3L     equ	372	;# 
 24011   000175                     C1FIFOCON3H     equ	373	;# 
 24012   000176                     C1FIFOCON3U     equ	374	;# 
 24013   000177                     C1FIFOCON3T     equ	375	;# 
 24014   000178                     C1FIFOSTA3      equ	376	;# 
 24015   000178                     C1FIFOSTA3L     equ	376	;# 
 24016   000179                     C1FIFOSTA3H     equ	377	;# 
 24017   00017A                     C1FIFOSTA3U     equ	378	;# 
 24018   00017B                     C1FIFOSTA3T     equ	379	;# 
 24019   00017C                     C1FIFOUA3       equ	380	;# 
 24020   00017C                     C1FIFOUA3L      equ	380	;# 
 24021   00017D                     C1FIFOUA3H      equ	381	;# 
 24022   00017E                     C1FIFOUA3U      equ	382	;# 
 24023   00017F                     C1FIFOUA3T      equ	383	;# 
 24024   000180                     C1FLTCON0L      equ	384	;# 
 24025   000181                     C1FLTCON0H      equ	385	;# 
 24026   000182                     C1FLTCON0U      equ	386	;# 
 24027   000183                     C1FLTCON0T      equ	387	;# 
 24028   000184                     C1FLTCON1L      equ	388	;# 
 24029   000185                     C1FLTCON1H      equ	389	;# 
 24030   000186                     C1FLTCON1U      equ	390	;# 
 24031   000187                     C1FLTCON1T      equ	391	;# 
 24032   000188                     C1FLTCON2L      equ	392	;# 
 24033   000189                     C1FLTCON2H      equ	393	;# 
 24034   00018A                     C1FLTCON2U      equ	394	;# 
 24035   00018B                     C1FLTCON2T      equ	395	;# 
 24036   00018C                     C1FLTOBJ0       equ	396	;# 
 24037   00018C                     C1FLTOBJ0L      equ	396	;# 
 24038   00018D                     C1FLTOBJ0H      equ	397	;# 
 24039   00018E                     C1FLTOBJ0U      equ	398	;# 
 24040   00018F                     C1FLTOBJ0T      equ	399	;# 
 24041   000190                     C1MASK0         equ	400	;# 
 24042   000190                     C1MASK0L        equ	400	;# 
 24043   000191                     C1MASK0H        equ	401	;# 
 24044   000192                     C1MASK0U        equ	402	;# 
 24045   000193                     C1MASK0T        equ	403	;# 
 24046   000194                     C1FLTOBJ1       equ	404	;# 
 24047   000194                     C1FLTOBJ1L      equ	404	;# 
 24048   000195                     C1FLTOBJ1H      equ	405	;# 
 24049   000196                     C1FLTOBJ1U      equ	406	;# 
 24050   000197                     C1FLTOBJ1T      equ	407	;# 
 24051   000198                     C1MASK1         equ	408	;# 
 24052   000198                     C1MASK1L        equ	408	;# 
 24053   000199                     C1MASK1H        equ	409	;# 
 24054   00019A                     C1MASK1U        equ	410	;# 
 24055   00019B                     C1MASK1T        equ	411	;# 
 24056   00019C                     C1FLTOBJ2       equ	412	;# 
 24057   00019C                     C1FLTOBJ2L      equ	412	;# 
 24058   00019D                     C1FLTOBJ2H      equ	413	;# 
 24059   00019E                     C1FLTOBJ2U      equ	414	;# 
 24060   00019F                     C1FLTOBJ2T      equ	415	;# 
 24061   0001A0                     C1MASK2         equ	416	;# 
 24062   0001A0                     C1MASK2L        equ	416	;# 
 24063   0001A1                     C1MASK2H        equ	417	;# 
 24064   0001A2                     C1MASK2U        equ	418	;# 
 24065   0001A3                     C1MASK2T        equ	419	;# 
 24066   0001A4                     C1FLTOBJ3       equ	420	;# 
 24067   0001A4                     C1FLTOBJ3L      equ	420	;# 
 24068   0001A5                     C1FLTOBJ3H      equ	421	;# 
 24069   0001A6                     C1FLTOBJ3U      equ	422	;# 
 24070   0001A7                     C1FLTOBJ3T      equ	423	;# 
 24071   0001A8                     C1MASK3         equ	424	;# 
 24072   0001A8                     C1MASK3L        equ	424	;# 
 24073   0001A9                     C1MASK3H        equ	425	;# 
 24074   0001AA                     C1MASK3U        equ	426	;# 
 24075   0001AB                     C1MASK3T        equ	427	;# 
 24076   0001AC                     C1FLTOBJ4       equ	428	;# 
 24077   0001AC                     C1FLTOBJ4L      equ	428	;# 
 24078   0001AD                     C1FLTOBJ4H      equ	429	;# 
 24079   0001AE                     C1FLTOBJ4U      equ	430	;# 
 24080   0001AF                     C1FLTOBJ4T      equ	431	;# 
 24081   0001B0                     C1MASK4         equ	432	;# 
 24082   0001B0                     C1MASK4L        equ	432	;# 
 24083   0001B1                     C1MASK4H        equ	433	;# 
 24084   0001B2                     C1MASK4U        equ	434	;# 
 24085   0001B3                     C1MASK4T        equ	435	;# 
 24086   0001B4                     C1FLTOBJ5       equ	436	;# 
 24087   0001B4                     C1FLTOBJ5L      equ	436	;# 
 24088   0001B5                     C1FLTOBJ5H      equ	437	;# 
 24089   0001B6                     C1FLTOBJ5U      equ	438	;# 
 24090   0001B7                     C1FLTOBJ5T      equ	439	;# 
 24091   0001B8                     C1MASK5         equ	440	;# 
 24092   0001B8                     C1MASK5L        equ	440	;# 
 24093   0001B9                     C1MASK5H        equ	441	;# 
 24094   0001BA                     C1MASK5U        equ	442	;# 
 24095   0001BB                     C1MASK5T        equ	443	;# 
 24096   0001BC                     C1FLTOBJ6       equ	444	;# 
 24097   0001BC                     C1FLTOBJ6L      equ	444	;# 
 24098   0001BD                     C1FLTOBJ6H      equ	445	;# 
 24099   0001BE                     C1FLTOBJ6U      equ	446	;# 
 24100   0001BF                     C1FLTOBJ6T      equ	447	;# 
 24101   0001C0                     C1MASK6         equ	448	;# 
 24102   0001C0                     C1MASK6L        equ	448	;# 
 24103   0001C1                     C1MASK6H        equ	449	;# 
 24104   0001C2                     C1MASK6U        equ	450	;# 
 24105   0001C3                     C1MASK6T        equ	451	;# 
 24106   0001C4                     C1FLTOBJ7       equ	452	;# 
 24107   0001C4                     C1FLTOBJ7L      equ	452	;# 
 24108   0001C5                     C1FLTOBJ7H      equ	453	;# 
 24109   0001C6                     C1FLTOBJ7U      equ	454	;# 
 24110   0001C7                     C1FLTOBJ7T      equ	455	;# 
 24111   0001C8                     C1MASK7         equ	456	;# 
 24112   0001C8                     C1MASK7L        equ	456	;# 
 24113   0001C9                     C1MASK7H        equ	457	;# 
 24114   0001CA                     C1MASK7U        equ	458	;# 
 24115   0001CB                     C1MASK7T        equ	459	;# 
 24116   0001CC                     C1FLTOBJ8       equ	460	;# 
 24117   0001CC                     C1FLTOBJ8L      equ	460	;# 
 24118   0001CD                     C1FLTOBJ8H      equ	461	;# 
 24119   0001CE                     C1FLTOBJ8U      equ	462	;# 
 24120   0001CF                     C1FLTOBJ8T      equ	463	;# 
 24121   0001D0                     C1MASK8         equ	464	;# 
 24122   0001D0                     C1MASK8L        equ	464	;# 
 24123   0001D1                     C1MASK8H        equ	465	;# 
 24124   0001D2                     C1MASK8U        equ	466	;# 
 24125   0001D3                     C1MASK8T        equ	467	;# 
 24126   0001D4                     C1FLTOBJ9       equ	468	;# 
 24127   0001D4                     C1FLTOBJ9L      equ	468	;# 
 24128   0001D5                     C1FLTOBJ9H      equ	469	;# 
 24129   0001D6                     C1FLTOBJ9U      equ	470	;# 
 24130   0001D7                     C1FLTOBJ9T      equ	471	;# 
 24131   0001D8                     C1MASK9         equ	472	;# 
 24132   0001D8                     C1MASK9L        equ	472	;# 
 24133   0001D9                     C1MASK9H        equ	473	;# 
 24134   0001DA                     C1MASK9U        equ	474	;# 
 24135   0001DB                     C1MASK9T        equ	475	;# 
 24136   0001DC                     C1FLTOBJ10      equ	476	;# 
 24137   0001DC                     C1FLTOBJ10L     equ	476	;# 
 24138   0001DD                     C1FLTOBJ10H     equ	477	;# 
 24139   0001DE                     C1FLTOBJ10U     equ	478	;# 
 24140   0001DF                     C1FLTOBJ10T     equ	479	;# 
 24141   0001E0                     C1MASK10        equ	480	;# 
 24142   0001E0                     C1MASK10L       equ	480	;# 
 24143   0001E1                     C1MASK10H       equ	481	;# 
 24144   0001E2                     C1MASK10U       equ	482	;# 
 24145   0001E3                     C1MASK10T       equ	483	;# 
 24146   0001E4                     C1FLTOBJ11      equ	484	;# 
 24147   0001E4                     C1FLTOBJ11L     equ	484	;# 
 24148   0001E5                     C1FLTOBJ11H     equ	485	;# 
 24149   0001E6                     C1FLTOBJ11U     equ	486	;# 
 24150   0001E7                     C1FLTOBJ11T     equ	487	;# 
 24151   0001E8                     C1MASK11        equ	488	;# 
 24152   0001E8                     C1MASK11L       equ	488	;# 
 24153   0001E9                     C1MASK11H       equ	489	;# 
 24154   0001EA                     C1MASK11U       equ	490	;# 
 24155   0001EB                     C1MASK11T       equ	491	;# 
 24156   000200                     PPSLOCK         equ	512	;# 
 24157   000201                     RA0PPS          equ	513	;# 
 24158   000202                     RA1PPS          equ	514	;# 
 24159   000203                     RA2PPS          equ	515	;# 
 24160   000204                     RA3PPS          equ	516	;# 
 24161   000205                     RA4PPS          equ	517	;# 
 24162   000206                     RA5PPS          equ	518	;# 
 24163   000207                     RA6PPS          equ	519	;# 
 24164   000208                     RA7PPS          equ	520	;# 
 24165   000209                     RB0PPS          equ	521	;# 
 24166   00020A                     RB1PPS          equ	522	;# 
 24167   00020B                     RB2PPS          equ	523	;# 
 24168   00020C                     RB3PPS          equ	524	;# 
 24169   00020D                     RB4PPS          equ	525	;# 
 24170   00020E                     RB5PPS          equ	526	;# 
 24171   00020F                     RB6PPS          equ	527	;# 
 24172   000210                     RB7PPS          equ	528	;# 
 24173   000211                     RC0PPS          equ	529	;# 
 24174   000212                     RC1PPS          equ	530	;# 
 24175   000213                     RC2PPS          equ	531	;# 
 24176   000214                     RC3PPS          equ	532	;# 
 24177   000215                     RC4PPS          equ	533	;# 
 24178   000216                     RC5PPS          equ	534	;# 
 24179   000217                     RC6PPS          equ	535	;# 
 24180   000218                     RC7PPS          equ	536	;# 
 24181   00023D                     CANRXPPS        equ	573	;# 
 24182   00023E                     INT0PPS         equ	574	;# 
 24183   00023F                     INT1PPS         equ	575	;# 
 24184   000240                     INT2PPS         equ	576	;# 
 24185   000241                     T0CKIPPS        equ	577	;# 
 24186   000242                     T1CKIPPS        equ	578	;# 
 24187   000243                     T1GPPS          equ	579	;# 
 24188   000244                     T3CKIPPS        equ	580	;# 
 24189   000245                     T3GPPS          equ	581	;# 
 24190   000246                     T5CKIPPS        equ	582	;# 
 24191   000247                     T5GPPS          equ	583	;# 
 24192   000248                     T2INPPS         equ	584	;# 
 24193   000249                     T4INPPS         equ	585	;# 
 24194   00024A                     T6INPPS         equ	586	;# 
 24195   00024B                     TUIN0PPS        equ	587	;# 
 24196   00024C                     TUIN1PPS        equ	588	;# 
 24197   00024F                     CCP1PPS         equ	591	;# 
 24198   000250                     CCP2PPS         equ	592	;# 
 24199   000251                     CCP3PPS         equ	593	;# 
 24200   000253                     PWM1ERSPPS      equ	595	;# 
 24201   000254                     PWM2ERSPPS      equ	596	;# 
 24202   000255                     PWM3ERSPPS      equ	597	;# 
 24203   000256                     PWM4ERSPPS      equ	598	;# 
 24204   000257                     PWMIN0PPS       equ	599	;# 
 24205   000258                     PWMIN1PPS       equ	600	;# 
 24206   000259                     SMT1WINPPS      equ	601	;# 
 24207   00025A                     SMT1SIGPPS      equ	602	;# 
 24208   00025B                     CWG1PPS         equ	603	;# 
 24209   00025B                     CWG1INPPS       equ	603	;# 
 24210   00025C                     CWG2PPS         equ	604	;# 
 24211   00025C                     CWG2INPPS       equ	604	;# 
 24212   00025D                     CWG3PPS         equ	605	;# 
 24213   00025D                     CWG3INPPS       equ	605	;# 
 24214   00025E                     MD1CARLPPS      equ	606	;# 
 24215   00025E                     MDCARLPPS       equ	606	;# 
 24216   00025F                     MD1CARHPPS      equ	607	;# 
 24217   00025F                     MDCARHPPS       equ	607	;# 
 24218   000260                     MD1SRCPPS       equ	608	;# 
 24219   000260                     MDSRCPPS        equ	608	;# 
 24220   000261                     CLCIN0PPS       equ	609	;# 
 24221   000262                     CLCIN1PPS       equ	610	;# 
 24222   000263                     CLCIN2PPS       equ	611	;# 
 24223   000264                     CLCIN3PPS       equ	612	;# 
 24224   000265                     CLCIN4PPS       equ	613	;# 
 24225   000266                     CLCIN5PPS       equ	614	;# 
 24226   000267                     CLCIN6PPS       equ	615	;# 
 24227   000268                     CLCIN7PPS       equ	616	;# 
 24228   000269                     ADACTPPS        equ	617	;# 
 24229   00026A                     SPI1SCKPPS      equ	618	;# 
 24230   00026B                     SPI1SDIPPS      equ	619	;# 
 24231   00026C                     SPI1SSPPS       equ	620	;# 
 24232   00026D                     SPI2SCKPPS      equ	621	;# 
 24233   00026E                     SPI2SDIPPS      equ	622	;# 
 24234   00026F                     SPI2SSPPS       equ	623	;# 
 24235   000270                     I2C1SDAPPS      equ	624	;# 
 24236   000271                     I2C1SCLPPS      equ	625	;# 
 24237   000272                     U1RXPPS         equ	626	;# 
 24238   000273                     U1CTSPPS        equ	627	;# 
 24239   000274                     U2RXPPS         equ	628	;# 
 24240   000275                     U2CTSPPS        equ	629	;# 
 24241   000276                     U3RXPPS         equ	630	;# 
 24242   000277                     U3CTSPPS        equ	631	;# 
 24243   000278                     U4RXPPS         equ	632	;# 
 24244   000279                     U4CTSPPS        equ	633	;# 
 24245   00027A                     U5RXPPS         equ	634	;# 
 24246   00027B                     U5CTSPPS        equ	635	;# 
 24247   000286                     RC4I2C          equ	646	;# 
 24248   000287                     RC3I2C          equ	647	;# 
 24249   000288                     RB2I2C          equ	648	;# 
 24250   000289                     RB1I2C          equ	649	;# 
 24251   00028A                     I2C1RXB         equ	650	;# 
 24252   00028B                     I2C1TXB         equ	651	;# 
 24253   00028C                     I2C1CNTL        equ	652	;# 
 24254   00028D                     I2C1CNTH        equ	653	;# 
 24255   00028E                     I2C1ADB0        equ	654	;# 
 24256   00028F                     I2C1ADB1        equ	655	;# 
 24257   000290                     I2C1ADR0        equ	656	;# 
 24258   000291                     I2C1ADR1        equ	657	;# 
 24259   000292                     I2C1ADR2        equ	658	;# 
 24260   000293                     I2C1ADR3        equ	659	;# 
 24261   000294                     I2C1CON0        equ	660	;# 
 24262   000295                     I2C1CON1        equ	661	;# 
 24263   000296                     I2C1CON2        equ	662	;# 
 24264   000297                     I2C1ERR         equ	663	;# 
 24265   000298                     I2C1STAT0       equ	664	;# 
 24266   000299                     I2C1STAT1       equ	665	;# 
 24267   00029A                     I2C1PIR         equ	666	;# 
 24268   00029B                     I2C1PIE         equ	667	;# 
 24269   00029C                     I2C1BTO         equ	668	;# 
 24270   00029D                     I2C1BAUD        equ	669	;# 
 24271   00029E                     I2C1CLK         equ	670	;# 
 24272   00029F                     I2C1BTOC        equ	671	;# 
 24273   0002A1                     U1RXB           equ	673	;# 
 24274   0002A1                     U1RXBL          equ	673	;# 
 24275   0002A2                     U1RXCHK         equ	674	;# 
 24276   0002A3                     U1TXB           equ	675	;# 
 24277   0002A3                     U1TXBL          equ	675	;# 
 24278   0002A4                     U1TXCHK         equ	676	;# 
 24279   0002A5                     U1P1            equ	677	;# 
 24280   0002A5                     U1P1L           equ	677	;# 
 24281   0002A6                     U1P1H           equ	678	;# 
 24282   0002A7                     U1P2            equ	679	;# 
 24283   0002A7                     U1P2L           equ	679	;# 
 24284   0002A8                     U1P2H           equ	680	;# 
 24285   0002A9                     U1P3            equ	681	;# 
 24286   0002A9                     U1P3L           equ	681	;# 
 24287   0002AA                     U1P3H           equ	682	;# 
 24288   0002AB                     U1CON0          equ	683	;# 
 24289   0002AC                     U1CON1          equ	684	;# 
 24290   0002AD                     U1CON2          equ	685	;# 
 24291   0002AE                     U1BRG           equ	686	;# 
 24292   0002AE                     U1BRGL          equ	686	;# 
 24293   0002AF                     U1BRGH          equ	687	;# 
 24294   0002B0                     U1FIFO          equ	688	;# 
 24295   0002B1                     U1UIR           equ	689	;# 
 24296   0002B2                     U1ERRIR         equ	690	;# 
 24297   0002B3                     U1ERRIE         equ	691	;# 
 24298   0002B4                     U2RXB           equ	692	;# 
 24299   0002B4                     U2RXBL          equ	692	;# 
 24300   0002B5                     U2RXCHK         equ	693	;# 
 24301   0002B6                     U2TXB           equ	694	;# 
 24302   0002B6                     U2TXBL          equ	694	;# 
 24303   0002B7                     U2TXCHK         equ	695	;# 
 24304   0002B8                     U2P1            equ	696	;# 
 24305   0002B8                     U2P1L           equ	696	;# 
 24306   0002B9                     U2P1H           equ	697	;# 
 24307   0002BA                     U2P2            equ	698	;# 
 24308   0002BA                     U2P2L           equ	698	;# 
 24309   0002BB                     U2P2H           equ	699	;# 
 24310   0002BC                     U2P3            equ	700	;# 
 24311   0002BC                     U2P3L           equ	700	;# 
 24312   0002BD                     U2P3H           equ	701	;# 
 24313   0002BE                     U2CON0          equ	702	;# 
 24314   0002BF                     U2CON1          equ	703	;# 
 24315   0002C0                     U2CON2          equ	704	;# 
 24316   0002C1                     U2BRG           equ	705	;# 
 24317   0002C1                     U2BRGL          equ	705	;# 
 24318   0002C2                     U2BRGH          equ	706	;# 
 24319   0002C3                     U2FIFO          equ	707	;# 
 24320   0002C4                     U2UIR           equ	708	;# 
 24321   0002C5                     U2ERRIR         equ	709	;# 
 24322   0002C6                     U2ERRIE         equ	710	;# 
 24323   0002C7                     U3RXB           equ	711	;# 
 24324   0002C7                     U3RXBL          equ	711	;# 
 24325   0002C9                     U3TXB           equ	713	;# 
 24326   0002C9                     U3TXBL          equ	713	;# 
 24327   0002CB                     U3P1            equ	715	;# 
 24328   0002CB                     U3P1L           equ	715	;# 
 24329   0002CD                     U3P2            equ	717	;# 
 24330   0002CD                     U3P2L           equ	717	;# 
 24331   0002CF                     U3P3            equ	719	;# 
 24332   0002CF                     U3P3L           equ	719	;# 
 24333   0002D1                     U3CON0          equ	721	;# 
 24334   0002D2                     U3CON1          equ	722	;# 
 24335   0002D3                     U3CON2          equ	723	;# 
 24336   0002D4                     U3BRG           equ	724	;# 
 24337   0002D4                     U3BRGL          equ	724	;# 
 24338   0002D5                     U3BRGH          equ	725	;# 
 24339   0002D6                     U3FIFO          equ	726	;# 
 24340   0002D7                     U3UIR           equ	727	;# 
 24341   0002D8                     U3ERRIR         equ	728	;# 
 24342   0002D9                     U3ERRIE         equ	729	;# 
 24343   0002DA                     U4RXB           equ	730	;# 
 24344   0002DA                     U4RXBL          equ	730	;# 
 24345   0002DC                     U4TXB           equ	732	;# 
 24346   0002DC                     U4TXBL          equ	732	;# 
 24347   0002DE                     U4P1            equ	734	;# 
 24348   0002DE                     U4P1L           equ	734	;# 
 24349   0002E0                     U4P2            equ	736	;# 
 24350   0002E0                     U4P2L           equ	736	;# 
 24351   0002E2                     U4P3            equ	738	;# 
 24352   0002E2                     U4P3L           equ	738	;# 
 24353   0002E4                     U4CON0          equ	740	;# 
 24354   0002E5                     U4CON1          equ	741	;# 
 24355   0002E6                     U4CON2          equ	742	;# 
 24356   0002E7                     U4BRG           equ	743	;# 
 24357   0002E7                     U4BRGL          equ	743	;# 
 24358   0002E8                     U4BRGH          equ	744	;# 
 24359   0002E9                     U4FIFO          equ	745	;# 
 24360   0002EA                     U4UIR           equ	746	;# 
 24361   0002EB                     U4ERRIR         equ	747	;# 
 24362   0002EC                     U4ERRIE         equ	748	;# 
 24363   0002ED                     U5RXB           equ	749	;# 
 24364   0002ED                     U5RXBL          equ	749	;# 
 24365   0002EF                     U5TXB           equ	751	;# 
 24366   0002EF                     U5TXBL          equ	751	;# 
 24367   0002F1                     U5P1            equ	753	;# 
 24368   0002F1                     U5P1L           equ	753	;# 
 24369   0002F3                     U5P2            equ	755	;# 
 24370   0002F3                     U5P2L           equ	755	;# 
 24371   0002F5                     U5P3            equ	757	;# 
 24372   0002F5                     U5P3L           equ	757	;# 
 24373   0002F7                     U5CON0          equ	759	;# 
 24374   0002F8                     U5CON1          equ	760	;# 
 24375   0002F9                     U5CON2          equ	761	;# 
 24376   0002FA                     U5BRG           equ	762	;# 
 24377   0002FA                     U5BRGL          equ	762	;# 
 24378   0002FB                     U5BRGH          equ	763	;# 
 24379   0002FC                     U5FIFO          equ	764	;# 
 24380   0002FD                     U5UIR           equ	765	;# 
 24381   0002FE                     U5ERRIR         equ	766	;# 
 24382   0002FF                     U5ERRIE         equ	767	;# 
 24383   000300                     SMT1TMR         equ	768	;# 
 24384   000300                     SMT1TMRL        equ	768	;# 
 24385   000301                     SMT1TMRH        equ	769	;# 
 24386   000302                     SMT1TMRU        equ	770	;# 
 24387   000303                     SMT1CPR         equ	771	;# 
 24388   000303                     SMT1CPRL        equ	771	;# 
 24389   000304                     SMT1CPRH        equ	772	;# 
 24390   000305                     SMT1CPRU        equ	773	;# 
 24391   000306                     SMT1CPW         equ	774	;# 
 24392   000306                     SMT1CPWL        equ	774	;# 
 24393   000307                     SMT1CPWH        equ	775	;# 
 24394   000308                     SMT1CPWU        equ	776	;# 
 24395   000309                     SMT1PR          equ	777	;# 
 24396   000309                     SMT1PRL         equ	777	;# 
 24397   00030A                     SMT1PRH         equ	778	;# 
 24398   00030B                     SMT1PRU         equ	779	;# 
 24399   00030C                     SMT1CON0        equ	780	;# 
 24400   00030D                     SMT1CON1        equ	781	;# 
 24401   00030E                     SMT1STAT        equ	782	;# 
 24402   00030F                     SMT1CLK         equ	783	;# 
 24403   000310                     SMT1SIG         equ	784	;# 
 24404   000311                     SMT1WIN         equ	785	;# 
 24405   000318                     TMR0L           equ	792	;# 
 24406   000318                     TMR0            equ	792	;# 
 24407   000319                     TMR0H           equ	793	;# 
 24408   000319                     PR0             equ	793	;# 
 24409   00031A                     T0CON0          equ	794	;# 
 24410   00031B                     T0CON1          equ	795	;# 
 24411   00031C                     TMR1            equ	796	;# 
 24412   00031C                     TMR1L           equ	796	;# 
 24413   00031D                     TMR1H           equ	797	;# 
 24414   00031E                     T1CON           equ	798	;# 
 24415   00031E                     TMR1CON         equ	798	;# 
 24416   00031F                     T1GCON          equ	799	;# 
 24417   00031F                     TMR1GCON        equ	799	;# 
 24418   000320                     T1GATE          equ	800	;# 
 24419   000320                     TMR1GATE        equ	800	;# 
 24420   000321                     T1CLK           equ	801	;# 
 24421   000321                     TMR1CLK         equ	801	;# 
 24422   000321                     PR1             equ	801	;# 
 24423   000322                     T2TMR           equ	802	;# 
 24424   000322                     TMR2            equ	802	;# 
 24425   000323                     T2PR            equ	803	;# 
 24426   000323                     PR2             equ	803	;# 
 24427   000324                     T2CON           equ	804	;# 
 24428   000325                     T2HLT           equ	805	;# 
 24429   000326                     T2CLKCON        equ	806	;# 
 24430   000326                     T2CLK           equ	806	;# 
 24431   000327                     T2RST           equ	807	;# 
 24432   000328                     TMR3            equ	808	;# 
 24433   000328                     TMR3L           equ	808	;# 
 24434   000329                     TMR3H           equ	809	;# 
 24435   00032A                     T3CON           equ	810	;# 
 24436   00032A                     TMR3CON         equ	810	;# 
 24437   00032B                     T3GCON          equ	811	;# 
 24438   00032B                     TMR3GCON        equ	811	;# 
 24439   00032C                     T3GATE          equ	812	;# 
 24440   00032C                     TMR3GATE        equ	812	;# 
 24441   00032D                     T3CLK           equ	813	;# 
 24442   00032D                     TMR3CLK         equ	813	;# 
 24443   00032D                     PR3             equ	813	;# 
 24444   00032E                     T4TMR           equ	814	;# 
 24445   00032E                     TMR4            equ	814	;# 
 24446   00032F                     T4PR            equ	815	;# 
 24447   00032F                     PR4             equ	815	;# 
 24448   000330                     T4CON           equ	816	;# 
 24449   000331                     T4HLT           equ	817	;# 
 24450   000332                     T4CLKCON        equ	818	;# 
 24451   000332                     T4CLK           equ	818	;# 
 24452   000333                     T4RST           equ	819	;# 
 24453   000334                     TMR5            equ	820	;# 
 24454   000334                     TMR5L           equ	820	;# 
 24455   000335                     TMR5H           equ	821	;# 
 24456   000336                     T5CON           equ	822	;# 
 24457   000336                     TMR5CON         equ	822	;# 
 24458   000337                     T5GCON          equ	823	;# 
 24459   000337                     TMR5GCON        equ	823	;# 
 24460   000338                     T5GATE          equ	824	;# 
 24461   000338                     TMR5GATE        equ	824	;# 
 24462   000339                     T5CLK           equ	825	;# 
 24463   000339                     TMR5CLK         equ	825	;# 
 24464   000339                     PR5             equ	825	;# 
 24465   00033A                     T6TMR           equ	826	;# 
 24466   00033A                     TMR6            equ	826	;# 
 24467   00033B                     T6PR            equ	827	;# 
 24468   00033B                     PR6             equ	827	;# 
 24469   00033C                     T6CON           equ	828	;# 
 24470   00033D                     T6HLT           equ	829	;# 
 24471   00033E                     T6CLKCON        equ	830	;# 
 24472   00033E                     T6CLK           equ	830	;# 
 24473   00033F                     T6RST           equ	831	;# 
 24474   000340                     CCPR1           equ	832	;# 
 24475   000340                     CCPR1L          equ	832	;# 
 24476   000341                     CCPR1H          equ	833	;# 
 24477   000342                     CCP1CON         equ	834	;# 
 24478   000343                     CCP1CAP         equ	835	;# 
 24479   000344                     CCPR2           equ	836	;# 
 24480   000344                     CCPR2L          equ	836	;# 
 24481   000345                     CCPR2H          equ	837	;# 
 24482   000346                     CCP2CON         equ	838	;# 
 24483   000347                     CCP2CAP         equ	839	;# 
 24484   000348                     CCPR3           equ	840	;# 
 24485   000348                     CCPR3L          equ	840	;# 
 24486   000349                     CCPR3H          equ	841	;# 
 24487   00034A                     CCP3CON         equ	842	;# 
 24488   00034B                     CCP3CAP         equ	843	;# 
 24489   00034C                     CCPTMRS0        equ	844	;# 
 24490   00034F                     CRCDATA         equ	847	;# 
 24491   00034F                     CRCDATAL        equ	847	;# 
 24492   000350                     CRCDATAH        equ	848	;# 
 24493   000351                     CRCDATAU        equ	849	;# 
 24494   000352                     CRCDATAT        equ	850	;# 
 24495   000353                     CRCOUT          equ	851	;# 
 24496   000353                     CRCSHFT         equ	851	;# 
 24497   000353                     CRCXOR          equ	851	;# 
 24498   000353                     CRCOUTL         equ	851	;# 
 24499   000353                     CRCSHFTL        equ	851	;# 
 24500   000353                     CRCSHIFTL       equ	851	;# 
 24501   000353                     CRCXORL         equ	851	;# 
 24502   000354                     CRCOUTH         equ	852	;# 
 24503   000354                     CRCSHFTH        equ	852	;# 
 24504   000354                     CRCSHIFTH       equ	852	;# 
 24505   000354                     CRCXORH         equ	852	;# 
 24506   000355                     CRCOUTU         equ	853	;# 
 24507   000355                     CRCSHFTU        equ	853	;# 
 24508   000355                     CRCSHIFTU       equ	853	;# 
 24509   000355                     CRCXORU         equ	853	;# 
 24510   000356                     CRCOUTT         equ	854	;# 
 24511   000356                     CRCSHFTT        equ	854	;# 
 24512   000356                     CRCSHIFTT       equ	854	;# 
 24513   000356                     CRCXORT         equ	854	;# 
 24514   000357                     CRCCON0         equ	855	;# 
 24515   000358                     CRCCON1         equ	856	;# 
 24516   000359                     CRCCON2         equ	857	;# 
 24517   00035A                     SCANLADR        equ	858	;# 
 24518   00035A                     SCANLADRL       equ	858	;# 
 24519   00035B                     SCANLADRH       equ	859	;# 
 24520   00035C                     SCANLADRU       equ	860	;# 
 24521   00035D                     SCANHADR        equ	861	;# 
 24522   00035D                     SCANHADRL       equ	861	;# 
 24523   00035E                     SCANHADRH       equ	862	;# 
 24524   00035F                     SCANHADRU       equ	863	;# 
 24525   000360                     SCANCON0        equ	864	;# 
 24526   000361                     SCANTRIG        equ	865	;# 
 24527   000362                     IPR0            equ	866	;# 
 24528   000363                     IPR1            equ	867	;# 
 24529   000364                     IPR2            equ	868	;# 
 24530   000365                     IPR3            equ	869	;# 
 24531   000366                     IPR4            equ	870	;# 
 24532   000367                     IPR5            equ	871	;# 
 24533   000368                     IPR6            equ	872	;# 
 24534   000369                     IPR7            equ	873	;# 
 24535   00036A                     IPR8            equ	874	;# 
 24536   00036B                     IPR9            equ	875	;# 
 24537   00036C                     IPR10           equ	876	;# 
 24538   00036D                     IPR11           equ	877	;# 
 24539   00036E                     IPR12           equ	878	;# 
 24540   00036F                     IPR13           equ	879	;# 
 24541   000370                     IPR14           equ	880	;# 
 24542   000371                     IPR15           equ	881	;# 
 24543   000373                     STATUS_CSHAD    equ	883	;# 
 24544   000374                     WREG_CSHAD      equ	884	;# 
 24545   000375                     BSR_CSHAD       equ	885	;# 
 24546   000376                     SHADCON         equ	886	;# 
 24547   000377                     STATUS_SHAD     equ	887	;# 
 24548   000378                     WREG_SHAD       equ	888	;# 
 24549   000379                     BSR_SHAD        equ	889	;# 
 24550   00037A                     PCLATH_SHAD     equ	890	;# 
 24551   00037B                     PCLATU_SHAD     equ	891	;# 
 24552   00037C                     FSR0SH          equ	892	;# 
 24553   00037C                     FSR0L_SHAD      equ	892	;# 
 24554   00037D                     FSR0H_SHAD      equ	893	;# 
 24555   00037E                     FSR1SH          equ	894	;# 
 24556   00037E                     FSR1L_SHAD      equ	894	;# 
 24557   00037F                     FSR1H_SHAD      equ	895	;# 
 24558   000380                     FSR2SH          equ	896	;# 
 24559   000380                     FSR2L_SHAD      equ	896	;# 
 24560   000381                     FSR2H_SHAD      equ	897	;# 
 24561   000382                     PRODSH          equ	898	;# 
 24562   000382                     PRODL_SHAD      equ	898	;# 
 24563   000383                     PRODH_SHAD      equ	899	;# 
 24564   000387                     TU16ACON0       equ	903	;# 
 24565   000388                     TU16ACON1       equ	904	;# 
 24566   000389                     TU16AHLT        equ	905	;# 
 24567   00038A                     TU16APS         equ	906	;# 
 24568   00038B                     TU16ATMR        equ	907	;# 
 24569   00038B                     TU16ACR         equ	907	;# 
 24570   00038B                     TU16ATMRL       equ	907	;# 
 24571   00038B                     TU16ACRL        equ	907	;# 
 24572   00038C                     TU16ATMRH       equ	908	;# 
 24573   00038C                     TU16ACRH        equ	908	;# 
 24574   00038D                     TU16APR         equ	909	;# 
 24575   00038D                     TU16APRL        equ	909	;# 
 24576   00038E                     TU16APRH        equ	910	;# 
 24577   00038F                     TU16ACLK        equ	911	;# 
 24578   000390                     TU16AERS        equ	912	;# 
 24579   000393                     TU16BCON0       equ	915	;# 
 24580   000394                     TU16BCON1       equ	916	;# 
 24581   000395                     TU16BHLT        equ	917	;# 
 24582   000396                     TU16BPS         equ	918	;# 
 24583   000397                     TU16BTMR        equ	919	;# 
 24584   000397                     TU16BCR         equ	919	;# 
 24585   000397                     TU16BTMRL       equ	919	;# 
 24586   000397                     TU16BCRL        equ	919	;# 
 24587   000398                     TU16BTMRH       equ	920	;# 
 24588   000398                     TU16BCRH        equ	920	;# 
 24589   000399                     TU16BPR         equ	921	;# 
 24590   000399                     TU16BPRL        equ	921	;# 
 24591   00039A                     TU16BPRH        equ	922	;# 
 24592   00039B                     TU16BCLK        equ	923	;# 
 24593   00039C                     TU16BERS        equ	924	;# 
 24594   0003BB                     TUCHAIN         equ	955	;# 
 24595   0003BC                     CWG1CLK         equ	956	;# 
 24596   0003BC                     CWG1CLKCON      equ	956	;# 
 24597   0003BD                     CWG1ISM         equ	957	;# 
 24598   0003BE                     CWG1DBR         equ	958	;# 
 24599   0003BF                     CWG1DBF         equ	959	;# 
 24600   0003C0                     CWG1CON0        equ	960	;# 
 24601   0003C1                     CWG1CON1        equ	961	;# 
 24602   0003C2                     CWG1AS0         equ	962	;# 
 24603   0003C3                     CWG1AS1         equ	963	;# 
 24604   0003C4                     CWG1STR         equ	964	;# 
 24605   0003C5                     CWG2CLK         equ	965	;# 
 24606   0003C5                     CWG2CLKCON      equ	965	;# 
 24607   0003C6                     CWG2ISM         equ	966	;# 
 24608   0003C7                     CWG2DBR         equ	967	;# 
 24609   0003C8                     CWG2DBF         equ	968	;# 
 24610   0003C9                     CWG2CON0        equ	969	;# 
 24611   0003CA                     CWG2CON1        equ	970	;# 
 24612   0003CB                     CWG2AS0         equ	971	;# 
 24613   0003CC                     CWG2AS1         equ	972	;# 
 24614   0003CD                     CWG2STR         equ	973	;# 
 24615   0003CE                     CWG3CLK         equ	974	;# 
 24616   0003CE                     CWG3CLKCON      equ	974	;# 
 24617   0003CF                     CWG3ISM         equ	975	;# 
 24618   0003D0                     CWG3DBR         equ	976	;# 
 24619   0003D1                     CWG3DBF         equ	977	;# 
 24620   0003D2                     CWG3CON0        equ	978	;# 
 24621   0003D3                     CWG3CON1        equ	979	;# 
 24622   0003D4                     CWG3AS0         equ	980	;# 
 24623   0003D5                     CWG3AS1         equ	981	;# 
 24624   0003D6                     CWG3STR         equ	982	;# 
 24625   0003D7                     FVRCON          equ	983	;# 
 24626   0003D8                     ADCPCON         equ	984	;# 
 24627   0003D8                     ADCP            equ	984	;# 
 24628   0003D9                     ADLTH           equ	985	;# 
 24629   0003D9                     ADLTHL          equ	985	;# 
 24630   0003DA                     ADLTHH          equ	986	;# 
 24631   0003DB                     ADUTH           equ	987	;# 
 24632   0003DB                     ADUTHL          equ	987	;# 
 24633   0003DC                     ADUTHH          equ	988	;# 
 24634   0003DD                     ADERR           equ	989	;# 
 24635   0003DD                     ADERRL          equ	989	;# 
 24636   0003DE                     ADERRH          equ	990	;# 
 24637   0003DF                     ADSTPT          equ	991	;# 
 24638   0003DF                     ADSTPTL         equ	991	;# 
 24639   0003E0                     ADSTPTH         equ	992	;# 
 24640   0003E1                     ADFLTR          equ	993	;# 
 24641   0003E1                     ADFLTRL         equ	993	;# 
 24642   0003E2                     ADFLTRH         equ	994	;# 
 24643   0003E3                     ADACC           equ	995	;# 
 24644   0003E3                     ADACCL          equ	995	;# 
 24645   0003E4                     ADACCH          equ	996	;# 
 24646   0003E5                     ADACCU          equ	997	;# 
 24647   0003E6                     ADCNT           equ	998	;# 
 24648   0003E7                     ADRPT           equ	999	;# 
 24649   0003E8                     ADPREV          equ	1000	;# 
 24650   0003E8                     ADPREVL         equ	1000	;# 
 24651   0003E9                     ADPREVH         equ	1001	;# 
 24652   0003EA                     ADRES           equ	1002	;# 
 24653   0003EA                     ADRESL          equ	1002	;# 
 24654   0003EB                     ADRESH          equ	1003	;# 
 24655   0003EC                     ADPCH           equ	1004	;# 
 24656   0003EE                     ADACQ           equ	1006	;# 
 24657   0003EE                     ADACQL          equ	1006	;# 
 24658   0003EF                     ADACQH          equ	1007	;# 
 24659   0003F0                     ADCAP           equ	1008	;# 
 24660   0003F1                     ADPRE           equ	1009	;# 
 24661   0003F1                     ADPREL          equ	1009	;# 
 24662   0003F2                     ADPREH          equ	1010	;# 
 24663   0003F3                     ADCON0          equ	1011	;# 
 24664   0003F4                     ADCON1          equ	1012	;# 
 24665   0003F5                     ADCON2          equ	1013	;# 
 24666   0003F6                     ADCON3          equ	1014	;# 
 24667   0003F7                     ADSTAT          equ	1015	;# 
 24668   0003F8                     ADREF           equ	1016	;# 
 24669   0003F9                     ADACT           equ	1017	;# 
 24670   0003FA                     ADCLK           equ	1018	;# 
 24671   0003FB                     ADCTX           equ	1019	;# 
 24672   0003FC                     ADCSEL1         equ	1020	;# 
 24673   0003FD                     ADCSEL2         equ	1021	;# 
 24674   0003FE                     ADCSEL3         equ	1022	;# 
 24675   0003FF                     ADCSEL4         equ	1023	;# 
 24676   000400                     ANSELA          equ	1024	;# 
 24677   000401                     WPUA            equ	1025	;# 
 24678   000402                     ODCONA          equ	1026	;# 
 24679   000403                     SLRCONA         equ	1027	;# 
 24680   000404                     INLVLA          equ	1028	;# 
 24681   000405                     IOCAP           equ	1029	;# 
 24682   000406                     IOCAN           equ	1030	;# 
 24683   000407                     IOCAF           equ	1031	;# 
 24684   000408                     ANSELB          equ	1032	;# 
 24685   000409                     WPUB            equ	1033	;# 
 24686   00040A                     ODCONB          equ	1034	;# 
 24687   00040B                     SLRCONB         equ	1035	;# 
 24688   00040C                     INLVLB          equ	1036	;# 
 24689   00040D                     IOCBP           equ	1037	;# 
 24690   00040E                     IOCBN           equ	1038	;# 
 24691   00040F                     IOCBF           equ	1039	;# 
 24692   000410                     ANSELC          equ	1040	;# 
 24693   000411                     WPUC            equ	1041	;# 
 24694   000412                     ODCONC          equ	1042	;# 
 24695   000413                     SLRCONC         equ	1043	;# 
 24696   000414                     INLVLC          equ	1044	;# 
 24697   000415                     IOCCP           equ	1045	;# 
 24698   000416                     IOCCN           equ	1046	;# 
 24699   000417                     IOCCF           equ	1047	;# 
 24700   000421                     WPUE            equ	1057	;# 
 24701   000424                     INLVLE          equ	1060	;# 
 24702   000425                     IOCEP           equ	1061	;# 
 24703   000426                     IOCEN           equ	1062	;# 
 24704   000427                     IOCEF           equ	1063	;# 
 24705   000440                     NCO1ACC         equ	1088	;# 
 24706   000440                     NCO1ACCL        equ	1088	;# 
 24707   000441                     NCO1ACCH        equ	1089	;# 
 24708   000442                     NCO1ACCU        equ	1090	;# 
 24709   000443                     NCO1INC         equ	1091	;# 
 24710   000443                     NCO1INCL        equ	1091	;# 
 24711   000444                     NCO1INCH        equ	1092	;# 
 24712   000445                     NCO1INCU        equ	1093	;# 
 24713   000446                     NCO1CON         equ	1094	;# 
 24714   000447                     NCO1CLK         equ	1095	;# 
 24715   000448                     NCO2ACC         equ	1096	;# 
 24716   000448                     NCO2ACCL        equ	1096	;# 
 24717   000449                     NCO2ACCH        equ	1097	;# 
 24718   00044A                     NCO2ACCU        equ	1098	;# 
 24719   00044B                     NCO2INC         equ	1099	;# 
 24720   00044B                     NCO2INCL        equ	1099	;# 
 24721   00044C                     NCO2INCH        equ	1100	;# 
 24722   00044D                     NCO2INCU        equ	1101	;# 
 24723   00044E                     NCO2CON         equ	1102	;# 
 24724   00044F                     NCO2CLK         equ	1103	;# 
 24725   000450                     NCO3ACC         equ	1104	;# 
 24726   000450                     NCO3ACCL        equ	1104	;# 
 24727   000451                     NCO3ACCH        equ	1105	;# 
 24728   000452                     NCO3ACCU        equ	1106	;# 
 24729   000453                     NCO3INC         equ	1107	;# 
 24730   000453                     NCO3INCL        equ	1107	;# 
 24731   000454                     NCO3INCH        equ	1108	;# 
 24732   000455                     NCO3INCU        equ	1109	;# 
 24733   000456                     NCO3CON         equ	1110	;# 
 24734   000457                     NCO3CLK         equ	1111	;# 
 24735   000458                     FSCMCON         equ	1112	;# 
 24736   000459                     IVTLOCK         equ	1113	;# 
 24737   00045A                     IVTAD           equ	1114	;# 
 24738   00045A                     IVTADL          equ	1114	;# 
 24739   00045B                     IVTADH          equ	1115	;# 
 24740   00045C                     IVTADU          equ	1116	;# 
 24741   00045D                     IVTBASE         equ	1117	;# 
 24742   00045D                     IVTBASEL        equ	1117	;# 
 24743   00045E                     IVTBASEH        equ	1118	;# 
 24744   00045F                     IVTBASEU        equ	1119	;# 
 24745   000460                     PWM1ERS         equ	1120	;# 
 24746   000461                     PWM1CLK         equ	1121	;# 
 24747   000462                     PWM1LDS         equ	1122	;# 
 24748   000463                     PWM1PR          equ	1123	;# 
 24749   000463                     PWM1PRL         equ	1123	;# 
 24750   000464                     PWM1PRH         equ	1124	;# 
 24751   000465                     PWM1CPRE        equ	1125	;# 
 24752   000466                     PWM1PIPOS       equ	1126	;# 
 24753   000467                     PWM1GIR         equ	1127	;# 
 24754   000468                     PWM1GIE         equ	1128	;# 
 24755   000469                     PWM1CON         equ	1129	;# 
 24756   00046A                     PWM1S1CFG       equ	1130	;# 
 24757   00046B                     PWM1S1P1        equ	1131	;# 
 24758   00046B                     PWM1S1P1L       equ	1131	;# 
 24759   00046C                     PWM1S1P1H       equ	1132	;# 
 24760   00046D                     PWM1S1P2        equ	1133	;# 
 24761   00046D                     PWM1S1P2L       equ	1133	;# 
 24762   00046E                     PWM1S1P2H       equ	1134	;# 
 24763   00046F                     PWM2ERS         equ	1135	;# 
 24764   000470                     PWM2CLK         equ	1136	;# 
 24765   000471                     PWM2LDS         equ	1137	;# 
 24766   000472                     PWM2PR          equ	1138	;# 
 24767   000472                     PWM2PRL         equ	1138	;# 
 24768   000473                     PWM2PRH         equ	1139	;# 
 24769   000474                     PWM2CPRE        equ	1140	;# 
 24770   000475                     PWM2PIPOS       equ	1141	;# 
 24771   000476                     PWM2GIR         equ	1142	;# 
 24772   000477                     PWM2GIE         equ	1143	;# 
 24773   000478                     PWM2CON         equ	1144	;# 
 24774   000479                     PWM2S1CFG       equ	1145	;# 
 24775   00047A                     PWM2S1P1        equ	1146	;# 
 24776   00047A                     PWM2S1P1L       equ	1146	;# 
 24777   00047B                     PWM2S1P1H       equ	1147	;# 
 24778   00047C                     PWM2S1P2        equ	1148	;# 
 24779   00047C                     PWM2S1P2L       equ	1148	;# 
 24780   00047D                     PWM2S1P2H       equ	1149	;# 
 24781   00047E                     PWM3ERS         equ	1150	;# 
 24782   00047F                     PWM3CLK         equ	1151	;# 
 24783   000480                     PWM3LDS         equ	1152	;# 
 24784   000481                     PWM3PR          equ	1153	;# 
 24785   000481                     PWM3PRL         equ	1153	;# 
 24786   000482                     PWM3PRH         equ	1154	;# 
 24787   000483                     PWM3CPRE        equ	1155	;# 
 24788   000484                     PWM3PIPOS       equ	1156	;# 
 24789   000485                     PWM3GIR         equ	1157	;# 
 24790   000486                     PWM3GIE         equ	1158	;# 
 24791   000487                     PWM3CON         equ	1159	;# 
 24792   000488                     PWM3S1CFG       equ	1160	;# 
 24793   000489                     PWM3S1P1        equ	1161	;# 
 24794   000489                     PWM3S1P1L       equ	1161	;# 
 24795   00048A                     PWM3S1P1H       equ	1162	;# 
 24796   00048B                     PWM3S1P2        equ	1163	;# 
 24797   00048B                     PWM3S1P2L       equ	1163	;# 
 24798   00048C                     PWM3S1P2H       equ	1164	;# 
 24799   00048D                     PWM4ERS         equ	1165	;# 
 24800   00048E                     PWM4CLK         equ	1166	;# 
 24801   00048F                     PWM4LDS         equ	1167	;# 
 24802   000490                     PWM4PR          equ	1168	;# 
 24803   000490                     PWM4PRL         equ	1168	;# 
 24804   000491                     PWM4PRH         equ	1169	;# 
 24805   000492                     PWM4CPRE        equ	1170	;# 
 24806   000493                     PWM4PIPOS       equ	1171	;# 
 24807   000494                     PWM4GIR         equ	1172	;# 
 24808   000495                     PWM4GIE         equ	1173	;# 
 24809   000496                     PWM4CON         equ	1174	;# 
 24810   000497                     PWM4S1CFG       equ	1175	;# 
 24811   000498                     PWM4S1P1        equ	1176	;# 
 24812   000498                     PWM4S1P1L       equ	1176	;# 
 24813   000499                     PWM4S1P1H       equ	1177	;# 
 24814   00049A                     PWM4S1P2        equ	1178	;# 
 24815   00049A                     PWM4S1P2L       equ	1178	;# 
 24816   00049B                     PWM4S1P2H       equ	1179	;# 
 24817   00049C                     PWMLOAD         equ	1180	;# 
 24818   00049D                     PWMEN           equ	1181	;# 
 24819   00049E                     PIE0            equ	1182	;# 
 24820   00049F                     PIE1            equ	1183	;# 
 24821   0004A0                     PIE2            equ	1184	;# 
 24822   0004A1                     PIE3            equ	1185	;# 
 24823   0004A2                     PIE4            equ	1186	;# 
 24824   0004A3                     PIE5            equ	1187	;# 
 24825   0004A4                     PIE6            equ	1188	;# 
 24826   0004A5                     PIE7            equ	1189	;# 
 24827   0004A6                     PIE8            equ	1190	;# 
 24828   0004A7                     PIE9            equ	1191	;# 
 24829   0004A8                     PIE10           equ	1192	;# 
 24830   0004A9                     PIE11           equ	1193	;# 
 24831   0004AA                     PIE12           equ	1194	;# 
 24832   0004AB                     PIE13           equ	1195	;# 
 24833   0004AC                     PIE14           equ	1196	;# 
 24834   0004AD                     PIE15           equ	1197	;# 
 24835   0004AE                     PIR0            equ	1198	;# 
 24836   0004AF                     PIR1            equ	1199	;# 
 24837   0004B0                     PIR2            equ	1200	;# 
 24838   0004B1                     PIR3            equ	1201	;# 
 24839   0004B2                     PIR4            equ	1202	;# 
 24840   0004B3                     PIR5            equ	1203	;# 
 24841   0004B4                     PIR6            equ	1204	;# 
 24842   0004B5                     PIR7            equ	1205	;# 
 24843   0004B6                     PIR8            equ	1206	;# 
 24844   0004B7                     PIR9            equ	1207	;# 
 24845   0004B8                     PIR10           equ	1208	;# 
 24846   0004B9                     PIR11           equ	1209	;# 
 24847   0004BA                     PIR12           equ	1210	;# 
 24848   0004BB                     PIR13           equ	1211	;# 
 24849   0004BC                     PIR14           equ	1212	;# 
 24850   0004BD                     PIR15           equ	1213	;# 
 24851   0004BE                     LATA            equ	1214	;# 
 24852   0004BF                     LATB            equ	1215	;# 
 24853   0004C0                     LATC            equ	1216	;# 
 24854   0004C6                     TRISA           equ	1222	;# 
 24855   0004C7                     TRISB           equ	1223	;# 
 24856   0004C8                     TRISC           equ	1224	;# 
 24857   0004CA                     TRISE           equ	1226	;# 
 24858   0004CE                     PORTA           equ	1230	;# 
 24859   0004CF                     PORTB           equ	1231	;# 
 24860   0004D0                     PORTC           equ	1232	;# 
 24861   0004D2                     PORTE           equ	1234	;# 
 24862   0004D6                     INTCON0         equ	1238	;# 
 24863   0004D7                     INTCON1         equ	1239	;# 
 24864   0004D8                     STATUS          equ	1240	;# 
 24865   0004D9                     FSR2            equ	1241	;# 
 24866   0004D9                     FSR2L           equ	1241	;# 
 24867   0004DA                     FSR2H           equ	1242	;# 
 24868   0004DB                     PLUSW2          equ	1243	;# 
 24869   0004DC                     PREINC2         equ	1244	;# 
 24870   0004DD                     POSTDEC2        equ	1245	;# 
 24871   0004DE                     POSTINC2        equ	1246	;# 
 24872   0004DF                     INDF2           equ	1247	;# 
 24873   0004E0                     BSR             equ	1248	;# 
 24874   0004E1                     FSR1            equ	1249	;# 
 24875   0004E1                     FSR1L           equ	1249	;# 
 24876   0004E2                     FSR1H           equ	1250	;# 
 24877   0004E3                     PLUSW1          equ	1251	;# 
 24878   0004E4                     PREINC1         equ	1252	;# 
 24879   0004E5                     POSTDEC1        equ	1253	;# 
 24880   0004E6                     POSTINC1        equ	1254	;# 
 24881   0004E7                     INDF1           equ	1255	;# 
 24882   0004E8                     WREG            equ	1256	;# 
 24883   0004E9                     FSR0            equ	1257	;# 
 24884   0004E9                     FSR0L           equ	1257	;# 
 24885   0004EA                     FSR0H           equ	1258	;# 
 24886   0004EB                     PLUSW0          equ	1259	;# 
 24887   0004EC                     PREINC0         equ	1260	;# 
 24888   0004ED                     POSTDEC0        equ	1261	;# 
 24889   0004EE                     POSTINC0        equ	1262	;# 
 24890   0004EF                     INDF0           equ	1263	;# 
 24891   0004F0                     PCON0           equ	1264	;# 
 24892   0004F1                     PCON1           equ	1265	;# 
 24893   0004F2                     CPUDOZE         equ	1266	;# 
 24894   0004F3                     PROD            equ	1267	;# 
 24895   0004F3                     PRODL           equ	1267	;# 
 24896   0004F4                     PRODH           equ	1268	;# 
 24897   0004F5                     TABLAT          equ	1269	;# 
 24898   0004F6                     TBLPTR          equ	1270	;# 
 24899   0004F6                     TBLPTRL         equ	1270	;# 
 24900   0004F7                     TBLPTRH         equ	1271	;# 
 24901   0004F8                     TBLPTRU         equ	1272	;# 
 24902   0004F9                     PCLAT           equ	1273	;# 
 24903   0004F9                     PCL             equ	1273	;# 
 24904   0004FA                     PCLATH          equ	1274	;# 
 24905   0004FB                     PCLATU          equ	1275	;# 
 24906   0004FC                     STKPTR          equ	1276	;# 
 24907   0004FD                     TOS             equ	1277	;# 
 24908   0004FD                     TOSL            equ	1277	;# 
 24909   0004FE                     TOSH            equ	1278	;# 
 24910   0004FF                     TOSU            equ	1279	;# 
 24911                           
 24912                           	psect	idataBANK5
 24913   0167D2                     __pidataBANK5:
 24914                           	callstack 0
 24915                           
 24916                           ;initializer for _flashBuffer
 24917   0167D2  00                 	db	0
 24918   0167D3  37                 	db	55
 24919                           
 24920                           	psect	mediumconst
 24921   00FE34                     __pmediumconst:
 24922                           	callstack 0
 24923   00FE34  00                 	db	0
 24924   00FE35                     _priorities:
 24925                           	callstack 0
 24926   00FE35  01                 	db	1
 24927   00FE36  01                 	db	1
 24928   00FE37  03                 	db	3
 24929   00FE38  02                 	db	2
 24930   00FE39  02                 	db	2
 24931   00FE3A  02                 	db	2
 24932   00FE3B  02                 	db	2
 24933   00FE3C  03                 	db	3
 24934   00FE3D  02                 	db	2
 24935   00FE3E  02                 	db	2
 24936   00FE3F  03                 	db	3
 24937   00FE40  01                 	db	1
 24938   00FE41  00                 	db	0
 24939   00FE42  00                 	db	0
 24940   00FE43  01                 	db	1
 24941   00FE44  01                 	db	1
 24942   00FE45  01                 	db	1
 24943   00FE46  01                 	db	1
 24944   00FE47  01                 	db	1
 24945   00FE48  01                 	db	1
 24946   00FE49  01                 	db	1
 24947   00FE4A  01                 	db	1
 24948   00FE4B  01                 	db	1
 24949   00FE4C  01                 	db	1
 24950   00FE4D  01                 	db	1
 24951   00FE4E  01                 	db	1
 24952   00FE4F  01                 	db	1
 24953   00FE50  01                 	db	1
 24954   00FE51  01                 	db	1
 24955   00FE52  01                 	db	1
 24956   00FE53  01                 	db	1
 24957   00FE54  01                 	db	1
 24958   00FE55  01                 	db	1
 24959   00FE56  01                 	db	1
 24960   00FE57  01                 	db	1
 24961   00FE58  01                 	db	1
 24962   00FE59  01                 	db	1
 24963   00FE5A  01                 	db	1
 24964   00FE5B  01                 	db	1
 24965   00FE5C  01                 	db	1
 24966   00FE5D  01                 	db	1
 24967   00FE5E  01                 	db	1
 24968   00FE5F  01                 	db	1
 24969   00FE60  01                 	db	1
 24970   00FE61  01                 	db	1
 24971   00FE62  01                 	db	1
 24972   00FE63  01                 	db	1
 24973   00FE64  01                 	db	1
 24974   00FE65  01                 	db	1
 24975   00FE66  01                 	db	1
 24976   00FE67  01                 	db	1
 24977   00FE68  01                 	db	1
 24978   00FE69  01                 	db	1
 24979   00FE6A  01                 	db	1
 24980   00FE6B  01                 	db	1
 24981   00FE6C  01                 	db	1
 24982   00FE6D  01                 	db	1
 24983   00FE6E  01                 	db	1
 24984   00FE6F  01                 	db	1
 24985   00FE70  01                 	db	1
 24986   00FE71  01                 	db	1
 24987   00FE72  01                 	db	1
 24988   00FE73  01                 	db	1
 24989   00FE74  00                 	db	0
 24990   00FE75  01                 	db	1
 24991   00FE76  01                 	db	1
 24992   00FE77  01                 	db	1
 24993   00FE78  01                 	db	1
 24994   00FE79  01                 	db	1
 24995   00FE7A  01                 	db	1
 24996   00FE7B  01                 	db	1
 24997   00FE7C  01                 	db	1
 24998   00FE7D  01                 	db	1
 24999   00FE7E  00                 	db	0
 25000   00FE7F  01                 	db	1
 25001   00FE80  01                 	db	1
 25002   00FE81  00                 	db	0
 25003   00FE82  00                 	db	0
 25004   00FE83  00                 	db	0
 25005   00FE84  00                 	db	0
 25006   00FE85  00                 	db	0
 25007   00FE86  00                 	db	0
 25008   00FE87  00                 	db	0
 25009   00FE88  00                 	db	0
 25010   00FE89  00                 	db	0
 25011   00FE8A  00                 	db	0
 25012   00FE8B  00                 	db	0
 25013   00FE8C  00                 	db	0
 25014   00FE8D  00                 	db	0
 25015   00FE8E  00                 	db	0
 25016   00FE8F  00                 	db	0
 25017   00FE90  00                 	db	0
 25018   00FE91  00                 	db	0
 25019   00FE92  01                 	db	1
 25020   00FE93  01                 	db	1
 25021   00FE94  01                 	db	1
 25022   00FE95  01                 	db	1
 25023   00FE96  01                 	db	1
 25024   00FE97  03                 	db	3
 25025   00FE98  01                 	db	1
 25026   00FE99  01                 	db	1
 25027   00FE9A  01                 	db	1
 25028   00FE9B  01                 	db	1
 25029   00FE9C  01                 	db	1
 25030   00FE9D  01                 	db	1
 25031   00FE9E  01                 	db	1
 25032   00FE9F  01                 	db	1
 25033   00FEA0  00                 	db	0
 25034   00FEA1  00                 	db	0
 25035   00FEA2  00                 	db	0
 25036   00FEA3  00                 	db	0
 25037   00FEA4  00                 	db	0
 25038   00FEA5  00                 	db	0
 25039   00FEA6  00                 	db	0
 25040   00FEA7  00                 	db	0
 25041   00FEA8  01                 	db	1
 25042   00FEA9  00                 	db	0
 25043   00FEAA  01                 	db	1
 25044   00FEAB  01                 	db	1
 25045   00FEAC  01                 	db	1
 25046   00FEAD  01                 	db	1
 25047   00FEAE  01                 	db	1
 25048   00FEAF  01                 	db	1
 25049   00FEB0  00                 	db	0
 25050   00FEB1  01                 	db	1
 25051   00FEB2  01                 	db	1
 25052   00FEB3  01                 	db	1
 25053   00FEB4  01                 	db	1
 25054   00FEB5  01                 	db	1
 25055   00FEB6  01                 	db	1
 25056   00FEB7  01                 	db	1
 25057   00FEB8  00                 	db	0
 25058   00FEB9  01                 	db	1
 25059   00FEBA  01                 	db	1
 25060   00FEBB  01                 	db	1
 25061   00FEBC  01                 	db	1
 25062   00FEBD  01                 	db	1
 25063   00FEBE  01                 	db	1
 25064   00FEBF  00                 	db	0
 25065   00FEC0  01                 	db	1
 25066   00FEC1  00                 	db	0
 25067   00FEC2  00                 	db	0
 25068   00FEC3  00                 	db	0
 25069   00FEC4  00                 	db	0
 25070   00FEC5  00                 	db	0
 25071   00FEC6  00                 	db	0
 25072   00FEC7  00                 	db	0
 25073   00FEC8  00                 	db	0
 25074   00FEC9  00                 	db	0
 25075   00FECA  00                 	db	0
 25076   00FECB  00                 	db	0
 25077   00FECC  00                 	db	0
 25078   00FECD  00                 	db	0
 25079   00FECE  00                 	db	0
 25080   00FECF  00                 	db	0
 25081   00FED0  00                 	db	0
 25082   00FED1  01                 	db	1
 25083   00FED2  01                 	db	1
 25084   00FED3  01                 	db	1
 25085   00FED4  01                 	db	1
 25086   00FED5  01                 	db	1
 25087   00FED6  01                 	db	1
 25088   00FED7  01                 	db	1
 25089   00FED8  01                 	db	1
 25090   00FED9  01                 	db	1
 25091   00FEDA  01                 	db	1
 25092   00FEDB  01                 	db	1
 25093   00FEDC  00                 	db	0
 25094   00FEDD  00                 	db	0
 25095   00FEDE  01                 	db	1
 25096   00FEDF  01                 	db	1
 25097   00FEE0  00                 	db	0
 25098   00FEE1  00                 	db	0
 25099   00FEE2  00                 	db	0
 25100   00FEE3  00                 	db	0
 25101   00FEE4  00                 	db	0
 25102   00FEE5  00                 	db	0
 25103   00FEE6  00                 	db	0
 25104   00FEE7  00                 	db	0
 25105   00FEE8  01                 	db	1
 25106   00FEE9  00                 	db	0
 25107   00FEEA  00                 	db	0
 25108   00FEEB  01                 	db	1
 25109   00FEEC  01                 	db	1
 25110   00FEED  01                 	db	1
 25111   00FEEE  00                 	db	0
 25112   00FEEF  00                 	db	0
 25113   00FEF0  00                 	db	0
 25114   00FEF1  01                 	db	1
 25115   00FEF2  01                 	db	1
 25116   00FEF3  01                 	db	1
 25117   00FEF4  01                 	db	1
 25118   00FEF5  01                 	db	1
 25119   00FEF6  01                 	db	1
 25120   00FEF7  01                 	db	1
 25121   00FEF8  00                 	db	0
 25122   00FEF9  01                 	db	1
 25123   00FEFA  01                 	db	1
 25124   00FEFB  01                 	db	1
 25125   00FEFC  01                 	db	1
 25126   00FEFD  01                 	db	1
 25127   00FEFE  01                 	db	1
 25128   00FEFF  01                 	db	1
 25129   00FF00  01                 	db	1
 25130   00FF01  00                 	db	0
 25131   00FF02  00                 	db	0
 25132   00FF03  00                 	db	0
 25133   00FF04  00                 	db	0
 25134   00FF05  00                 	db	0
 25135   00FF06  00                 	db	0
 25136   00FF07  01                 	db	1
 25137   00FF08  01                 	db	1
 25138   00FF09  00                 	db	0
 25139   00FF0A  00                 	db	0
 25140   00FF0B  01                 	db	1
 25141   00FF0C  01                 	db	1
 25142   00FF0D  01                 	db	1
 25143   00FF0E  00                 	db	0
 25144   00FF0F  00                 	db	0
 25145   00FF10  00                 	db	0
 25146   00FF11  01                 	db	1
 25147   00FF12  01                 	db	1
 25148   00FF13  00                 	db	0
 25149   00FF14  01                 	db	1
 25150   00FF15  01                 	db	1
 25151   00FF16  01                 	db	1
 25152   00FF17  00                 	db	0
 25153   00FF18  00                 	db	0
 25154   00FF19  01                 	db	1
 25155   00FF1A  00                 	db	0
 25156   00FF1B  01                 	db	1
 25157   00FF1C  01                 	db	1
 25158   00FF1D  01                 	db	1
 25159   00FF1E  01                 	db	1
 25160   00FF1F  01                 	db	1
 25161   00FF20  00                 	db	0
 25162   00FF21  00                 	db	0
 25163   00FF22  00                 	db	0
 25164   00FF23  00                 	db	0
 25165   00FF24  00                 	db	0
 25166   00FF25  00                 	db	0
 25167   00FF26  00                 	db	0
 25168   00FF27  00                 	db	0
 25169   00FF28  00                 	db	0
 25170   00FF29  00                 	db	0
 25171   00FF2A  00                 	db	0
 25172   00FF2B  00                 	db	0
 25173   00FF2C  00                 	db	0
 25174   00FF2D  00                 	db	0
 25175   00FF2E  00                 	db	0
 25176   00FF2F  01                 	db	1
 25177   00FF30  00                 	db	0
 25178   00FF31  00                 	db	0
 25179   00FF32  00                 	db	0
 25180   00FF33  00                 	db	0
 25181   00FF34  00                 	db	0
 25182   00FF35                     __end_of_priorities:
 25183                           	callstack 0
 25184   000820                     _paramBlock_absaddr set	2080
 25185   00FF35                     _services:
 25186                           	callstack 0
 25187   00FF35  E1                 	db	low _canService
 25188   00FF36  FF                 	db	high _canService
 25189   00FF37  CD                 	db	low _mnsService
 25190   00FF38  FF                 	db	high _mnsService
 25191   00FF39  B9                 	db	low _nvService
 25192   00FF3A  FF                 	db	high _nvService
 25193   00FF3B  A5                 	db	low _bootService
 25194   00FF3C  FF                 	db	high _bootService
 25195   00FF3D  91                 	db	low _eventTeachService
 25196   00FF3E  FF                 	db	high _eventTeachService
 25197   00FF3F  7D                 	db	low _eventConsumerService
 25198   00FF40  FF                 	db	high _eventConsumerService
 25199   00FF41  69                 	db	low _eventProducerService
 25200   00FF42  FF                 	db	high _eventProducerService
 25201   00FF43  55                 	db	low _eventCoeService
 25202   00FF44  FF                 	db	high _eventCoeService
 25203   00FF45                     __end_of_services:
 25204                           	callstack 0
 25205   00FF45                     _bl_version:
 25206                           	callstack 0
 25207   00FF45  42                 	db	66
 25208   00FF46  4C                 	db	76
 25209   00FF47  5F                 	db	95
 25210   00FF48  56                 	db	86
 25211   00FF49  45                 	db	69
 25212   00FF4A  52                 	db	82
 25213   00FF4B  53                 	db	83
 25214   00FF4C  49                 	db	73
 25215   00FF4D  4F                 	db	79
 25216   00FF4E  4E                 	db	78
 25217   00FF4F  3D                 	db	61
 25218   00FF50                     __end_of_bl_version:
 25219                           	callstack 0
 25220   000848                     _name_absaddr   set	2120
 25221   00FF50                     _canPri:
 25222                           	callstack 0
 25223   00FF50  0B                 	db	11
 25224   00FF51  0A                 	db	10
 25225   00FF52  09                 	db	9
 25226   00FF53  08                 	db	8
 25227   00FF54  00                 	db	0
 25228   00FF55                     __end_of_canPri:
 25229                           	callstack 0
 25230   00FF55                     _eventCoeService:
 25231                           	callstack 0
 25232   00FF55  08                 	db	8
 25233   00FF56  01                 	db	1
 25234   00FF57  00                 	db	0
 25235   00FF58  00                 	db	0
 25236   00FF59  00                 	db	0
 25237   00FF5A  00                 	db	0
 25238   00FF5B  00                 	db	0
 25239   00FF5C  00                 	db	0
 25240   00FF5D  00                 	db	0
 25241   00FF5E  00                 	db	0
 25242   00FF5F  00                 	db	0
 25243   00FF60  00                 	db	0
 25244   00FF61  00                 	db	0
 25245   00FF62  00                 	db	0
 25246   00FF63  00                 	db	0
 25247   00FF64  00                 	db	0
 25248   00FF65  00                 	db	0
 25249   00FF66  00                 	db	0
 25250   00FF67  00                 	db	0
 25251   00FF68  00                 	db	0
 25252   00FF69                     __end_of_eventCoeService:
 25253                           	callstack 0
 25254   00FF69                     _eventProducerService:
 25255                           	callstack 0
 25256   00FF69  05                 	db	5
 25257   00FF6A  01                 	db	1
 25258   00FF6B  00                 	db	0
 25259   00FF6C  00                 	db	0
 25260   00FF6D  00                 	db	0
 25261   00FF6E  6E                 	db	low _producerPowerUp
 25262   00FF6F  62                 	db	high _producerPowerUp
 25263   00FF70  01                 	db	low (_producerPowerUp shr (0+16))
 25264   00FF71  9A                 	db	low _producerProcessMessage
 25265   00FF72  25                 	db	high _producerProcessMessage
 25266   00FF73  01                 	db	low (_producerProcessMessage shr (0+16))
 25267   00FF74  00                 	db	0
 25268   00FF75  00                 	db	0
 25269   00FF76  00                 	db	0
 25270   00FF77  1E                 	db	low _producerEsdData
 25271   00FF78  66                 	db	high _producerEsdData
 25272   00FF79  01                 	db	low (_producerEsdData shr (0+16))
 25273   00FF7A  AE                 	db	low _producerGetDiagnostic
 25274   00FF7B  64                 	db	high _producerGetDiagnostic
 25275   00FF7C  01                 	db	low (_producerGetDiagnostic shr (0+16))
 25276   00FF7D                     __end_of_eventProducerService:
 25277                           	callstack 0
 25278   00FF7D                     _eventConsumerService:
 25279                           	callstack 0
 25280   00FF7D  06                 	db	6
 25281   00FF7E  02                 	db	2
 25282   00FF7F  00                 	db	0
 25283   00FF80  00                 	db	0
 25284   00FF81  00                 	db	0
 25285   00FF82  9A                 	db	low _consumerPowerUp
 25286   00FF83  62                 	db	high _consumerPowerUp
 25287   00FF84  01                 	db	low (_consumerPowerUp shr (0+16))
 25288   00FF85  6C                 	db	low _consumerProcessMessage
 25289   00FF86  23                 	db	high _consumerProcessMessage
 25290   00FF87  01                 	db	low (_consumerProcessMessage shr (0+16))
 25291   00FF88  00                 	db	0
 25292   00FF89  00                 	db	0
 25293   00FF8A  00                 	db	0
 25294   00FF8B  5E                 	db	low _consumerEsdData
 25295   00FF8C  67                 	db	high _consumerEsdData
 25296   00FF8D  01                 	db	low (_consumerEsdData shr (0+16))
 25297   00FF8E  1A                 	db	low _consumerGetDiagnostic
 25298   00FF8F  65                 	db	high _consumerGetDiagnostic
 25299   00FF90  01                 	db	low (_consumerGetDiagnostic shr (0+16))
 25300   00FF91                     __end_of_eventConsumerService:
 25301                           	callstack 0
 25302   00FF91                     _eventTeachService:
 25303                           	callstack 0
 25304   00FF91  04                 	db	4
 25305   00FF92  01                 	db	1
 25306   00FF93  BA                 	db	low _teachFactoryReset
 25307   00FF94  67                 	db	high _teachFactoryReset
 25308   00FF95  01                 	db	low (_teachFactoryReset shr (0+16))
 25309   00FF96  46                 	db	low _teachPowerUp
 25310   00FF97  61                 	db	high _teachPowerUp
 25311   00FF98  01                 	db	low (_teachPowerUp shr (0+16))
 25312   00FF99  62                 	db	low _teachProcessMessage
 25313   00FF9A  0B                 	db	high _teachProcessMessage
 25314   00FF9B  01                 	db	low (_teachProcessMessage shr (0+16))
 25315   00FF9C  00                 	db	0
 25316   00FF9D  00                 	db	0
 25317   00FF9E  00                 	db	0
 25318   00FF9F  84                 	db	low _teachGetESDdata
 25319   00FFA0  65                 	db	high _teachGetESDdata
 25320   00FFA1  01                 	db	low (_teachGetESDdata shr (0+16))
 25321   00FFA2  3E                 	db	low _teachGetDiagnostic
 25322   00FFA3  65                 	db	high _teachGetDiagnostic
 25323   00FFA4  01                 	db	low (_teachGetDiagnostic shr (0+16))
 25324   00FFA5                     __end_of_eventTeachService:
 25325                           	callstack 0
 25326   00FFA5                     _bootService:
 25327                           	callstack 0
 25328   00FFA5  0A                 	db	10
 25329   00FFA6  03                 	db	3
 25330   00FFA7  00                 	db	0
 25331   00FFA8  00                 	db	0
 25332   00FFA9  00                 	db	0
 25333   00FFAA  76                 	db	low _bootPowerUp
 25334   00FFAB  41                 	db	high _bootPowerUp
 25335   00FFAC  01                 	db	low (_bootPowerUp shr (0+16))
 25336   00FFAD  B6                 	db	low _bootProcessMessage
 25337   00FFAE  50                 	db	high _bootProcessMessage
 25338   00FFAF  01                 	db	low (_bootProcessMessage shr (0+16))
 25339   00FFB0  00                 	db	0
 25340   00FFB1  00                 	db	0
 25341   00FFB2  00                 	db	0
 25342   00FFB3  8A                 	db	low _bootEsdData
 25343   00FFB4  64                 	db	high _bootEsdData
 25344   00FFB5  01                 	db	low (_bootEsdData shr (0+16))
 25345   00FFB6  00                 	db	0
 25346   00FFB7  00                 	db	0
 25347   00FFB8  00                 	db	0
 25348   00FFB9                     __end_of_bootService:
 25349                           	callstack 0
 25350   00FFB9                     _nvService:
 25351                           	callstack 0
 25352   00FFB9  02                 	db	2
 25353   00FFBA  02                 	db	2
 25354   00FFBB  10                 	db	low _nvFactoryReset
 25355   00FFBC  61                 	db	high _nvFactoryReset
 25356   00FFBD  01                 	db	low (_nvFactoryReset shr (0+16))
 25357   00FFBE  E0                 	db	low _nvPowerUp
 25358   00FFBF  61                 	db	high _nvPowerUp
 25359   00FFC0  01                 	db	low (_nvPowerUp shr (0+16))
 25360   00FFC1  B8                 	db	low _nvProcessMessage
 25361   00FFC2  1B                 	db	high _nvProcessMessage
 25362   00FFC3  01                 	db	low (_nvProcessMessage shr (0+16))
 25363   00FFC4  00                 	db	0
 25364   00FFC5  00                 	db	0
 25365   00FFC6  00                 	db	0
 25366   00FFC7  B8                 	db	low _nvGetESDdata
 25367   00FFC8  66                 	db	high _nvGetESDdata
 25368   00FFC9  01                 	db	low (_nvGetESDdata shr (0+16))
 25369   00FFCA  D2                 	db	low _nvGetDiagnostic
 25370   00FFCB  64                 	db	high _nvGetDiagnostic
 25371   00FFCC  01                 	db	low (_nvGetDiagnostic shr (0+16))
 25372   00FFCD                     __end_of_nvService:
 25373                           	callstack 0
 25374   00FFCD                     _mnsService:
 25375                           	callstack 0
 25376   00FFCD  01                 	db	1
 25377   00FFCE  02                 	db	2
 25378   00FFCF  1A                 	db	low _mnsFactoryReset
 25379   00FFD0  54                 	db	high _mnsFactoryReset
 25380   00FFD1  01                 	db	low (_mnsFactoryReset shr (0+16))
 25381   00FFD2  58                 	db	low _mnsPowerUp
 25382   00FFD3  37                 	db	high _mnsPowerUp
 25383   00FFD4  01                 	db	low (_mnsPowerUp shr (0+16))
 25384   00FFD5  00                 	db	low _mnsProcessMessage
 25385   00FFD6  00                 	db	high _mnsProcessMessage
 25386   00FFD7  01                 	db	low (_mnsProcessMessage shr (0+16))
 25387   00FFD8  DE                 	db	low _mnsPoll
 25388   00FFD9  14                 	db	high _mnsPoll
 25389   00FFDA  01                 	db	low (_mnsPoll shr (0+16))
 25390   00FFDB  00                 	db	0
 25391   00FFDC  00                 	db	0
 25392   00FFDD  00                 	db	0
 25393   00FFDE  F6                 	db	low _mnsGetDiagnostic
 25394   00FFDF  64                 	db	high _mnsGetDiagnostic
 25395   00FFE0  01                 	db	low (_mnsGetDiagnostic shr (0+16))
 25396   00FFE1                     __end_of_mnsService:
 25397                           	callstack 0
 25398   00FFE1                     _canService:
 25399                           	callstack 0
 25400   00FFE1  03                 	db	3
 25401   00FFE2  02                 	db	2
 25402   00FFE3  56                 	db	low _canFactoryReset
 25403   00FFE4  66                 	db	high _canFactoryReset
 25404   00FFE5  01                 	db	low (_canFactoryReset shr (0+16))
 25405   00FFE6  4E                 	db	low _canPowerUp
 25406   00FFE7  32                 	db	high _canPowerUp
 25407   00FFE8  01                 	db	low (_canPowerUp shr (0+16))
 25408   00FFE9  12                 	db	low _canProcessMessage
 25409   00FFEA  47                 	db	high _canProcessMessage
 25410   00FFEB  01                 	db	low (_canProcessMessage shr (0+16))
 25411   00FFEC  AE                 	db	low _canPoll
 25412   00FFED  67                 	db	high _canPoll
 25413   00FFEE  01                 	db	low (_canPoll shr (0+16))
 25414   00FFEF  CE                 	db	low _canEsdData
 25415   00FFF0  66                 	db	high _canEsdData
 25416   00FFF1  01                 	db	low (_canEsdData shr (0+16))
 25417   00FFF2  EE                 	db	low _canGetDiagnostic
 25418   00FFF3  4A                 	db	high _canGetDiagnostic
 25419   00FFF4  01                 	db	low (_canGetDiagnostic shr (0+16))
 25420   00FFF5                     __end_of_canService:
 25421                           	callstack 0
 25422   00FFF5                     _canTransport:
 25423                           	callstack 0
 25424   00FFF5  20                 	db	low _canSendMessage
 25425   00FFF6  11                 	db	high _canSendMessage
 25426   00FFF7  01                 	db	low (_canSendMessage shr (0+16))
 25427   00FFF8  F4                 	db	low _canReceiveMessage
 25428   00FFF9  2E                 	db	high _canReceiveMessage
 25429   00FFFA  01                 	db	low (_canReceiveMessage shr (0+16))
 25430   00FFFB  8C                 	db	low _canWaitForTxQueueToDrain
 25431   00FFFC  67                 	db	high _canWaitForTxQueueToDrain
 25432   00FFFD  01                 	db	low (_canWaitForTxQueueToDrain shr (0+16))
 25433   00FFFE                     __end_of_canTransport:
 25434                           	callstack 0
 25435   000820                     _paramBlock_absaddr set	2080
 25436   00FFFE  00                 	db	0	; dummy byte at the end
 25437   00FE34                     __smallconst    set	__pmediumconst
 25438   00FE34                     __mediumconst   set	__pmediumconst
 25439   000003                     __activetblptr  equ	3
 25440                           
 25441                           	psect	_paramBlock_text
 25442   000820                     __p_paramBlock_text:
 25443                           	callstack 0
 25444   000820                     _paramBlock:
 25445                           	callstack 0
 25446   000820  A5                 	db	165
 25447   000821  61                 	db	97
 25448   000822  1D                 	db	29
 25449   000823  FE                 	db	254
 25450   000824  0D                 	db	13
 25451   000825  43                 	db	67
 25452   000826  05                 	db	5
 25453   000827  0B                 	db	11
 25454   000828  17                 	db	23
 25455   000829  01                 	db	1
 25456   00082A  00                 	db	0
 25457   00082B  08                 	db	8
 25458   00082C  00                 	db	0
 25459   00082D  00                 	db	0
 25460   00082E  00                 	db	0
 25461   00082F  00                 	db	0
 25462   000830  00                 	db	0
 25463   000831  00                 	db	0
 25464   000832  01                 	db	1
 25465   000833  08                 	db	8
 25466   000834  00                 	db	0
 25467   000835  00                 	db	0
 25468   000836  00                 	db	0
 25469   000837  00                 	db	0
 25470   000838  14                 	db	20
 25471   000839  00                 	db	0
 25472   00083A  48                 	db	72
 25473   00083B  08                 	db	8
 25474   00083C  00                 	db	0
 25475   00083D  00                 	db	0
 25476   00083E  0E                 	db	14
 25477   00083F  03                 	db	3
 25478   000840                     __end_of_paramBlock:
 25479                           	callstack 0
 25480   000848                     _name_absaddr   set	2120
 25481                           
 25482                           	psect	_name_text
 25483   000848                     __p_name_text:
 25484                           	callstack 0
 25485   000848                     _name:
 25486                           	callstack 0
 25487   000848  50                 	db	80
 25488   000849  41                 	db	65
 25489   00084A  4E                 	db	78
 25490   00084B  20                 	db	32
 25491   00084C  20                 	db	32
 25492   00084D  20                 	db	32
 25493   00084E  20                 	db	32
 25494   00084F  00                 	db	0
 25495   000850                     __end_of_name:
 25496                           	callstack 0
 25497   000043                     _NVMADR         set	67
 25498   000040                     _NVMCON0        set	64
 25499   0000AF                     _OSCCON3bits    set	175
 25500   0000AD                     _OSCCON1bits    set	173
 25501   000042                     _NVMLOCK        set	66
 25502   000046                     _NVMDATL        set	70
 25503   000043                     _NVMADRL        set	67
 25504   000044                     _NVMADRH        set	68
 25505   000045                     _NVMADRU        set	69
 25506   000040                     _NVMCON0bits    set	64
 25507   000041                     _NVMCON1bits    set	65
 25508   000087                     _SPI1STATUSbits set	135
 25509   000081                     _SPI1TXB        set	129
 25510   000084                     _SPI1CON0bits   set	132
 25511   000089                     _SPI1BAUD       set	137
 25512   00008C                     _SPI1CLK        set	140
 25513   000088                     _SPI1TWIDTH     set	136
 25514   000082                     _SPI1TCNTL      set	130
 25515   000083                     _SPI1TCNTH      set	131
 25516   000086                     _SPI1CON2       set	134
 25517   000085                     _SPI1CON1       set	133
 25518   000084                     _SPI1CON0       set	132
 25519   000158                     _C1TXQUA        set	344
 25520   00017C                     _C1FIFOUA3      set	380
 25521   000170                     _C1FIFOUA2      set	368
 25522   000164                     _C1FIFOUA1      set	356
 25523   00014C                     _C1FIFOBA       set	332
 25524   000102                     _C1CONUbits     set	258
 25525   000103                     _C1CONTbits     set	259
 25526   000175                     _C1FIFOCON3Hbits set	373
 25527   000179                     _C1FIFOSTA3Hbits set	377
 25528   00016D                     _C1FIFOSTA2Hbits set	365
 25529   00016C                     _C1FIFOSTA2Lbits set	364
 25530   000138                     _C1BDIAG0Lbits  set	312
 25531   000139                     _C1BDIAG0Hbits  set	313
 25532   000136                     _C1TRECU        set	310
 25533   000160                     _C1FIFOSTA1Lbits set	352
 25534   00015D                     _C1FIFOCON1Hbits set	349
 25535   00011D                     _C1INTHbits     set	285
 25536   000178                     _C1FIFOSTA3Lbits set	376
 25537   00011F                     _C1INTTbits     set	287
 25538   00011E                     _C1INTUbits     set	286
 25539   000180                     _C1FLTCON0L     set	384
 25540   000193                     _C1MASK0T       set	403
 25541   000192                     _C1MASK0U       set	402
 25542   000191                     _C1MASK0H       set	401
 25543   000190                     _C1MASK0L       set	400
 25544   00018F                     _C1FLTOBJ0T     set	399
 25545   00018E                     _C1FLTOBJ0U     set	398
 25546   00018D                     _C1FLTOBJ0H     set	397
 25547   00018C                     _C1FLTOBJ0L     set	396
 25548   000177                     _C1FIFOCON3T    set	375
 25549   000176                     _C1FIFOCON3U    set	374
 25550   000175                     _C1FIFOCON3H    set	373
 25551   000174                     _C1FIFOCON3L    set	372
 25552   00016B                     _C1FIFOCON2T    set	363
 25553   00016A                     _C1FIFOCON2U    set	362
 25554   000169                     _C1FIFOCON2H    set	361
 25555   000168                     _C1FIFOCON2L    set	360
 25556   00015F                     _C1FIFOCON1T    set	351
 25557   00015E                     _C1FIFOCON1U    set	350
 25558   00015D                     _C1FIFOCON1H    set	349
 25559   00015C                     _C1FIFOCON1L    set	348
 25560   000153                     _C1TXQCONT      set	339
 25561   000152                     _C1TXQCONU      set	338
 25562   000151                     _C1TXQCONH      set	337
 25563   000150                     _C1TXQCONL      set	336
 25564   000107                     _C1NBTCFGT      set	263
 25565   000106                     _C1NBTCFGU      set	262
 25566   000105                     _C1NBTCFGH      set	261
 25567   000104                     _C1NBTCFGL      set	260
 25568   000103                     _C1CONT         set	259
 25569   000102                     _C1CONU         set	258
 25570   000101                     _C1CONH         set	257
 25571   000100                     _C1CONL         set	256
 25572   000101                     _C1CONHbits     set	257
 25573   00023D                     _CANRXPPS       set	573
 25574   00020B                     _RB2PPS         set	523
 25575   000215                     _RC4PPS         set	533
 25576   000214                     _RC3PPS         set	532
 25577   000216                     _RC5PPS         set	534
 25578   000318                     _TMR0L          set	792
 25579   000319                     _TMR0H          set	793
 25580   00031A                     _T0CON0bits     set	794
 25581   00031B                     _T0CON1bits     set	795
 25582   000362                     _IPR0bits       set	866
 25583   000367                     _IPR5           set	871
 25584   001B2F                     _TMR0IP         set	6959
 25585   00250F                     _TMR0IE         set	9487
 25586   00258F                     _TMR0IF         set	9615
 25587   000459                     _IVTLOCKbits    set	1113
 25588   000459                     _IVTLOCK        set	1113
 25589   00045D                     _IVTBASEL       set	1117
 25590   00045E                     _IVTBASEH       set	1118
 25591   00045F                     _IVTBASEU       set	1119
 25592   0004F5                     _TABLAT         set	1269
 25593   0004F6                     _TBLPTRL        set	1270
 25594   0004F7                     _TBLPTRH        set	1271
 25595   0004F8                     _TBLPTRU        set	1272
 25596   0004CE                     _PORTAbits      set	1230
 25597   00049E                     _PIE0bits       set	1182
 25598   0004AE                     _PIR0bits       set	1198
 25599   0004C0                     _LATCbits       set	1216
 25600   0004BF                     _LATBbits       set	1215
 25601   0004BE                     _LATAbits       set	1214
 25602   0004CF                     _PORTB          set	1231
 25603   0004D0                     _PORTC          set	1232
 25604   0004C8                     _TRISCbits      set	1224
 25605   0004C7                     _TRISBbits      set	1223
 25606   0004C6                     _TRISAbits      set	1222
 25607   0004D6                     _INTCON0bits    set	1238
 25608   000410                     _ANSELC         set	1040
 25609   000408                     _ANSELB         set	1032
 25610   000400                     _ANSELA         set	1024
 25611   000411                     _WPUC           set	1041
 25612   000409                     _WPUB           set	1033
 25613   000401                     _WPUA           set	1025
 25614                           
 25615                           ; #config settings
 25616                           
 25617                           	psect	cinit
 25618   014F5A                     __pcinit:
 25619                           	callstack 0
 25620   014F5A                     start_initialization:
 25621                           	callstack 0
 25622   014F5A                     __initialization:
 25623                           	callstack 0
 25624                           
 25625                           ; Initialize objects allocated to BANK5 (2 bytes)
 25626                           ; load TBLPTR registers with __pidataBANK5
 25627   014F5A  0ED2               	movlw	low __pidataBANK5
 25628   014F5C  6EF6               	movwf	tblptrl,c
 25629   014F5E  0E67               	movlw	high __pidataBANK5
 25630   014F60  6EF7               	movwf	tblptrh,c
 25631   014F62  0E01               	movlw	low (__pidataBANK5 shr (0+16))
 25632   014F64  6EF8               	movwf	tblptru,c
 25633   014F66  0009               	tblrd		*+	;fetch initializer
 25634   014F68  C4F5 F5FC          	movff	tablat,__pdataBANK5
 25635   014F6C  0009               	tblrd		*+	;fetch initializer
 25636   014F6E  C4F5 F5FD          	movff	tablat,__pdataBANK5+1
 25637                           
 25638                           ; Clear objects allocated to BIGRAM (640 bytes)
 25639   014F72  EE02  F048         	lfsr	0,__pbssBIGRAM
 25640   014F76  EE10 F280          	lfsr	1,640
 25641   014F7A                     clear_0:
 25642   014F7A  6AEE               	clrf	postinc0,c
 25643   014F7C  50E5               	movf	postdec1,w,c
 25644   014F7E  50E1               	movf	fsr1l,w,c
 25645   014F80  E1FC               	bnz	clear_0
 25646   014F82  50E2               	movf	fsr1h,w,c
 25647   014F84  E1FA               	bnz	clear_0
 25648                           
 25649                           ; Clear objects allocated to BANK8 (72 bytes)
 25650   014F86  EE02  F000         	lfsr	0,__pbssBANK8
 25651   014F8A  0E48               	movlw	72
 25652   014F8C                     clear_1:
 25653   014F8C  6AEE               	clrf	postinc0,c
 25654   014F8E  06E8               	decf	wreg,f,c
 25655   014F90  E1FD               	bnz	clear_1
 25656                           
 25657                           ; Clear objects allocated to BANK7 (196 bytes)
 25658   014F92  EE01  F300         	lfsr	0,__pbssBANK7
 25659   014F96  0EC4               	movlw	196
 25660   014F98                     clear_2:
 25661   014F98  6AEE               	clrf	postinc0,c
 25662   014F9A  06E8               	decf	wreg,f,c
 25663   014F9C  E1FD               	bnz	clear_2
 25664                           
 25665                           ; Clear objects allocated to BANK6 (213 bytes)
 25666   014F9E  EE01  F200         	lfsr	0,__pbssBANK6
 25667   014FA2  0ED5               	movlw	213
 25668   014FA4                     clear_3:
 25669   014FA4  6AEE               	clrf	postinc0,c
 25670   014FA6  06E8               	decf	wreg,f,c
 25671   014FA8  E1FD               	bnz	clear_3
 25672                           
 25673                           ; Clear objects allocated to BANK5 (106 bytes)
 25674   014FAA  EE01  F160         	lfsr	0,__pbssBANK5
 25675   014FAE  0E6A               	movlw	106
 25676   014FB0                     clear_4:
 25677   014FB0  6AEE               	clrf	postinc0,c
 25678   014FB2  06E8               	decf	wreg,f,c
 25679   014FB4  E1FD               	bnz	clear_4
 25680                           
 25681                           ; Clear objects allocated to COMRAM (2 bytes)
 25682   014FB6  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
 25683   014FB8  6A5E               	clrf	__pbssCOMRAM& (0+255),c
 25684                           
 25685                           ;
 25686                           ; Setup IVTBASE
 25687                           ;
 25688   00045D                     IVTBASEL        equ	1117
 25689   00045E                     IVTBASEH        equ	1118
 25690   00045F                     IVTBASEU        equ	1119
 25691   014FBA  0104               	movlb	4
 25692   014FBC  0E00               	movlw	(ivt0x900_base shr 0)& (0+255)
 25693   014FBE  6F5D               	movwf	93,b
 25694   014FC0  0E09               	movlw	(ivt0x900_base shr (0+8))& (0+255)
 25695   014FC2  6F5E               	movwf	94,b
 25696   014FC4  0E00               	movlw	(ivt0x900_base shr (0+16))& (0+255)
 25697   014FC6  6F5F               	movwf	95,b
 25698   014FC8                     end_of_initialization:
 25699                           	callstack 0
 25700   014FC8                     __end_of__initialization:
 25701                           	callstack 0
 25702   014FC8  0100               	movlb	0
 25703   014FCA  EF35  F0A5         	goto	_main	;jump to C main() function
 25704                           
 25705                           	psect	bssCOMRAM
 25706   00055E                     __pbssCOMRAM:
 25707                           	callstack 0
 25708   00055E                     _nn:
 25709                           	callstack 0
 25710   00055E                     	ds	2
 25711                           
 25712                           	psect	bssBANK5
 25713   000560                     __pbssBANK5:
 25714                           	callstack 0
 25715   000560                     _pbTimer:
 25716                           	callstack 0
 25717   000560                     	ds	4
 25718   000564                     _enumerationStartTime:
 25719                           	callstack 0
 25720   000564                     	ds	4
 25721   000568                     _ledMatrix:
 25722                           	callstack 0
 25723   000568                     	ds	4
 25724   00056C                     _lastInputScanTime:
 25725                           	callstack 0
 25726   00056C                     	ds	4
 25727   000570                     _startTime:
 25728                           	callstack 0
 25729   000570                     	ds	4
 25730   000574                     _timedResponseCallback:
 25731                           	callstack 0
 25732   000574                     	ds	3
 25733   000577                     _flashBlock:
 25734                           	callstack 0
 25735   000577                     	ds	3
 25736   00057A                     _flashCounter:
 25737                           	callstack 0
 25738   00057A                     	ds	2
 25739   00057C                     _ledState:
 25740                           	callstack 0
 25741   00057C                     	ds	2
 25742   00057E                     _previousNN:
 25743                           	callstack 0
 25744   00057E                     	ds	2
 25745   000580                     _transport:
 25746                           	callstack 0
 25747   000580                     	ds	2
 25748   000582                     _currentMemory:
 25749                           	callstack 0
 25750   000582                     	ds	1
 25751   000583                     _timedResponseDelay:
 25752                           	callstack 0
 25753   000583                     	ds	1
 25754   000584                     _eeBootFlag:
 25755                           	callstack 0
 25756   000584                     	ds	1
 25757   000585                     _timedResponseStep:
 25758                           	callstack 0
 25759   000585                     	ds	1
 25760   000586                     _timedResponseType:
 25761                           	callstack 0
 25762   000586                     	ds	1
 25763   000587                     _timedResponseAllServicesFlag:
 25764                           	callstack 0
 25765   000587                     	ds	1
 25766   000588                     _timedResponseServiceIndex:
 25767                           	callstack 0
 25768   000588                     	ds	1
 25769   000589                     _timerExtension2:
 25770                           	callstack 0
 25771   000589                     	ds	1
 25772   00058A                     _timerExtension1:
 25773                           	callstack 0
 25774   00058A                     	ds	1
 25775   00058B                     _flashFlags:
 25776                           	callstack 0
 25777   00058B                     	ds	1
 25778   00058C                     _heartbeatSequence:
 25779                           	callstack 0
 25780   00058C                     	ds	1
 25781   00058D                     _pbWasPushed:
 25782                           	callstack 0
 25783   00058D                     	ds	1
 25784   00058E                     _setupModePreviousMode:
 25785                           	callstack 0
 25786   00058E                     	ds	1
 25787   00058F                     _last_mode_flags:
 25788                           	callstack 0
 25789   00058F                     	ds	1
 25790   000590                     _last_mode_state:
 25791                           	callstack 0
 25792   000590                     	ds	1
 25793   000591                     _mode_state:
 25794                           	callstack 0
 25795   000591                     	ds	1
 25796   000592                     _timedResponseOpcode:
 25797                           	callstack 0
 25798   000592                     	ds	1
 25799   000593                     _enumerationState:
 25800                           	callstack 0
 25801   000593                     	ds	1
 25802   000594                     _EnumerationState:
 25803                           	callstack 0
 25804   000594                     	ds	1
 25805   000595                     _canTransmitFailed:
 25806                           	callstack 0
 25807   000595                     	ds	1
 25808   000596                     _canId:
 25809                           	callstack 0
 25810   000596                     	ds	1
 25811   000597                     _bootloaderVersion:
 25812                           	callstack 0
 25813   000597                     	ds	1
 25814   000598                     _bootloaderType:
 25815                           	callstack 0
 25816   000598                     	ds	1
 25817   000599                     _startupNv:
 25818                           	callstack 0
 25819   000599                     	ds	1
 25820   00059A                     _flashToggle:
 25821                           	callstack 0
 25822   00059A                     	ds	1
 25823   00059B                     _brightness:
 25824                           	callstack 0
 25825   00059B                     	ds	1
 25826   00059C                     _cathodes:
 25827                           	callstack 0
 25828   00059C                     	ds	1
 25829   00059D                     _current_row:
 25830                           	callstack 0
 25831   00059D                     	ds	1
 25832   00059E                     _column:
 25833                           	callstack 0
 25834   00059E                     	ds	1
 25835   00059F                     _errno:
 25836                           	callstack 0
 25837   00059F                     	ds	1
 25838   0005A0                     _mode_flags:
 25839                           	callstack 0
 25840   0005A0                     	ds	1
 25841   0005A1                     _started:
 25842                           	callstack 0
 25843   0005A1                     	ds	1
 25844   0005A2                     _canpanScanReady:
 25845                           	callstack 0
 25846   0005A2                     	ds	1
 25847   0005A3                     _mnsDiagnostics:
 25848                           	callstack 0
 25849   0005A3                     	ds	14
 25850   0005B1                     _nvDiagnostics:
 25851                           	callstack 0
 25852   0005B1                     	ds	6
 25853   0005B7                     _consumerDiagnostics:
 25854                           	callstack 0
 25855   0005B7                     	ds	6
 25856   0005BD                     _rxQueue:
 25857                           	callstack 0
 25858   0005BD                     	ds	5
 25859   0005C2                     _producerDiagnostics:
 25860                           	callstack 0
 25861   0005C2                     	ds	4
 25862   0005C6                     _teachDiagnostics:
 25863                           	callstack 0
 25864   0005C6                     	ds	4
 25865                           
 25866                           	psect	dataBANK5
 25867   0005FC                     __pdataBANK5:
 25868                           	callstack 0
 25869   0005FC                     _flashBuffer:
 25870                           	callstack 0
 25871   0005FC                     	ds	2
 25872                           
 25873                           	psect	bssBANK6
 25874   000600                     __pbssBANK6:
 25875                           	callstack 0
 25876   000600                     _switch2Event:
 25877                           	callstack 0
 25878   000600                     	ds	33
 25879   000621                     _ledStates:
 25880                           	callstack 0
 25881   000621                     	ds	32
 25882   000641                     _outputState:
 25883                           	callstack 0
 25884   000641                     	ds	32
 25885   000661                     _enumerationResults:
 25886                           	callstack 0
 25887   000661                     	ds	16
 25888   000671                     _evs:
 25889                           	callstack 0
 25890   000671                     	ds	13
 25891   00067E                     _buttonState:
 25892                           	callstack 0
 25893   00067E                     	ds	8
 25894   000686                     _flashFlushTime:
 25895                           	callstack 0
 25896   000686                     	ds	4
 25897   00068A                     _timedResponseTime:
 25898                           	callstack 0
 25899   00068A                     	ds	4
 25900   00068E                     _ledTimer:
 25901                           	callstack 0
 25902   00068E                     	ds	4
 25903   000692                     _uptimeTimer:
 25904                           	callstack 0
 25905   000692                     	ds	4
 25906   000696                     _heartbeatTimer:
 25907                           	callstack 0
 25908   000696                     	ds	4
 25909   00069A                     _eepromWriterTime:
 25910                           	callstack 0
 25911   00069A                     	ds	4
 25912   00069E                     _outputPollTime:
 25913                           	callstack 0
 25914   00069E                     	ds	4
 25915   0006A2                     _flashTime:
 25916                           	callstack 0
 25917   0006A2                     	ds	4
 25918   0006A6                     _canDiagnostics:
 25919                           	callstack 0
 25920   0006A6                     	ds	38
 25921   0006CC                     _tmpMessage:
 25922                           	callstack 0
 25923   0006CC                     	ds	9
 25924                           
 25925                           	psect	bssBANK7
 25926   000700                     __pbssBANK7:
 25927                           	callstack 0
 25928   000700                     _nvCache:
 25929                           	callstack 0
 25930   000700                     	ds	68
 25931   000744                     _eeValue:
 25932                           	callstack 0
 25933   000744                     	ds	64
 25934   000784                     _writeNeeded:
 25935                           	callstack 0
 25936   000784                     	ds	64
 25937                           
 25938                           	psect	bssBANK8
 25939   000800                     __pbssBANK8:
 25940                           	callstack 0
 25941   000800                     _rxBuffers:
 25942                           	callstack 0
 25943   000800                     	ds	72
 25944                           
 25945                           	psect	bssBIGRAM
 25946   000848                     __pbssBIGRAM:
 25947                           	callstack 0
 25948   000848                     _eventChains:
 25949                           	callstack 0
 25950   000848                     	ds	640
 25951                           
 25952                           	psect	cstackBANK5
 25953   0005CA                     __pcstackBANK5:
 25954                           	callstack 0
 25955   0005CA                     ??_mnsProcessMessage:
 25956                           
 25957                           ; 1 bytes @ 0x0
 25958   0005CA                     	ds	24
 25959   0005E2                     ??_APP_preProcessMessage:
 25960                           
 25961                           ; 1 bytes @ 0x18
 25962   0005E2                     	ds	3
 25963   0005E5                     APP_preProcessMessage@ev:
 25964                           	callstack 0
 25965                           
 25966                           ; 1 bytes @ 0x1B
 25967   0005E5                     	ds	1
 25968   0005E6                     APP_preProcessMessage@enn:
 25969                           	callstack 0
 25970                           
 25971                           ; 2 bytes @ 0x1C
 25972   0005E6                     	ds	2
 25973   0005E8                     APP_preProcessMessage@switchNo:
 25974                           	callstack 0
 25975                           
 25976                           ; 1 bytes @ 0x1E
 25977   0005E8                     	ds	1
 25978   0005E9                     APP_preProcessMessage@tableIndex:
 25979                           	callstack 0
 25980                           
 25981                           ; 1 bytes @ 0x1F
 25982   0005E9                     	ds	1
 25983   0005EA                     ??_poll:
 25984                           
 25985                           ; 1 bytes @ 0x20
 25986   0005EA                     	ds	4
 25987   0005EE                     poll@handled:
 25988                           	callstack 0
 25989                           
 25990                           ; 1 bytes @ 0x24
 25991   0005EE                     	ds	1
 25992   0005EF                     poll@i:
 25993                           	callstack 0
 25994                           
 25995                           ; 1 bytes @ 0x25
 25996   0005EF                     	ds	1
 25997   0005F0                     poll@m:
 25998                           	callstack 0
 25999                           
 26000                           ; 9 bytes @ 0x26
 26001   0005F0                     	ds	9
 26002   0005F9                     main@i:
 26003                           	callstack 0
 26004                           
 26005                           ; 1 bytes @ 0x2F
 26006   0005F9                     	ds	1
 26007   0005FA                     main@t1:
 26008                           	callstack 0
 26009                           
 26010                           ; 1 bytes @ 0x30
 26011   0005FA                     	ds	1
 26012   0005FB                     main@t2:
 26013                           	callstack 0
 26014                           
 26015                           ; 1 bytes @ 0x31
 26016   0005FB                     	ds	1
 26017                           
 26018                           	psect	cstackCOMRAM
 26019   000501                     __pcstackCOMRAM:
 26020                           	callstack 0
 26021   000501                     ?_getNV:
 26022                           	callstack 0
 26023   000501                     ?_getNextWriteMessage:
 26024                           	callstack 0
 26025   000501                     ?_pop:
 26026                           	callstack 0
 26027   000501                     ?___awdiv:
 26028                           	callstack 0
 26029   000501                     ?_tickGet:
 26030                           	callstack 0
 26031   000501                     findEventForSwitch@switchNo:
 26032                           	callstack 0
 26033   000501                     APP_nvDefault@index:
 26034                           	callstack 0
 26035   000501                     APP_nvValidate@value:
 26036                           	callstack 0
 26037   000501                     APP_nvValueChanged@value:
 26038                           	callstack 0
 26039   000501                     initOutputs@i:
 26040                           	callstack 0
 26041   000501                     bootEsdData@id:
 26042                           	callstack 0
 26043   000501                     canEsdData@id:
 26044                           	callstack 0
 26045   000501                     CAN1_OperationModeSet@status:
 26046                           	callstack 0
 26047   000501                     consumerPowerUp@temp:
 26048                           	callstack 0
 26049   000501                     consumerEsdData@index:
 26050                           	callstack 0
 26051   000501                     teachGetESDdata@id:
 26052                           	callstack 0
 26053   000501                     evtIdxToTableIndex@evtIdx:
 26054                           	callstack 0
 26055   000501                     tableIndexToEvtIdx@tableIndex:
 26056                           	callstack 0
 26057   000501                     nvGetESDdata@id:
 26058                           	callstack 0
 26059   000501                     _isEvent$6241:
 26060                           	callstack 0
 26061   000501                     producerPowerUp@i:
 26062                           	callstack 0
 26063   000501                     producerEsdData@index:
 26064                           	callstack 0
 26065   000501                     writeEEvalue@value:
 26066                           	callstack 0
 26067   000501                     readEEvalue@address:
 26068                           	callstack 0
 26069   000501                     APP_postProcessMessage@m:
 26070                           	callstack 0
 26071   000501                     prepareSelfEnumResponse@txFifoObj:
 26072                           	callstack 0
 26073   000501                     sendRTR@txFifoObj:
 26074                           	callstack 0
 26075   000501                     getNextWriteMessage@q:
 26076                           	callstack 0
 26077   000501                     pop@q:
 26078                           	callstack 0
 26079   000501                     ___awdiv@dividend:
 26080                           	callstack 0
 26081   000501                     memcpy@d1:
 26082                           	callstack 0
 26083   000501                     EEPROM_Read@index:
 26084                           	callstack 0
 26085   000501                     EEPROM_WriteNoVerify@index:
 26086                           	callstack 0
 26087   000501                     FLASH_Read@address:
 26088                           	callstack 0
 26089   000501                     ??_driveColumn:
 26090   000501                     ??_findServiceIndex:
 26091   000501                     ??_getNumTxBuffersInUse:
 26092   000501                     ??_getNumRxBuffersInUse:
 26093   000501                     ??_have:
 26094   000501                     ??_showStatus:
 26095   000501                     ??_eraseFlashBlock:
 26096   000501                     ??_loadFlashBlock:
 26097   000501                     ??_initTicker:
 26098   000501                     
 26099                           ; 1 bytes @ 0x0
 26100   000501                     	ds	1
 26101   000502                     APP_nvValidate@index:
 26102                           	callstack 0
 26103   000502                     APP_nvValueChanged@oldValue:
 26104                           	callstack 0
 26105   000502                     CAN1_OperationModeSet@requestMode:
 26106                           	callstack 0
 26107   000502                     initTicker@priority:
 26108                           	callstack 0
 26109   000502                     isEvent@opc:
 26110                           	callstack 0
 26111   000502                     
 26112                           ; 1 bytes @ 0x1
 26113   000502                     	ds	1
 26114   000503                     showStatus@s:
 26115                           	callstack 0
 26116   000503                     initTicker@divider:
 26117                           	callstack 0
 26118   000503                     findServiceIndex@serviceType:
 26119                           	callstack 0
 26120   000503                     have@id:
 26121                           	callstack 0
 26122   000503                     writeEEvalue@address:
 26123                           	callstack 0
 26124   000503                     ___awdiv@divisor:
 26125                           	callstack 0
 26126   000503                     memcpy@s1:
 26127                           	callstack 0
 26128   000503                     ??_getNV:
 26129   000503                     
 26130                           ; 1 bytes @ 0x2
 26131   000503                     	ds	1
 26132   000504                     getNV@index:
 26133                           	callstack 0
 26134   000504                     EEPROM_WriteNoVerify@value:
 26135                           	callstack 0
 26136   000504                     eraseFlashBlock@interruptEnabled:
 26137                           	callstack 0
 26138   000504                     initTicker@i:
 26139                           	callstack 0
 26140   000504                     findServiceIndex@i:
 26141                           	callstack 0
 26142   000504                     have@i:
 26143                           	callstack 0
 26144   000504                     ??_getNextWriteMessage:
 26145   000504                     ??_pop:
 26146   000504                     ??_EEPROM_Read:
 26147   000504                     ??_FLASH_Read:
 26148                           
 26149                           ; 1 bytes @ 0x3
 26150   000504                     	ds	1
 26151   000505                     ?___lmul:
 26152                           	callstack 0
 26153   000505                     saveSwitchState@onOff:
 26154                           	callstack 0
 26155   000505                     getParameterFlags@flags:
 26156                           	callstack 0
 26157   000505                     flushFlashBlock@interruptEnabled:
 26158                           	callstack 0
 26159   000505                     tickGet@IntFlag2:
 26160                           	callstack 0
 26161   000505                     startTimedResponse@serviceIndex:
 26162                           	callstack 0
 26163   000505                     ___awdiv@counter:
 26164                           	callstack 0
 26165   000505                     getNumTxBuffersInUse@i16:
 26166                           	callstack 0
 26167   000505                     getNumRxBuffersInUse@i16:
 26168                           	callstack 0
 26169   000505                     memcpy@n:
 26170                           	callstack 0
 26171   000505                     ___lmul@multiplier:
 26172                           	callstack 0
 26173   000505                     ??_initInputs:
 26174   000505                     ??_pollOutputs:
 26175   000505                     ??_EEPROM_WriteNoVerify:
 26176   000505                     
 26177                           ; 1 bytes @ 0x4
 26178   000505                     	ds	1
 26179   000506                     initInputs@startNv:
 26180                           	callstack 0
 26181   000506                     saveSwitchState@buttonNo:
 26182                           	callstack 0
 26183   000506                     getParameter@idx:
 26184                           	callstack 0
 26185   000506                     tickGet@IntFlag1:
 26186                           	callstack 0
 26187   000506                     ___awdiv@sign:
 26188                           	callstack 0
 26189   000506                     FLASH_Write@index:
 26190                           	callstack 0
 26191   000506                     startTimedResponse@callback:
 26192                           	callstack 0
 26193   000506                     
 26194                           ; 1 bytes @ 0x5
 26195   000506                     	ds	1
 26196   000507                     ?_readNVM:
 26197                           	callstack 0
 26198   000507                     ?_canGetDiagnostic:
 26199                           	callstack 0
 26200   000507                     ?_consumerGetDiagnostic:
 26201                           	callstack 0
 26202   000507                     ?_teachGetDiagnostic:
 26203                           	callstack 0
 26204   000507                     ?_mnsGetDiagnostic:
 26205                           	callstack 0
 26206   000507                     ?_nvGetDiagnostic:
 26207                           	callstack 0
 26208   000507                     ?_producerGetDiagnostic:
 26209                           	callstack 0
 26210   000507                     initInputs@i:
 26211                           	callstack 0
 26212   000507                     ___awdiv@quotient:
 26213                           	callstack 0
 26214   000507                     memcpy@d:
 26215                           	callstack 0
 26216   000507                     readNVM@index:
 26217                           	callstack 0
 26218   000507                     tickGet@currentTime:
 26219                           	callstack 0
 26220   000507                     
 26221                           ; 1 bytes @ 0x6
 26222   000507                     	ds	1
 26223   000508                     pollOutputs@offset:
 26224                           	callstack 0
 26225   000508                     EEPROM_WriteNoVerify@interruptEnabled:
 26226                           	callstack 0
 26227                           
 26228                           ; 1 bytes @ 0x7
 26229   000508                     	ds	1
 26230   000509                     pollOutputs@i:
 26231                           	callstack 0
 26232   000509                     FLASH_Write@value:
 26233                           	callstack 0
 26234   000509                     startTimedResponse@type:
 26235                           	callstack 0
 26236   000509                     pop@ret:
 26237                           	callstack 0
 26238   000509                     memcpy@s:
 26239                           	callstack 0
 26240   000509                     EEPROM_Write@index:
 26241                           	callstack 0
 26242   000509                     ___lmul@multiplicand:
 26243                           	callstack 0
 26244   000509                     ??_setLed:
 26245   000509                     ??_clearLed:
 26246                           
 26247                           ; 1 bytes @ 0x8
 26248   000509                     	ds	1
 26249   00050A                     consumerGetDiagnostic@index:
 26250                           	callstack 0
 26251   00050A                     teachGetDiagnostic@index:
 26252                           	callstack 0
 26253   00050A                     mnsGetDiagnostic@index:
 26254                           	callstack 0
 26255   00050A                     nvGetDiagnostic@index:
 26256                           	callstack 0
 26257   00050A                     producerGetDiagnostic@index:
 26258                           	callstack 0
 26259   00050A                     pollEEPROMwriter@i:
 26260                           	callstack 0
 26261   00050A                     ??_readNVM:
 26262   00050A                     ??_canGetDiagnostic:
 26263   00050A                     ??_FLASH_Write:
 26264                           
 26265                           ; 1 bytes @ 0x9
 26266   00050A                     	ds	1
 26267   00050B                     ?___lldiv:
 26268                           	callstack 0
 26269   00050B                     setLed@no:
 26270                           	callstack 0
 26271   00050B                     canGetDiagnostic@index:
 26272                           	callstack 0
 26273   00050B                     startEnumeration@txWaiting:
 26274                           	callstack 0
 26275   00050B                     memcpy@tmp:
 26276                           	callstack 0
 26277   00050B                     ___lldiv@dividend:
 26278                           	callstack 0
 26279   00050B                     ??_handleSelfEnumeration:
 26280   00050B                     ??_leds_poll:
 26281                           
 26282                           ; 1 bytes @ 0xA
 26283   00050B                     	ds	1
 26284   00050C                     clearLed@no:
 26285                           	callstack 0
 26286   00050C                     startEnumeration@i:
 26287                           	callstack 0
 26288   00050C                     EEPROM_Write@value:
 26289                           	callstack 0
 26290   00050C                     readNVM@type:
 26291                           	callstack 0
 26292                           
 26293                           ; 1 bytes @ 0xB
 26294   00050C                     	ds	1
 26295   00050D                     ?_getEv:
 26296                           	callstack 0
 26297   00050D                     ?_getNN:
 26298                           	callstack 0
 26299   00050D                     ?_getEN:
 26300                           	callstack 0
 26301   00050D                     setLedStateNoSave@state:
 26302                           	callstack 0
 26303   00050D                     bootPowerUp@b:
 26304                           	callstack 0
 26305   00050D                     getEv@evNum:
 26306                           	callstack 0
 26307   00050D                     getNextWriteMessage@wr:
 26308                           	callstack 0
 26309   00050D                     mnsPowerUp@i:
 26310                           	callstack 0
 26311   00050D                     canPowerUp@temp:
 26312                           	callstack 0
 26313   00050D                     ___lmul@product:
 26314                           	callstack 0
 26315   00050D                     ??_doFlash:
 26316   00050D                     ??_getEVs:
 26317   00050D                     ??_loadNvCache:
 26318   00050D                     
 26319                           ; 1 bytes @ 0xC
 26320   00050D                     	ds	1
 26321   00050E                     bootPowerUp@found:
 26322                           	callstack 0
 26323   00050E                     canSendMessage@mp:
 26324                           	callstack 0
 26325   00050E                     mnsPowerUp@temp:
 26326                           	callstack 0
 26327   00050E                     writeNVM@index:
 26328                           	callstack 0
 26329   00050E                     ??_setLedStateNoSave:
 26330                           
 26331                           ; 1 bytes @ 0xD
 26332   00050E                     	ds	1
 26333   00050F                     doFlash@ledNo:
 26334                           	callstack 0
 26335   00050F                     bootPowerUp@i:
 26336                           	callstack 0
 26337   00050F                     handleSelfEnumeration@receivedCanId:
 26338                           	callstack 0
 26339   00050F                     loadNvCache@temp:
 26340                           	callstack 0
 26341   00050F                     ___lldiv@divisor:
 26342                           	callstack 0
 26343   00050F                     ??_getEv:
 26344   00050F                     ??_getNN:
 26345   00050F                     ??_getEN:
 26346                           
 26347                           ; 1 bytes @ 0xE
 26348   00050F                     	ds	1
 26349   000510                     setLedStateNoSave@ledNo:
 26350                           	callstack 0
 26351   000510                     canReceiveMessage@m:
 26352                           	callstack 0
 26353   000510                     bootPowerUp@a:
 26354                           	callstack 0
 26355   000510                     ??_canSendMessage:
 26356                           
 26357                           ; 1 bytes @ 0xF
 26358   000510                     	ds	1
 26359   000511                     initLeds@state:
 26360                           	callstack 0
 26361   000511                     setLedState@state:
 26362                           	callstack 0
 26363   000511                     loadNvCache@i:
 26364                           	callstack 0
 26365   000511                     writeNVM@value:
 26366                           	callstack 0
 26367   000511                     
 26368                           ; 1 bytes @ 0x10
 26369   000511                     	ds	1
 26370   000512                     initLeds@ledNo:
 26371                           	callstack 0
 26372   000512                     setLedState@ledNo:
 26373                           	callstack 0
 26374   000512                     nvPowerUp@i:
 26375                           	callstack 0
 26376   000512                     getNN@hi:
 26377                           	callstack 0
 26378   000512                     getEN@hi:
 26379                           	callstack 0
 26380   000512                     ??_writeNVM:
 26381   000512                     ??_canReceiveMessage:
 26382   000512                     
 26383                           ; 1 bytes @ 0x11
 26384   000512                     	ds	1
 26385   000513                     canReceiveMessage@incomingCanId:
 26386                           	callstack 0
 26387   000513                     ___lldiv@quotient:
 26388                           	callstack 0
 26389   000513                     
 26390                           ; 1 bytes @ 0x12
 26391   000513                     	ds	1
 26392   000514                     writeNVM@type:
 26393                           	callstack 0
 26394   000514                     canReceiveMessage@mp:
 26395                           	callstack 0
 26396   000514                     getNN@lo:
 26397                           	callstack 0
 26398   000514                     getEN@lo:
 26399                           	callstack 0
 26400                           
 26401                           ; 2 bytes @ 0x13
 26402   000514                     	ds	1
 26403   000515                     setNewCanId@newCanId:
 26404                           	callstack 0
 26405   000515                     writeEv@evNum:
 26406                           	callstack 0
 26407   000515                     setNV@value:
 26408                           	callstack 0
 26409   000515                     ??_nvFactoryReset:
 26410                           
 26411                           ; 1 bytes @ 0x14
 26412   000515                     	ds	1
 26413   000516                     writeEv@evVal:
 26414                           	callstack 0
 26415   000516                     getEVs@tableIndex:
 26416                           	callstack 0
 26417   000516                     getNN@flags:
 26418                           	callstack 0
 26419   000516                     getEN@tableIndex:
 26420                           	callstack 0
 26421   000516                     canSendMessage@temp:
 26422                           	callstack 0
 26423   000516                     canReceiveMessage@temp:
 26424                           	callstack 0
 26425   000516                     ??_processEnumeration:
 26426   000516                     ??_setNV:
 26427                           
 26428                           ; 1 bytes @ 0x15
 26429   000516                     	ds	1
 26430   000517                     getEVs@evIdx:
 26431                           	callstack 0
 26432   000517                     getNN@tableIndex:
 26433                           	callstack 0
 26434   000517                     nvFactoryReset@i:
 26435                           	callstack 0
 26436   000517                     ___lldiv@counter:
 26437                           	callstack 0
 26438   000517                     ??_writeEv:
 26439                           
 26440                           ; 1 bytes @ 0x16
 26441   000517                     	ds	1
 26442   000518                     getEv@tableIndex:
 26443                           	callstack 0
 26444   000518                     setNV@oldValue:
 26445                           	callstack 0
 26446   000518                     APP_processConsumedEvent@m:
 26447                           	callstack 0
 26448   000518                     canSendMessage@m:
 26449                           	callstack 0
 26450   000518                     canReceiveMessage@rxFifoObj:
 26451                           	callstack 0
 26452   000518                     getHash@nn:
 26453                           	callstack 0
 26454   000518                     ??_pbDownTimer:
 26455   000518                     ??_pbUpTimer:
 26456                           
 26457                           ; 1 bytes @ 0x17
 26458   000518                     	ds	1
 26459   000519                     APP_isConsumedEvent@tableIndex:
 26460                           	callstack 0
 26461   000519                     APP_isProducedEvent@tableIndex:
 26462                           	callstack 0
 26463   000519                     setNV@index:
 26464                           	callstack 0
 26465   000519                     rebuildLookupTable@swNo:
 26466                           	callstack 0
 26467   000519                     
 26468                           ; 1 bytes @ 0x18
 26469   000519                     	ds	1
 26470   00051A                     processEnumeration@enumResult:
 26471                           	callstack 0
 26472   00051A                     APP_isConsumedEvent@ev:
 26473                           	callstack 0
 26474   00051A                     APP_isProducedEvent@ev:
 26475                           	callstack 0
 26476   00051A                     canSendMessage@txFifoObj:
 26477                           	callstack 0
 26478   00051A                     getHash@en:
 26479                           	callstack 0
 26480   00051A                     ??_APP_processConsumedEvent:
 26481                           
 26482                           ; 1 bytes @ 0x19
 26483   00051A                     	ds	1
 26484   00051B                     rebuildLookupTable@sw:
 26485                           	callstack 0
 26486   00051B                     processEnumeration@newCanId:
 26487                           	callstack 0
 26488                           
 26489                           ; 1 bytes @ 0x1A
 26490   00051B                     	ds	1
 26491   00051C                     rebuildLookupTable@i:
 26492                           	callstack 0
 26493   00051C                     APP_GetEventIndexState@tableIndex:
 26494                           	callstack 0
 26495   00051C                     processEnumeration@i:
 26496                           	callstack 0
 26497   00051C                     isConsumedEvent@eventIndex:
 26498                           	callstack 0
 26499   00051C                     pbDownTimer@timeout:
 26500                           	callstack 0
 26501   00051C                     pbUpTimer@timeout:
 26502                           	callstack 0
 26503   00051C                     sendMessage@len:
 26504                           	callstack 0
 26505   00051C                     ??_getHash:
 26506   00051C                     
 26507                           ; 1 bytes @ 0x1B
 26508   00051C                     	ds	1
 26509   00051D                     APP_processConsumedEvent@tableIndex:
 26510                           	callstack 0
 26511   00051D                     APP_GetEventIndexState@switchNo:
 26512                           	callstack 0
 26513   00051D                     getHash@hash:
 26514                           	callstack 0
 26515   00051D                     sendMessage@data1:
 26516                           	callstack 0
 26517   00051D                     
 26518                           ; 1 bytes @ 0x1C
 26519   00051D                     	ds	1
 26520   00051E                     APP_processConsumedEvent@ledMode:
 26521                           	callstack 0
 26522   00051E                     sendMessage@data2:
 26523                           	callstack 0
 26524   00051E                     findEvent@nodeNumber:
 26525                           	callstack 0
 26526   00051E                     ??_rebuildHashtable:
 26527                           
 26528                           ; 1 bytes @ 0x1D
 26529   00051E                     	ds	1
 26530   00051F                     APP_processConsumedEvent@flags:
 26531                           	callstack 0
 26532   00051F                     sendMessage@data3:
 26533                           	callstack 0
 26534                           
 26535                           ; 1 bytes @ 0x1E
 26536   00051F                     	ds	1
 26537   000520                     APP_processConsumedEvent@polarity:
 26538                           	callstack 0
 26539   000520                     writeEv@tableIndex:
 26540                           	callstack 0
 26541   000520                     sendMessage@data4:
 26542                           	callstack 0
 26543   000520                     findEvent@eventNumber:
 26544                           	callstack 0
 26545                           
 26546                           ; 2 bytes @ 0x1F
 26547   000520                     	ds	1
 26548   000521                     APP_processConsumedEvent@onOff:
 26549                           	callstack 0
 26550   000521                     rebuildHashtable@hash:
 26551                           	callstack 0
 26552   000521                     sendMessage@data5:
 26553                           	callstack 0
 26554                           
 26555                           ; 1 bytes @ 0x20
 26556   000521                     	ds	1
 26557   000522                     APP_processConsumedEvent@ledNo:
 26558                           	callstack 0
 26559   000522                     rebuildHashtable@tableIndex:
 26560                           	callstack 0
 26561   000522                     sendMessage@data6:
 26562                           	callstack 0
 26563   000522                     ??_findEvent:
 26564                           
 26565                           ; 1 bytes @ 0x21
 26566   000522                     	ds	1
 26567   000523                     rebuildHashtable@chainIdx:
 26568                           	callstack 0
 26569   000523                     sendMessage@data7:
 26570                           	callstack 0
 26571                           
 26572                           ; 1 bytes @ 0x22
 26573   000523                     	ds	1
 26574   000524                     teachPowerUp@i:
 26575                           	callstack 0
 26576   000524                     sendMessage@opc:
 26577                           	callstack 0
 26578   000524                     findEvent@nn:
 26579                           	callstack 0
 26580   000524                     ??_removeTableEntry:
 26581   000524                     
 26582                           ; 1 bytes @ 0x23
 26583   000524                     	ds	1
 26584   000525                     sendMessage2@data1:
 26585                           	callstack 0
 26586   000525                     sendMessage3@data1:
 26587                           	callstack 0
 26588   000525                     sendMessage4@data1:
 26589                           	callstack 0
 26590   000525                     sendMessage5@data1:
 26591                           	callstack 0
 26592   000525                     sendMessage6@data1:
 26593                           	callstack 0
 26594   000525                     sendMessage7@data1:
 26595                           	callstack 0
 26596   000525                     ??_powerUp:
 26597                           
 26598                           ; 1 bytes @ 0x24
 26599   000525                     	ds	1
 26600   000526                     sendMessage2@data2:
 26601                           	callstack 0
 26602   000526                     sendMessage3@data2:
 26603                           	callstack 0
 26604   000526                     sendMessage4@data2:
 26605                           	callstack 0
 26606   000526                     sendMessage5@data2:
 26607                           	callstack 0
 26608   000526                     sendMessage6@data2:
 26609                           	callstack 0
 26610   000526                     sendMessage7@data2:
 26611                           	callstack 0
 26612   000526                     findEvent@en:
 26613                           	callstack 0
 26614                           
 26615                           ; 2 bytes @ 0x25
 26616   000526                     	ds	1
 26617   000527                     powerUp@i:
 26618                           	callstack 0
 26619   000527                     sendMessage2@opc:
 26620                           	callstack 0
 26621   000527                     sendMessage3@data3:
 26622                           	callstack 0
 26623   000527                     sendMessage4@data3:
 26624                           	callstack 0
 26625   000527                     sendMessage5@data3:
 26626                           	callstack 0
 26627   000527                     sendMessage6@data3:
 26628                           	callstack 0
 26629   000527                     sendMessage7@data3:
 26630                           	callstack 0
 26631   000527                     
 26632                           ; 1 bytes @ 0x26
 26633   000527                     	ds	1
 26634   000528                     findEvent@hash:
 26635                           	callstack 0
 26636   000528                     sendMessage3@opc:
 26637                           	callstack 0
 26638   000528                     sendMessage4@data4:
 26639                           	callstack 0
 26640   000528                     sendMessage5@data4:
 26641                           	callstack 0
 26642   000528                     sendMessage6@data4:
 26643                           	callstack 0
 26644   000528                     sendMessage7@data4:
 26645                           	callstack 0
 26646   000528                     
 26647                           ; 1 bytes @ 0x27
 26648   000528                     	ds	1
 26649   000529                     findEvent@chainIdx:
 26650                           	callstack 0
 26651   000529                     sendMessage4@opc:
 26652                           	callstack 0
 26653   000529                     sendMessage5@data5:
 26654                           	callstack 0
 26655   000529                     sendMessage6@data5:
 26656                           	callstack 0
 26657   000529                     sendMessage7@data5:
 26658                           	callstack 0
 26659   000529                     doNnevn@eventNumber:
 26660                           	callstack 0
 26661   000529                     doRqevn@eventNumber:
 26662                           	callstack 0
 26663   000529                     
 26664                           ; 1 bytes @ 0x28
 26665   000529                     	ds	1
 26666   00052A                     canpanSendProducedEvent@onOff:
 26667                           	callstack 0
 26668   00052A                     findEvent@tableIndex:
 26669                           	callstack 0
 26670   00052A                     sendMessage5@opc:
 26671                           	callstack 0
 26672   00052A                     sendMessage6@data6:
 26673                           	callstack 0
 26674   00052A                     sendMessage7@data6:
 26675                           	callstack 0
 26676   00052A                     
 26677                           ; 1 bytes @ 0x29
 26678   00052A                     	ds	1
 26679   00052B                     canpanSendProducedEvent@tableIndex:
 26680                           	callstack 0
 26681   00052B                     doNnevn@count:
 26682                           	callstack 0
 26683   00052B                     doRqevn@count:
 26684                           	callstack 0
 26685   00052B                     doReval@evNum:
 26686                           	callstack 0
 26687   00052B                     sendMessage6@opc:
 26688                           	callstack 0
 26689   00052B                     sendMessage7@data7:
 26690                           	callstack 0
 26691   00052B                     doNenrd@nodeNumber:
 26692                           	callstack 0
 26693   00052B                     addEvent@nodeNumber:
 26694                           	callstack 0
 26695   00052B                     checkLen@m:
 26696                           	callstack 0
 26697   00052B                     ??_mnsPoll:
 26698                           
 26699                           ; 1 bytes @ 0x2A
 26700   00052B                     	ds	1
 26701   00052C                     canpanSendProducedEvent@opc:
 26702                           	callstack 0
 26703   00052C                     doNnevn@i:
 26704                           	callstack 0
 26705   00052C                     doRqevn@i:
 26706                           	callstack 0
 26707   00052C                     doReval@evIndex:
 26708                           	callstack 0
 26709   00052C                     removeTableEntry@i:
 26710                           	callstack 0
 26711   00052C                     sendMessage7@opc:
 26712                           	callstack 0
 26713   00052C                     doReqev@nodeNumber:
 26714                           	callstack 0
 26715   00052C                     
 26716                           ; 1 bytes @ 0x2B
 26717   00052C                     	ds	1
 26718   00052D                     doReval@enNum:
 26719                           	callstack 0
 26720   00052D                     removeTableEntry@tableIndex:
 26721                           	callstack 0
 26722   00052D                     checkLen@needed:
 26723                           	callstack 0
 26724   00052D                     canpanSendProducedEvent@producedEventEN:
 26725                           	callstack 0
 26726   00052D                     doNenrd@eventNumber:
 26727                           	callstack 0
 26728   00052D                     addEvent@eventNumber:
 26729                           	callstack 0
 26730                           
 26731                           ; 2 bytes @ 0x2C
 26732   00052D                     	ds	1
 26733   00052E                     clearAllEvents@tableIndex:
 26734                           	callstack 0
 26735   00052E                     doReval@tableIndex:
 26736                           	callstack 0
 26737   00052E                     checkLen@service:
 26738                           	callstack 0
 26739   00052E                     doReqev@eventNumber:
 26740                           	callstack 0
 26741   00052E                     removeEvent@nodeNumber:
 26742                           	callstack 0
 26743   00052E                     
 26744                           ; 1 bytes @ 0x2D
 26745   00052E                     	ds	1
 26746   00052F                     APP_factoryReset@sw:
 26747                           	callstack 0
 26748   00052F                     doNenrd@index:
 26749                           	callstack 0
 26750   00052F                     addEvent@evNum:
 26751                           	callstack 0
 26752   00052F                     canpanSendProducedEvent@producedEventNN:
 26753                           	callstack 0
 26754   00052F                     doReval@evVal:
 26755                           	callstack 0
 26756   00052F                     
 26757                           ; 1 bytes @ 0x2E
 26758   00052F                     	ds	1
 26759   000530                     doNenrd@tableIndex:
 26760                           	callstack 0
 26761   000530                     doReqev@evNum:
 26762                           	callstack 0
 26763   000530                     addEvent@evVal:
 26764                           	callstack 0
 26765   000530                     consumerEventCheckLen@m:
 26766                           	callstack 0
 26767   000530                     teachCheckLen@m:
 26768                           	callstack 0
 26769   000530                     removeEvent@eventNumber:
 26770                           	callstack 0
 26771   000530                     ??_factoryReset:
 26772                           
 26773                           ; 1 bytes @ 0x2F
 26774   000530                     	ds	1
 26775   000531                     addEvent@forceOwnNN:
 26776                           	callstack 0
 26777   000531                     mnsTRallDiagnosticsCallback@serviceIndex:
 26778                           	callstack 0
 26779   000531                     nvTRnvrdCallback@serviceIndex:
 26780                           	callstack 0
 26781   000531                     doReqev@evVal:
 26782                           	callstack 0
 26783   000531                     ??_inputScan:
 26784   000531                     
 26785                           ; 1 bytes @ 0x30
 26786   000531                     	ds	1
 26787   000532                     sodTRCallback@tableIndex:
 26788                           	callstack 0
 26789   000532                     consumerEventCheckLen@needed:
 26790                           	callstack 0
 26791   000532                     teachCheckLen@needed:
 26792                           	callstack 0
 26793   000532                     nerdCallback@step:
 26794                           	callstack 0
 26795   000532                     reqevCallback@step:
 26796                           	callstack 0
 26797   000532                     removeEvent@tableIndex:
 26798                           	callstack 0
 26799   000532                     mnsTRserviceDiscoveryCallback@step:
 26800                           	callstack 0
 26801   000532                     mnsTRallDiagnosticsCallback@step:
 26802                           	callstack 0
 26803   000532                     mnsTRrqnpnCallback@step:
 26804                           	callstack 0
 26805   000532                     nvTRnvrdCallback@step:
 26806                           	callstack 0
 26807   000532                     factoryReset@i:
 26808                           	callstack 0
 26809   000532                     ??_addEvent:
 26810   000532                     
 26811                           ; 1 bytes @ 0x31
 26812   000532                     	ds	1
 26813   000533                     sodTRCallback@sv:
 26814                           	callstack 0
 26815   000533                     teachCheckLen@learn:
 26816                           	callstack 0
 26817   000533                     doReqev@tableIndex:
 26818                           	callstack 0
 26819   000533                     _inputScan$1270:
 26820                           	callstack 0
 26821   000533                     nerdCallback@nodeNumber:
 26822                           	callstack 0
 26823   000533                     doEvuln@nodeNumber:
 26824                           	callstack 0
 26825   000533                     nvTRnvrdCallback@valueOrError:
 26826                           	callstack 0
 26827   000533                     ??_reqevCallback:
 26828   000533                     ??_mnsTRallDiagnosticsCallback:
 26829   000533                     ??_mnsTRserviceDiscoveryCallback:
 26830   000533                     
 26831                           ; 1 bytes @ 0x32
 26832   000533                     	ds	1
 26833   000534                     sodTRCallback@value:
 26834                           	callstack 0
 26835   000534                     
 26836                           ; 1 bytes @ 0x33
 26837   000534                     	ds	1
 26838   000535                     inputScan@diff:
 26839                           	callstack 0
 26840   000535                     nerdCallback@eventNumber:
 26841                           	callstack 0
 26842   000535                     doEvuln@eventNumber:
 26843                           	callstack 0
 26844   000535                     mnsTRallDiagnosticsCallback@d:
 26845                           	callstack 0
 26846                           
 26847                           ; 2 bytes @ 0x34
 26848   000535                     	ds	1
 26849   000536                     inputScan@row:
 26850                           	callstack 0
 26851                           
 26852                           ; 1 bytes @ 0x35
 26853   000536                     	ds	1
 26854   000537                     inputScan@tableIndex:
 26855                           	callstack 0
 26856   000537                     doEvuln@result:
 26857                           	callstack 0
 26858   000537                     
 26859                           ; 1 bytes @ 0x36
 26860   000537                     	ds	1
 26861   000538                     inputScan@switchMode:
 26862                           	callstack 0
 26863   000538                     reqevCallback@nEv:
 26864                           	callstack 0
 26865                           
 26866                           ; 1 bytes @ 0x37
 26867   000538                     	ds	1
 26868   000539                     inputScan@i:
 26869                           	callstack 0
 26870   000539                     reqevCallback@eventNumber:
 26871                           	callstack 0
 26872                           
 26873                           ; 2 bytes @ 0x38
 26874   000539                     	ds	1
 26875   00053A                     inputScan@sv:
 26876                           	callstack 0
 26877                           
 26878                           ; 1 bytes @ 0x39
 26879   00053A                     	ds	1
 26880   00053B                     inputScan@onOff:
 26881                           	callstack 0
 26882   00053B                     reqevCallback@ev:
 26883                           	callstack 0
 26884   00053B                     addEvent@en:
 26885                           	callstack 0
 26886                           
 26887                           ; 2 bytes @ 0x3A
 26888   00053B                     	ds	1
 26889   00053C                     inputScan@buttonNo:
 26890                           	callstack 0
 26891                           
 26892                           ; 1 bytes @ 0x3B
 26893   00053C                     	ds	1
 26894   00053D                     addEvent@e:
 26895                           	callstack 0
 26896   00053D                     reqevCallback@nodeNumber:
 26897                           	callstack 0
 26898   00053D                     ??_loop:
 26899                           
 26900                           ; 1 bytes @ 0x3C
 26901   00053D                     	ds	1
 26902   00053E                     addEvent@tableIndex:
 26903                           	callstack 0
 26904                           
 26905                           ; 1 bytes @ 0x3D
 26906   00053E                     	ds	1
 26907   00053F                     reqevCallback@tableIndex:
 26908                           	callstack 0
 26909   00053F                     APP_addEvent@nodeNumber:
 26910                           	callstack 0
 26911   00053F                     ??_addTestEvent:
 26912                           
 26913                           ; 1 bytes @ 0x3E
 26914   00053F                     	ds	1
 26915   000540                     ??_pollTimedResponse:
 26916                           
 26917                           ; 1 bytes @ 0x3F
 26918   000540                     	ds	1
 26919   000541                     addTestEvent@sw:
 26920                           	callstack 0
 26921   000541                     APP_addEvent@eventNumber:
 26922                           	callstack 0
 26923                           
 26924                           ; 2 bytes @ 0x40
 26925   000541                     	ds	1
 26926   000542                     APP_testMode@sw:
 26927                           	callstack 0
 26928   000542                     pollTimedResponse@result:
 26929                           	callstack 0
 26930   000542                     
 26931                           ; 1 bytes @ 0x41
 26932   000542                     	ds	1
 26933   000543                     APP_addEvent@evNum:
 26934                           	callstack 0
 26935   000543                     checkPowerOnPb@i:
 26936                           	callstack 0
 26937   000543                     
 26938                           ; 1 bytes @ 0x42
 26939   000543                     	ds	1
 26940   000544                     APP_addEvent@evVal:
 26941                           	callstack 0
 26942                           
 26943                           ; 1 bytes @ 0x43
 26944   000544                     	ds	1
 26945   000545                     loop@tableIndex:
 26946                           	callstack 0
 26947   000545                     APP_addEvent@forceOwnNN:
 26948                           	callstack 0
 26949                           
 26950                           ; 1 bytes @ 0x44
 26951   000545                     	ds	1
 26952   000546                     ??_APP_addEvent:
 26953                           
 26954                           ; 1 bytes @ 0x45
 26955   000546                     	ds	3
 26956   000549                     APP_addEvent@leds:
 26957                           	callstack 0
 26958                           
 26959                           ; 1 bytes @ 0x48
 26960   000549                     	ds	1
 26961   00054A                     APP_addEvent@tableIndex:
 26962                           	callstack 0
 26963                           
 26964                           ; 1 bytes @ 0x49
 26965   00054A                     	ds	1
 26966   00054B                     APP_addEvent@switchNo:
 26967                           	callstack 0
 26968                           
 26969                           ; 1 bytes @ 0x4A
 26970   00054B                     	ds	1
 26971   00054C                     APP_addEvent@oti:
 26972                           	callstack 0
 26973                           
 26974                           ; 1 bytes @ 0x4B
 26975   00054C                     	ds	1
 26976   00054D                     doEvlrn@nodeNumber:
 26977                           	callstack 0
 26978                           
 26979                           ; 2 bytes @ 0x4C
 26980   00054D                     	ds	2
 26981   00054F                     doEvlrn@eventNumber:
 26982                           	callstack 0
 26983                           
 26984                           ; 2 bytes @ 0x4E
 26985   00054F                     	ds	2
 26986   000551                     doEvlrn@evNum:
 26987                           	callstack 0
 26988                           
 26989                           ; 1 bytes @ 0x50
 26990   000551                     	ds	1
 26991   000552                     doEvlrn@evVal:
 26992                           	callstack 0
 26993                           
 26994                           ; 1 bytes @ 0x51
 26995   000552                     	ds	1
 26996   000553                     bootProcessMessage@m:
 26997                           	callstack 0
 26998   000553                     canProcessMessage@m:
 26999                           	callstack 0
 27000   000553                     consumerProcessMessage@m:
 27001                           	callstack 0
 27002   000553                     teachProcessMessage@m:
 27003                           	callstack 0
 27004   000553                     mnsProcessMessage@m:
 27005                           	callstack 0
 27006   000553                     nvProcessMessage@m:
 27007                           	callstack 0
 27008   000553                     producerProcessMessage@m:
 27009                           	callstack 0
 27010   000553                     
 27011                           ; 1 bytes @ 0x52
 27012   000553                     	ds	2
 27013   000555                     mnsProcessMessage@i:
 27014                           	callstack 0
 27015   000555                     ??_bootProcessMessage:
 27016   000555                     ??_canProcessMessage:
 27017   000555                     ??_consumerProcessMessage:
 27018   000555                     ??_teachProcessMessage:
 27019   000555                     ??_nvProcessMessage:
 27020   000555                     ??_producerProcessMessage:
 27021                           
 27022                           ; 1 bytes @ 0x54
 27023   000555                     	ds	1
 27024   000556                     _mnsProcessMessage$4944:
 27025                           	callstack 0
 27026                           
 27027                           ; 1 bytes @ 0x55
 27028   000556                     	ds	1
 27029   000557                     mnsProcessMessage@d:
 27030                           	callstack 0
 27031   000557                     nvProcessMessage@valueOrError:
 27032                           	callstack 0
 27033                           
 27034                           ; 2 bytes @ 0x56
 27035   000557                     	ds	1
 27036   000558                     consumerProcessMessage@enn:
 27037                           	callstack 0
 27038                           
 27039                           ; 2 bytes @ 0x57
 27040   000558                     	ds	1
 27041   000559                     mnsProcessMessage@newMode:
 27042                           	callstack 0
 27043                           
 27044                           ; 1 bytes @ 0x58
 27045   000559                     	ds	1
 27046   00055A                     consumerProcessMessage@ret:
 27047                           	callstack 0
 27048                           
 27049                           ; 1 bytes @ 0x59
 27050   00055A                     	ds	1
 27051   00055B                     consumerProcessMessage@tableIndex:
 27052                           	callstack 0
 27053   00055B                     producerProcessMessage@index:
 27054                           	callstack 0
 27055                           
 27056                           ; 1 bytes @ 0x5A
 27057   00055B                     	ds	1
 27058   00055C                     APP_preProcessMessage@m:
 27059                           	callstack 0
 27060                           
 27061                           ; 2 bytes @ 0x5B
 27062   00055C                     	ds	2
 27063   00055E                     
 27064                           ; 1 bytes @ 0x5D
 27065 ;;
 27066 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 27067 ;;
 27068 ;; *************** function _main *****************
 27069 ;; Defined at:
 27070 ;;		line 1261 in file "../../VLCBlib_PIC/vlcb.c"
 27071 ;; Parameters:    Size  Location     Type
 27072 ;;		None
 27073 ;; Auto vars:     Size  Location     Type
 27074 ;;  t2              1   49[BANK5 ] unsigned char 
 27075 ;;  t1              1   48[BANK5 ] unsigned char 
 27076 ;;  i               1   47[BANK5 ] unsigned char 
 27077 ;; Return value:  Size  Location     Type
 27078 ;;                  1    wreg      void 
 27079 ;; Registers used:
 27080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 27081 ;; Tracked objects:
 27082 ;;		On entry : 0/0
 27083 ;;		On exit  : 0/0
 27084 ;;		Unchanged: 0/0
 27085 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27087 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27089 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27090 ;;Total ram usage:        3 bytes
 27091 ;; Hardware stack levels required when called: 13
 27092 ;; This function calls:
 27093 ;;		_checkPowerOnPb
 27094 ;;		_factoryReset
 27095 ;;		_initRomOps
 27096 ;;		_loop
 27097 ;;		_poll
 27098 ;;		_powerUp
 27099 ;;		_readNVM
 27100 ;;		_setup
 27101 ;; This function is called by:
 27102 ;;		Startup code after reset
 27103 ;; This function uses a non-reentrant model
 27104 ;;
 27105                           
 27106                           	psect	text0
 27107   014A6A                     __ptext0:
 27108                           	callstack 0
 27109   014A6A                     _main:
 27110                           	callstack 114
 27111                           
 27112                           ;../../VLCBlib_PIC/vlcb.c: 1262:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1263:     uint
      +                          8_t t1,t2;;../../VLCBlib_PIC/vlcb.c: 1272:     OSCCON1bits.NOSC = 2;
 27113                           
 27114                           ;incstack = 0
 27115   014A6A  0100               	movlb	0	; () banked
 27116   014A6C  51AD               	movf	173,w,b	;volatile
 27117   014A6E  0B8F               	andlw	-113
 27118   014A70  0920               	iorlw	32
 27119   014A72  6FAD               	movwf	173,b	;volatile
 27120                           
 27121                           ;../../VLCBlib_PIC/vlcb.c: 1273:     OSCCON1bits.NDIV = 0;
 27122   014A74  0EF0               	movlw	-16
 27123   014A76  17AD               	andwf	173,f,b	;volatile
 27124   014A78                     l2353:
 27125                           
 27126                           ; BSR set to: 0
 27127                           ;../../VLCBlib_PIC/vlcb.c: 1280:     while ( ! OSCCON3bits.ORDY) {
 27128   014A78  A9AF               	btfss	175,4,b	;volatile
 27129   014A7A  D7FE               	goto	l2353
 27130                           
 27131                           ; BSR set to: 0
 27132                           ;../../VLCBlib_PIC/vlcb.c: 1289:     for (t1=0; t1<64; t1++) {
 27133   014A7C  0105               	movlb	5	; () banked
 27134   014A7E  6BFA               	clrf	main@t1& (0+255),b
 27135   014A80                     l2356:
 27136                           
 27137                           ; BSR set to: 5
 27138                           ;../../VLCBlib_PIC/vlcb.c: 1290:         for (t2=0; t2<255; t2++) {
 27139   014A80  6BFB               	clrf	main@t2& (0+255),b
 27140   014A82                     l2358:
 27141                           
 27142                           ; BSR set to: 5
 27143                           ;../../VLCBlib_PIC/vlcb.c: 1291:             for (i=0; i<255; i++) {
 27144   014A82  6BF9               	clrf	main@i& (0+255),b
 27145   014A84                     l2360:
 27146                           
 27147                           ; BSR set to: 5
 27148                           ;../../VLCBlib_PIC/vlcb.c: 1293:                 (LATBbits.LATB7=0);
 27149   014A84  9EBF               	bcf	191,7,c	;volatile
 27150                           
 27151                           ; BSR set to: 5
 27152                           ;../../VLCBlib_PIC/vlcb.c: 1294:             }
 27153   014A86  2BF9               	incf	main@i& (0+255),f,b
 27154                           
 27155                           ; BSR set to: 5
 27156   014A88  29F9               	incf	main@i& (0+255),w,b
 27157   014A8A  A4D8               	btfss	status,2,c
 27158   014A8C  D7FB               	goto	l2360
 27159                           
 27160                           ; BSR set to: 5
 27161                           ;../../VLCBlib_PIC/vlcb.c: 1295:         }
 27162   014A8E  2BFB               	incf	main@t2& (0+255),f,b
 27163                           
 27164                           ; BSR set to: 5
 27165   014A90  29FB               	incf	main@t2& (0+255),w,b
 27166   014A92  A4D8               	btfss	status,2,c
 27167   014A94  D7F6               	goto	l2358
 27168                           
 27169                           ; BSR set to: 5
 27170                           ;../../VLCBlib_PIC/vlcb.c: 1296:     }
 27171   014A96  2BFA               	incf	main@t1& (0+255),f,b
 27172                           
 27173                           ; BSR set to: 5
 27174   014A98  0E3F               	movlw	63
 27175   014A9A  65FA               	cpfsgt	main@t1& (0+255),b
 27176   014A9C  D7F1               	goto	l2356
 27177                           
 27178                           ; BSR set to: 5
 27179                           ;../../VLCBlib_PIC/vlcb.c: 1306:     IVTBASEU = 0x00;
 27180   014A9E  0104               	movlb	4	; () banked
 27181   014AA0  6B5F               	clrf	95,b	;volatile
 27182                           
 27183                           ; BSR set to: 4
 27184                           ;../../VLCBlib_PIC/vlcb.c: 1307:     IVTBASEH = 0x09;
 27185   014AA2  0E09               	movlw	9
 27186   014AA4  6F5E               	movwf	94,b	;volatile
 27187                           
 27188                           ; BSR set to: 4
 27189                           ;../../VLCBlib_PIC/vlcb.c: 1308:     IVTBASEL = 0x00;
 27190   014AA6  6B5D               	clrf	93,b	;volatile
 27191                           
 27192                           ;../../VLCBlib_PIC/vlcb.c: 1310:     IVTLOCK = 0x55;
 27193   014AA8  0E55               	movlw	85
 27194   014AAA  6F59               	movwf	89,b	;volatile
 27195                           
 27196                           ;../../VLCBlib_PIC/vlcb.c: 1311:     IVTLOCK = 0xAA;
 27197   014AAC  0EAA               	movlw	170
 27198   014AAE  6F59               	movwf	89,b	;volatile
 27199                           
 27200                           ; BSR set to: 4
 27201                           ;../../VLCBlib_PIC/vlcb.c: 1312:     IVTLOCKbits.IVTLOCKED = 0x01;
 27202   014AB0  8159               	bsf	89,0,b	;volatile
 27203                           
 27204                           ; BSR set to: 4
 27205                           ;../../VLCBlib_PIC/vlcb.c: 1324:     initRomOps();
 27206   014AB2  EC45  F0B3         	call	_initRomOps	;wreg free
 27207                           
 27208                           ;../../VLCBlib_PIC/vlcb.c: 1326:     if (readNVM(EEPROM_NVM_TYPE, 0x3FA) != 1) {
 27209   014AB6  0EFA               	movlw	250
 27210   014AB8  6E07               	movwf	readNVM@index^(0+1280),c
 27211   014ABA  0E03               	movlw	3
 27212   014ABC  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 27213   014ABE  0E00               	movlw	0
 27214   014AC0  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 27215   014AC2  0E00               	movlw	0
 27216   014AC4  EC6C  F0AB         	call	_readNVM
 27217   014AC8  0407               	decf	?_readNVM^(0+1280),w,c
 27218   014ACA  1008               	iorwf	(?_readNVM+1)^(0+1280),w,c
 27219   014ACC  A4D8               	btfss	status,2,c
 27220                           
 27221                           ;../../VLCBlib_PIC/vlcb.c: 1327:         factoryReset();
 27222   014ACE  EC2E  F09E         	call	_factoryReset	;wreg free
 27223                           
 27224                           ;../../VLCBlib_PIC/vlcb.c: 1331:     powerUp();
 27225                           
 27226                           ;../../VLCBlib_PIC/vlcb.c: 1328:     }
 27227   014AD2  EC7F  F09F         	call	_powerUp	;wreg free
 27228                           
 27229                           ;../../VLCBlib_PIC/vlcb.c: 1334:     {INTCON0bits.GIE = 1;};
 27230   014AD6  8ED6               	bsf	214,7,c	;volatile
 27231                           
 27232                           ;../../VLCBlib_PIC/vlcb.c: 1335:     checkPowerOnPb();
 27233   014AD8  ECF9  F0AC         	call	_checkPowerOnPb	;wreg free
 27234                           
 27235                           ;../../VLCBlib_PIC/vlcb.c: 1338:     {INTCON0bits.GIE = 0;};
 27236   014ADC  9ED6               	bcf	214,7,c	;volatile
 27237                           
 27238                           ;../../VLCBlib_PIC/vlcb.c: 1339:     setup();
 27239   014ADE  EC1D  F0A4         	call	_setup	;wreg free
 27240                           
 27241                           ;../../VLCBlib_PIC/vlcb.c: 1342:     {INTCON0bits.GIE = 1;};
 27242   014AE2  8ED6               	bsf	214,7,c	;volatile
 27243   014AE4                     l12699:
 27244                           
 27245                           ;../../VLCBlib_PIC/vlcb.c: 1346:         poll();
 27246   014AE4  EC3C  F08C         	call	_poll	;wreg free
 27247                           
 27248                           ;../../VLCBlib_PIC/vlcb.c: 1347:         loop();
 27249   014AE8  ECAC  F095         	call	_loop	;wreg free
 27250   014AEC  D7FB               	goto	l12699
 27251   014AEE                     __end_of_main:
 27252                           	callstack 0
 27253                           
 27254 ;; *************** function _setup *****************
 27255 ;; Defined at:
 27256 ;;		line 183 in file "../main.c"
 27257 ;; Parameters:    Size  Location     Type
 27258 ;;		None
 27259 ;; Auto vars:     Size  Location     Type
 27260 ;;  nv              1    0        unsigned char 
 27261 ;;  pu              1    0        unsigned char 
 27262 ;; Return value:  Size  Location     Type
 27263 ;;                  1    wreg      void 
 27264 ;; Registers used:
 27265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27266 ;; Tracked objects:
 27267 ;;		On entry : 0/0
 27268 ;;		On exit  : 0/0
 27269 ;;		Unchanged: 0/0
 27270 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27275 ;;Total ram usage:        0 bytes
 27276 ;; Hardware stack levels used: 1
 27277 ;; Hardware stack levels required when called: 6
 27278 ;; This function calls:
 27279 ;;		_getNV
 27280 ;;		_initEEPROMwriter
 27281 ;;		_initEvents
 27282 ;;		_initInputs
 27283 ;;		_initLeds
 27284 ;;		_initOutputs
 27285 ;;		_tickGet
 27286 ;; This function is called by:
 27287 ;;		_main
 27288 ;; This function uses a non-reentrant model
 27289 ;;
 27290                           
 27291                           	psect	text1
 27292   01483A                     __ptext1:
 27293                           	callstack 0
 27294   01483A                     _setup:
 27295                           	callstack 120
 27296                           
 27297                           ;../main.c: 185:     uint8_t pu;;../main.c: 187:     uint8_t nv;;../main.c: 190:     tra
      +                          nsport = &canTransport;
 27298                           
 27299                           ;incstack = 0
 27300   01483A  0EF5               	movlw	low _canTransport
 27301   01483C  0105               	movlb	5	; () banked
 27302   01483E  6F80               	movwf	_transport& (0+255),b
 27303   014840  0EFF               	movlw	high _canTransport
 27304   014842  6F81               	movwf	(_transport+1)& (0+255),b
 27305                           
 27306                           ; BSR set to: 5
 27307                           ;../main.c: 202:     WPUA = 0b00001000;
 27308   014844  0E08               	movlw	8
 27309   014846  0104               	movlb	4	; () banked
 27310   014848  6F01               	movwf	1,b	;volatile
 27311                           
 27312                           ; BSR set to: 4
 27313                           ;../main.c: 203:     WPUB = 0;
 27314   01484A  6B09               	clrf	9,b	;volatile
 27315                           
 27316                           ; BSR set to: 4
 27317                           ;../main.c: 204:     WPUC = 0;
 27318   01484C  6B11               	clrf	17,b	;volatile
 27319                           
 27320                           ; BSR set to: 4
 27321                           ;../main.c: 205:     ANSELA = 0x00;
 27322   01484E  6B00               	clrf	0,b	;volatile
 27323                           
 27324                           ; BSR set to: 4
 27325                           ;../main.c: 206:     ANSELB = 0x00;
 27326   014850  6B08               	clrf	8,b	;volatile
 27327                           
 27328                           ; BSR set to: 4
 27329                           ;../main.c: 207:     ANSELC = 0x00;
 27330   014852  6B10               	clrf	16,b	;volatile
 27331                           
 27332                           ; BSR set to: 4
 27333                           ;../main.c: 210:     initEEPROMwriter();
 27334   014854  EC06  F0AF         	call	_initEEPROMwriter	;wreg free
 27335                           
 27336                           ;../main.c: 211:     initOutputs();
 27337   014858  EC42  F0AA         	call	_initOutputs	;wreg free
 27338                           
 27339                           ;../main.c: 212:     initLeds();
 27340   01485C  EC36  F0AE         	call	_initLeds	;wreg free
 27341                           
 27342                           ;../main.c: 213:     initInputs();
 27343   014860  EC7B  F0A6         	call	_initInputs	;wreg free
 27344                           
 27345                           ;../main.c: 214:     initEvents();
 27346   014864  ECCE  F0B3         	call	_initEvents	;wreg free
 27347                           
 27348                           ;../main.c: 222:     (INTCON0bits.GIE = 1);
 27349   014868  8ED6               	bsf	214,7,c	;volatile
 27350                           
 27351                           ;../main.c: 224:     startTime.val = tickGet();
 27352   01486A  EC7A  F0AC         	call	_tickGet	;wreg free
 27353   01486E  C501  F570         	movff	?_tickGet,_startTime
 27354   014872  C502  F571         	movff	?_tickGet+1,_startTime+1
 27355   014876  C503  F572         	movff	?_tickGet+2,_startTime+2
 27356   01487A  C504  F573         	movff	?_tickGet+3,_startTime+3
 27357                           
 27358                           ;../main.c: 225:     lastInputScanTime.val = startTime.val;
 27359   01487E  C570  F56C         	movff	_startTime,_lastInputScanTime
 27360   014882  C571  F56D         	movff	_startTime+1,_lastInputScanTime+1
 27361   014886  C572  F56E         	movff	_startTime+2,_lastInputScanTime+2
 27362   01488A  C573  F56F         	movff	_startTime+3,_lastInputScanTime+3
 27363                           
 27364                           ;../main.c: 226:     flashTime.val = startTime.val;
 27365   01488E  C570  F6A2         	movff	_startTime,_flashTime
 27366   014892  C571  F6A3         	movff	_startTime+1,_flashTime+1
 27367   014896  C572  F6A4         	movff	_startTime+2,_flashTime+2
 27368   01489A  C573  F6A5         	movff	_startTime+3,_flashTime+3
 27369                           
 27370                           ;../main.c: 227:     outputPollTime.val = startTime.val;
 27371   01489E  C570  F69E         	movff	_startTime,_outputPollTime
 27372   0148A2  C571  F69F         	movff	_startTime+1,_outputPollTime+1
 27373   0148A6  C572  F6A0         	movff	_startTime+2,_outputPollTime+2
 27374   0148AA  C573  F6A1         	movff	_startTime+3,_outputPollTime+3
 27375                           
 27376                           ;../main.c: 228:     eepromWriterTime.val = startTime.val;
 27377   0148AE  C570  F69A         	movff	_startTime,_eepromWriterTime
 27378   0148B2  C571  F69B         	movff	_startTime+1,_eepromWriterTime+1
 27379   0148B6  C572  F69C         	movff	_startTime+2,_eepromWriterTime+2
 27380   0148BA  C573  F69D         	movff	_startTime+3,_eepromWriterTime+3
 27381                           
 27382                           ;../main.c: 230:     started = FALSE;
 27383   0148BE  0105               	movlb	5	; () banked
 27384   0148C0  6BA1               	clrf	_started& (0+255),b
 27385                           
 27386                           ; BSR set to: 5
 27387                           ;../main.c: 231:     canpanScanReady = 0;
 27388   0148C2  6BA2               	clrf	_canpanScanReady& (0+255),b
 27389                           
 27390                           ; BSR set to: 5
 27391   0148C4  0E01               	movlw	1
 27392   0148C6  ECE0  F0AF         	call	_getNV
 27393   0148CA  0012               	return		;funcret
 27394   0148CC                     __end_of_setup:
 27395                           	callstack 0
 27396                           
 27397 ;; *************** function _initOutputs *****************
 27398 ;; Defined at:
 27399 ;;		line 58 in file "../canpan3Outputs.c"
 27400 ;; Parameters:    Size  Location     Type
 27401 ;;		None
 27402 ;; Auto vars:     Size  Location     Type
 27403 ;;  i               1    0[COMRAM] unsigned char 
 27404 ;; Return value:  Size  Location     Type
 27405 ;;                  1    wreg      void 
 27406 ;; Registers used:
 27407 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27408 ;; Tracked objects:
 27409 ;;		On entry : 0/0
 27410 ;;		On exit  : 0/0
 27411 ;;		Unchanged: 0/0
 27412 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27416 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27417 ;;Total ram usage:        1 bytes
 27418 ;; Hardware stack levels used: 1
 27419 ;; Hardware stack levels required when called: 1
 27420 ;; This function calls:
 27421 ;;		Nothing
 27422 ;; This function is called by:
 27423 ;;		_setup
 27424 ;; This function uses a non-reentrant model
 27425 ;;
 27426                           
 27427                           	psect	text2
 27428   015484                     __ptext2:
 27429                           	callstack 0
 27430   015484                     _initOutputs:
 27431                           	callstack 124
 27432                           
 27433                           ;../canpan3Outputs.c: 59:     uint8_t i;;../canpan3Outputs.c: 61:     for (i=0; i< 4; i+
      +                          +) {
 27434                           
 27435                           ;incstack = 0
 27436   015484  6A01               	clrf	initOutputs@i^(0+1280),c
 27437   015486                     l11411:
 27438                           
 27439                           ;../canpan3Outputs.c: 62:         ledMatrix[i] = 0;
 27440   015486  0E68               	movlw	low _ledMatrix
 27441   015488  2401               	addwf	initOutputs@i^(0+1280),w,c
 27442   01548A  6ED9               	movwf	fsr2l,c
 27443   01548C  6ADA               	clrf	fsr2h,c
 27444   01548E  0E05               	movlw	high _ledMatrix
 27445   015490  22DA               	addwfc	fsr2h,f,c
 27446   015492  6ADF               	clrf	indf2,c
 27447                           
 27448                           ;../canpan3Outputs.c: 63:     }
 27449   015494  2A01               	incf	initOutputs@i^(0+1280),f,c
 27450   015496  0E03               	movlw	3
 27451   015498  6401               	cpfsgt	initOutputs@i^(0+1280),c
 27452   01549A  D7F5               	goto	l11411
 27453                           
 27454                           ;../canpan3Outputs.c: 64:     TRISCbits.TRISC6 = 0;
 27455   01549C  9CC8               	bcf	200,6,c	;volatile
 27456                           
 27457                           ;../canpan3Outputs.c: 65:     TRISCbits.TRISC7 = 0;
 27458   01549E  9EC8               	bcf	200,7,c	;volatile
 27459                           
 27460                           ;../canpan3Outputs.c: 66:     TRISBbits.TRISB4 = 0;
 27461   0154A0  98C7               	bcf	199,4,c	;volatile
 27462                           
 27463                           ;../canpan3Outputs.c: 67:     TRISBbits.TRISB5 = 0;
 27464   0154A2  9AC7               	bcf	199,5,c	;volatile
 27465                           
 27466                           ;../canpan3Outputs.c: 69:     LATBbits.LATB4 = 0;
 27467   0154A4  98BF               	bcf	191,4,c	;volatile
 27468                           
 27469                           ;../canpan3Outputs.c: 70:     LATBbits.LATB5 = 0;
 27470   0154A6  9ABF               	bcf	191,5,c	;volatile
 27471                           
 27472                           ;../canpan3Outputs.c: 71:     LATCbits.LATC6 = 0;
 27473   0154A8  9CC0               	bcf	192,6,c	;volatile
 27474                           
 27475                           ;../canpan3Outputs.c: 72:     LATCbits.LATC7 = 0;
 27476   0154AA  9EC0               	bcf	192,7,c	;volatile
 27477                           
 27478                           ;../canpan3Outputs.c: 75:     TRISCbits.TRISC2 = 0;
 27479   0154AC  94C8               	bcf	200,2,c	;volatile
 27480                           
 27481                           ;../canpan3Outputs.c: 76:     LATCbits.LATC2 = 0;
 27482   0154AE  94C0               	bcf	192,2,c	;volatile
 27483                           
 27484                           ;../canpan3Outputs.c: 79:     TRISCbits.TRISC4 = 0;
 27485   0154B0  98C8               	bcf	200,4,c	;volatile
 27486                           
 27487                           ;../canpan3Outputs.c: 80:     LATCbits.LATC4 = 0;
 27488   0154B2  98C0               	bcf	192,4,c	;volatile
 27489                           
 27490                           ;../canpan3Outputs.c: 83:     TRISCbits.TRISC3 = 0;
 27491   0154B4  96C8               	bcf	200,3,c	;volatile
 27492                           
 27493                           ;../canpan3Outputs.c: 84:     LATCbits.LATC3 = 0;
 27494   0154B6  96C0               	bcf	192,3,c	;volatile
 27495                           
 27496                           ;../canpan3Outputs.c: 85:     TRISCbits.TRISC5 = 0;
 27497   0154B8  9AC8               	bcf	200,5,c	;volatile
 27498                           
 27499                           ;../canpan3Outputs.c: 86:     LATCbits.LATC5 = 0;
 27500   0154BA  9AC0               	bcf	192,5,c	;volatile
 27501                           
 27502                           ;../canpan3Outputs.c: 88:     SPI1CON0 = 0x03;
 27503   0154BC  0E03               	movlw	3
 27504   0154BE  0100               	movlb	0	; () banked
 27505   0154C0  6F84               	movwf	132,b	;volatile
 27506                           
 27507                           ;../canpan3Outputs.c: 89:     SPI1CON1 = 0x44;
 27508   0154C2  0E44               	movlw	68
 27509   0154C4  6F85               	movwf	133,b	;volatile
 27510                           
 27511                           ;../canpan3Outputs.c: 90:     SPI1CON2 = 0x02;
 27512   0154C6  0E02               	movlw	2
 27513   0154C8  6F86               	movwf	134,b	;volatile
 27514                           
 27515                           ; BSR set to: 0
 27516                           ;../canpan3Outputs.c: 92:     SPI1TCNTH=0;
 27517   0154CA  6B83               	clrf	131,b	;volatile
 27518                           
 27519                           ;../canpan3Outputs.c: 93:     SPI1TCNTL=1;
 27520   0154CC  0E01               	movlw	1
 27521   0154CE  6F82               	movwf	130,b	;volatile
 27522                           
 27523                           ; BSR set to: 0
 27524                           ;../canpan3Outputs.c: 94:     SPI1TWIDTH=0;
 27525   0154D0  6B88               	clrf	136,b	;volatile
 27526                           
 27527                           ; BSR set to: 0
 27528                           ;../canpan3Outputs.c: 96:     SPI1CLK = 0x00;
 27529   0154D2  6B8C               	clrf	140,b	;volatile
 27530                           
 27531                           ;../canpan3Outputs.c: 97:     SPI1BAUD = 7;
 27532   0154D4  0E07               	movlw	7
 27533   0154D6  6F89               	movwf	137,b	;volatile
 27534                           
 27535                           ;../canpan3Outputs.c: 100:     RC5PPS = 0x32;
 27536   0154D8  0E32               	movlw	50
 27537   0154DA  0102               	movlb	2	; () banked
 27538   0154DC  6F16               	movwf	22,b	;volatile
 27539                           
 27540                           ;../canpan3Outputs.c: 101:     RC3PPS = 0x31;
 27541   0154DE  0E31               	movlw	49
 27542   0154E0  6F14               	movwf	20,b	;volatile
 27543                           
 27544                           ;../canpan3Outputs.c: 102:     RC4PPS = 0x33;
 27545   0154E2  0E33               	movlw	51
 27546   0154E4  6F15               	movwf	21,b	;volatile
 27547                           
 27548                           ; BSR set to: 2
 27549                           ;../canpan3Outputs.c: 105:     SPI1CON0bits.EN = 1;
 27550   0154E6  0100               	movlb	0	; () banked
 27551   0154E8  8F84               	bsf	132,7,b	;volatile
 27552                           
 27553                           ; BSR set to: 0
 27554   0154EA  0012               	return		;funcret
 27555   0154EC                     __end_of_initOutputs:
 27556                           	callstack 0
 27557                           
 27558 ;; *************** function _initLeds *****************
 27559 ;; Defined at:
 27560 ;;		line 58 in file "../canpan3Leds.c"
 27561 ;; Parameters:    Size  Location     Type
 27562 ;;		None
 27563 ;; Auto vars:     Size  Location     Type
 27564 ;;  state           1   16[COMRAM] unsigned char 
 27565 ;;  ledNo           1   17[COMRAM] unsigned char 
 27566 ;; Return value:  Size  Location     Type
 27567 ;;                  1    wreg      void 
 27568 ;; Registers used:
 27569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27570 ;; Tracked objects:
 27571 ;;		On entry : 0/0
 27572 ;;		On exit  : 0/0
 27573 ;;		Unchanged: 0/0
 27574 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27579 ;;Total ram usage:        2 bytes
 27580 ;; Hardware stack levels used: 1
 27581 ;; Hardware stack levels required when called: 4
 27582 ;; This function calls:
 27583 ;;		_getNV
 27584 ;;		_readEEvalue
 27585 ;;		_setLedStateNoSave
 27586 ;; This function is called by:
 27587 ;;		_setup
 27588 ;; This function uses a non-reentrant model
 27589 ;;
 27590                           
 27591                           	psect	text3
 27592   015C6C                     __ptext3:
 27593                           	callstack 0
 27594   015C6C                     _initLeds:
 27595                           	callstack 121
 27596                           
 27597                           ;../canpan3Leds.c: 59:     uint8_t ledNo;;../canpan3Leds.c: 61:     startupNv = (uint8_t
      +                          )getNV(1);
 27598                           
 27599                           ; BSR set to: 0
 27600                           ;incstack = 0
 27601   015C6C  0E01               	movlw	1
 27602   015C6E  ECE0  F0AF         	call	_getNV
 27603   015C72  5001               	movf	?_getNV^(0+1280),w,c
 27604   015C74  0105               	movlb	5	; () banked
 27605   015C76  6F99               	movwf	_startupNv& (0+255),b
 27606                           
 27607                           ; BSR set to: 5
 27608                           ;../canpan3Leds.c: 63:     for (ledNo=0; ledNo<(4*8); ledNo++) {
 27609   015C78  6A12               	clrf	initLeds@ledNo^(0+1280),c
 27610   015C7A                     l533:
 27611                           
 27612                           ;../canpan3Leds.c: 64:         if (startupNv & 0x02) {
 27613   015C7A  0105               	movlb	5	; () banked
 27614   015C7C  A399               	btfss	_startupNv& (0+255),1,b
 27615   015C7E  D00B               	goto	l11437
 27616                           
 27617                           ; BSR set to: 5
 27618                           ;../canpan3Leds.c: 65:             uint8_t state = readEEvalue((0x0000 +0x20)+ledNo);
 27619   015C80  5012               	movf	initLeds@ledNo^(0+1280),w,c
 27620   015C82  0F20               	addlw	32
 27621   015C84  EC9E  F0B3         	call	_readEEvalue
 27622   015C88  6E11               	movwf	initLeds@state^(0+1280),c
 27623                           
 27624                           ;../canpan3Leds.c: 66:             setLedStateNoSave(ledNo, (enum canpan3LedState)state)
      +                          ;
 27625   015C8A  C511  F50D         	movff	initLeds@state,setLedStateNoSave@state
 27626   015C8E  5012               	movf	initLeds@ledNo^(0+1280),w,c
 27627   015C90  EC4F  F0AC         	call	_setLedStateNoSave
 27628                           
 27629                           ;../canpan3Leds.c: 67:         } else {
 27630   015C94  D008               	goto	l11439
 27631   015C96                     l11437:
 27632                           
 27633                           ; BSR set to: 5
 27634                           ;../canpan3Leds.c: 68:             ledStates[ledNo] = CANPANLED_OFF;
 27635   015C96  0E21               	movlw	low _ledStates
 27636   015C98  2412               	addwf	initLeds@ledNo^(0+1280),w,c
 27637   015C9A  6ED9               	movwf	fsr2l,c
 27638   015C9C  6ADA               	clrf	fsr2h,c
 27639   015C9E  0E06               	movlw	high _ledStates
 27640   015CA0  22DA               	addwfc	fsr2h,f,c
 27641   015CA2  0E01               	movlw	1
 27642   015CA4  6EDF               	movwf	indf2,c
 27643   015CA6                     l11439:
 27644                           
 27645                           ;../canpan3Leds.c: 70:     }
 27646   015CA6  2A12               	incf	initLeds@ledNo^(0+1280),f,c
 27647   015CA8  0E1F               	movlw	31
 27648   015CAA  6412               	cpfsgt	initLeds@ledNo^(0+1280),c
 27649   015CAC  D7E6               	goto	l533
 27650                           
 27651                           ;../canpan3Leds.c: 71:     flashToggle = 0;
 27652   015CAE  0105               	movlb	5	; () banked
 27653   015CB0  6B9A               	clrf	_flashToggle& (0+255),b
 27654                           
 27655                           ; BSR set to: 5
 27656   015CB2  0012               	return		;funcret
 27657   015CB4                     __end_of_initLeds:
 27658                           	callstack 0
 27659                           
 27660 ;; *************** function _initInputs *****************
 27661 ;; Defined at:
 27662 ;;		line 75 in file "../canpan3Inputs.c"
 27663 ;; Parameters:    Size  Location     Type
 27664 ;;		None
 27665 ;; Auto vars:     Size  Location     Type
 27666 ;;  i               1    6[COMRAM] unsigned char 
 27667 ;;  startNv         1    5[COMRAM] unsigned char 
 27668 ;; Return value:  Size  Location     Type
 27669 ;;                  1    wreg      void 
 27670 ;; Registers used:
 27671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27672 ;; Tracked objects:
 27673 ;;		On entry : 0/0
 27674 ;;		On exit  : 0/0
 27675 ;;		Unchanged: 0/0
 27676 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27678 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27679 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27680 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27681 ;;Total ram usage:        3 bytes
 27682 ;; Hardware stack levels used: 1
 27683 ;; Hardware stack levels required when called: 2
 27684 ;; This function calls:
 27685 ;;		_driveColumn
 27686 ;;		_getNV
 27687 ;;		_readEEvalue
 27688 ;; This function is called by:
 27689 ;;		_setup
 27690 ;; This function uses a non-reentrant model
 27691 ;;
 27692                           
 27693                           	psect	text4
 27694   014CF6                     __ptext4:
 27695                           	callstack 0
 27696   014CF6                     _initInputs:
 27697                           	callstack 123
 27698                           
 27699                           ;../canpan3Inputs.c: 76:     uint8_t i;;../canpan3Inputs.c: 77:     uint8_t startNv;;../
      +                          canpan3Inputs.c: 79:     canpanScanReady = 0;
 27700                           
 27701                           ; BSR set to: 5
 27702                           ;incstack = 0
 27703   014CF6  0105               	movlb	5	; () banked
 27704   014CF8  6BA2               	clrf	_canpanScanReady& (0+255),b
 27705                           
 27706                           ;../canpan3Inputs.c: 81:     TRISAbits.TRISA0=0;
 27707   014CFA  90C6               	bcf	198,0,c	;volatile
 27708                           
 27709                           ;../canpan3Inputs.c: 82:     TRISAbits.TRISA1=0;
 27710   014CFC  92C6               	bcf	198,1,c	;volatile
 27711                           
 27712                           ;../canpan3Inputs.c: 83:     TRISAbits.TRISA2=0;
 27713   014CFE  94C6               	bcf	198,2,c	;volatile
 27714                           
 27715                           ;../canpan3Inputs.c: 85:     TRISBbits.TRISB0=1;
 27716   014D00  80C7               	bsf	199,0,c	;volatile
 27717                           
 27718                           ;../canpan3Inputs.c: 86:     TRISBbits.TRISB1=1;
 27719   014D02  82C7               	bsf	199,1,c	;volatile
 27720                           
 27721                           ;../canpan3Inputs.c: 87:     TRISCbits.TRISC0=1;
 27722   014D04  80C8               	bsf	200,0,c	;volatile
 27723                           
 27724                           ;../canpan3Inputs.c: 88:     TRISCbits.TRISC1=1;
 27725   014D06  82C8               	bsf	200,1,c	;volatile
 27726                           
 27727                           ; BSR set to: 5
 27728                           ;../canpan3Inputs.c: 95:     WPUB = 0b00000011;
 27729   014D08  0E03               	movlw	3
 27730   014D0A  0104               	movlb	4	; () banked
 27731   014D0C  6F09               	movwf	9,b	;volatile
 27732                           
 27733                           ;../canpan3Inputs.c: 96:     WPUC = 0b00000011;
 27734   014D0E  0E03               	movlw	3
 27735   014D10  6F11               	movwf	17,b	;volatile
 27736                           
 27737                           ; BSR set to: 4
 27738                           ;../canpan3Inputs.c: 99:     column = 0;
 27739   014D12  0105               	movlb	5	; () banked
 27740   014D14  6B9E               	clrf	_column& (0+255),b
 27741                           
 27742                           ; BSR set to: 5
 27743                           ;../canpan3Inputs.c: 100:     driveColumn();
 27744   014D16  EC9B  F0AD         	call	_driveColumn	;wreg free
 27745                           
 27746                           ;../canpan3Inputs.c: 101:     startNv = (uint8_t)getNV(1);
 27747   014D1A  0E01               	movlw	1
 27748   014D1C  ECE0  F0AF         	call	_getNV
 27749   014D20  5001               	movf	?_getNV^(0+1280),w,c
 27750   014D22  6E06               	movwf	initInputs@startNv^(0+1280),c
 27751                           
 27752                           ;../canpan3Inputs.c: 102:     for (i=0; i<(8*4); i++) {
 27753   014D24  6A07               	clrf	initInputs@i^(0+1280),c
 27754   014D26                     l330:
 27755                           
 27756                           ;../canpan3Inputs.c: 103:         if (!(startNv & 0x01)) {
 27757   014D26  B006               	btfsc	initInputs@startNv^(0+1280),0,c
 27758   014D28  D00D               	goto	l11461
 27759                           
 27760                           ;../canpan3Inputs.c: 104:             outputState[i] = readEEvalue((0x0000)+i);
 27761   014D2A  5007               	movf	initInputs@i^(0+1280),w,c
 27762   014D2C  EC9E  F0B3         	call	_readEEvalue
 27763   014D30  6E05               	movwf	??_initInputs^(0+1280),c
 27764   014D32  0E41               	movlw	low _outputState
 27765   014D34  2407               	addwf	initInputs@i^(0+1280),w,c
 27766   014D36  6ED9               	movwf	fsr2l,c
 27767   014D38  6ADA               	clrf	fsr2h,c
 27768   014D3A  0E06               	movlw	high _outputState
 27769   014D3C  22DA               	addwfc	fsr2h,f,c
 27770   014D3E  C505  F4DF         	movff	??_initInputs,indf2
 27771                           
 27772                           ;../canpan3Inputs.c: 105:         } else {
 27773   014D42  D007               	goto	l11463
 27774   014D44                     l11461:
 27775                           
 27776                           ;../canpan3Inputs.c: 106:             outputState[i] = 0;
 27777   014D44  0E41               	movlw	low _outputState
 27778   014D46  2407               	addwf	initInputs@i^(0+1280),w,c
 27779   014D48  6ED9               	movwf	fsr2l,c
 27780   014D4A  6ADA               	clrf	fsr2h,c
 27781   014D4C  0E06               	movlw	high _outputState
 27782   014D4E  22DA               	addwfc	fsr2h,f,c
 27783   014D50  6ADF               	clrf	indf2,c
 27784   014D52                     l11463:
 27785                           
 27786                           ;../canpan3Inputs.c: 108:     }
 27787   014D52  2A07               	incf	initInputs@i^(0+1280),f,c
 27788   014D54  0E1F               	movlw	31
 27789   014D56  6407               	cpfsgt	initInputs@i^(0+1280),c
 27790   014D58  D7E6               	goto	l330
 27791                           
 27792                           ;../canpan3Inputs.c: 109:     for (i=0; i<8; i++) {
 27793   014D5A  6A07               	clrf	initInputs@i^(0+1280),c
 27794   014D5C                     l11471:
 27795                           
 27796                           ;../canpan3Inputs.c: 110:         buttonState[i] = 0;
 27797   014D5C  0E7E               	movlw	low _buttonState
 27798   014D5E  2407               	addwf	initInputs@i^(0+1280),w,c
 27799   014D60  6ED9               	movwf	fsr2l,c
 27800   014D62  6ADA               	clrf	fsr2h,c
 27801   014D64  0E06               	movlw	high _buttonState
 27802   014D66  22DA               	addwfc	fsr2h,f,c
 27803   014D68  6ADF               	clrf	indf2,c
 27804                           
 27805                           ;../canpan3Inputs.c: 111:     }
 27806   014D6A  2A07               	incf	initInputs@i^(0+1280),f,c
 27807   014D6C  0E07               	movlw	7
 27808   014D6E  6407               	cpfsgt	initInputs@i^(0+1280),c
 27809   014D70  D7F5               	goto	l11471
 27810   014D72  0012               	return	
 27811   014D74                     __end_of_initInputs:
 27812                           	callstack 0
 27813                           
 27814 ;; *************** function _readEEvalue *****************
 27815 ;; Defined at:
 27816 ;;		line 86 in file "../EEPROMbuffer.c"
 27817 ;; Parameters:    Size  Location     Type
 27818 ;;  address         1    wreg     unsigned char 
 27819 ;; Auto vars:     Size  Location     Type
 27820 ;;  address         1    0[COMRAM] unsigned char 
 27821 ;; Return value:  Size  Location     Type
 27822 ;;                  1    wreg      unsigned char 
 27823 ;; Registers used:
 27824 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27825 ;; Tracked objects:
 27826 ;;		On entry : 0/0
 27827 ;;		On exit  : 0/0
 27828 ;;		Unchanged: 0/0
 27829 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27831 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27833 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27834 ;;Total ram usage:        1 bytes
 27835 ;; Hardware stack levels used: 1
 27836 ;; Hardware stack levels required when called: 1
 27837 ;; This function calls:
 27838 ;;		Nothing
 27839 ;; This function is called by:
 27840 ;;		_initInputs
 27841 ;;		_initLeds
 27842 ;; This function uses a non-reentrant model
 27843 ;;
 27844                           
 27845                           	psect	text5
 27846   01673C                     __ptext5:
 27847                           	callstack 0
 27848   01673C                     _readEEvalue:
 27849                           	callstack 123
 27850                           
 27851                           ;incstack = 0
 27852                           ;readEEvalue@address stored from wreg
 27853   01673C  6E01               	movwf	readEEvalue@address^(0+1280),c
 27854                           
 27855                           ;../EEPROMbuffer.c: 87:     return eeValue[address];
 27856   01673E  0E44               	movlw	low _eeValue
 27857   016740  2401               	addwf	readEEvalue@address^(0+1280),w,c
 27858   016742  6ED9               	movwf	fsr2l,c
 27859   016744  6ADA               	clrf	fsr2h,c
 27860   016746  0E07               	movlw	high _eeValue
 27861   016748  22DA               	addwfc	fsr2h,f,c
 27862   01674A  50DF               	movf	indf2,w,c
 27863   01674C  0012               	return		;funcret
 27864   01674E                     __end_of_readEEvalue:
 27865                           	callstack 0
 27866                           
 27867 ;; *************** function _initEvents *****************
 27868 ;; Defined at:
 27869 ;;		line 79 in file "../canpan3Events.c"
 27870 ;; Parameters:    Size  Location     Type
 27871 ;;		None
 27872 ;; Auto vars:     Size  Location     Type
 27873 ;;		None
 27874 ;; Return value:  Size  Location     Type
 27875 ;;                  1    wreg      void 
 27876 ;; Registers used:
 27877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27878 ;; Tracked objects:
 27879 ;;		On entry : 0/0
 27880 ;;		On exit  : 0/0
 27881 ;;		Unchanged: 0/0
 27882 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27887 ;;Total ram usage:        0 bytes
 27888 ;; Hardware stack levels used: 1
 27889 ;; Hardware stack levels required when called: 5
 27890 ;; This function calls:
 27891 ;;		_rebuildLookupTable
 27892 ;; This function is called by:
 27893 ;;		_setup
 27894 ;; This function uses a non-reentrant model
 27895 ;;
 27896                           
 27897                           	psect	text6
 27898   01679C                     __ptext6:
 27899                           	callstack 0
 27900   01679C                     _initEvents:
 27901                           	callstack 120
 27902                           
 27903                           ;../canpan3Events.c: 80:     rebuildLookupTable();
 27904                           
 27905                           ;incstack = 0
 27906   01679C  ECAA  F0AA         	call	_rebuildLookupTable	;wreg free
 27907   0167A0  0012               	return		;funcret
 27908   0167A2                     __end_of_initEvents:
 27909                           	callstack 0
 27910                           
 27911 ;; *************** function _initEEPROMwriter *****************
 27912 ;; Defined at:
 27913 ;;		line 57 in file "../EEPROMbuffer.c"
 27914 ;; Parameters:    Size  Location     Type
 27915 ;;		None
 27916 ;; Auto vars:     Size  Location     Type
 27917 ;;		None
 27918 ;; Return value:  Size  Location     Type
 27919 ;;                  1    wreg      void 
 27920 ;; Registers used:
 27921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27922 ;; Tracked objects:
 27923 ;;		On entry : 0/0
 27924 ;;		On exit  : 0/0
 27925 ;;		Unchanged: 0/0
 27926 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 27927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 27931 ;;Total ram usage:        0 bytes
 27932 ;; Hardware stack levels used: 1
 27933 ;; Hardware stack levels required when called: 3
 27934 ;; This function calls:
 27935 ;;		_readNVM
 27936 ;; This function is called by:
 27937 ;;		_setup
 27938 ;; This function uses a non-reentrant model
 27939 ;;
 27940                           
 27941                           	psect	text7
 27942   015E0C                     __ptext7:
 27943                           	callstack 0
 27944   015E0C                     _initEEPROMwriter:
 27945                           	callstack 122
 27946                           
 27947                           ;../EEPROMbuffer.c: 58:     for(currentMemory = 0; currentMemory < ((8*4) + (4*8)); curr
      +                          entMemory++) {
 27948                           
 27949                           ;incstack = 0
 27950   015E0C  0105               	movlb	5	; () banked
 27951   015E0E  6B82               	clrf	_currentMemory& (0+255),b
 27952   015E10                     l11393:
 27953                           
 27954                           ; BSR set to: 5
 27955   015E10  0E3F               	movlw	63
 27956   015E12  6582               	cpfsgt	_currentMemory& (0+255),b
 27957   015E14  D001               	goto	l11397
 27958   015E16  D019               	goto	l2447
 27959   015E18                     l11397:
 27960                           
 27961                           ; BSR set to: 5
 27962                           ;../EEPROMbuffer.c: 59:         writeNeeded[currentMemory] = 0;
 27963   015E18  0E84               	movlw	low _writeNeeded
 27964   015E1A  2582               	addwf	_currentMemory& (0+255),w,b
 27965   015E1C  6ED9               	movwf	fsr2l,c
 27966   015E1E  6ADA               	clrf	fsr2h,c
 27967   015E20  0E07               	movlw	high _writeNeeded
 27968   015E22  22DA               	addwfc	fsr2h,f,c
 27969   015E24  6ADF               	clrf	indf2,c
 27970                           
 27971                           ; BSR set to: 5
 27972                           ;../EEPROMbuffer.c: 60:         eeValue[currentMemory] = (uint8_t)readNVM(EEPROM_NVM_TYP
      +                          E, 0x0000 +currentMemory);
 27973   015E26  5182               	movf	_currentMemory& (0+255),w,b
 27974   015E28  6E07               	movwf	readNVM@index^(0+1280),c
 27975   015E2A  6A08               	clrf	(readNVM@index+1)^(0+1280),c
 27976   015E2C  6A09               	clrf	(readNVM@index+2)^(0+1280),c
 27977   015E2E  0E00               	movlw	0
 27978   015E30  EC6C  F0AB         	call	_readNVM
 27979   015E34  0E44               	movlw	low _eeValue
 27980   015E36  0105               	movlb	5	; () banked
 27981   015E38  2582               	addwf	_currentMemory& (0+255),w,b
 27982   015E3A  6ED9               	movwf	fsr2l,c
 27983   015E3C  6ADA               	clrf	fsr2h,c
 27984   015E3E  0E07               	movlw	high _eeValue
 27985   015E40  22DA               	addwfc	fsr2h,f,c
 27986   015E42  C507  F4DF         	movff	?_readNVM,indf2
 27987                           
 27988                           ; BSR set to: 5
 27989                           ;../EEPROMbuffer.c: 61:     }
 27990   015E46  2B82               	incf	_currentMemory& (0+255),f,b
 27991   015E48  D7E3               	goto	l11393
 27992   015E4A                     l2447:
 27993                           
 27994                           ; BSR set to: 5
 27995                           ;../EEPROMbuffer.c: 62:     currentMemory = 0;
 27996   015E4A  6B82               	clrf	_currentMemory& (0+255),b
 27997                           
 27998                           ; BSR set to: 5
 27999   015E4C  0012               	return		;funcret
 28000   015E4E                     __end_of_initEEPROMwriter:
 28001                           	callstack 0
 28002                           
 28003 ;; *************** function _powerUp *****************
 28004 ;; Defined at:
 28005 ;;		line 886 in file "../../VLCBlib_PIC/vlcb.c"
 28006 ;; Parameters:    Size  Location     Type
 28007 ;;		None
 28008 ;; Auto vars:     Size  Location     Type
 28009 ;;  i               1   38[COMRAM] unsigned char 
 28010 ;;  divider         1    0        unsigned char 
 28011 ;; Return value:  Size  Location     Type
 28012 ;;                  1    wreg      void 
 28013 ;; Registers used:
 28014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28015 ;; Tracked objects:
 28016 ;;		On entry : 0/0
 28017 ;;		On exit  : 0/0
 28018 ;;		Unchanged: 0/0
 28019 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28022 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28023 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28024 ;;Total ram usage:        3 bytes
 28025 ;; Hardware stack levels used: 1
 28026 ;; Hardware stack levels required when called: 6
 28027 ;; This function calls:
 28028 ;;		NULL
 28029 ;;		_bootPowerUp
 28030 ;;		_canPowerUp
 28031 ;;		_consumerPowerUp
 28032 ;;		_initTicker
 28033 ;;		_initTimedResponse
 28034 ;;		_leds_powerUp
 28035 ;;		_mnsPowerUp
 28036 ;;		_nvPowerUp
 28037 ;;		_producerPowerUp
 28038 ;;		_teachPowerUp
 28039 ;; This function is called by:
 28040 ;;		_main
 28041 ;; This function uses a non-reentrant model
 28042 ;;
 28043                           
 28044                           	psect	text8
 28045   013EFE                     __ptext8:
 28046                           	callstack 0
 28047   013EFE                     _powerUp:
 28048                           	callstack 120
 28049                           
 28050                           ;../../VLCBlib_PIC/vlcb.c: 887:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 888:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 891:     initTicker(0);
 28051                           
 28052                           ; BSR set to: 5
 28053                           ;incstack = 0
 28054   013EFE  0E00               	movlw	0
 28055   013F00  EC4B  F0AD         	call	_initTicker
 28056                           
 28057                           ;../../VLCBlib_PIC/vlcb.c: 892:     initTimedResponse();
 28058   013F04  ECD1  F0B3         	call	_initTimedResponse	;wreg free
 28059                           
 28060                           ;../../VLCBlib_PIC/vlcb.c: 893:     leds_powerUp();
 28061   013F08  EC63  F0B1         	call	_leds_powerUp	;wreg free
 28062                           
 28063                           ;../../VLCBlib_PIC/vlcb.c: 894:     timedResponseDelay = 5;
 28064   013F0C  0E05               	movlw	5
 28065   013F0E  0105               	movlb	5	; () banked
 28066   013F10  6F83               	movwf	_timedResponseDelay& (0+255),b
 28067                           
 28068                           ; BSR set to: 5
 28069                           ;../../VLCBlib_PIC/vlcb.c: 896:     for (i=0; i<8; i++) {
 28070   013F12  6A27               	clrf	powerUp@i^(0+1280),c
 28071   013F14                     l12485:
 28072                           
 28073                           ;../../VLCBlib_PIC/vlcb.c: 897:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
 28074   013F14  5027               	movf	powerUp@i^(0+1280),w,c
 28075   013F16  0D02               	mullw	2
 28076   013F18  0E35               	movlw	low _services
 28077   013F1A  24F3               	addwf	243,w,c
 28078   013F1C  6EF6               	movwf	tblptrl,c
 28079   013F1E  0EFF               	movlw	high _services
 28080   013F20  20F4               	addwfc	244,w,c
 28081   013F22  6EF7               	movwf	tblptrh,c
 28082   013F24                     	if	1	;There are 3 active tblptr bytes
 28083   013F24  6AF8               	clrf	tblptru,c
 28084   013F26  0E00               	movlw	low (__pmediumconst shr (0+16))
 28085   013F28  22F8               	addwfc	tblptru,f,c
 28086   013F2A                     	endif
 28087   013F2A  0009               	tblrd		*+
 28088   013F2C  50F5               	movf	tablat,w,c
 28089   013F2E  0009               	tblrd		*+
 28090   013F30  10F5               	iorwf	tablat,w,c
 28091   013F32  B4D8               	btfsc	status,2,c
 28092   013F34  D04D               	goto	u10829
 28093   013F36  5027               	movf	powerUp@i^(0+1280),w,c
 28094   013F38  0D02               	mullw	2
 28095   013F3A  0E35               	movlw	low _services
 28096   013F3C  24F3               	addwf	243,w,c
 28097   013F3E  6EF6               	movwf	tblptrl,c
 28098   013F40  0EFF               	movlw	high _services
 28099   013F42  20F4               	addwfc	244,w,c
 28100   013F44  6EF7               	movwf	tblptrh,c
 28101   013F46                     	if	1	;There are 3 active tblptr bytes
 28102   013F46  6AF8               	clrf	tblptru,c
 28103   013F48  0E00               	movlw	low (__pmediumconst shr (0+16))
 28104   013F4A  22F8               	addwfc	tblptru,f,c
 28105   013F4C                     	endif
 28106   013F4C  0009               	tblrd		*+
 28107   013F4E  C4F5 F525          	movff	tablat,??_powerUp
 28108   013F52  0009               	tblrd		*+
 28109   013F54  C4F5 F526          	movff	tablat,??_powerUp+1
 28110   013F58  0E05               	movlw	5
 28111   013F5A  2625               	addwf	??_powerUp^(0+1280),f,c
 28112   013F5C  0E00               	movlw	0
 28113   013F5E  2226               	addwfc	(??_powerUp+1)^(0+1280),f,c
 28114   013F60  C525  F4F6         	movff	??_powerUp,tblptrl
 28115   013F64  C526  F4F7         	movff	??_powerUp+1,tblptrh
 28116   013F68                     	if	0	;tblptru may be non-zero
 28117   013F68                     	endif
 28118   013F68                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28119   013F68  0E00               	movlw	low (__pmediumconst shr (0+16))
 28120   013F6A  6EF8               	movwf	tblptru,c
 28121   013F6C                     	endif
 28122   013F6C  0009               	tblrd		*+
 28123   013F6E  50F5               	movf	tablat,w,c
 28124   013F70  0009               	tblrd		*+
 28125   013F72  10F5               	iorwf	tablat,w,c
 28126   013F74  0009               	tblrd		*+
 28127   013F76  10F5               	iorwf	tablat,w,c
 28128   013F78  B4D8               	btfsc	status,2,c
 28129   013F7A  D02A               	goto	u10829
 28130                           
 28131                           ;../../VLCBlib_PIC/vlcb.c: 898:             services[i]->powerUp();
 28132   013F7C  5027               	movf	powerUp@i^(0+1280),w,c
 28133   013F7E  0D02               	mullw	2
 28134   013F80  0E35               	movlw	low _services
 28135   013F82  24F3               	addwf	243,w,c
 28136   013F84  6EF6               	movwf	tblptrl,c
 28137   013F86  0EFF               	movlw	high _services
 28138   013F88  20F4               	addwfc	244,w,c
 28139   013F8A  6EF7               	movwf	tblptrh,c
 28140   013F8C                     	if	1	;There are 3 active tblptr bytes
 28141   013F8C  6AF8               	clrf	tblptru,c
 28142   013F8E  0E00               	movlw	low (__pmediumconst shr (0+16))
 28143   013F90  22F8               	addwfc	tblptru,f,c
 28144   013F92                     	endif
 28145   013F92  0009               	tblrd		*+
 28146   013F94  C4F5 F525          	movff	tablat,??_powerUp
 28147   013F98  0009               	tblrd		*+
 28148   013F9A  C4F5 F526          	movff	tablat,??_powerUp+1
 28149   013F9E  0E05               	movlw	5
 28150   013FA0  2625               	addwf	??_powerUp^(0+1280),f,c
 28151   013FA2  0E00               	movlw	0
 28152   013FA4  2226               	addwfc	(??_powerUp+1)^(0+1280),f,c
 28153   013FA6  C525  F4F6         	movff	??_powerUp,tblptrl
 28154   013FAA  C526  F4F7         	movff	??_powerUp+1,tblptrh
 28155   013FAE                     	if	0	;tblptru may be non-zero
 28156   013FAE                     	endif
 28157   013FAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28158   013FAE  0E00               	movlw	low (__pmediumconst shr (0+16))
 28159   013FB0  6EF8               	movwf	tblptru,c
 28160   013FB2                     	endif
 28161   013FB2  D801               	call	u10828
 28162   013FB4  D00D               	goto	u10829
 28163   013FB6                     u10828:
 28164   013FB6  0005               	push	
 28165   013FB8  6EFA               	movwf	pclath,c
 28166   013FBA  0009               	tblrd		*+
 28167   013FBC  50F5               	movf	tablat,w,c
 28168   013FBE  6EFD               	movwf	tosl,c
 28169   013FC0  0009               	tblrd		*+
 28170   013FC2  50F5               	movf	tablat,w,c
 28171   013FC4  6EFE               	movwf	tosh,c
 28172   013FC6  0009               	tblrd		*+
 28173   013FC8  50F5               	movf	tablat,w,c
 28174   013FCA  6EFF               	movwf	tosu,c
 28175   013FCC  50FA               	movf	pclath,w,c
 28176   013FCE  0012               	return		;indir
 28177   013FD0                     u10829:
 28178                           
 28179                           ;../../VLCBlib_PIC/vlcb.c: 900:     }
 28180   013FD0  2A27               	incf	powerUp@i^(0+1280),f,c
 28181   013FD2  0E07               	movlw	7
 28182   013FD4  6427               	cpfsgt	powerUp@i^(0+1280),c
 28183   013FD6  D79E               	goto	l12485
 28184   013FD8  0012               	return	
 28185   013FDA                     __end_of_powerUp:
 28186                           	callstack 0
 28187                           
 28188 ;; *************** function _producerPowerUp *****************
 28189 ;; Defined at:
 28190 ;;		line 98 in file "../../VLCBlib_PIC/event_producer_simple.c"
 28191 ;; Parameters:    Size  Location     Type
 28192 ;;		None
 28193 ;; Auto vars:     Size  Location     Type
 28194 ;;  i               1    0[COMRAM] unsigned char 
 28195 ;; Return value:  Size  Location     Type
 28196 ;;                  1    wreg      void 
 28197 ;; Registers used:
 28198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28199 ;; Tracked objects:
 28200 ;;		On entry : 0/0
 28201 ;;		On exit  : 0/0
 28202 ;;		Unchanged: 0/0
 28203 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28207 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28208 ;;Total ram usage:        1 bytes
 28209 ;; Hardware stack levels used: 1
 28210 ;; Hardware stack levels required when called: 1
 28211 ;; This function calls:
 28212 ;;		Nothing
 28213 ;; This function is called by:
 28214 ;;		_powerUp
 28215 ;; This function uses a non-reentrant model
 28216 ;;
 28217                           
 28218                           	psect	text9
 28219   01626E                     __ptext9:
 28220                           	callstack 0
 28221   01626E                     _producerPowerUp:
 28222                           	callstack 124
 28223                           
 28224                           ;../../VLCBlib_PIC/event_producer_simple.c: 99:     uint8_t i;;../../VLCBlib_PIC/event_p
      +                          roducer_simple.c: 100:     for (i=1; i <= 1; i++) {
 28225                           
 28226                           ;incstack = 0
 28227   01626E  0E01               	movlw	1
 28228   016270  6E01               	movwf	producerPowerUp@i^(0+1280),c
 28229   016272                     l12379:
 28230                           
 28231                           ;../../VLCBlib_PIC/event_producer_simple.c: 101:         producerDiagnostics[i].asUint =
      +                           0;
 28232   016272  5001               	movf	producerPowerUp@i^(0+1280),w,c
 28233   016274  0D02               	mullw	2
 28234   016276  0EC2               	movlw	low _producerDiagnostics
 28235   016278  24F3               	addwf	243,w,c
 28236   01627A  6ED9               	movwf	fsr2l,c
 28237   01627C  0E05               	movlw	high _producerDiagnostics
 28238   01627E  20F4               	addwfc	prodh,w,c
 28239   016280  6EDA               	movwf	fsr2h,c
 28240   016282  6ADE               	clrf	postinc2,c
 28241   016284  6ADD               	clrf	postdec2,c
 28242                           
 28243                           ;../../VLCBlib_PIC/event_producer_simple.c: 102:     }
 28244   016286  2A01               	incf	producerPowerUp@i^(0+1280),f,c
 28245   016288  0E01               	movlw	1
 28246   01628A  6401               	cpfsgt	producerPowerUp@i^(0+1280),c
 28247   01628C  D7F2               	goto	l12379
 28248                           
 28249                           ;../../VLCBlib_PIC/event_producer_simple.c: 103:     producerDiagnostics[0].asUint = 1;
 28250   01628E  0E00               	movlw	0
 28251   016290  0105               	movlb	5	; () banked
 28252   016292  6FC3               	movwf	(_producerDiagnostics+1)& (0+255),b
 28253   016294  0E01               	movlw	1
 28254   016296  6FC2               	movwf	_producerDiagnostics& (0+255),b
 28255                           
 28256                           ; BSR set to: 5
 28257   016298  0012               	return		;funcret
 28258   01629A                     __end_of_producerPowerUp:
 28259                           	callstack 0
 28260                           
 28261 ;; *************** function _nvPowerUp *****************
 28262 ;; Defined at:
 28263 ;;		line 136 in file "../../VLCBlib_PIC/nv.c"
 28264 ;; Parameters:    Size  Location     Type
 28265 ;;		None
 28266 ;; Auto vars:     Size  Location     Type
 28267 ;;  i               1   17[COMRAM] unsigned char 
 28268 ;; Return value:  Size  Location     Type
 28269 ;;                  1    wreg      void 
 28270 ;; Registers used:
 28271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28272 ;; Tracked objects:
 28273 ;;		On entry : 0/0
 28274 ;;		On exit  : 0/0
 28275 ;;		Unchanged: 0/0
 28276 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28278 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28280 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28281 ;;Total ram usage:        1 bytes
 28282 ;; Hardware stack levels used: 1
 28283 ;; Hardware stack levels required when called: 4
 28284 ;; This function calls:
 28285 ;;		_loadNvCache
 28286 ;; This function is called by:
 28287 ;;		_powerUp
 28288 ;; This function uses a non-reentrant model
 28289 ;;
 28290                           
 28291                           	psect	text10
 28292   0161E0                     __ptext10:
 28293                           	callstack 0
 28294   0161E0                     _nvPowerUp:
 28295                           	callstack 121
 28296                           
 28297                           ;../../VLCBlib_PIC/nv.c: 138:     uint8_t i;;../../VLCBlib_PIC/nv.c: 139:     for (i=1; 
      +                          i <= 2; i++) {
 28298                           
 28299                           ; BSR set to: 5
 28300                           ;incstack = 0
 28301   0161E0  0E01               	movlw	1
 28302   0161E2  6E12               	movwf	nvPowerUp@i^(0+1280),c
 28303   0161E4                     l12239:
 28304                           
 28305                           ;../../VLCBlib_PIC/nv.c: 140:         nvDiagnostics[i].asUint = 0;
 28306   0161E4  5012               	movf	nvPowerUp@i^(0+1280),w,c
 28307   0161E6  0D02               	mullw	2
 28308   0161E8  0EB1               	movlw	low _nvDiagnostics
 28309   0161EA  24F3               	addwf	243,w,c
 28310   0161EC  6ED9               	movwf	fsr2l,c
 28311   0161EE  0E05               	movlw	high _nvDiagnostics
 28312   0161F0  20F4               	addwfc	prodh,w,c
 28313   0161F2  6EDA               	movwf	fsr2h,c
 28314   0161F4  6ADE               	clrf	postinc2,c
 28315   0161F6  6ADD               	clrf	postdec2,c
 28316                           
 28317                           ;../../VLCBlib_PIC/nv.c: 141:     }
 28318   0161F8  2A12               	incf	nvPowerUp@i^(0+1280),f,c
 28319   0161FA  0E02               	movlw	2
 28320   0161FC  6412               	cpfsgt	nvPowerUp@i^(0+1280),c
 28321   0161FE  D7F2               	goto	l12239
 28322                           
 28323                           ;../../VLCBlib_PIC/nv.c: 142:     nvDiagnostics[0x00].asUint = 2;
 28324   016200  0E00               	movlw	0
 28325   016202  0105               	movlb	5	; () banked
 28326   016204  6FB2               	movwf	(_nvDiagnostics+1)& (0+255),b
 28327   016206  0E02               	movlw	2
 28328   016208  6FB1               	movwf	_nvDiagnostics& (0+255),b
 28329                           
 28330                           ; BSR set to: 5
 28331                           ;../../VLCBlib_PIC/nv.c: 145:     loadNvCache();
 28332   01620A  EC11  F0AE         	call	_loadNvCache	;wreg free
 28333   01620E  0012               	return		;funcret
 28334   016210                     __end_of_nvPowerUp:
 28335                           	callstack 0
 28336                           
 28337 ;; *************** function _mnsPowerUp *****************
 28338 ;; Defined at:
 28339 ;;		line 297 in file "../../VLCBlib_PIC/mns.c"
 28340 ;; Parameters:    Size  Location     Type
 28341 ;;		None
 28342 ;; Auto vars:     Size  Location     Type
 28343 ;;  temp            2   13[COMRAM] int 
 28344 ;;  i               1   12[COMRAM] unsigned char 
 28345 ;; Return value:  Size  Location     Type
 28346 ;;                  1    wreg      void 
 28347 ;; Registers used:
 28348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28349 ;; Tracked objects:
 28350 ;;		On entry : 0/0
 28351 ;;		On exit  : 0/0
 28352 ;;		Unchanged: 0/0
 28353 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28355 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28357 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28358 ;;Total ram usage:        3 bytes
 28359 ;; Hardware stack levels used: 1
 28360 ;; Hardware stack levels required when called: 3
 28361 ;; This function calls:
 28362 ;;		_readNVM
 28363 ;;		_setLEDsByMode
 28364 ;;		_tickGet
 28365 ;; This function is called by:
 28366 ;;		_powerUp
 28367 ;; This function uses a non-reentrant model
 28368 ;;
 28369                           
 28370                           	psect	text11
 28371   013758                     __ptext11:
 28372                           	callstack 0
 28373   013758                     _mnsPowerUp:
 28374                           	callstack 122
 28375                           
 28376                           ;../../VLCBlib_PIC/mns.c: 298:     int temp;;../../VLCBlib_PIC/mns.c: 299:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 301:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
 28377                           
 28378                           ;incstack = 0
 28379   013758  0EFD               	movlw	253
 28380   01375A  6E07               	movwf	readNVM@index^(0+1280),c
 28381   01375C  0E03               	movlw	3
 28382   01375E  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 28383   013760  0E00               	movlw	0
 28384   013762  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 28385   013764  0E00               	movlw	0
 28386   013766  EC6C  F0AB         	call	_readNVM
 28387   01376A  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 28388   01376E  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 28389                           
 28390                           ;../../VLCBlib_PIC/mns.c: 302:     if (temp < 0) {
 28391   013772  AE0F               	btfss	(mnsPowerUp@temp+1)^(0+1280),7,c
 28392   013774  D003               	goto	l1553
 28393   013776                     u10260:
 28394                           
 28395                           ;../../VLCBlib_PIC/mns.c: 303:         nn.bytes.hi = 0;
 28396   013776  6A5F               	clrf	(_nn+1)^(0+1280),c
 28397                           
 28398                           ;../../VLCBlib_PIC/mns.c: 304:         nn.bytes.lo = 0;
 28399   013778  6A5E               	clrf	_nn^(0+1280),c
 28400                           
 28401                           ;../../VLCBlib_PIC/mns.c: 305:     } else {
 28402   01377A  D013               	goto	l12073
 28403   01377C                     l1553:
 28404                           
 28405                           ;../../VLCBlib_PIC/mns.c: 306:         nn.bytes.hi = (uint8_t)temp;
 28406   01377C  C50E  F55F         	movff	mnsPowerUp@temp,_nn+1
 28407                           
 28408                           ;../../VLCBlib_PIC/mns.c: 307:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
 28409   013780  0EFC               	movlw	252
 28410   013782  6E07               	movwf	readNVM@index^(0+1280),c
 28411   013784  0E03               	movlw	3
 28412   013786  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 28413   013788  0E00               	movlw	0
 28414   01378A  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 28415   01378C  0E00               	movlw	0
 28416   01378E  EC6C  F0AB         	call	_readNVM
 28417   013792  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 28418   013796  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 28419                           
 28420                           ;../../VLCBlib_PIC/mns.c: 308:         if (temp < 0) {
 28421   01379A  BE0F               	btfsc	(mnsPowerUp@temp+1)^(0+1280),7,c
 28422   01379C  D7EC               	goto	u10260
 28423                           
 28424                           ;../../VLCBlib_PIC/mns.c: 312:             nn.bytes.lo = (uint8_t)temp;
 28425   01379E  C50E  F55E         	movff	mnsPowerUp@temp,_nn
 28426   0137A2                     l12073:
 28427                           
 28428                           ;../../VLCBlib_PIC/mns.c: 315:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
 28429   0137A2  0EFB               	movlw	251
 28430   0137A4  6E07               	movwf	readNVM@index^(0+1280),c
 28431   0137A6  0E03               	movlw	3
 28432   0137A8  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 28433   0137AA  0E00               	movlw	0
 28434   0137AC  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 28435   0137AE  0E00               	movlw	0
 28436   0137B0  EC6C  F0AB         	call	_readNVM
 28437   0137B4  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 28438   0137B8  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 28439                           
 28440                           ;../../VLCBlib_PIC/mns.c: 316:     if (temp < 0) {
 28441   0137BC  AE0F               	btfss	(mnsPowerUp@temp+1)^(0+1280),7,c
 28442   0137BE  D003               	goto	l1557
 28443                           
 28444                           ;../../VLCBlib_PIC/mns.c: 317:         mode_state = MODE_UNINITIALISED;
 28445   0137C0  0105               	movlb	5	; () banked
 28446   0137C2  6991               	setf	_mode_state& (0+255),b
 28447                           
 28448                           ;../../VLCBlib_PIC/mns.c: 318:     } else {
 28449   0137C4  D002               	goto	l1558
 28450   0137C6                     l1557:
 28451                           
 28452                           ;../../VLCBlib_PIC/mns.c: 319:         mode_state = (uint8_t)temp;
 28453   0137C6  C50E  F591         	movff	mnsPowerUp@temp,_mode_state
 28454   0137CA                     l1558:
 28455                           
 28456                           ;../../VLCBlib_PIC/mns.c: 321:     setupModePreviousMode = mode_state;
 28457   0137CA  C591  F58E         	movff	_mode_state,_setupModePreviousMode
 28458                           
 28459                           ;../../VLCBlib_PIC/mns.c: 322:     temp = readNVM(EEPROM_NVM_TYPE, 0x3F9);
 28460   0137CE  0EF9               	movlw	249
 28461   0137D0  6E07               	movwf	readNVM@index^(0+1280),c
 28462   0137D2  0E03               	movlw	3
 28463   0137D4  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 28464   0137D6  0E00               	movlw	0
 28465   0137D8  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 28466   0137DA  0E00               	movlw	0
 28467   0137DC  EC6C  F0AB         	call	_readNVM
 28468   0137E0  C507  F50E         	movff	?_readNVM,mnsPowerUp@temp
 28469   0137E4  C508  F50F         	movff	?_readNVM+1,mnsPowerUp@temp+1
 28470                           
 28471                           ;../../VLCBlib_PIC/mns.c: 323:     if (temp < 0) {
 28472   0137E8  AE0F               	btfss	(mnsPowerUp@temp+1)^(0+1280),7,c
 28473   0137EA  D003               	goto	l1559
 28474                           
 28475                           ;../../VLCBlib_PIC/mns.c: 324:         mode_flags = 0;
 28476   0137EC  0105               	movlb	5	; () banked
 28477   0137EE  6BA0               	clrf	_mode_flags& (0+255),b
 28478                           
 28479                           ;../../VLCBlib_PIC/mns.c: 325:     } else {
 28480   0137F0  D002               	goto	l12085
 28481   0137F2                     l1559:
 28482                           
 28483                           ;../../VLCBlib_PIC/mns.c: 326:         mode_flags = (uint8_t)temp;
 28484   0137F2  C50E  F5A0         	movff	mnsPowerUp@temp,_mode_flags
 28485   0137F6                     l12085:
 28486                           
 28487                           ;../../VLCBlib_PIC/mns.c: 328:     mode_flags &= ~8;
 28488   0137F6  0105               	movlb	5	; () banked
 28489   0137F8  97A0               	bcf	_mode_flags& (0+255),3,b
 28490                           
 28491                           ;../../VLCBlib_PIC/mns.c: 330:     mode_flags |= 8;
 28492   0137FA  87A0               	bsf	_mode_flags& (0+255),3,b
 28493                           
 28494                           ; BSR set to: 5
 28495                           ;../../VLCBlib_PIC/mns.c: 332:     last_mode_flags = mode_flags;
 28496   0137FC  C5A0  F58F         	movff	_mode_flags,_last_mode_flags
 28497                           
 28498                           ; BSR set to: 5
 28499                           ;../../VLCBlib_PIC/mns.c: 333:     setLEDsByMode();
 28500   013800  ECD7  F0B0         	call	_setLEDsByMode	;wreg free
 28501                           
 28502                           ;../../VLCBlib_PIC/mns.c: 335:     pbTimer.val = tickGet();
 28503   013804  EC7A  F0AC         	call	_tickGet	;wreg free
 28504   013808  C501  F560         	movff	?_tickGet,_pbTimer
 28505   01380C  C502  F561         	movff	?_tickGet+1,_pbTimer+1
 28506   013810  C503  F562         	movff	?_tickGet+2,_pbTimer+2
 28507   013814  C504  F563         	movff	?_tickGet+3,_pbTimer+3
 28508                           
 28509                           ;../../VLCBlib_PIC/mns.c: 336:     pbWasPushed = FALSE;
 28510   013818  0105               	movlb	5	; () banked
 28511   01381A  6B8D               	clrf	_pbWasPushed& (0+255),b
 28512                           
 28513                           ; BSR set to: 5
 28514                           ;../../VLCBlib_PIC/mns.c: 340:     for (i=1; i<= 6; i++) {
 28515   01381C  0E01               	movlw	1
 28516   01381E  6E0D               	movwf	mnsPowerUp@i^(0+1280),c
 28517   013820                     l12101:
 28518                           
 28519                           ;../../VLCBlib_PIC/mns.c: 341:         mnsDiagnostics[i].asInt = 0;
 28520   013820  500D               	movf	mnsPowerUp@i^(0+1280),w,c
 28521   013822  0D02               	mullw	2
 28522   013824  0EA3               	movlw	low _mnsDiagnostics
 28523   013826  24F3               	addwf	243,w,c
 28524   013828  6ED9               	movwf	fsr2l,c
 28525   01382A  0E05               	movlw	high _mnsDiagnostics
 28526   01382C  20F4               	addwfc	prodh,w,c
 28527   01382E  6EDA               	movwf	fsr2h,c
 28528   013830  6ADE               	clrf	postinc2,c
 28529   013832  6ADD               	clrf	postdec2,c
 28530                           
 28531                           ;../../VLCBlib_PIC/mns.c: 342:     }
 28532   013834  2A0D               	incf	mnsPowerUp@i^(0+1280),f,c
 28533   013836  0E06               	movlw	6
 28534   013838  640D               	cpfsgt	mnsPowerUp@i^(0+1280),c
 28535   01383A  D7F2               	goto	l12101
 28536                           
 28537                           ;../../VLCBlib_PIC/mns.c: 343:     mnsDiagnostics[0x00].asInt = 6;
 28538   01383C  0E00               	movlw	0
 28539   01383E  0105               	movlb	5	; () banked
 28540   013840  6FA4               	movwf	(_mnsDiagnostics+1)& (0+255),b
 28541   013842  0E06               	movlw	6
 28542   013844  6FA3               	movwf	_mnsDiagnostics& (0+255),b
 28543                           
 28544                           ; BSR set to: 5
 28545                           ;../../VLCBlib_PIC/mns.c: 345:     heartbeatSequence = 0;
 28546   013846  6B8C               	clrf	_heartbeatSequence& (0+255),b
 28547                           
 28548                           ;../../VLCBlib_PIC/mns.c: 346:     heartbeatTimer.val = 0;
 28549   013848  0E00               	movlw	0
 28550   01384A  0106               	movlb	6	; () banked
 28551   01384C  6F96               	movwf	_heartbeatTimer& (0+255),b
 28552   01384E  0E00               	movlw	0
 28553   013850  6F97               	movwf	(_heartbeatTimer+1)& (0+255),b
 28554   013852  0E00               	movlw	0
 28555   013854  6F98               	movwf	(_heartbeatTimer+2)& (0+255),b
 28556   013856  0E00               	movlw	0
 28557   013858  6F99               	movwf	(_heartbeatTimer+3)& (0+255),b
 28558                           
 28559                           ;../../VLCBlib_PIC/mns.c: 347:     uptimeTimer.val = 0;
 28560   01385A  0E00               	movlw	0
 28561   01385C  6F92               	movwf	_uptimeTimer& (0+255),b
 28562   01385E  0E00               	movlw	0
 28563   013860  6F93               	movwf	(_uptimeTimer+1)& (0+255),b
 28564   013862  0E00               	movlw	0
 28565   013864  6F94               	movwf	(_uptimeTimer+2)& (0+255),b
 28566   013866  0E00               	movlw	0
 28567   013868  6F95               	movwf	(_uptimeTimer+3)& (0+255),b
 28568                           
 28569                           ; BSR set to: 6
 28570   01386A  0012               	return		;funcret
 28571   01386C                     __end_of_mnsPowerUp:
 28572                           	callstack 0
 28573                           
 28574 ;; *************** function _consumerPowerUp *****************
 28575 ;; Defined at:
 28576 ;;		line 92 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 28577 ;; Parameters:    Size  Location     Type
 28578 ;;		None
 28579 ;; Auto vars:     Size  Location     Type
 28580 ;;  temp            1    0[COMRAM] unsigned char 
 28581 ;; Return value:  Size  Location     Type
 28582 ;;                  1    wreg      void 
 28583 ;; Registers used:
 28584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28585 ;; Tracked objects:
 28586 ;;		On entry : 0/0
 28587 ;;		On exit  : 0/0
 28588 ;;		Unchanged: 0/0
 28589 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28593 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28594 ;;Total ram usage:        1 bytes
 28595 ;; Hardware stack levels used: 1
 28596 ;; Hardware stack levels required when called: 1
 28597 ;; This function calls:
 28598 ;;		Nothing
 28599 ;; This function is called by:
 28600 ;;		_powerUp
 28601 ;; This function uses a non-reentrant model
 28602 ;;
 28603                           
 28604                           	psect	text12
 28605   01629A                     __ptext12:
 28606                           	callstack 0
 28607   01629A                     _consumerPowerUp:
 28608                           	callstack 124
 28609                           
 28610                           ;../../VLCBlib_PIC/event_consumer_simple.c: 94:     uint8_t temp;;../../VLCBlib_PIC/even
      +                          t_consumer_simple.c: 96:     for (temp=1; temp<=2; temp++) {
 28611                           
 28612                           ; BSR set to: 6
 28613                           ;incstack = 0
 28614   01629A  0E01               	movlw	1
 28615   01629C  6E01               	movwf	consumerPowerUp@temp^(0+1280),c
 28616   01629E                     l12033:
 28617                           
 28618                           ;../../VLCBlib_PIC/event_consumer_simple.c: 97:         consumerDiagnostics[temp].asUint
      +                           = 0;
 28619   01629E  5001               	movf	consumerPowerUp@temp^(0+1280),w,c
 28620   0162A0  0D02               	mullw	2
 28621   0162A2  0EB7               	movlw	low _consumerDiagnostics
 28622   0162A4  24F3               	addwf	243,w,c
 28623   0162A6  6ED9               	movwf	fsr2l,c
 28624   0162A8  0E05               	movlw	high _consumerDiagnostics
 28625   0162AA  20F4               	addwfc	prodh,w,c
 28626   0162AC  6EDA               	movwf	fsr2h,c
 28627   0162AE  6ADE               	clrf	postinc2,c
 28628   0162B0  6ADD               	clrf	postdec2,c
 28629                           
 28630                           ;../../VLCBlib_PIC/event_consumer_simple.c: 98:     }
 28631   0162B2  2A01               	incf	consumerPowerUp@temp^(0+1280),f,c
 28632   0162B4  0E02               	movlw	2
 28633   0162B6  6401               	cpfsgt	consumerPowerUp@temp^(0+1280),c
 28634   0162B8  D7F2               	goto	l12033
 28635                           
 28636                           ;../../VLCBlib_PIC/event_consumer_simple.c: 99:     consumerDiagnostics[0].asUint = 2;
 28637   0162BA  0E00               	movlw	0
 28638   0162BC  0105               	movlb	5	; () banked
 28639   0162BE  6FB8               	movwf	(_consumerDiagnostics+1)& (0+255),b
 28640   0162C0  0E02               	movlw	2
 28641   0162C2  6FB7               	movwf	_consumerDiagnostics& (0+255),b
 28642                           
 28643                           ; BSR set to: 5
 28644   0162C4  0012               	return		;funcret
 28645   0162C6                     __end_of_consumerPowerUp:
 28646                           	callstack 0
 28647                           
 28648 ;; *************** function _canPowerUp *****************
 28649 ;; Defined at:
 28650 ;;		line 254 in file "../../VLCBlib_PIC/can18_can_2.c"
 28651 ;; Parameters:    Size  Location     Type
 28652 ;;		None
 28653 ;; Auto vars:     Size  Location     Type
 28654 ;;  txFifoObj       3    0        PTR unsigned char 
 28655 ;;  temp            2   12[COMRAM] int 
 28656 ;; Return value:  Size  Location     Type
 28657 ;;                  1    wreg      void 
 28658 ;; Registers used:
 28659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28660 ;; Tracked objects:
 28661 ;;		On entry : 0/0
 28662 ;;		On exit  : 0/0
 28663 ;;		Unchanged: 0/0
 28664 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 28665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28666 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 28669 ;;Total ram usage:        2 bytes
 28670 ;; Hardware stack levels used: 1
 28671 ;; Hardware stack levels required when called: 3
 28672 ;; This function calls:
 28673 ;;		_CAN1_OperationModeSet
 28674 ;;		_prepareSelfEnumResponse
 28675 ;;		_readNVM
 28676 ;;		_tickGet
 28677 ;; This function is called by:
 28678 ;;		_powerUp
 28679 ;; This function uses a non-reentrant model
 28680 ;;
 28681                           
 28682                           	psect	text13
 28683   01324E                     __ptext13:
 28684                           	callstack 0
 28685   01324E                     _canPowerUp:
 28686                           	callstack 122
 28687                           
 28688                           ;../../VLCBlib_PIC/can18_can_2.c: 255:     int temp;;../../VLCBlib_PIC/can18_can_2.c: 25
      +                          6:     uint8_t* txFifoObj;;../../VLCBlib_PIC/can18_can_2.c: 259:     rxQueue.readIndex =
      +                           0;
 28689                           
 28690                           ; BSR set to: 5
 28691                           ;incstack = 0
 28692   01324E  0105               	movlb	5	; () banked
 28693   013250  6BBF               	clrf	(_rxQueue+2)& (0+255),b
 28694                           
 28695                           ;../../VLCBlib_PIC/can18_can_2.c: 260:     rxQueue.writeIndex = 0;
 28696   013252  6BC0               	clrf	(_rxQueue+3)& (0+255),b
 28697                           
 28698                           ; BSR set to: 5
 28699                           ;../../VLCBlib_PIC/can18_can_2.c: 261:     rxQueue.messages = rxBuffers;
 28700   013254  0E00               	movlw	low _rxBuffers
 28701   013256  6FBD               	movwf	_rxQueue& (0+255),b
 28702   013258  0E08               	movlw	high _rxBuffers
 28703   01325A  6FBE               	movwf	(_rxQueue+1)& (0+255),b
 28704                           
 28705                           ; BSR set to: 5
 28706                           ;../../VLCBlib_PIC/can18_can_2.c: 262:     rxQueue.size = 8;
 28707   01325C  0E08               	movlw	8
 28708   01325E  6FC1               	movwf	(_rxQueue+4)& (0+255),b
 28709                           
 28710                           ; BSR set to: 5
 28711                           ;../../VLCBlib_PIC/can18_can_2.c: 264:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
 28712   013260  0EFE               	movlw	254
 28713   013262  6E07               	movwf	readNVM@index^(0+1280),c
 28714   013264  0E03               	movlw	3
 28715   013266  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 28716   013268  0E00               	movlw	0
 28717   01326A  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 28718   01326C  0E00               	movlw	0
 28719   01326E  EC6C  F0AB         	call	_readNVM
 28720   013272  C507  F50D         	movff	?_readNVM,canPowerUp@temp
 28721   013276  C508  F50E         	movff	?_readNVM+1,canPowerUp@temp+1
 28722                           
 28723                           ;../../VLCBlib_PIC/can18_can_2.c: 265:     if (temp < 0) {
 28724   01327A  AE0E               	btfss	(canPowerUp@temp+1)^(0+1280),7,c
 28725   01327C  D003               	goto	l826
 28726                           
 28727                           ;../../VLCBlib_PIC/can18_can_2.c: 267:         canId = 0;
 28728   01327E  0105               	movlb	5	; () banked
 28729   013280  6B96               	clrf	_canId& (0+255),b
 28730                           
 28731                           ;../../VLCBlib_PIC/can18_can_2.c: 268:     } else {
 28732   013282  D002               	goto	l11839
 28733   013284                     l826:
 28734                           
 28735                           ;../../VLCBlib_PIC/can18_can_2.c: 269:         canId = (uint8_t)temp;
 28736   013284  C50D  F596         	movff	canPowerUp@temp,_canId
 28737   013288                     l11839:
 28738                           
 28739                           ;../../VLCBlib_PIC/can18_can_2.c: 273:     for (temp=1; temp<18; temp++) {
 28740   013288  0E00               	movlw	0
 28741   01328A  6E0E               	movwf	(canPowerUp@temp+1)^(0+1280),c
 28742   01328C  0E01               	movlw	1
 28743   01328E  6E0D               	movwf	canPowerUp@temp^(0+1280),c
 28744   013290                     l11845:
 28745                           
 28746                           ;../../VLCBlib_PIC/can18_can_2.c: 274:         canDiagnostics[temp].asUint = 0;
 28747   013290  90D8               	bcf	status,0,c
 28748   013292  340D               	rlcf	canPowerUp@temp^(0+1280),w,c
 28749   013294  6ED9               	movwf	fsr2l,c
 28750   013296  340E               	rlcf	(canPowerUp@temp+1)^(0+1280),w,c
 28751   013298  6EDA               	movwf	fsr2h,c
 28752   01329A  0EA6               	movlw	low _canDiagnostics
 28753   01329C  26D9               	addwf	fsr2l,f,c
 28754   01329E  0E06               	movlw	high _canDiagnostics
 28755   0132A0  22DA               	addwfc	fsr2h,f,c
 28756   0132A2  6ADE               	clrf	postinc2,c
 28757   0132A4  6ADD               	clrf	postdec2,c
 28758                           
 28759                           ;../../VLCBlib_PIC/can18_can_2.c: 275:     }
 28760   0132A6  4A0D               	infsnz	canPowerUp@temp^(0+1280),f,c
 28761   0132A8  2A0E               	incf	(canPowerUp@temp+1)^(0+1280),f,c
 28762   0132AA  BE0E               	btfsc	(canPowerUp@temp+1)^(0+1280),7,c
 28763   0132AC  D7F1               	goto	l11845
 28764   0132AE  500E               	movf	(canPowerUp@temp+1)^(0+1280),w,c
 28765   0132B0  E104               	bnz	u10170
 28766   0132B2  0E12               	movlw	18
 28767   0132B4  5C0D               	subwf	canPowerUp@temp^(0+1280),w,c
 28768   0132B6  A0D8               	btfss	status,0,c
 28769   0132B8  D7EB               	goto	l11845
 28770   0132BA                     u10170:
 28771                           
 28772                           ;../../VLCBlib_PIC/can18_can_2.c: 276:     canDiagnostics[0x00].asUint = 18;
 28773   0132BA  0E00               	movlw	0
 28774   0132BC  0106               	movlb	6	; () banked
 28775   0132BE  6FA7               	movwf	(_canDiagnostics+1)& (0+255),b
 28776   0132C0  0E12               	movlw	18
 28777   0132C2  6FA6               	movwf	_canDiagnostics& (0+255),b
 28778                           
 28779                           ; BSR set to: 6
 28780                           ;../../VLCBlib_PIC/can18_can_2.c: 279:     canTransmitFailed=0;
 28781   0132C4  0105               	movlb	5	; () banked
 28782   0132C6  6B95               	clrf	_canTransmitFailed& (0+255),b
 28783                           
 28784                           ;../../VLCBlib_PIC/can18_can_2.c: 282:     RB2PPS = 0x46;
 28785   0132C8  0E46               	movlw	70
 28786   0132CA  0102               	movlb	2	; () banked
 28787   0132CC  6F0B               	movwf	11,b	;volatile
 28788                           
 28789                           ;../../VLCBlib_PIC/can18_can_2.c: 283:     CANRXPPS = 013 ;
 28790   0132CE  0E0B               	movlw	11
 28791   0132D0  6F3D               	movwf	61,b	;volatile
 28792                           
 28793                           ; BSR set to: 2
 28794                           ;../../VLCBlib_PIC/can18_can_2.c: 284:     TRISBbits.TRISB2 = 0;
 28795   0132D2  94C7               	bcf	199,2,c	;volatile
 28796                           
 28797                           ; BSR set to: 2
 28798                           ;../../VLCBlib_PIC/can18_can_2.c: 285:     TRISBbits.TRISB3 = 1;
 28799   0132D4  86C7               	bsf	199,3,c	;volatile
 28800                           
 28801                           ; BSR set to: 2
 28802                           ;../../VLCBlib_PIC/can18_can_2.c: 286:     IPR5 = 0;
 28803   0132D6  0103               	movlb	3	; () banked
 28804   0132D8  6B67               	clrf	103,b	;volatile
 28805                           
 28806                           ; BSR set to: 3
 28807                           ;../../VLCBlib_PIC/can18_can_2.c: 288:     C1CONHbits.ON = 1;
 28808   0132DA  0101               	movlb	1	; () banked
 28809   0132DC  8F01               	bsf	1,7,b	;volatile
 28810                           
 28811                           ; BSR set to: 1
 28812                           ;../../VLCBlib_PIC/can18_can_2.c: 291:     if (CAN_OP_MODE_REQUEST_SUCCESS == CAN1_Opera
      +                          tionModeSet(CAN_CONFIGURATION_MODE)) {
 28813   0132DE  0E04               	movlw	4
 28814   0132E0  EC5A  F0AE         	call	_CAN1_OperationModeSet
 28815   0132E4  0900               	iorlw	0
 28816   0132E6  A4D8               	btfss	status,2,c
 28817   0132E8  D043               	goto	l11949
 28818                           
 28819                           ;../../VLCBlib_PIC/can18_can_2.c: 295:         C1FIFOBA = 0x3BB0;
 28820   0132EA  0EB0               	movlw	176
 28821   0132EC  0101               	movlb	1	; () banked
 28822   0132EE  6F4C               	movwf	76,b	;volatile
 28823   0132F0  0E3B               	movlw	59
 28824   0132F2  6F4D               	movwf	77,b	;volatile
 28825   0132F4  0E00               	movlw	0
 28826   0132F6  6F4E               	movwf	78,b	;volatile
 28827   0132F8  0E00               	movlw	0
 28828   0132FA  6F4F               	movwf	79,b	;volatile
 28829                           
 28830                           ; BSR set to: 1
 28831                           ;../../VLCBlib_PIC/can18_can_2.c: 297:         C1CONL = 0x00;
 28832   0132FC  6B00               	clrf	0,b	;volatile
 28833                           
 28834                           ;../../VLCBlib_PIC/can18_can_2.c: 298:         C1CONH = 0x87;
 28835   0132FE  0E87               	movlw	135
 28836   013300  6F01               	movwf	1,b	;volatile
 28837                           
 28838                           ;../../VLCBlib_PIC/can18_can_2.c: 299:         C1CONU = 0x10;
 28839   013302  0E10               	movlw	16
 28840   013304  6F02               	movwf	2,b	;volatile
 28841                           
 28842                           ;../../VLCBlib_PIC/can18_can_2.c: 300:         C1CONT = 0x50;
 28843   013306  0E50               	movlw	80
 28844   013308  6F03               	movwf	3,b	;volatile
 28845                           
 28846                           ; BSR set to: 1
 28847                           ;../../VLCBlib_PIC/can18_can_2.c: 301:         C1NBTCFGL = 0x00;
 28848   01330A  6B04               	clrf	4,b	;volatile
 28849                           
 28850                           ;../../VLCBlib_PIC/can18_can_2.c: 302:         C1NBTCFGH = 0x03;
 28851   01330C  0E03               	movlw	3
 28852   01330E  6F05               	movwf	5,b	;volatile
 28853                           
 28854                           ;../../VLCBlib_PIC/can18_can_2.c: 303:         C1NBTCFGU = 0x02;
 28855   013310  0E02               	movlw	2
 28856   013312  6F06               	movwf	6,b	;volatile
 28857                           
 28858                           ;../../VLCBlib_PIC/can18_can_2.c: 304:         C1NBTCFGT = 0x3F;
 28859   013314  0E3F               	movlw	63
 28860   013316  6F07               	movwf	7,b	;volatile
 28861                           
 28862                           ;../../VLCBlib_PIC/can18_can_2.c: 306:         C1TXQCONL = 0x10;
 28863   013318  0E10               	movlw	16
 28864   01331A  6F50               	movwf	80,b	;volatile
 28865                           
 28866                           ;../../VLCBlib_PIC/can18_can_2.c: 307:         C1TXQCONH = 0x04;
 28867   01331C  0E04               	movlw	4
 28868   01331E  6F51               	movwf	81,b	;volatile
 28869                           
 28870                           ;../../VLCBlib_PIC/can18_can_2.c: 308:         C1TXQCONU = 0x6F;
 28871   013320  0E6F               	movlw	111
 28872   013322  6F52               	movwf	82,b	;volatile
 28873                           
 28874                           ; BSR set to: 1
 28875                           
 28876                           ; BSR set to: 1
 28877                           
 28878                           ;../../VLCBlib_PIC/can18_can_2.c: 309:         C1TXQCONT = (((8<32) ? (8/4)-2 :
 28879   013324  0E03               	movlw	3
 28880   013326  6F53               	movwf	83,b	;volatile
 28881                           
 28882                           ; BSR set to: 1
 28883                           ;../../VLCBlib_PIC/can18_can_2.c: 314:         C1FIFOCON1L = 0x80;
 28884   013328  0E80               	movlw	128
 28885   01332A  6F5C               	movwf	92,b	;volatile
 28886                           
 28887                           ; BSR set to: 1
 28888                           ;../../VLCBlib_PIC/can18_can_2.c: 315:         C1FIFOCON1H = 0x04;
 28889   01332C  0E04               	movlw	4
 28890   01332E  6F5D               	movwf	93,b	;volatile
 28891                           
 28892                           ; BSR set to: 1
 28893                           ;../../VLCBlib_PIC/can18_can_2.c: 316:         C1FIFOCON1U = 0x6F;
 28894   013330  0E6F               	movlw	111
 28895   013332  6F5E               	movwf	94,b	;volatile
 28896                           
 28897                           ; BSR set to: 1
 28898                           
 28899                           ; BSR set to: 1
 28900                           
 28901                           ;../../VLCBlib_PIC/can18_can_2.c: 317:         C1FIFOCON1T = (((8<32) ? (8/4)-2 :
 28902   013334  6B5F               	clrf	95,b	;volatile
 28903                           
 28904                           ; BSR set to: 1
 28905                           ;../../VLCBlib_PIC/can18_can_2.c: 322:         C1FIFOCON2L = 0x80;
 28906   013336  0E80               	movlw	128
 28907   013338  6F68               	movwf	104,b	;volatile
 28908                           
 28909                           ; BSR set to: 1
 28910                           ;../../VLCBlib_PIC/can18_can_2.c: 323:         C1FIFOCON2H = 0x04;
 28911   01333A  0E04               	movlw	4
 28912   01333C  6F69               	movwf	105,b	;volatile
 28913                           
 28914                           ; BSR set to: 1
 28915                           ;../../VLCBlib_PIC/can18_can_2.c: 324:         C1FIFOCON2U = 0x60;
 28916   01333E  0E60               	movlw	96
 28917   013340  6F6A               	movwf	106,b	;volatile
 28918                           
 28919                           ; BSR set to: 1
 28920                           
 28921                           ; BSR set to: 1
 28922                           
 28923                           ;../../VLCBlib_PIC/can18_can_2.c: 325:         C1FIFOCON2T = (((8<32) ? (8/4)-2 :
 28924   013342  0E1F               	movlw	31
 28925   013344  6F6B               	movwf	107,b	;volatile
 28926                           
 28927                           ; BSR set to: 1
 28928                           ;../../VLCBlib_PIC/can18_can_2.c: 330:         C1FIFOCON3L = 0x08;
 28929   013346  0E08               	movlw	8
 28930   013348  6F74               	movwf	116,b	;volatile
 28931                           
 28932                           ; BSR set to: 1
 28933                           ;../../VLCBlib_PIC/can18_can_2.c: 331:         C1FIFOCON3H = 0x04;
 28934   01334A  0E04               	movlw	4
 28935   01334C  6F75               	movwf	117,b	;volatile
 28936                           
 28937                           ; BSR set to: 1
 28938                           ;../../VLCBlib_PIC/can18_can_2.c: 332:         C1FIFOCON3U = 0x00;
 28939   01334E  6B76               	clrf	118,b	;volatile
 28940                           
 28941                           ; BSR set to: 1
 28942                           
 28943                           ; BSR set to: 1
 28944                           
 28945                           ;../../VLCBlib_PIC/can18_can_2.c: 333:         C1FIFOCON3T = (((8<32) ? (8/4)-2 :
 28946   013350  0E1F               	movlw	31
 28947   013352  6F77               	movwf	119,b	;volatile
 28948                           
 28949                           ; BSR set to: 1
 28950                           ;../../VLCBlib_PIC/can18_can_2.c: 338:         C1FLTOBJ0L = 0x00;
 28951   013354  6B8C               	clrf	140,b	;volatile
 28952                           
 28953                           ; BSR set to: 1
 28954                           ;../../VLCBlib_PIC/can18_can_2.c: 339:         C1FLTOBJ0H = 0x00;
 28955   013356  6B8D               	clrf	141,b	;volatile
 28956                           
 28957                           ; BSR set to: 1
 28958                           ;../../VLCBlib_PIC/can18_can_2.c: 340:         C1FLTOBJ0U = 0x00;
 28959   013358  6B8E               	clrf	142,b	;volatile
 28960                           
 28961                           ; BSR set to: 1
 28962                           ;../../VLCBlib_PIC/can18_can_2.c: 341:         C1FLTOBJ0T = 0x00;
 28963   01335A  6B8F               	clrf	143,b	;volatile
 28964                           
 28965                           ; BSR set to: 1
 28966                           ;../../VLCBlib_PIC/can18_can_2.c: 342:         C1MASK0L = 0x00;
 28967   01335C  6B90               	clrf	144,b	;volatile
 28968                           
 28969                           ; BSR set to: 1
 28970                           ;../../VLCBlib_PIC/can18_can_2.c: 343:         C1MASK0H = 0x00;
 28971   01335E  6B91               	clrf	145,b	;volatile
 28972                           
 28973                           ; BSR set to: 1
 28974                           ;../../VLCBlib_PIC/can18_can_2.c: 344:         C1MASK0U = 0x00;
 28975   013360  6B92               	clrf	146,b	;volatile
 28976                           
 28977                           ; BSR set to: 1
 28978                           ;../../VLCBlib_PIC/can18_can_2.c: 345:         C1MASK0T = 0x40;
 28979   013362  0E40               	movlw	64
 28980   013364  6F93               	movwf	147,b	;volatile
 28981                           
 28982                           ; BSR set to: 1
 28983                           ;../../VLCBlib_PIC/can18_can_2.c: 346:         C1FLTCON0L = 0x83;
 28984   013366  0E83               	movlw	131
 28985   013368  6F80               	movwf	128,b	;volatile
 28986                           
 28987                           ; BSR set to: 1
 28988                           ;../../VLCBlib_PIC/can18_can_2.c: 349:         (void)CAN1_OperationModeSet(CAN_NORMAL_2_
      +                          0_MODE);
 28989   01336A  0E06               	movlw	6
 28990   01336C  EC5A  F0AE         	call	_CAN1_OperationModeSet
 28991   013370                     l11949:
 28992                           
 28993                           ;../../VLCBlib_PIC/can18_can_2.c: 353:     prepareSelfEnumResponse();
 28994   013370  EC37  F0A9         	call	_prepareSelfEnumResponse	;wreg free
 28995                           
 28996                           ;../../VLCBlib_PIC/can18_can_2.c: 355:     enumerationState = NO_ENUMERATION;
 28997   013374  0105               	movlb	5	; () banked
 28998   013376  6B93               	clrf	_enumerationState& (0+255),b
 28999                           
 29000                           ; BSR set to: 5
 29001                           ;../../VLCBlib_PIC/can18_can_2.c: 356:     enumerationStartTime.val = tickGet();
 29002   013378  EC7A  F0AC         	call	_tickGet	;wreg free
 29003   01337C  C501  F564         	movff	?_tickGet,_enumerationStartTime
 29004   013380  C502  F565         	movff	?_tickGet+1,_enumerationStartTime+1
 29005   013384  C503  F566         	movff	?_tickGet+2,_enumerationStartTime+2
 29006   013388  C504  F567         	movff	?_tickGet+3,_enumerationStartTime+3
 29007                           
 29008                           ;../../VLCBlib_PIC/can18_can_2.c: 358:     IPR0bits.CANIP = 0;
 29009   01338C  0103               	movlb	3	; () banked
 29010   01338E  9D62               	bcf	98,6,b	;volatile
 29011                           
 29012                           ; BSR set to: 3
 29013                           ;../../VLCBlib_PIC/can18_can_2.c: 359:     PIR0bits.CANIF = 0;
 29014   013390  9CAE               	bcf	174,6,c	;volatile
 29015                           
 29016                           ; BSR set to: 3
 29017                           ;../../VLCBlib_PIC/can18_can_2.c: 360:     C1INTUbits.TXIE = 1;
 29018   013392  0101               	movlb	1	; () banked
 29019   013394  811E               	bsf	30,0,b	;volatile
 29020                           
 29021                           ; BSR set to: 1
 29022                           ;../../VLCBlib_PIC/can18_can_2.c: 361:     C1INTTbits.RXOVIE = 1;
 29023   013396  871F               	bsf	31,3,b	;volatile
 29024                           
 29025                           ; BSR set to: 1
 29026                           ;../../VLCBlib_PIC/can18_can_2.c: 362:     C1INTTbits.IVMIE = 1;
 29027   013398  8F1F               	bsf	31,7,b	;volatile
 29028                           
 29029                           ; BSR set to: 1
 29030                           ;../../VLCBlib_PIC/can18_can_2.c: 364:     PIE0bits.CANIE = 1;
 29031   01339A  8C9E               	bsf	158,6,c	;volatile
 29032                           
 29033                           ; BSR set to: 1
 29034   01339C  0012               	return		;funcret
 29035   01339E                     __end_of_canPowerUp:
 29036                           	callstack 0
 29037                           
 29038 ;; *************** function _bootPowerUp *****************
 29039 ;; Defined at:
 29040 ;;		line 197 in file "../../VLCBlib_PIC/boot.c"
 29041 ;; Parameters:    Size  Location     Type
 29042 ;;		None
 29043 ;; Auto vars:     Size  Location     Type
 29044 ;;  a               3   15[COMRAM] unsigned um
 29045 ;;  i               1   14[COMRAM] unsigned char 
 29046 ;;  found           1   13[COMRAM] unsigned char 
 29047 ;;  b               1   12[COMRAM] unsigned char 
 29048 ;; Return value:  Size  Location     Type
 29049 ;;                  1    wreg      void 
 29050 ;; Registers used:
 29051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29052 ;; Tracked objects:
 29053 ;;		On entry : 0/0
 29054 ;;		On exit  : 0/0
 29055 ;;		Unchanged: 0/0
 29056 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29058 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29060 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29061 ;;Total ram usage:        6 bytes
 29062 ;; Hardware stack levels used: 1
 29063 ;; Hardware stack levels required when called: 3
 29064 ;; This function calls:
 29065 ;;		_readNVM
 29066 ;; This function is called by:
 29067 ;;		_powerUp
 29068 ;; This function uses a non-reentrant model
 29069 ;;
 29070                           
 29071                           	psect	text14
 29072   014176                     __ptext14:
 29073                           	callstack 0
 29074   014176                     _bootPowerUp:
 29075                           	callstack 122
 29076                           
 29077                           ;../../VLCBlib_PIC/boot.c: 198:     uint24_t a;;../../VLCBlib_PIC/boot.c: 199:     uint8
      +                          _t i;;../../VLCBlib_PIC/boot.c: 200:     uint8_t b;;../../VLCBlib_PIC/boot.c: 201:     u
      +                          int8_t found;;../../VLCBlib_PIC/boot.c: 203:     bootloaderType = BL_TYPE_Unknown;
 29078                           
 29079                           ; BSR set to: 1
 29080                           ;incstack = 0
 29081   014176  0105               	movlb	5	; () banked
 29082   014178  6B98               	clrf	_bootloaderType& (0+255),b
 29083                           
 29084                           ;../../VLCBlib_PIC/boot.c: 204:     bootloaderVersion = 0;
 29085   01417A  6B97               	clrf	_bootloaderVersion& (0+255),b
 29086                           
 29087                           ; BSR set to: 5
 29088                           ;../../VLCBlib_PIC/boot.c: 207:     for (a=0; a<0x7FF; a++) {
 29089   01417C  0E00               	movlw	0
 29090   01417E  6E10               	movwf	bootPowerUp@a^(0+1280),c
 29091   014180  0E00               	movlw	0
 29092   014182  6E11               	movwf	(bootPowerUp@a+1)^(0+1280),c
 29093   014184  0E00               	movlw	0
 29094   014186  6E12               	movwf	(bootPowerUp@a+2)^(0+1280),c
 29095   014188                     l11797:
 29096                           
 29097                           ;../../VLCBlib_PIC/boot.c: 209:         for (i=0; i<11; i++) {
 29098   014188  6A0F               	clrf	bootPowerUp@i^(0+1280),c
 29099   01418A                     l11805:
 29100                           
 29101                           ;../../VLCBlib_PIC/boot.c: 210:             b = (uint8_t)readNVM(FLASH_NVM_TYPE, a+i);
 29102   01418A  500F               	movf	bootPowerUp@i^(0+1280),w,c
 29103   01418C  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 29104   01418E  6E07               	movwf	readNVM@index^(0+1280),c
 29105   014190  0E00               	movlw	0
 29106   014192  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 29107   014194  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 29108   014196  0E00               	movlw	0
 29109   014198  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 29110   01419A  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 29111   01419C  0E01               	movlw	1
 29112   01419E  EC6C  F0AB         	call	_readNVM
 29113   0141A2  5007               	movf	?_readNVM^(0+1280),w,c
 29114   0141A4  6E0D               	movwf	bootPowerUp@b^(0+1280),c
 29115                           
 29116                           ;../../VLCBlib_PIC/boot.c: 211:             if (b != bl_version[i]) {
 29117   0141A6  0E45               	movlw	low _bl_version
 29118   0141A8  240F               	addwf	bootPowerUp@i^(0+1280),w,c
 29119   0141AA  6EF6               	movwf	tblptrl,c
 29120   0141AC  6AF7               	clrf	tblptrh,c
 29121   0141AE  0EFF               	movlw	high _bl_version
 29122   0141B0  22F7               	addwfc	tblptrh,f,c
 29123   0141B2                     	if	1	;There are 3 active tblptr bytes
 29124   0141B2  6AF8               	clrf	tblptru,c
 29125   0141B4  0E00               	movlw	low (__pmediumconst shr (0+16))
 29126   0141B6  22F8               	addwfc	tblptru,f,c
 29127   0141B8                     	endif
 29128   0141B8  0008               	tblrd		*
 29129   0141BA  50F5               	movf	tablat,w,c
 29130   0141BC  180D               	xorwf	bootPowerUp@b^(0+1280),w,c
 29131   0141BE  B4D8               	btfsc	status,2,c
 29132   0141C0  D002               	goto	l11813
 29133                           
 29134                           ;../../VLCBlib_PIC/boot.c: 212:                 found = 0;
 29135   0141C2  6A0E               	clrf	bootPowerUp@found^(0+1280),c
 29136                           
 29137                           ;../../VLCBlib_PIC/boot.c: 213:                 break;
 29138   0141C4  D006               	goto	u10130
 29139   0141C6                     l11813:
 29140                           
 29141                           ;../../VLCBlib_PIC/boot.c: 215:                 found = 1;
 29142   0141C6  0E01               	movlw	1
 29143   0141C8  6E0E               	movwf	bootPowerUp@found^(0+1280),c
 29144                           
 29145                           ;../../VLCBlib_PIC/boot.c: 217:         }
 29146   0141CA  2A0F               	incf	bootPowerUp@i^(0+1280),f,c
 29147   0141CC  0E0A               	movlw	10
 29148   0141CE  640F               	cpfsgt	bootPowerUp@i^(0+1280),c
 29149   0141D0  D7DC               	goto	l11805
 29150   0141D2                     u10130:
 29151                           
 29152                           ;../../VLCBlib_PIC/boot.c: 218:         if (found) {
 29153   0141D2  500E               	movf	bootPowerUp@found^(0+1280),w,c
 29154   0141D4  B4D8               	btfsc	status,2,c
 29155   0141D6  D01F               	goto	l596
 29156                           
 29157                           ;../../VLCBlib_PIC/boot.c: 219:             bootloaderType = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, a+11);
 29158   0141D8  0E0B               	movlw	11
 29159   0141DA  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 29160   0141DC  6E07               	movwf	readNVM@index^(0+1280),c
 29161   0141DE  0E00               	movlw	0
 29162   0141E0  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 29163   0141E2  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 29164   0141E4  0E00               	movlw	0
 29165   0141E6  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 29166   0141E8  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 29167   0141EA  0E01               	movlw	1
 29168   0141EC  EC6C  F0AB         	call	_readNVM
 29169   0141F0  5007               	movf	?_readNVM^(0+1280),w,c
 29170   0141F2  0105               	movlb	5	; () banked
 29171   0141F4  6F98               	movwf	_bootloaderType& (0+255),b
 29172                           
 29173                           ;../../VLCBlib_PIC/boot.c: 220:             bootloaderVersion = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, a+12);
 29174   0141F6  0E0C               	movlw	12
 29175   0141F8  2410               	addwf	bootPowerUp@a^(0+1280),w,c
 29176   0141FA  6E07               	movwf	readNVM@index^(0+1280),c
 29177   0141FC  0E00               	movlw	0
 29178   0141FE  2011               	addwfc	(bootPowerUp@a+1)^(0+1280),w,c
 29179   014200  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 29180   014202  0E00               	movlw	0
 29181   014204  2012               	addwfc	(bootPowerUp@a+2)^(0+1280),w,c
 29182   014206  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 29183   014208  0E01               	movlw	1
 29184   01420A  EC6C  F0AB         	call	_readNVM
 29185   01420E  5007               	movf	?_readNVM^(0+1280),w,c
 29186   014210  0105               	movlb	5	; () banked
 29187   014212  6F97               	movwf	_bootloaderVersion& (0+255),b
 29188   014214  0012               	return	
 29189   014216                     l596:
 29190                           
 29191                           ;../../VLCBlib_PIC/boot.c: 223:     }
 29192   014216  0E01               	movlw	1
 29193   014218  2610               	addwf	bootPowerUp@a^(0+1280),f,c
 29194   01421A  0E00               	movlw	0
 29195   01421C  2211               	addwfc	(bootPowerUp@a+1)^(0+1280),f,c
 29196   01421E  0E00               	movlw	0
 29197   014220  2212               	addwfc	(bootPowerUp@a+2)^(0+1280),f,c
 29198   014222  5012               	movf	(bootPowerUp@a+2)^(0+1280),w,c
 29199   014224  E106               	bnz	u10150
 29200   014226  2810               	incf	bootPowerUp@a^(0+1280),w,c
 29201   014228  0E07               	movlw	7
 29202   01422A  5811               	subwfb	(bootPowerUp@a+1)^(0+1280),w,c
 29203   01422C  B0D8               	btfsc	status,0,c
 29204   01422E  0012               	return	
 29205   014230  D7AB               	goto	l11797
 29206   014232                     u10150:
 29207   014232  0012               	return		;funcret
 29208   014234                     __end_of_bootPowerUp:
 29209                           	callstack 0
 29210                           
 29211 ;; *************** function _teachPowerUp *****************
 29212 ;; Defined at:
 29213 ;;		line 197 in file "../../VLCBlib_PIC/event_teach_simple.c"
 29214 ;; Parameters:    Size  Location     Type
 29215 ;;		None
 29216 ;; Auto vars:     Size  Location     Type
 29217 ;;  i               1   35[COMRAM] unsigned char 
 29218 ;; Return value:  Size  Location     Type
 29219 ;;                  1    wreg      void 
 29220 ;; Registers used:
 29221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29222 ;; Tracked objects:
 29223 ;;		On entry : 0/0
 29224 ;;		On exit  : 0/0
 29225 ;;		Unchanged: 0/0
 29226 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29230 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29231 ;;Total ram usage:        1 bytes
 29232 ;; Hardware stack levels used: 1
 29233 ;; Hardware stack levels required when called: 5
 29234 ;; This function calls:
 29235 ;;		_rebuildHashtable
 29236 ;; This function is called by:
 29237 ;;		_powerUp
 29238 ;; This function uses a non-reentrant model
 29239 ;;
 29240                           
 29241                           	psect	text15
 29242   016146                     __ptext15:
 29243                           	callstack 0
 29244   016146                     _teachPowerUp:
 29245                           	callstack 120
 29246                           
 29247                           ;../../VLCBlib_PIC/event_teach_simple.c: 198:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 201:     rebuildHashtable();
 29248                           
 29249                           ;incstack = 0
 29250   016146  EC1A  F0A1         	call	_rebuildHashtable	;wreg free
 29251                           
 29252                           ;../../VLCBlib_PIC/event_teach_simple.c: 205:     for (i=1; i<= 1; i++) {
 29253   01614A  0E01               	movlw	1
 29254   01614C  6E24               	movwf	teachPowerUp@i^(0+1280),c
 29255   01614E                     l12049:
 29256                           
 29257                           ;../../VLCBlib_PIC/event_teach_simple.c: 206:         teachDiagnostics[i].asUint = 0;
 29258   01614E  5024               	movf	teachPowerUp@i^(0+1280),w,c
 29259   016150  0D02               	mullw	2
 29260   016152  0EC6               	movlw	low _teachDiagnostics
 29261   016154  24F3               	addwf	243,w,c
 29262   016156  6ED9               	movwf	fsr2l,c
 29263   016158  0E05               	movlw	high _teachDiagnostics
 29264   01615A  20F4               	addwfc	prodh,w,c
 29265   01615C  6EDA               	movwf	fsr2h,c
 29266   01615E  6ADE               	clrf	postinc2,c
 29267   016160  6ADD               	clrf	postdec2,c
 29268                           
 29269                           ;../../VLCBlib_PIC/event_teach_simple.c: 207:     }
 29270   016162  2A24               	incf	teachPowerUp@i^(0+1280),f,c
 29271   016164  0E01               	movlw	1
 29272   016166  6424               	cpfsgt	teachPowerUp@i^(0+1280),c
 29273   016168  D7F2               	goto	l12049
 29274                           
 29275                           ;../../VLCBlib_PIC/event_teach_simple.c: 208:     teachDiagnostics[0x00].asUint = 1;
 29276   01616A  0E00               	movlw	0
 29277   01616C  0105               	movlb	5	; () banked
 29278   01616E  6FC7               	movwf	(_teachDiagnostics+1)& (0+255),b
 29279   016170  0E01               	movlw	1
 29280   016172  6FC6               	movwf	_teachDiagnostics& (0+255),b
 29281                           
 29282                           ; BSR set to: 5
 29283                           ;../../VLCBlib_PIC/event_teach_simple.c: 210:     errno = 0;
 29284   016174  6B9F               	clrf	_errno& (0+255),b
 29285                           
 29286                           ; BSR set to: 5
 29287                           ;../../VLCBlib_PIC/event_teach_simple.c: 211:     mode_flags &= ~1;
 29288   016176  91A0               	bcf	_mode_flags& (0+255),0,b
 29289                           
 29290                           ; BSR set to: 5
 29291   016178  0012               	return		;funcret
 29292   01617A                     __end_of_teachPowerUp:
 29293                           	callstack 0
 29294                           
 29295 ;; *************** function _loadNvCache *****************
 29296 ;; Defined at:
 29297 ;;		line 162 in file "../../VLCBlib_PIC/nv.c"
 29298 ;; Parameters:    Size  Location     Type
 29299 ;;		None
 29300 ;; Auto vars:     Size  Location     Type
 29301 ;;  temp            2   14[COMRAM] short 
 29302 ;;  i               1   16[COMRAM] unsigned char 
 29303 ;; Return value:  Size  Location     Type
 29304 ;;                  1    wreg      void 
 29305 ;; Registers used:
 29306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29307 ;; Tracked objects:
 29308 ;;		On entry : 0/0
 29309 ;;		On exit  : 0/0
 29310 ;;		Unchanged: 0/0
 29311 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29313 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29314 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29315 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29316 ;;Total ram usage:        5 bytes
 29317 ;; Hardware stack levels used: 1
 29318 ;; Hardware stack levels required when called: 3
 29319 ;; This function calls:
 29320 ;;		_readNVM
 29321 ;; This function is called by:
 29322 ;;		_nvPowerUp
 29323 ;; This function uses a non-reentrant model
 29324 ;;
 29325                           
 29326                           	psect	text16
 29327   015C22                     __ptext16:
 29328                           	callstack 0
 29329   015C22                     _loadNvCache:
 29330                           	callstack 121
 29331                           
 29332                           ;../../VLCBlib_PIC/nv.c: 163:     uint8_t i;;../../VLCBlib_PIC/nv.c: 164:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 166:     for (i=1; i<= 67; i++) {
 29333                           
 29334                           ; BSR set to: 5
 29335                           ;incstack = 0
 29336   015C22  0E01               	movlw	1
 29337   015C24  6E11               	movwf	loadNvCache@i^(0+1280),c
 29338   015C26                     l11009:
 29339                           
 29340                           ;../../VLCBlib_PIC/nv.c: 167:         temp = readNVM(EEPROM_NVM_TYPE, 0x200 +i);
 29341   015C26  0E00               	movlw	0
 29342   015C28  2411               	addwf	loadNvCache@i^(0+1280),w,c
 29343   015C2A  6E0D               	movwf	??_loadNvCache^(0+1280),c
 29344   015C2C  6A0E               	clrf	(??_loadNvCache+1)^(0+1280),c
 29345   015C2E  0E02               	movlw	2
 29346   015C30  220E               	addwfc	(??_loadNvCache+1)^(0+1280),f,c
 29347   015C32  C50D  F507         	movff	??_loadNvCache,readNVM@index
 29348   015C36  C50E  F508         	movff	??_loadNvCache+1,readNVM@index+1
 29349   015C3A  6A09               	clrf	(readNVM@index+2)^(0+1280),c
 29350   015C3C  BE08               	btfsc	(readNVM@index+1)^(0+1280),7,c
 29351   015C3E  0609               	decf	(readNVM@index+2)^(0+1280),f,c
 29352   015C40  0E00               	movlw	0
 29353   015C42  EC6C  F0AB         	call	_readNVM
 29354   015C46  C507  F50F         	movff	?_readNVM,loadNvCache@temp
 29355   015C4A  C508  F510         	movff	?_readNVM+1,loadNvCache@temp+1
 29356                           
 29357                           ;../../VLCBlib_PIC/nv.c: 168:         if (temp < 0) {
 29358   015C4E  BE10               	btfsc	(loadNvCache@temp+1)^(0+1280),7,c
 29359   015C50  D008               	goto	l11017
 29360                           
 29361                           ;../../VLCBlib_PIC/nv.c: 171:             nvCache[i] = (uint8_t)temp;
 29362   015C52  0E00               	movlw	low _nvCache
 29363   015C54  2411               	addwf	loadNvCache@i^(0+1280),w,c
 29364   015C56  6ED9               	movwf	fsr2l,c
 29365   015C58  6ADA               	clrf	fsr2h,c
 29366   015C5A  0E07               	movlw	high _nvCache
 29367   015C5C  22DA               	addwfc	fsr2h,f,c
 29368   015C5E  C50F  F4DF         	movff	loadNvCache@temp,indf2
 29369   015C62                     l11017:
 29370                           
 29371                           ;../../VLCBlib_PIC/nv.c: 173:     }
 29372   015C62  2A11               	incf	loadNvCache@i^(0+1280),f,c
 29373   015C64  0E43               	movlw	67
 29374   015C66  6411               	cpfsgt	loadNvCache@i^(0+1280),c
 29375   015C68  D7DE               	goto	l11009
 29376   015C6A  0012               	return	
 29377   015C6C                     __end_of_loadNvCache:
 29378                           	callstack 0
 29379                           
 29380 ;; *************** function _leds_powerUp *****************
 29381 ;; Defined at:
 29382 ;;		line 77 in file "../../VLCBlib_PIC/statusLeds2.c"
 29383 ;; Parameters:    Size  Location     Type
 29384 ;;		None
 29385 ;; Auto vars:     Size  Location     Type
 29386 ;;		None
 29387 ;; Return value:  Size  Location     Type
 29388 ;;                  1    wreg      void 
 29389 ;; Registers used:
 29390 ;;		wreg, status,2, status,0, cstack
 29391 ;; Tracked objects:
 29392 ;;		On entry : 0/0
 29393 ;;		On exit  : 0/0
 29394 ;;		Unchanged: 0/0
 29395 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29400 ;;Total ram usage:        0 bytes
 29401 ;; Hardware stack levels used: 1
 29402 ;; Hardware stack levels required when called: 2
 29403 ;; This function calls:
 29404 ;;		_tickGet
 29405 ;; This function is called by:
 29406 ;;		_powerUp
 29407 ;; This function uses a non-reentrant model
 29408 ;;
 29409                           
 29410                           	psect	text17
 29411   0162C6                     __ptext17:
 29412                           	callstack 0
 29413   0162C6                     _leds_powerUp:
 29414                           	callstack 123
 29415                           
 29416                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     {ANSELA=ANSELB=0; WPUA=0b00101000;TRISBbits.TR
      +                          ISB6=TRISBbits.TRISB7=0,TRISAbits.TRISA3=1;};
 29417                           
 29418                           ;incstack = 0
 29419   0162C6  0104               	movlb	4	; () banked
 29420   0162C8  6B08               	clrf	8,b	;volatile
 29421   0162CA  6B00               	clrf	0,b	;volatile
 29422                           
 29423                           ; BSR set to: 4
 29424   0162CC  0E28               	movlw	40
 29425   0162CE  6F01               	movwf	1,b	;volatile
 29426                           
 29427                           ; BSR set to: 4
 29428   0162D0  9EC7               	bcf	199,7,c	;volatile
 29429   0162D2  9CC7               	bcf	199,6,c	;volatile
 29430                           
 29431                           ; BSR set to: 4
 29432   0162D4  86C6               	bsf	198,3,c	;volatile
 29433                           
 29434                           ; BSR set to: 4
 29435                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[0] = 0;
 29436   0162D6  0105               	movlb	5	; () banked
 29437   0162D8  6B7A               	clrf	_flashCounter& (0+255),b
 29438                           
 29439                           ; BSR set to: 5
 29440                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     flashCounter[1] = 0;
 29441   0162DA  6B7B               	clrf	(_flashCounter+1)& (0+255),b
 29442                           
 29443                           ; BSR set to: 5
 29444                           ;../../VLCBlib_PIC/statusLeds2.c: 82:     ledTimer.val = tickGet();
 29445   0162DC  EC7A  F0AC         	call	_tickGet	;wreg free
 29446   0162E0  C501  F68E         	movff	?_tickGet,_ledTimer
 29447   0162E4  C502  F68F         	movff	?_tickGet+1,_ledTimer+1
 29448   0162E8  C503  F690         	movff	?_tickGet+2,_ledTimer+2
 29449   0162EC  C504  F691         	movff	?_tickGet+3,_ledTimer+3
 29450   0162F0  0012               	return		;funcret
 29451   0162F2                     __end_of_leds_powerUp:
 29452                           	callstack 0
 29453                           
 29454 ;; *************** function _initTimedResponse *****************
 29455 ;; Defined at:
 29456 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
 29457 ;; Parameters:    Size  Location     Type
 29458 ;;		None
 29459 ;; Auto vars:     Size  Location     Type
 29460 ;;		None
 29461 ;; Return value:  Size  Location     Type
 29462 ;;                  1    wreg      void 
 29463 ;; Registers used:
 29464 ;;		None
 29465 ;; Tracked objects:
 29466 ;;		On entry : 0/0
 29467 ;;		On exit  : 0/0
 29468 ;;		Unchanged: 0/0
 29469 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29474 ;;Total ram usage:        0 bytes
 29475 ;; Hardware stack levels used: 1
 29476 ;; Hardware stack levels required when called: 1
 29477 ;; This function calls:
 29478 ;;		Nothing
 29479 ;; This function is called by:
 29480 ;;		_powerUp
 29481 ;; This function uses a non-reentrant model
 29482 ;;
 29483                           
 29484                           	psect	text18
 29485   0167A2                     __ptext18:
 29486                           	callstack 0
 29487   0167A2                     _initTimedResponse:
 29488                           	callstack 124
 29489                           
 29490                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
 29491                           
 29492                           ;incstack = 0
 29493   0167A2  0105               	movlb	5	; () banked
 29494   0167A4  6986               	setf	_timedResponseType& (0+255),b
 29495                           
 29496                           ; BSR set to: 5
 29497   0167A6  0012               	return		;funcret
 29498   0167A8                     __end_of_initTimedResponse:
 29499                           	callstack 0
 29500                           
 29501 ;; *************** function _initTicker *****************
 29502 ;; Defined at:
 29503 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
 29504 ;; Parameters:    Size  Location     Type
 29505 ;;  priority        1    wreg     unsigned char 
 29506 ;; Auto vars:     Size  Location     Type
 29507 ;;  priority        1    1[COMRAM] unsigned char 
 29508 ;;  i               1    3[COMRAM] unsigned char 
 29509 ;;  divider         1    2[COMRAM] unsigned char 
 29510 ;; Return value:  Size  Location     Type
 29511 ;;                  1    wreg      void 
 29512 ;; Registers used:
 29513 ;;		wreg, status,2, status,0
 29514 ;; Tracked objects:
 29515 ;;		On entry : 0/0
 29516 ;;		On exit  : 0/0
 29517 ;;		Unchanged: 0/0
 29518 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29520 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29522 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29523 ;;Total ram usage:        4 bytes
 29524 ;; Hardware stack levels used: 1
 29525 ;; Hardware stack levels required when called: 1
 29526 ;; This function calls:
 29527 ;;		Nothing
 29528 ;; This function is called by:
 29529 ;;		_powerUp
 29530 ;; This function uses a non-reentrant model
 29531 ;;
 29532                           
 29533                           	psect	text19
 29534   015A96                     __ptext19:
 29535                           	callstack 0
 29536   015A96                     _initTicker:
 29537                           	callstack 124
 29538                           
 29539                           ; BSR set to: 5
 29540                           ;incstack = 0
 29541                           ;initTicker@priority stored from wreg
 29542   015A96  6E02               	movwf	initTicker@priority^(0+1280),c
 29543                           
 29544                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
 29545   015A98  6A03               	clrf	initTicker@divider^(0+1280),c
 29546                           
 29547                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
 29548   015A9A  0E40               	movlw	64
 29549   015A9C  6E04               	movwf	initTicker@i^(0+1280),c
 29550   015A9E                     l12271:
 29551                           
 29552                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
 29553   015A9E  2A03               	incf	initTicker@divider^(0+1280),f,c
 29554   015AA0  90D8               	bcf	status,0,c
 29555   015AA2  3204               	rrcf	initTicker@i^(0+1280),f,c
 29556   015AA4  5004               	movf	initTicker@i^(0+1280),w,c
 29557   015AA6  A4D8               	btfss	status,2,c
 29558   015AA8  D7FA               	goto	l12271
 29559                           
 29560                           ;../../VLCBlib_PIC/ticktime.c: 122:     T0CON1bits.CKPS = (uint8_t)(0b00000000 | (divide
      +                          r+1));
 29561   015AAA  C503  F501         	movff	initTicker@divider,??_initTicker
 29562   015AAE  0E01               	movlw	1
 29563   015AB0  2601               	addwf	??_initTicker^(0+1280),f,c
 29564   015AB2  0103               	movlb	3	; () banked
 29565   015AB4  511B               	movf	27,w,b	;volatile
 29566   015AB6  1801               	xorwf	??_initTicker^(0+1280),w,c
 29567   015AB8  0BF0               	andlw	-16
 29568   015ABA  1801               	xorwf	??_initTicker^(0+1280),w,c
 29569   015ABC  6F1B               	movwf	27,b	;volatile
 29570                           
 29571                           ; BSR set to: 3
 29572                           ;../../VLCBlib_PIC/ticktime.c: 123:     T0CON0bits.MD16 = 1;
 29573   015ABE  891A               	bsf	26,4,b	;volatile
 29574                           
 29575                           ; BSR set to: 3
 29576                           ;../../VLCBlib_PIC/ticktime.c: 124:     T0CON1bits.CS = 2;
 29577   015AC0  511B               	movf	27,w,b	;volatile
 29578   015AC2  0B1F               	andlw	-225
 29579   015AC4  0940               	iorlw	64
 29580   015AC6  6F1B               	movwf	27,b	;volatile
 29581                           
 29582                           ; BSR set to: 3
 29583                           ;../../VLCBlib_PIC/ticktime.c: 125:     TMR0H = 0;
 29584   015AC8  6B19               	clrf	25,b	;volatile
 29585                           
 29586                           ; BSR set to: 3
 29587                           ;../../VLCBlib_PIC/ticktime.c: 126:     TMR0L = 0;
 29588   015ACA  6B18               	clrf	24,b	;volatile
 29589                           
 29590                           ; BSR set to: 3
 29591                           ;../../VLCBlib_PIC/ticktime.c: 127:     TMR0IP = (__bit)priority;
 29592   015ACC  A002               	btfss	initTicker@priority^(0+1280),0,c
 29593   015ACE  D002               	goto	u10570
 29594   015AD0  8F65               	bsf	101,7,b	;volatile
 29595   015AD2  D002               	goto	u10585
 29596   015AD4                     u10570:
 29597   015AD4  0103               	movlb	3	; () banked
 29598   015AD6  9F65               	bcf	101,7,b	;volatile
 29599   015AD8                     u10585:
 29600                           
 29601                           ; BSR set to: 3
 29602                           ;../../VLCBlib_PIC/ticktime.c: 128:     TMR0IF = 0;
 29603   015AD8  9EB1               	bcf	1201,7,c	;volatile
 29604                           
 29605                           ; BSR set to: 3
 29606                           ;../../VLCBlib_PIC/ticktime.c: 129:     TMR0IE = 1;
 29607   015ADA  8EA1               	bsf	1185,7,c	;volatile
 29608                           
 29609                           ; BSR set to: 3
 29610                           ;../../VLCBlib_PIC/ticktime.c: 130:     T0CON0bits.EN = 1;
 29611   015ADC  8F1A               	bsf	26,7,b	;volatile
 29612                           
 29613                           ; BSR set to: 3
 29614                           ;../../VLCBlib_PIC/ticktime.c: 132:     timerExtension1 = 0;
 29615   015ADE  0105               	movlb	5	; () banked
 29616   015AE0  6B8A               	clrf	_timerExtension1& (0+255),b	;volatile
 29617                           
 29618                           ; BSR set to: 5
 29619                           ;../../VLCBlib_PIC/ticktime.c: 133:     timerExtension2 = 0;
 29620   015AE2  6B89               	clrf	_timerExtension2& (0+255),b	;volatile
 29621                           
 29622                           ; BSR set to: 5
 29623   015AE4  0012               	return		;funcret
 29624   015AE6                     __end_of_initTicker:
 29625                           	callstack 0
 29626                           
 29627 ;; *************** function _CAN1_OperationModeSet *****************
 29628 ;; Defined at:
 29629 ;;		line 919 in file "../../VLCBlib_PIC/can18_can_2.c"
 29630 ;; Parameters:    Size  Location     Type
 29631 ;;  requestMode     1    wreg     const enum E23640
 29632 ;; Auto vars:     Size  Location     Type
 29633 ;;  requestMode     1    1[COMRAM] const enum E23640
 29634 ;;  status          1    0[COMRAM] enum E23649
 29635 ;; Return value:  Size  Location     Type
 29636 ;;                  1    wreg      enum E23649
 29637 ;; Registers used:
 29638 ;;		wreg, status,2, status,0, cstack
 29639 ;; Tracked objects:
 29640 ;;		On entry : 0/0
 29641 ;;		On exit  : 0/0
 29642 ;;		Unchanged: 0/0
 29643 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29645 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29647 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29648 ;;Total ram usage:        2 bytes
 29649 ;; Hardware stack levels used: 1
 29650 ;; Hardware stack levels required when called: 2
 29651 ;; This function calls:
 29652 ;;		_CAN1_OperationModeGet
 29653 ;; This function is called by:
 29654 ;;		_canPowerUp
 29655 ;; This function uses a non-reentrant model
 29656 ;;
 29657                           
 29658                           	psect	text20
 29659   015CB4                     __ptext20:
 29660                           	callstack 0
 29661   015CB4                     _CAN1_OperationModeSet:
 29662                           	callstack 122
 29663                           
 29664                           ; BSR set to: 5
 29665                           ;incstack = 0
 29666                           ;CAN1_OperationModeSet@requestMode stored from wreg
 29667   015CB4  6E02               	movwf	CAN1_OperationModeSet@requestMode^(0+1280),c
 29668                           
 29669                           ;../../VLCBlib_PIC/can18_can_2.c: 919: enum CAN_OP_MODE_STATUS CAN1_OperationModeSet(con
      +                          st enum CAN_OP_MODES requestMode);../../VLCBlib_PIC/can18_can_2.c: 920: {;../../VLCBlib_
      +                          PIC/can18_can_2.c: 921:     enum CAN_OP_MODE_STATUS status = CAN_OP_MODE_REQUEST_SUCCESS
      +                          ;
 29670   015CB6  6A01               	clrf	CAN1_OperationModeSet@status^(0+1280),c
 29671                           
 29672                           ;../../VLCBlib_PIC/can18_can_2.c: 923:     if ((CAN1_OperationModeGet() == CAN_CONFIGURA
      +                          TION_MODE)
 29673   015CB8  ECBC  F0B3         	call	_CAN1_OperationModeGet	;wreg free
 29674   015CBC  0A04               	xorlw	4
 29675   015CBE  B4D8               	btfsc	status,2,c
 29676   015CC0  D007               	goto	u7910
 29677   015CC2  0402               	decf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 29678   015CC4  B4D8               	btfsc	status,2,c
 29679   015CC6  D004               	goto	u7910
 29680   015CC8  0E04               	movlw	4
 29681   015CCA  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 29682   015CCC  A4D8               	btfss	status,2,c
 29683   015CCE  D012               	goto	l10007
 29684   015CD0                     u7910:
 29685                           
 29686                           ;../../VLCBlib_PIC/can18_can_2.c: 926:     {;../../VLCBlib_PIC/can18_can_2.c: 927:      
      +                             C1CONTbits.REQOP = (unsigned char)requestMode;
 29687   015CD0  0101               	movlb	1	; () banked
 29688   015CD2  5103               	movf	3,w,b	;volatile
 29689   015CD4  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 29690   015CD6  0BF8               	andlw	-8
 29691   015CD8  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 29692   015CDA  6F03               	movwf	3,b	;volatile
 29693                           
 29694                           ;../../VLCBlib_PIC/can18_can_2.c: 929:         while (C1CONUbits.OPMOD != requestMode)
 29695   015CDC  D004               	goto	l10005
 29696   015CDE                     l1010:
 29697                           
 29698                           ; BSR set to: 1
 29699                           ;../../VLCBlib_PIC/can18_can_2.c: 930:         {;../../VLCBlib_PIC/can18_can_2.c: 932:  
      +                                     if (C1INTHbits.SERRIF == 1)
 29700   015CDE  A91D               	btfss	29,4,b	;volatile
 29701   015CE0  D002               	goto	l10005
 29702                           
 29703                           ; BSR set to: 1
 29704                           ;../../VLCBlib_PIC/can18_can_2.c: 933:             {;../../VLCBlib_PIC/can18_can_2.c: 93
      +                          4:                 status = CAN_OP_MODE_SYS_ERROR_OCCURED;
 29705   015CE2  0E02               	movlw	2
 29706   015CE4  D008               	goto	L1
 29707   015CE6                     l10005:
 29708                           
 29709                           ; BSR set to: 1
 29710                           ;../../VLCBlib_PIC/can18_can_2.c: 929:         while (C1CONUbits.OPMOD != requestMode)
 29711   015CE6  3902               	swapf	2,w,b	;volatile
 29712   015CE8  32E8               	rrcf	wreg,f,c
 29713   015CEA  0B07               	andlw	7
 29714   015CEC  1802               	xorwf	CAN1_OperationModeSet@requestMode^(0+1280),w,c
 29715   015CEE  B4D8               	btfsc	status,2,c
 29716   015CF0  D003               	goto	l1013
 29717   015CF2  D7F5               	goto	l1010
 29718   015CF4                     l10007:
 29719                           
 29720                           ;../../VLCBlib_PIC/can18_can_2.c: 940:     {;../../VLCBlib_PIC/can18_can_2.c: 941:      
      +                             status = CAN_OP_MODE_REQUEST_FAIL;
 29721   015CF4  0E01               	movlw	1
 29722   015CF6                     L1:
 29723   015CF6  6E01               	movwf	CAN1_OperationModeSet@status^(0+1280),c
 29724   015CF8                     l1013:
 29725                           
 29726                           ;../../VLCBlib_PIC/can18_can_2.c: 944:     return status;
 29727   015CF8  5001               	movf	CAN1_OperationModeSet@status^(0+1280),w,c
 29728   015CFA  0012               	return		;funcret
 29729   015CFC                     __end_of_CAN1_OperationModeSet:
 29730                           	callstack 0
 29731                           
 29732 ;; *************** function _CAN1_OperationModeGet *****************
 29733 ;; Defined at:
 29734 ;;		line 952 in file "../../VLCBlib_PIC/can18_can_2.c"
 29735 ;; Parameters:    Size  Location     Type
 29736 ;;		None
 29737 ;; Auto vars:     Size  Location     Type
 29738 ;;		None
 29739 ;; Return value:  Size  Location     Type
 29740 ;;                  1    wreg      enum E23640
 29741 ;; Registers used:
 29742 ;;		wreg, status,2, status,0
 29743 ;; Tracked objects:
 29744 ;;		On entry : 0/0
 29745 ;;		On exit  : 0/0
 29746 ;;		Unchanged: 0/0
 29747 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29752 ;;Total ram usage:        0 bytes
 29753 ;; Hardware stack levels used: 1
 29754 ;; Hardware stack levels required when called: 1
 29755 ;; This function calls:
 29756 ;;		Nothing
 29757 ;; This function is called by:
 29758 ;;		_CAN1_OperationModeSet
 29759 ;; This function uses a non-reentrant model
 29760 ;;
 29761                           
 29762                           	psect	text21
 29763   016778                     __ptext21:
 29764                           	callstack 0
 29765   016778                     _CAN1_OperationModeGet:
 29766                           	callstack 122
 29767                           
 29768                           ;../../VLCBlib_PIC/can18_can_2.c: 954:     return C1CONUbits.OPMOD;
 29769                           
 29770                           ;incstack = 0
 29771   016778  0101               	movlb	1	; () banked
 29772   01677A  3902               	swapf	2,w,b	;volatile
 29773   01677C  32E8               	rrcf	wreg,f,c
 29774   01677E  0B07               	andlw	7
 29775                           
 29776                           ; BSR set to: 1
 29777   016780  0012               	return		;funcret
 29778   016782                     __end_of_CAN1_OperationModeGet:
 29779                           	callstack 0
 29780                           
 29781 ;; *************** function _poll *****************
 29782 ;; Defined at:
 29783 ;;		line 1005 in file "../../VLCBlib_PIC/vlcb.c"
 29784 ;; Parameters:    Size  Location     Type
 29785 ;;		None
 29786 ;; Auto vars:     Size  Location     Type
 29787 ;;  m               9   38[BANK5 ] struct Message
 29788 ;;  i               1   37[BANK5 ] unsigned char 
 29789 ;;  handled         1   36[BANK5 ] enum E23340
 29790 ;; Return value:  Size  Location     Type
 29791 ;;                  1    wreg      void 
 29792 ;; Registers used:
 29793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29794 ;; Tracked objects:
 29795 ;;		On entry : 0/0
 29796 ;;		On exit  : 0/0
 29797 ;;		Unchanged: 0/0
 29798 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 29799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29800 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29801 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29802 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 29803 ;;Total ram usage:       15 bytes
 29804 ;; Hardware stack levels used: 1
 29805 ;; Hardware stack levels required when called: 12
 29806 ;; This function calls:
 29807 ;;		NULL
 29808 ;;		_APP_postProcessMessage
 29809 ;;		_APP_preProcessMessage
 29810 ;;		___lmul
 29811 ;;		_bootProcessMessage
 29812 ;;		_canPoll
 29813 ;;		_canProcessMessage
 29814 ;;		_canReceiveMessage
 29815 ;;		_consumerProcessMessage
 29816 ;;		_flushFlashBlock
 29817 ;;		_leds_poll
 29818 ;;		_mnsPoll
 29819 ;;		_mnsProcessMessage
 29820 ;;		_nvProcessMessage
 29821 ;;		_pollTimedResponse
 29822 ;;		_producerProcessMessage
 29823 ;;		_showStatus
 29824 ;;		_teachProcessMessage
 29825 ;;		_tickGet
 29826 ;; This function is called by:
 29827 ;;		_main
 29828 ;; This function uses a non-reentrant model
 29829 ;;
 29830                           
 29831                           	psect	text22
 29832   011878                     __ptext22:
 29833                           	callstack 0
 29834   011878                     _poll:
 29835                           	callstack 114
 29836                           
 29837                           ;../../VLCBlib_PIC/vlcb.c: 1006:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1007:     Mess
      +                          age m;;../../VLCBlib_PIC/vlcb.c: 1008:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 
      +                          1011:     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000
      +                          )) {
 29838                           
 29839                           ; BSR set to: 1
 29840                           ;incstack = 0
 29841   011878  EC7A  F0AC         	call	_tickGet	;wreg free
 29842   01187C  0106               	movlb	6	; () banked
 29843   01187E  518A               	movf	_timedResponseTime& (0+255),w,b
 29844   011880  5C01               	subwf	?_tickGet^(0+1280),w,c
 29845   011882  0105               	movlb	5	; () banked
 29846   011884  6FEA               	movwf	??_poll& (0+255),b
 29847   011886  0106               	movlb	6	; () banked
 29848   011888  518B               	movf	(_timedResponseTime+1)& (0+255),w,b
 29849   01188A  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 29850   01188C  0105               	movlb	5	; () banked
 29851   01188E  6FEB               	movwf	(??_poll+1)& (0+255),b
 29852   011890  0106               	movlb	6	; () banked
 29853   011892  518C               	movf	(_timedResponseTime+2)& (0+255),w,b
 29854   011894  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 29855   011896  0105               	movlb	5	; () banked
 29856   011898  6FEC               	movwf	(??_poll+2)& (0+255),b
 29857   01189A  0106               	movlb	6	; () banked
 29858   01189C  518D               	movf	(_timedResponseTime+3)& (0+255),w,b
 29859   01189E  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 29860   0118A0  0105               	movlb	5	; () banked
 29861   0118A2  6FED               	movwf	(??_poll+3)& (0+255),b
 29862   0118A4  5183               	movf	_timedResponseDelay& (0+255),w,b
 29863   0118A6  6E05               	movwf	___lmul@multiplier^(0+1280),c
 29864   0118A8  6A06               	clrf	(___lmul@multiplier+1)^(0+1280),c
 29865   0118AA  6A07               	clrf	(___lmul@multiplier+2)^(0+1280),c
 29866   0118AC  6A08               	clrf	(___lmul@multiplier+3)^(0+1280),c
 29867   0118AE  0E3E               	movlw	62
 29868   0118B0  6E09               	movwf	___lmul@multiplicand^(0+1280),c
 29869   0118B2  0E00               	movlw	0
 29870   0118B4  6E0A               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 29871   0118B6  0E00               	movlw	0
 29872   0118B8  6E0B               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 29873   0118BA  0E00               	movlw	0
 29874   0118BC  6E0C               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 29875   0118BE  ECA5  F0AC         	call	___lmul	;wreg free
 29876   0118C2  0105               	movlb	5	; () banked
 29877   0118C4  51EA               	movf	??_poll& (0+255),w,b
 29878   0118C6  5C05               	subwf	?___lmul^(0+1280),w,c
 29879   0118C8  51EB               	movf	(??_poll+1)& (0+255),w,b
 29880   0118CA  5806               	subwfb	(?___lmul+1)^(0+1280),w,c
 29881   0118CC  51EC               	movf	(??_poll+2)& (0+255),w,b
 29882   0118CE  5807               	subwfb	(?___lmul+2)^(0+1280),w,c
 29883   0118D0  51ED               	movf	(??_poll+3)& (0+255),w,b
 29884   0118D2  5808               	subwfb	(?___lmul+3)^(0+1280),w,c
 29885   0118D4  B0D8               	btfsc	status,0,c
 29886   0118D6  D00C               	goto	l12531
 29887                           
 29888                           ; BSR set to: 5
 29889                           ;../../VLCBlib_PIC/vlcb.c: 1012:         pollTimedResponse();
 29890   0118D8  ECF9  F0A6         	call	_pollTimedResponse	;wreg free
 29891                           
 29892                           ;../../VLCBlib_PIC/vlcb.c: 1013:         timedResponseTime.val = tickGet();
 29893   0118DC  EC7A  F0AC         	call	_tickGet	;wreg free
 29894   0118E0  C501  F68A         	movff	?_tickGet,_timedResponseTime
 29895   0118E4  C502  F68B         	movff	?_tickGet+1,_timedResponseTime+1
 29896   0118E8  C503  F68C         	movff	?_tickGet+2,_timedResponseTime+2
 29897   0118EC  C504  F68D         	movff	?_tickGet+3,_timedResponseTime+3
 29898   0118F0                     l12531:
 29899                           
 29900                           ;../../VLCBlib_PIC/vlcb.c: 1015:     if ((tickGet() - flashFlushTime.val) > 62500) {
 29901   0118F0  EC7A  F0AC         	call	_tickGet	;wreg free
 29902   0118F4  0106               	movlb	6	; () banked
 29903   0118F6  5186               	movf	_flashFlushTime& (0+255),w,b
 29904   0118F8  5C01               	subwf	?_tickGet^(0+1280),w,c
 29905   0118FA  0105               	movlb	5	; () banked
 29906   0118FC  6FEA               	movwf	??_poll& (0+255),b
 29907   0118FE  0106               	movlb	6	; () banked
 29908   011900  5187               	movf	(_flashFlushTime+1)& (0+255),w,b
 29909   011902  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 29910   011904  0105               	movlb	5	; () banked
 29911   011906  6FEB               	movwf	(??_poll+1)& (0+255),b
 29912   011908  0106               	movlb	6	; () banked
 29913   01190A  5188               	movf	(_flashFlushTime+2)& (0+255),w,b
 29914   01190C  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 29915   01190E  0105               	movlb	5	; () banked
 29916   011910  6FEC               	movwf	(??_poll+2)& (0+255),b
 29917   011912  0106               	movlb	6	; () banked
 29918   011914  5189               	movf	(_flashFlushTime+3)& (0+255),w,b
 29919   011916  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 29920   011918  0105               	movlb	5	; () banked
 29921   01191A  6FED               	movwf	(??_poll+3)& (0+255),b
 29922   01191C  51ED               	movf	(??_poll+3)& (0+255),w,b
 29923   01191E  11EC               	iorwf	(??_poll+2)& (0+255),w,b
 29924   011920  E106               	bnz	u10920
 29925   011922  0E25               	movlw	37
 29926   011924  5DEA               	subwf	??_poll& (0+255),w,b
 29927   011926  0EF4               	movlw	244
 29928   011928  59EB               	subwfb	(??_poll+1)& (0+255),w,b
 29929   01192A  A0D8               	btfss	status,0,c
 29930   01192C  D00C               	goto	l12537
 29931   01192E                     u10920:
 29932                           
 29933                           ; BSR set to: 5
 29934                           ;../../VLCBlib_PIC/vlcb.c: 1016:         flushFlashBlock();
 29935   01192E  ECF6  F0AB         	call	_flushFlashBlock	;wreg free
 29936                           
 29937                           ;../../VLCBlib_PIC/vlcb.c: 1017:         flashFlushTime.val = tickGet();
 29938   011932  EC7A  F0AC         	call	_tickGet	;wreg free
 29939   011936  C501  F686         	movff	?_tickGet,_flashFlushTime
 29940   01193A  C502  F687         	movff	?_tickGet+1,_flashFlushTime+1
 29941   01193E  C503  F688         	movff	?_tickGet+2,_flashFlushTime+2
 29942   011942  C504  F689         	movff	?_tickGet+3,_flashFlushTime+3
 29943   011946                     l12537:
 29944                           
 29945                           ;../../VLCBlib_PIC/vlcb.c: 1020:     for (i=0; i<8; i++) {
 29946   011946  0105               	movlb	5	; () banked
 29947   011948  6BEF               	clrf	poll@i& (0+255),b
 29948   01194A                     l12543:
 29949                           
 29950                           ; BSR set to: 5
 29951                           ;../../VLCBlib_PIC/vlcb.c: 1021:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
 29952   01194A  51EF               	movf	poll@i& (0+255),w,b
 29953   01194C  0D02               	mullw	2
 29954   01194E  0E35               	movlw	low _services
 29955   011950  24F3               	addwf	243,w,c
 29956   011952  6EF6               	movwf	tblptrl,c
 29957   011954  0EFF               	movlw	high _services
 29958   011956  20F4               	addwfc	244,w,c
 29959   011958  6EF7               	movwf	tblptrh,c
 29960   01195A                     	if	1	;There are 3 active tblptr bytes
 29961   01195A  6AF8               	clrf	tblptru,c
 29962   01195C  0E00               	movlw	low (__pmediumconst shr (0+16))
 29963   01195E  22F8               	addwfc	tblptru,f,c
 29964   011960                     	endif
 29965   011960  0009               	tblrd		*+
 29966   011962  50F5               	movf	tablat,w,c
 29967   011964  0009               	tblrd		*+
 29968   011966  10F5               	iorwf	tablat,w,c
 29969   011968  B4D8               	btfsc	status,2,c
 29970   01196A  D04D               	goto	u10959
 29971                           
 29972                           ; BSR set to: 5
 29973   01196C  51EF               	movf	poll@i& (0+255),w,b
 29974   01196E  0D02               	mullw	2
 29975   011970  0E35               	movlw	low _services
 29976   011972  24F3               	addwf	243,w,c
 29977   011974  6EF6               	movwf	tblptrl,c
 29978   011976  0EFF               	movlw	high _services
 29979   011978  20F4               	addwfc	244,w,c
 29980   01197A  6EF7               	movwf	tblptrh,c
 29981   01197C                     	if	1	;There are 3 active tblptr bytes
 29982   01197C  6AF8               	clrf	tblptru,c
 29983   01197E  0E00               	movlw	low (__pmediumconst shr (0+16))
 29984   011980  22F8               	addwfc	tblptru,f,c
 29985   011982                     	endif
 29986   011982  0009               	tblrd		*+
 29987   011984  C4F5 F5EA          	movff	tablat,??_poll
 29988   011988  0009               	tblrd		*+
 29989   01198A  C4F5 F5EB          	movff	tablat,??_poll+1
 29990   01198E  0E0B               	movlw	11
 29991   011990  27EA               	addwf	??_poll& (0+255),f,b
 29992   011992  0E00               	movlw	0
 29993   011994  23EB               	addwfc	(??_poll+1)& (0+255),f,b
 29994   011996  C5EA  F4F6         	movff	??_poll,tblptrl
 29995   01199A  C5EB  F4F7         	movff	??_poll+1,tblptrh
 29996   01199E                     	if	0	;tblptru may be non-zero
 29997   01199E                     	endif
 29998   01199E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29999   01199E  0E00               	movlw	low (__pmediumconst shr (0+16))
 30000   0119A0  6EF8               	movwf	tblptru,c
 30001   0119A2                     	endif
 30002   0119A2  0009               	tblrd		*+
 30003   0119A4  50F5               	movf	tablat,w,c
 30004   0119A6  0009               	tblrd		*+
 30005   0119A8  10F5               	iorwf	tablat,w,c
 30006   0119AA  0009               	tblrd		*+
 30007   0119AC  10F5               	iorwf	tablat,w,c
 30008   0119AE  B4D8               	btfsc	status,2,c
 30009   0119B0  D02A               	goto	u10959
 30010                           
 30011                           ; BSR set to: 5
 30012                           ;../../VLCBlib_PIC/vlcb.c: 1022:             services[i]->poll();
 30013   0119B2  51EF               	movf	poll@i& (0+255),w,b
 30014   0119B4  0D02               	mullw	2
 30015   0119B6  0E35               	movlw	low _services
 30016   0119B8  24F3               	addwf	243,w,c
 30017   0119BA  6EF6               	movwf	tblptrl,c
 30018   0119BC  0EFF               	movlw	high _services
 30019   0119BE  20F4               	addwfc	244,w,c
 30020   0119C0  6EF7               	movwf	tblptrh,c
 30021   0119C2                     	if	1	;There are 3 active tblptr bytes
 30022   0119C2  6AF8               	clrf	tblptru,c
 30023   0119C4  0E00               	movlw	low (__pmediumconst shr (0+16))
 30024   0119C6  22F8               	addwfc	tblptru,f,c
 30025   0119C8                     	endif
 30026   0119C8  0009               	tblrd		*+
 30027   0119CA  C4F5 F5EA          	movff	tablat,??_poll
 30028   0119CE  0009               	tblrd		*+
 30029   0119D0  C4F5 F5EB          	movff	tablat,??_poll+1
 30030   0119D4  0E0B               	movlw	11
 30031   0119D6  27EA               	addwf	??_poll& (0+255),f,b
 30032   0119D8  0E00               	movlw	0
 30033   0119DA  23EB               	addwfc	(??_poll+1)& (0+255),f,b
 30034   0119DC  C5EA  F4F6         	movff	??_poll,tblptrl
 30035   0119E0  C5EB  F4F7         	movff	??_poll+1,tblptrh
 30036   0119E4                     	if	0	;tblptru may be non-zero
 30037   0119E4                     	endif
 30038   0119E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30039   0119E4  0E00               	movlw	low (__pmediumconst shr (0+16))
 30040   0119E6  6EF8               	movwf	tblptru,c
 30041   0119E8                     	endif
 30042   0119E8  D801               	call	u10958
 30043   0119EA  D00D               	goto	u10959
 30044   0119EC                     u10958:
 30045   0119EC  0005               	push	
 30046   0119EE  6EFA               	movwf	pclath,c
 30047   0119F0  0009               	tblrd		*+
 30048   0119F2  50F5               	movf	tablat,w,c
 30049   0119F4  6EFD               	movwf	tosl,c
 30050   0119F6  0009               	tblrd		*+
 30051   0119F8  50F5               	movf	tablat,w,c
 30052   0119FA  6EFE               	movwf	tosh,c
 30053   0119FC  0009               	tblrd		*+
 30054   0119FE  50F5               	movf	tablat,w,c
 30055   011A00  6EFF               	movwf	tosu,c
 30056   011A02  50FA               	movf	pclath,w,c
 30057   011A04  0012               	return		;indir
 30058   011A06                     u10959:
 30059                           
 30060                           ;../../VLCBlib_PIC/vlcb.c: 1024:     }
 30061   011A06  0105               	movlb	5	; () banked
 30062   011A08  2BEF               	incf	poll@i& (0+255),f,b
 30063                           
 30064                           ; BSR set to: 5
 30065   011A0A  0E07               	movlw	7
 30066   011A0C  65EF               	cpfsgt	poll@i& (0+255),b
 30067   011A0E  D79D               	goto	l12543
 30068                           
 30069                           ; BSR set to: 5
 30070                           ;../../VLCBlib_PIC/vlcb.c: 1026:     leds_poll();
 30071   011A10  EC8D  F090         	call	_leds_poll	;wreg free
 30072                           
 30073                           ;../../VLCBlib_PIC/vlcb.c: 1029:     handled = NOT_PROCESSED;
 30074   011A14  0105               	movlb	5	; () banked
 30075   011A16  6BEE               	clrf	poll@handled& (0+255),b
 30076                           
 30077                           ; BSR set to: 5
 30078                           ;../../VLCBlib_PIC/vlcb.c: 1030:     if (transport != ((void*)0)) {
 30079   011A18  5180               	movf	_transport& (0+255),w,b
 30080   011A1A  1181               	iorwf	(_transport+1)& (0+255),w,b
 30081   011A1C  B4D8               	btfsc	status,2,c
 30082   011A1E  D0C2               	goto	l2299
 30083                           
 30084                           ; BSR set to: 5
 30085                           ;../../VLCBlib_PIC/vlcb.c: 1031:         if (transport->receiveMessage != ((void*)0)) {
 30086   011A20  0E03               	movlw	3
 30087   011A22  2580               	addwf	_transport& (0+255),w,b
 30088   011A24  6FEA               	movwf	??_poll& (0+255),b
 30089   011A26  0E00               	movlw	0
 30090   011A28  2181               	addwfc	(_transport+1)& (0+255),w,b
 30091   011A2A  6FEB               	movwf	(??_poll+1)& (0+255),b
 30092   011A2C  C5EA  F4F6         	movff	??_poll,tblptrl
 30093   011A30  C5EB  F4F7         	movff	??_poll+1,tblptrh
 30094   011A34                     	if	0	;tblptru may be non-zero
 30095   011A34                     	endif
 30096   011A34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30097   011A34  0E00               	movlw	low (__pmediumconst shr (0+16))
 30098   011A36  6EF8               	movwf	tblptru,c
 30099   011A38                     	endif
 30100   011A38  0009               	tblrd		*+
 30101   011A3A  50F5               	movf	tablat,w,c
 30102   011A3C  0009               	tblrd		*+
 30103   011A3E  10F5               	iorwf	tablat,w,c
 30104   011A40  0009               	tblrd		*+
 30105   011A42  10F5               	iorwf	tablat,w,c
 30106   011A44  B4D8               	btfsc	status,2,c
 30107   011A46  D0AE               	goto	l2299
 30108                           
 30109                           ; BSR set to: 5
 30110                           ;../../VLCBlib_PIC/vlcb.c: 1032:             if (transport->receiveMessage(&m)) {
 30111   011A48  0EF0               	movlw	low poll@m
 30112   011A4A  6E10               	movwf	canReceiveMessage@m^(0+1280),c
 30113   011A4C  0E05               	movlw	high poll@m
 30114   011A4E  6E11               	movwf	(canReceiveMessage@m+1)^(0+1280),c
 30115   011A50  0E03               	movlw	3
 30116   011A52  2580               	addwf	_transport& (0+255),w,b
 30117   011A54  6FEA               	movwf	??_poll& (0+255),b
 30118   011A56  0E00               	movlw	0
 30119   011A58  2181               	addwfc	(_transport+1)& (0+255),w,b
 30120   011A5A  6FEB               	movwf	(??_poll+1)& (0+255),b
 30121   011A5C  C5EA  F4F6         	movff	??_poll,tblptrl
 30122   011A60  C5EB  F4F7         	movff	??_poll+1,tblptrh
 30123   011A64                     	if	0	;tblptru may be non-zero
 30124   011A64                     	endif
 30125   011A64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30126   011A64  0E00               	movlw	low (__pmediumconst shr (0+16))
 30127   011A66  6EF8               	movwf	tblptru,c
 30128   011A68                     	endif
 30129   011A68  D801               	call	u10998
 30130   011A6A  D00D               	goto	u10999
 30131   011A6C                     u10998:
 30132   011A6C  0005               	push	
 30133   011A6E  6EFA               	movwf	pclath,c
 30134   011A70  0009               	tblrd		*+
 30135   011A72  50F5               	movf	tablat,w,c
 30136   011A74  6EFD               	movwf	tosl,c
 30137   011A76  0009               	tblrd		*+
 30138   011A78  50F5               	movf	tablat,w,c
 30139   011A7A  6EFE               	movwf	tosh,c
 30140   011A7C  0009               	tblrd		*+
 30141   011A7E  50F5               	movf	tablat,w,c
 30142   011A80  6EFF               	movwf	tosu,c
 30143   011A82  50FA               	movf	pclath,w,c
 30144   011A84  0012               	return		;indir
 30145   011A86                     u10999:
 30146   011A86  0900               	iorlw	0
 30147   011A88  B4D8               	btfsc	status,2,c
 30148   011A8A  D08C               	goto	l2299
 30149                           
 30150                           ;../../VLCBlib_PIC/vlcb.c: 1033:                 if (m.len > 0) {
 30151   011A8C  0105               	movlb	5	; () banked
 30152   011A8E  51F0               	movf	poll@m& (0+255),w,b
 30153   011A90  B4D8               	btfsc	status,2,c
 30154   011A92  D088               	goto	l2299
 30155                           
 30156                           ; BSR set to: 5
 30157                           ;../../VLCBlib_PIC/vlcb.c: 1034:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
 30158   011A94  0E07               	movlw	7
 30159   011A96  EC9F  F09E         	call	_showStatus
 30160                           
 30161                           ;../../VLCBlib_PIC/vlcb.c: 1035:                     handled = APP_preProcessMessage(&m)
      +                          ;
 30162   011A9A  0EF0               	movlw	low poll@m
 30163   011A9C  6E5C               	movwf	APP_preProcessMessage@m^(0+1280),c
 30164   011A9E  0E05               	movlw	high poll@m
 30165   011AA0  6E5D               	movwf	(APP_preProcessMessage@m+1)^(0+1280),c
 30166   011AA2  ECD7  F093         	call	_APP_preProcessMessage	;wreg free
 30167   011AA6  0105               	movlb	5	; () banked
 30168   011AA8  6FEE               	movwf	poll@handled& (0+255),b
 30169                           
 30170                           ; BSR set to: 5
 30171                           ;../../VLCBlib_PIC/vlcb.c: 1036:                     if (handled == NOT_PROCESSED) {
 30172   011AAA  51EE               	movf	poll@handled& (0+255),w,b
 30173   011AAC  A4D8               	btfss	status,2,c
 30174   011AAE  D07A               	goto	l2299
 30175                           
 30176                           ; BSR set to: 5
 30177                           ;../../VLCBlib_PIC/vlcb.c: 1037:                         for (i=0; i<8; i++) {
 30178   011AB0  6BEF               	clrf	poll@i& (0+255),b
 30179   011AB2                     l12577:
 30180                           
 30181                           ; BSR set to: 5
 30182                           ;../../VLCBlib_PIC/vlcb.c: 1038:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
 30183   011AB2  51EF               	movf	poll@i& (0+255),w,b
 30184   011AB4  0D02               	mullw	2
 30185   011AB6  0E35               	movlw	low _services
 30186   011AB8  24F3               	addwf	243,w,c
 30187   011ABA  6EF6               	movwf	tblptrl,c
 30188   011ABC  0EFF               	movlw	high _services
 30189   011ABE  20F4               	addwfc	244,w,c
 30190   011AC0  6EF7               	movwf	tblptrh,c
 30191   011AC2                     	if	1	;There are 3 active tblptr bytes
 30192   011AC2  6AF8               	clrf	tblptru,c
 30193   011AC4  0E00               	movlw	low (__pmediumconst shr (0+16))
 30194   011AC6  22F8               	addwfc	tblptru,f,c
 30195   011AC8                     	endif
 30196   011AC8  0009               	tblrd		*+
 30197   011ACA  50F5               	movf	tablat,w,c
 30198   011ACC  0009               	tblrd		*+
 30199   011ACE  10F5               	iorwf	tablat,w,c
 30200   011AD0  B4D8               	btfsc	status,2,c
 30201   011AD2  D058               	goto	l12585
 30202                           
 30203                           ; BSR set to: 5
 30204   011AD4  51EF               	movf	poll@i& (0+255),w,b
 30205   011AD6  0D02               	mullw	2
 30206   011AD8  0E35               	movlw	low _services
 30207   011ADA  24F3               	addwf	243,w,c
 30208   011ADC  6EF6               	movwf	tblptrl,c
 30209   011ADE  0EFF               	movlw	high _services
 30210   011AE0  20F4               	addwfc	244,w,c
 30211   011AE2  6EF7               	movwf	tblptrh,c
 30212   011AE4                     	if	1	;There are 3 active tblptr bytes
 30213   011AE4  6AF8               	clrf	tblptru,c
 30214   011AE6  0E00               	movlw	low (__pmediumconst shr (0+16))
 30215   011AE8  22F8               	addwfc	tblptru,f,c
 30216   011AEA                     	endif
 30217   011AEA  0009               	tblrd		*+
 30218   011AEC  C4F5 F5EA          	movff	tablat,??_poll
 30219   011AF0  0009               	tblrd		*+
 30220   011AF2  C4F5 F5EB          	movff	tablat,??_poll+1
 30221   011AF6  0E08               	movlw	8
 30222   011AF8  27EA               	addwf	??_poll& (0+255),f,b
 30223   011AFA  0E00               	movlw	0
 30224   011AFC  23EB               	addwfc	(??_poll+1)& (0+255),f,b
 30225   011AFE  C5EA  F4F6         	movff	??_poll,tblptrl
 30226   011B02  C5EB  F4F7         	movff	??_poll+1,tblptrh
 30227   011B06                     	if	0	;tblptru may be non-zero
 30228   011B06                     	endif
 30229   011B06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30230   011B06  0E00               	movlw	low (__pmediumconst shr (0+16))
 30231   011B08  6EF8               	movwf	tblptru,c
 30232   011B0A                     	endif
 30233   011B0A  0009               	tblrd		*+
 30234   011B0C  50F5               	movf	tablat,w,c
 30235   011B0E  0009               	tblrd		*+
 30236   011B10  10F5               	iorwf	tablat,w,c
 30237   011B12  0009               	tblrd		*+
 30238   011B14  10F5               	iorwf	tablat,w,c
 30239   011B16  B4D8               	btfsc	status,2,c
 30240   011B18  D035               	goto	l12585
 30241                           
 30242                           ; BSR set to: 5
 30243                           ;../../VLCBlib_PIC/vlcb.c: 1039:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
 30244   011B1A  0EF0               	movlw	low poll@m
 30245   011B1C  6E53               	movwf	producerProcessMessage@m^(0+1280),c
 30246   011B1E  0E05               	movlw	high poll@m
 30247   011B20  6E54               	movwf	(producerProcessMessage@m+1)^(0+1280),c
 30248   011B22  51EF               	movf	poll@i& (0+255),w,b
 30249   011B24  0D02               	mullw	2
 30250   011B26  0E35               	movlw	low _services
 30251   011B28  24F3               	addwf	243,w,c
 30252   011B2A  6EF6               	movwf	tblptrl,c
 30253   011B2C  0EFF               	movlw	high _services
 30254   011B2E  20F4               	addwfc	244,w,c
 30255   011B30  6EF7               	movwf	tblptrh,c
 30256   011B32                     	if	1	;There are 3 active tblptr bytes
 30257   011B32  6AF8               	clrf	tblptru,c
 30258   011B34  0E00               	movlw	low (__pmediumconst shr (0+16))
 30259   011B36  22F8               	addwfc	tblptru,f,c
 30260   011B38                     	endif
 30261   011B38  0009               	tblrd		*+
 30262   011B3A  C4F5 F5EA          	movff	tablat,??_poll
 30263   011B3E  0009               	tblrd		*+
 30264   011B40  C4F5 F5EB          	movff	tablat,??_poll+1
 30265   011B44  0E08               	movlw	8
 30266   011B46  27EA               	addwf	??_poll& (0+255),f,b
 30267   011B48  0E00               	movlw	0
 30268   011B4A  23EB               	addwfc	(??_poll+1)& (0+255),f,b
 30269   011B4C  C5EA  F4F6         	movff	??_poll,tblptrl
 30270   011B50  C5EB  F4F7         	movff	??_poll+1,tblptrh
 30271   011B54                     	if	0	;tblptru may be non-zero
 30272   011B54                     	endif
 30273   011B54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30274   011B54  0E00               	movlw	low (__pmediumconst shr (0+16))
 30275   011B56  6EF8               	movwf	tblptru,c
 30276   011B58                     	endif
 30277   011B58  D801               	call	u11058
 30278   011B5A  D00D               	goto	u11059
 30279   011B5C                     u11058:
 30280   011B5C  0005               	push	
 30281   011B5E  6EFA               	movwf	pclath,c
 30282   011B60  0009               	tblrd		*+
 30283   011B62  50F5               	movf	tablat,w,c
 30284   011B64  6EFD               	movwf	tosl,c
 30285   011B66  0009               	tblrd		*+
 30286   011B68  50F5               	movf	tablat,w,c
 30287   011B6A  6EFE               	movwf	tosh,c
 30288   011B6C  0009               	tblrd		*+
 30289   011B6E  50F5               	movf	tablat,w,c
 30290   011B70  6EFF               	movwf	tosu,c
 30291   011B72  50FA               	movf	pclath,w,c
 30292   011B74  0012               	return		;indir
 30293   011B76                     u11059:
 30294   011B76  06E8               	decf	wreg,f,c
 30295   011B78  A4D8               	btfss	status,2,c
 30296   011B7A  D004               	goto	l12585
 30297                           
 30298                           ;../../VLCBlib_PIC/vlcb.c: 1040:                                     handled = PROCESSED
      +                          ;
 30299   011B7C  0E01               	movlw	1
 30300   011B7E  0105               	movlb	5	; () banked
 30301   011B80  6FEE               	movwf	poll@handled& (0+255),b
 30302                           
 30303                           ;../../VLCBlib_PIC/vlcb.c: 1041:                                     break;
 30304   011B82  D005               	goto	u11070
 30305   011B84                     l12585:
 30306                           
 30307                           ;../../VLCBlib_PIC/vlcb.c: 1044:                         }
 30308   011B84  0105               	movlb	5	; () banked
 30309   011B86  2BEF               	incf	poll@i& (0+255),f,b
 30310                           
 30311                           ; BSR set to: 5
 30312   011B88  0E07               	movlw	7
 30313   011B8A  65EF               	cpfsgt	poll@i& (0+255),b
 30314   011B8C  D792               	goto	l12577
 30315   011B8E                     u11070:
 30316                           
 30317                           ; BSR set to: 5
 30318                           ;../../VLCBlib_PIC/vlcb.c: 1045:                         if (handled == NOT_PROCESSED) {
 30319   011B8E  51EE               	movf	poll@handled& (0+255),w,b
 30320   011B90  A4D8               	btfss	status,2,c
 30321   011B92  D008               	goto	l2299
 30322                           
 30323                           ; BSR set to: 5
 30324                           ;../../VLCBlib_PIC/vlcb.c: 1046:                             handled = APP_postProcessMe
      +                          ssage(&m);
 30325   011B94  0EF0               	movlw	low poll@m
 30326   011B96  6E01               	movwf	APP_postProcessMessage@m^(0+1280),c
 30327   011B98  0E05               	movlw	high poll@m
 30328   011B9A  6E02               	movwf	(APP_postProcessMessage@m+1)^(0+1280),c
 30329   011B9C  ECE5  F0B3         	call	_APP_postProcessMessage	;wreg free
 30330   011BA0  0105               	movlb	5	; () banked
 30331   011BA2  6FEE               	movwf	poll@handled& (0+255),b
 30332   011BA4                     l2299:
 30333                           
 30334                           ;../../VLCBlib_PIC/vlcb.c: 1053:     if (handled) {
 30335                           
 30336                           ; BSR set to: 5
 30337   011BA4  0105               	movlb	5	; () banked
 30338   011BA6  51EE               	movf	poll@handled& (0+255),w,b
 30339   011BA8  B4D8               	btfsc	status,2,c
 30340   011BAA  0012               	return	
 30341                           
 30342                           ; BSR set to: 5
 30343                           ;../../VLCBlib_PIC/vlcb.c: 1054:         mnsDiagnostics[0x06].asUint++;
 30344   011BAC  4BAF               	infsnz	(_mnsDiagnostics+12)& (0+255),f,b
 30345   011BAE  2BB0               	incf	(_mnsDiagnostics+13)& (0+255),f,b
 30346                           
 30347                           ; BSR set to: 5
 30348                           ;../../VLCBlib_PIC/vlcb.c: 1055:         showStatus(STATUS_MESSAGE_ACTED);
 30349   011BB0  0E08               	movlw	8
 30350   011BB2  EC9F  F09E         	call	_showStatus
 30351   011BB6  0012               	return		;funcret
 30352   011BB8                     __end_of_poll:
 30353                           	callstack 0
 30354                           
 30355 ;; *************** function _pollTimedResponse *****************
 30356 ;; Defined at:
 30357 ;;		line 116 in file "../../VLCBlib_PIC/timedResponse.c"
 30358 ;; Parameters:    Size  Location     Type
 30359 ;;		None
 30360 ;; Auto vars:     Size  Location     Type
 30361 ;;  result          1   65[COMRAM] enum E23467
 30362 ;; Return value:  Size  Location     Type
 30363 ;;                  1    wreg      void 
 30364 ;; Registers used:
 30365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30366 ;; Tracked objects:
 30367 ;;		On entry : 0/0
 30368 ;;		On exit  : 0/0
 30369 ;;		Unchanged: 0/0
 30370 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30372 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30373 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30374 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30375 ;;Total ram usage:        3 bytes
 30376 ;; Hardware stack levels used: 1
 30377 ;; Hardware stack levels required when called: 8
 30378 ;; This function calls:
 30379 ;;		NULL
 30380 ;;		_mnsTRallDiagnosticsCallback
 30381 ;;		_mnsTRrqnpnCallback
 30382 ;;		_mnsTRserviceDiscoveryCallback
 30383 ;;		_nerdCallback
 30384 ;;		_nvTRnvrdCallback
 30385 ;;		_reqevCallback
 30386 ;;		_sodTRCallback
 30387 ;; This function is called by:
 30388 ;;		_poll
 30389 ;; This function uses a non-reentrant model
 30390 ;;
 30391                           
 30392                           	psect	text23
 30393   014DF2                     __ptext23:
 30394                           	callstack 0
 30395   014DF2                     _pollTimedResponse:
 30396                           	callstack 117
 30397                           
 30398                           ;../../VLCBlib_PIC/timedResponse.c: 117:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 119:     if (timedResponseType == 0xFF) {
 30399                           
 30400                           ;incstack = 0
 30401   014DF2  0105               	movlb	5	; () banked
 30402   014DF4  2986               	incf	_timedResponseType& (0+255),w,b
 30403   014DF6  B4D8               	btfsc	status,2,c
 30404   014DF8  0012               	return	
 30405                           
 30406                           ; BSR set to: 5
 30407                           ;../../VLCBlib_PIC/timedResponse.c: 123:     if (timedResponseCallback == ((void*)0)) {
 30408   014DFA  5174               	movf	_timedResponseCallback& (0+255),w,b
 30409   014DFC  1175               	iorwf	(_timedResponseCallback+1)& (0+255),w,b
 30410   014DFE  1176               	iorwf	(_timedResponseCallback+2)& (0+255),w,b
 30411   014E00  A4D8               	btfss	status,2,c
 30412   014E02  D002               	goto	l12309
 30413   014E04                     u10600:
 30414                           
 30415                           ; BSR set to: 5
 30416                           ;../../VLCBlib_PIC/timedResponse.c: 125:         timedResponseType = 0xFF;
 30417   014E04  6986               	setf	_timedResponseType& (0+255),b
 30418                           
 30419                           ;../../VLCBlib_PIC/timedResponse.c: 126:         return;
 30420   014E06  0012               	return	
 30421   014E08                     l12309:
 30422                           
 30423                           ; BSR set to: 5
 30424                           ;../../VLCBlib_PIC/timedResponse.c: 130:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 30425   014E08  D801               	call	u10618
 30426   014E0A  D00F               	goto	u10619
 30427   014E0C                     u10618:
 30428   014E0C  0005               	push	
 30429   014E0E  6EFA               	movwf	pclath,c
 30430   014E10  5174               	movf	_timedResponseCallback& (0+255),w,b
 30431   014E12  6EFD               	movwf	tosl,c
 30432   014E14  5175               	movf	(_timedResponseCallback+1)& (0+255),w,b
 30433   014E16  6EFE               	movwf	tosh,c
 30434   014E18  5176               	movf	(_timedResponseCallback+2)& (0+255),w,b
 30435   014E1A  6EFF               	movwf	tosu,c
 30436   014E1C  50FA               	movf	pclath,w,c
 30437   014E1E  C588  F531         	movff	_timedResponseServiceIndex,nvTRnvrdCallback@serviceIndex
 30438   014E22  C585  F532         	movff	_timedResponseStep,nvTRnvrdCallback@step
 30439   014E26  5186               	movf	_timedResponseType& (0+255),w,b
 30440   014E28  0012               	return		;indir
 30441   014E2A                     u10619:
 30442   014E2A  6E42               	movwf	pollTimedResponse@result^(0+1280),c
 30443                           
 30444                           ;../../VLCBlib_PIC/timedResponse.c: 131:     switch (result) {
 30445   014E2C  D00E               	goto	l12323
 30446   014E2E                     l12311:
 30447                           
 30448                           ;../../VLCBlib_PIC/timedResponse.c: 135:             if (timedResponseAllServicesFlag) {
 30449   014E2E  0105               	movlb	5	; () banked
 30450   014E30  5187               	movf	_timedResponseAllServicesFlag& (0+255),w,b
 30451   014E32  B4D8               	btfsc	status,2,c
 30452   014E34  D7E7               	goto	u10600
 30453                           
 30454                           ; BSR set to: 5
 30455                           ;../../VLCBlib_PIC/timedResponse.c: 137:                 timedResponseServiceIndex++;
 30456   014E36  2B88               	incf	_timedResponseServiceIndex& (0+255),f,b
 30457                           
 30458                           ; BSR set to: 5
 30459                           ;../../VLCBlib_PIC/timedResponse.c: 138:                 if (timedResponseServiceIndex >
      +                          = 8) {
 30460   014E38  0E07               	movlw	7
 30461   014E3A  6588               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 30462   014E3C  D001               	goto	l2146
 30463   014E3E  D7E2               	goto	u10600
 30464   014E40                     l2146:
 30465                           
 30466                           ; BSR set to: 5
 30467                           ;../../VLCBlib_PIC/timedResponse.c: 142:                     timedResponseStep = 0;
 30468   014E40  6B85               	clrf	_timedResponseStep& (0+255),b
 30469   014E42  0012               	return	
 30470   014E44                     l12319:
 30471                           
 30472                           ;../../VLCBlib_PIC/timedResponse.c: 151:             timedResponseStep++;
 30473   014E44  0105               	movlb	5	; () banked
 30474   014E46  2B85               	incf	_timedResponseStep& (0+255),f,b
 30475                           
 30476                           ;../../VLCBlib_PIC/timedResponse.c: 152:             break;
 30477   014E48  0012               	return	
 30478   014E4A                     l12323:
 30479   014E4A  5042               	movf	pollTimedResponse@result^(0+1280),w,c
 30480   014E4C  6E40               	movwf	??_pollTimedResponse^(0+1280),c
 30481   014E4E  6A41               	clrf	(??_pollTimedResponse+1)^(0+1280),c
 30482                           
 30483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30484                           ; Switch size 1, requested type "simple"
 30485                           ; Number of cases is 1, Range of values is 0 to 0
 30486                           ; switch strategies available:
 30487                           ; Name         Instructions Cycles
 30488                           ; simple_byte            4     3 (average)
 30489                           ;	Chosen strategy is simple_byte
 30490   014E50  5041               	movf	(??_pollTimedResponse+1)^(0+1280),w,c
 30491   014E52  0A00               	xorlw	0	; case 0
 30492   014E54  A4D8               	btfss	status,2,c
 30493   014E56  0012               	return	
 30494                           
 30495                           ; Switch size 1, requested type "simple"
 30496                           ; Number of cases is 3, Range of values is 0 to 2
 30497                           ; switch strategies available:
 30498                           ; Name         Instructions Cycles
 30499                           ; simple_byte           10     6 (average)
 30500                           ;	Chosen strategy is simple_byte
 30501   014E58  5040               	movf	??_pollTimedResponse^(0+1280),w,c
 30502   014E5A  0A00               	xorlw	0	; case 0
 30503   014E5C  B4D8               	btfsc	status,2,c
 30504   014E5E  D7E7               	goto	l12311
 30505   014E60  0A01               	xorlw	1	; case 1
 30506   014E62  B4D8               	btfsc	status,2,c
 30507   014E64  0012               	return	
 30508   014E66  0A03               	xorlw	3	; case 2
 30509   014E68  A4D8               	btfss	status,2,c
 30510   014E6A  0012               	return	
 30511   014E6C  D7EB               	goto	l12319
 30512   014E6E                     __end_of_pollTimedResponse:
 30513                           	callstack 0
 30514                           
 30515 ;; *************** function _nvTRnvrdCallback *****************
 30516 ;; Defined at:
 30517 ;;		line 369 in file "../../VLCBlib_PIC/nv.c"
 30518 ;; Parameters:    Size  Location     Type
 30519 ;;  type            1    wreg     unsigned char 
 30520 ;;  serviceIndex    1   48[COMRAM] unsigned char 
 30521 ;;  step            1   49[COMRAM] unsigned char 
 30522 ;; Auto vars:     Size  Location     Type
 30523 ;;  type            1    0[COMRAM] unsigned char 
 30524 ;;  valueOrError    2   50[COMRAM] short 
 30525 ;; Return value:  Size  Location     Type
 30526 ;;                  1    wreg      enum E23491
 30527 ;; Registers used:
 30528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30529 ;; Tracked objects:
 30530 ;;		On entry : 0/0
 30531 ;;		On exit  : 0/0
 30532 ;;		Unchanged: 0/0
 30533 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30537 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30538 ;;Total ram usage:        4 bytes
 30539 ;; Hardware stack levels used: 1
 30540 ;; Hardware stack levels required when called: 6
 30541 ;; This function calls:
 30542 ;;		_getNV
 30543 ;;		_sendMessage4
 30544 ;; This function is called by:
 30545 ;;		_nvProcessMessage
 30546 ;;		_pollTimedResponse
 30547 ;; This function uses a non-reentrant model
 30548 ;;
 30549                           
 30550                           	psect	text24
 30551   015F4A                     __ptext24:
 30552                           	callstack 0
 30553   015F4A                     _nvTRnvrdCallback:
 30554                           	callstack 118
 30555                           
 30556                           ;../../VLCBlib_PIC/nv.c: 370:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 371:    
      +                           if (step > 67) {
 30557                           
 30558                           ;incstack = 0
 30559   015F4A  0E43               	movlw	67
 30560   015F4C  6432               	cpfsgt	nvTRnvrdCallback@step^(0+1280),c
 30561   015F4E  D002               	goto	l11163
 30562   015F50                     u9190:
 30563                           
 30564                           ;../../VLCBlib_PIC/nv.c: 372:         return TIMED_RESPONSE_RESULT_FINISHED;
 30565   015F50  0E00               	movlw	0
 30566   015F52  0012               	return	
 30567   015F54                     l11163:
 30568                           
 30569                           ;../../VLCBlib_PIC/nv.c: 374:     valueOrError = getNV(step+1);
 30570   015F54  2832               	incf	nvTRnvrdCallback@step^(0+1280),w,c
 30571   015F56  ECE0  F0AF         	call	_getNV
 30572   015F5A  C501  F533         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 30573   015F5E  C502  F534         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 30574                           
 30575                           ;../../VLCBlib_PIC/nv.c: 375:     if (valueOrError < 0) {
 30576   015F62  BE34               	btfsc	(nvTRnvrdCallback@valueOrError+1)^(0+1280),7,c
 30577   015F64  D7F5               	goto	u9190
 30578                           
 30579                           ;../../VLCBlib_PIC/nv.c: 378:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 30580   015F66  C55F  F525         	movff	_nn+1,sendMessage4@data1
 30581   015F6A  C55E  F526         	movff	_nn,sendMessage4@data2
 30582   015F6E  2832               	incf	nvTRnvrdCallback@step^(0+1280),w,c
 30583   015F70  6E27               	movwf	sendMessage4@data3^(0+1280),c
 30584   015F72  C533  F528         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 30585   015F76  0E97               	movlw	151
 30586   015F78  ECE2  F0B1         	call	_sendMessage4
 30587                           
 30588                           ;../../VLCBlib_PIC/nv.c: 380:     nvDiagnostics[0x01].asUint++;
 30589   015F7C  0105               	movlb	5	; () banked
 30590   015F7E  4BB3               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 30591   015F80  2BB4               	incf	(_nvDiagnostics+3)& (0+255),f,b
 30592                           
 30593                           ; BSR set to: 5
 30594                           ;../../VLCBlib_PIC/nv.c: 382:     return TIMED_RESPONSE_RESULT_NEXT;
 30595   015F82  0E02               	movlw	2
 30596   015F84  0012               	return		;funcret
 30597   015F86                     __end_of_nvTRnvrdCallback:
 30598                           	callstack 0
 30599                           
 30600 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 30601 ;; Defined at:
 30602 ;;		line 901 in file "../../VLCBlib_PIC/mns.c"
 30603 ;; Parameters:    Size  Location     Type
 30604 ;;  type            1    wreg     unsigned char 
 30605 ;;  serviceIndex    1   48[COMRAM] unsigned char 
 30606 ;;  step            1   49[COMRAM] unsigned char 
 30607 ;; Auto vars:     Size  Location     Type
 30608 ;;  type            1    0[COMRAM] unsigned char 
 30609 ;; Return value:  Size  Location     Type
 30610 ;;                  1    wreg      enum E23474
 30611 ;; Registers used:
 30612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30613 ;; Tracked objects:
 30614 ;;		On entry : 0/0
 30615 ;;		On exit  : 0/0
 30616 ;;		Unchanged: 0/0
 30617 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30620 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30621 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30622 ;;Total ram usage:        6 bytes
 30623 ;; Hardware stack levels used: 1
 30624 ;; Hardware stack levels required when called: 6
 30625 ;; This function calls:
 30626 ;;		_sendMessage5
 30627 ;; This function is called by:
 30628 ;;		_mnsProcessMessage
 30629 ;;		_pollTimedResponse
 30630 ;; This function uses a non-reentrant model
 30631 ;;
 30632                           
 30633                           	psect	text25
 30634   0148CC                     __ptext25:
 30635                           	callstack 0
 30636   0148CC                     _mnsTRserviceDiscoveryCallback:
 30637                           	callstack 118
 30638                           
 30639                           ;../../VLCBlib_PIC/mns.c: 902:     if (step >= 8) {
 30640                           
 30641                           ;incstack = 0
 30642   0148CC  0E07               	movlw	7
 30643   0148CE  6432               	cpfsgt	mnsTRserviceDiscoveryCallback@step^(0+1280),c
 30644   0148D0  D002               	goto	l10951
 30645                           
 30646                           ;../../VLCBlib_PIC/mns.c: 903:         return TIMED_RESPONSE_RESULT_FINISHED;
 30647   0148D2  0E00               	movlw	0
 30648   0148D4  0012               	return	
 30649   0148D6                     l10951:
 30650                           
 30651                           ;../../VLCBlib_PIC/mns.c: 906:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 30652   0148D6  C55F  F525         	movff	_nn+1,sendMessage5@data1
 30653   0148DA  C55E  F526         	movff	_nn,sendMessage5@data2
 30654   0148DE  2832               	incf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 30655   0148E0  6E27               	movwf	sendMessage5@data3^(0+1280),c
 30656   0148E2  5032               	movf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 30657   0148E4  0D02               	mullw	2
 30658   0148E6  0E35               	movlw	low _services
 30659   0148E8  24F3               	addwf	243,w,c
 30660   0148EA  6EF6               	movwf	tblptrl,c
 30661   0148EC  0EFF               	movlw	high _services
 30662   0148EE  20F4               	addwfc	244,w,c
 30663   0148F0  6EF7               	movwf	tblptrh,c
 30664   0148F2                     	if	1	;There are 3 active tblptr bytes
 30665   0148F2  6AF8               	clrf	tblptru,c
 30666   0148F4  0E00               	movlw	low (__pmediumconst shr (0+16))
 30667   0148F6  22F8               	addwfc	tblptru,f,c
 30668   0148F8                     	endif
 30669   0148F8  0009               	tblrd		*+
 30670   0148FA  C4F5 F533          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 30671   0148FE  0009               	tblrd		*+
 30672   014900  C4F5 F534          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 30673   014904  C533  F4F6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 30674   014908  C534  F4F7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 30675   01490C                     	if	0	;tblptru may be non-zero
 30676   01490C                     	endif
 30677   01490C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30678   01490C  0E00               	movlw	low (__pmediumconst shr (0+16))
 30679   01490E  6EF8               	movwf	tblptru,c
 30680   014910                     	endif
 30681   014910  0008               	tblrd		*
 30682   014912  C4F5 F528          	movff	tablat,sendMessage5@data4
 30683   014916  5032               	movf	mnsTRserviceDiscoveryCallback@step^(0+1280),w,c
 30684   014918  0D02               	mullw	2
 30685   01491A  0E35               	movlw	low _services
 30686   01491C  24F3               	addwf	243,w,c
 30687   01491E  6EF6               	movwf	tblptrl,c
 30688   014920  0EFF               	movlw	high _services
 30689   014922  20F4               	addwfc	244,w,c
 30690   014924  6EF7               	movwf	tblptrh,c
 30691   014926                     	if	1	;There are 3 active tblptr bytes
 30692   014926  6AF8               	clrf	tblptru,c
 30693   014928  0E00               	movlw	low (__pmediumconst shr (0+16))
 30694   01492A  22F8               	addwfc	tblptru,f,c
 30695   01492C                     	endif
 30696   01492C  0009               	tblrd		*+
 30697   01492E  C4F5 F535          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 30698   014932  0009               	tblrd		*+
 30699   014934  C4F5 F536          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 30700   014938  0E01               	movlw	1
 30701   01493A  2635               	addwf	(??_mnsTRserviceDiscoveryCallback+2)^(0+1280),f,c
 30702   01493C  0E00               	movlw	0
 30703   01493E  2236               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)^(0+1280),f,c
 30704   014940  C535  F4F6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 30705   014944  C536  F4F7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 30706   014948                     	if	0	;tblptru may be non-zero
 30707   014948                     	endif
 30708   014948                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30709   014948  0E00               	movlw	low (__pmediumconst shr (0+16))
 30710   01494A  6EF8               	movwf	tblptru,c
 30711   01494C                     	endif
 30712   01494C  0008               	tblrd		*
 30713   01494E  C4F5 F529          	movff	tablat,sendMessage5@data5
 30714   014952  0EAC               	movlw	172
 30715   014954  ECCD  F0B1         	call	_sendMessage5
 30716                           
 30717                           ;../../VLCBlib_PIC/mns.c: 908:     return TIMED_RESPONSE_RESULT_NEXT;
 30718   014958  0E02               	movlw	2
 30719   01495A  0012               	return		;funcret
 30720   01495C                     __end_of_mnsTRserviceDiscoveryCallback:
 30721                           	callstack 0
 30722                           
 30723 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 30724 ;; Defined at:
 30725 ;;		line 920 in file "../../VLCBlib_PIC/mns.c"
 30726 ;; Parameters:    Size  Location     Type
 30727 ;;  type            1    wreg     unsigned char 
 30728 ;;  serviceIndex    1   48[COMRAM] unsigned char 
 30729 ;;  step            1   49[COMRAM] unsigned char 
 30730 ;; Auto vars:     Size  Location     Type
 30731 ;;  type            1    0[COMRAM] unsigned char 
 30732 ;;  d               2   52[COMRAM] PTR struct DiagnosticVal
 30733 ;;		 -> producerDiagnostics(4), nvDiagnostics(6), mnsDiagnostics(14), teachDiagnostics(4), 
 30734 ;;		 -> consumerDiagnostics(6), canDiagnostics(38), NULL(0), 
 30735 ;; Return value:  Size  Location     Type
 30736 ;;                  1    wreg      enum E23474
 30737 ;; Registers used:
 30738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30739 ;; Tracked objects:
 30740 ;;		On entry : 0/0
 30741 ;;		On exit  : 0/0
 30742 ;;		Unchanged: 0/0
 30743 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30744 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30745 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30746 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30747 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30748 ;;Total ram usage:        6 bytes
 30749 ;; Hardware stack levels used: 1
 30750 ;; Hardware stack levels required when called: 6
 30751 ;; This function calls:
 30752 ;;		NULL
 30753 ;;		_canGetDiagnostic
 30754 ;;		_consumerGetDiagnostic
 30755 ;;		_mnsGetDiagnostic
 30756 ;;		_nvGetDiagnostic
 30757 ;;		_producerGetDiagnostic
 30758 ;;		_sendMessage6
 30759 ;;		_teachGetDiagnostic
 30760 ;; This function is called by:
 30761 ;;		_mnsProcessMessage
 30762 ;;		_pollTimedResponse
 30763 ;; This function uses a non-reentrant model
 30764 ;;
 30765                           
 30766                           	psect	text26
 30767   01397C                     __ptext26:
 30768                           	callstack 0
 30769   01397C                     _mnsTRallDiagnosticsCallback:
 30770                           	callstack 118
 30771                           
 30772                           ;../../VLCBlib_PIC/mns.c: 921:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 30773                           
 30774                           ;incstack = 0
 30775   01397C  5031               	movf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30776   01397E  0D02               	mullw	2
 30777   013980  0E35               	movlw	low _services
 30778   013982  24F3               	addwf	243,w,c
 30779   013984  6EF6               	movwf	tblptrl,c
 30780   013986  0EFF               	movlw	high _services
 30781   013988  20F4               	addwfc	244,w,c
 30782   01398A  6EF7               	movwf	tblptrh,c
 30783   01398C                     	if	1	;There are 3 active tblptr bytes
 30784   01398C  6AF8               	clrf	tblptru,c
 30785   01398E  0E00               	movlw	low (__pmediumconst shr (0+16))
 30786   013990  22F8               	addwfc	tblptru,f,c
 30787   013992                     	endif
 30788   013992  0009               	tblrd		*+
 30789   013994  C4F5 F533          	movff	tablat,??_mnsTRallDiagnosticsCallback
 30790   013998  0009               	tblrd		*+
 30791   01399A  C4F5 F534          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 30792   01399E  0E11               	movlw	17
 30793   0139A0  2633               	addwf	??_mnsTRallDiagnosticsCallback^(0+1280),f,c
 30794   0139A2  0E00               	movlw	0
 30795   0139A4  2234               	addwfc	(??_mnsTRallDiagnosticsCallback+1)^(0+1280),f,c
 30796   0139A6  C533  F4F6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 30797   0139AA  C534  F4F7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 30798   0139AE                     	if	0	;tblptru may be non-zero
 30799   0139AE                     	endif
 30800   0139AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30801   0139AE  0E00               	movlw	low (__pmediumconst shr (0+16))
 30802   0139B0  6EF8               	movwf	tblptru,c
 30803   0139B2                     	endif
 30804   0139B2  0009               	tblrd		*+
 30805   0139B4  50F5               	movf	tablat,w,c
 30806   0139B6  0009               	tblrd		*+
 30807   0139B8  10F5               	iorwf	tablat,w,c
 30808   0139BA  0009               	tblrd		*+
 30809   0139BC  10F5               	iorwf	tablat,w,c
 30810   0139BE  A4D8               	btfss	status,2,c
 30811   0139C0  D011               	goto	l10965
 30812                           
 30813                           ;../../VLCBlib_PIC/mns.c: 922:         sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, s
      +                          erviceIndex+1, 0, 0, 0);
 30814   0139C2  C55F  F525         	movff	_nn+1,sendMessage6@data1
 30815   0139C6  C55E  F526         	movff	_nn,sendMessage6@data2
 30816   0139CA  2831               	incf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30817   0139CC  6E27               	movwf	sendMessage6@data3^(0+1280),c
 30818   0139CE  0E00               	movlw	0
 30819   0139D0  6E28               	movwf	sendMessage6@data4^(0+1280),c
 30820   0139D2  0E00               	movlw	0
 30821   0139D4  6E29               	movwf	sendMessage6@data5^(0+1280),c
 30822   0139D6  0E00               	movlw	0
 30823   0139D8  6E2A               	movwf	sendMessage6@data6^(0+1280),c
 30824   0139DA  0EC7               	movlw	199
 30825   0139DC  EC79  F0B1         	call	_sendMessage6
 30826   0139E0                     l10961:
 30827                           
 30828                           ;../../VLCBlib_PIC/mns.c: 923:         return TIMED_RESPONSE_RESULT_FINISHED;
 30829   0139E0  0E00               	movlw	0
 30830   0139E2  0012               	return	
 30831   0139E4                     l10965:
 30832                           
 30833                           ;../../VLCBlib_PIC/mns.c: 925:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step);
 30834   0139E4  5031               	movf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30835   0139E6  0D02               	mullw	2
 30836   0139E8  0E35               	movlw	low _services
 30837   0139EA  24F3               	addwf	243,w,c
 30838   0139EC  6EF6               	movwf	tblptrl,c
 30839   0139EE  0EFF               	movlw	high _services
 30840   0139F0  20F4               	addwfc	244,w,c
 30841   0139F2  6EF7               	movwf	tblptrh,c
 30842   0139F4                     	if	1	;There are 3 active tblptr bytes
 30843   0139F4  6AF8               	clrf	tblptru,c
 30844   0139F6  0E00               	movlw	low (__pmediumconst shr (0+16))
 30845   0139F8  22F8               	addwfc	tblptru,f,c
 30846   0139FA                     	endif
 30847   0139FA  0009               	tblrd		*+
 30848   0139FC  C4F5 F533          	movff	tablat,??_mnsTRallDiagnosticsCallback
 30849   013A00  0009               	tblrd		*+
 30850   013A02  C4F5 F534          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 30851   013A06  0E11               	movlw	17
 30852   013A08  2633               	addwf	??_mnsTRallDiagnosticsCallback^(0+1280),f,c
 30853   013A0A  0E00               	movlw	0
 30854   013A0C  2234               	addwfc	(??_mnsTRallDiagnosticsCallback+1)^(0+1280),f,c
 30855   013A0E  C533  F4F6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 30856   013A12  C534  F4F7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 30857   013A16                     	if	0	;tblptru may be non-zero
 30858   013A16                     	endif
 30859   013A16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30860   013A16  0E00               	movlw	low (__pmediumconst shr (0+16))
 30861   013A18  6EF8               	movwf	tblptru,c
 30862   013A1A                     	endif
 30863   013A1A  D801               	call	u9018
 30864   013A1C  D00E               	goto	u9019
 30865   013A1E                     u9018:
 30866   013A1E  0005               	push	
 30867   013A20  6EFA               	movwf	pclath,c
 30868   013A22  0009               	tblrd		*+
 30869   013A24  50F5               	movf	tablat,w,c
 30870   013A26  6EFD               	movwf	tosl,c
 30871   013A28  0009               	tblrd		*+
 30872   013A2A  50F5               	movf	tablat,w,c
 30873   013A2C  6EFE               	movwf	tosh,c
 30874   013A2E  0009               	tblrd		*+
 30875   013A30  50F5               	movf	tablat,w,c
 30876   013A32  6EFF               	movwf	tosu,c
 30877   013A34  50FA               	movf	pclath,w,c
 30878   013A36  5032               	movf	mnsTRallDiagnosticsCallback@step^(0+1280),w,c
 30879   013A38  0012               	return		;indir
 30880   013A3A                     u9019:
 30881   013A3A  C507  F535         	movff	?_producerGetDiagnostic,mnsTRallDiagnosticsCallback@d
 30882   013A3E  C508  F536         	movff	?_producerGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 30883                           
 30884                           ;../../VLCBlib_PIC/mns.c: 926:     if (d == ((void*)0)) {
 30885   013A42  5035               	movf	mnsTRallDiagnosticsCallback@d^(0+1280),w,c
 30886   013A44  1036               	iorwf	(mnsTRallDiagnosticsCallback@d+1)^(0+1280),w,c
 30887   013A46  B4D8               	btfsc	status,2,c
 30888   013A48  D7CB               	goto	l10961
 30889                           
 30890                           ;../../VLCBlib_PIC/mns.c: 931:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step, d->asBytes.hi, d->asBytes.lo);
 30891   013A4A  C55F  F525         	movff	_nn+1,sendMessage6@data1
 30892   013A4E  C55E  F526         	movff	_nn,sendMessage6@data2
 30893   013A52  2831               	incf	mnsTRallDiagnosticsCallback@serviceIndex^(0+1280),w,c
 30894   013A54  6E27               	movwf	sendMessage6@data3^(0+1280),c
 30895   013A56  C532  F528         	movff	mnsTRallDiagnosticsCallback@step,sendMessage6@data4
 30896   013A5A  EE20 F001          	lfsr	2,1
 30897   013A5E  5035               	movf	mnsTRallDiagnosticsCallback@d^(0+1280),w,c
 30898   013A60  26D9               	addwf	fsr2l,f,c
 30899   013A62  5036               	movf	(mnsTRallDiagnosticsCallback@d+1)^(0+1280),w,c
 30900   013A64  22DA               	addwfc	fsr2h,f,c
 30901   013A66  50DF               	movf	indf2,w,c
 30902   013A68  6E29               	movwf	sendMessage6@data5^(0+1280),c
 30903   013A6A  C535  F4D9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 30904   013A6E  C536  F4DA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 30905   013A72  50DF               	movf	indf2,w,c
 30906   013A74  6E2A               	movwf	sendMessage6@data6^(0+1280),c
 30907   013A76  0EC7               	movlw	199
 30908   013A78  EC79  F0B1         	call	_sendMessage6
 30909                           
 30910                           ;../../VLCBlib_PIC/mns.c: 932:     return TIMED_RESPONSE_RESULT_NEXT;
 30911   013A7C  0E02               	movlw	2
 30912   013A7E  0012               	return		;funcret
 30913   013A80                     __end_of_mnsTRallDiagnosticsCallback:
 30914                           	callstack 0
 30915                           
 30916 ;; *************** function _mnsTRrqnpnCallback *****************
 30917 ;; Defined at:
 30918 ;;		line 943 in file "../../VLCBlib_PIC/mns.c"
 30919 ;; Parameters:    Size  Location     Type
 30920 ;;  type            1    wreg     unsigned char 
 30921 ;;  serviceIndex    1   48[COMRAM] unsigned char 
 30922 ;;  step            1   49[COMRAM] unsigned char 
 30923 ;; Auto vars:     Size  Location     Type
 30924 ;;  type            1    0[COMRAM] unsigned char 
 30925 ;; Return value:  Size  Location     Type
 30926 ;;                  1    wreg      enum E23474
 30927 ;; Registers used:
 30928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30929 ;; Tracked objects:
 30930 ;;		On entry : 0/0
 30931 ;;		On exit  : 0/0
 30932 ;;		Unchanged: 0/0
 30933 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 30934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30937 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 30938 ;;Total ram usage:        2 bytes
 30939 ;; Hardware stack levels used: 1
 30940 ;; Hardware stack levels required when called: 6
 30941 ;; This function calls:
 30942 ;;		_getParameter
 30943 ;;		_sendMessage4
 30944 ;; This function is called by:
 30945 ;;		_mnsProcessMessage
 30946 ;;		_pollTimedResponse
 30947 ;; This function uses a non-reentrant model
 30948 ;;
 30949                           
 30950                           	psect	text27
 30951   0163EE                     __ptext27:
 30952                           	callstack 0
 30953   0163EE                     _mnsTRrqnpnCallback:
 30954                           	callstack 118
 30955                           
 30956                           ;../../VLCBlib_PIC/mns.c: 944:     if (step >= 20) {
 30957                           
 30958                           ;incstack = 0
 30959   0163EE  0E13               	movlw	19
 30960   0163F0  6432               	cpfsgt	mnsTRrqnpnCallback@step^(0+1280),c
 30961   0163F2  D002               	goto	l10985
 30962                           
 30963                           ;../../VLCBlib_PIC/mns.c: 945:         return TIMED_RESPONSE_RESULT_FINISHED;
 30964   0163F4  0E00               	movlw	0
 30965   0163F6  0012               	return	
 30966   0163F8                     l10985:
 30967                           
 30968                           ;../../VLCBlib_PIC/mns.c: 947:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 30969   0163F8  C55F  F525         	movff	_nn+1,sendMessage4@data1
 30970   0163FC  C55E  F526         	movff	_nn,sendMessage4@data2
 30971   016400  2832               	incf	mnsTRrqnpnCallback@step^(0+1280),w,c
 30972   016402  6E27               	movwf	sendMessage4@data3^(0+1280),c
 30973   016404  2832               	incf	mnsTRrqnpnCallback@step^(0+1280),w,c
 30974   016406  EC36  F09C         	call	_getParameter
 30975   01640A  6E28               	movwf	sendMessage4@data4^(0+1280),c
 30976   01640C  0E9B               	movlw	155
 30977   01640E  ECE2  F0B1         	call	_sendMessage4
 30978                           
 30979                           ;../../VLCBlib_PIC/mns.c: 948:     return TIMED_RESPONSE_RESULT_NEXT;
 30980   016412  0E02               	movlw	2
 30981   016414  0012               	return		;funcret
 30982   016416                     __end_of_mnsTRrqnpnCallback:
 30983                           	callstack 0
 30984                           
 30985 ;; *************** function _reqevCallback *****************
 30986 ;; Defined at:
 30987 ;;		line 674 in file "../../VLCBlib_PIC/event_teach_simple.c"
 30988 ;; Parameters:    Size  Location     Type
 30989 ;;  tableIndex      1    wreg     unsigned char 
 30990 ;;  serviceIndex    1   48[COMRAM] unsigned char 
 30991 ;;  step            1   49[COMRAM] unsigned char 
 30992 ;; Auto vars:     Size  Location     Type
 30993 ;;  tableIndex      1   62[COMRAM] unsigned char 
 30994 ;;  nodeNumber      2   60[COMRAM] struct Word
 30995 ;;  ev              2   58[COMRAM] short 
 30996 ;;  eventNumber     2   56[COMRAM] struct Word
 30997 ;;  nEv             1   55[COMRAM] unsigned char 
 30998 ;; Return value:  Size  Location     Type
 30999 ;;                  1    wreg      enum E23474
 31000 ;; Registers used:
 31001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31002 ;; Tracked objects:
 31003 ;;		On entry : 0/0
 31004 ;;		On exit  : 0/0
 31005 ;;		Unchanged: 0/0
 31006 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31008 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31009 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31010 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31011 ;;Total ram usage:       15 bytes
 31012 ;; Hardware stack levels used: 1
 31013 ;; Hardware stack levels required when called: 6
 31014 ;; This function calls:
 31015 ;;		_getEN
 31016 ;;		_getEv
 31017 ;;		_getNN
 31018 ;;		_numEv
 31019 ;;		_sendMessage5
 31020 ;;		_sendMessage6
 31021 ;;		_tableIndexToEvtIdx
 31022 ;; This function is called by:
 31023 ;;		_doReval
 31024 ;;		_doReqev
 31025 ;;		_pollTimedResponse
 31026 ;; This function uses a non-reentrant model
 31027 ;;
 31028                           
 31029                           	psect	text28
 31030   014462                     __ptext28:
 31031                           	callstack 0
 31032   014462                     _reqevCallback:
 31033                           	callstack 118
 31034                           
 31035                           ;incstack = 0
 31036                           ;reqevCallback@tableIndex stored from wreg
 31037   014462  6E3F               	movwf	reqevCallback@tableIndex^(0+1280),c
 31038                           
 31039                           ;../../VLCBlib_PIC/event_teach_simple.c: 675:     Word nodeNumber, eventNumber;;../../VL
      +                          CBlib_PIC/event_teach_simple.c: 677:     uint8_t nEv = numEv(tableIndex);
 31040   014464  503F               	movf	reqevCallback@tableIndex^(0+1280),w,c
 31041   014466  ECE3  F0B3         	call	_numEv
 31042   01446A  6E38               	movwf	reqevCallback@nEv^(0+1280),c
 31043                           
 31044                           ;../../VLCBlib_PIC/event_teach_simple.c: 678:     int16_t ev;;../../VLCBlib_PIC/event_te
      +                          ach_simple.c: 680:     if (step+1 > nEv) {
 31045   01446C  5032               	movf	reqevCallback@step^(0+1280),w,c
 31046   01446E  6E33               	movwf	??_reqevCallback^(0+1280),c
 31047   014470  6A34               	clrf	(??_reqevCallback+1)^(0+1280),c
 31048   014472  0E01               	movlw	1
 31049   014474  2633               	addwf	??_reqevCallback^(0+1280),f,c
 31050   014476  0E00               	movlw	0
 31051   014478  2234               	addwfc	(??_reqevCallback+1)^(0+1280),f,c
 31052   01447A  5038               	movf	reqevCallback@nEv^(0+1280),w,c
 31053   01447C  6E35               	movwf	(??_reqevCallback+2)^(0+1280),c
 31054   01447E  6A36               	clrf	(??_reqevCallback+3)^(0+1280),c
 31055   014480  5033               	movf	??_reqevCallback^(0+1280),w,c
 31056   014482  5C35               	subwf	(??_reqevCallback+2)^(0+1280),w,c
 31057   014484  5036               	movf	(??_reqevCallback+3)^(0+1280),w,c
 31058   014486  0A80               	xorlw	128
 31059   014488  6E37               	movwf	(??_reqevCallback+4)^(0+1280),c
 31060   01448A  5034               	movf	(??_reqevCallback+1)^(0+1280),w,c
 31061   01448C  0A80               	xorlw	128
 31062   01448E  5837               	subwfb	(??_reqevCallback+4)^(0+1280),w,c
 31063   014490  B0D8               	btfsc	status,0,c
 31064   014492  D002               	goto	l10565
 31065                           
 31066                           ;../../VLCBlib_PIC/event_teach_simple.c: 681:         return TIMED_RESPONSE_RESULT_FINIS
      +                          HED;
 31067   014494  0E00               	movlw	0
 31068   014496  0012               	return	
 31069   014498                     l10565:
 31070                           
 31071                           ;../../VLCBlib_PIC/event_teach_simple.c: 684:     nodeNumber.word = getNN(tableIndex);
 31072   014498  503F               	movf	reqevCallback@tableIndex^(0+1280),w,c
 31073   01449A  ECD6  F0A1         	call	_getNN
 31074   01449E  C50D  F53D         	movff	?_getNN,reqevCallback@nodeNumber
 31075   0144A2  C50E  F53E         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 31076                           
 31077                           ;../../VLCBlib_PIC/event_teach_simple.c: 685:     eventNumber.word = getEN(tableIndex);
 31078   0144A6  503F               	movf	reqevCallback@tableIndex^(0+1280),w,c
 31079   0144A8  EC00  F0A9         	call	_getEN
 31080   0144AC  C50D  F539         	movff	?_getEN,reqevCallback@eventNumber
 31081   0144B0  C50E  F53A         	movff	?_getEN+1,reqevCallback@eventNumber+1
 31082                           
 31083                           ;../../VLCBlib_PIC/event_teach_simple.c: 686:     ev = getEv(tableIndex, step);
 31084   0144B4  C532  F50D         	movff	reqevCallback@step,getEv@evNum
 31085   0144B8  503F               	movf	reqevCallback@tableIndex^(0+1280),w,c
 31086   0144BA  ECA3  F0A9         	call	_getEv
 31087   0144BE  C50D  F53B         	movff	?_getEv,reqevCallback@ev
 31088   0144C2  C50E  F53C         	movff	?_getEv+1,reqevCallback@ev+1
 31089                           
 31090                           ;../../VLCBlib_PIC/event_teach_simple.c: 687:     if (ev >= 0) {
 31091   0144C6  BE3C               	btfsc	(reqevCallback@ev+1)^(0+1280),7,c
 31092   0144C8  D024               	goto	l10575
 31093                           
 31094                           ;../../VLCBlib_PIC/event_teach_simple.c: 688:         if (timedResponseOpcode == OPC_EVA
      +                          NS) {
 31095   0144CA  0ED3               	movlw	211
 31096   0144CC  0105               	movlb	5	; () banked
 31097   0144CE  1992               	xorwf	_timedResponseOpcode& (0+255),w,b
 31098   0144D0  A4D8               	btfss	status,2,c
 31099   0144D2  D010               	goto	l10573
 31100                           
 31101                           ; BSR set to: 5
 31102                           ;../../VLCBlib_PIC/event_teach_simple.c: 689:             sendMessage6(OPC_EVANS, nodeNu
      +                          mber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, 
      +                          (uint8_t)ev);
 31103   0144D4  C53E  F525         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 31104   0144D8  C53D  F526         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 31105   0144DC  C53A  F527         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 31106   0144E0  C539  F528         	movff	reqevCallback@eventNumber,sendMessage6@data4
 31107   0144E4  2832               	incf	reqevCallback@step^(0+1280),w,c
 31108   0144E6  6E29               	movwf	sendMessage6@data5^(0+1280),c
 31109   0144E8  C53B  F52A         	movff	reqevCallback@ev,sendMessage6@data6
 31110   0144EC  0ED3               	movlw	211
 31111   0144EE  EC79  F0B1         	call	_sendMessage6
 31112                           
 31113                           ;../../VLCBlib_PIC/event_teach_simple.c: 690:         } else {
 31114   0144F2  D00F               	goto	l10575
 31115   0144F4                     l10573:
 31116                           
 31117                           ; BSR set to: 5
 31118                           ;../../VLCBlib_PIC/event_teach_simple.c: 691:             sendMessage5(OPC_NEVAL, nodeNu
      +                          mber.bytes.hi, nodeNumber.bytes.lo, tableIndexToEvtIdx(tableIndex), step+1, (uint8_t)ev)
      +                          ;
 31119   0144F4  C53E  F525         	movff	reqevCallback@nodeNumber+1,sendMessage5@data1
 31120   0144F8  C53D  F526         	movff	reqevCallback@nodeNumber,sendMessage5@data2
 31121   0144FC  503F               	movf	reqevCallback@tableIndex^(0+1280),w,c
 31122   0144FE  ECD4  F0B3         	call	_tableIndexToEvtIdx
 31123   014502  6E27               	movwf	sendMessage5@data3^(0+1280),c
 31124   014504  2832               	incf	reqevCallback@step^(0+1280),w,c
 31125   014506  6E28               	movwf	sendMessage5@data4^(0+1280),c
 31126   014508  C53B  F529         	movff	reqevCallback@ev,sendMessage5@data5
 31127   01450C  0EB5               	movlw	181
 31128   01450E  ECCD  F0B1         	call	_sendMessage5
 31129   014512                     l10575:
 31130                           
 31131                           ;../../VLCBlib_PIC/event_teach_simple.c: 694:     return TIMED_RESPONSE_RESULT_NEXT;
 31132   014512  0E02               	movlw	2
 31133   014514  0012               	return		;funcret
 31134   014516                     __end_of_reqevCallback:
 31135                           	callstack 0
 31136                           
 31137 ;; *************** function _nerdCallback *****************
 31138 ;; Defined at:
 31139 ;;		line 442 in file "../../VLCBlib_PIC/event_teach_simple.c"
 31140 ;; Parameters:    Size  Location     Type
 31141 ;;  type            1    wreg     unsigned char 
 31142 ;;  serviceIndex    1   48[COMRAM] unsigned char 
 31143 ;;  step            1   49[COMRAM] unsigned char 
 31144 ;; Auto vars:     Size  Location     Type
 31145 ;;  type            1    0[COMRAM] unsigned char 
 31146 ;;  eventNumber     2   52[COMRAM] struct Word
 31147 ;;  nodeNumber      2   50[COMRAM] struct Word
 31148 ;; Return value:  Size  Location     Type
 31149 ;;                  1    wreg      enum E23474
 31150 ;; Registers used:
 31151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31152 ;; Tracked objects:
 31153 ;;		On entry : 0/0
 31154 ;;		On exit  : 0/0
 31155 ;;		Unchanged: 0/0
 31156 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31158 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31160 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31161 ;;Total ram usage:        6 bytes
 31162 ;; Hardware stack levels used: 1
 31163 ;; Hardware stack levels required when called: 6
 31164 ;; This function calls:
 31165 ;;		_getEN
 31166 ;;		_getNN
 31167 ;;		_sendMessage7
 31168 ;;		_tableIndexToEvtIdx
 31169 ;; This function is called by:
 31170 ;;		_doNerd
 31171 ;;		_pollTimedResponse
 31172 ;; This function uses a non-reentrant model
 31173 ;;
 31174                           
 31175                           	psect	text29
 31176   015846                     __ptext29:
 31177                           	callstack 0
 31178   015846                     _nerdCallback:
 31179                           	callstack 118
 31180                           
 31181                           ;../../VLCBlib_PIC/event_teach_simple.c: 443:     Word nodeNumber, eventNumber;;../../VL
      +                          CBlib_PIC/event_teach_simple.c: 445:     if (step >= 254) {
 31182                           
 31183                           ;incstack = 0
 31184   015846  0EFD               	movlw	253
 31185   015848  6432               	cpfsgt	nerdCallback@step^(0+1280),c
 31186   01584A  D002               	goto	l10545
 31187                           
 31188                           ;../../VLCBlib_PIC/event_teach_simple.c: 446:         return TIMED_RESPONSE_RESULT_FINIS
      +                          HED;
 31189   01584C  0E00               	movlw	0
 31190   01584E  0012               	return	
 31191   015850                     l10545:
 31192                           
 31193                           ;../../VLCBlib_PIC/event_teach_simple.c: 449:     eventNumber.word = getEN(step);
 31194   015850  5032               	movf	nerdCallback@step^(0+1280),w,c
 31195   015852  EC00  F0A9         	call	_getEN
 31196   015856  C50D  F535         	movff	?_getEN,nerdCallback@eventNumber
 31197   01585A  C50E  F536         	movff	?_getEN+1,nerdCallback@eventNumber+1
 31198                           
 31199                           ;../../VLCBlib_PIC/event_teach_simple.c: 450:     if (eventNumber.word != 0) {
 31200   01585E  5035               	movf	nerdCallback@eventNumber^(0+1280),w,c
 31201   015860  1036               	iorwf	(nerdCallback@eventNumber+1)^(0+1280),w,c
 31202   015862  B4D8               	btfsc	status,2,c
 31203   015864  D01A               	goto	l10553
 31204                           
 31205                           ;../../VLCBlib_PIC/event_teach_simple.c: 451:         nodeNumber.word = getNN(step);
 31206   015866  5032               	movf	nerdCallback@step^(0+1280),w,c
 31207   015868  ECD6  F0A1         	call	_getNN
 31208   01586C  C50D  F533         	movff	?_getNN,nerdCallback@nodeNumber
 31209   015870  C50E  F534         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 31210                           
 31211                           ;../../VLCBlib_PIC/event_teach_simple.c: 452:         sendMessage7(OPC_ENRSP, nn.bytes.h
      +                          i, nn.bytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNum
      +                          ber.bytes.lo, tableIndexToEvtIdx(step));
 31212   015874  C55F  F525         	movff	_nn+1,sendMessage7@data1
 31213   015878  C55E  F526         	movff	_nn,sendMessage7@data2
 31214   01587C  C534  F527         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 31215   015880  C533  F528         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 31216   015884  C536  F529         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 31217   015888  C535  F52A         	movff	nerdCallback@eventNumber,sendMessage7@data6
 31218   01588C  5032               	movf	nerdCallback@step^(0+1280),w,c
 31219   01588E  ECD4  F0B3         	call	_tableIndexToEvtIdx
 31220   015892  6E2B               	movwf	sendMessage7@data7^(0+1280),c
 31221   015894  0EF2               	movlw	242
 31222   015896  ECB8  F0B1         	call	_sendMessage7
 31223   01589A                     l10553:
 31224                           
 31225                           ;../../VLCBlib_PIC/event_teach_simple.c: 455:     return TIMED_RESPONSE_RESULT_NEXT;
 31226   01589A  0E02               	movlw	2
 31227   01589C  0012               	return		;funcret
 31228   01589E                     __end_of_nerdCallback:
 31229                           	callstack 0
 31230                           
 31231 ;; *************** function _sodTRCallback *****************
 31232 ;; Defined at:
 31233 ;;		line 350 in file "../canpan3Inputs.c"
 31234 ;; Parameters:    Size  Location     Type
 31235 ;;  type            1    wreg     unsigned char 
 31236 ;;  serviceIndex    1   48[COMRAM] unsigned char 
 31237 ;;  tableIndex      1   49[COMRAM] unsigned char 
 31238 ;; Auto vars:     Size  Location     Type
 31239 ;;  type            1    0[COMRAM] unsigned char 
 31240 ;;  value           1   51[COMRAM] enum E23277
 31241 ;;  sv              1   50[COMRAM] unsigned char 
 31242 ;; Return value:  Size  Location     Type
 31243 ;;                  1    wreg      enum E23512
 31244 ;; Registers used:
 31245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31246 ;; Tracked objects:
 31247 ;;		On entry : 0/0
 31248 ;;		On exit  : 0/0
 31249 ;;		Unchanged: 0/0
 31250 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31252 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31254 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31255 ;;Total ram usage:        4 bytes
 31256 ;; Hardware stack levels used: 1
 31257 ;; Hardware stack levels required when called: 7
 31258 ;; This function calls:
 31259 ;;		_APP_GetEventIndexState
 31260 ;;		_canpanSendProducedEvent
 31261 ;; This function is called by:
 31262 ;;		_doSoD
 31263 ;;		_pollTimedResponse
 31264 ;; This function uses a non-reentrant model
 31265 ;;
 31266                           
 31267                           	psect	text30
 31268   016034                     __ptext30:
 31269                           	callstack 0
 31270   016034                     _sodTRCallback:
 31271                           	callstack 117
 31272                           
 31273                           ;../canpan3Inputs.c: 351:     EventState value;;../canpan3Inputs.c: 352:     uint8_t sv;
      +                          ;../canpan3Inputs.c: 354:     if (tableIndex >= 254) {
 31274                           
 31275                           ;incstack = 0
 31276   016034  0EFD               	movlw	253
 31277   016036  6432               	cpfsgt	sodTRCallback@tableIndex^(0+1280),c
 31278   016038  D002               	goto	l9947
 31279                           
 31280                           ;../canpan3Inputs.c: 355:         return TIMED_RESPONSE_RESULT_FINISHED;
 31281   01603A  0E00               	movlw	0
 31282   01603C  0012               	return	
 31283   01603E                     l9947:
 31284                           
 31285                           ;../canpan3Inputs.c: 358:     value = APP_GetEventIndexState(tableIndex);
 31286   01603E  5032               	movf	sodTRCallback@tableIndex^(0+1280),w,c
 31287   016040  ECA0  F0AE         	call	_APP_GetEventIndexState
 31288   016044  6E34               	movwf	sodTRCallback@value^(0+1280),c
 31289                           
 31290                           ;../canpan3Inputs.c: 360:     if (value != EVENT_UNKNOWN) {
 31291   016046  2834               	incf	sodTRCallback@value^(0+1280),w,c
 31292   016048  B4D8               	btfsc	status,2,c
 31293   01604A  D00E               	goto	l9955
 31294                           
 31295                           ;../canpan3Inputs.c: 361:         sv = evs[2];
 31296   01604C  C673  F533         	movff	_evs+2,sodTRCallback@sv
 31297                           
 31298                           ;../canpan3Inputs.c: 362:         if (!(sv & 0b00000100)) {
 31299   016050  B433               	btfsc	sodTRCallback@sv^(0+1280),2,c
 31300   016052  D00A               	goto	l9955
 31301                           
 31302                           ;../canpan3Inputs.c: 363:             canpanSendProducedEvent(tableIndex, value==EVENT_O
      +                          N);
 31303   016054  0434               	decf	sodTRCallback@value^(0+1280),w,c
 31304   016056  A4D8               	btfss	status,2,c
 31305   016058  D002               	goto	u7850
 31306   01605A  0E01               	movlw	1
 31307   01605C  D001               	goto	u7860
 31308   01605E                     u7850:
 31309   01605E  0E00               	movlw	0
 31310   016060                     u7860:
 31311   016060  6E2A               	movwf	canpanSendProducedEvent@onOff^(0+1280),c
 31312   016062  5032               	movf	sodTRCallback@tableIndex^(0+1280),w,c
 31313   016064  EC76  F0AA         	call	_canpanSendProducedEvent
 31314   016068                     l9955:
 31315                           
 31316                           ;../canpan3Inputs.c: 366:     return TIMED_RESPONSE_RESULT_NEXT;
 31317   016068  0E02               	movlw	2
 31318   01606A  0012               	return		;funcret
 31319   01606C                     __end_of_sodTRCallback:
 31320                           	callstack 0
 31321                           
 31322 ;; *************** function _tableIndexToEvtIdx *****************
 31323 ;; Defined at:
 31324 ;;		line 971 in file "../../VLCBlib_PIC/event_teach_simple.c"
 31325 ;; Parameters:    Size  Location     Type
 31326 ;;  tableIndex      1    wreg     unsigned char 
 31327 ;; Auto vars:     Size  Location     Type
 31328 ;;  tableIndex      1    0[COMRAM] unsigned char 
 31329 ;; Return value:  Size  Location     Type
 31330 ;;                  1    wreg      unsigned char 
 31331 ;; Registers used:
 31332 ;;		wreg, status,2, status,0
 31333 ;; Tracked objects:
 31334 ;;		On entry : 0/0
 31335 ;;		On exit  : 0/0
 31336 ;;		Unchanged: 0/0
 31337 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31339 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31341 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31342 ;;Total ram usage:        1 bytes
 31343 ;; Hardware stack levels used: 1
 31344 ;; Hardware stack levels required when called: 1
 31345 ;; This function calls:
 31346 ;;		Nothing
 31347 ;; This function is called by:
 31348 ;;		_nerdCallback
 31349 ;;		_reqevCallback
 31350 ;; This function uses a non-reentrant model
 31351 ;;
 31352                           
 31353                           	psect	text31
 31354   0167A8                     __ptext31:
 31355                           	callstack 0
 31356   0167A8                     _tableIndexToEvtIdx:
 31357                           	callstack 122
 31358                           
 31359                           ;incstack = 0
 31360                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 31361   0167A8  6E01               	movwf	tableIndexToEvtIdx@tableIndex^(0+1280),c
 31362                           
 31363                           ;../../VLCBlib_PIC/event_teach_simple.c: 972:     return tableIndex + 1;
 31364   0167AA  2801               	incf	tableIndexToEvtIdx@tableIndex^(0+1280),w,c
 31365   0167AC  0012               	return		;funcret
 31366   0167AE                     __end_of_tableIndexToEvtIdx:
 31367                           	callstack 0
 31368                           
 31369 ;; *************** function _canPoll *****************
 31370 ;; Defined at:
 31371 ;;		line 443 in file "../../VLCBlib_PIC/can18_can_2.c"
 31372 ;; Parameters:    Size  Location     Type
 31373 ;;		None
 31374 ;; Auto vars:     Size  Location     Type
 31375 ;;  t8              1    0        unsigned char 
 31376 ;; Return value:  Size  Location     Type
 31377 ;;                  1    wreg      void 
 31378 ;; Registers used:
 31379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31380 ;; Tracked objects:
 31381 ;;		On entry : 0/0
 31382 ;;		On exit  : 0/0
 31383 ;;		Unchanged: 0/0
 31384 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31389 ;;Total ram usage:        0 bytes
 31390 ;; Hardware stack levels used: 1
 31391 ;; Hardware stack levels required when called: 8
 31392 ;; This function calls:
 31393 ;;		_processEnumeration
 31394 ;; This function is called by:
 31395 ;;		_poll
 31396 ;; This function uses a non-reentrant model
 31397 ;;
 31398                           
 31399                           	psect	text32
 31400   0167AE                     __ptext32:
 31401                           	callstack 0
 31402   0167AE                     _canPoll:
 31403                           	callstack 117
 31404                           
 31405                           ;../../VLCBlib_PIC/can18_can_2.c: 444:     uint8_t t8;;../../VLCBlib_PIC/can18_can_2.c: 
      +                          446:     processEnumeration();
 31406                           
 31407                           ;incstack = 0
 31408   0167AE  ECCF  F099         	call	_processEnumeration	;wreg free
 31409   0167B2  0012               	return		;funcret
 31410   0167B4                     __end_of_canPoll:
 31411                           	callstack 0
 31412                           
 31413 ;; *************** function _mnsPoll *****************
 31414 ;; Defined at:
 31415 ;;		line 650 in file "../../VLCBlib_PIC/mns.c"
 31416 ;; Parameters:    Size  Location     Type
 31417 ;;		None
 31418 ;; Auto vars:     Size  Location     Type
 31419 ;;		None
 31420 ;; Return value:  Size  Location     Type
 31421 ;;                  1    wreg      void 
 31422 ;; Registers used:
 31423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31424 ;; Tracked objects:
 31425 ;;		On entry : 0/0
 31426 ;;		On exit  : 0/0
 31427 ;;		Unchanged: 0/0
 31428 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 31429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31431 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31432 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 31433 ;;Total ram usage:        4 bytes
 31434 ;; Hardware stack levels used: 1
 31435 ;; Hardware stack levels required when called: 6
 31436 ;; This function calls:
 31437 ;;		_sendMessage2
 31438 ;;		_sendMessage5
 31439 ;;		_setLEDsByMode
 31440 ;;		_tickGet
 31441 ;;		_writeNVM
 31442 ;; This function is called by:
 31443 ;;		_poll
 31444 ;; This function uses a non-reentrant model
 31445 ;;
 31446                           
 31447                           	psect	text33
 31448   0114DE                     __ptext33:
 31449                           	callstack 0
 31450   0114DE                     _mnsPoll:
 31451                           	callstack 119
 31452                           
 31453                           ;../../VLCBlib_PIC/mns.c: 653:     if (mode_state == MODE_NORMAL) {
 31454                           
 31455                           ;incstack = 0
 31456   0114DE  0105               	movlb	5	; () banked
 31457   0114E0  0591               	decf	_mode_state& (0+255),w,b
 31458   0114E2  A4D8               	btfss	status,2,c
 31459   0114E4  D039               	goto	l12127
 31460                           
 31461                           ; BSR set to: 5
 31462                           ;../../VLCBlib_PIC/mns.c: 654:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 31463   0114E6  EC7A  F0AC         	call	_tickGet	;wreg free
 31464   0114EA  0106               	movlb	6	; () banked
 31465   0114EC  5196               	movf	_heartbeatTimer& (0+255),w,b
 31466   0114EE  5C01               	subwf	?_tickGet^(0+1280),w,c
 31467   0114F0  6E2B               	movwf	??_mnsPoll^(0+1280),c
 31468   0114F2  5197               	movf	(_heartbeatTimer+1)& (0+255),w,b
 31469   0114F4  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 31470   0114F6  6E2C               	movwf	(??_mnsPoll+1)^(0+1280),c
 31471   0114F8  5198               	movf	(_heartbeatTimer+2)& (0+255),w,b
 31472   0114FA  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 31473   0114FC  6E2D               	movwf	(??_mnsPoll+2)^(0+1280),c
 31474   0114FE  5199               	movf	(_heartbeatTimer+3)& (0+255),w,b
 31475   011500  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 31476   011502  6E2E               	movwf	(??_mnsPoll+3)^(0+1280),c
 31477   011504  502E               	movf	(??_mnsPoll+3)^(0+1280),w,c
 31478   011506  E108               	bnz	u10320
 31479   011508  0EB5               	movlw	181
 31480   01150A  5C2B               	subwf	??_mnsPoll^(0+1280),w,c
 31481   01150C  0EC4               	movlw	196
 31482   01150E  582C               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 31483   011510  0E04               	movlw	4
 31484   011512  582D               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 31485   011514  A0D8               	btfss	status,0,c
 31486   011516  D020               	goto	l12127
 31487   011518                     u10320:
 31488                           
 31489                           ; BSR set to: 6
 31490                           ;../../VLCBlib_PIC/mns.c: 655:             if (mode_flags & 4) {
 31491   011518  0105               	movlb	5	; () banked
 31492   01151A  A5A0               	btfss	_mode_flags& (0+255),2,b
 31493   01151C  D00F               	goto	l12121
 31494                           
 31495                           ; BSR set to: 5
 31496                           ;../../VLCBlib_PIC/mns.c: 656:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x01].asBytes.lo,0);
 31497   01151E  C55F  F525         	movff	_nn+1,sendMessage5@data1
 31498   011522  C55E  F526         	movff	_nn,sendMessage5@data2
 31499   011526  C58C  F527         	movff	_heartbeatSequence,sendMessage5@data3
 31500   01152A  C5A5  F528         	movff	_mnsDiagnostics+2,sendMessage5@data4
 31501   01152E  0E00               	movlw	0
 31502   011530  6E29               	movwf	sendMessage5@data5^(0+1280),c
 31503   011532  0EAB               	movlw	171
 31504   011534  ECCD  F0B1         	call	_sendMessage5
 31505   011538  0105               	movlb	5	; () banked
 31506   01153A  2B8C               	incf	_heartbeatSequence& (0+255),f,b
 31507   01153C                     l12121:
 31508                           
 31509                           ; BSR set to: 5
 31510                           ;../../VLCBlib_PIC/mns.c: 658:             heartbeatTimer.val = tickGet();
 31511   01153C  EC7A  F0AC         	call	_tickGet	;wreg free
 31512   011540  C501  F696         	movff	?_tickGet,_heartbeatTimer
 31513   011544  C502  F697         	movff	?_tickGet+1,_heartbeatTimer+1
 31514   011548  C503  F698         	movff	?_tickGet+2,_heartbeatTimer+2
 31515   01154C  C504  F699         	movff	?_tickGet+3,_heartbeatTimer+3
 31516                           
 31517                           ;../../VLCBlib_PIC/mns.c: 659:             if (mnsDiagnostics[0x01].asBytes.lo > 0) {
 31518   011550  0105               	movlb	5	; () banked
 31519   011552  51A5               	movf	(_mnsDiagnostics+2)& (0+255),w,b
 31520   011554  A4D8               	btfss	status,2,c
 31521                           
 31522                           ; BSR set to: 5
 31523                           ;../../VLCBlib_PIC/mns.c: 660:                 mnsDiagnostics[0x01].asBytes.lo--;
 31524   011556  07A5               	decf	(_mnsDiagnostics+2)& (0+255),f,b
 31525   011558                     l12127:
 31526                           
 31527                           ;../../VLCBlib_PIC/mns.c: 667:     if (mode_flags != last_mode_flags) {
 31528   011558  0105               	movlb	5	; () banked
 31529   01155A  518F               	movf	_last_mode_flags& (0+255),w,b
 31530   01155C  19A0               	xorwf	_mode_flags& (0+255),w,b
 31531   01155E  B4D8               	btfsc	status,2,c
 31532   011560  D00D               	goto	l12133
 31533                           
 31534                           ; BSR set to: 5
 31535                           ;../../VLCBlib_PIC/mns.c: 668:         writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 31536   011562  0EF9               	movlw	249
 31537   011564  6E0E               	movwf	writeNVM@index^(0+1280),c
 31538   011566  0E03               	movlw	3
 31539   011568  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 31540   01156A  0E00               	movlw	0
 31541   01156C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 31542   01156E  C5A0  F511         	movff	_mode_flags,writeNVM@value
 31543   011572  0E00               	movlw	0
 31544   011574  ECC3  F0AD         	call	_writeNVM
 31545                           
 31546                           ;../../VLCBlib_PIC/mns.c: 669:         last_mode_flags = mode_flags;
 31547   011578  C5A0  F58F         	movff	_mode_flags,_last_mode_flags
 31548   01157C                     l12133:
 31549                           
 31550                           ;../../VLCBlib_PIC/mns.c: 671:     if (mode_state != last_mode_state) {
 31551   01157C  0105               	movlb	5	; () banked
 31552   01157E  5190               	movf	_last_mode_state& (0+255),w,b
 31553   011580  1991               	xorwf	_mode_state& (0+255),w,b
 31554   011582  B4D8               	btfsc	status,2,c
 31555   011584  D013               	goto	l12143
 31556                           
 31557                           ; BSR set to: 5
 31558                           ;../../VLCBlib_PIC/mns.c: 673:         if ((mode_state == MODE_UNINITIALISED) || (mode_s
      +                          tate == MODE_NORMAL)) {
 31559   011586  2991               	incf	_mode_state& (0+255),w,b
 31560   011588  B4D8               	btfsc	status,2,c
 31561   01158A  D003               	goto	u10380
 31562                           
 31563                           ; BSR set to: 5
 31564   01158C  0591               	decf	_mode_state& (0+255),w,b
 31565   01158E  A4D8               	btfss	status,2,c
 31566   011590  D00B               	goto	l12141
 31567   011592                     u10380:
 31568                           
 31569                           ; BSR set to: 5
 31570                           ;../../VLCBlib_PIC/mns.c: 674:             writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 31571   011592  0EFB               	movlw	251
 31572   011594  6E0E               	movwf	writeNVM@index^(0+1280),c
 31573   011596  0E03               	movlw	3
 31574   011598  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 31575   01159A  0E00               	movlw	0
 31576   01159C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 31577   01159E  C591  F511         	movff	_mode_state,writeNVM@value
 31578   0115A2  0E00               	movlw	0
 31579   0115A4  ECC3  F0AD         	call	_writeNVM
 31580   0115A8                     l12141:
 31581                           
 31582                           ;../../VLCBlib_PIC/mns.c: 676:         last_mode_state = mode_state;
 31583   0115A8  C591  F590         	movff	_mode_state,_last_mode_state
 31584   0115AC                     l12143:
 31585                           
 31586                           ;../../VLCBlib_PIC/mns.c: 680:     if ((tickGet() - uptimeTimer.val) > 62500) {
 31587   0115AC  EC7A  F0AC         	call	_tickGet	;wreg free
 31588   0115B0  0106               	movlb	6	; () banked
 31589   0115B2  5192               	movf	_uptimeTimer& (0+255),w,b
 31590   0115B4  5C01               	subwf	?_tickGet^(0+1280),w,c
 31591   0115B6  6E2B               	movwf	??_mnsPoll^(0+1280),c
 31592   0115B8  5193               	movf	(_uptimeTimer+1)& (0+255),w,b
 31593   0115BA  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 31594   0115BC  6E2C               	movwf	(??_mnsPoll+1)^(0+1280),c
 31595   0115BE  5194               	movf	(_uptimeTimer+2)& (0+255),w,b
 31596   0115C0  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 31597   0115C2  6E2D               	movwf	(??_mnsPoll+2)^(0+1280),c
 31598   0115C4  5195               	movf	(_uptimeTimer+3)& (0+255),w,b
 31599   0115C6  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 31600   0115C8  6E2E               	movwf	(??_mnsPoll+3)^(0+1280),c
 31601   0115CA  502E               	movf	(??_mnsPoll+3)^(0+1280),w,c
 31602   0115CC  102D               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 31603   0115CE  E106               	bnz	u10390
 31604   0115D0  0E25               	movlw	37
 31605   0115D2  5C2B               	subwf	??_mnsPoll^(0+1280),w,c
 31606   0115D4  0EF4               	movlw	244
 31607   0115D6  582C               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 31608   0115D8  A0D8               	btfss	status,0,c
 31609   0115DA  D142               	goto	l12231
 31610   0115DC                     u10390:
 31611                           
 31612                           ; BSR set to: 6
 31613                           ;../../VLCBlib_PIC/mns.c: 681:         uptimeTimer.val = tickGet();
 31614   0115DC  EC7A  F0AC         	call	_tickGet	;wreg free
 31615   0115E0  C501  F692         	movff	?_tickGet,_uptimeTimer
 31616   0115E4  C502  F693         	movff	?_tickGet+1,_uptimeTimer+1
 31617   0115E8  C503  F694         	movff	?_tickGet+2,_uptimeTimer+2
 31618   0115EC  C504  F695         	movff	?_tickGet+3,_uptimeTimer+3
 31619                           
 31620                           ;../../VLCBlib_PIC/mns.c: 682:         mnsDiagnostics[0x03].asUint++;
 31621   0115F0  0105               	movlb	5	; () banked
 31622   0115F2  4BA9               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 31623   0115F4  2BAA               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 31624                           
 31625                           ; BSR set to: 5
 31626                           ;../../VLCBlib_PIC/mns.c: 683:         if (mnsDiagnostics[0x03].asUint == 0) {
 31627   0115F6  51A9               	movf	(_mnsDiagnostics+6)& (0+255),w,b
 31628   0115F8  11AA               	iorwf	(_mnsDiagnostics+7)& (0+255),w,b
 31629   0115FA  A4D8               	btfss	status,2,c
 31630   0115FC  D131               	goto	l12231
 31631                           
 31632                           ; BSR set to: 5
 31633                           ;../../VLCBlib_PIC/mns.c: 684:             mnsDiagnostics[0x02].asUint++;
 31634   0115FE  4BA7               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 31635   011600  2BA8               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 31636   011602  D12E               	goto	l12231
 31637   011604                     l1669:
 31638                           
 31639                           ; BSR set to: 5
 31640                           ;../../VLCBlib_PIC/mns.c: 693:             if ((!(PORTAbits.RA3)) == 0) {
 31641   011604  A6CE               	btfss	206,3,c	;volatile
 31642   011606  D00B               	goto	l12155
 31643   011608                     u10410:
 31644                           
 31645                           ;../../VLCBlib_PIC/mns.c: 695:                 pbTimer.val = tickGet();
 31646   011608  EC7A  F0AC         	call	_tickGet	;wreg free
 31647   01160C  C501  F560         	movff	?_tickGet,_pbTimer
 31648   011610  C502  F561         	movff	?_tickGet+1,_pbTimer+1
 31649   011614  C503  F562         	movff	?_tickGet+2,_pbTimer+2
 31650   011618  C504  F563         	movff	?_tickGet+3,_pbTimer+3
 31651                           
 31652                           ;../../VLCBlib_PIC/mns.c: 696:             } else {
 31653   01161C  0012               	return	
 31654   01161E                     l12155:
 31655                           
 31656                           ; BSR set to: 5
 31657                           ;../../VLCBlib_PIC/mns.c: 698:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 31658   01161E  EC7A  F0AC         	call	_tickGet	;wreg free
 31659   011622  0105               	movlb	5	; () banked
 31660   011624  5160               	movf	_pbTimer& (0+255),w,b
 31661   011626  5C01               	subwf	?_tickGet^(0+1280),w,c
 31662   011628  6E2B               	movwf	??_mnsPoll^(0+1280),c
 31663   01162A  5161               	movf	(_pbTimer+1)& (0+255),w,b
 31664   01162C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 31665   01162E  6E2C               	movwf	(??_mnsPoll+1)^(0+1280),c
 31666   011630  5162               	movf	(_pbTimer+2)& (0+255),w,b
 31667   011632  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 31668   011634  6E2D               	movwf	(??_mnsPoll+2)^(0+1280),c
 31669   011636  5163               	movf	(_pbTimer+3)& (0+255),w,b
 31670   011638  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 31671   01163A  6E2E               	movwf	(??_mnsPoll+3)^(0+1280),c
 31672   01163C  502E               	movf	(??_mnsPoll+3)^(0+1280),w,c
 31673   01163E  E108               	bnz	u10420
 31674   011640  0E91               	movlw	145
 31675   011642  5C2B               	subwf	??_mnsPoll^(0+1280),w,c
 31676   011644  0ED0               	movlw	208
 31677   011646  582C               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 31678   011648  0E03               	movlw	3
 31679   01164A  582D               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 31680   01164C  A0D8               	btfss	status,0,c
 31681   01164E  0012               	return	
 31682   011650                     u10420:
 31683                           
 31684                           ; BSR set to: 5
 31685                           ;../../VLCBlib_PIC/mns.c: 700:                     mode_state = 0xFD;
 31686   011650  0EFD               	movlw	253
 31687   011652  6F91               	movwf	_mode_state& (0+255),b
 31688                           
 31689                           ; BSR set to: 5
 31690                           ;../../VLCBlib_PIC/mns.c: 701:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 31691   011654  698E               	setf	_setupModePreviousMode& (0+255),b
 31692                           
 31693                           ; BSR set to: 5
 31694                           ;../../VLCBlib_PIC/mns.c: 702:                     setLEDsByMode();
 31695   011656  ECD7  F0B0         	call	_setLEDsByMode	;wreg free
 31696   01165A  0012               	return	
 31697   01165C                     l1674:
 31698                           
 31699                           ; BSR set to: 5
 31700                           ;../../VLCBlib_PIC/mns.c: 707:             if ((!(PORTAbits.RA3)) == 0) {
 31701   01165C  A6CE               	btfss	206,3,c	;volatile
 31702   01165E  D7D4               	goto	u10410
 31703                           
 31704                           ; BSR set to: 5
 31705                           ;../../VLCBlib_PIC/mns.c: 711:                 mode_state = MODE_SETUP;
 31706   011660  6B91               	clrf	_mode_state& (0+255),b
 31707                           
 31708                           ;../../VLCBlib_PIC/mns.c: 712:                 setupModePreviousMode = MODE_UNINITIALISE
      +                          D;
 31709   011662  698E               	setf	_setupModePreviousMode& (0+255),b
 31710                           
 31711                           ; BSR set to: 5
 31712                           ;../../VLCBlib_PIC/mns.c: 713:                 pbTimer.val = tickGet();
 31713   011664  EC7A  F0AC         	call	_tickGet	;wreg free
 31714   011668  C501  F560         	movff	?_tickGet,_pbTimer
 31715   01166C  C502  F561         	movff	?_tickGet+1,_pbTimer+1
 31716   011670  C503  F562         	movff	?_tickGet+2,_pbTimer+2
 31717   011674  C504  F563         	movff	?_tickGet+3,_pbTimer+3
 31718                           
 31719                           ;../../VLCBlib_PIC/mns.c: 715:                 sendMessage2(OPC_RQNN, nn.bytes.hi, nn.by
      +                          tes.lo);
 31720   011678  C55F  F525         	movff	_nn+1,sendMessage2@data1
 31721   01167C  C55E  F526         	movff	_nn,sendMessage2@data2
 31722   011680  0E50               	movlw	80
 31723   011682  ECA3  F0B1         	call	_sendMessage2
 31724                           
 31725                           ;../../VLCBlib_PIC/mns.c: 716:                 setLEDsByMode();
 31726   011686  ECD7  F0B0         	call	_setLEDsByMode	;wreg free
 31727   01168A  D7BE               	goto	u10410
 31728   01168C                     l1676:
 31729                           
 31730                           ; BSR set to: 5
 31731                           ;../../VLCBlib_PIC/mns.c: 721:             if ((!(PORTAbits.RA3)) == 0) {
 31732   01168C  A6CE               	btfss	206,3,c	;volatile
 31733   01168E  D06F               	goto	l12197
 31734                           
 31735                           ; BSR set to: 5
 31736                           ;../../VLCBlib_PIC/mns.c: 724:                 if (((tickGet() - pbTimer.val) > (62500/1
      +                          0)) && ((tickGet() - pbTimer.val) < 2*62500)) {
 31737   011690  EC7A  F0AC         	call	_tickGet	;wreg free
 31738   011694  0105               	movlb	5	; () banked
 31739   011696  5160               	movf	_pbTimer& (0+255),w,b
 31740   011698  5C01               	subwf	?_tickGet^(0+1280),w,c
 31741   01169A  6E2B               	movwf	??_mnsPoll^(0+1280),c
 31742   01169C  5161               	movf	(_pbTimer+1)& (0+255),w,b
 31743   01169E  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 31744   0116A0  6E2C               	movwf	(??_mnsPoll+1)^(0+1280),c
 31745   0116A2  5162               	movf	(_pbTimer+2)& (0+255),w,b
 31746   0116A4  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 31747   0116A6  6E2D               	movwf	(??_mnsPoll+2)^(0+1280),c
 31748   0116A8  5163               	movf	(_pbTimer+3)& (0+255),w,b
 31749   0116AA  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 31750   0116AC  6E2E               	movwf	(??_mnsPoll+3)^(0+1280),c
 31751   0116AE  502E               	movf	(??_mnsPoll+3)^(0+1280),w,c
 31752   0116B0  102D               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 31753   0116B2  E106               	bnz	u10450
 31754   0116B4  0E6B               	movlw	107
 31755   0116B6  5C2B               	subwf	??_mnsPoll^(0+1280),w,c
 31756   0116B8  0E18               	movlw	24
 31757   0116BA  582C               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 31758   0116BC  A0D8               	btfss	status,0,c
 31759   0116BE  D02E               	goto	l12189
 31760   0116C0                     u10450:
 31761                           
 31762                           ; BSR set to: 5
 31763   0116C0  EC7A  F0AC         	call	_tickGet	;wreg free
 31764   0116C4  0105               	movlb	5	; () banked
 31765   0116C6  5160               	movf	_pbTimer& (0+255),w,b
 31766   0116C8  5C01               	subwf	?_tickGet^(0+1280),w,c
 31767   0116CA  6E2B               	movwf	??_mnsPoll^(0+1280),c
 31768   0116CC  5161               	movf	(_pbTimer+1)& (0+255),w,b
 31769   0116CE  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 31770   0116D0  6E2C               	movwf	(??_mnsPoll+1)^(0+1280),c
 31771   0116D2  5162               	movf	(_pbTimer+2)& (0+255),w,b
 31772   0116D4  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 31773   0116D6  6E2D               	movwf	(??_mnsPoll+2)^(0+1280),c
 31774   0116D8  5163               	movf	(_pbTimer+3)& (0+255),w,b
 31775   0116DA  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 31776   0116DC  6E2E               	movwf	(??_mnsPoll+3)^(0+1280),c
 31777   0116DE  502E               	movf	(??_mnsPoll+3)^(0+1280),w,c
 31778   0116E0  E11D               	bnz	l12189
 31779   0116E2  0E48               	movlw	72
 31780   0116E4  5C2B               	subwf	??_mnsPoll^(0+1280),w,c
 31781   0116E6  0EE8               	movlw	232
 31782   0116E8  582C               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 31783   0116EA  0E01               	movlw	1
 31784   0116EC  582D               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 31785   0116EE  B0D8               	btfsc	status,0,c
 31786   0116F0  D015               	goto	l12189
 31787                           
 31788                           ; BSR set to: 5
 31789                           ;../../VLCBlib_PIC/mns.c: 726:                     mode_state = setupModePreviousMode;
 31790   0116F2  C58E  F591         	movff	_setupModePreviousMode,_mode_state
 31791                           
 31792                           ; BSR set to: 5
 31793                           ;../../VLCBlib_PIC/mns.c: 727:                     if (mode_state == MODE_NORMAL) {
 31794   0116F6  0591               	decf	_mode_state& (0+255),w,b
 31795   0116F8  A4D8               	btfss	status,2,c
 31796   0116FA  D00E               	goto	l12187
 31797                           
 31798                           ; BSR set to: 5
 31799                           ;../../VLCBlib_PIC/mns.c: 729:                         nn.word = previousNN.word;
 31800   0116FC  C57E  F55E         	movff	_previousNN,_nn
 31801   011700  C57F  F55F         	movff	_previousNN+1,_nn+1
 31802                           
 31803                           ; BSR set to: 5
 31804                           ;../../VLCBlib_PIC/mns.c: 730:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 31805   011704  C55F  F525         	movff	_nn+1,sendMessage2@data1
 31806   011708  C55E  F526         	movff	_nn,sendMessage2@data2
 31807   01170C  0E52               	movlw	82
 31808   01170E  ECA3  F0B1         	call	_sendMessage2
 31809                           
 31810                           ;../../VLCBlib_PIC/mns.c: 732:                         mnsDiagnostics[0x05].asUint++;
 31811   011712  0105               	movlb	5	; () banked
 31812   011714  4BAD               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 31813   011716  2BAE               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 31814   011718                     l12187:
 31815                           
 31816                           ; BSR set to: 5
 31817                           ;../../VLCBlib_PIC/mns.c: 735:                     setLEDsByMode();
 31818   011718  ECD7  F0B0         	call	_setLEDsByMode	;wreg free
 31819   01171C                     l12189:
 31820                           
 31821                           ;../../VLCBlib_PIC/mns.c: 737:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 31822   01171C  EC7A  F0AC         	call	_tickGet	;wreg free
 31823   011720  0105               	movlb	5	; () banked
 31824   011722  5160               	movf	_pbTimer& (0+255),w,b
 31825   011724  5C01               	subwf	?_tickGet^(0+1280),w,c
 31826   011726  6E2B               	movwf	??_mnsPoll^(0+1280),c
 31827   011728  5161               	movf	(_pbTimer+1)& (0+255),w,b
 31828   01172A  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 31829   01172C  6E2C               	movwf	(??_mnsPoll+1)^(0+1280),c
 31830   01172E  5162               	movf	(_pbTimer+2)& (0+255),w,b
 31831   011730  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 31832   011732  6E2D               	movwf	(??_mnsPoll+2)^(0+1280),c
 31833   011734  5163               	movf	(_pbTimer+3)& (0+255),w,b
 31834   011736  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 31835   011738  6E2E               	movwf	(??_mnsPoll+3)^(0+1280),c
 31836   01173A  502E               	movf	(??_mnsPoll+3)^(0+1280),w,c
 31837   01173C  E108               	bnz	u10480
 31838   01173E  0E91               	movlw	145
 31839   011740  5C2B               	subwf	??_mnsPoll^(0+1280),w,c
 31840   011742  0ED0               	movlw	208
 31841   011744  582C               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 31842   011746  0E03               	movlw	3
 31843   011748  582D               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 31844   01174A  A0D8               	btfss	status,0,c
 31845   01174C  D003               	goto	l1680
 31846   01174E                     u10480:
 31847                           
 31848                           ; BSR set to: 5
 31849                           ;../../VLCBlib_PIC/mns.c: 738:                     mode_state = MODE_UNINITIALISED;
 31850   01174E  6991               	setf	_mode_state& (0+255),b
 31851   011750                     l12193:
 31852                           
 31853                           ;../../VLCBlib_PIC/mns.c: 739:                     setLEDsByMode();
 31854   011750  ECD7  F0B0         	call	_setLEDsByMode	;wreg free
 31855   011754                     l1680:
 31856                           
 31857                           ;../../VLCBlib_PIC/mns.c: 741:                 pbTimer.val = tickGet();
 31858   011754  EC7A  F0AC         	call	_tickGet	;wreg free
 31859   011758  C501  F560         	movff	?_tickGet,_pbTimer
 31860   01175C  C502  F561         	movff	?_tickGet+1,_pbTimer+1
 31861   011760  C503  F562         	movff	?_tickGet+2,_pbTimer+2
 31862   011764  C504  F563         	movff	?_tickGet+3,_pbTimer+3
 31863                           
 31864                           ;../../VLCBlib_PIC/mns.c: 742:                 pbWasPushed = FALSE;
 31865   011768  0105               	movlb	5	; () banked
 31866   01176A  6B8D               	clrf	_pbWasPushed& (0+255),b
 31867                           
 31868                           ;../../VLCBlib_PIC/mns.c: 743:             } else {
 31869   01176C  0012               	return	
 31870   01176E                     l12197:
 31871                           
 31872                           ; BSR set to: 5
 31873                           ;../../VLCBlib_PIC/mns.c: 744:                 pbWasPushed = TRUE;
 31874   01176E  0E01               	movlw	1
 31875   011770  6F8D               	movwf	_pbWasPushed& (0+255),b
 31876   011772  0012               	return	
 31877   011774                     l1682:
 31878                           
 31879                           ; BSR set to: 5
 31880                           ;../../VLCBlib_PIC/mns.c: 749:             if ((!(PORTAbits.RA3)) == 0) {
 31881   011774  A6CE               	btfss	206,3,c	;volatile
 31882   011776  D7FB               	goto	l12197
 31883                           
 31884                           ; BSR set to: 5
 31885                           ;../../VLCBlib_PIC/mns.c: 751:                 if (pbWasPushed && ((tickGet() - pbTimer.
      +                          val) > (62500/10)) && ((tickGet() - pbTimer.val) < 2*62500)) {
 31886   011778  518D               	movf	_pbWasPushed& (0+255),w,b
 31887   01177A  B4D8               	btfsc	status,2,c
 31888   01177C  D043               	goto	l12213
 31889                           
 31890                           ; BSR set to: 5
 31891   01177E  EC7A  F0AC         	call	_tickGet	;wreg free
 31892   011782  0105               	movlb	5	; () banked
 31893   011784  5160               	movf	_pbTimer& (0+255),w,b
 31894   011786  5C01               	subwf	?_tickGet^(0+1280),w,c
 31895   011788  6E2B               	movwf	??_mnsPoll^(0+1280),c
 31896   01178A  5161               	movf	(_pbTimer+1)& (0+255),w,b
 31897   01178C  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 31898   01178E  6E2C               	movwf	(??_mnsPoll+1)^(0+1280),c
 31899   011790  5162               	movf	(_pbTimer+2)& (0+255),w,b
 31900   011792  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 31901   011794  6E2D               	movwf	(??_mnsPoll+2)^(0+1280),c
 31902   011796  5163               	movf	(_pbTimer+3)& (0+255),w,b
 31903   011798  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 31904   01179A  6E2E               	movwf	(??_mnsPoll+3)^(0+1280),c
 31905   01179C  502E               	movf	(??_mnsPoll+3)^(0+1280),w,c
 31906   01179E  102D               	iorwf	(??_mnsPoll+2)^(0+1280),w,c
 31907   0117A0  E106               	bnz	u10510
 31908   0117A2  0E6B               	movlw	107
 31909   0117A4  5C2B               	subwf	??_mnsPoll^(0+1280),w,c
 31910   0117A6  0E18               	movlw	24
 31911   0117A8  582C               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 31912   0117AA  A0D8               	btfss	status,0,c
 31913   0117AC  D02B               	goto	l12213
 31914   0117AE                     u10510:
 31915                           
 31916                           ; BSR set to: 5
 31917   0117AE  EC7A  F0AC         	call	_tickGet	;wreg free
 31918   0117B2  0105               	movlb	5	; () banked
 31919   0117B4  5160               	movf	_pbTimer& (0+255),w,b
 31920   0117B6  5C01               	subwf	?_tickGet^(0+1280),w,c
 31921   0117B8  6E2B               	movwf	??_mnsPoll^(0+1280),c
 31922   0117BA  5161               	movf	(_pbTimer+1)& (0+255),w,b
 31923   0117BC  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 31924   0117BE  6E2C               	movwf	(??_mnsPoll+1)^(0+1280),c
 31925   0117C0  5162               	movf	(_pbTimer+2)& (0+255),w,b
 31926   0117C2  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 31927   0117C4  6E2D               	movwf	(??_mnsPoll+2)^(0+1280),c
 31928   0117C6  5163               	movf	(_pbTimer+3)& (0+255),w,b
 31929   0117C8  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 31930   0117CA  6E2E               	movwf	(??_mnsPoll+3)^(0+1280),c
 31931   0117CC  502E               	movf	(??_mnsPoll+3)^(0+1280),w,c
 31932   0117CE  E11A               	bnz	l12213
 31933   0117D0  0E48               	movlw	72
 31934   0117D2  5C2B               	subwf	??_mnsPoll^(0+1280),w,c
 31935   0117D4  0EE8               	movlw	232
 31936   0117D6  582C               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 31937   0117D8  0E01               	movlw	1
 31938   0117DA  582D               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 31939   0117DC  B0D8               	btfsc	status,0,c
 31940   0117DE  D012               	goto	l12213
 31941                           
 31942                           ; BSR set to: 5
 31943                           ;../../VLCBlib_PIC/mns.c: 753:                     previousNN.word = nn.word;
 31944   0117E0  C55E  F57E         	movff	_nn,_previousNN
 31945   0117E4  C55F  F57F         	movff	_nn+1,_previousNN+1
 31946                           
 31947                           ;../../VLCBlib_PIC/mns.c: 754:                     nn.bytes.lo = nn.bytes.hi = 0;
 31948   0117E8  6A5F               	clrf	(_nn+1)^(0+1280),c
 31949   0117EA  6A5E               	clrf	_nn^(0+1280),c
 31950                           
 31951                           ;../../VLCBlib_PIC/mns.c: 756:                     mode_state = MODE_SETUP;
 31952   0117EC  6B91               	clrf	_mode_state& (0+255),b
 31953                           
 31954                           ; BSR set to: 5
 31955                           ;../../VLCBlib_PIC/mns.c: 757:                     setupModePreviousMode = MODE_NORMAL;
 31956   0117EE  0E01               	movlw	1
 31957   0117F0  6F8E               	movwf	_setupModePreviousMode& (0+255),b
 31958                           
 31959                           ; BSR set to: 5
 31960                           ;../../VLCBlib_PIC/mns.c: 759:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 31961   0117F2  C57F  F525         	movff	_previousNN+1,sendMessage2@data1
 31962   0117F6  C57E  F526         	movff	_previousNN,sendMessage2@data2
 31963   0117FA  0E50               	movlw	80
 31964   0117FC  ECA3  F0B1         	call	_sendMessage2
 31965                           
 31966                           ;../../VLCBlib_PIC/mns.c: 760:                     setLEDsByMode();
 31967   011800  ECD7  F0B0         	call	_setLEDsByMode	;wreg free
 31968   011804                     l12213:
 31969                           
 31970                           ;../../VLCBlib_PIC/mns.c: 762:                 if (pbWasPushed &&((tickGet() - pbTimer.v
      +                          al) >= 4*62500)) {
 31971   011804  0105               	movlb	5	; () banked
 31972   011806  518D               	movf	_pbWasPushed& (0+255),w,b
 31973   011808  B4D8               	btfsc	status,2,c
 31974   01180A  D7A4               	goto	l1680
 31975                           
 31976                           ; BSR set to: 5
 31977   01180C  EC7A  F0AC         	call	_tickGet	;wreg free
 31978   011810  0105               	movlb	5	; () banked
 31979   011812  5160               	movf	_pbTimer& (0+255),w,b
 31980   011814  5C01               	subwf	?_tickGet^(0+1280),w,c
 31981   011816  6E2B               	movwf	??_mnsPoll^(0+1280),c
 31982   011818  5161               	movf	(_pbTimer+1)& (0+255),w,b
 31983   01181A  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 31984   01181C  6E2C               	movwf	(??_mnsPoll+1)^(0+1280),c
 31985   01181E  5162               	movf	(_pbTimer+2)& (0+255),w,b
 31986   011820  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 31987   011822  6E2D               	movwf	(??_mnsPoll+2)^(0+1280),c
 31988   011824  5163               	movf	(_pbTimer+3)& (0+255),w,b
 31989   011826  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 31990   011828  6E2E               	movwf	(??_mnsPoll+3)^(0+1280),c
 31991   01182A  502E               	movf	(??_mnsPoll+3)^(0+1280),w,c
 31992   01182C  E108               	bnz	u10540
 31993   01182E  0E90               	movlw	144
 31994   011830  5C2B               	subwf	??_mnsPoll^(0+1280),w,c
 31995   011832  0ED0               	movlw	208
 31996   011834  582C               	subwfb	(??_mnsPoll+1)^(0+1280),w,c
 31997   011836  0E03               	movlw	3
 31998   011838  582D               	subwfb	(??_mnsPoll+2)^(0+1280),w,c
 31999   01183A  A0D8               	btfss	status,0,c
 32000   01183C  D78B               	goto	l1680
 32001   01183E                     u10540:
 32002                           
 32003                           ; BSR set to: 5
 32004                           ;../../VLCBlib_PIC/mns.c: 764:                     previousNN.word = nn.word;
 32005   01183E  C55E  F57E         	movff	_nn,_previousNN
 32006   011842  C55F  F57F         	movff	_nn+1,_previousNN+1
 32007                           
 32008                           ;../../VLCBlib_PIC/mns.c: 765:                     nn.bytes.lo = nn.bytes.hi = 0;
 32009   011846  6A5F               	clrf	(_nn+1)^(0+1280),c
 32010   011848  6A5E               	clrf	_nn^(0+1280),c
 32011                           
 32012                           ;../../VLCBlib_PIC/mns.c: 767:                     mode_state = MODE_UNINITIALISED;
 32013   01184A  6991               	setf	_mode_state& (0+255),b
 32014                           
 32015                           ; BSR set to: 5
 32016                           ;../../VLCBlib_PIC/mns.c: 768:                     setupModePreviousMode = MODE_NORMAL;
 32017   01184C  0E01               	movlw	1
 32018   01184E  6F8E               	movwf	_setupModePreviousMode& (0+255),b
 32019                           
 32020                           ; BSR set to: 5
 32021                           ;../../VLCBlib_PIC/mns.c: 770:                     sendMessage2(OPC_NNREL, previousNN.by
      +                          tes.hi, previousNN.bytes.lo);
 32022   011850  C57F  F525         	movff	_previousNN+1,sendMessage2@data1
 32023   011854  C57E  F526         	movff	_previousNN,sendMessage2@data2
 32024   011858  0E51               	movlw	81
 32025   01185A  ECA3  F0B1         	call	_sendMessage2
 32026   01185E  D778               	goto	l12193
 32027   011860                     l12231:
 32028   011860  0105               	movlb	5	; () banked
 32029   011862  5191               	movf	_mode_state& (0+255),w,b
 32030                           
 32031                           ; Switch size 1, requested type "simple"
 32032                           ; Number of cases is 3, Range of values is 0 to 255
 32033                           ; switch strategies available:
 32034                           ; Name         Instructions Cycles
 32035                           ; simple_byte           10     6 (average)
 32036                           ;	Chosen strategy is simple_byte
 32037   011864  0A00               	xorlw	0	; case 0
 32038   011866  B4D8               	btfsc	status,2,c
 32039   011868  D711               	goto	l1676
 32040   01186A  0AFD               	xorlw	253	; case 253
 32041   01186C  B4D8               	btfsc	status,2,c
 32042   01186E  D6F6               	goto	l1674
 32043   011870  0A02               	xorlw	2	; case 255
 32044   011872  B4D8               	btfsc	status,2,c
 32045   011874  D6C7               	goto	l1669
 32046   011876  D77E               	goto	l1682
 32047   011878                     __end_of_mnsPoll:
 32048                           	callstack 0
 32049                           
 32050 ;; *************** function _canReceiveMessage *****************
 32051 ;; Defined at:
 32052 ;;		line 700 in file "../../VLCBlib_PIC/can18_can_2.c"
 32053 ;; Parameters:    Size  Location     Type
 32054 ;;  m               2   15[COMRAM] PTR struct Message
 32055 ;;		 -> poll@m(9), 
 32056 ;; Auto vars:     Size  Location     Type
 32057 ;;  rxFifoObj       2   23[COMRAM] PTR unsigned char 
 32058 ;;		 -> RAM(16383), 
 32059 ;;  temp            2   21[COMRAM] unsigned short 
 32060 ;;  mp              2   19[COMRAM] PTR struct Message
 32061 ;;		 -> rxBuffers(72), NULL(0), 
 32062 ;;  incomingCanI    1   18[COMRAM] unsigned char 
 32063 ;; Return value:  Size  Location     Type
 32064 ;;                  1    wreg      enum E23614
 32065 ;; Registers used:
 32066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32067 ;; Tracked objects:
 32068 ;;		On entry : 0/0
 32069 ;;		On exit  : 0/0
 32070 ;;		Unchanged: 0/0
 32071 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32072 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32073 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32074 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32075 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32076 ;;Total ram usage:       10 bytes
 32077 ;; Hardware stack levels used: 1
 32078 ;; Hardware stack levels required when called: 3
 32079 ;; This function calls:
 32080 ;;		_getNumRxBuffersInUse
 32081 ;;		_handleSelfEnumeration
 32082 ;;		_memcpy
 32083 ;;		_pop
 32084 ;; This function is called by:
 32085 ;;		_poll
 32086 ;; This function uses a non-reentrant model
 32087 ;;
 32088                           
 32089                           	psect	text34
 32090   012EF4                     __ptext34:
 32091                           	callstack 0
 32092   012EF4                     _canReceiveMessage:
 32093                           	callstack 122
 32094                           
 32095                           ;../../VLCBlib_PIC/can18_can_2.c: 701:     Message * mp;;../../VLCBlib_PIC/can18_can_2.c
      +                          : 702:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18_can_2.c: 703:     uint8_t* rxF
      +                          ifoObj;;../../VLCBlib_PIC/can18_can_2.c: 705:     uint16_t temp;;../../VLCBlib_PIC/can18
      +                          _can_2.c: 709:     mp = pop(&rxQueue);
 32096                           
 32097                           ;incstack = 0
 32098   012EF4  0EBD               	movlw	low _rxQueue
 32099   012EF6  6E01               	movwf	pop@q^(0+1280),c
 32100   012EF8  0E05               	movlw	high _rxQueue
 32101   012EFA  6E02               	movwf	(pop@q+1)^(0+1280),c
 32102   012EFC  EC35  F0A3         	call	_pop	;wreg free
 32103   012F00  C501  F514         	movff	?_pop,canReceiveMessage@mp
 32104   012F04  C502  F515         	movff	?_pop+1,canReceiveMessage@mp+1
 32105                           
 32106                           ;../../VLCBlib_PIC/can18_can_2.c: 710:     if (mp != ((void*)0)) {
 32107   012F08  5014               	movf	canReceiveMessage@mp^(0+1280),w,c
 32108   012F0A  1015               	iorwf	(canReceiveMessage@mp+1)^(0+1280),w,c
 32109   012F0C  B4D8               	btfsc	status,2,c
 32110   012F0E  D010               	goto	l947
 32111                           
 32112                           ;../../VLCBlib_PIC/can18_can_2.c: 711:         memcpy(m, mp, sizeof(Message));
 32113   012F10  C510  F501         	movff	canReceiveMessage@m,memcpy@d1
 32114   012F14  C511  F502         	movff	canReceiveMessage@m+1,memcpy@d1+1
 32115   012F18  C514  F503         	movff	canReceiveMessage@mp,memcpy@s1
 32116   012F1C  C515  F504         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 32117   012F20  0E00               	movlw	0
 32118   012F22  6E06               	movwf	(memcpy@n+1)^(0+1280),c
 32119   012F24  0E09               	movlw	9
 32120   012F26  6E05               	movwf	memcpy@n^(0+1280),c
 32121   012F28  EC7E  F0AE         	call	_memcpy	;wreg free
 32122   012F2C                     l11975:
 32123                           
 32124                           ;../../VLCBlib_PIC/can18_can_2.c: 712:         return RECEIVED;
 32125   012F2C  0E01               	movlw	1
 32126   012F2E  0012               	return	
 32127   012F30                     l947:
 32128                           
 32129                           ;../../VLCBlib_PIC/can18_can_2.c: 714:         if (! C1FIFOSTA3Lbits.TFNRFNIF) {
 32130   012F30  0101               	movlb	1	; () banked
 32131   012F32  B178               	btfsc	120,0,b	;volatile
 32132   012F34  D002               	goto	l11985
 32133   012F36                     u10200:
 32134                           
 32135                           ; BSR set to: 1
 32136                           ;../../VLCBlib_PIC/can18_can_2.c: 716:             return NOT_RECEIVED;
 32137   012F36  0E00               	movlw	0
 32138   012F38  0012               	return	
 32139   012F3A                     l11985:
 32140                           
 32141                           ; BSR set to: 1
 32142                           ;../../VLCBlib_PIC/can18_can_2.c: 720:         temp = getNumRxBuffersInUse();
 32143   012F3A  ECC9  F0AB         	call	_getNumRxBuffersInUse	;wreg free
 32144   012F3E  6E12               	movwf	??_canReceiveMessage^(0+1280),c
 32145   012F40  5012               	movf	??_canReceiveMessage^(0+1280),w,c
 32146   012F42  6E16               	movwf	canReceiveMessage@temp^(0+1280),c
 32147   012F44  6A17               	clrf	(canReceiveMessage@temp+1)^(0+1280),c
 32148                           
 32149                           ;../../VLCBlib_PIC/can18_can_2.c: 721:         if (temp > canDiagnostics[0x12].asUint) {
 32150   012F46  5016               	movf	canReceiveMessage@temp^(0+1280),w,c
 32151   012F48  0106               	movlb	6	; () banked
 32152   012F4A  5DCA               	subwf	(_canDiagnostics+36)& (0+255),w,b
 32153   012F4C  5017               	movf	(canReceiveMessage@temp+1)^(0+1280),w,c
 32154   012F4E  59CB               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 32155   012F50  B0D8               	btfsc	status,0,c
 32156   012F52  D004               	goto	l11991
 32157                           
 32158                           ; BSR set to: 6
 32159                           ;../../VLCBlib_PIC/can18_can_2.c: 722:             canDiagnostics[0x12].asUint = temp;
 32160   012F54  C516  F6CA         	movff	canReceiveMessage@temp,_canDiagnostics+36
 32161   012F58  C517  F6CB         	movff	canReceiveMessage@temp+1,_canDiagnostics+37
 32162   012F5C                     l11991:
 32163                           
 32164                           ; BSR set to: 6
 32165                           ;../../VLCBlib_PIC/can18_can_2.c: 726:         rxFifoObj = (uint8_t*) C1FIFOUA3;
 32166   012F5C  C17C F518          	movff	380,canReceiveMessage@rxFifoObj	;volatile
 32167   012F60  C17D F519          	movff	381,canReceiveMessage@rxFifoObj+1	;volatile
 32168                           
 32169                           ; BSR set to: 6
 32170                           ;../../VLCBlib_PIC/can18_can_2.c: 727:         incomingCanId = rxFifoObj[0] & 0x7F;
 32171   012F64  C518  F4D9         	movff	canReceiveMessage@rxFifoObj,fsr2l
 32172   012F68  C519  F4DA         	movff	canReceiveMessage@rxFifoObj+1,fsr2h
 32173   012F6C  50DF               	movf	indf2,w,c
 32174   012F6E  0B7F               	andlw	127
 32175   012F70  6E13               	movwf	canReceiveMessage@incomingCanId^(0+1280),c
 32176                           
 32177                           ; BSR set to: 6
 32178                           ;../../VLCBlib_PIC/can18_can_2.c: 728:         handleSelfEnumeration(incomingCanId);
 32179   012F72  5013               	movf	canReceiveMessage@incomingCanId^(0+1280),w,c
 32180   012F74  ECF2  F0A4         	call	_handleSelfEnumeration
 32181                           
 32182                           ;../../VLCBlib_PIC/can18_can_2.c: 731:         canDiagnostics[0x09].asUint++;
 32183   012F78  0106               	movlb	6	; () banked
 32184   012F7A  4BB8               	infsnz	(_canDiagnostics+18)& (0+255),f,b
 32185   012F7C  2BB9               	incf	(_canDiagnostics+19)& (0+255),f,b
 32186                           
 32187                           ; BSR set to: 6
 32188                           ;../../VLCBlib_PIC/can18_can_2.c: 734:         if (rxFifoObj[4] & 0x20) {
 32189   012F7E  EE20 F004          	lfsr	2,4
 32190   012F82  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 32191   012F84  26D9               	addwf	fsr2l,f,c
 32192   012F86  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 32193   012F88  22DA               	addwfc	fsr2h,f,c
 32194   012F8A  AADF               	btfss	indf2,5,c
 32195   012F8C  D004               	goto	l12009
 32196                           
 32197                           ; BSR set to: 6
 32198                           ;../../VLCBlib_PIC/can18_can_2.c: 736:             C1FIFOCON1H |= (0x2 | 0x1);
 32199   012F8E  0E03               	movlw	3
 32200   012F90  0101               	movlb	1	; () banked
 32201   012F92  135D               	iorwf	93,f,b	;volatile
 32202   012F94  D015               	goto	L2
 32203   012F96                     l12009:
 32204                           
 32205                           ; BSR set to: 6
 32206                           ;../../VLCBlib_PIC/can18_can_2.c: 740:         m->len = (rxFifoObj[4] & 0x0F);
 32207   012F96  EE20 F004          	lfsr	2,4
 32208   012F9A  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 32209   012F9C  26D9               	addwf	fsr2l,f,c
 32210   012F9E  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 32211   012FA0  22DA               	addwfc	fsr2h,f,c
 32212   012FA2  50DF               	movf	indf2,w,c
 32213   012FA4  0B0F               	andlw	15
 32214   012FA6  C510  F4D9         	movff	canReceiveMessage@m,fsr2l
 32215   012FAA  C511  F4DA         	movff	canReceiveMessage@m+1,fsr2h
 32216   012FAE  6EDF               	movwf	indf2,c
 32217                           
 32218                           ; BSR set to: 6
 32219                           ;../../VLCBlib_PIC/can18_can_2.c: 741:         if (m->len == 0) {
 32220   012FB0  C510  F4D9         	movff	canReceiveMessage@m,fsr2l
 32221   012FB4  C511  F4DA         	movff	canReceiveMessage@m+1,fsr2h
 32222   012FB8  50DF               	movf	indf2,w,c
 32223   012FBA  A4D8               	btfss	status,2,c
 32224   012FBC  D003               	goto	l12019
 32225                           
 32226                           ; BSR set to: 6
 32227                           ;../../VLCBlib_PIC/can18_can_2.c: 743:             C1FIFOCON3Hbits.UINC = 1;
 32228   012FBE  0101               	movlb	1	; () banked
 32229   012FC0                     L2:
 32230   012FC0  8175               	bsf	117,0,b	;volatile
 32231   012FC2  D7B9               	goto	u10200
 32232   012FC4                     l12019:
 32233                           
 32234                           ; BSR set to: 6
 32235                           ;../../VLCBlib_PIC/can18_can_2.c: 746:         m->opc = rxFifoObj[8];
 32236   012FC4  EE20 F008          	lfsr	2,8
 32237   012FC8  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 32238   012FCA  26D9               	addwf	fsr2l,f,c
 32239   012FCC  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 32240   012FCE  22DA               	addwfc	fsr2h,f,c
 32241   012FD0  EE10 F001          	lfsr	1,1
 32242   012FD4  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 32243   012FD6  26E1               	addwf	fsr1l,f,c
 32244   012FD8  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 32245   012FDA  22E2               	addwfc	fsr1h,f,c
 32246   012FDC  C4DF F4E7          	movff	indf2,indf1
 32247                           
 32248                           ;../../VLCBlib_PIC/can18_can_2.c: 747:         m->bytes[0] = rxFifoObj[9];
 32249   012FE0  EE20 F009          	lfsr	2,9
 32250   012FE4  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 32251   012FE6  26D9               	addwf	fsr2l,f,c
 32252   012FE8  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 32253   012FEA  22DA               	addwfc	fsr2h,f,c
 32254   012FEC  EE10 F002          	lfsr	1,2
 32255   012FF0  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 32256   012FF2  26E1               	addwf	fsr1l,f,c
 32257   012FF4  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 32258   012FF6  22E2               	addwfc	fsr1h,f,c
 32259   012FF8  C4DF F4E7          	movff	indf2,indf1
 32260                           
 32261                           ;../../VLCBlib_PIC/can18_can_2.c: 748:         m->bytes[1] = rxFifoObj[10];
 32262   012FFC  EE20 F00A          	lfsr	2,10
 32263   013000  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 32264   013002  26D9               	addwf	fsr2l,f,c
 32265   013004  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 32266   013006  22DA               	addwfc	fsr2h,f,c
 32267   013008  EE10 F003          	lfsr	1,3
 32268   01300C  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 32269   01300E  26E1               	addwf	fsr1l,f,c
 32270   013010  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 32271   013012  22E2               	addwfc	fsr1h,f,c
 32272   013014  C4DF F4E7          	movff	indf2,indf1
 32273                           
 32274                           ;../../VLCBlib_PIC/can18_can_2.c: 749:         m->bytes[2] = rxFifoObj[11];
 32275   013018  EE20 F00B          	lfsr	2,11
 32276   01301C  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 32277   01301E  26D9               	addwf	fsr2l,f,c
 32278   013020  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 32279   013022  22DA               	addwfc	fsr2h,f,c
 32280   013024  EE10 F004          	lfsr	1,4
 32281   013028  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 32282   01302A  26E1               	addwf	fsr1l,f,c
 32283   01302C  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 32284   01302E  22E2               	addwfc	fsr1h,f,c
 32285   013030  C4DF F4E7          	movff	indf2,indf1
 32286                           
 32287                           ;../../VLCBlib_PIC/can18_can_2.c: 750:         m->bytes[3] = rxFifoObj[12];
 32288   013034  EE20 F00C          	lfsr	2,12
 32289   013038  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 32290   01303A  26D9               	addwf	fsr2l,f,c
 32291   01303C  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 32292   01303E  22DA               	addwfc	fsr2h,f,c
 32293   013040  EE10 F005          	lfsr	1,5
 32294   013044  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 32295   013046  26E1               	addwf	fsr1l,f,c
 32296   013048  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 32297   01304A  22E2               	addwfc	fsr1h,f,c
 32298   01304C  C4DF F4E7          	movff	indf2,indf1
 32299                           
 32300                           ;../../VLCBlib_PIC/can18_can_2.c: 751:         m->bytes[4] = rxFifoObj[13];
 32301   013050  EE20 F00D          	lfsr	2,13
 32302   013054  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 32303   013056  26D9               	addwf	fsr2l,f,c
 32304   013058  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 32305   01305A  22DA               	addwfc	fsr2h,f,c
 32306   01305C  EE10 F006          	lfsr	1,6
 32307   013060  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 32308   013062  26E1               	addwf	fsr1l,f,c
 32309   013064  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 32310   013066  22E2               	addwfc	fsr1h,f,c
 32311   013068  C4DF F4E7          	movff	indf2,indf1
 32312                           
 32313                           ;../../VLCBlib_PIC/can18_can_2.c: 752:         m->bytes[5] = rxFifoObj[14];
 32314   01306C  EE20 F00E          	lfsr	2,14
 32315   013070  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 32316   013072  26D9               	addwf	fsr2l,f,c
 32317   013074  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 32318   013076  22DA               	addwfc	fsr2h,f,c
 32319   013078  EE10 F007          	lfsr	1,7
 32320   01307C  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 32321   01307E  26E1               	addwf	fsr1l,f,c
 32322   013080  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 32323   013082  22E2               	addwfc	fsr1h,f,c
 32324   013084  C4DF F4E7          	movff	indf2,indf1
 32325                           
 32326                           ;../../VLCBlib_PIC/can18_can_2.c: 753:         m->bytes[6] = rxFifoObj[15];
 32327   013088  EE20 F00F          	lfsr	2,15
 32328   01308C  5018               	movf	canReceiveMessage@rxFifoObj^(0+1280),w,c
 32329   01308E  26D9               	addwf	fsr2l,f,c
 32330   013090  5019               	movf	(canReceiveMessage@rxFifoObj+1)^(0+1280),w,c
 32331   013092  22DA               	addwfc	fsr2h,f,c
 32332   013094  EE10 F008          	lfsr	1,8
 32333   013098  5010               	movf	canReceiveMessage@m^(0+1280),w,c
 32334   01309A  26E1               	addwf	fsr1l,f,c
 32335   01309C  5011               	movf	(canReceiveMessage@m+1)^(0+1280),w,c
 32336   01309E  22E2               	addwfc	fsr1h,f,c
 32337   0130A0  C4DF F4E7          	movff	indf2,indf1
 32338                           
 32339                           ; BSR set to: 6
 32340                           ;../../VLCBlib_PIC/can18_can_2.c: 755:         C1FIFOCON3Hbits.UINC = 1;
 32341   0130A4  0101               	movlb	1	; () banked
 32342   0130A6  8175               	bsf	117,0,b	;volatile
 32343   0130A8  D741               	goto	l11975
 32344   0130AA                     __end_of_canReceiveMessage:
 32345                           	callstack 0
 32346                           
 32347 ;; *************** function _pop *****************
 32348 ;; Defined at:
 32349 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 32350 ;; Parameters:    Size  Location     Type
 32351 ;;  q               2    0[COMRAM] PTR struct MessageQueue
 32352 ;;		 -> rxQueue(5), 
 32353 ;; Auto vars:     Size  Location     Type
 32354 ;;  ret             2    8[COMRAM] PTR struct Message
 32355 ;;		 -> rxBuffers(72), 
 32356 ;; Return value:  Size  Location     Type
 32357 ;;                  2    0[COMRAM] PTR struct Message
 32358 ;; Registers used:
 32359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32360 ;; Tracked objects:
 32361 ;;		On entry : 0/0
 32362 ;;		On exit  : 0/0
 32363 ;;		Unchanged: 0/0
 32364 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32365 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32366 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32367 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32368 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32369 ;;Total ram usage:       10 bytes
 32370 ;; Hardware stack levels used: 1
 32371 ;; Hardware stack levels required when called: 1
 32372 ;; This function calls:
 32373 ;;		Nothing
 32374 ;; This function is called by:
 32375 ;;		_canReceiveMessage
 32376 ;; This function uses a non-reentrant model
 32377 ;;
 32378                           
 32379                           	psect	text35
 32380   01466A                     __ptext35:
 32381                           	callstack 0
 32382   01466A                     _pop:
 32383                           	callstack 123
 32384                           
 32385                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 32386                           
 32387                           ;incstack = 0
 32388   01466A  EE20 F002          	lfsr	2,2
 32389   01466E  5001               	movf	pop@q^(0+1280),w,c
 32390   014670  26D9               	addwf	fsr2l,f,c
 32391   014672  5002               	movf	(pop@q+1)^(0+1280),w,c
 32392   014674  22DA               	addwfc	fsr2h,f,c
 32393   014676  EE10 F003          	lfsr	1,3
 32394   01467A  5001               	movf	pop@q^(0+1280),w,c
 32395   01467C  26E1               	addwf	fsr1l,f,c
 32396   01467E  5002               	movf	(pop@q+1)^(0+1280),w,c
 32397   014680  22E2               	addwfc	fsr1h,f,c
 32398   014682  50DE               	movf	postinc2,w,c
 32399   014684  18E6               	xorwf	postinc1,w,c
 32400   014686  A4D8               	btfss	status,2,c
 32401   014688  D005               	goto	l10133
 32402                           
 32403                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 32404   01468A  0E00               	movlw	0
 32405   01468C  6E01               	movwf	?_pop^(0+1280),c
 32406   01468E  0E00               	movlw	0
 32407   014690  6E02               	movwf	(?_pop+1)^(0+1280),c
 32408   014692  0012               	return	
 32409   014694                     l10133:
 32410                           
 32411                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 32412   014694  EE20 F002          	lfsr	2,2
 32413   014698  5001               	movf	pop@q^(0+1280),w,c
 32414   01469A  26D9               	addwf	fsr2l,f,c
 32415   01469C  5002               	movf	(pop@q+1)^(0+1280),w,c
 32416   01469E  22DA               	addwfc	fsr2h,f,c
 32417   0146A0  50DF               	movf	indf2,w,c
 32418   0146A2  6E04               	movwf	??_pop^(0+1280),c
 32419   0146A4  5004               	movf	??_pop^(0+1280),w,c
 32420   0146A6  0D09               	mullw	9
 32421   0146A8  C4F3 F505          	movff	prodl,??_pop+1
 32422   0146AC  C4F4 F506          	movff	prodh,??_pop+2
 32423   0146B0  C501  F4D9         	movff	pop@q,fsr2l
 32424   0146B4  C502  F4DA         	movff	pop@q+1,fsr2h
 32425   0146B8  C4DE F507          	movff	postinc2,??_pop+3
 32426   0146BC  C4DD F508          	movff	postdec2,??_pop+4
 32427   0146C0  5005               	movf	(??_pop+1)^(0+1280),w,c
 32428   0146C2  2407               	addwf	(??_pop+3)^(0+1280),w,c
 32429   0146C4  6E09               	movwf	pop@ret^(0+1280),c
 32430   0146C6  5006               	movf	(??_pop+2)^(0+1280),w,c
 32431   0146C8  2008               	addwfc	(??_pop+4)^(0+1280),w,c
 32432   0146CA  6E0A               	movwf	(pop@ret+1)^(0+1280),c
 32433   0146CC  EE20 F002          	lfsr	2,2
 32434   0146D0  5001               	movf	pop@q^(0+1280),w,c
 32435   0146D2  26D9               	addwf	fsr2l,f,c
 32436   0146D4  5002               	movf	(pop@q+1)^(0+1280),w,c
 32437   0146D6  22DA               	addwfc	fsr2h,f,c
 32438   0146D8  2ADF               	incf	indf2,f,c
 32439                           
 32440                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 32441   0146DA  EE20 F004          	lfsr	2,4
 32442   0146DE  5001               	movf	pop@q^(0+1280),w,c
 32443   0146E0  26D9               	addwf	fsr2l,f,c
 32444   0146E2  5002               	movf	(pop@q+1)^(0+1280),w,c
 32445   0146E4  22DA               	addwfc	fsr2h,f,c
 32446   0146E6  EE10 F002          	lfsr	1,2
 32447   0146EA  5001               	movf	pop@q^(0+1280),w,c
 32448   0146EC  26E1               	addwf	fsr1l,f,c
 32449   0146EE  5002               	movf	(pop@q+1)^(0+1280),w,c
 32450   0146F0  22E2               	addwfc	fsr1h,f,c
 32451   0146F2  50DE               	movf	postinc2,w,c
 32452   0146F4  5CE6               	subwf	postinc1,w,c
 32453   0146F6  A0D8               	btfss	status,0,c
 32454   0146F8  D007               	goto	l10141
 32455   0146FA  EE20 F002          	lfsr	2,2
 32456   0146FE  5001               	movf	pop@q^(0+1280),w,c
 32457   014700  26D9               	addwf	fsr2l,f,c
 32458   014702  5002               	movf	(pop@q+1)^(0+1280),w,c
 32459   014704  22DA               	addwfc	fsr2h,f,c
 32460   014706  6ADF               	clrf	indf2,c
 32461   014708                     l10141:
 32462                           
 32463                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 32464   014708  C509  F501         	movff	pop@ret,?_pop
 32465   01470C  C50A  F502         	movff	pop@ret+1,?_pop+1
 32466   014710  0012               	return		;funcret
 32467   014712                     __end_of_pop:
 32468                           	callstack 0
 32469                           
 32470 ;; *************** function _memcpy *****************
 32471 ;; Defined at:
 32472 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
 32473 ;; Parameters:    Size  Location     Type
 32474 ;;  d1              2    0[COMRAM] PTR void 
 32475 ;;		 -> poll@m(9), 
 32476 ;;  s1              2    2[COMRAM] PTR const void 
 32477 ;;		 -> rxBuffers(72), NULL(0), 
 32478 ;;  n               2    4[COMRAM] unsigned int 
 32479 ;; Auto vars:     Size  Location     Type
 32480 ;;  s               2    8[COMRAM] PTR const unsigned char 
 32481 ;;		 -> rxBuffers(72), NULL(0), 
 32482 ;;  d               2    6[COMRAM] PTR unsigned char 
 32483 ;;		 -> poll@m(9), 
 32484 ;;  tmp             1   10[COMRAM] unsigned char 
 32485 ;; Return value:  Size  Location     Type
 32486 ;;                  2    0[COMRAM] PTR void 
 32487 ;; Registers used:
 32488 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32489 ;; Tracked objects:
 32490 ;;		On entry : 0/0
 32491 ;;		On exit  : 0/0
 32492 ;;		Unchanged: 0/0
 32493 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32494 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32495 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32497 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32498 ;;Total ram usage:       11 bytes
 32499 ;; Hardware stack levels used: 1
 32500 ;; Hardware stack levels required when called: 1
 32501 ;; This function calls:
 32502 ;;		Nothing
 32503 ;; This function is called by:
 32504 ;;		_canReceiveMessage
 32505 ;; This function uses a non-reentrant model
 32506 ;;
 32507                           
 32508                           	psect	text36
 32509   015CFC                     __ptext36:
 32510                           	callstack 0
 32511   015CFC                     _memcpy:
 32512                           	callstack 123
 32513                           
 32514                           ;incstack = 0
 32515   015CFC  C503  F509         	movff	memcpy@s1,memcpy@s
 32516   015D00  C504  F50A         	movff	memcpy@s1+1,memcpy@s+1
 32517   015D04  C501  F507         	movff	memcpy@d1,memcpy@d
 32518   015D08  C502  F508         	movff	memcpy@d1+1,memcpy@d+1
 32519   015D0C  D010               	goto	l10155
 32520   015D0E                     l10147:
 32521   015D0E  C509  F4D9         	movff	memcpy@s,fsr2l
 32522   015D12  C50A  F4DA         	movff	memcpy@s+1,fsr2h
 32523   015D16  50DF               	movf	indf2,w,c
 32524   015D18  6E0B               	movwf	memcpy@tmp^(0+1280),c
 32525   015D1A  4A09               	infsnz	memcpy@s^(0+1280),f,c
 32526   015D1C  2A0A               	incf	(memcpy@s+1)^(0+1280),f,c
 32527   015D1E  C507  F4D9         	movff	memcpy@d,fsr2l
 32528   015D22  C508  F4DA         	movff	memcpy@d+1,fsr2h
 32529   015D26  C50B  F4DF         	movff	memcpy@tmp,indf2
 32530   015D2A  4A07               	infsnz	memcpy@d^(0+1280),f,c
 32531   015D2C  2A08               	incf	(memcpy@d+1)^(0+1280),f,c
 32532   015D2E                     l10155:
 32533   015D2E  0605               	decf	memcpy@n^(0+1280),f,c
 32534   015D30  A0D8               	btfss	status,0,c
 32535   015D32  0606               	decf	(memcpy@n+1)^(0+1280),f,c
 32536   015D34  2805               	incf	memcpy@n^(0+1280),w,c
 32537   015D36  E1EB               	bnz	l10147
 32538   015D38  2806               	incf	(memcpy@n+1)^(0+1280),w,c
 32539   015D3A  B4D8               	btfsc	status,2,c
 32540   015D3C  0012               	return	
 32541   015D3E  D7E7               	goto	l10147
 32542   015D40                     __end_of_memcpy:
 32543                           	callstack 0
 32544                           
 32545 ;; *************** function _handleSelfEnumeration *****************
 32546 ;; Defined at:
 32547 ;;		line 800 in file "../../VLCBlib_PIC/can18_can_2.c"
 32548 ;; Parameters:    Size  Location     Type
 32549 ;;  receivedCanI    1    wreg     unsigned char 
 32550 ;; Auto vars:     Size  Location     Type
 32551 ;;  receivedCanI    1   14[COMRAM] unsigned char 
 32552 ;; Return value:  Size  Location     Type
 32553 ;;                  1    wreg      void 
 32554 ;; Registers used:
 32555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32556 ;; Tracked objects:
 32557 ;;		On entry : 0/0
 32558 ;;		On exit  : 0/0
 32559 ;;		Unchanged: 0/0
 32560 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32563 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32564 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32565 ;;Total ram usage:        5 bytes
 32566 ;; Hardware stack levels used: 1
 32567 ;; Hardware stack levels required when called: 2
 32568 ;; This function calls:
 32569 ;;		_tickGet
 32570 ;; This function is called by:
 32571 ;;		_canReceiveMessage
 32572 ;; This function uses a non-reentrant model
 32573 ;;
 32574                           
 32575                           	psect	text37
 32576   0149E4                     __ptext37:
 32577                           	callstack 0
 32578   0149E4                     _handleSelfEnumeration:
 32579                           	callstack 122
 32580                           
 32581                           ;incstack = 0
 32582                           ;handleSelfEnumeration@receivedCanId stored from wreg
 32583   0149E4  6E0F               	movwf	handleSelfEnumeration@receivedCanId^(0+1280),c
 32584                           
 32585                           ;../../VLCBlib_PIC/can18_can_2.c: 802:     switch (enumerationState) {
 32586   0149E6  D02E               	goto	l10171
 32587   0149E8                     l10159:
 32588                           
 32589                           ; BSR set to: 5
 32590                           ;../../VLCBlib_PIC/can18_can_2.c: 805:             ( enumerationResults[receivedCanId>>3
      +                          ] |= ( 1<<(receivedCanId & 0x07) ) );
 32591   0149E8  C50F  F50B         	movff	handleSelfEnumeration@receivedCanId,??_handleSelfEnumeration
 32592   0149EC  0E07               	movlw	7
 32593   0149EE  160B               	andwf	??_handleSelfEnumeration^(0+1280),f,c
 32594   0149F0  0E01               	movlw	1
 32595   0149F2  6E0C               	movwf	(??_handleSelfEnumeration+1)^(0+1280),c
 32596   0149F4  2A0B               	incf	??_handleSelfEnumeration^(0+1280),f,c
 32597   0149F6  D002               	goto	u8114
 32598   0149F8                     u8115:
 32599   0149F8  90D8               	bcf	status,0,c
 32600   0149FA  360C               	rlcf	(??_handleSelfEnumeration+1)^(0+1280),f,c
 32601   0149FC                     u8114:
 32602   0149FC  2E0B               	decfsz	??_handleSelfEnumeration^(0+1280),f,c
 32603   0149FE  D7FC               	goto	u8115
 32604   014A00  380F               	swapf	handleSelfEnumeration@receivedCanId^(0+1280),w,c
 32605   014A02  46E8               	rlncf	wreg,f,c
 32606   014A04  0B1F               	andlw	31
 32607   014A06  6E0D               	movwf	(??_handleSelfEnumeration+2)^(0+1280),c
 32608   014A08  6A0E               	clrf	(??_handleSelfEnumeration+3)^(0+1280),c
 32609   014A0A  0E61               	movlw	low _enumerationResults
 32610   014A0C  240D               	addwf	(??_handleSelfEnumeration+2)^(0+1280),w,c
 32611   014A0E  6ED9               	movwf	fsr2l,c
 32612   014A10  0E06               	movlw	high _enumerationResults
 32613   014A12  200E               	addwfc	(??_handleSelfEnumeration+3)^(0+1280),w,c
 32614   014A14  6EDA               	movwf	fsr2h,c
 32615   014A16  500C               	movf	(??_handleSelfEnumeration+1)^(0+1280),w,c
 32616   014A18  12DF               	iorwf	indf2,f,c
 32617                           
 32618                           ;../../VLCBlib_PIC/can18_can_2.c: 806:             break;
 32619   014A1A  0012               	return	
 32620   014A1C                     l10161:
 32621                           
 32622                           ; BSR set to: 5
 32623                           ;../../VLCBlib_PIC/can18_can_2.c: 808:             if (receivedCanId == canId) {
 32624   014A1C  5196               	movf	_canId& (0+255),w,b
 32625   014A1E  180F               	xorwf	handleSelfEnumeration@receivedCanId^(0+1280),w,c
 32626   014A20  A4D8               	btfss	status,2,c
 32627   014A22  0012               	return	
 32628                           
 32629                           ; BSR set to: 5
 32630                           ;../../VLCBlib_PIC/can18_can_2.c: 811:                 enumerationState = ENUMERATION_RE
      +                          QUIRED;
 32631   014A24  0E01               	movlw	1
 32632   014A26  6F93               	movwf	_enumerationState& (0+255),b
 32633                           
 32634                           ; BSR set to: 5
 32635                           ;../../VLCBlib_PIC/can18_can_2.c: 813:                 canDiagnostics[0x0E].asUint++;
 32636   014A28  0106               	movlb	6	; () banked
 32637   014A2A  4BC2               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 32638   014A2C  2BC3               	incf	(_canDiagnostics+29)& (0+255),f,b
 32639                           
 32640                           ; BSR set to: 6
 32641                           ;../../VLCBlib_PIC/can18_can_2.c: 815:                 enumerationStartTime.val = tickGe
      +                          t();
 32642   014A2E  EC7A  F0AC         	call	_tickGet	;wreg free
 32643   014A32  C501  F564         	movff	?_tickGet,_enumerationStartTime
 32644   014A36  C502  F565         	movff	?_tickGet+1,_enumerationStartTime+1
 32645   014A3A  C503  F566         	movff	?_tickGet+2,_enumerationStartTime+2
 32646   014A3E  C504  F567         	movff	?_tickGet+3,_enumerationStartTime+3
 32647   014A42  0012               	return	
 32648   014A44                     l10171:
 32649   014A44  0105               	movlb	5	; () banked
 32650   014A46  5193               	movf	_enumerationState& (0+255),w,b
 32651   014A48  6E0B               	movwf	??_handleSelfEnumeration^(0+1280),c
 32652   014A4A  6A0C               	clrf	(??_handleSelfEnumeration+1)^(0+1280),c
 32653                           
 32654                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32655                           ; Switch size 1, requested type "simple"
 32656                           ; Number of cases is 1, Range of values is 0 to 0
 32657                           ; switch strategies available:
 32658                           ; Name         Instructions Cycles
 32659                           ; simple_byte            4     3 (average)
 32660                           ;	Chosen strategy is simple_byte
 32661   014A4C  500C               	movf	(??_handleSelfEnumeration+1)^(0+1280),w,c
 32662   014A4E  0A00               	xorlw	0	; case 0
 32663   014A50  A4D8               	btfss	status,2,c
 32664   014A52  0012               	return	
 32665                           
 32666                           ; BSR set to: 5
 32667                           ; Switch size 1, requested type "simple"
 32668                           ; Number of cases is 3, Range of values is 0 to 3
 32669                           ; switch strategies available:
 32670                           ; Name         Instructions Cycles
 32671                           ; simple_byte           10     6 (average)
 32672                           ;	Chosen strategy is simple_byte
 32673   014A54  500B               	movf	??_handleSelfEnumeration^(0+1280),w,c
 32674   014A56  0A00               	xorlw	0	; case 0
 32675   014A58  B4D8               	btfsc	status,2,c
 32676   014A5A  D7E0               	goto	l10161
 32677   014A5C  0A02               	xorlw	2	; case 2
 32678   014A5E  B4D8               	btfsc	status,2,c
 32679   014A60  D7C3               	goto	l10159
 32680   014A62  0A01               	xorlw	1	; case 3
 32681   014A64  A4D8               	btfss	status,2,c
 32682   014A66  0012               	return	
 32683   014A68  D7BF               	goto	l10159
 32684   014A6A                     __end_of_handleSelfEnumeration:
 32685                           	callstack 0
 32686                           
 32687 ;; *************** function _processEnumeration *****************
 32688 ;; Defined at:
 32689 ;;		line 828 in file "../../VLCBlib_PIC/can18_can_2.c"
 32690 ;; Parameters:    Size  Location     Type
 32691 ;;		None
 32692 ;; Auto vars:     Size  Location     Type
 32693 ;;  i               1   27[COMRAM] unsigned char 
 32694 ;;  newCanId        1   26[COMRAM] unsigned char 
 32695 ;;  enumResult      1   25[COMRAM] unsigned char 
 32696 ;; Return value:  Size  Location     Type
 32697 ;;                  1    wreg      void 
 32698 ;; Registers used:
 32699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32700 ;; Tracked objects:
 32701 ;;		On entry : 0/0
 32702 ;;		On exit  : 0/0
 32703 ;;		Unchanged: 0/0
 32704 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32706 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32707 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32708 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32709 ;;Total ram usage:        7 bytes
 32710 ;; Hardware stack levels used: 1
 32711 ;; Hardware stack levels required when called: 7
 32712 ;; This function calls:
 32713 ;;		_setNewCanId
 32714 ;;		_startEnumeration
 32715 ;;		_tickGet
 32716 ;;		_updateModuleErrorStatus
 32717 ;; This function is called by:
 32718 ;;		_canPoll
 32719 ;; This function uses a non-reentrant model
 32720 ;;
 32721                           
 32722                           	psect	text38
 32723   01339E                     __ptext38:
 32724                           	callstack 0
 32725   01339E                     _processEnumeration:
 32726                           	callstack 117
 32727                           
 32728                           ;../../VLCBlib_PIC/can18_can_2.c: 829:     uint8_t i, newCanId, enumResult;;../../VLCBli
      +                          b_PIC/can18_can_2.c: 831:     switch (enumerationState) {
 32729                           
 32730                           ;incstack = 0
 32731   01339E  D08E               	goto	l10119
 32732   0133A0                     l10059:
 32733                           
 32734                           ; BSR set to: 5
 32735                           ;../../VLCBlib_PIC/can18_can_2.c: 834:             if ((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) ) {
 32736   0133A0  EC7A  F0AC         	call	_tickGet	;wreg free
 32737   0133A4  0105               	movlb	5	; () banked
 32738   0133A6  5164               	movf	_enumerationStartTime& (0+255),w,b
 32739   0133A8  5C01               	subwf	?_tickGet^(0+1280),w,c
 32740   0133AA  6E16               	movwf	??_processEnumeration^(0+1280),c
 32741   0133AC  5165               	movf	(_enumerationStartTime+1)& (0+255),w,b
 32742   0133AE  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 32743   0133B0  6E17               	movwf	(??_processEnumeration+1)^(0+1280),c
 32744   0133B2  5166               	movf	(_enumerationStartTime+2)& (0+255),w,b
 32745   0133B4  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 32746   0133B6  6E18               	movwf	(??_processEnumeration+2)^(0+1280),c
 32747   0133B8  5167               	movf	(_enumerationStartTime+3)& (0+255),w,b
 32748   0133BA  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 32749   0133BC  6E19               	movwf	(??_processEnumeration+3)^(0+1280),c
 32750   0133BE  5019               	movf	(??_processEnumeration+3)^(0+1280),w,c
 32751   0133C0  1018               	iorwf	(??_processEnumeration+2)^(0+1280),w,c
 32752   0133C2  E106               	bnz	u7980
 32753   0133C4  0ED5               	movlw	213
 32754   0133C6  5C16               	subwf	??_processEnumeration^(0+1280),w,c
 32755   0133C8  0E30               	movlw	48
 32756   0133CA  5817               	subwfb	(??_processEnumeration+1)^(0+1280),w,c
 32757   0133CC  A0D8               	btfss	status,0,c
 32758   0133CE  0012               	return	
 32759   0133D0                     u7980:
 32760                           
 32761                           ; BSR set to: 5
 32762                           ;../../VLCBlib_PIC/can18_can_2.c: 838:                 startEnumeration(0);
 32763   0133D0  0E00               	movlw	0
 32764   0133D2  ECD0  F0AC         	call	_startEnumeration
 32765   0133D6  0012               	return	
 32766   0133D8                     l10063:
 32767                           
 32768                           ; BSR set to: 5
 32769                           ;../../VLCBlib_PIC/can18_can_2.c: 846:             if ((tickGet() - enumerationStartTime
      +                          .val) > (62500/10) ) {
 32770   0133D8  EC7A  F0AC         	call	_tickGet	;wreg free
 32771   0133DC  0105               	movlb	5	; () banked
 32772   0133DE  5164               	movf	_enumerationStartTime& (0+255),w,b
 32773   0133E0  5C01               	subwf	?_tickGet^(0+1280),w,c
 32774   0133E2  6E16               	movwf	??_processEnumeration^(0+1280),c
 32775   0133E4  5165               	movf	(_enumerationStartTime+1)& (0+255),w,b
 32776   0133E6  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 32777   0133E8  6E17               	movwf	(??_processEnumeration+1)^(0+1280),c
 32778   0133EA  5166               	movf	(_enumerationStartTime+2)& (0+255),w,b
 32779   0133EC  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 32780   0133EE  6E18               	movwf	(??_processEnumeration+2)^(0+1280),c
 32781   0133F0  5167               	movf	(_enumerationStartTime+3)& (0+255),w,b
 32782   0133F2  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 32783   0133F4  6E19               	movwf	(??_processEnumeration+3)^(0+1280),c
 32784   0133F6  5019               	movf	(??_processEnumeration+3)^(0+1280),w,c
 32785   0133F8  1018               	iorwf	(??_processEnumeration+2)^(0+1280),w,c
 32786   0133FA  E106               	bnz	u7990
 32787   0133FC  0E6B               	movlw	107
 32788   0133FE  5C16               	subwf	??_processEnumeration^(0+1280),w,c
 32789   013400  0E18               	movlw	24
 32790   013402  5817               	subwfb	(??_processEnumeration+1)^(0+1280),w,c
 32791   013404  A0D8               	btfss	status,0,c
 32792   013406  0012               	return	
 32793   013408                     u7990:
 32794                           
 32795                           ; BSR set to: 5
 32796                           ;../../VLCBlib_PIC/can18_can_2.c: 851:                 for (i=0; (enumerationResults[i] 
      +                          == 0xFF) && (i < (0x7F/8)+1); i++) {
 32797   013408  6A1C               	clrf	processEnumeration@i^(0+1280),c
 32798   01340A  D001               	goto	l10069
 32799   01340C                     l10067:
 32800                           
 32801                           ;../../VLCBlib_PIC/can18_can_2.c: 853:                 }
 32802   01340C  2A1C               	incf	processEnumeration@i^(0+1280),f,c
 32803   01340E                     l10069:
 32804   01340E  0E61               	movlw	low _enumerationResults
 32805   013410  241C               	addwf	processEnumeration@i^(0+1280),w,c
 32806   013412  6ED9               	movwf	fsr2l,c
 32807   013414  6ADA               	clrf	fsr2h,c
 32808   013416  0E06               	movlw	high _enumerationResults
 32809   013418  22DA               	addwfc	fsr2h,f,c
 32810   01341A  28DE               	incf	postinc2,w,c
 32811   01341C  A4D8               	btfss	status,2,c
 32812   01341E  D003               	goto	u8010
 32813   013420  0E0F               	movlw	15
 32814   013422  641C               	cpfsgt	processEnumeration@i^(0+1280),c
 32815   013424  D7F3               	goto	l10067
 32816   013426                     u8010:
 32817                           
 32818                           ;../../VLCBlib_PIC/can18_can_2.c: 854:                 if ((enumResult = enumerationResu
      +                          lts[i]) != 0xFF) {
 32819   013426  0E61               	movlw	low _enumerationResults
 32820   013428  241C               	addwf	processEnumeration@i^(0+1280),w,c
 32821   01342A  6ED9               	movwf	fsr2l,c
 32822   01342C  6ADA               	clrf	fsr2h,c
 32823   01342E  0E06               	movlw	high _enumerationResults
 32824   013430  22DA               	addwfc	fsr2h,f,c
 32825   013432  50DF               	movf	indf2,w,c
 32826   013434  6E1A               	movwf	processEnumeration@enumResult^(0+1280),c
 32827   013436  281A               	incf	processEnumeration@enumResult^(0+1280),w,c
 32828   013438  B4D8               	btfsc	status,2,c
 32829   01343A  D017               	goto	l10091
 32830                           
 32831                           ;../../VLCBlib_PIC/can18_can_2.c: 855:                     for (newCanId = i*8; (enumRes
      +                          ult & 0x01); newCanId++) {
 32832   01343C  501C               	movf	processEnumeration@i^(0+1280),w,c
 32833   01343E  0D08               	mullw	8
 32834   013440  C4F3 F51B          	movff	prodl,processEnumeration@newCanId
 32835   013444  D003               	goto	l10081
 32836   013446                     l10077:
 32837                           
 32838                           ;../../VLCBlib_PIC/can18_can_2.c: 856:                         enumResult >>= 1;
 32839   013446  90D8               	bcf	status,0,c
 32840   013448  321A               	rrcf	processEnumeration@enumResult^(0+1280),f,c
 32841                           
 32842                           ;../../VLCBlib_PIC/can18_can_2.c: 857:                     }
 32843   01344A  2A1B               	incf	processEnumeration@newCanId^(0+1280),f,c
 32844   01344C                     l10081:
 32845   01344C  B01A               	btfsc	processEnumeration@enumResult^(0+1280),0,c
 32846   01344E  D7FB               	goto	l10077
 32847                           
 32848                           ;../../VLCBlib_PIC/can18_can_2.c: 858:                     if ((newCanId >= 1) && (newCa
      +                          nId <= 99)) {
 32849   013450  501B               	movf	processEnumeration@newCanId^(0+1280),w,c
 32850   013452  B4D8               	btfsc	status,2,c
 32851   013454  D00A               	goto	l10091
 32852   013456  0E64               	movlw	100
 32853   013458  601B               	cpfslt	processEnumeration@newCanId^(0+1280),c
 32854   01345A  D007               	goto	l10091
 32855                           
 32856                           ;../../VLCBlib_PIC/can18_can_2.c: 860:                         canId = newCanId;
 32857   01345C  C51B  F596         	movff	processEnumeration@newCanId,_canId
 32858                           
 32859                           ;../../VLCBlib_PIC/can18_can_2.c: 861:                         setNewCanId(canId);
 32860   013460  0105               	movlb	5	; () banked
 32861   013462  5196               	movf	_canId& (0+255),w,b
 32862   013464  ECBD  F0B0         	call	_setNewCanId
 32863                           
 32864                           ;../../VLCBlib_PIC/can18_can_2.c: 862:                     } else {
 32865   013468  D005               	goto	l10099
 32866   01346A                     l10091:
 32867                           
 32868                           ;../../VLCBlib_PIC/can18_can_2.c: 864:                         canDiagnostics[0x10].asUi
      +                          nt++;
 32869   01346A  0106               	movlb	6	; () banked
 32870   01346C  4BC6               	infsnz	(_canDiagnostics+32)& (0+255),f,b
 32871   01346E  2BC7               	incf	(_canDiagnostics+33)& (0+255),f,b
 32872                           
 32873                           ; BSR set to: 6
 32874                           ;../../VLCBlib_PIC/can18_can_2.c: 865:                         updateModuleErrorStatus()
      +                          ;
 32875   013470  ECB6  F0B3         	call	_updateModuleErrorStatus	;wreg free
 32876   013474                     l10099:
 32877                           
 32878                           ;../../VLCBlib_PIC/can18_can_2.c: 875:                 if (enumerationState == ENUMERATI
      +                          ON_IN_PROGRESS_TX_WAITING) {
 32879   013474  0E03               	movlw	3
 32880   013476  0105               	movlb	5	; () banked
 32881   013478  1993               	xorwf	_enumerationState& (0+255),w,b
 32882   01347A  A4D8               	btfss	status,2,c
 32883   01347C  D01C               	goto	l10115
 32884                           
 32885                           ; BSR set to: 5
 32886                           ;../../VLCBlib_PIC/can18_can_2.c: 877:                     for (i=0; i< 32; i++) {
 32887   01347E  6A1C               	clrf	processEnumeration@i^(0+1280),c
 32888   013480                     l10107:
 32889                           
 32890                           ; BSR set to: 5
 32891                           ;../../VLCBlib_PIC/can18_can_2.c: 878:                         *((uint8_t*)(((0x3BB0 +((
      +                          8 +8)*4))+((8 +8)*1)) + (i* (8 + 8)))) = canId & 0x7f;
 32892   013480  501C               	movf	processEnumeration@i^(0+1280),w,c
 32893   013482  6E16               	movwf	??_processEnumeration^(0+1280),c
 32894   013484  6A17               	clrf	(??_processEnumeration+1)^(0+1280),c
 32895   013486  3A16               	swapf	??_processEnumeration^(0+1280),f,c
 32896   013488  3A17               	swapf	(??_processEnumeration+1)^(0+1280),f,c
 32897   01348A  0EF0               	movlw	240
 32898   01348C  1617               	andwf	(??_processEnumeration+1)^(0+1280),f,c
 32899   01348E  5016               	movf	??_processEnumeration^(0+1280),w,c
 32900   013490  0B0F               	andlw	15
 32901   013492  1217               	iorwf	(??_processEnumeration+1)^(0+1280),f,c
 32902   013494  0EF0               	movlw	240
 32903   013496  1616               	andwf	??_processEnumeration^(0+1280),f,c
 32904   013498  0E00               	movlw	0
 32905   01349A  2416               	addwf	??_processEnumeration^(0+1280),w,c
 32906   01349C  6ED9               	movwf	fsr2l,c
 32907   01349E  0E3C               	movlw	60
 32908   0134A0  2017               	addwfc	(??_processEnumeration+1)^(0+1280),w,c
 32909   0134A2  6EDA               	movwf	fsr2h,c
 32910   0134A4  5196               	movf	_canId& (0+255),w,b
 32911   0134A6  0B7F               	andlw	127
 32912   0134A8  6EDF               	movwf	indf2,c
 32913                           
 32914                           ; BSR set to: 5
 32915                           ;../../VLCBlib_PIC/can18_can_2.c: 879:                     }
 32916   0134AA  2A1C               	incf	processEnumeration@i^(0+1280),f,c
 32917                           
 32918                           ; BSR set to: 5
 32919   0134AC  0E1F               	movlw	31
 32920   0134AE  641C               	cpfsgt	processEnumeration@i^(0+1280),c
 32921   0134B0  D7E7               	goto	l10107
 32922                           
 32923                           ; BSR set to: 5
 32924                           ;../../VLCBlib_PIC/can18_can_2.c: 881:                     C1FIFOCON2H |= 0x2;
 32925   0134B2  0101               	movlb	1	; () banked
 32926   0134B4  8369               	bsf	105,1,b	;volatile
 32927   0134B6                     l10115:
 32928                           
 32929                           ;../../VLCBlib_PIC/can18_can_2.c: 883:                 enumerationState = NO_ENUMERATION
      +                          ;
 32930   0134B6  0105               	movlb	5	; () banked
 32931   0134B8  6B93               	clrf	_enumerationState& (0+255),b
 32932   0134BA  0012               	return	
 32933   0134BC                     l10119:
 32934   0134BC  0105               	movlb	5	; () banked
 32935   0134BE  5193               	movf	_enumerationState& (0+255),w,b
 32936   0134C0  6E16               	movwf	??_processEnumeration^(0+1280),c
 32937   0134C2  6A17               	clrf	(??_processEnumeration+1)^(0+1280),c
 32938                           
 32939                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32940                           ; Switch size 1, requested type "simple"
 32941                           ; Number of cases is 1, Range of values is 0 to 0
 32942                           ; switch strategies available:
 32943                           ; Name         Instructions Cycles
 32944                           ; simple_byte            4     3 (average)
 32945                           ;	Chosen strategy is simple_byte
 32946   0134C4  5017               	movf	(??_processEnumeration+1)^(0+1280),w,c
 32947   0134C6  0A00               	xorlw	0	; case 0
 32948   0134C8  A4D8               	btfss	status,2,c
 32949   0134CA  0012               	return	
 32950                           
 32951                           ; BSR set to: 5
 32952                           ; Switch size 1, requested type "simple"
 32953                           ; Number of cases is 3, Range of values is 1 to 3
 32954                           ; switch strategies available:
 32955                           ; Name         Instructions Cycles
 32956                           ; simple_byte           10     6 (average)
 32957                           ;	Chosen strategy is simple_byte
 32958   0134CC  5016               	movf	??_processEnumeration^(0+1280),w,c
 32959   0134CE  0A01               	xorlw	1	; case 1
 32960   0134D0  B4D8               	btfsc	status,2,c
 32961   0134D2  D766               	goto	l10059
 32962   0134D4  0A03               	xorlw	3	; case 2
 32963   0134D6  B4D8               	btfsc	status,2,c
 32964   0134D8  D77F               	goto	l10063
 32965   0134DA  0A01               	xorlw	1	; case 3
 32966   0134DC  A4D8               	btfss	status,2,c
 32967   0134DE  0012               	return	
 32968   0134E0  D77B               	goto	l10063
 32969   0134E2                     __end_of_processEnumeration:
 32970                           	callstack 0
 32971                           
 32972 ;; *************** function _setNewCanId *****************
 32973 ;; Defined at:
 32974 ;;		line 896 in file "../../VLCBlib_PIC/can18_can_2.c"
 32975 ;; Parameters:    Size  Location     Type
 32976 ;;  newCanId        1    wreg     unsigned char 
 32977 ;; Auto vars:     Size  Location     Type
 32978 ;;  newCanId        1   20[COMRAM] unsigned char 
 32979 ;; Return value:  Size  Location     Type
 32980 ;;                  1    wreg      enum E23636
 32981 ;; Registers used:
 32982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32983 ;; Tracked objects:
 32984 ;;		On entry : 0/0
 32985 ;;		On exit  : 0/0
 32986 ;;		Unchanged: 0/0
 32987 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 32988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32991 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 32992 ;;Total ram usage:        1 bytes
 32993 ;; Hardware stack levels used: 1
 32994 ;; Hardware stack levels required when called: 6
 32995 ;; This function calls:
 32996 ;;		_prepareSelfEnumResponse
 32997 ;;		_writeNVM
 32998 ;; This function is called by:
 32999 ;;		_processEnumeration
 33000 ;; This function uses a non-reentrant model
 33001 ;;
 33002                           
 33003                           	psect	text39
 33004   01617A                     __ptext39:
 33005                           	callstack 0
 33006   01617A                     _setNewCanId:
 33007                           	callstack 117
 33008                           
 33009                           ;incstack = 0
 33010                           ;setNewCanId@newCanId stored from wreg
 33011   01617A  6E15               	movwf	setNewCanId@newCanId^(0+1280),c
 33012                           
 33013                           ;../../VLCBlib_PIC/can18_can_2.c: 897:     if ((newCanId >= 1) && (newCanId <= 99)) {
 33014   01617C  5015               	movf	setNewCanId@newCanId^(0+1280),w,c
 33015   01617E  B4D8               	btfsc	status,2,c
 33016   016180  0012               	return	
 33017   016182  0E64               	movlw	100
 33018   016184  6015               	cpfslt	setNewCanId@newCanId^(0+1280),c
 33019   016186  0012               	return	
 33020                           
 33021                           ;../../VLCBlib_PIC/can18_can_2.c: 898:         canId = newCanId;
 33022   016188  C515  F596         	movff	setNewCanId@newCanId,_canId
 33023                           
 33024                           ;../../VLCBlib_PIC/can18_can_2.c: 900:         prepareSelfEnumResponse();
 33025   01618C  EC37  F0A9         	call	_prepareSelfEnumResponse	;wreg free
 33026                           
 33027                           ;../../VLCBlib_PIC/can18_can_2.c: 901:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId
      +                           );
 33028   016190  0EFE               	movlw	254
 33029   016192  6E0E               	movwf	writeNVM@index^(0+1280),c
 33030   016194  0E03               	movlw	3
 33031   016196  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 33032   016198  0E00               	movlw	0
 33033   01619A  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 33034   01619C  C515  F511         	movff	setNewCanId@newCanId,writeNVM@value
 33035   0161A0  0E00               	movlw	0
 33036   0161A2  ECC3  F0AD         	call	_writeNVM
 33037                           
 33038                           ;../../VLCBlib_PIC/can18_can_2.c: 903:         canDiagnostics[0x0F].asUint++;
 33039   0161A6  0106               	movlb	6	; () banked
 33040   0161A8  4BC4               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 33041   0161AA  2BC5               	incf	(_canDiagnostics+31)& (0+255),f,b
 33042   0161AC  0012               	return		;funcret
 33043   0161AE                     __end_of_setNewCanId:
 33044                           	callstack 0
 33045                           
 33046 ;; *************** function _prepareSelfEnumResponse *****************
 33047 ;; Defined at:
 33048 ;;		line 389 in file "../../VLCBlib_PIC/can18_can_2.c"
 33049 ;; Parameters:    Size  Location     Type
 33050 ;;		None
 33051 ;; Auto vars:     Size  Location     Type
 33052 ;;  txFifoObj       2    0[COMRAM] PTR unsigned char 
 33053 ;;		 -> RAM(16383), 
 33054 ;; Return value:  Size  Location     Type
 33055 ;;                  1    wreg      void 
 33056 ;; Registers used:
 33057 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33058 ;; Tracked objects:
 33059 ;;		On entry : 0/0
 33060 ;;		On exit  : 0/0
 33061 ;;		Unchanged: 0/0
 33062 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33064 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33066 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33067 ;;Total ram usage:        2 bytes
 33068 ;; Hardware stack levels used: 1
 33069 ;; Hardware stack levels required when called: 1
 33070 ;; This function calls:
 33071 ;;		Nothing
 33072 ;; This function is called by:
 33073 ;;		_canPowerUp
 33074 ;;		_setNewCanId
 33075 ;; This function uses a non-reentrant model
 33076 ;;
 33077                           
 33078                           	psect	text40
 33079   01526E                     __ptext40:
 33080                           	callstack 0
 33081   01526E                     _prepareSelfEnumResponse:
 33082                           	callstack 123
 33083                           
 33084                           ;../../VLCBlib_PIC/can18_can_2.c: 390:     uint8_t* txFifoObj = (uint8_t*) C1FIFOUA1;
 33085                           
 33086                           ;incstack = 0
 33087   01526E  C164 F501          	movff	356,prepareSelfEnumResponse@txFifoObj	;volatile
 33088   015272  C165 F502          	movff	357,prepareSelfEnumResponse@txFifoObj+1	;volatile
 33089                           
 33090                           ;../../VLCBlib_PIC/can18_can_2.c: 392:     while (C1FIFOSTA1Lbits.TFNRFNIF == 1) {
 33091   015276  D02D               	goto	l9081
 33092   015278                     l9077:
 33093                           
 33094                           ; BSR set to: 1
 33095                           ;../../VLCBlib_PIC/can18_can_2.c: 394:         txFifoObj[0] = (canId & 0x7F);
 33096   015278  0105               	movlb	5	; () banked
 33097   01527A  5196               	movf	_canId& (0+255),w,b
 33098   01527C  0B7F               	andlw	127
 33099   01527E  C501  F4D9         	movff	prepareSelfEnumResponse@txFifoObj,fsr2l
 33100   015282  C502  F4DA         	movff	prepareSelfEnumResponse@txFifoObj+1,fsr2h
 33101   015286  6EDF               	movwf	indf2,c
 33102                           
 33103                           ;../../VLCBlib_PIC/can18_can_2.c: 395:         txFifoObj[1] = 0;
 33104   015288  EE20 F001          	lfsr	2,1
 33105   01528C  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 33106   01528E  26D9               	addwf	fsr2l,f,c
 33107   015290  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 33108   015292  22DA               	addwfc	fsr2h,f,c
 33109   015294  6ADF               	clrf	indf2,c
 33110                           
 33111                           ;../../VLCBlib_PIC/can18_can_2.c: 396:         txFifoObj[4] = 0;
 33112   015296  EE20 F004          	lfsr	2,4
 33113   01529A  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 33114   01529C  26D9               	addwf	fsr2l,f,c
 33115   01529E  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 33116   0152A0  22DA               	addwfc	fsr2h,f,c
 33117   0152A2  6ADF               	clrf	indf2,c
 33118                           
 33119                           ;../../VLCBlib_PIC/can18_can_2.c: 397:         txFifoObj[5] = 0;
 33120   0152A4  EE20 F005          	lfsr	2,5
 33121   0152A8  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 33122   0152AA  26D9               	addwf	fsr2l,f,c
 33123   0152AC  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 33124   0152AE  22DA               	addwfc	fsr2h,f,c
 33125   0152B0  6ADF               	clrf	indf2,c
 33126                           
 33127                           ;../../VLCBlib_PIC/can18_can_2.c: 398:         txFifoObj[6] = 0;
 33128   0152B2  EE20 F006          	lfsr	2,6
 33129   0152B6  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 33130   0152B8  26D9               	addwf	fsr2l,f,c
 33131   0152BA  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 33132   0152BC  22DA               	addwfc	fsr2h,f,c
 33133   0152BE  6ADF               	clrf	indf2,c
 33134                           
 33135                           ;../../VLCBlib_PIC/can18_can_2.c: 399:         txFifoObj[7] = 0;
 33136   0152C0  EE20 F007          	lfsr	2,7
 33137   0152C4  5001               	movf	prepareSelfEnumResponse@txFifoObj^(0+1280),w,c
 33138   0152C6  26D9               	addwf	fsr2l,f,c
 33139   0152C8  5002               	movf	(prepareSelfEnumResponse@txFifoObj+1)^(0+1280),w,c
 33140   0152CA  22DA               	addwfc	fsr2h,f,c
 33141   0152CC  6ADF               	clrf	indf2,c
 33142                           
 33143                           ; BSR set to: 5
 33144                           ;../../VLCBlib_PIC/can18_can_2.c: 400:         C1FIFOCON1Hbits.UINC = 1;
 33145   0152CE  0101               	movlb	1	; () banked
 33146   0152D0  815D               	bsf	93,0,b	;volatile
 33147   0152D2                     l9081:
 33148                           
 33149                           ;../../VLCBlib_PIC/can18_can_2.c: 392:     while (C1FIFOSTA1Lbits.TFNRFNIF == 1) {
 33150   0152D2  0101               	movlb	1	; () banked
 33151   0152D4  A160               	btfss	96,0,b	;volatile
 33152   0152D6  0012               	return	
 33153   0152D8  D7CF               	goto	l9077
 33154   0152DA                     __end_of_prepareSelfEnumResponse:
 33155                           	callstack 0
 33156                           
 33157 ;; *************** function _APP_preProcessMessage *****************
 33158 ;; Defined at:
 33159 ;;		line 179 in file "../canpan3Events.c"
 33160 ;; Parameters:    Size  Location     Type
 33161 ;;  m               2   91[COMRAM] PTR struct Message
 33162 ;;		 -> poll@m(9), 
 33163 ;; Auto vars:     Size  Location     Type
 33164 ;;  enn             2   28[BANK5 ] unsigned short 
 33165 ;;  tableIndex      1   31[BANK5 ] unsigned char 
 33166 ;;  switchNo        1   30[BANK5 ] unsigned char 
 33167 ;;  ev              1   27[BANK5 ] unsigned char 
 33168 ;; Return value:  Size  Location     Type
 33169 ;;                  1    wreg      enum E23290
 33170 ;; Registers used:
 33171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33172 ;; Tracked objects:
 33173 ;;		On entry : 0/0
 33174 ;;		On exit  : 0/0
 33175 ;;		Unchanged: 0/0
 33176 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33178 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33179 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33180 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33181 ;;Total ram usage:       10 bytes
 33182 ;; Hardware stack levels used: 1
 33183 ;; Hardware stack levels required when called: 11
 33184 ;; This function calls:
 33185 ;;		NULL
 33186 ;;		_APP_isProducedEvent
 33187 ;;		_bootProcessMessage
 33188 ;;		_canProcessMessage
 33189 ;;		_consumerProcessMessage
 33190 ;;		_findEvent
 33191 ;;		_getEv
 33192 ;;		_mnsProcessMessage
 33193 ;;		_nvProcessMessage
 33194 ;;		_producerProcessMessage
 33195 ;;		_rebuildLookupTable
 33196 ;;		_teachProcessMessage
 33197 ;; This function is called by:
 33198 ;;		_poll
 33199 ;; This function uses a non-reentrant model
 33200 ;;
 33201                           
 33202                           	psect	text41
 33203   0127AE                     __ptext41:
 33204                           	callstack 0
 33205   0127AE                     _APP_preProcessMessage:
 33206                           	callstack 114
 33207                           
 33208                           ;../canpan3Events.c: 180:     uint8_t tableIndex;;../canpan3Events.c: 181:     uint16_t 
      +                          enn;;../canpan3Events.c: 182:     uint8_t switchNo;;../canpan3Events.c: 183:     uint8_t
      +                           ev;;../canpan3Events.c: 185:     if (mode_flags & 1) {
 33209                           
 33210                           ; BSR set to: 1
 33211                           ;incstack = 0
 33212   0127AE  0105               	movlb	5	; () banked
 33213   0127B0  B1A0               	btfsc	_mode_flags& (0+255),0,b
 33214   0127B2  D01F               	goto	l11727
 33215   0127B4  D038               	goto	l11729
 33216   0127B6                     l187:
 33217                           
 33218                           ; BSR set to: 5
 33219                           ;../canpan3Events.c: 193:                 errno = GRSP_OK;
 33220   0127B6  6B9F               	clrf	_errno& (0+255),b
 33221                           
 33222                           ; BSR set to: 5
 33223                           ;../canpan3Events.c: 194:                 eventTeachService.processMessage(m);
 33224   0127B8  C55C  F553         	movff	APP_preProcessMessage@m,producerProcessMessage@m
 33225   0127BC  C55D  F554         	movff	APP_preProcessMessage@m+1,producerProcessMessage@m+1
 33226   0127C0  0E99               	movlw	low (_eventTeachService+8)
 33227   0127C2  6EF6               	movwf	tblptrl,c
 33228   0127C4  0EFF               	movlw	high (_eventTeachService+8)
 33229   0127C6  6EF7               	movwf	tblptrh,c
 33230   0127C8                     	if	0	;tblptru may be non-zero
 33231   0127C8                     	endif
 33232   0127C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 33233   0127C8  0E00               	movlw	low (__pmediumconst shr (0+16))
 33234   0127CA  6EF8               	movwf	tblptru,c
 33235   0127CC                     	endif
 33236   0127CC  D801               	call	u10048
 33237   0127CE  D00D               	goto	u10049
 33238   0127D0                     u10048:
 33239   0127D0  0005               	push	
 33240   0127D2  6EFA               	movwf	pclath,c
 33241   0127D4  0009               	tblrd		*+
 33242   0127D6  50F5               	movf	tablat,w,c
 33243   0127D8  6EFD               	movwf	tosl,c
 33244   0127DA  0009               	tblrd		*+
 33245   0127DC  50F5               	movf	tablat,w,c
 33246   0127DE  6EFE               	movwf	tosh,c
 33247   0127E0  0009               	tblrd		*+
 33248   0127E2  50F5               	movf	tablat,w,c
 33249   0127E4  6EFF               	movwf	tosu,c
 33250   0127E6  50FA               	movf	pclath,w,c
 33251   0127E8  0012               	return		;indir
 33252   0127EA                     u10049:
 33253                           
 33254                           ;../canpan3Events.c: 195:                 rebuildLookupTable();
 33255   0127EA  ECAA  F0AA         	call	_rebuildLookupTable	;wreg free
 33256                           
 33257                           ;../canpan3Events.c: 196:                 return PROCESSED;
 33258   0127EE  0E01               	movlw	1
 33259   0127F0  0012               	return	
 33260   0127F2                     l11727:
 33261                           
 33262                           ; BSR set to: 5
 33263   0127F2  EE20 F001          	lfsr	2,1
 33264   0127F6  505C               	movf	APP_preProcessMessage@m^(0+1280),w,c
 33265   0127F8  26D9               	addwf	fsr2l,f,c
 33266   0127FA  505D               	movf	(APP_preProcessMessage@m+1)^(0+1280),w,c
 33267   0127FC  22DA               	addwfc	fsr2h,f,c
 33268   0127FE  50DF               	movf	indf2,w,c
 33269   012800  6FE2               	movwf	??_APP_preProcessMessage& (0+255),b
 33270   012802  6BE3               	clrf	(??_APP_preProcessMessage+1)& (0+255),b
 33271                           
 33272                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33273                           ; Switch size 1, requested type "simple"
 33274                           ; Number of cases is 1, Range of values is 0 to 0
 33275                           ; switch strategies available:
 33276                           ; Name         Instructions Cycles
 33277                           ; simple_byte            4     3 (average)
 33278                           ;	Chosen strategy is simple_byte
 33279   012804  51E3               	movf	(??_APP_preProcessMessage+1)& (0+255),w,b
 33280   012806  0A00               	xorlw	0	; case 0
 33281   012808  A4D8               	btfss	status,2,c
 33282   01280A  D00D               	goto	l11729
 33283                           
 33284                           ; BSR set to: 5
 33285                           ; Switch size 1, requested type "simple"
 33286                           ; Number of cases is 4, Range of values is 85 to 245
 33287                           ; switch strategies available:
 33288                           ; Name         Instructions Cycles
 33289                           ; simple_byte           13     7 (average)
 33290                           ;	Chosen strategy is simple_byte
 33291   01280C  51E2               	movf	??_APP_preProcessMessage& (0+255),w,b
 33292   01280E  0A55               	xorlw	85	; case 85
 33293   012810  B4D8               	btfsc	status,2,c
 33294   012812  D7D1               	goto	l187
 33295   012814  0AC0               	xorlw	192	; case 149
 33296   012816  B4D8               	btfsc	status,2,c
 33297   012818  D7CE               	goto	l187
 33298   01281A  0A47               	xorlw	71	; case 210
 33299   01281C  B4D8               	btfsc	status,2,c
 33300   01281E  D7CB               	goto	l187
 33301   012820  0A27               	xorlw	39	; case 245
 33302   012822  B4D8               	btfsc	status,2,c
 33303   012824  D7C8               	goto	l187
 33304   012826                     l11729:
 33305                           
 33306                           ; BSR set to: 5
 33307                           ;../canpan3Events.c: 203:     if (m->len < 5) return NOT_PROCESSED;
 33308   012826  C55C  F4D9         	movff	APP_preProcessMessage@m,fsr2l
 33309   01282A  C55D  F4DA         	movff	APP_preProcessMessage@m+1,fsr2h
 33310   01282E  0E05               	movlw	5
 33311   012830  60DF               	cpfslt	indf2,c
 33312   012832  D002               	goto	l11735
 33313   012834                     u10050:
 33314   012834  0E00               	movlw	0
 33315   012836  0012               	return	
 33316   012838                     l11735:
 33317                           
 33318                           ; BSR set to: 5
 33319                           ;../canpan3Events.c: 204:     enn = ((uint16_t)m->bytes[0])*256+m->bytes[1];
 33320   012838  EE20 F003          	lfsr	2,3
 33321   01283C  505C               	movf	APP_preProcessMessage@m^(0+1280),w,c
 33322   01283E  26D9               	addwf	fsr2l,f,c
 33323   012840  505D               	movf	(APP_preProcessMessage@m+1)^(0+1280),w,c
 33324   012842  22DA               	addwfc	fsr2h,f,c
 33325   012844  50DF               	movf	indf2,w,c
 33326   012846  6FE2               	movwf	??_APP_preProcessMessage& (0+255),b
 33327   012848  EE20 F002          	lfsr	2,2
 33328   01284C  505C               	movf	APP_preProcessMessage@m^(0+1280),w,c
 33329   01284E  26D9               	addwf	fsr2l,f,c
 33330   012850  505D               	movf	(APP_preProcessMessage@m+1)^(0+1280),w,c
 33331   012852  22DA               	addwfc	fsr2h,f,c
 33332   012854  50DF               	movf	indf2,w,c
 33333   012856  6FE3               	movwf	(??_APP_preProcessMessage+1)& (0+255),b
 33334   012858  51E2               	movf	??_APP_preProcessMessage& (0+255),w,b
 33335   01285A  6FE6               	movwf	APP_preProcessMessage@enn& (0+255),b
 33336   01285C  C5E3  F5E7         	movff	??_APP_preProcessMessage+1,APP_preProcessMessage@enn+1
 33337                           
 33338                           ;../canpan3Events.c: 205:     switch (m->opc) {
 33339   012860  D005               	goto	l11747
 33340   012862                     l195:
 33341                           
 33342                           ; BSR set to: 5
 33343                           ;../canpan3Events.c: 212:   enn = 0;
 33344                           
 33345                           ; BSR set to: 5
 33346   012862  0E00               	movlw	0
 33347   012864  6FE7               	movwf	(APP_preProcessMessage@enn+1)& (0+255),b
 33348   012866  0E00               	movlw	0
 33349   012868  6FE6               	movwf	APP_preProcessMessage@enn& (0+255),b
 33350                           
 33351                           ; BSR set to: 5
 33352                           ;../canpan3Events.c: 220:             break;
 33353                           
 33354                           ;../canpan3Events.c: 218:         case OPC_ACON3:
 33355   01286A  D03F               	goto	l11749
 33356   01286C                     l11747:
 33357                           
 33358                           ; BSR set to: 5
 33359   01286C  EE20 F001          	lfsr	2,1
 33360   012870  505C               	movf	APP_preProcessMessage@m^(0+1280),w,c
 33361   012872  26D9               	addwf	fsr2l,f,c
 33362   012874  505D               	movf	(APP_preProcessMessage@m+1)^(0+1280),w,c
 33363   012876  22DA               	addwfc	fsr2h,f,c
 33364   012878  50DF               	movf	indf2,w,c
 33365   01287A  6FE2               	movwf	??_APP_preProcessMessage& (0+255),b
 33366   01287C  6BE3               	clrf	(??_APP_preProcessMessage+1)& (0+255),b
 33367                           
 33368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33369                           ; Switch size 1, requested type "simple"
 33370                           ; Number of cases is 1, Range of values is 0 to 0
 33371                           ; switch strategies available:
 33372                           ; Name         Instructions Cycles
 33373                           ; simple_byte            4     3 (average)
 33374                           ;	Chosen strategy is simple_byte
 33375   01287E  51E3               	movf	(??_APP_preProcessMessage+1)& (0+255),w,b
 33376   012880  0A00               	xorlw	0	; case 0
 33377   012882  A4D8               	btfss	status,2,c
 33378   012884  D7D7               	goto	u10050
 33379                           
 33380                           ; BSR set to: 5
 33381                           ; Switch size 1, requested type "simple"
 33382                           ; Number of cases is 16, Range of values is 144 to 249
 33383                           ; switch strategies available:
 33384                           ; Name         Instructions Cycles
 33385                           ; simple_byte           49    25 (average)
 33386                           ;	Chosen strategy is simple_byte
 33387   012886  51E2               	movf	??_APP_preProcessMessage& (0+255),w,b
 33388   012888  0A90               	xorlw	144	; case 144
 33389   01288A  B4D8               	btfsc	status,2,c
 33390   01288C  D02E               	goto	l11749
 33391   01288E  0A01               	xorlw	1	; case 145
 33392   012890  B4D8               	btfsc	status,2,c
 33393   012892  D02B               	goto	l11749
 33394   012894  0A09               	xorlw	9	; case 152
 33395   012896  B4D8               	btfsc	status,2,c
 33396   012898  D7E4               	goto	l195
 33397   01289A  0A01               	xorlw	1	; case 153
 33398   01289C  B4D8               	btfsc	status,2,c
 33399   01289E  D7E1               	goto	l195
 33400   0128A0  0A29               	xorlw	41	; case 176
 33401   0128A2  B4D8               	btfsc	status,2,c
 33402   0128A4  D022               	goto	l11749
 33403   0128A6  0A01               	xorlw	1	; case 177
 33404   0128A8  B4D8               	btfsc	status,2,c
 33405   0128AA  D01F               	goto	l11749
 33406   0128AC  0A09               	xorlw	9	; case 184
 33407   0128AE  B4D8               	btfsc	status,2,c
 33408   0128B0  D7D8               	goto	l195
 33409   0128B2  0A01               	xorlw	1	; case 185
 33410   0128B4  B4D8               	btfsc	status,2,c
 33411   0128B6  D7D5               	goto	l195
 33412   0128B8  0A69               	xorlw	105	; case 208
 33413   0128BA  B4D8               	btfsc	status,2,c
 33414   0128BC  D016               	goto	l11749
 33415   0128BE  0A01               	xorlw	1	; case 209
 33416   0128C0  B4D8               	btfsc	status,2,c
 33417   0128C2  D013               	goto	l11749
 33418   0128C4  0A09               	xorlw	9	; case 216
 33419   0128C6  B4D8               	btfsc	status,2,c
 33420   0128C8  D7CC               	goto	l195
 33421   0128CA  0A01               	xorlw	1	; case 217
 33422   0128CC  B4D8               	btfsc	status,2,c
 33423   0128CE  D7C9               	goto	l195
 33424   0128D0  0A29               	xorlw	41	; case 240
 33425   0128D2  B4D8               	btfsc	status,2,c
 33426   0128D4  D00A               	goto	l11749
 33427   0128D6  0A01               	xorlw	1	; case 241
 33428   0128D8  B4D8               	btfsc	status,2,c
 33429   0128DA  D007               	goto	l11749
 33430   0128DC  0A09               	xorlw	9	; case 248
 33431   0128DE  B4D8               	btfsc	status,2,c
 33432   0128E0  D7C0               	goto	l195
 33433   0128E2  0A01               	xorlw	1	; case 249
 33434   0128E4  B4D8               	btfsc	status,2,c
 33435   0128E6  D7BD               	goto	l195
 33436   0128E8  D7A5               	goto	u10050
 33437   0128EA                     l11749:
 33438                           
 33439                           ; BSR set to: 5
 33440                           ;../canpan3Events.c: 241:     tableIndex = findEvent(enn, ((uint16_t)m->bytes[2])*256+m-
      +                          >bytes[3]);
 33441   0128EA  C5E6  F51E         	movff	APP_preProcessMessage@enn,findEvent@nodeNumber
 33442   0128EE  C5E7  F51F         	movff	APP_preProcessMessage@enn+1,findEvent@nodeNumber+1
 33443   0128F2  EE20 F005          	lfsr	2,5
 33444   0128F6  505C               	movf	APP_preProcessMessage@m^(0+1280),w,c
 33445   0128F8  26D9               	addwf	fsr2l,f,c
 33446   0128FA  505D               	movf	(APP_preProcessMessage@m+1)^(0+1280),w,c
 33447   0128FC  22DA               	addwfc	fsr2h,f,c
 33448   0128FE  50DF               	movf	indf2,w,c
 33449   012900  6FE2               	movwf	??_APP_preProcessMessage& (0+255),b
 33450   012902  EE20 F004          	lfsr	2,4
 33451   012906  505C               	movf	APP_preProcessMessage@m^(0+1280),w,c
 33452   012908  26D9               	addwf	fsr2l,f,c
 33453   01290A  505D               	movf	(APP_preProcessMessage@m+1)^(0+1280),w,c
 33454   01290C  22DA               	addwfc	fsr2h,f,c
 33455   01290E  50DF               	movf	indf2,w,c
 33456   012910  6FE3               	movwf	(??_APP_preProcessMessage+1)& (0+255),b
 33457   012912  51E2               	movf	??_APP_preProcessMessage& (0+255),w,b
 33458   012914  6E20               	movwf	findEvent@eventNumber^(0+1280),c
 33459   012916  C5E3  F521         	movff	??_APP_preProcessMessage+1,findEvent@eventNumber+1
 33460   01291A  ECAE  F0A4         	call	_findEvent	;wreg free
 33461   01291E  0105               	movlb	5	; () banked
 33462   012920  6FE9               	movwf	APP_preProcessMessage@tableIndex& (0+255),b
 33463                           
 33464                           ; BSR set to: 5
 33465                           ;../canpan3Events.c: 242:     if (tableIndex == 0xff) return NOT_PROCESSED;
 33466   012922  29E9               	incf	APP_preProcessMessage@tableIndex& (0+255),w,b
 33467   012924  B4D8               	btfsc	status,2,c
 33468   012926  D786               	goto	u10050
 33469                           
 33470                           ; BSR set to: 5
 33471                           ;../canpan3Events.c: 243:     if (APP_isProducedEvent(tableIndex)) {
 33472   012928  51E9               	movf	APP_preProcessMessage@tableIndex& (0+255),w,b
 33473   01292A  ECC3  F0AF         	call	_APP_isProducedEvent
 33474   01292E  0900               	iorlw	0
 33475   012930  B4D8               	btfsc	status,2,c
 33476   012932  D780               	goto	u10050
 33477                           
 33478                           ;../canpan3Events.c: 245:         ev = (uint8_t)getEv(tableIndex, 2);
 33479   012934  0E02               	movlw	2
 33480   012936  6E0D               	movwf	getEv@evNum^(0+1280),c
 33481   012938  0105               	movlb	5	; () banked
 33482   01293A  51E9               	movf	APP_preProcessMessage@tableIndex& (0+255),w,b
 33483   01293C  ECA3  F0A9         	call	_getEv
 33484   012940  500D               	movf	?_getEv^(0+1280),w,c
 33485   012942  0105               	movlb	5	; () banked
 33486   012944  6FE5               	movwf	APP_preProcessMessage@ev& (0+255),b
 33487                           
 33488                           ; BSR set to: 5
 33489                           ;../canpan3Events.c: 246:         if (ev & 8) {
 33490   012946  A7E5               	btfss	APP_preProcessMessage@ev& (0+255),3,b
 33491   012948  D775               	goto	u10050
 33492                           
 33493                           ; BSR set to: 5
 33494                           ;../canpan3Events.c: 247:             switchNo = (uint8_t)getEv(tableIndex, 1) - 1;
 33495   01294A  0E01               	movlw	1
 33496   01294C  6E0D               	movwf	getEv@evNum^(0+1280),c
 33497   01294E  51E9               	movf	APP_preProcessMessage@tableIndex& (0+255),w,b
 33498   012950  ECA3  F0A9         	call	_getEv
 33499   012954  040D               	decf	?_getEv^(0+1280),w,c
 33500   012956  0105               	movlb	5	; () banked
 33501   012958  6FE8               	movwf	APP_preProcessMessage@switchNo& (0+255),b
 33502                           
 33503                           ; BSR set to: 5
 33504                           ;../canpan3Events.c: 248:             if (switchNo < (8*4)) {
 33505   01295A  0E20               	movlw	32
 33506   01295C  61E8               	cpfslt	APP_preProcessMessage@switchNo& (0+255),b
 33507   01295E  D76A               	goto	u10050
 33508                           
 33509                           ; BSR set to: 5
 33510                           ;../canpan3Events.c: 249:                 outputState[switchNo] = !(m->opc & 1);
 33511   012960  0E41               	movlw	low _outputState
 33512   012962  25E8               	addwf	APP_preProcessMessage@switchNo& (0+255),w,b
 33513   012964  6ED9               	movwf	fsr2l,c
 33514   012966  6ADA               	clrf	fsr2h,c
 33515   012968  0E06               	movlw	high _outputState
 33516   01296A  22DA               	addwfc	fsr2h,f,c
 33517   01296C  EE10 F001          	lfsr	1,1
 33518   012970  505C               	movf	APP_preProcessMessage@m^(0+1280),w,c
 33519   012972  26E1               	addwf	fsr1l,f,c
 33520   012974  505D               	movf	(APP_preProcessMessage@m+1)^(0+1280),w,c
 33521   012976  22E2               	addwfc	fsr1h,f,c
 33522   012978  B0E7               	btfsc	indf1,0,c
 33523   01297A  D002               	goto	u10100
 33524   01297C  0E01               	movlw	1
 33525   01297E  D001               	goto	u10110
 33526   012980                     u10100:
 33527   012980  0E00               	movlw	0
 33528   012982                     u10110:
 33529   012982  6EDF               	movwf	indf2,c
 33530   012984  D757               	goto	u10050
 33531   012986                     __end_of_APP_preProcessMessage:
 33532                           	callstack 0
 33533                           
 33534 ;; *************** function _producerProcessMessage *****************
 33535 ;; Defined at:
 33536 ;;		line 114 in file "../../VLCBlib_PIC/event_producer_simple.c"
 33537 ;; Parameters:    Size  Location     Type
 33538 ;;  m               2   82[COMRAM] PTR struct Message
 33539 ;;		 -> poll@m(9), 
 33540 ;; Auto vars:     Size  Location     Type
 33541 ;;  index           1   90[COMRAM] unsigned char 
 33542 ;; Return value:  Size  Location     Type
 33543 ;;                  1    wreg      enum E23290
 33544 ;; Registers used:
 33545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33546 ;; Tracked objects:
 33547 ;;		On entry : 0/0
 33548 ;;		On exit  : 0/0
 33549 ;;		Unchanged: 0/0
 33550 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33551 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33553 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33554 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33555 ;;Total ram usage:        9 bytes
 33556 ;; Hardware stack levels used: 1
 33557 ;; Hardware stack levels required when called: 6
 33558 ;; This function calls:
 33559 ;;		_APP_GetEventIndexState
 33560 ;;		_findEvent
 33561 ;;		_sendMessage3
 33562 ;;		_sendMessage4
 33563 ;; This function is called by:
 33564 ;;		_APP_preProcessMessage
 33565 ;;		_poll
 33566 ;; This function uses a non-reentrant model
 33567 ;;
 33568                           
 33569                           	psect	text42
 33570   01259A                     __ptext42:
 33571                           	callstack 0
 33572   01259A                     _producerProcessMessage:
 33573                           	callstack 119
 33574                           
 33575                           ;../../VLCBlib_PIC/event_producer_simple.c: 115:     uint8_t index;;../../VLCBlib_PIC/ev
      +                          ent_producer_simple.c: 117:     switch (m->opc) {
 33576                           
 33577                           ;incstack = 0
 33578   01259A  D0F3               	goto	l11335
 33579   01259C                     l11295:
 33580                           
 33581                           ;../../VLCBlib_PIC/event_producer_simple.c: 120:             if (m->len < 5) {
 33582   01259C  C553  F4D9         	movff	producerProcessMessage@m,fsr2l
 33583   0125A0  C554  F4DA         	movff	producerProcessMessage@m+1,fsr2h
 33584   0125A4  0E05               	movlw	5
 33585   0125A6  60DF               	cpfslt	indf2,c
 33586   0125A8  D00B               	goto	l11303
 33587                           
 33588                           ;../../VLCBlib_PIC/event_producer_simple.c: 121:                 sendMessage3(OPC_CMDERR
      +                          , nn.bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 33589   0125AA  C55F  F525         	movff	_nn+1,sendMessage3@data1
 33590   0125AE  C55E  F526         	movff	_nn,sendMessage3@data2
 33591   0125B2  0E01               	movlw	1
 33592   0125B4  6E27               	movwf	sendMessage3@data3^(0+1280),c
 33593   0125B6  0E6F               	movlw	111
 33594   0125B8  EC8E  F0B1         	call	_sendMessage3
 33595   0125BC                     l11299:
 33596                           
 33597                           ;../../VLCBlib_PIC/event_producer_simple.c: 122:                 return PROCESSED;
 33598   0125BC  0E01               	movlw	1
 33599   0125BE  0012               	return	
 33600   0125C0                     l11303:
 33601                           
 33602                           ;../../VLCBlib_PIC/event_producer_simple.c: 124:             if (m->opc == OPC_AREQ) {
 33603   0125C0  EE20 F001          	lfsr	2,1
 33604   0125C4  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33605   0125C6  26D9               	addwf	fsr2l,f,c
 33606   0125C8  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33607   0125CA  22DA               	addwfc	fsr2h,f,c
 33608   0125CC  0E92               	movlw	146
 33609   0125CE  18DE               	xorwf	postinc2,w,c
 33610   0125D0  A4D8               	btfss	status,2,c
 33611   0125D2  D02B               	goto	l11307
 33612                           
 33613                           ;../../VLCBlib_PIC/event_producer_simple.c: 125:                 index = findEvent((uint
      +                          16_t)((m->bytes[0]<<8)|(m->bytes[1])), (uint16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 33614   0125D4  EE20 F003          	lfsr	2,3
 33615   0125D8  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33616   0125DA  26D9               	addwf	fsr2l,f,c
 33617   0125DC  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33618   0125DE  22DA               	addwfc	fsr2h,f,c
 33619   0125E0  50DF               	movf	indf2,w,c
 33620   0125E2  6E55               	movwf	??_producerProcessMessage^(0+1280),c
 33621   0125E4  EE20 F002          	lfsr	2,2
 33622   0125E8  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33623   0125EA  26D9               	addwf	fsr2l,f,c
 33624   0125EC  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33625   0125EE  22DA               	addwfc	fsr2h,f,c
 33626   0125F0  50DF               	movf	indf2,w,c
 33627   0125F2  6E56               	movwf	(??_producerProcessMessage+1)^(0+1280),c
 33628   0125F4  5055               	movf	??_producerProcessMessage^(0+1280),w,c
 33629   0125F6  6E1E               	movwf	findEvent@nodeNumber^(0+1280),c
 33630   0125F8  C556  F51F         	movff	??_producerProcessMessage+1,findEvent@nodeNumber+1
 33631   0125FC  EE20 F005          	lfsr	2,5
 33632   012600  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33633   012602  26D9               	addwf	fsr2l,f,c
 33634   012604  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33635   012606  22DA               	addwfc	fsr2h,f,c
 33636   012608  50DF               	movf	indf2,w,c
 33637   01260A  6E58               	movwf	(??_producerProcessMessage+3)^(0+1280),c
 33638   01260C  EE20 F004          	lfsr	2,4
 33639   012610  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33640   012612  26D9               	addwf	fsr2l,f,c
 33641   012614  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33642   012616  22DA               	addwfc	fsr2h,f,c
 33643   012618  50DF               	movf	indf2,w,c
 33644   01261A  6E59               	movwf	(??_producerProcessMessage+4)^(0+1280),c
 33645   01261C  5058               	movf	(??_producerProcessMessage+3)^(0+1280),w,c
 33646   01261E  6E20               	movwf	findEvent@eventNumber^(0+1280),c
 33647   012620  C559  F521         	movff	??_producerProcessMessage+4,findEvent@eventNumber+1
 33648   012624  ECAE  F0A4         	call	_findEvent	;wreg free
 33649   012628  D01A               	goto	L3
 33650   01262A                     l11307:
 33651                           
 33652                           ;../../VLCBlib_PIC/event_producer_simple.c: 127:                 index = findEvent(0, (u
      +                          int16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 33653   01262A  0E00               	movlw	0
 33654   01262C  6E1F               	movwf	(findEvent@nodeNumber+1)^(0+1280),c
 33655   01262E  0E00               	movlw	0
 33656   012630  6E1E               	movwf	findEvent@nodeNumber^(0+1280),c
 33657   012632  EE20 F005          	lfsr	2,5
 33658   012636  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33659   012638  26D9               	addwf	fsr2l,f,c
 33660   01263A  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33661   01263C  22DA               	addwfc	fsr2h,f,c
 33662   01263E  50DF               	movf	indf2,w,c
 33663   012640  6E55               	movwf	??_producerProcessMessage^(0+1280),c
 33664   012642  EE20 F004          	lfsr	2,4
 33665   012646  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33666   012648  26D9               	addwf	fsr2l,f,c
 33667   01264A  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33668   01264C  22DA               	addwfc	fsr2h,f,c
 33669   01264E  50DF               	movf	indf2,w,c
 33670   012650  6E56               	movwf	(??_producerProcessMessage+1)^(0+1280),c
 33671   012652  5055               	movf	??_producerProcessMessage^(0+1280),w,c
 33672   012654  6E20               	movwf	findEvent@eventNumber^(0+1280),c
 33673   012656  C556  F521         	movff	??_producerProcessMessage+1,findEvent@eventNumber+1
 33674   01265A  ECAE  F0A4         	call	_findEvent	;wreg free
 33675   01265E                     L3:
 33676   01265E  6E5B               	movwf	producerProcessMessage@index^(0+1280),c
 33677                           
 33678                           ;../../VLCBlib_PIC/event_producer_simple.c: 129:             if (index == 0xff) return P
      +                          ROCESSED;
 33679   012660  285B               	incf	producerProcessMessage@index^(0+1280),w,c
 33680   012662  B4D8               	btfsc	status,2,c
 33681   012664  D7AB               	goto	l11299
 33682                           
 33683                           ;../../VLCBlib_PIC/event_producer_simple.c: 131:             if (m->opc == OPC_AREQ) {
 33684   012666  EE20 F001          	lfsr	2,1
 33685   01266A  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33686   01266C  26D9               	addwf	fsr2l,f,c
 33687   01266E  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33688   012670  22DA               	addwfc	fsr2h,f,c
 33689   012672  0E92               	movlw	146
 33690   012674  18DE               	xorwf	postinc2,w,c
 33691   012676  A4D8               	btfss	status,2,c
 33692   012678  D04E               	goto	l11323
 33693                           
 33694                           ;../../VLCBlib_PIC/event_producer_simple.c: 132:                 if (APP_GetEventIndexSt
      +                          ate(index) == EVENT_ON) {
 33695   01267A  505B               	movf	producerProcessMessage@index^(0+1280),w,c
 33696   01267C  ECA0  F0AE         	call	_APP_GetEventIndexState
 33697   012680  06E8               	decf	wreg,f,c
 33698   012682  A4D8               	btfss	status,2,c
 33699   012684  D024               	goto	l11321
 33700                           
 33701                           ;../../VLCBlib_PIC/event_producer_simple.c: 133:                     sendMessage4(OPC_AR
      +                          ON, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 33702   012686  EE20 F002          	lfsr	2,2
 33703   01268A  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33704   01268C  26D9               	addwf	fsr2l,f,c
 33705   01268E  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33706   012690  22DA               	addwfc	fsr2h,f,c
 33707   012692  50DF               	movf	indf2,w,c
 33708   012694  6E25               	movwf	sendMessage4@data1^(0+1280),c
 33709   012696  EE20 F003          	lfsr	2,3
 33710   01269A  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33711   01269C  26D9               	addwf	fsr2l,f,c
 33712   01269E  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33713   0126A0  22DA               	addwfc	fsr2h,f,c
 33714   0126A2  50DF               	movf	indf2,w,c
 33715   0126A4  6E26               	movwf	sendMessage4@data2^(0+1280),c
 33716   0126A6  EE20 F004          	lfsr	2,4
 33717   0126AA  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33718   0126AC  26D9               	addwf	fsr2l,f,c
 33719   0126AE  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33720   0126B0  22DA               	addwfc	fsr2h,f,c
 33721   0126B2  50DF               	movf	indf2,w,c
 33722   0126B4  6E27               	movwf	sendMessage4@data3^(0+1280),c
 33723   0126B6  EE20 F005          	lfsr	2,5
 33724   0126BA  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33725   0126BC  26D9               	addwf	fsr2l,f,c
 33726   0126BE  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33727   0126C0  22DA               	addwfc	fsr2h,f,c
 33728   0126C2  50DF               	movf	indf2,w,c
 33729   0126C4  6E28               	movwf	sendMessage4@data4^(0+1280),c
 33730   0126C6  0E93               	movlw	147
 33731   0126C8  ECE2  F0B1         	call	_sendMessage4
 33732                           
 33733                           ;../../VLCBlib_PIC/event_producer_simple.c: 134:                 } else {
 33734   0126CC  D777               	goto	l11299
 33735   0126CE                     l11321:
 33736                           
 33737                           ;../../VLCBlib_PIC/event_producer_simple.c: 135:                     sendMessage4(OPC_AR
      +                          OF, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 33738   0126CE  EE20 F002          	lfsr	2,2
 33739   0126D2  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33740   0126D4  26D9               	addwf	fsr2l,f,c
 33741   0126D6  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33742   0126D8  22DA               	addwfc	fsr2h,f,c
 33743   0126DA  50DF               	movf	indf2,w,c
 33744   0126DC  6E25               	movwf	sendMessage4@data1^(0+1280),c
 33745   0126DE  EE20 F003          	lfsr	2,3
 33746   0126E2  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33747   0126E4  26D9               	addwf	fsr2l,f,c
 33748   0126E6  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33749   0126E8  22DA               	addwfc	fsr2h,f,c
 33750   0126EA  50DF               	movf	indf2,w,c
 33751   0126EC  6E26               	movwf	sendMessage4@data2^(0+1280),c
 33752   0126EE  EE20 F004          	lfsr	2,4
 33753   0126F2  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33754   0126F4  26D9               	addwf	fsr2l,f,c
 33755   0126F6  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33756   0126F8  22DA               	addwfc	fsr2h,f,c
 33757   0126FA  50DF               	movf	indf2,w,c
 33758   0126FC  6E27               	movwf	sendMessage4@data3^(0+1280),c
 33759   0126FE  EE20 F005          	lfsr	2,5
 33760   012702  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33761   012704  26D9               	addwf	fsr2l,f,c
 33762   012706  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33763   012708  22DA               	addwfc	fsr2h,f,c
 33764   01270A  50DF               	movf	indf2,w,c
 33765   01270C  6E28               	movwf	sendMessage4@data4^(0+1280),c
 33766   01270E  0E94               	movlw	148
 33767   012710  ECE2  F0B1         	call	_sendMessage4
 33768   012714  D753               	goto	l11299
 33769   012716                     l11323:
 33770                           
 33771                           ;../../VLCBlib_PIC/event_producer_simple.c: 138:                 if (APP_GetEventIndexSt
      +                          ate(index) == EVENT_ON) {
 33772   012716  505B               	movf	producerProcessMessage@index^(0+1280),w,c
 33773   012718  ECA0  F0AE         	call	_APP_GetEventIndexState
 33774   01271C  06E8               	decf	wreg,f,c
 33775   01271E  A4D8               	btfss	status,2,c
 33776   012720  D018               	goto	l11327
 33777                           
 33778                           ;../../VLCBlib_PIC/event_producer_simple.c: 139:                     sendMessage4(OPC_AR
      +                          SON, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 33779   012722  C55F  F525         	movff	_nn+1,sendMessage4@data1
 33780   012726  C55E  F526         	movff	_nn,sendMessage4@data2
 33781   01272A  EE20 F004          	lfsr	2,4
 33782   01272E  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33783   012730  26D9               	addwf	fsr2l,f,c
 33784   012732  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33785   012734  22DA               	addwfc	fsr2h,f,c
 33786   012736  50DF               	movf	indf2,w,c
 33787   012738  6E27               	movwf	sendMessage4@data3^(0+1280),c
 33788   01273A  EE20 F005          	lfsr	2,5
 33789   01273E  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33790   012740  26D9               	addwf	fsr2l,f,c
 33791   012742  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33792   012744  22DA               	addwfc	fsr2h,f,c
 33793   012746  50DF               	movf	indf2,w,c
 33794   012748  6E28               	movwf	sendMessage4@data4^(0+1280),c
 33795   01274A  0E9D               	movlw	157
 33796   01274C  ECE2  F0B1         	call	_sendMessage4
 33797                           
 33798                           ;../../VLCBlib_PIC/event_producer_simple.c: 140:                 } else {
 33799   012750  D735               	goto	l11299
 33800   012752                     l11327:
 33801                           
 33802                           ;../../VLCBlib_PIC/event_producer_simple.c: 141:                     sendMessage4(OPC_AR
      +                          SOF, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 33803   012752  C55F  F525         	movff	_nn+1,sendMessage4@data1
 33804   012756  C55E  F526         	movff	_nn,sendMessage4@data2
 33805   01275A  EE20 F004          	lfsr	2,4
 33806   01275E  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33807   012760  26D9               	addwf	fsr2l,f,c
 33808   012762  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33809   012764  22DA               	addwfc	fsr2h,f,c
 33810   012766  50DF               	movf	indf2,w,c
 33811   012768  6E27               	movwf	sendMessage4@data3^(0+1280),c
 33812   01276A  EE20 F005          	lfsr	2,5
 33813   01276E  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33814   012770  26D9               	addwf	fsr2l,f,c
 33815   012772  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33816   012774  22DA               	addwfc	fsr2h,f,c
 33817   012776  50DF               	movf	indf2,w,c
 33818   012778  6E28               	movwf	sendMessage4@data4^(0+1280),c
 33819   01277A  0E9E               	movlw	158
 33820   01277C  ECE2  F0B1         	call	_sendMessage4
 33821   012780  D71D               	goto	l11299
 33822   012782                     l11335:
 33823   012782  EE20 F001          	lfsr	2,1
 33824   012786  5053               	movf	producerProcessMessage@m^(0+1280),w,c
 33825   012788  26D9               	addwf	fsr2l,f,c
 33826   01278A  5054               	movf	(producerProcessMessage@m+1)^(0+1280),w,c
 33827   01278C  22DA               	addwfc	fsr2h,f,c
 33828   01278E  50DF               	movf	indf2,w,c
 33829   012790  6E55               	movwf	??_producerProcessMessage^(0+1280),c
 33830   012792  6A56               	clrf	(??_producerProcessMessage+1)^(0+1280),c
 33831                           
 33832                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33833                           ; Switch size 1, requested type "simple"
 33834                           ; Number of cases is 1, Range of values is 0 to 0
 33835                           ; switch strategies available:
 33836                           ; Name         Instructions Cycles
 33837                           ; simple_byte            4     3 (average)
 33838                           ;	Chosen strategy is simple_byte
 33839   012794  5056               	movf	(??_producerProcessMessage+1)^(0+1280),w,c
 33840   012796  0A00               	xorlw	0	; case 0
 33841   012798  A4D8               	btfss	status,2,c
 33842   01279A  D007               	goto	l11337
 33843                           
 33844                           ; Switch size 1, requested type "simple"
 33845                           ; Number of cases is 2, Range of values is 146 to 154
 33846                           ; switch strategies available:
 33847                           ; Name         Instructions Cycles
 33848                           ; simple_byte            7     4 (average)
 33849                           ;	Chosen strategy is simple_byte
 33850   01279C  5055               	movf	??_producerProcessMessage^(0+1280),w,c
 33851   01279E  0A92               	xorlw	146	; case 146
 33852   0127A0  B4D8               	btfsc	status,2,c
 33853   0127A2  D6FC               	goto	l11295
 33854   0127A4  0A08               	xorlw	8	; case 154
 33855   0127A6  B4D8               	btfsc	status,2,c
 33856   0127A8  D6F9               	goto	l11295
 33857   0127AA                     l11337:
 33858                           
 33859                           ;../../VLCBlib_PIC/event_producer_simple.c: 148:     return NOT_PROCESSED;
 33860   0127AA  0E00               	movlw	0
 33861   0127AC  0012               	return		;funcret
 33862   0127AE                     __end_of_producerProcessMessage:
 33863                           	callstack 0
 33864                           
 33865 ;; *************** function _nvProcessMessage *****************
 33866 ;; Defined at:
 33867 ;;		line 240 in file "../../VLCBlib_PIC/nv.c"
 33868 ;; Parameters:    Size  Location     Type
 33869 ;;  m               2   82[COMRAM] PTR struct Message
 33870 ;;		 -> poll@m(9), 
 33871 ;; Auto vars:     Size  Location     Type
 33872 ;;  valueOrError    2   86[COMRAM] short 
 33873 ;; Return value:  Size  Location     Type
 33874 ;;                  1    wreg      enum E23340
 33875 ;; Registers used:
 33876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33877 ;; Tracked objects:
 33878 ;;		On entry : 0/0
 33879 ;;		On exit  : 0/0
 33880 ;;		Unchanged: 0/0
 33881 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 33882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33883 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33885 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 33886 ;;Total ram usage:        6 bytes
 33887 ;; Hardware stack levels used: 1
 33888 ;; Hardware stack levels required when called: 7
 33889 ;; This function calls:
 33890 ;;		_findServiceIndex
 33891 ;;		_getNV
 33892 ;;		_sendMessage2
 33893 ;;		_sendMessage3
 33894 ;;		_sendMessage4
 33895 ;;		_sendMessage5
 33896 ;;		_setNV
 33897 ;;		_startTimedResponse
 33898 ;; This function is called by:
 33899 ;;		_APP_preProcessMessage
 33900 ;;		_poll
 33901 ;; This function uses a non-reentrant model
 33902 ;;
 33903                           
 33904                           	psect	text43
 33905   011BB8                     __ptext43:
 33906                           	callstack 0
 33907   011BB8                     _nvProcessMessage:
 33908                           	callstack 118
 33909                           
 33910                           ;../../VLCBlib_PIC/nv.c: 241:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 243:    
      +                           if (m->len < 3) {
 33911                           
 33912                           ;incstack = 0
 33913   011BB8  C553  F4D9         	movff	nvProcessMessage@m,fsr2l
 33914   011BBC  C554  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 33915   011BC0  0E03               	movlw	3
 33916   011BC2  60DF               	cpfslt	indf2,c
 33917   011BC4  D002               	goto	l11027
 33918   011BC6                     u9070:
 33919                           
 33920                           ;../../VLCBlib_PIC/nv.c: 244:         return NOT_PROCESSED;
 33921   011BC6  0E00               	movlw	0
 33922   011BC8  0012               	return	
 33923   011BCA                     l11027:
 33924                           
 33925                           ;../../VLCBlib_PIC/nv.c: 247:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 33926   011BCA  EE20 F002          	lfsr	2,2
 33927   011BCE  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 33928   011BD0  26D9               	addwf	fsr2l,f,c
 33929   011BD2  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 33930   011BD4  22DA               	addwfc	fsr2h,f,c
 33931   011BD6  50DE               	movf	postinc2,w,c
 33932   011BD8  185F               	xorwf	(_nn+1)^(0+1280),w,c
 33933   011BDA  A4D8               	btfss	status,2,c
 33934   011BDC  D7F4               	goto	u9070
 33935                           
 33936                           ;../../VLCBlib_PIC/nv.c: 248:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 33937   011BDE  EE20 F003          	lfsr	2,3
 33938   011BE2  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 33939   011BE4  26D9               	addwf	fsr2l,f,c
 33940   011BE6  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 33941   011BE8  22DA               	addwfc	fsr2h,f,c
 33942   011BEA  505E               	movf	_nn^(0+1280),w,c
 33943   011BEC  18DE               	xorwf	postinc2,w,c
 33944   011BEE  A4D8               	btfss	status,2,c
 33945   011BF0  D7EA               	goto	u9070
 33946   011BF2  D14D               	goto	l11151
 33947   011BF4                     l11039:
 33948                           
 33949                           ;../../VLCBlib_PIC/nv.c: 252:             if (m->len < 4) {
 33950   011BF4  C553  F4D9         	movff	nvProcessMessage@m,fsr2l
 33951   011BF8  C554  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 33952   011BFC  0E04               	movlw	4
 33953   011BFE  60DF               	cpfslt	indf2,c
 33954   011C00  D01B               	goto	l11049
 33955                           
 33956                           ;../../VLCBlib_PIC/nv.c: 253:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 33957   011C02  C55F  F525         	movff	_nn+1,sendMessage3@data1
 33958   011C06  C55E  F526         	movff	_nn,sendMessage3@data2
 33959   011C0A  0E01               	movlw	1
 33960   011C0C  6E27               	movwf	sendMessage3@data3^(0+1280),c
 33961   011C0E  0E6F               	movlw	111
 33962   011C10  EC8E  F0B1         	call	_sendMessage3
 33963                           
 33964                           ;../../VLCBlib_PIC/nv.c: 255:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 33965   011C14  C55F  F525         	movff	_nn+1,sendMessage5@data1
 33966   011C18  C55E  F526         	movff	_nn,sendMessage5@data2
 33967   011C1C  0E71               	movlw	113
 33968   011C1E  6E27               	movwf	sendMessage5@data3^(0+1280),c
 33969   011C20  0E01               	movlw	1
 33970   011C22  6E28               	movwf	sendMessage5@data4^(0+1280),c
 33971   011C24  0E01               	movlw	1
 33972   011C26  6E29               	movwf	sendMessage5@data5^(0+1280),c
 33973   011C28  0EAF               	movlw	175
 33974   011C2A  ECCD  F0B1         	call	_sendMessage5
 33975   011C2E                     l11043:
 33976                           
 33977                           ;../../VLCBlib_PIC/nv.c: 258:                 nvDiagnostics[0x02].asUint++;
 33978   011C2E  0105               	movlb	5	; () banked
 33979   011C30  4BB5               	infsnz	(_nvDiagnostics+4)& (0+255),f,b
 33980   011C32  2BB6               	incf	(_nvDiagnostics+5)& (0+255),f,b
 33981   011C34                     l11045:
 33982                           
 33983                           ;../../VLCBlib_PIC/nv.c: 260:                 return PROCESSED;
 33984   011C34  0E01               	movlw	1
 33985   011C36  0012               	return	
 33986   011C38                     l11049:
 33987                           
 33988                           ;../../VLCBlib_PIC/nv.c: 262:             valueOrError = getNV(m->bytes[2]);
 33989   011C38  EE20 F004          	lfsr	2,4
 33990   011C3C  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 33991   011C3E  26D9               	addwf	fsr2l,f,c
 33992   011C40  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 33993   011C42  22DA               	addwfc	fsr2h,f,c
 33994   011C44  50DF               	movf	indf2,w,c
 33995   011C46  ECE0  F0AF         	call	_getNV
 33996   011C4A  C501  F557         	movff	?_getNV,nvProcessMessage@valueOrError
 33997   011C4E  C502  F558         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 33998                           
 33999                           ;../../VLCBlib_PIC/nv.c: 263:             if (valueOrError < 0) {
 34000   011C52  AE58               	btfss	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 34001   011C54  D019               	goto	l11061
 34002                           
 34003                           ;../../VLCBlib_PIC/nv.c: 264:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 34004   011C56  C55F  F525         	movff	_nn+1,sendMessage3@data1
 34005   011C5A  C55E  F526         	movff	_nn,sendMessage3@data2
 34006   011C5E  5057               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 34007   011C60  0800               	sublw	0
 34008   011C62  6E27               	movwf	sendMessage3@data3^(0+1280),c
 34009   011C64  0E6F               	movlw	111
 34010   011C66  EC8E  F0B1         	call	_sendMessage3
 34011                           
 34012                           ;../../VLCBlib_PIC/nv.c: 266:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 34013   011C6A  C55F  F525         	movff	_nn+1,sendMessage5@data1
 34014   011C6E  C55E  F526         	movff	_nn,sendMessage5@data2
 34015   011C72  0E71               	movlw	113
 34016   011C74  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34017   011C76  0E01               	movlw	1
 34018   011C78  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34019   011C7A  5057               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 34020   011C7C  0800               	sublw	0
 34021   011C7E  6E29               	movwf	sendMessage5@data5^(0+1280),c
 34022   011C80  0EAF               	movlw	175
 34023   011C82  ECCD  F0B1         	call	_sendMessage5
 34024   011C86  D7D3               	goto	l11043
 34025   011C88                     l11061:
 34026                           
 34027                           ;../../VLCBlib_PIC/nv.c: 274:             nvDiagnostics[0x01].asUint++;
 34028   011C88  0105               	movlb	5	; () banked
 34029   011C8A  4BB3               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 34030   011C8C  2BB4               	incf	(_nvDiagnostics+3)& (0+255),f,b
 34031                           
 34032                           ; BSR set to: 5
 34033                           ;../../VLCBlib_PIC/nv.c: 276:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 34034   011C8E  C55F  F525         	movff	_nn+1,sendMessage4@data1
 34035   011C92  C55E  F526         	movff	_nn,sendMessage4@data2
 34036   011C96  EE20 F004          	lfsr	2,4
 34037   011C9A  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 34038   011C9C  26D9               	addwf	fsr2l,f,c
 34039   011C9E  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 34040   011CA0  22DA               	addwfc	fsr2h,f,c
 34041   011CA2  50DF               	movf	indf2,w,c
 34042   011CA4  6E27               	movwf	sendMessage4@data3^(0+1280),c
 34043   011CA6  C557  F528         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 34044   011CAA  0E97               	movlw	151
 34045   011CAC  ECE2  F0B1         	call	_sendMessage4
 34046                           
 34047                           ;../../VLCBlib_PIC/nv.c: 278:             if (((mode_flags & 8) == 0) && (m->bytes[2] ==
      +                           0)) {
 34048   011CB0  0105               	movlb	5	; () banked
 34049   011CB2  B7A0               	btfsc	_mode_flags& (0+255),3,b
 34050   011CB4  D7BF               	goto	l11045
 34051                           
 34052                           ; BSR set to: 5
 34053   011CB6  EE20 F004          	lfsr	2,4
 34054   011CBA  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 34055   011CBC  26D9               	addwf	fsr2l,f,c
 34056   011CBE  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 34057   011CC0  22DA               	addwfc	fsr2h,f,c
 34058   011CC2  50DF               	movf	indf2,w,c
 34059   011CC4  A4D8               	btfss	status,2,c
 34060   011CC6  D7B6               	goto	l11045
 34061                           
 34062                           ; BSR set to: 5
 34063                           ;../../VLCBlib_PIC/nv.c: 280:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 34064   011CC8  0E02               	movlw	2
 34065   011CCA  EC92  F0A8         	call	_findServiceIndex
 34066   011CCE  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 34067   011CD0  0E4A               	movlw	low _nvTRnvrdCallback
 34068   011CD2  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 34069   011CD4  0E5F               	movlw	high _nvTRnvrdCallback
 34070   011CD6  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 34071   011CD8  0E01               	movlw	low (_nvTRnvrdCallback shr (0+16))
 34072   011CDA  6E08               	movwf	(startTimedResponse@callback+2)^(0+1280),c
 34073   011CDC  0E06               	movlw	6
 34074   011CDE  EC67  F0AF         	call	_startTimedResponse
 34075   011CE2  D7A8               	goto	l11045
 34076   011CE4                     l11075:
 34077                           
 34078                           ;../../VLCBlib_PIC/nv.c: 284:             if (m->len < 5) {
 34079   011CE4  C553  F4D9         	movff	nvProcessMessage@m,fsr2l
 34080   011CE8  C554  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 34081   011CEC  0E05               	movlw	5
 34082   011CEE  60DF               	cpfslt	indf2,c
 34083   011CF0  D00E               	goto	l11085
 34084                           
 34085                           ;../../VLCBlib_PIC/nv.c: 287:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 34086   011CF2  C55F  F525         	movff	_nn+1,sendMessage5@data1
 34087   011CF6  C55E  F526         	movff	_nn,sendMessage5@data2
 34088   011CFA  0E96               	movlw	150
 34089   011CFC  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34090   011CFE  0E01               	movlw	1
 34091   011D00  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34092   011D02  0E01               	movlw	1
 34093   011D04  6E29               	movwf	sendMessage5@data5^(0+1280),c
 34094   011D06  0EAF               	movlw	175
 34095   011D08  ECCD  F0B1         	call	_sendMessage5
 34096   011D0C  D790               	goto	l11043
 34097   011D0E                     l11085:
 34098                           
 34099                           ;../../VLCBlib_PIC/nv.c: 294:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 34100   011D0E  EE20 F005          	lfsr	2,5
 34101   011D12  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 34102   011D14  26D9               	addwf	fsr2l,f,c
 34103   011D16  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 34104   011D18  22DA               	addwfc	fsr2h,f,c
 34105   011D1A  50DF               	movf	indf2,w,c
 34106   011D1C  6E15               	movwf	setNV@value^(0+1280),c
 34107   011D1E  EE20 F004          	lfsr	2,4
 34108   011D22  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 34109   011D24  26D9               	addwf	fsr2l,f,c
 34110   011D26  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 34111   011D28  22DA               	addwfc	fsr2h,f,c
 34112   011D2A  50DF               	movf	indf2,w,c
 34113   011D2C  EC72  F0A7         	call	_setNV
 34114   011D30  6E55               	movwf	??_nvProcessMessage^(0+1280),c
 34115   011D32  5055               	movf	??_nvProcessMessage^(0+1280),w,c
 34116   011D34  6E57               	movwf	nvProcessMessage@valueOrError^(0+1280),c
 34117   011D36  6A58               	clrf	(nvProcessMessage@valueOrError+1)^(0+1280),c
 34118                           
 34119                           ;../../VLCBlib_PIC/nv.c: 295:             if (valueOrError >0) {
 34120   011D38  BE58               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 34121   011D3A  D00F               	goto	l11097
 34122   011D3C  5058               	movf	(nvProcessMessage@valueOrError+1)^(0+1280),w,c
 34123   011D3E  E103               	bnz	u9150
 34124   011D40  0457               	decf	nvProcessMessage@valueOrError^(0+1280),w,c
 34125   011D42  A0D8               	btfss	status,0,c
 34126   011D44  D00A               	goto	l11097
 34127   011D46                     u9150:
 34128                           
 34129                           ;../../VLCBlib_PIC/nv.c: 296:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 34130   011D46  C55F  F525         	movff	_nn+1,sendMessage3@data1
 34131   011D4A  C55E  F526         	movff	_nn,sendMessage3@data2
 34132   011D4E  C557  F527         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 34133   011D52  0E6F               	movlw	111
 34134   011D54  EC8E  F0B1         	call	_sendMessage3
 34135   011D58  D76A               	goto	l11043
 34136   011D5A                     l11097:
 34137                           
 34138                           ;../../VLCBlib_PIC/nv.c: 303:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 34139   011D5A  C55F  F525         	movff	_nn+1,sendMessage2@data1
 34140   011D5E  C55E  F526         	movff	_nn,sendMessage2@data2
 34141   011D62  0E59               	movlw	89
 34142   011D64  ECA3  F0B1         	call	_sendMessage2
 34143                           
 34144                           ;../../VLCBlib_PIC/nv.c: 305:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 34145   011D68  C55F  F525         	movff	_nn+1,sendMessage5@data1
 34146   011D6C  C55E  F526         	movff	_nn,sendMessage5@data2
 34147   011D70  0E96               	movlw	150
 34148   011D72  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34149   011D74  0E01               	movlw	1
 34150   011D76  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34151   011D78  0E00               	movlw	0
 34152   011D7A  6E29               	movwf	sendMessage5@data5^(0+1280),c
 34153   011D7C  0EAF               	movlw	175
 34154   011D7E  ECCD  F0B1         	call	_sendMessage5
 34155   011D82  D758               	goto	l11045
 34156   011D84                     l11103:
 34157                           
 34158                           ;../../VLCBlib_PIC/nv.c: 310:             if (m->len < 5) {
 34159   011D84  C553  F4D9         	movff	nvProcessMessage@m,fsr2l
 34160   011D88  C554  F4DA         	movff	nvProcessMessage@m+1,fsr2h
 34161   011D8C  0E05               	movlw	5
 34162   011D8E  60DF               	cpfslt	indf2,c
 34163   011D90  D00E               	goto	l11113
 34164                           
 34165                           ;../../VLCBlib_PIC/nv.c: 312:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 34166   011D92  C55F  F525         	movff	_nn+1,sendMessage5@data1
 34167   011D96  C55E  F526         	movff	_nn,sendMessage5@data2
 34168   011D9A  0E8E               	movlw	142
 34169   011D9C  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34170   011D9E  0E01               	movlw	1
 34171   011DA0  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34172   011DA2  0E01               	movlw	1
 34173   011DA4  6E29               	movwf	sendMessage5@data5^(0+1280),c
 34174   011DA6  0EAF               	movlw	175
 34175   011DA8  ECCD  F0B1         	call	_sendMessage5
 34176   011DAC  D740               	goto	l11043
 34177   011DAE                     l11113:
 34178                           
 34179                           ;../../VLCBlib_PIC/nv.c: 318:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 34180   011DAE  EE20 F005          	lfsr	2,5
 34181   011DB2  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 34182   011DB4  26D9               	addwf	fsr2l,f,c
 34183   011DB6  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 34184   011DB8  22DA               	addwfc	fsr2h,f,c
 34185   011DBA  50DF               	movf	indf2,w,c
 34186   011DBC  6E15               	movwf	setNV@value^(0+1280),c
 34187   011DBE  EE20 F004          	lfsr	2,4
 34188   011DC2  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 34189   011DC4  26D9               	addwf	fsr2l,f,c
 34190   011DC6  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 34191   011DC8  22DA               	addwfc	fsr2h,f,c
 34192   011DCA  50DF               	movf	indf2,w,c
 34193   011DCC  EC72  F0A7         	call	_setNV
 34194   011DD0  6E55               	movwf	??_nvProcessMessage^(0+1280),c
 34195   011DD2  5055               	movf	??_nvProcessMessage^(0+1280),w,c
 34196   011DD4  6E57               	movwf	nvProcessMessage@valueOrError^(0+1280),c
 34197   011DD6  6A58               	clrf	(nvProcessMessage@valueOrError+1)^(0+1280),c
 34198                           
 34199                           ;../../VLCBlib_PIC/nv.c: 319:             if (valueOrError >0) {
 34200   011DD8  BE58               	btfsc	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 34201   011DDA  D01C               	goto	l11125
 34202   011DDC  5058               	movf	(nvProcessMessage@valueOrError+1)^(0+1280),w,c
 34203   011DDE  E103               	bnz	u9170
 34204   011DE0  0457               	decf	nvProcessMessage@valueOrError^(0+1280),w,c
 34205   011DE2  A0D8               	btfss	status,0,c
 34206   011DE4  D017               	goto	l11125
 34207   011DE6                     u9170:
 34208                           
 34209                           ;../../VLCBlib_PIC/nv.c: 320:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 34210   011DE6  C55F  F525         	movff	_nn+1,sendMessage3@data1
 34211   011DEA  C55E  F526         	movff	_nn,sendMessage3@data2
 34212   011DEE  C557  F527         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 34213   011DF2  0E6F               	movlw	111
 34214   011DF4  EC8E  F0B1         	call	_sendMessage3
 34215                           
 34216                           ;../../VLCBlib_PIC/nv.c: 321:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 34217   011DF8  C55F  F525         	movff	_nn+1,sendMessage5@data1
 34218   011DFC  C55E  F526         	movff	_nn,sendMessage5@data2
 34219   011E00  0E8E               	movlw	142
 34220   011E02  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34221   011E04  0E01               	movlw	1
 34222   011E06  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34223   011E08  C557  F529         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 34224   011E0C  0EAF               	movlw	175
 34225   011E0E  ECCD  F0B1         	call	_sendMessage5
 34226   011E12  D70D               	goto	l11043
 34227   011E14                     l11125:
 34228                           
 34229                           ;../../VLCBlib_PIC/nv.c: 327:             valueOrError = getNV(m->bytes[2]);
 34230   011E14  EE20 F004          	lfsr	2,4
 34231   011E18  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 34232   011E1A  26D9               	addwf	fsr2l,f,c
 34233   011E1C  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 34234   011E1E  22DA               	addwfc	fsr2h,f,c
 34235   011E20  50DF               	movf	indf2,w,c
 34236   011E22  ECE0  F0AF         	call	_getNV
 34237   011E26  C501  F557         	movff	?_getNV,nvProcessMessage@valueOrError
 34238   011E2A  C502  F558         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 34239                           
 34240                           ;../../VLCBlib_PIC/nv.c: 328:             if (valueOrError < 0) {
 34241   011E2E  AE58               	btfss	(nvProcessMessage@valueOrError+1)^(0+1280),7,c
 34242   011E30  D019               	goto	l11137
 34243                           
 34244                           ;../../VLCBlib_PIC/nv.c: 329:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 34245   011E32  C55F  F525         	movff	_nn+1,sendMessage3@data1
 34246   011E36  C55E  F526         	movff	_nn,sendMessage3@data2
 34247   011E3A  5057               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 34248   011E3C  0800               	sublw	0
 34249   011E3E  6E27               	movwf	sendMessage3@data3^(0+1280),c
 34250   011E40  0E6F               	movlw	111
 34251   011E42  EC8E  F0B1         	call	_sendMessage3
 34252                           
 34253                           ;../../VLCBlib_PIC/nv.c: 330:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 34254   011E46  C55F  F525         	movff	_nn+1,sendMessage5@data1
 34255   011E4A  C55E  F526         	movff	_nn,sendMessage5@data2
 34256   011E4E  0E8E               	movlw	142
 34257   011E50  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34258   011E52  0E01               	movlw	1
 34259   011E54  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34260   011E56  5057               	movf	nvProcessMessage@valueOrError^(0+1280),w,c
 34261   011E58  0800               	sublw	0
 34262   011E5A  6E29               	movwf	sendMessage5@data5^(0+1280),c
 34263   011E5C  0EAF               	movlw	175
 34264   011E5E  ECCD  F0B1         	call	_sendMessage5
 34265   011E62  D6E5               	goto	l11043
 34266   011E64                     l11137:
 34267                           
 34268                           ;../../VLCBlib_PIC/nv.c: 336:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 34269   011E64  C55F  F525         	movff	_nn+1,sendMessage4@data1
 34270   011E68  C55E  F526         	movff	_nn,sendMessage4@data2
 34271   011E6C  EE20 F004          	lfsr	2,4
 34272   011E70  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 34273   011E72  26D9               	addwf	fsr2l,f,c
 34274   011E74  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 34275   011E76  22DA               	addwfc	fsr2h,f,c
 34276   011E78  50DF               	movf	indf2,w,c
 34277   011E7A  6E27               	movwf	sendMessage4@data3^(0+1280),c
 34278   011E7C  C557  F528         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 34279   011E80  0E97               	movlw	151
 34280   011E82  ECE2  F0B1         	call	_sendMessage4
 34281                           
 34282                           ;../../VLCBlib_PIC/nv.c: 338:             nvDiagnostics[0x01].asUint++;
 34283   011E86  0105               	movlb	5	; () banked
 34284   011E88  4BB3               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 34285   011E8A  2BB4               	incf	(_nvDiagnostics+3)& (0+255),f,b
 34286   011E8C  D6D3               	goto	l11045
 34287   011E8E                     l11151:
 34288   011E8E  EE20 F001          	lfsr	2,1
 34289   011E92  5053               	movf	nvProcessMessage@m^(0+1280),w,c
 34290   011E94  26D9               	addwf	fsr2l,f,c
 34291   011E96  5054               	movf	(nvProcessMessage@m+1)^(0+1280),w,c
 34292   011E98  22DA               	addwfc	fsr2h,f,c
 34293   011E9A  50DF               	movf	indf2,w,c
 34294   011E9C  6E55               	movwf	??_nvProcessMessage^(0+1280),c
 34295   011E9E  6A56               	clrf	(??_nvProcessMessage+1)^(0+1280),c
 34296                           
 34297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34298                           ; Switch size 1, requested type "simple"
 34299                           ; Number of cases is 1, Range of values is 0 to 0
 34300                           ; switch strategies available:
 34301                           ; Name         Instructions Cycles
 34302                           ; simple_byte            4     3 (average)
 34303                           ;	Chosen strategy is simple_byte
 34304   011EA0  5056               	movf	(??_nvProcessMessage+1)^(0+1280),w,c
 34305   011EA2  0A00               	xorlw	0	; case 0
 34306   011EA4  A4D8               	btfss	status,2,c
 34307   011EA6  D68F               	goto	u9070
 34308                           
 34309                           ; Switch size 1, requested type "simple"
 34310                           ; Number of cases is 3, Range of values is 113 to 150
 34311                           ; switch strategies available:
 34312                           ; Name         Instructions Cycles
 34313                           ; simple_byte           10     6 (average)
 34314                           ;	Chosen strategy is simple_byte
 34315   011EA8  5055               	movf	??_nvProcessMessage^(0+1280),w,c
 34316   011EAA  0A71               	xorlw	113	; case 113
 34317   011EAC  B4D8               	btfsc	status,2,c
 34318   011EAE  D6A2               	goto	l11039
 34319   011EB0  0AFF               	xorlw	255	; case 142
 34320   011EB2  B4D8               	btfsc	status,2,c
 34321   011EB4  D767               	goto	l11103
 34322   011EB6  0A18               	xorlw	24	; case 150
 34323   011EB8  B4D8               	btfsc	status,2,c
 34324   011EBA  D714               	goto	l11075
 34325   011EBC  D684               	goto	u9070
 34326   011EBE                     __end_of_nvProcessMessage:
 34327                           	callstack 0
 34328                           
 34329 ;; *************** function _mnsProcessMessage *****************
 34330 ;; Defined at:
 34331 ;;		line 358 in file "../../VLCBlib_PIC/mns.c"
 34332 ;; Parameters:    Size  Location     Type
 34333 ;;  m               2   82[COMRAM] PTR struct Message
 34334 ;;		 -> poll@m(9), 
 34335 ;; Auto vars:     Size  Location     Type
 34336 ;;  d               2   86[COMRAM] PTR struct DiagnosticVal
 34337 ;;		 -> producerDiagnostics(4), nvDiagnostics(6), mnsDiagnostics(14), teachDiagnostics(4), 
 34338 ;;		 -> consumerDiagnostics(6), canDiagnostics(38), NULL(0), 
 34339 ;;  newMode         1   88[COMRAM] unsigned char 
 34340 ;;  i               1   84[COMRAM] unsigned char 
 34341 ;;  flags           1    0        unsigned char 
 34342 ;; Return value:  Size  Location     Type
 34343 ;;                  1    wreg      enum E23340
 34344 ;; Registers used:
 34345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 34346 ;; Tracked objects:
 34347 ;;		On entry : 0/0
 34348 ;;		On exit  : 0/0
 34349 ;;		Unchanged: 0/0
 34350 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 34351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34352 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34353 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34354 ;;      Totals:         7      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 34355 ;;Total ram usage:       31 bytes
 34356 ;; Hardware stack levels used: 1
 34357 ;; Hardware stack levels required when called: 6
 34358 ;; This function calls:
 34359 ;;		NULL
 34360 ;;		_bootEsdData
 34361 ;;		_canEsdData
 34362 ;;		_canGetDiagnostic
 34363 ;;		_canWaitForTxQueueToDrain
 34364 ;;		_consumerEsdData
 34365 ;;		_consumerGetDiagnostic
 34366 ;;		_findServiceIndex
 34367 ;;		_getParameter
 34368 ;;		_getParameterFlags
 34369 ;;		_mnsGetDiagnostic
 34370 ;;		_nvGetDiagnostic
 34371 ;;		_nvGetESDdata
 34372 ;;		_producerEsdData
 34373 ;;		_producerGetDiagnostic
 34374 ;;		_rebuildHashtable
 34375 ;;		_sendMessage2
 34376 ;;		_sendMessage3
 34377 ;;		_sendMessage4
 34378 ;;		_sendMessage5
 34379 ;;		_sendMessage6
 34380 ;;		_sendMessage7
 34381 ;;		_setLEDsByMode
 34382 ;;		_startTimedResponse
 34383 ;;		_teachGetDiagnostic
 34384 ;;		_teachGetESDdata
 34385 ;;		_writeNVM
 34386 ;; This function is called by:
 34387 ;;		_APP_preProcessMessage
 34388 ;;		_poll
 34389 ;; This function uses a non-reentrant model
 34390 ;;
 34391                           
 34392                           	psect	text44
 34393   010000                     __ptext44:
 34394                           	callstack 0
 34395   010000                     _mnsProcessMessage:
 34396                           	callstack 119
 34397                           
 34398                           ;../../VLCBlib_PIC/mns.c: 359:     uint8_t i;;../../VLCBlib_PIC/mns.c: 360:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 362:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 367: 
      +                              if (mode_state == MODE_SETUP) {
 34399                           
 34400                           ;incstack = 0
 34401   010000  0105               	movlb	5	; () banked
 34402   010002  5191               	movf	_mode_state& (0+255),w,b
 34403   010004  B4D8               	btfsc	status,2,c
 34404   010006  D0B3               	goto	l10635
 34405   010008  D123               	goto	l10691
 34406   01000A                     l10591:
 34407                           
 34408                           ; BSR set to: 5
 34409                           ;../../VLCBlib_PIC/mns.c: 370:                 if (m->len < 3) {
 34410   01000A  C553  F4D9         	movff	mnsProcessMessage@m,fsr2l
 34411   01000E  C554  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 34412   010012  0E03               	movlw	3
 34413   010014  60DF               	cpfslt	indf2,c
 34414   010016  D00E               	goto	l10595
 34415                           
 34416                           ; BSR set to: 5
 34417                           ;../../VLCBlib_PIC/mns.c: 372:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_SNN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 34418   010018  C55F  F525         	movff	_nn+1,sendMessage5@data1
 34419   01001C  C55E  F526         	movff	_nn,sendMessage5@data2
 34420   010020  0E42               	movlw	66
 34421   010022  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34422   010024  0E01               	movlw	1
 34423   010026  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34424   010028  0E01               	movlw	1
 34425   01002A  6E29               	movwf	sendMessage5@data5^(0+1280),c
 34426   01002C  0EAF               	movlw	175
 34427   01002E  ECCD  F0B1         	call	_sendMessage5
 34428                           
 34429                           ;../../VLCBlib_PIC/mns.c: 374:                 } else {
 34430   010032  D037               	goto	l10611
 34431   010034                     l10595:
 34432                           
 34433                           ; BSR set to: 5
 34434                           ;../../VLCBlib_PIC/mns.c: 375:                     nn.bytes.hi = m->bytes[0];
 34435   010034  EE20 F002          	lfsr	2,2
 34436   010038  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34437   01003A  26D9               	addwf	fsr2l,f,c
 34438   01003C  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34439   01003E  22DA               	addwfc	fsr2h,f,c
 34440   010040  50DF               	movf	indf2,w,c
 34441   010042  6E5F               	movwf	(_nn+1)^(0+1280),c
 34442                           
 34443                           ;../../VLCBlib_PIC/mns.c: 376:                     nn.bytes.lo = m->bytes[1];
 34444   010044  EE20 F003          	lfsr	2,3
 34445   010048  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34446   01004A  26D9               	addwf	fsr2l,f,c
 34447   01004C  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34448   01004E  22DA               	addwfc	fsr2h,f,c
 34449   010050  50DF               	movf	indf2,w,c
 34450   010052  6E5E               	movwf	_nn^(0+1280),c
 34451                           
 34452                           ; BSR set to: 5
 34453                           ;../../VLCBlib_PIC/mns.c: 377:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.hi);
 34454   010054  0EFD               	movlw	253
 34455   010056  6E0E               	movwf	writeNVM@index^(0+1280),c
 34456   010058  0E03               	movlw	3
 34457   01005A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 34458   01005C  0E00               	movlw	0
 34459   01005E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 34460   010060  C55F  F511         	movff	_nn+1,writeNVM@value
 34461   010064  0E00               	movlw	0
 34462   010066  ECC3  F0AD         	call	_writeNVM
 34463                           
 34464                           ;../../VLCBlib_PIC/mns.c: 378:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.lo);
 34465   01006A  0EFC               	movlw	252
 34466   01006C  6E0E               	movwf	writeNVM@index^(0+1280),c
 34467   01006E  0E03               	movlw	3
 34468   010070  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 34469   010072  0E00               	movlw	0
 34470   010074  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 34471   010076  C55E  F511         	movff	_nn,writeNVM@value
 34472   01007A  0E00               	movlw	0
 34473   01007C  ECC3  F0AD         	call	_writeNVM
 34474                           
 34475                           ;../../VLCBlib_PIC/mns.c: 380:                     mode_state = MODE_NORMAL;
 34476   010080  0E01               	movlw	1
 34477   010082  0105               	movlb	5	; () banked
 34478   010084  6F91               	movwf	_mode_state& (0+255),b
 34479                           
 34480                           ; BSR set to: 5
 34481                           ;../../VLCBlib_PIC/mns.c: 383:                     rebuildHashtable();
 34482   010086  EC1A  F0A1         	call	_rebuildHashtable	;wreg free
 34483                           
 34484                           ;../../VLCBlib_PIC/mns.c: 386:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 34485   01008A  C55F  F525         	movff	_nn+1,sendMessage2@data1
 34486   01008E  C55E  F526         	movff	_nn,sendMessage2@data2
 34487   010092  0E52               	movlw	82
 34488   010094  ECA3  F0B1         	call	_sendMessage2
 34489                           
 34490                           ;../../VLCBlib_PIC/mns.c: 388:                     mnsDiagnostics[0x05].asUint++;
 34491   010098  0105               	movlb	5	; () banked
 34492   01009A  4BAD               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 34493   01009C  2BAE               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 34494   01009E                     l10609:
 34495                           
 34496                           ; BSR set to: 5
 34497                           ;../../VLCBlib_PIC/mns.c: 391:                     setLEDsByMode();
 34498   01009E  ECD7  F0B0         	call	_setLEDsByMode	;wreg free
 34499   0100A2                     l10611:
 34500                           
 34501                           ;../../VLCBlib_PIC/mns.c: 393:                 return PROCESSED;
 34502   0100A2  0E01               	movlw	1
 34503   0100A4  0012               	return	
 34504   0100A6                     l10615:
 34505                           
 34506                           ; BSR set to: 5
 34507                           ;../../VLCBlib_PIC/mns.c: 395:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'a',
 34508   0100A6  0EA5               	movlw	165
 34509   0100A8  6E25               	movwf	sendMessage7@data1^(0+1280),c
 34510   0100AA  0E61               	movlw	97
 34511   0100AC  6E26               	movwf	sendMessage7@data2^(0+1280),c
 34512   0100AE  0E1D               	movlw	29
 34513   0100B0  6E27               	movwf	sendMessage7@data3^(0+1280),c
 34514   0100B2  0EFE               	movlw	254
 34515   0100B4  6E28               	movwf	sendMessage7@data4^(0+1280),c
 34516   0100B6  0E0D               	movlw	13
 34517   0100B8  6E29               	movwf	sendMessage7@data5^(0+1280),c
 34518   0100BA  0E43               	movlw	67
 34519   0100BC  6E2A               	movwf	sendMessage7@data6^(0+1280),c
 34520   0100BE  0E05               	movlw	5
 34521   0100C0  6E2B               	movwf	sendMessage7@data7^(0+1280),c
 34522   0100C2  0EEF               	movlw	239
 34523   0100C4  ECB8  F0B1         	call	_sendMessage7
 34524   0100C8  D7EC               	goto	l10611
 34525   0100CA                     l10621:
 34526                           
 34527                           ; BSR set to: 5
 34528                           ;../../VLCBlib_PIC/mns.c: 400:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 34529   0100CA  0E48               	movlw	72
 34530   0100CC  6EF6               	movwf	tblptrl,c
 34531   0100CE                     	if	1	;There is more than 1 active tblptr byte
 34532   0100CE  0E08               	movlw	8
 34533   0100D0  6EF7               	movwf	tblptrh,c
 34534   0100D2                     	endif
 34535   0100D2                     	if	1	;There are 3 active tblptr bytes
 34536   0100D2  0E00               	movlw	0
 34537   0100D4  6EF8               	movwf	tblptru,c
 34538   0100D6                     	endif
 34539   0100D6  0008               	tblrd		*
 34540   0100D8  C4F5 F525          	movff	tablat,sendMessage7@data1
 34541   0100DC  0E49               	movlw	73
 34542   0100DE  6EF6               	movwf	tblptrl,c
 34543   0100E0  0E08               	movlw	8
 34544   0100E2  6EF7               	movwf	tblptrh,c
 34545   0100E4  0E00               	movlw	0
 34546   0100E6  6EF8               	movwf	tblptru,c
 34547   0100E8  0008               	tblrd		*
 34548   0100EA  C4F5 F526          	movff	tablat,sendMessage7@data2
 34549   0100EE  0E4A               	movlw	74
 34550   0100F0  6EF6               	movwf	tblptrl,c
 34551   0100F2  0E08               	movlw	8
 34552   0100F4  6EF7               	movwf	tblptrh,c
 34553   0100F6  0E00               	movlw	0
 34554   0100F8  6EF8               	movwf	tblptru,c
 34555   0100FA  0008               	tblrd		*
 34556   0100FC  C4F5 F527          	movff	tablat,sendMessage7@data3
 34557   010100  0E4B               	movlw	75
 34558   010102  6EF6               	movwf	tblptrl,c
 34559   010104  0E08               	movlw	8
 34560   010106  6EF7               	movwf	tblptrh,c
 34561   010108  0E00               	movlw	0
 34562   01010A  6EF8               	movwf	tblptru,c
 34563   01010C  0008               	tblrd		*
 34564   01010E  C4F5 F528          	movff	tablat,sendMessage7@data4
 34565   010112  0E4C               	movlw	76
 34566   010114  6EF6               	movwf	tblptrl,c
 34567   010116  0E08               	movlw	8
 34568   010118  6EF7               	movwf	tblptrh,c
 34569   01011A  0E00               	movlw	0
 34570   01011C  6EF8               	movwf	tblptru,c
 34571   01011E  0008               	tblrd		*
 34572   010120  C4F5 F529          	movff	tablat,sendMessage7@data5
 34573   010124  0E4D               	movlw	77
 34574   010126  6EF6               	movwf	tblptrl,c
 34575   010128  0E08               	movlw	8
 34576   01012A  6EF7               	movwf	tblptrh,c
 34577   01012C  0E00               	movlw	0
 34578   01012E  6EF8               	movwf	tblptru,c
 34579   010130  0008               	tblrd		*
 34580   010132  C4F5 F52A          	movff	tablat,sendMessage7@data6
 34581   010136  0E4E               	movlw	78
 34582   010138  6EF6               	movwf	tblptrl,c
 34583   01013A  0E08               	movlw	8
 34584   01013C  6EF7               	movwf	tblptrh,c
 34585   01013E  0E00               	movlw	0
 34586   010140  6EF8               	movwf	tblptru,c
 34587   010142  0008               	tblrd		*
 34588   010144  C4F5 F52B          	movff	tablat,sendMessage7@data7
 34589   010148  0EE2               	movlw	226
 34590   01014A  ECB8  F0B1         	call	_sendMessage7
 34591   01014E  D7A9               	goto	l10611
 34592   010150                     l10627:
 34593                           
 34594                           ; BSR set to: 5
 34595                           ;../../VLCBlib_PIC/mns.c: 404:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_CANPAN, getParameterFlags());
 34596   010150  0E00               	movlw	0
 34597   010152  6E25               	movwf	sendMessage5@data1^(0+1280),c
 34598   010154  0E00               	movlw	0
 34599   010156  6E26               	movwf	sendMessage5@data2^(0+1280),c
 34600   010158  0EA5               	movlw	165
 34601   01015A  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34602   01015C  0E1D               	movlw	29
 34603   01015E  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34604   010160  EC27  F0AF         	call	_getParameterFlags	;wreg free
 34605   010164  6E29               	movwf	sendMessage5@data5^(0+1280),c
 34606   010166  0EB6               	movlw	182
 34607   010168  ECCD  F0B1         	call	_sendMessage5
 34608   01016C  D79A               	goto	l10611
 34609   01016E                     l10635:
 34610                           
 34611                           ; BSR set to: 5
 34612   01016E  EE20 F001          	lfsr	2,1
 34613   010172  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34614   010174  26D9               	addwf	fsr2l,f,c
 34615   010176  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34616   010178  22DA               	addwfc	fsr2h,f,c
 34617   01017A  50DF               	movf	indf2,w,c
 34618   01017C  6FCA               	movwf	??_mnsProcessMessage& (0+255),b
 34619   01017E  6BCB               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 34620                           
 34621                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34622                           ; Switch size 1, requested type "simple"
 34623                           ; Number of cases is 1, Range of values is 0 to 0
 34624                           ; switch strategies available:
 34625                           ; Name         Instructions Cycles
 34626                           ; simple_byte            4     3 (average)
 34627                           ;	Chosen strategy is simple_byte
 34628   010180  51CB               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 34629   010182  0A00               	xorlw	0	; case 0
 34630   010184  A4D8               	btfss	status,2,c
 34631   010186  D00D               	goto	l10637
 34632                           
 34633                           ; BSR set to: 5
 34634                           ; Switch size 1, requested type "simple"
 34635                           ; Number of cases is 4, Range of values is 13 to 66
 34636                           ; switch strategies available:
 34637                           ; Name         Instructions Cycles
 34638                           ; simple_byte           13     7 (average)
 34639                           ;	Chosen strategy is simple_byte
 34640   010188  51CA               	movf	??_mnsProcessMessage& (0+255),w,b
 34641   01018A  0A0D               	xorlw	13	; case 13
 34642   01018C  B4D8               	btfsc	status,2,c
 34643   01018E  D7E0               	goto	l10627
 34644   010190  0A1D               	xorlw	29	; case 16
 34645   010192  B4D8               	btfsc	status,2,c
 34646   010194  D788               	goto	l10615
 34647   010196  0A01               	xorlw	1	; case 17
 34648   010198  B4D8               	btfsc	status,2,c
 34649   01019A  D797               	goto	l10621
 34650   01019C  0A53               	xorlw	83	; case 66
 34651   01019E  B4D8               	btfsc	status,2,c
 34652   0101A0  D734               	goto	l10591
 34653   0101A2                     l10637:
 34654                           
 34655                           ; BSR set to: 5
 34656                           ;../../VLCBlib_PIC/mns.c: 409:         return NOT_PROCESSED;
 34657   0101A2  0E00               	movlw	0
 34658   0101A4  0012               	return	
 34659   0101A6                     l10641:
 34660                           
 34661                           ; BSR set to: 5
 34662                           ;../../VLCBlib_PIC/mns.c: 414:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_CANPAN, getParameterFlags());
 34663   0101A6  C55F  F525         	movff	_nn+1,sendMessage5@data1
 34664   0101AA  C55E  F526         	movff	_nn,sendMessage5@data2
 34665   0101AE  0EA5               	movlw	165
 34666   0101B0  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34667   0101B2  0E1D               	movlw	29
 34668   0101B4  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34669   0101B6  EC27  F0AF         	call	_getParameterFlags	;wreg free
 34670   0101BA  6E29               	movwf	sendMessage5@data5^(0+1280),c
 34671   0101BC  0EB6               	movlw	182
 34672   0101BE  ECCD  F0B1         	call	_sendMessage5
 34673   0101C2  D76F               	goto	l10611
 34674   0101C4                     l10647:
 34675                           
 34676                           ; BSR set to: 5
 34677                           ;../../VLCBlib_PIC/mns.c: 418:             if (m->len < 4) {
 34678   0101C4  C553  F4D9         	movff	mnsProcessMessage@m,fsr2l
 34679   0101C8  C554  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 34680   0101CC  0E04               	movlw	4
 34681   0101CE  60DF               	cpfslt	indf2,c
 34682   0101D0  D00E               	goto	l10655
 34683                           
 34684                           ; BSR set to: 5
 34685                           ;../../VLCBlib_PIC/mns.c: 419:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 34686   0101D2  C55F  F525         	movff	_nn+1,sendMessage5@data1
 34687   0101D6  C55E  F526         	movff	_nn,sendMessage5@data2
 34688   0101DA  0E76               	movlw	118
 34689   0101DC  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34690   0101DE  0E01               	movlw	1
 34691   0101E0  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34692   0101E2  0E01               	movlw	1
 34693   0101E4  6E29               	movwf	sendMessage5@data5^(0+1280),c
 34694   0101E6  0EAF               	movlw	175
 34695   0101E8  ECCD  F0B1         	call	_sendMessage5
 34696   0101EC  D75A               	goto	l10611
 34697   0101EE                     l10655:
 34698                           
 34699                           ; BSR set to: 5
 34700                           ;../../VLCBlib_PIC/mns.c: 422:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 34701   0101EE  EE20 F002          	lfsr	2,2
 34702   0101F2  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34703   0101F4  26D9               	addwf	fsr2l,f,c
 34704   0101F6  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34705   0101F8  22DA               	addwfc	fsr2h,f,c
 34706   0101FA  50DF               	movf	indf2,w,c
 34707   0101FC  A4D8               	btfss	status,2,c
 34708   0101FE  D03C               	goto	l10693
 34709                           
 34710                           ; BSR set to: 5
 34711   010200  EE20 F003          	lfsr	2,3
 34712   010204  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34713   010206  26D9               	addwf	fsr2l,f,c
 34714   010208  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34715   01020A  22DA               	addwfc	fsr2h,f,c
 34716   01020C  50DF               	movf	indf2,w,c
 34717   01020E  A4D8               	btfss	status,2,c
 34718   010210  D033               	goto	l10693
 34719                           
 34720                           ; BSR set to: 5
 34721                           ;../../VLCBlib_PIC/mns.c: 423:                 newMode = m->bytes[2];
 34722   010212  EE20 F004          	lfsr	2,4
 34723   010216  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34724   010218  26D9               	addwf	fsr2l,f,c
 34725   01021A  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34726   01021C  22DA               	addwfc	fsr2h,f,c
 34727   01021E  50DF               	movf	indf2,w,c
 34728   010220  6E59               	movwf	mnsProcessMessage@newMode^(0+1280),c
 34729                           
 34730                           ;../../VLCBlib_PIC/mns.c: 425:                 switch (newMode) {
 34731   010222  D008               	goto	l10687
 34732   010224                     l10661:
 34733                           
 34734                           ; BSR set to: 5
 34735                           ;../../VLCBlib_PIC/mns.c: 427:                         mode_flags |= 4;
 34736   010224  85A0               	bsf	_mode_flags& (0+255),2,b
 34737   010226  D73D               	goto	l10611
 34738   010228                     l10667:
 34739                           
 34740                           ; BSR set to: 5
 34741                           ;../../VLCBlib_PIC/mns.c: 430:                         mode_flags &= ~4;
 34742   010228  95A0               	bcf	_mode_flags& (0+255),2,b
 34743   01022A  D73B               	goto	l10611
 34744   01022C                     l10673:
 34745                           
 34746                           ; BSR set to: 5
 34747                           ;../../VLCBlib_PIC/mns.c: 433:                         mode_flags |= 8;
 34748   01022C  87A0               	bsf	_mode_flags& (0+255),3,b
 34749   01022E  D739               	goto	l10611
 34750   010230                     l10679:
 34751                           
 34752                           ; BSR set to: 5
 34753                           ;../../VLCBlib_PIC/mns.c: 436:                         mode_flags &= ~8;
 34754   010230  97A0               	bcf	_mode_flags& (0+255),3,b
 34755   010232  D737               	goto	l10611
 34756   010234                     l10687:
 34757                           
 34758                           ; BSR set to: 5
 34759   010234  5059               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 34760                           
 34761                           ; Switch size 1, requested type "simple"
 34762                           ; Number of cases is 4, Range of values is 12 to 17
 34763                           ; switch strategies available:
 34764                           ; Name         Instructions Cycles
 34765                           ; simple_byte           13     7 (average)
 34766                           ;	Chosen strategy is simple_byte
 34767   010236  0A0C               	xorlw	12	; case 12
 34768   010238  B4D8               	btfsc	status,2,c
 34769   01023A  D7F4               	goto	l10661
 34770   01023C  0A01               	xorlw	1	; case 13
 34771   01023E  B4D8               	btfsc	status,2,c
 34772   010240  D7F3               	goto	l10667
 34773   010242  0A1D               	xorlw	29	; case 16
 34774   010244  B4D8               	btfsc	status,2,c
 34775   010246  D7F2               	goto	l10673
 34776   010248  0A01               	xorlw	1	; case 17
 34777   01024A  B4D8               	btfsc	status,2,c
 34778   01024C  D7F1               	goto	l10679
 34779                           
 34780                           ; BSR set to: 5
 34781                           ;../../VLCBlib_PIC/mns.c: 442:             break;
 34782                           
 34783                           ;../../VLCBlib_PIC/mns.c: 441:             }
 34784   01024E  D014               	goto	l10693
 34785   010250                     l10691:
 34786                           
 34787                           ; BSR set to: 5
 34788   010250  EE20 F001          	lfsr	2,1
 34789   010254  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34790   010256  26D9               	addwf	fsr2l,f,c
 34791   010258  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34792   01025A  22DA               	addwfc	fsr2h,f,c
 34793   01025C  50DF               	movf	indf2,w,c
 34794   01025E  6FCA               	movwf	??_mnsProcessMessage& (0+255),b
 34795   010260  6BCB               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 34796                           
 34797                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34798                           ; Switch size 1, requested type "simple"
 34799                           ; Number of cases is 1, Range of values is 0 to 0
 34800                           ; switch strategies available:
 34801                           ; Name         Instructions Cycles
 34802                           ; simple_byte            4     3 (average)
 34803                           ;	Chosen strategy is simple_byte
 34804   010262  51CB               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 34805   010264  0A00               	xorlw	0	; case 0
 34806   010266  A4D8               	btfss	status,2,c
 34807   010268  D007               	goto	l10693
 34808                           
 34809                           ; BSR set to: 5
 34810                           ; Switch size 1, requested type "simple"
 34811                           ; Number of cases is 2, Range of values is 13 to 118
 34812                           ; switch strategies available:
 34813                           ; Name         Instructions Cycles
 34814                           ; simple_byte            7     4 (average)
 34815                           ;	Chosen strategy is simple_byte
 34816   01026A  51CA               	movf	??_mnsProcessMessage& (0+255),w,b
 34817   01026C  0A0D               	xorlw	13	; case 13
 34818   01026E  B4D8               	btfsc	status,2,c
 34819   010270  D79A               	goto	l10641
 34820   010272  0A7B               	xorlw	123	; case 118
 34821   010274  B4D8               	btfsc	status,2,c
 34822   010276  D7A6               	goto	l10647
 34823   010278                     l10693:
 34824                           
 34825                           ; BSR set to: 5
 34826                           ;../../VLCBlib_PIC/mns.c: 447:     if (m->len < 3) {
 34827   010278  C553  F4D9         	movff	mnsProcessMessage@m,fsr2l
 34828   01027C  C554  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 34829   010280  0E03               	movlw	3
 34830   010282  60DF               	cpfslt	indf2,c
 34831   010284  D001               	goto	l10699
 34832   010286  D78D               	goto	l10637
 34833   010288                     l10699:
 34834                           
 34835                           ; BSR set to: 5
 34836                           ;../../VLCBlib_PIC/mns.c: 451:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 34837   010288  EE20 F002          	lfsr	2,2
 34838   01028C  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34839   01028E  26D9               	addwf	fsr2l,f,c
 34840   010290  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34841   010292  22DA               	addwfc	fsr2h,f,c
 34842   010294  50DE               	movf	postinc2,w,c
 34843   010296  185F               	xorwf	(_nn+1)^(0+1280),w,c
 34844   010298  A4D8               	btfss	status,2,c
 34845   01029A  D783               	goto	l10637
 34846                           
 34847                           ; BSR set to: 5
 34848                           ;../../VLCBlib_PIC/mns.c: 452:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 34849   01029C  EE20 F003          	lfsr	2,3
 34850   0102A0  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34851   0102A2  26D9               	addwf	fsr2l,f,c
 34852   0102A4  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34853   0102A6  22DA               	addwfc	fsr2h,f,c
 34854   0102A8  505E               	movf	_nn^(0+1280),w,c
 34855   0102AA  18DE               	xorwf	postinc2,w,c
 34856   0102AC  A4D8               	btfss	status,2,c
 34857   0102AE  D779               	goto	l10637
 34858   0102B0  EF8D  F085         	goto	l10915
 34859   0102B4                     l10711:
 34860                           
 34861                           ; BSR set to: 5
 34862                           ;../../VLCBlib_PIC/mns.c: 456:             if (m->len < 4) {
 34863   0102B4  C553  F4D9         	movff	mnsProcessMessage@m,fsr2l
 34864   0102B8  C554  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 34865   0102BC  0E04               	movlw	4
 34866   0102BE  60DF               	cpfslt	indf2,c
 34867   0102C0  D00E               	goto	l10719
 34868                           
 34869                           ; BSR set to: 5
 34870                           ;../../VLCBlib_PIC/mns.c: 458:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 34871   0102C2  C55F  F525         	movff	_nn+1,sendMessage5@data1
 34872   0102C6  C55E  F526         	movff	_nn,sendMessage5@data2
 34873   0102CA  0E73               	movlw	115
 34874   0102CC  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34875   0102CE  0E01               	movlw	1
 34876   0102D0  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34877   0102D2  0E01               	movlw	1
 34878   0102D4  6E29               	movwf	sendMessage5@data5^(0+1280),c
 34879   0102D6  0EAF               	movlw	175
 34880   0102D8  ECCD  F0B1         	call	_sendMessage5
 34881   0102DC  D6E2               	goto	l10611
 34882   0102DE                     l10719:
 34883                           
 34884                           ; BSR set to: 5
 34885                           ;../../VLCBlib_PIC/mns.c: 462:             if (m->bytes[2] > 20) {
 34886   0102DE  EE20 F004          	lfsr	2,4
 34887   0102E2  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34888   0102E4  26D9               	addwf	fsr2l,f,c
 34889   0102E6  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34890   0102E8  22DA               	addwfc	fsr2h,f,c
 34891   0102EA  0E14               	movlw	20
 34892   0102EC  64DF               	cpfsgt	indf2,c
 34893   0102EE  D017               	goto	l10727
 34894                           
 34895                           ; BSR set to: 5
 34896                           ;../../VLCBlib_PIC/mns.c: 463:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 34897   0102F0  C55F  F525         	movff	_nn+1,sendMessage3@data1
 34898   0102F4  C55E  F526         	movff	_nn,sendMessage3@data2
 34899   0102F8  0E09               	movlw	9
 34900   0102FA  6E27               	movwf	sendMessage3@data3^(0+1280),c
 34901   0102FC  0E6F               	movlw	111
 34902   0102FE  EC8E  F0B1         	call	_sendMessage3
 34903                           
 34904                           ;../../VLCBlib_PIC/mns.c: 465:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 34905   010302  C55F  F525         	movff	_nn+1,sendMessage5@data1
 34906   010306  C55E  F526         	movff	_nn,sendMessage5@data2
 34907   01030A  0E73               	movlw	115
 34908   01030C  6E27               	movwf	sendMessage5@data3^(0+1280),c
 34909   01030E  0E01               	movlw	1
 34910   010310  6E28               	movwf	sendMessage5@data4^(0+1280),c
 34911   010312  0E09               	movlw	9
 34912   010314  6E29               	movwf	sendMessage5@data5^(0+1280),c
 34913   010316  0EAF               	movlw	175
 34914   010318  ECCD  F0B1         	call	_sendMessage5
 34915   01031C  D6C2               	goto	l10611
 34916   01031E                     l10727:
 34917                           
 34918                           ; BSR set to: 5
 34919                           ;../../VLCBlib_PIC/mns.c: 469:             i = getParameter(m->bytes[2]);
 34920   01031E  EE20 F004          	lfsr	2,4
 34921   010322  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34922   010324  26D9               	addwf	fsr2l,f,c
 34923   010326  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34924   010328  22DA               	addwfc	fsr2h,f,c
 34925   01032A  50DF               	movf	indf2,w,c
 34926   01032C  EC36  F09C         	call	_getParameter
 34927   010330  6E55               	movwf	mnsProcessMessage@i^(0+1280),c
 34928                           
 34929                           ;../../VLCBlib_PIC/mns.c: 470:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 34930   010332  C55F  F525         	movff	_nn+1,sendMessage4@data1
 34931   010336  C55E  F526         	movff	_nn,sendMessage4@data2
 34932   01033A  EE20 F004          	lfsr	2,4
 34933   01033E  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34934   010340  26D9               	addwf	fsr2l,f,c
 34935   010342  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34936   010344  22DA               	addwfc	fsr2h,f,c
 34937   010346  50DF               	movf	indf2,w,c
 34938   010348  6E27               	movwf	sendMessage4@data3^(0+1280),c
 34939   01034A  C555  F528         	movff	mnsProcessMessage@i,sendMessage4@data4
 34940   01034E  0E9B               	movlw	155
 34941   010350  ECE2  F0B1         	call	_sendMessage4
 34942                           
 34943                           ;../../VLCBlib_PIC/mns.c: 472:             if (((mode_flags & 8) == 0) && (m->bytes[2] =
      +                          = 0)) {
 34944   010354  0105               	movlb	5	; () banked
 34945   010356  B7A0               	btfsc	_mode_flags& (0+255),3,b
 34946   010358  D6A4               	goto	l10611
 34947                           
 34948                           ; BSR set to: 5
 34949   01035A  EE20 F004          	lfsr	2,4
 34950   01035E  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 34951   010360  26D9               	addwf	fsr2l,f,c
 34952   010362  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 34953   010364  22DA               	addwfc	fsr2h,f,c
 34954   010366  50DF               	movf	indf2,w,c
 34955   010368  A4D8               	btfss	status,2,c
 34956   01036A  D69B               	goto	l10611
 34957                           
 34958                           ; BSR set to: 5
 34959                           ;../../VLCBlib_PIC/mns.c: 473:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 34960   01036C  0E01               	movlw	1
 34961   01036E  EC92  F0A8         	call	_findServiceIndex
 34962   010372  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 34963   010374  0EEE               	movlw	low _mnsTRrqnpnCallback
 34964   010376  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 34965   010378  0E63               	movlw	high _mnsTRrqnpnCallback
 34966   01037A  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 34967   01037C  0E01               	movlw	low (_mnsTRrqnpnCallback shr (0+16))
 34968   01037E  6E08               	movwf	(startTimedResponse@callback+2)^(0+1280),c
 34969   010380  0E07               	movlw	7
 34970   010382  EC67  F0AF         	call	_startTimedResponse
 34971   010386  D68D               	goto	l10611
 34972   010388                     l1599:
 34973                           
 34974                           ; BSR set to: 5
 34975                           ;../../VLCBlib_PIC/mns.c: 478:             previousNN.word = nn.word;
 34976   010388  C55E  F57E         	movff	_nn,_previousNN
 34977   01038C  C55F  F57F         	movff	_nn+1,_previousNN+1
 34978                           
 34979                           ; BSR set to: 5
 34980                           ;../../VLCBlib_PIC/mns.c: 480:             writeNVM(EEPROM_NVM_TYPE, 0x3FA, 0xFF);
 34981   010390  0EFA               	movlw	250
 34982   010392  6E0E               	movwf	writeNVM@index^(0+1280),c
 34983   010394  0E03               	movlw	3
 34984   010396  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 34985   010398  0E00               	movlw	0
 34986   01039A  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 34987   01039C  0EFF               	movlw	255
 34988   01039E  6E11               	movwf	writeNVM@value^(0+1280),c
 34989   0103A0  0E00               	movlw	0
 34990   0103A2  ECC3  F0AD         	call	_writeNVM
 34991                           
 34992                           ;../../VLCBlib_PIC/mns.c: 481:             if (previousNN.word != 0) {
 34993   0103A6  0105               	movlb	5	; () banked
 34994   0103A8  517E               	movf	_previousNN& (0+255),w,b
 34995   0103AA  117F               	iorwf	(_previousNN+1)& (0+255),w,b
 34996   0103AC  B4D8               	btfsc	status,2,c
 34997   0103AE  D023               	goto	u8809
 34998                           
 34999                           ; BSR set to: 5
 35000                           ;../../VLCBlib_PIC/mns.c: 482:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 35001   0103B0  C57F  F525         	movff	_previousNN+1,sendMessage2@data1
 35002   0103B4  C57E  F526         	movff	_previousNN,sendMessage2@data2
 35003   0103B8  0E51               	movlw	81
 35004   0103BA  ECA3  F0B1         	call	_sendMessage2
 35005                           
 35006                           ;../../VLCBlib_PIC/mns.c: 483:                 transport->waitForTxQueueToDrain();
 35007   0103BE  0E06               	movlw	6
 35008   0103C0  0105               	movlb	5	; () banked
 35009   0103C2  2580               	addwf	_transport& (0+255),w,b
 35010   0103C4  6FCA               	movwf	??_mnsProcessMessage& (0+255),b
 35011   0103C6  0E00               	movlw	0
 35012   0103C8  2181               	addwfc	(_transport+1)& (0+255),w,b
 35013   0103CA  6FCB               	movwf	(??_mnsProcessMessage+1)& (0+255),b
 35014   0103CC  C5CA  F4F6         	movff	??_mnsProcessMessage,tblptrl
 35015   0103D0  C5CB  F4F7         	movff	??_mnsProcessMessage+1,tblptrh
 35016   0103D4                     	if	0	;tblptru may be non-zero
 35017   0103D4                     	endif
 35018   0103D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35019   0103D4  0E00               	movlw	low (__pmediumconst shr (0+16))
 35020   0103D6  6EF8               	movwf	tblptru,c
 35021   0103D8                     	endif
 35022   0103D8  D801               	call	u8808
 35023   0103DA  D00D               	goto	u8809
 35024   0103DC                     u8808:
 35025   0103DC  0005               	push	
 35026   0103DE  6EFA               	movwf	pclath,c
 35027   0103E0  0009               	tblrd		*+
 35028   0103E2  50F5               	movf	tablat,w,c
 35029   0103E4  6EFD               	movwf	tosl,c
 35030   0103E6  0009               	tblrd		*+
 35031   0103E8  50F5               	movf	tablat,w,c
 35032   0103EA  6EFE               	movwf	tosh,c
 35033   0103EC  0009               	tblrd		*+
 35034   0103EE  50F5               	movf	tablat,w,c
 35035   0103F0  6EFF               	movwf	tosu,c
 35036   0103F2  50FA               	movf	pclath,w,c
 35037   0103F4  0012               	return		;indir
 35038   0103F6                     u8809:
 35039                           
 35040                           ;../../VLCBlib_PIC/mns.c: 484:             }
 35041   0103F6  00FF               	reset		;# 
 35042   0103F8                     l10749:
 35043                           
 35044                           ;../../VLCBlib_PIC/mns.c: 488:             if (m->len < 5) {
 35045   0103F8  C553  F4D9         	movff	mnsProcessMessage@m,fsr2l
 35046   0103FC  C554  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 35047   010400  0E05               	movlw	5
 35048   010402  60DF               	cpfslt	indf2,c
 35049   010404  D00E               	goto	l10757
 35050                           
 35051                           ;../../VLCBlib_PIC/mns.c: 489:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 35052   010406  C55F  F525         	movff	_nn+1,sendMessage5@data1
 35053   01040A  C55E  F526         	movff	_nn,sendMessage5@data2
 35054   01040E  0E87               	movlw	135
 35055   010410  6E27               	movwf	sendMessage5@data3^(0+1280),c
 35056   010412  0E01               	movlw	1
 35057   010414  6E28               	movwf	sendMessage5@data4^(0+1280),c
 35058   010416  0E01               	movlw	1
 35059   010418  6E29               	movwf	sendMessage5@data5^(0+1280),c
 35060   01041A  0EAF               	movlw	175
 35061   01041C  ECCD  F0B1         	call	_sendMessage5
 35062   010420  D640               	goto	l10611
 35063   010422                     l10757:
 35064                           
 35065                           ;../../VLCBlib_PIC/mns.c: 492:             if (m->bytes[2] == 0) {
 35066   010422  EE20 F004          	lfsr	2,4
 35067   010426  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35068   010428  26D9               	addwf	fsr2l,f,c
 35069   01042A  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35070   01042C  22DA               	addwfc	fsr2h,f,c
 35071   01042E  50DF               	movf	indf2,w,c
 35072   010430  A4D8               	btfss	status,2,c
 35073   010432  D00C               	goto	l10761
 35074                           
 35075                           ;../../VLCBlib_PIC/mns.c: 494:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 35076   010434  0E00               	movlw	0
 35077   010436  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 35078   010438  0E7C               	movlw	low _mnsTRallDiagnosticsCallback
 35079   01043A  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 35080   01043C  0E39               	movlw	high _mnsTRallDiagnosticsCallback
 35081   01043E  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 35082   010440  0E01               	movlw	low (_mnsTRallDiagnosticsCallback shr (0+16))
 35083   010442  6E08               	movwf	(startTimedResponse@callback+2)^(0+1280),c
 35084   010444  0E04               	movlw	4
 35085   010446  EC67  F0AF         	call	_startTimedResponse
 35086                           
 35087                           ;../../VLCBlib_PIC/mns.c: 495:             } else {
 35088   01044A  D62B               	goto	l10611
 35089   01044C                     l10761:
 35090                           
 35091                           ;../../VLCBlib_PIC/mns.c: 497:                 if (m->bytes[2] > 8) {
 35092   01044C  EE20 F004          	lfsr	2,4
 35093   010450  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35094   010452  26D9               	addwf	fsr2l,f,c
 35095   010454  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35096   010456  22DA               	addwfc	fsr2h,f,c
 35097   010458  0E08               	movlw	8
 35098   01045A  64DF               	cpfsgt	indf2,c
 35099   01045C  D00E               	goto	l10769
 35100                           
 35101                           ;../../VLCBlib_PIC/mns.c: 498:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 35102   01045E  C55F  F525         	movff	_nn+1,sendMessage5@data1
 35103   010462  C55E  F526         	movff	_nn,sendMessage5@data2
 35104   010466  0E87               	movlw	135
 35105   010468  6E27               	movwf	sendMessage5@data3^(0+1280),c
 35106   01046A  0E01               	movlw	1
 35107   01046C  6E28               	movwf	sendMessage5@data4^(0+1280),c
 35108   01046E  0EFC               	movlw	252
 35109   010470  6E29               	movwf	sendMessage5@data5^(0+1280),c
 35110   010472  0EAF               	movlw	175
 35111   010474  ECCD  F0B1         	call	_sendMessage5
 35112   010478  D614               	goto	l10611
 35113   01047A                     l10769:
 35114                           
 35115                           ;../../VLCBlib_PIC/mns.c: 501:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 35116   01047A  EE20 F004          	lfsr	2,4
 35117   01047E  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35118   010480  26D9               	addwf	fsr2l,f,c
 35119   010482  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35120   010484  22DA               	addwfc	fsr2h,f,c
 35121   010486  50DF               	movf	indf2,w,c
 35122   010488  0105               	movlb	5	; () banked
 35123   01048A  6FCA               	movwf	??_mnsProcessMessage& (0+255),b
 35124   01048C  6BCB               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 35125   01048E  90D8               	bcf	status,0,c
 35126   010490  37CA               	rlcf	??_mnsProcessMessage& (0+255),f,b
 35127   010492  37CB               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 35128   010494  0EFE               	movlw	254
 35129   010496  25CA               	addwf	??_mnsProcessMessage& (0+255),w,b
 35130   010498  6FCC               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 35131   01049A  0EFF               	movlw	255
 35132   01049C  21CB               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 35133   01049E  6FCD               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 35134   0104A0  0E35               	movlw	low _services
 35135   0104A2  25CC               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 35136   0104A4  6EF6               	movwf	tblptrl,c
 35137   0104A6  0EFF               	movlw	high _services
 35138   0104A8  21CD               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 35139   0104AA  6EF7               	movwf	tblptrh,c
 35140   0104AC                     	if	1	;There are 3 active tblptr bytes
 35141   0104AC  6AF8               	clrf	tblptru,c
 35142   0104AE  0E00               	movlw	low (__pmediumconst shr (0+16))
 35143   0104B0  22F8               	addwfc	tblptru,f,c
 35144   0104B2                     	endif
 35145   0104B2  0009               	tblrd		*+
 35146   0104B4  C4F5 F5CE          	movff	tablat,??_mnsProcessMessage+4
 35147   0104B8  0009               	tblrd		*+
 35148   0104BA  C4F5 F5CF          	movff	tablat,??_mnsProcessMessage+5
 35149   0104BE  0E11               	movlw	17
 35150   0104C0  27CE               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 35151   0104C2  0E00               	movlw	0
 35152   0104C4  23CF               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 35153   0104C6  C5CE  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 35154   0104CA  C5CF  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 35155   0104CE                     	if	0	;tblptru may be non-zero
 35156   0104CE                     	endif
 35157   0104CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35158   0104CE  0E00               	movlw	low (__pmediumconst shr (0+16))
 35159   0104D0  6EF8               	movwf	tblptru,c
 35160   0104D2                     	endif
 35161   0104D2  0009               	tblrd		*+
 35162   0104D4  50F5               	movf	tablat,w,c
 35163   0104D6  0009               	tblrd		*+
 35164   0104D8  10F5               	iorwf	tablat,w,c
 35165   0104DA  0009               	tblrd		*+
 35166   0104DC  10F5               	iorwf	tablat,w,c
 35167   0104DE  A4D8               	btfss	status,2,c
 35168   0104E0  D013               	goto	l10773
 35169                           
 35170                           ; BSR set to: 5
 35171                           ;../../VLCBlib_PIC/mns.c: 503:                     sendMessage5(OPC_DGN, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_RDGN, m->bytes[2], 0);
 35172   0104E2  C55F  F525         	movff	_nn+1,sendMessage5@data1
 35173   0104E6  C55E  F526         	movff	_nn,sendMessage5@data2
 35174   0104EA  0E87               	movlw	135
 35175   0104EC  6E27               	movwf	sendMessage5@data3^(0+1280),c
 35176   0104EE  EE20 F004          	lfsr	2,4
 35177   0104F2  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35178   0104F4  26D9               	addwf	fsr2l,f,c
 35179   0104F6  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35180   0104F8  22DA               	addwfc	fsr2h,f,c
 35181   0104FA  50DF               	movf	indf2,w,c
 35182   0104FC  6E28               	movwf	sendMessage5@data4^(0+1280),c
 35183   0104FE  0E00               	movlw	0
 35184   010500  6E29               	movwf	sendMessage5@data5^(0+1280),c
 35185   010502  0EC7               	movlw	199
 35186   010504  ECCD  F0B1         	call	_sendMessage5
 35187   010508                     l10773:
 35188                           
 35189                           ;../../VLCBlib_PIC/mns.c: 505:                 if (m->bytes[3] == 0) {
 35190   010508  EE20 F005          	lfsr	2,5
 35191   01050C  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35192   01050E  26D9               	addwf	fsr2l,f,c
 35193   010510  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35194   010512  22DA               	addwfc	fsr2h,f,c
 35195   010514  50DF               	movf	indf2,w,c
 35196   010516  A4D8               	btfss	status,2,c
 35197   010518  D012               	goto	l10783
 35198                           
 35199                           ;../../VLCBlib_PIC/mns.c: 507:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 35200   01051A  EE20 F004          	lfsr	2,4
 35201   01051E  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35202   010520  26D9               	addwf	fsr2l,f,c
 35203   010522  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35204   010524  22DA               	addwfc	fsr2h,f,c
 35205   010526  50DF               	movf	indf2,w,c
 35206   010528  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 35207   01052A  0E7C               	movlw	low _mnsTRallDiagnosticsCallback
 35208   01052C  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 35209   01052E  0E39               	movlw	high _mnsTRallDiagnosticsCallback
 35210   010530  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 35211   010532  0E01               	movlw	low (_mnsTRallDiagnosticsCallback shr (0+16))
 35212   010534  6E08               	movwf	(startTimedResponse@callback+2)^(0+1280),c
 35213   010536  0E04               	movlw	4
 35214   010538  EC67  F0AF         	call	_startTimedResponse
 35215   01053C  D5B2               	goto	l10611
 35216   01053E                     l10783:
 35217                           
 35218                           ;../../VLCBlib_PIC/mns.c: 510:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 35219   01053E  EE20 F004          	lfsr	2,4
 35220   010542  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35221   010544  26D9               	addwf	fsr2l,f,c
 35222   010546  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35223   010548  22DA               	addwfc	fsr2h,f,c
 35224   01054A  50DF               	movf	indf2,w,c
 35225   01054C  0105               	movlb	5	; () banked
 35226   01054E  6FCA               	movwf	??_mnsProcessMessage& (0+255),b
 35227   010550  6BCB               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 35228   010552  90D8               	bcf	status,0,c
 35229   010554  37CA               	rlcf	??_mnsProcessMessage& (0+255),f,b
 35230   010556  37CB               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 35231   010558  0EFE               	movlw	254
 35232   01055A  25CA               	addwf	??_mnsProcessMessage& (0+255),w,b
 35233   01055C  6FCC               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 35234   01055E  0EFF               	movlw	255
 35235   010560  21CB               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 35236   010562  6FCD               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 35237   010564  0E35               	movlw	low _services
 35238   010566  25CC               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 35239   010568  6EF6               	movwf	tblptrl,c
 35240   01056A  0EFF               	movlw	high _services
 35241   01056C  21CD               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 35242   01056E  6EF7               	movwf	tblptrh,c
 35243   010570                     	if	1	;There are 3 active tblptr bytes
 35244   010570  6AF8               	clrf	tblptru,c
 35245   010572  0E00               	movlw	low (__pmediumconst shr (0+16))
 35246   010574  22F8               	addwfc	tblptru,f,c
 35247   010576                     	endif
 35248   010576  0009               	tblrd		*+
 35249   010578  C4F5 F5CE          	movff	tablat,??_mnsProcessMessage+4
 35250   01057C  0009               	tblrd		*+
 35251   01057E  C4F5 F5CF          	movff	tablat,??_mnsProcessMessage+5
 35252   010582  0E11               	movlw	17
 35253   010584  27CE               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 35254   010586  0E00               	movlw	0
 35255   010588  23CF               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 35256   01058A  C5CE  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 35257   01058E  C5CF  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 35258   010592                     	if	0	;tblptru may be non-zero
 35259   010592                     	endif
 35260   010592                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35261   010592  0E00               	movlw	low (__pmediumconst shr (0+16))
 35262   010594  6EF8               	movwf	tblptru,c
 35263   010596                     	endif
 35264   010596  D801               	call	u8868
 35265   010598  D014               	goto	u8869
 35266   01059A                     u8868:
 35267   01059A  0005               	push	
 35268   01059C  6EFA               	movwf	pclath,c
 35269   01059E  0009               	tblrd		*+
 35270   0105A0  50F5               	movf	tablat,w,c
 35271   0105A2  6EFD               	movwf	tosl,c
 35272   0105A4  0009               	tblrd		*+
 35273   0105A6  50F5               	movf	tablat,w,c
 35274   0105A8  6EFE               	movwf	tosh,c
 35275   0105AA  0009               	tblrd		*+
 35276   0105AC  50F5               	movf	tablat,w,c
 35277   0105AE  6EFF               	movwf	tosu,c
 35278   0105B0  50FA               	movf	pclath,w,c
 35279   0105B2  EE20 F005          	lfsr	2,5
 35280   0105B6  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35281   0105B8  26D9               	addwf	fsr2l,f,c
 35282   0105BA  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35283   0105BC  22DA               	addwfc	fsr2h,f,c
 35284   0105BE  50DF               	movf	indf2,w,c
 35285   0105C0  0012               	return		;indir
 35286   0105C2                     u8869:
 35287   0105C2  C507  F557         	movff	?_producerGetDiagnostic,mnsProcessMessage@d
 35288   0105C6  C508  F558         	movff	?_producerGetDiagnostic+1,mnsProcessMessage@d+1
 35289                           
 35290                           ;../../VLCBlib_PIC/mns.c: 511:                     if (d == ((void*)0)) {
 35291   0105CA  5057               	movf	mnsProcessMessage@d^(0+1280),w,c
 35292   0105CC  1058               	iorwf	(mnsProcessMessage@d+1)^(0+1280),w,c
 35293   0105CE  A4D8               	btfss	status,2,c
 35294   0105D0  D00E               	goto	l10789
 35295                           
 35296                           ;../../VLCBlib_PIC/mns.c: 513:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 35297   0105D2  C55F  F525         	movff	_nn+1,sendMessage5@data1
 35298   0105D6  C55E  F526         	movff	_nn,sendMessage5@data2
 35299   0105DA  0E87               	movlw	135
 35300   0105DC  6E27               	movwf	sendMessage5@data3^(0+1280),c
 35301   0105DE  0E01               	movlw	1
 35302   0105E0  6E28               	movwf	sendMessage5@data4^(0+1280),c
 35303   0105E2  0EFD               	movlw	253
 35304   0105E4  6E29               	movwf	sendMessage5@data5^(0+1280),c
 35305   0105E6  0EAF               	movlw	175
 35306   0105E8  ECCD  F0B1         	call	_sendMessage5
 35307                           
 35308                           ;../../VLCBlib_PIC/mns.c: 514:                     } else {
 35309   0105EC  D55A               	goto	l10611
 35310   0105EE                     l10789:
 35311                           
 35312                           ;../../VLCBlib_PIC/mns.c: 516:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 35313   0105EE  C55F  F525         	movff	_nn+1,sendMessage6@data1
 35314   0105F2  C55E  F526         	movff	_nn,sendMessage6@data2
 35315   0105F6  EE20 F004          	lfsr	2,4
 35316   0105FA  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35317   0105FC  26D9               	addwf	fsr2l,f,c
 35318   0105FE  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35319   010600  22DA               	addwfc	fsr2h,f,c
 35320   010602  50DF               	movf	indf2,w,c
 35321   010604  6E27               	movwf	sendMessage6@data3^(0+1280),c
 35322   010606  EE20 F005          	lfsr	2,5
 35323   01060A  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35324   01060C  26D9               	addwf	fsr2l,f,c
 35325   01060E  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35326   010610  22DA               	addwfc	fsr2h,f,c
 35327   010612  50DF               	movf	indf2,w,c
 35328   010614  6E28               	movwf	sendMessage6@data4^(0+1280),c
 35329   010616  EE20 F001          	lfsr	2,1
 35330   01061A  5057               	movf	mnsProcessMessage@d^(0+1280),w,c
 35331   01061C  26D9               	addwf	fsr2l,f,c
 35332   01061E  5058               	movf	(mnsProcessMessage@d+1)^(0+1280),w,c
 35333   010620  22DA               	addwfc	fsr2h,f,c
 35334   010622  50DF               	movf	indf2,w,c
 35335   010624  6E29               	movwf	sendMessage6@data5^(0+1280),c
 35336   010626  C557  F4D9         	movff	mnsProcessMessage@d,fsr2l
 35337   01062A  C558  F4DA         	movff	mnsProcessMessage@d+1,fsr2h
 35338   01062E  50DF               	movf	indf2,w,c
 35339   010630  6E2A               	movwf	sendMessage6@data6^(0+1280),c
 35340   010632  0EC7               	movlw	199
 35341   010634  EC79  F0B1         	call	_sendMessage6
 35342   010638  D534               	goto	l10611
 35343   01063A                     l10795:
 35344                           
 35345                           ; BSR set to: 5
 35346                           ;../../VLCBlib_PIC/mns.c: 524:             if (m->len < 4) {
 35347   01063A  C553  F4D9         	movff	mnsProcessMessage@m,fsr2l
 35348   01063E  C554  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 35349   010642  0E04               	movlw	4
 35350   010644  60DF               	cpfslt	indf2,c
 35351   010646  D00E               	goto	l10803
 35352                           
 35353                           ; BSR set to: 5
 35354                           ;../../VLCBlib_PIC/mns.c: 525:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 35355   010648  C55F  F525         	movff	_nn+1,sendMessage5@data1
 35356   01064C  C55E  F526         	movff	_nn,sendMessage5@data2
 35357   010650  0E78               	movlw	120
 35358   010652  6E27               	movwf	sendMessage5@data3^(0+1280),c
 35359   010654  0E01               	movlw	1
 35360   010656  6E28               	movwf	sendMessage5@data4^(0+1280),c
 35361   010658  0E01               	movlw	1
 35362   01065A  6E29               	movwf	sendMessage5@data5^(0+1280),c
 35363   01065C  0EAF               	movlw	175
 35364   01065E  ECCD  F0B1         	call	_sendMessage5
 35365   010662  D51F               	goto	l10611
 35366   010664                     l10803:
 35367                           
 35368                           ; BSR set to: 5
 35369                           ;../../VLCBlib_PIC/mns.c: 528:             if (m->bytes[2] == 0) {
 35370   010664  EE20 F004          	lfsr	2,4
 35371   010668  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35372   01066A  26D9               	addwf	fsr2l,f,c
 35373   01066C  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35374   01066E  22DA               	addwfc	fsr2h,f,c
 35375   010670  50DF               	movf	indf2,w,c
 35376   010672  A4D8               	btfss	status,2,c
 35377   010674  D019               	goto	l10809
 35378                           
 35379                           ; BSR set to: 5
 35380                           ;../../VLCBlib_PIC/mns.c: 530:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 8);
 35381   010676  C55F  F525         	movff	_nn+1,sendMessage5@data1
 35382   01067A  C55E  F526         	movff	_nn,sendMessage5@data2
 35383   01067E  0E00               	movlw	0
 35384   010680  6E27               	movwf	sendMessage5@data3^(0+1280),c
 35385   010682  0E00               	movlw	0
 35386   010684  6E28               	movwf	sendMessage5@data4^(0+1280),c
 35387   010686  0E08               	movlw	8
 35388   010688  6E29               	movwf	sendMessage5@data5^(0+1280),c
 35389   01068A  0EAC               	movlw	172
 35390   01068C  ECCD  F0B1         	call	_sendMessage5
 35391                           
 35392                           ;../../VLCBlib_PIC/mns.c: 532:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 35393   010690  0E01               	movlw	1
 35394   010692  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 35395   010694  0ECC               	movlw	low _mnsTRserviceDiscoveryCallback
 35396   010696  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 35397   010698  0E48               	movlw	high _mnsTRserviceDiscoveryCallback
 35398   01069A  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 35399   01069C  0E01               	movlw	low (_mnsTRserviceDiscoveryCallback shr (0+16))
 35400   01069E  6E08               	movwf	(startTimedResponse@callback+2)^(0+1280),c
 35401   0106A0  0E03               	movlw	3
 35402   0106A2  EC67  F0AF         	call	_startTimedResponse
 35403                           
 35404                           ;../../VLCBlib_PIC/mns.c: 533:             } else if (m->bytes[2] > 8) {
 35405   0106A6  D4FD               	goto	l10611
 35406   0106A8                     l10809:
 35407                           
 35408                           ; BSR set to: 5
 35409   0106A8  EE20 F004          	lfsr	2,4
 35410   0106AC  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35411   0106AE  26D9               	addwf	fsr2l,f,c
 35412   0106B0  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35413   0106B2  22DA               	addwfc	fsr2h,f,c
 35414   0106B4  0E08               	movlw	8
 35415   0106B6  64DF               	cpfsgt	indf2,c
 35416   0106B8  D00E               	goto	l10819
 35417                           
 35418                           ; BSR set to: 5
 35419                           ;../../VLCBlib_PIC/mns.c: 534:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 35420   0106BA  C55F  F525         	movff	_nn+1,sendMessage5@data1
 35421   0106BE  C55E  F526         	movff	_nn,sendMessage5@data2
 35422   0106C2  0E78               	movlw	120
 35423   0106C4  6E27               	movwf	sendMessage5@data3^(0+1280),c
 35424   0106C6  0E01               	movlw	1
 35425   0106C8  6E28               	movwf	sendMessage5@data4^(0+1280),c
 35426   0106CA  0EFC               	movlw	252
 35427   0106CC  6E29               	movwf	sendMessage5@data5^(0+1280),c
 35428   0106CE  0EAF               	movlw	175
 35429   0106D0  ECCD  F0B1         	call	_sendMessage5
 35430   0106D4  D4E6               	goto	l10611
 35431   0106D6                     l10819:
 35432                           
 35433                           ; BSR set to: 5
 35434                           ;../../VLCBlib_PIC/mns.c: 538:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 35435   0106D6  EE20 F004          	lfsr	2,4
 35436   0106DA  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35437   0106DC  26D9               	addwf	fsr2l,f,c
 35438   0106DE  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35439   0106E0  22DA               	addwfc	fsr2h,f,c
 35440   0106E2  50DF               	movf	indf2,w,c
 35441   0106E4  6FCA               	movwf	??_mnsProcessMessage& (0+255),b
 35442   0106E6  6BCB               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 35443   0106E8  90D8               	bcf	status,0,c
 35444   0106EA  37CA               	rlcf	??_mnsProcessMessage& (0+255),f,b
 35445   0106EC  37CB               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 35446   0106EE  0EFE               	movlw	254
 35447   0106F0  25CA               	addwf	??_mnsProcessMessage& (0+255),w,b
 35448   0106F2  6FCC               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 35449   0106F4  0EFF               	movlw	255
 35450   0106F6  21CB               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 35451   0106F8  6FCD               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 35452   0106FA  0E35               	movlw	low _services
 35453   0106FC  25CC               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 35454   0106FE  6EF6               	movwf	tblptrl,c
 35455   010700  0EFF               	movlw	high _services
 35456   010702  21CD               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 35457   010704  6EF7               	movwf	tblptrh,c
 35458   010706                     	if	1	;There are 3 active tblptr bytes
 35459   010706  6AF8               	clrf	tblptru,c
 35460   010708  0E00               	movlw	low (__pmediumconst shr (0+16))
 35461   01070A  22F8               	addwfc	tblptru,f,c
 35462   01070C                     	endif
 35463   01070C  0009               	tblrd		*+
 35464   01070E  C4F5 F5CE          	movff	tablat,??_mnsProcessMessage+4
 35465   010712  0009               	tblrd		*+
 35466   010714  C4F5 F5CF          	movff	tablat,??_mnsProcessMessage+5
 35467   010718  0E0E               	movlw	14
 35468   01071A  27CE               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 35469   01071C  0E00               	movlw	0
 35470   01071E  23CF               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 35471   010720  C5CE  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 35472   010724  C5CF  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 35473   010728                     	if	0	;tblptru may be non-zero
 35474   010728                     	endif
 35475   010728                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35476   010728  0E00               	movlw	low (__pmediumconst shr (0+16))
 35477   01072A  6EF8               	movwf	tblptru,c
 35478   01072C                     	endif
 35479   01072C  0009               	tblrd		*+
 35480   01072E  50F5               	movf	tablat,w,c
 35481   010730  0009               	tblrd		*+
 35482   010732  10F5               	iorwf	tablat,w,c
 35483   010734  0009               	tblrd		*+
 35484   010736  10F5               	iorwf	tablat,w,c
 35485   010738  A4D8               	btfss	status,2,c
 35486   01073A  D040               	goto	l10823
 35487                           
 35488                           ; BSR set to: 5
 35489                           ;../../VLCBlib_PIC/mns.c: 539:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 35490   01073C  C55F  F525         	movff	_nn+1,sendMessage7@data1
 35491   010740  C55E  F526         	movff	_nn,sendMessage7@data2
 35492   010744  EE20 F004          	lfsr	2,4
 35493   010748  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35494   01074A  26D9               	addwf	fsr2l,f,c
 35495   01074C  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35496   01074E  22DA               	addwfc	fsr2h,f,c
 35497   010750  50DF               	movf	indf2,w,c
 35498   010752  6E27               	movwf	sendMessage7@data3^(0+1280),c
 35499   010754  EE20 F004          	lfsr	2,4
 35500   010758  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35501   01075A  26D9               	addwf	fsr2l,f,c
 35502   01075C  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35503   01075E  22DA               	addwfc	fsr2h,f,c
 35504   010760  50DF               	movf	indf2,w,c
 35505   010762  6FCA               	movwf	??_mnsProcessMessage& (0+255),b
 35506   010764  6BCB               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 35507   010766  90D8               	bcf	status,0,c
 35508   010768  37CA               	rlcf	??_mnsProcessMessage& (0+255),f,b
 35509   01076A  37CB               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 35510   01076C  0EFE               	movlw	254
 35511   01076E  25CA               	addwf	??_mnsProcessMessage& (0+255),w,b
 35512   010770  6FCC               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 35513   010772  0EFF               	movlw	255
 35514   010774  21CB               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 35515   010776  6FCD               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 35516   010778  0E35               	movlw	low _services
 35517   01077A  25CC               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 35518   01077C  6EF6               	movwf	tblptrl,c
 35519   01077E  0EFF               	movlw	high _services
 35520   010780  21CD               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 35521   010782  6EF7               	movwf	tblptrh,c
 35522   010784                     	if	1	;There are 3 active tblptr bytes
 35523   010784  6AF8               	clrf	tblptru,c
 35524   010786  0E00               	movlw	low (__pmediumconst shr (0+16))
 35525   010788  22F8               	addwfc	tblptru,f,c
 35526   01078A                     	endif
 35527   01078A  0009               	tblrd		*+
 35528   01078C  C4F5 F5CE          	movff	tablat,??_mnsProcessMessage+4
 35529   010790  0009               	tblrd		*+
 35530   010792  C4F5 F5CF          	movff	tablat,??_mnsProcessMessage+5
 35531   010796  C5CE  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 35532   01079A  C5CF  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 35533   01079E                     	if	0	;tblptru may be non-zero
 35534   01079E                     	endif
 35535   01079E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35536   01079E  0E00               	movlw	low (__pmediumconst shr (0+16))
 35537   0107A0  6EF8               	movwf	tblptru,c
 35538   0107A2                     	endif
 35539   0107A2  0008               	tblrd		*
 35540   0107A4  C4F5 F528          	movff	tablat,sendMessage7@data4
 35541   0107A8  0E00               	movlw	0
 35542   0107AA  6E29               	movwf	sendMessage7@data5^(0+1280),c
 35543   0107AC  0E00               	movlw	0
 35544   0107AE  6E2A               	movwf	sendMessage7@data6^(0+1280),c
 35545   0107B0  0E00               	movlw	0
 35546   0107B2  6E2B               	movwf	sendMessage7@data7^(0+1280),c
 35547   0107B4  0EE7               	movlw	231
 35548   0107B6  ECB8  F0B1         	call	_sendMessage7
 35549                           
 35550                           ;../../VLCBlib_PIC/mns.c: 540:                 } else {
 35551   0107BA  D473               	goto	l10611
 35552   0107BC                     l10823:
 35553                           
 35554                           ; BSR set to: 5
 35555                           ;../../VLCBlib_PIC/mns.c: 541:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 35556   0107BC  C55F  F525         	movff	_nn+1,sendMessage7@data1
 35557   0107C0  C55E  F526         	movff	_nn,sendMessage7@data2
 35558   0107C4  EE20 F004          	lfsr	2,4
 35559   0107C8  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35560   0107CA  26D9               	addwf	fsr2l,f,c
 35561   0107CC  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35562   0107CE  22DA               	addwfc	fsr2h,f,c
 35563   0107D0  50DF               	movf	indf2,w,c
 35564   0107D2  6E27               	movwf	sendMessage7@data3^(0+1280),c
 35565   0107D4  EE20 F004          	lfsr	2,4
 35566   0107D8  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35567   0107DA  26D9               	addwf	fsr2l,f,c
 35568   0107DC  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35569   0107DE  22DA               	addwfc	fsr2h,f,c
 35570   0107E0  50DF               	movf	indf2,w,c
 35571   0107E2  6FCA               	movwf	??_mnsProcessMessage& (0+255),b
 35572   0107E4  6BCB               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 35573   0107E6  90D8               	bcf	status,0,c
 35574   0107E8  37CA               	rlcf	??_mnsProcessMessage& (0+255),f,b
 35575   0107EA  37CB               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 35576   0107EC  0EFE               	movlw	254
 35577   0107EE  25CA               	addwf	??_mnsProcessMessage& (0+255),w,b
 35578   0107F0  6FCC               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 35579   0107F2  0EFF               	movlw	255
 35580   0107F4  21CB               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 35581   0107F6  6FCD               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 35582   0107F8  0E35               	movlw	low _services
 35583   0107FA  25CC               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 35584   0107FC  6EF6               	movwf	tblptrl,c
 35585   0107FE  0EFF               	movlw	high _services
 35586   010800  21CD               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 35587   010802  6EF7               	movwf	tblptrh,c
 35588   010804                     	if	1	;There are 3 active tblptr bytes
 35589   010804  6AF8               	clrf	tblptru,c
 35590   010806  0E00               	movlw	low (__pmediumconst shr (0+16))
 35591   010808  22F8               	addwfc	tblptru,f,c
 35592   01080A                     	endif
 35593   01080A  0009               	tblrd		*+
 35594   01080C  C4F5 F5CE          	movff	tablat,??_mnsProcessMessage+4
 35595   010810  0009               	tblrd		*+
 35596   010812  C4F5 F5CF          	movff	tablat,??_mnsProcessMessage+5
 35597   010816  C5CE  F4F6         	movff	??_mnsProcessMessage+4,tblptrl
 35598   01081A  C5CF  F4F7         	movff	??_mnsProcessMessage+5,tblptrh
 35599   01081E                     	if	0	;tblptru may be non-zero
 35600   01081E                     	endif
 35601   01081E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35602   01081E  0E00               	movlw	low (__pmediumconst shr (0+16))
 35603   010820  6EF8               	movwf	tblptru,c
 35604   010822                     	endif
 35605   010822  0008               	tblrd		*
 35606   010824  C4F5 F528          	movff	tablat,sendMessage7@data4
 35607   010828  EE20 F004          	lfsr	2,4
 35608   01082C  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35609   01082E  26D9               	addwf	fsr2l,f,c
 35610   010830  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35611   010832  22DA               	addwfc	fsr2h,f,c
 35612   010834  50DF               	movf	indf2,w,c
 35613   010836  6FD0               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 35614   010838  6BD1               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 35615   01083A  90D8               	bcf	status,0,c
 35616   01083C  37D0               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 35617   01083E  37D1               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 35618   010840  0EFE               	movlw	254
 35619   010842  25D0               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 35620   010844  6FD2               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 35621   010846  0EFF               	movlw	255
 35622   010848  21D1               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 35623   01084A  6FD3               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 35624   01084C  0E35               	movlw	low _services
 35625   01084E  25D2               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 35626   010850  6EF6               	movwf	tblptrl,c
 35627   010852  0EFF               	movlw	high _services
 35628   010854  21D3               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 35629   010856  6EF7               	movwf	tblptrh,c
 35630   010858                     	if	1	;There are 3 active tblptr bytes
 35631   010858  6AF8               	clrf	tblptru,c
 35632   01085A  0E00               	movlw	low (__pmediumconst shr (0+16))
 35633   01085C  22F8               	addwfc	tblptru,f,c
 35634   01085E                     	endif
 35635   01085E  0009               	tblrd		*+
 35636   010860  C4F5 F5D4          	movff	tablat,??_mnsProcessMessage+10
 35637   010864  0009               	tblrd		*+
 35638   010866  C4F5 F5D5          	movff	tablat,??_mnsProcessMessage+11
 35639   01086A  0E0E               	movlw	14
 35640   01086C  27D4               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 35641   01086E  0E00               	movlw	0
 35642   010870  23D5               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 35643   010872  C5D4  F4F6         	movff	??_mnsProcessMessage+10,tblptrl
 35644   010876  C5D5  F4F7         	movff	??_mnsProcessMessage+11,tblptrh
 35645   01087A                     	if	0	;tblptru may be non-zero
 35646   01087A                     	endif
 35647   01087A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35648   01087A  0E00               	movlw	low (__pmediumconst shr (0+16))
 35649   01087C  6EF8               	movwf	tblptru,c
 35650   01087E                     	endif
 35651   01087E  D801               	call	u8928
 35652   010880  D00E               	goto	u8929
 35653   010882                     u8928:
 35654   010882  0005               	push	
 35655   010884  6EFA               	movwf	pclath,c
 35656   010886  0009               	tblrd		*+
 35657   010888  50F5               	movf	tablat,w,c
 35658   01088A  6EFD               	movwf	tosl,c
 35659   01088C  0009               	tblrd		*+
 35660   01088E  50F5               	movf	tablat,w,c
 35661   010890  6EFE               	movwf	tosh,c
 35662   010892  0009               	tblrd		*+
 35663   010894  50F5               	movf	tablat,w,c
 35664   010896  6EFF               	movwf	tosu,c
 35665   010898  50FA               	movf	pclath,w,c
 35666   01089A  0E01               	movlw	1
 35667   01089C  0012               	return		;indir
 35668   01089E                     u8929:
 35669   01089E  6E29               	movwf	sendMessage7@data5^(0+1280),c
 35670   0108A0  EE20 F004          	lfsr	2,4
 35671   0108A4  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35672   0108A6  26D9               	addwf	fsr2l,f,c
 35673   0108A8  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35674   0108AA  22DA               	addwfc	fsr2h,f,c
 35675   0108AC  50DF               	movf	indf2,w,c
 35676   0108AE  0105               	movlb	5	; () banked
 35677   0108B0  6FD6               	movwf	(??_mnsProcessMessage+12)& (0+255),b
 35678   0108B2  6BD7               	clrf	(??_mnsProcessMessage+13)& (0+255),b
 35679   0108B4  90D8               	bcf	status,0,c
 35680   0108B6  37D6               	rlcf	(??_mnsProcessMessage+12)& (0+255),f,b
 35681   0108B8  37D7               	rlcf	(??_mnsProcessMessage+13)& (0+255),f,b
 35682   0108BA  0EFE               	movlw	254
 35683   0108BC  25D6               	addwf	(??_mnsProcessMessage+12)& (0+255),w,b
 35684   0108BE  6FD8               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 35685   0108C0  0EFF               	movlw	255
 35686   0108C2  21D7               	addwfc	(??_mnsProcessMessage+13)& (0+255),w,b
 35687   0108C4  6FD9               	movwf	(??_mnsProcessMessage+15)& (0+255),b
 35688   0108C6  0E35               	movlw	low _services
 35689   0108C8  25D8               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 35690   0108CA  6EF6               	movwf	tblptrl,c
 35691   0108CC  0EFF               	movlw	high _services
 35692   0108CE  21D9               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 35693   0108D0  6EF7               	movwf	tblptrh,c
 35694   0108D2                     	if	1	;There are 3 active tblptr bytes
 35695   0108D2  6AF8               	clrf	tblptru,c
 35696   0108D4  0E00               	movlw	low (__pmediumconst shr (0+16))
 35697   0108D6  22F8               	addwfc	tblptru,f,c
 35698   0108D8                     	endif
 35699   0108D8  0009               	tblrd		*+
 35700   0108DA  C4F5 F5DA          	movff	tablat,??_mnsProcessMessage+16
 35701   0108DE  0009               	tblrd		*+
 35702   0108E0  C4F5 F5DB          	movff	tablat,??_mnsProcessMessage+17
 35703   0108E4  0E0E               	movlw	14
 35704   0108E6  27DA               	addwf	(??_mnsProcessMessage+16)& (0+255),f,b
 35705   0108E8  0E00               	movlw	0
 35706   0108EA  23DB               	addwfc	(??_mnsProcessMessage+17)& (0+255),f,b
 35707   0108EC  C5DA  F4F6         	movff	??_mnsProcessMessage+16,tblptrl
 35708   0108F0  C5DB  F4F7         	movff	??_mnsProcessMessage+17,tblptrh
 35709   0108F4                     	if	0	;tblptru may be non-zero
 35710   0108F4                     	endif
 35711   0108F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35712   0108F4  0E00               	movlw	low (__pmediumconst shr (0+16))
 35713   0108F6  6EF8               	movwf	tblptru,c
 35714   0108F8                     	endif
 35715   0108F8  D801               	call	u8938
 35716   0108FA  D00E               	goto	u8939
 35717   0108FC                     u8938:
 35718   0108FC  0005               	push	
 35719   0108FE  6EFA               	movwf	pclath,c
 35720   010900  0009               	tblrd		*+
 35721   010902  50F5               	movf	tablat,w,c
 35722   010904  6EFD               	movwf	tosl,c
 35723   010906  0009               	tblrd		*+
 35724   010908  50F5               	movf	tablat,w,c
 35725   01090A  6EFE               	movwf	tosh,c
 35726   01090C  0009               	tblrd		*+
 35727   01090E  50F5               	movf	tablat,w,c
 35728   010910  6EFF               	movwf	tosu,c
 35729   010912  50FA               	movf	pclath,w,c
 35730   010914  0E02               	movlw	2
 35731   010916  0012               	return		;indir
 35732   010918                     u8939:
 35733   010918  6E2A               	movwf	sendMessage7@data6^(0+1280),c
 35734   01091A  EE20 F004          	lfsr	2,4
 35735   01091E  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35736   010920  26D9               	addwf	fsr2l,f,c
 35737   010922  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35738   010924  22DA               	addwfc	fsr2h,f,c
 35739   010926  50DF               	movf	indf2,w,c
 35740   010928  0105               	movlb	5	; () banked
 35741   01092A  6FDC               	movwf	(??_mnsProcessMessage+18)& (0+255),b
 35742   01092C  6BDD               	clrf	(??_mnsProcessMessage+19)& (0+255),b
 35743   01092E  90D8               	bcf	status,0,c
 35744   010930  37DC               	rlcf	(??_mnsProcessMessage+18)& (0+255),f,b
 35745   010932  37DD               	rlcf	(??_mnsProcessMessage+19)& (0+255),f,b
 35746   010934  0EFE               	movlw	254
 35747   010936  25DC               	addwf	(??_mnsProcessMessage+18)& (0+255),w,b
 35748   010938  6FDE               	movwf	(??_mnsProcessMessage+20)& (0+255),b
 35749   01093A  0EFF               	movlw	255
 35750   01093C  21DD               	addwfc	(??_mnsProcessMessage+19)& (0+255),w,b
 35751   01093E  6FDF               	movwf	(??_mnsProcessMessage+21)& (0+255),b
 35752   010940  0E35               	movlw	low _services
 35753   010942  25DE               	addwf	(??_mnsProcessMessage+20)& (0+255),w,b
 35754   010944  6EF6               	movwf	tblptrl,c
 35755   010946  0EFF               	movlw	high _services
 35756   010948  21DF               	addwfc	(??_mnsProcessMessage+21)& (0+255),w,b
 35757   01094A  6EF7               	movwf	tblptrh,c
 35758   01094C                     	if	1	;There are 3 active tblptr bytes
 35759   01094C  6AF8               	clrf	tblptru,c
 35760   01094E  0E00               	movlw	low (__pmediumconst shr (0+16))
 35761   010950  22F8               	addwfc	tblptru,f,c
 35762   010952                     	endif
 35763   010952  0009               	tblrd		*+
 35764   010954  C4F5 F5E0          	movff	tablat,??_mnsProcessMessage+22
 35765   010958  0009               	tblrd		*+
 35766   01095A  C4F5 F5E1          	movff	tablat,??_mnsProcessMessage+23
 35767   01095E  0E0E               	movlw	14
 35768   010960  27E0               	addwf	(??_mnsProcessMessage+22)& (0+255),f,b
 35769   010962  0E00               	movlw	0
 35770   010964  23E1               	addwfc	(??_mnsProcessMessage+23)& (0+255),f,b
 35771   010966  C5E0  F4F6         	movff	??_mnsProcessMessage+22,tblptrl
 35772   01096A  C5E1  F4F7         	movff	??_mnsProcessMessage+23,tblptrh
 35773   01096E                     	if	0	;tblptru may be non-zero
 35774   01096E                     	endif
 35775   01096E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35776   01096E  0E00               	movlw	low (__pmediumconst shr (0+16))
 35777   010970  6EF8               	movwf	tblptru,c
 35778   010972                     	endif
 35779   010972  D801               	call	u8948
 35780   010974  D00E               	goto	u8949
 35781   010976                     u8948:
 35782   010976  0005               	push	
 35783   010978  6EFA               	movwf	pclath,c
 35784   01097A  0009               	tblrd		*+
 35785   01097C  50F5               	movf	tablat,w,c
 35786   01097E  6EFD               	movwf	tosl,c
 35787   010980  0009               	tblrd		*+
 35788   010982  50F5               	movf	tablat,w,c
 35789   010984  6EFE               	movwf	tosh,c
 35790   010986  0009               	tblrd		*+
 35791   010988  50F5               	movf	tablat,w,c
 35792   01098A  6EFF               	movwf	tosu,c
 35793   01098C  50FA               	movf	pclath,w,c
 35794   01098E  0E03               	movlw	3
 35795   010990  0012               	return		;indir
 35796   010992                     u8949:
 35797   010992  6E2B               	movwf	sendMessage7@data7^(0+1280),c
 35798   010994  0EE7               	movlw	231
 35799   010996  ECB8  F0B1         	call	_sendMessage7
 35800   01099A  EF51  F080         	goto	l10611
 35801   01099E                     l10829:
 35802                           
 35803                           ; BSR set to: 5
 35804                           ;../../VLCBlib_PIC/mns.c: 551:             if (m->len < 4) {
 35805   01099E  C553  F4D9         	movff	mnsProcessMessage@m,fsr2l
 35806   0109A2  C554  F4DA         	movff	mnsProcessMessage@m+1,fsr2h
 35807   0109A6  0E04               	movlw	4
 35808   0109A8  60DF               	cpfslt	indf2,c
 35809   0109AA  D00F               	goto	l10837
 35810                           
 35811                           ; BSR set to: 5
 35812                           ;../../VLCBlib_PIC/mns.c: 552:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 35813   0109AC  C55F  F525         	movff	_nn+1,sendMessage5@data1
 35814   0109B0  C55E  F526         	movff	_nn,sendMessage5@data2
 35815   0109B4  0E76               	movlw	118
 35816   0109B6  6E27               	movwf	sendMessage5@data3^(0+1280),c
 35817   0109B8  0E01               	movlw	1
 35818   0109BA  6E28               	movwf	sendMessage5@data4^(0+1280),c
 35819   0109BC  0E01               	movlw	1
 35820   0109BE  6E29               	movwf	sendMessage5@data5^(0+1280),c
 35821   0109C0  0EAF               	movlw	175
 35822   0109C2  ECCD  F0B1         	call	_sendMessage5
 35823   0109C6  EF51  F080         	goto	l10611
 35824   0109CA                     l10837:
 35825                           
 35826                           ; BSR set to: 5
 35827                           ;../../VLCBlib_PIC/mns.c: 555:             newMode = m->bytes[2];
 35828   0109CA  EE20 F004          	lfsr	2,4
 35829   0109CE  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 35830   0109D0  26D9               	addwf	fsr2l,f,c
 35831   0109D2  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 35832   0109D4  22DA               	addwfc	fsr2h,f,c
 35833   0109D6  50DF               	movf	indf2,w,c
 35834   0109D8  6E59               	movwf	mnsProcessMessage@newMode^(0+1280),c
 35835                           
 35836                           ; BSR set to: 5
 35837                           ;../../VLCBlib_PIC/mns.c: 556:             previousNN.word = nn.word;
 35838   0109DA  C55E  F57E         	movff	_nn,_previousNN
 35839   0109DE  C55F  F57F         	movff	_nn+1,_previousNN+1
 35840                           
 35841                           ;../../VLCBlib_PIC/mns.c: 558:             switch (newMode) {
 35842   0109E2  D083               	goto	l10903
 35843   0109E4                     l10841:
 35844                           
 35845                           ; BSR set to: 5
 35846                           ;../../VLCBlib_PIC/mns.c: 561:                     if (mode_state == MODE_NORMAL) {
 35847   0109E4  0591               	decf	_mode_state& (0+255),w,b
 35848   0109E6  A4D8               	btfss	status,2,c
 35849   0109E8  EFD1  F080         	goto	l10637
 35850                           
 35851                           ; BSR set to: 5
 35852                           ;../../VLCBlib_PIC/mns.c: 562:                         sendMessage2((newMode == MODE_SET
      +                          UP) ? OPC_RQNN : OPC_NNREL, nn.bytes.hi, nn.bytes.lo);
 35853   0109EC  5059               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 35854   0109EE  B4D8               	btfsc	status,2,c
 35855   0109F0  D002               	goto	l10847
 35856                           
 35857                           ; BSR set to: 5
 35858   0109F2  0E51               	movlw	81
 35859   0109F4  D001               	goto	L4
 35860   0109F6                     l10847:
 35861                           
 35862                           ; BSR set to: 5
 35863   0109F6  0E50               	movlw	80
 35864   0109F8                     L4:
 35865   0109F8  6E56               	movwf	_mnsProcessMessage$4944^(0+1280),c
 35866                           
 35867                           ; BSR set to: 5
 35868   0109FA  C55F  F525         	movff	_nn+1,sendMessage2@data1
 35869   0109FE  C55E  F526         	movff	_nn,sendMessage2@data2
 35870   010A02  5056               	movf	_mnsProcessMessage$4944^(0+1280),w,c
 35871   010A04  ECA3  F0B1         	call	_sendMessage2
 35872                           
 35873                           ;../../VLCBlib_PIC/mns.c: 563:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 35874   010A08  C55F  F525         	movff	_nn+1,sendMessage5@data1
 35875   010A0C  C55E  F526         	movff	_nn,sendMessage5@data2
 35876   010A10  0E76               	movlw	118
 35877   010A12  6E27               	movwf	sendMessage5@data3^(0+1280),c
 35878   010A14  0E01               	movlw	1
 35879   010A16  6E28               	movwf	sendMessage5@data4^(0+1280),c
 35880   010A18  0E00               	movlw	0
 35881   010A1A  6E29               	movwf	sendMessage5@data5^(0+1280),c
 35882   010A1C  0EAF               	movlw	175
 35883   010A1E  ECCD  F0B1         	call	_sendMessage5
 35884                           
 35885                           ;../../VLCBlib_PIC/mns.c: 564:                         nn.bytes.lo = nn.bytes.hi = 0;
 35886   010A22  6A5F               	clrf	(_nn+1)^(0+1280),c
 35887   010A24  6A5E               	clrf	_nn^(0+1280),c
 35888                           
 35889                           ;../../VLCBlib_PIC/mns.c: 565:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC +
      +                          1, nn.bytes.hi);
 35890   010A26  0EFD               	movlw	253
 35891   010A28  6E0E               	movwf	writeNVM@index^(0+1280),c
 35892   010A2A  0E03               	movlw	3
 35893   010A2C  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 35894   010A2E  0E00               	movlw	0
 35895   010A30  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 35896   010A32  C55F  F511         	movff	_nn+1,writeNVM@value
 35897   010A36  0E00               	movlw	0
 35898   010A38  ECC3  F0AD         	call	_writeNVM
 35899                           
 35900                           ;../../VLCBlib_PIC/mns.c: 566:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC, 
      +                          nn.bytes.lo);
 35901   010A3C  0EFC               	movlw	252
 35902   010A3E  6E0E               	movwf	writeNVM@index^(0+1280),c
 35903   010A40  0E03               	movlw	3
 35904   010A42  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 35905   010A44  0E00               	movlw	0
 35906   010A46  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 35907   010A48  C55E  F511         	movff	_nn,writeNVM@value
 35908   010A4C  0E00               	movlw	0
 35909   010A4E  ECC3  F0AD         	call	_writeNVM
 35910                           
 35911                           ;../../VLCBlib_PIC/mns.c: 568:                         mode_state = (newMode == MODE_SET
      +                          UP) ? MODE_SETUP : MODE_UNINITIALISED;
 35912   010A52  5059               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 35913   010A54  B4D8               	btfsc	status,2,c
 35914   010A56  D003               	goto	l1630
 35915   010A58  0105               	movlb	5	; () banked
 35916   010A5A  6991               	setf	_mode_state& (0+255),b
 35917   010A5C  D002               	goto	l10861
 35918   010A5E                     l1630:
 35919   010A5E  0105               	movlb	5	; () banked
 35920   010A60  6B91               	clrf	_mode_state& (0+255),b
 35921   010A62                     l10861:
 35922                           
 35923                           ; BSR set to: 5
 35924                           ;../../VLCBlib_PIC/mns.c: 569:                         setupModePreviousMode = MODE_NORM
      +                          AL;
 35925   010A62  0E01               	movlw	1
 35926   010A64  6F8E               	movwf	_setupModePreviousMode& (0+255),b
 35927   010A66  EF4F  F080         	goto	l10609
 35928   010A6A                     l10869:
 35929                           
 35930                           ; BSR set to: 5
 35931                           ;../../VLCBlib_PIC/mns.c: 576:                     mode_flags |= 4;
 35932   010A6A  85A0               	bsf	_mode_flags& (0+255),2,b
 35933                           
 35934                           ; BSR set to: 5
 35935                           ;../../VLCBlib_PIC/mns.c: 577:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 35936   010A6C  C55F  F525         	movff	_nn+1,sendMessage5@data1
 35937   010A70  C55E  F526         	movff	_nn,sendMessage5@data2
 35938   010A74  0E76               	movlw	118
 35939   010A76  6E27               	movwf	sendMessage5@data3^(0+1280),c
 35940   010A78  0E01               	movlw	1
 35941   010A7A  6E28               	movwf	sendMessage5@data4^(0+1280),c
 35942   010A7C  0E00               	movlw	0
 35943   010A7E  6E29               	movwf	sendMessage5@data5^(0+1280),c
 35944   010A80  0EAF               	movlw	175
 35945   010A82  ECCD  F0B1         	call	_sendMessage5
 35946   010A86  EF51  F080         	goto	l10611
 35947   010A8A                     l10877:
 35948                           
 35949                           ; BSR set to: 5
 35950                           ;../../VLCBlib_PIC/mns.c: 580:                     mode_flags &= ~4;
 35951   010A8A  95A0               	bcf	_mode_flags& (0+255),2,b
 35952                           
 35953                           ; BSR set to: 5
 35954                           ;../../VLCBlib_PIC/mns.c: 581:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 35955   010A8C  C55F  F525         	movff	_nn+1,sendMessage5@data1
 35956   010A90  C55E  F526         	movff	_nn,sendMessage5@data2
 35957   010A94  0E76               	movlw	118
 35958   010A96  6E27               	movwf	sendMessage5@data3^(0+1280),c
 35959   010A98  0E01               	movlw	1
 35960   010A9A  6E28               	movwf	sendMessage5@data4^(0+1280),c
 35961   010A9C  0E00               	movlw	0
 35962   010A9E  6E29               	movwf	sendMessage5@data5^(0+1280),c
 35963   010AA0  0EAF               	movlw	175
 35964   010AA2  ECCD  F0B1         	call	_sendMessage5
 35965   010AA6  EF51  F080         	goto	l10611
 35966   010AAA                     l10885:
 35967                           
 35968                           ; BSR set to: 5
 35969                           ;../../VLCBlib_PIC/mns.c: 584:                     mode_flags |= 8;
 35970   010AAA  87A0               	bsf	_mode_flags& (0+255),3,b
 35971                           
 35972                           ; BSR set to: 5
 35973                           ;../../VLCBlib_PIC/mns.c: 585:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 35974   010AAC  C55F  F525         	movff	_nn+1,sendMessage5@data1
 35975   010AB0  C55E  F526         	movff	_nn,sendMessage5@data2
 35976   010AB4  0E76               	movlw	118
 35977   010AB6  6E27               	movwf	sendMessage5@data3^(0+1280),c
 35978   010AB8  0E01               	movlw	1
 35979   010ABA  6E28               	movwf	sendMessage5@data4^(0+1280),c
 35980   010ABC  0E00               	movlw	0
 35981   010ABE  6E29               	movwf	sendMessage5@data5^(0+1280),c
 35982   010AC0  0EAF               	movlw	175
 35983   010AC2  ECCD  F0B1         	call	_sendMessage5
 35984   010AC6  EF51  F080         	goto	l10611
 35985   010ACA                     l10893:
 35986                           
 35987                           ; BSR set to: 5
 35988                           ;../../VLCBlib_PIC/mns.c: 588:                     mode_flags &= ~8;
 35989   010ACA  97A0               	bcf	_mode_flags& (0+255),3,b
 35990                           
 35991                           ; BSR set to: 5
 35992                           ;../../VLCBlib_PIC/mns.c: 589:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 35993   010ACC  C55F  F525         	movff	_nn+1,sendMessage5@data1
 35994   010AD0  C55E  F526         	movff	_nn,sendMessage5@data2
 35995   010AD4  0E76               	movlw	118
 35996   010AD6  6E27               	movwf	sendMessage5@data3^(0+1280),c
 35997   010AD8  0E01               	movlw	1
 35998   010ADA  6E28               	movwf	sendMessage5@data4^(0+1280),c
 35999   010ADC  0E00               	movlw	0
 36000   010ADE  6E29               	movwf	sendMessage5@data5^(0+1280),c
 36001   010AE0  0EAF               	movlw	175
 36002   010AE2  ECCD  F0B1         	call	_sendMessage5
 36003   010AE6  EF51  F080         	goto	l10611
 36004   010AEA                     l10903:
 36005                           
 36006                           ; BSR set to: 5
 36007   010AEA  5059               	movf	mnsProcessMessage@newMode^(0+1280),w,c
 36008                           
 36009                           ; Switch size 1, requested type "simple"
 36010                           ; Number of cases is 6, Range of values is 0 to 255
 36011                           ; switch strategies available:
 36012                           ; Name         Instructions Cycles
 36013                           ; simple_byte           19    10 (average)
 36014                           ;	Chosen strategy is simple_byte
 36015   010AEC  0A00               	xorlw	0	; case 0
 36016   010AEE  B4D8               	btfsc	status,2,c
 36017   010AF0  D779               	goto	l10841
 36018   010AF2  0A0C               	xorlw	12	; case 12
 36019   010AF4  B4D8               	btfsc	status,2,c
 36020   010AF6  D7B9               	goto	l10869
 36021   010AF8  0A01               	xorlw	1	; case 13
 36022   010AFA  B4D8               	btfsc	status,2,c
 36023   010AFC  D7C6               	goto	l10877
 36024   010AFE  0A1D               	xorlw	29	; case 16
 36025   010B00  B4D8               	btfsc	status,2,c
 36026   010B02  D7D3               	goto	l10885
 36027   010B04  0A01               	xorlw	1	; case 17
 36028   010B06  B4D8               	btfsc	status,2,c
 36029   010B08  D7E0               	goto	l10893
 36030   010B0A  0AEE               	xorlw	238	; case 255
 36031   010B0C  B4D8               	btfsc	status,2,c
 36032   010B0E  D76A               	goto	l10841
 36033   010B10  EFD1  F080         	goto	l10637
 36034   010B14                     l1639:
 36035                           
 36036                           ; BSR set to: 5
 36037   010B14  00FF               	reset		;# 
 36038   010B16  EF51  F080         	goto	l10611
 36039   010B1A                     l10915:
 36040                           
 36041                           ; BSR set to: 5
 36042   010B1A  EE20 F001          	lfsr	2,1
 36043   010B1E  5053               	movf	mnsProcessMessage@m^(0+1280),w,c
 36044   010B20  26D9               	addwf	fsr2l,f,c
 36045   010B22  5054               	movf	(mnsProcessMessage@m+1)^(0+1280),w,c
 36046   010B24  22DA               	addwfc	fsr2h,f,c
 36047   010B26  50DF               	movf	indf2,w,c
 36048   010B28  6FCA               	movwf	??_mnsProcessMessage& (0+255),b
 36049   010B2A  6BCB               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 36050                           
 36051                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36052                           ; Switch size 1, requested type "simple"
 36053                           ; Number of cases is 1, Range of values is 0 to 0
 36054                           ; switch strategies available:
 36055                           ; Name         Instructions Cycles
 36056                           ; simple_byte            4     3 (average)
 36057                           ;	Chosen strategy is simple_byte
 36058   010B2C  51CB               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 36059   010B2E  0A00               	xorlw	0	; case 0
 36060   010B30  A4D8               	btfss	status,2,c
 36061   010B32  EFD1  F080         	goto	l10637
 36062                           
 36063                           ; BSR set to: 5
 36064                           ; Switch size 1, requested type "simple"
 36065                           ; Number of cases is 6, Range of values is 79 to 135
 36066                           ; switch strategies available:
 36067                           ; Name         Instructions Cycles
 36068                           ; simple_byte           19    10 (average)
 36069                           ;	Chosen strategy is simple_byte
 36070   010B36  51CA               	movf	??_mnsProcessMessage& (0+255),w,b
 36071   010B38  0A4F               	xorlw	79	; case 79
 36072   010B3A  B4D8               	btfsc	status,2,c
 36073   010B3C  D425               	goto	l1599
 36074   010B3E  0A11               	xorlw	17	; case 94
 36075   010B40  B4D8               	btfsc	status,2,c
 36076   010B42  D7E8               	goto	l1639
 36077   010B44  0A2D               	xorlw	45	; case 115
 36078   010B46  B4D8               	btfsc	status,2,c
 36079   010B48  EF5A  F081         	goto	l10711
 36080   010B4C  0A05               	xorlw	5	; case 118
 36081   010B4E  B4D8               	btfsc	status,2,c
 36082   010B50  D726               	goto	l10829
 36083   010B52  0A0E               	xorlw	14	; case 120
 36084   010B54  B4D8               	btfsc	status,2,c
 36085   010B56  D571               	goto	l10795
 36086   010B58  0AFF               	xorlw	255	; case 135
 36087   010B5A  B4D8               	btfsc	status,2,c
 36088   010B5C  D44D               	goto	l10749
 36089   010B5E  EFD1  F080         	goto	l10637
 36090   010B62                     __end_of_mnsProcessMessage:
 36091                           	callstack 0
 36092                           
 36093 ;; *************** function _consumerProcessMessage *****************
 36094 ;; Defined at:
 36095 ;;		line 110 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 36096 ;; Parameters:    Size  Location     Type
 36097 ;;  m               2   82[COMRAM] PTR struct Message
 36098 ;;		 -> poll@m(9), 
 36099 ;; Auto vars:     Size  Location     Type
 36100 ;;  enn             2   87[COMRAM] unsigned short 
 36101 ;;  tableIndex      1   90[COMRAM] unsigned char 
 36102 ;;  ret             1   89[COMRAM] enum E23340
 36103 ;; Return value:  Size  Location     Type
 36104 ;;                  1    wreg      enum E23340
 36105 ;; Registers used:
 36106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 36107 ;; Tracked objects:
 36108 ;;		On entry : 0/0
 36109 ;;		On exit  : 0/0
 36110 ;;		Unchanged: 0/0
 36111 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36113 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36114 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36115 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36116 ;;Total ram usage:        9 bytes
 36117 ;; Hardware stack levels used: 1
 36118 ;; Hardware stack levels required when called: 8
 36119 ;; This function calls:
 36120 ;;		_APP_processConsumedEvent
 36121 ;;		_consumerEventCheckLen
 36122 ;;		_findEvent
 36123 ;;		_isConsumedEvent
 36124 ;;		_sendMessage7
 36125 ;; This function is called by:
 36126 ;;		_APP_preProcessMessage
 36127 ;;		_poll
 36128 ;; This function uses a non-reentrant model
 36129 ;;
 36130                           
 36131                           	psect	text45
 36132   01236C                     __ptext45:
 36133                           	callstack 0
 36134   01236C                     _consumerProcessMessage:
 36135                           	callstack 117
 36136                           
 36137                           ;../../VLCBlib_PIC/event_consumer_simple.c: 111:     Processed ret;;../../VLCBlib_PIC/ev
      +                          ent_consumer_simple.c: 112:     uint8_t tableIndex;;../../VLCBlib_PIC/event_consumer_sim
      +                          ple.c: 113:     uint16_t enn;;../../VLCBlib_PIC/event_consumer_simple.c: 116:     if (m-
      +                          >opc == OPC_MODE) {
 36138                           
 36139                           ;incstack = 0
 36140   01236C  EE20 F001          	lfsr	2,1
 36141   012370  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 36142   012372  26D9               	addwf	fsr2l,f,c
 36143   012374  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 36144   012376  22DA               	addwfc	fsr2h,f,c
 36145   012378  0E76               	movlw	118
 36146   01237A  18DE               	xorwf	postinc2,w,c
 36147   01237C  A4D8               	btfss	status,2,c
 36148   01237E  D03D               	goto	l10213
 36149                           
 36150                           ;../../VLCBlib_PIC/event_consumer_simple.c: 117:         if (consumerEventCheckLen(m, 4)
      +                           == PROCESSED) return PROCESSED;
 36151   012380  C553  F530         	movff	consumerProcessMessage@m,consumerEventCheckLen@m
 36152   012384  C554  F531         	movff	consumerProcessMessage@m+1,consumerEventCheckLen@m+1
 36153   012388  0E04               	movlw	4
 36154   01238A  6E32               	movwf	consumerEventCheckLen@needed^(0+1280),c
 36155   01238C  EC72  F0B3         	call	_consumerEventCheckLen	;wreg free
 36156   012390  06E8               	decf	wreg,f,c
 36157   012392  A4D8               	btfss	status,2,c
 36158   012394  D002               	goto	l10187
 36159   012396                     u8140:
 36160   012396  0E01               	movlw	1
 36161   012398  0012               	return	
 36162   01239A                     l10187:
 36163                           
 36164                           ;../../VLCBlib_PIC/event_consumer_simple.c: 118:         if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 36165   01239A  EE20 F002          	lfsr	2,2
 36166   01239E  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 36167   0123A0  26D9               	addwf	fsr2l,f,c
 36168   0123A2  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 36169   0123A4  22DA               	addwfc	fsr2h,f,c
 36170   0123A6  50DE               	movf	postinc2,w,c
 36171   0123A8  185F               	xorwf	(_nn+1)^(0+1280),w,c
 36172   0123AA  A4D8               	btfss	status,2,c
 36173   0123AC  D024               	goto	l10209
 36174   0123AE  EE20 F003          	lfsr	2,3
 36175   0123B2  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 36176   0123B4  26D9               	addwf	fsr2l,f,c
 36177   0123B6  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 36178   0123B8  22DA               	addwfc	fsr2h,f,c
 36179   0123BA  505E               	movf	_nn^(0+1280),w,c
 36180   0123BC  18DE               	xorwf	postinc2,w,c
 36181   0123BE  A4D8               	btfss	status,2,c
 36182   0123C0  D01A               	goto	l10209
 36183                           
 36184                           ;../../VLCBlib_PIC/event_consumer_simple.c: 119:             if (m->bytes[2] == MODE_EVE
      +                          NT_ACK_ON) {
 36185   0123C2  EE20 F004          	lfsr	2,4
 36186   0123C6  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 36187   0123C8  26D9               	addwf	fsr2l,f,c
 36188   0123CA  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 36189   0123CC  22DA               	addwfc	fsr2h,f,c
 36190   0123CE  0E0A               	movlw	10
 36191   0123D0  18DE               	xorwf	postinc2,w,c
 36192   0123D2  A4D8               	btfss	status,2,c
 36193   0123D4  D003               	goto	l10201
 36194                           
 36195                           ;../../VLCBlib_PIC/event_consumer_simple.c: 121:                 mode_flags |= 2;
 36196   0123D6  0105               	movlb	5	; () banked
 36197   0123D8  83A0               	bsf	_mode_flags& (0+255),1,b
 36198   0123DA  D7DD               	goto	u8140
 36199   0123DC                     l10201:
 36200   0123DC  EE20 F004          	lfsr	2,4
 36201   0123E0  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 36202   0123E2  26D9               	addwf	fsr2l,f,c
 36203   0123E4  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 36204   0123E6  22DA               	addwfc	fsr2h,f,c
 36205   0123E8  0E0B               	movlw	11
 36206   0123EA  18DE               	xorwf	postinc2,w,c
 36207   0123EC  A4D8               	btfss	status,2,c
 36208   0123EE  D003               	goto	l10209
 36209                           
 36210                           ;../../VLCBlib_PIC/event_consumer_simple.c: 125:                 mode_flags &= ~2;
 36211   0123F0  0105               	movlb	5	; () banked
 36212   0123F2  93A0               	bcf	_mode_flags& (0+255),1,b
 36213   0123F4  D7D0               	goto	u8140
 36214   0123F6                     l10209:
 36215                           
 36216                           ;../../VLCBlib_PIC/event_consumer_simple.c: 129:         return NOT_PROCESSED;
 36217   0123F6  0E00               	movlw	0
 36218   0123F8  0012               	return	
 36219   0123FA                     l10213:
 36220                           
 36221                           ;../../VLCBlib_PIC/event_consumer_simple.c: 133:     if (m->len < 5) return NOT_PROCESSE
      +                          D;
 36222   0123FA  C553  F4D9         	movff	consumerProcessMessage@m,fsr2l
 36223   0123FE  C554  F4DA         	movff	consumerProcessMessage@m+1,fsr2h
 36224   012402  0E05               	movlw	5
 36225   012404  60DF               	cpfslt	indf2,c
 36226   012406  D001               	goto	l10219
 36227   012408  D7F6               	goto	l10209
 36228   01240A                     l10219:
 36229                           
 36230                           ;../../VLCBlib_PIC/event_consumer_simple.c: 135:     enn = ((uint16_t)m->bytes[0])*256+m
      +                          ->bytes[1];
 36231   01240A  EE20 F003          	lfsr	2,3
 36232   01240E  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 36233   012410  26D9               	addwf	fsr2l,f,c
 36234   012412  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 36235   012414  22DA               	addwfc	fsr2h,f,c
 36236   012416  50DF               	movf	indf2,w,c
 36237   012418  6E55               	movwf	??_consumerProcessMessage^(0+1280),c
 36238   01241A  EE20 F002          	lfsr	2,2
 36239   01241E  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 36240   012420  26D9               	addwf	fsr2l,f,c
 36241   012422  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 36242   012424  22DA               	addwfc	fsr2h,f,c
 36243   012426  50DF               	movf	indf2,w,c
 36244   012428  6E56               	movwf	(??_consumerProcessMessage+1)^(0+1280),c
 36245   01242A  5055               	movf	??_consumerProcessMessage^(0+1280),w,c
 36246   01242C  6E58               	movwf	consumerProcessMessage@enn^(0+1280),c
 36247   01242E  C556  F559         	movff	??_consumerProcessMessage+1,consumerProcessMessage@enn+1
 36248                           
 36249                           ;../../VLCBlib_PIC/event_consumer_simple.c: 137:     switch (m->opc) {
 36250   012432  D005               	goto	l10231
 36251   012434                     l1068:
 36252                           
 36253                           ;../../VLCBlib_PIC/event_consumer_simple.c: 144:   enn = 0;
 36254   012434  0E00               	movlw	0
 36255   012436  6E59               	movwf	(consumerProcessMessage@enn+1)^(0+1280),c
 36256   012438  0E00               	movlw	0
 36257   01243A  6E58               	movwf	consumerProcessMessage@enn^(0+1280),c
 36258                           
 36259                           ;../../VLCBlib_PIC/event_consumer_simple.c: 152:             break;
 36260                           
 36261                           ;../../VLCBlib_PIC/event_consumer_simple.c: 150:         case OPC_ACON3:
 36262   01243C  D03F               	goto	l10233
 36263   01243E                     l10231:
 36264   01243E  EE20 F001          	lfsr	2,1
 36265   012442  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 36266   012444  26D9               	addwf	fsr2l,f,c
 36267   012446  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 36268   012448  22DA               	addwfc	fsr2h,f,c
 36269   01244A  50DF               	movf	indf2,w,c
 36270   01244C  6E55               	movwf	??_consumerProcessMessage^(0+1280),c
 36271   01244E  6A56               	clrf	(??_consumerProcessMessage+1)^(0+1280),c
 36272                           
 36273                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36274                           ; Switch size 1, requested type "simple"
 36275                           ; Number of cases is 1, Range of values is 0 to 0
 36276                           ; switch strategies available:
 36277                           ; Name         Instructions Cycles
 36278                           ; simple_byte            4     3 (average)
 36279                           ;	Chosen strategy is simple_byte
 36280   012450  5056               	movf	(??_consumerProcessMessage+1)^(0+1280),w,c
 36281   012452  0A00               	xorlw	0	; case 0
 36282   012454  A4D8               	btfss	status,2,c
 36283   012456  D7CF               	goto	l10209
 36284                           
 36285                           ; Switch size 1, requested type "simple"
 36286                           ; Number of cases is 16, Range of values is 144 to 249
 36287                           ; switch strategies available:
 36288                           ; Name         Instructions Cycles
 36289                           ; simple_byte           49    25 (average)
 36290                           ;	Chosen strategy is simple_byte
 36291   012458  5055               	movf	??_consumerProcessMessage^(0+1280),w,c
 36292   01245A  0A90               	xorlw	144	; case 144
 36293   01245C  B4D8               	btfsc	status,2,c
 36294   01245E  D02E               	goto	l10233
 36295   012460  0A01               	xorlw	1	; case 145
 36296   012462  B4D8               	btfsc	status,2,c
 36297   012464  D02B               	goto	l10233
 36298   012466  0A09               	xorlw	9	; case 152
 36299   012468  B4D8               	btfsc	status,2,c
 36300   01246A  D7E4               	goto	l1068
 36301   01246C  0A01               	xorlw	1	; case 153
 36302   01246E  B4D8               	btfsc	status,2,c
 36303   012470  D7E1               	goto	l1068
 36304   012472  0A29               	xorlw	41	; case 176
 36305   012474  B4D8               	btfsc	status,2,c
 36306   012476  D022               	goto	l10233
 36307   012478  0A01               	xorlw	1	; case 177
 36308   01247A  B4D8               	btfsc	status,2,c
 36309   01247C  D01F               	goto	l10233
 36310   01247E  0A09               	xorlw	9	; case 184
 36311   012480  B4D8               	btfsc	status,2,c
 36312   012482  D7D8               	goto	l1068
 36313   012484  0A01               	xorlw	1	; case 185
 36314   012486  B4D8               	btfsc	status,2,c
 36315   012488  D7D5               	goto	l1068
 36316   01248A  0A69               	xorlw	105	; case 208
 36317   01248C  B4D8               	btfsc	status,2,c
 36318   01248E  D016               	goto	l10233
 36319   012490  0A01               	xorlw	1	; case 209
 36320   012492  B4D8               	btfsc	status,2,c
 36321   012494  D013               	goto	l10233
 36322   012496  0A09               	xorlw	9	; case 216
 36323   012498  B4D8               	btfsc	status,2,c
 36324   01249A  D7CC               	goto	l1068
 36325   01249C  0A01               	xorlw	1	; case 217
 36326   01249E  B4D8               	btfsc	status,2,c
 36327   0124A0  D7C9               	goto	l1068
 36328   0124A2  0A29               	xorlw	41	; case 240
 36329   0124A4  B4D8               	btfsc	status,2,c
 36330   0124A6  D00A               	goto	l10233
 36331   0124A8  0A01               	xorlw	1	; case 241
 36332   0124AA  B4D8               	btfsc	status,2,c
 36333   0124AC  D007               	goto	l10233
 36334   0124AE  0A09               	xorlw	9	; case 248
 36335   0124B0  B4D8               	btfsc	status,2,c
 36336   0124B2  D7C0               	goto	l1068
 36337   0124B4  0A01               	xorlw	1	; case 249
 36338   0124B6  B4D8               	btfsc	status,2,c
 36339   0124B8  D7BD               	goto	l1068
 36340   0124BA  D79D               	goto	l10209
 36341   0124BC                     l10233:
 36342                           
 36343                           ;../../VLCBlib_PIC/event_consumer_simple.c: 172:     tableIndex = findEvent(enn, ((uint1
      +                          6_t)m->bytes[2])*256+m->bytes[3]);
 36344   0124BC  C558  F51E         	movff	consumerProcessMessage@enn,findEvent@nodeNumber
 36345   0124C0  C559  F51F         	movff	consumerProcessMessage@enn+1,findEvent@nodeNumber+1
 36346   0124C4  EE20 F005          	lfsr	2,5
 36347   0124C8  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 36348   0124CA  26D9               	addwf	fsr2l,f,c
 36349   0124CC  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 36350   0124CE  22DA               	addwfc	fsr2h,f,c
 36351   0124D0  50DF               	movf	indf2,w,c
 36352   0124D2  6E55               	movwf	??_consumerProcessMessage^(0+1280),c
 36353   0124D4  EE20 F004          	lfsr	2,4
 36354   0124D8  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 36355   0124DA  26D9               	addwf	fsr2l,f,c
 36356   0124DC  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 36357   0124DE  22DA               	addwfc	fsr2h,f,c
 36358   0124E0  50DF               	movf	indf2,w,c
 36359   0124E2  6E56               	movwf	(??_consumerProcessMessage+1)^(0+1280),c
 36360   0124E4  5055               	movf	??_consumerProcessMessage^(0+1280),w,c
 36361   0124E6  6E20               	movwf	findEvent@eventNumber^(0+1280),c
 36362   0124E8  C556  F521         	movff	??_consumerProcessMessage+1,findEvent@eventNumber+1
 36363   0124EC  ECAE  F0A4         	call	_findEvent	;wreg free
 36364   0124F0  6E5B               	movwf	consumerProcessMessage@tableIndex^(0+1280),c
 36365                           
 36366                           ;../../VLCBlib_PIC/event_consumer_simple.c: 173:     if (tableIndex == 0xff) return NOT_
      +                          PROCESSED;
 36367   0124F2  285B               	incf	consumerProcessMessage@tableIndex^(0+1280),w,c
 36368   0124F4  B4D8               	btfsc	status,2,c
 36369   0124F6  D77F               	goto	l10209
 36370                           
 36371                           ;../../VLCBlib_PIC/event_consumer_simple.c: 175:     if (!isConsumedEvent(tableIndex)) {
 36372   0124F8  505B               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 36373   0124FA  ECC1  F0B3         	call	_isConsumedEvent
 36374   0124FE  0900               	iorlw	0
 36375   012500  B4D8               	btfsc	status,2,c
 36376   012502  D779               	goto	l10209
 36377                           
 36378                           ;../../VLCBlib_PIC/event_consumer_simple.c: 183:     if ((mode_flags & 2) && (isConsumed
      +                          Event(tableIndex))) {
 36379                           
 36380                           ;../../VLCBlib_PIC/event_consumer_simple.c: 177:     }
 36381   012504  0105               	movlb	5	; () banked
 36382   012506  A3A0               	btfss	_mode_flags& (0+255),1,b
 36383   012508  D038               	goto	l10253
 36384                           
 36385                           ; BSR set to: 5
 36386   01250A  505B               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 36387   01250C  ECC1  F0B3         	call	_isConsumedEvent
 36388   012510  0900               	iorlw	0
 36389   012512  B4D8               	btfsc	status,2,c
 36390   012514  D032               	goto	l10253
 36391                           
 36392                           ;../../VLCBlib_PIC/event_consumer_simple.c: 185:         sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, (uint8_t)(m->opc), m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]
      +                          );
 36393   012516  C55F  F525         	movff	_nn+1,sendMessage7@data1
 36394   01251A  C55E  F526         	movff	_nn,sendMessage7@data2
 36395   01251E  EE20 F001          	lfsr	2,1
 36396   012522  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 36397   012524  26D9               	addwf	fsr2l,f,c
 36398   012526  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 36399   012528  22DA               	addwfc	fsr2h,f,c
 36400   01252A  50DF               	movf	indf2,w,c
 36401   01252C  6E27               	movwf	sendMessage7@data3^(0+1280),c
 36402   01252E  EE20 F002          	lfsr	2,2
 36403   012532  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 36404   012534  26D9               	addwf	fsr2l,f,c
 36405   012536  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 36406   012538  22DA               	addwfc	fsr2h,f,c
 36407   01253A  50DF               	movf	indf2,w,c
 36408   01253C  6E28               	movwf	sendMessage7@data4^(0+1280),c
 36409   01253E  EE20 F003          	lfsr	2,3
 36410   012542  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 36411   012544  26D9               	addwf	fsr2l,f,c
 36412   012546  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 36413   012548  22DA               	addwfc	fsr2h,f,c
 36414   01254A  50DF               	movf	indf2,w,c
 36415   01254C  6E29               	movwf	sendMessage7@data5^(0+1280),c
 36416   01254E  EE20 F004          	lfsr	2,4
 36417   012552  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 36418   012554  26D9               	addwf	fsr2l,f,c
 36419   012556  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 36420   012558  22DA               	addwfc	fsr2h,f,c
 36421   01255A  50DF               	movf	indf2,w,c
 36422   01255C  6E2A               	movwf	sendMessage7@data6^(0+1280),c
 36423   01255E  EE20 F005          	lfsr	2,5
 36424   012562  5053               	movf	consumerProcessMessage@m^(0+1280),w,c
 36425   012564  26D9               	addwf	fsr2l,f,c
 36426   012566  5054               	movf	(consumerProcessMessage@m+1)^(0+1280),w,c
 36427   012568  22DA               	addwfc	fsr2h,f,c
 36428   01256A  50DF               	movf	indf2,w,c
 36429   01256C  6E2B               	movwf	sendMessage7@data7^(0+1280),c
 36430   01256E  0EE6               	movlw	230
 36431   012570  ECB8  F0B1         	call	_sendMessage7
 36432                           
 36433                           ;../../VLCBlib_PIC/event_consumer_simple.c: 187:         consumerDiagnostics[2].asInt++;
 36434   012574  0105               	movlb	5	; () banked
 36435   012576  4BBB               	infsnz	(_consumerDiagnostics+4)& (0+255),f,b
 36436   012578  2BBC               	incf	(_consumerDiagnostics+5)& (0+255),f,b
 36437   01257A                     l10253:
 36438                           
 36439                           ;../../VLCBlib_PIC/event_consumer_simple.c: 195:     ret = APP_processConsumedEvent(tabl
      +                          eIndex, m);
 36440   01257A  C553  F518         	movff	consumerProcessMessage@m,APP_processConsumedEvent@m
 36441   01257E  C554  F519         	movff	consumerProcessMessage@m+1,APP_processConsumedEvent@m+1
 36442   012582  505B               	movf	consumerProcessMessage@tableIndex^(0+1280),w,c
 36443   012584  EC55  F098         	call	_APP_processConsumedEvent
 36444   012588  6E5A               	movwf	consumerProcessMessage@ret^(0+1280),c
 36445                           
 36446                           ;../../VLCBlib_PIC/event_consumer_simple.c: 196:     if (ret == PROCESSED) {
 36447   01258A  045A               	decf	consumerProcessMessage@ret^(0+1280),w,c
 36448   01258C  A4D8               	btfss	status,2,c
 36449   01258E  D003               	goto	l10259
 36450                           
 36451                           ;../../VLCBlib_PIC/event_consumer_simple.c: 197:         consumerDiagnostics[1].asUint++
      +                          ;
 36452   012590  0105               	movlb	5	; () banked
 36453   012592  4BB9               	infsnz	(_consumerDiagnostics+2)& (0+255),f,b
 36454   012594  2BBA               	incf	(_consumerDiagnostics+3)& (0+255),f,b
 36455   012596                     l10259:
 36456                           
 36457                           ;../../VLCBlib_PIC/event_consumer_simple.c: 199:     return ret;
 36458   012596  505A               	movf	consumerProcessMessage@ret^(0+1280),w,c
 36459   012598  0012               	return		;funcret
 36460   01259A                     __end_of_consumerProcessMessage:
 36461                           	callstack 0
 36462                           
 36463 ;; *************** function _canProcessMessage *****************
 36464 ;; Defined at:
 36465 ;;		line 411 in file "../../VLCBlib_PIC/can18_can_2.c"
 36466 ;; Parameters:    Size  Location     Type
 36467 ;;  m               2   82[COMRAM] PTR struct Message
 36468 ;;		 -> poll@m(9), 
 36469 ;; Auto vars:     Size  Location     Type
 36470 ;;		None
 36471 ;; Return value:  Size  Location     Type
 36472 ;;                  1    wreg      enum E23507
 36473 ;; Registers used:
 36474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 36475 ;; Tracked objects:
 36476 ;;		On entry : 0/0
 36477 ;;		On exit  : 0/0
 36478 ;;		Unchanged: 0/0
 36479 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36482 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36483 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36484 ;;Total ram usage:        4 bytes
 36485 ;; Hardware stack levels used: 1
 36486 ;; Hardware stack levels required when called: 6
 36487 ;; This function calls:
 36488 ;;		_sendMessage5
 36489 ;; This function is called by:
 36490 ;;		_APP_preProcessMessage
 36491 ;;		_poll
 36492 ;; This function uses a non-reentrant model
 36493 ;;
 36494                           
 36495                           	psect	text46
 36496   014712                     __ptext46:
 36497                           	callstack 0
 36498   014712                     _canProcessMessage:
 36499                           	callstack 119
 36500                           
 36501                           ;../../VLCBlib_PIC/can18_can_2.c: 413:     if (m->len < 3) return NOT_PROCESSED;
 36502                           
 36503                           ;incstack = 0
 36504   014712  C553  F4D9         	movff	canProcessMessage@m,fsr2l
 36505   014716  C554  F4DA         	movff	canProcessMessage@m+1,fsr2h
 36506   01471A  0E03               	movlw	3
 36507   01471C  60DF               	cpfslt	indf2,c
 36508   01471E  D002               	goto	l10017
 36509   014720                     u7940:
 36510   014720  0E00               	movlw	0
 36511   014722  0012               	return	
 36512   014724                     l10017:
 36513                           
 36514                           ;../../VLCBlib_PIC/can18_can_2.c: 414:     if (m->bytes[0] != nn.bytes.hi) return NOT_PR
      +                          OCESSED;
 36515   014724  EE20 F002          	lfsr	2,2
 36516   014728  5053               	movf	canProcessMessage@m^(0+1280),w,c
 36517   01472A  26D9               	addwf	fsr2l,f,c
 36518   01472C  5054               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 36519   01472E  22DA               	addwfc	fsr2h,f,c
 36520   014730  50DE               	movf	postinc2,w,c
 36521   014732  185F               	xorwf	(_nn+1)^(0+1280),w,c
 36522   014734  A4D8               	btfss	status,2,c
 36523   014736  D7F4               	goto	u7940
 36524                           
 36525                           ;../../VLCBlib_PIC/can18_can_2.c: 415:     if (m->bytes[1] != nn.bytes.lo) return NOT_PR
      +                          OCESSED;
 36526   014738  EE20 F003          	lfsr	2,3
 36527   01473C  5053               	movf	canProcessMessage@m^(0+1280),w,c
 36528   01473E  26D9               	addwf	fsr2l,f,c
 36529   014740  5054               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 36530   014742  22DA               	addwfc	fsr2h,f,c
 36531   014744  505E               	movf	_nn^(0+1280),w,c
 36532   014746  18DE               	xorwf	postinc2,w,c
 36533   014748  A4D8               	btfss	status,2,c
 36534   01474A  D7EA               	goto	u7940
 36535   01474C  D017               	goto	l10047
 36536   01474E                     l10029:
 36537                           
 36538                           ;../../VLCBlib_PIC/can18_can_2.c: 421:             return PROCESSED;
 36539   01474E  0E01               	movlw	1
 36540   014750  0012               	return	
 36541   014752                     l10033:
 36542                           
 36543                           ;../../VLCBlib_PIC/can18_can_2.c: 423:             if (m->len < 4) {
 36544   014752  C553  F4D9         	movff	canProcessMessage@m,fsr2l
 36545   014756  C554  F4DA         	movff	canProcessMessage@m+1,fsr2h
 36546   01475A  0E04               	movlw	4
 36547   01475C  60DF               	cpfslt	indf2,c
 36548   01475E  D7F7               	goto	l10029
 36549                           
 36550                           ;../../VLCBlib_PIC/can18_can_2.c: 425:                 sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_CANID, SERVICE_ID_MNS, CMDERR_INV_CMD);
 36551   014760  C55F  F525         	movff	_nn+1,sendMessage5@data1
 36552   014764  C55E  F526         	movff	_nn,sendMessage5@data2
 36553   014768  0E75               	movlw	117
 36554   01476A  6E27               	movwf	sendMessage5@data3^(0+1280),c
 36555   01476C  0E01               	movlw	1
 36556   01476E  6E28               	movwf	sendMessage5@data4^(0+1280),c
 36557   014770  0E01               	movlw	1
 36558   014772  6E29               	movwf	sendMessage5@data5^(0+1280),c
 36559   014774  0EAF               	movlw	175
 36560   014776  ECCD  F0B1         	call	_sendMessage5
 36561   01477A  D7E9               	goto	l10029
 36562   01477C                     l10047:
 36563   01477C  EE20 F001          	lfsr	2,1
 36564   014780  5053               	movf	canProcessMessage@m^(0+1280),w,c
 36565   014782  26D9               	addwf	fsr2l,f,c
 36566   014784  5054               	movf	(canProcessMessage@m+1)^(0+1280),w,c
 36567   014786  22DA               	addwfc	fsr2h,f,c
 36568   014788  50DF               	movf	indf2,w,c
 36569   01478A  6E55               	movwf	??_canProcessMessage^(0+1280),c
 36570   01478C  6A56               	clrf	(??_canProcessMessage+1)^(0+1280),c
 36571                           
 36572                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36573                           ; Switch size 1, requested type "simple"
 36574                           ; Number of cases is 1, Range of values is 0 to 0
 36575                           ; switch strategies available:
 36576                           ; Name         Instructions Cycles
 36577                           ; simple_byte            4     3 (average)
 36578                           ;	Chosen strategy is simple_byte
 36579   01478E  5056               	movf	(??_canProcessMessage+1)^(0+1280),w,c
 36580   014790  0A00               	xorlw	0	; case 0
 36581   014792  A4D8               	btfss	status,2,c
 36582   014794  D7C5               	goto	u7940
 36583                           
 36584                           ; Switch size 1, requested type "simple"
 36585                           ; Number of cases is 2, Range of values is 93 to 117
 36586                           ; switch strategies available:
 36587                           ; Name         Instructions Cycles
 36588                           ; simple_byte            7     4 (average)
 36589                           ;	Chosen strategy is simple_byte
 36590   014796  5055               	movf	??_canProcessMessage^(0+1280),w,c
 36591   014798  0A5D               	xorlw	93	; case 93
 36592   01479A  B4D8               	btfsc	status,2,c
 36593   01479C  D7D8               	goto	l10029
 36594   01479E  0A28               	xorlw	40	; case 117
 36595   0147A0  B4D8               	btfsc	status,2,c
 36596   0147A2  D7D7               	goto	l10033
 36597   0147A4  D7BD               	goto	u7940
 36598   0147A6                     __end_of_canProcessMessage:
 36599                           	callstack 0
 36600                           
 36601 ;; *************** function _bootProcessMessage *****************
 36602 ;; Defined at:
 36603 ;;		line 231 in file "../../VLCBlib_PIC/boot.c"
 36604 ;; Parameters:    Size  Location     Type
 36605 ;;  m               2   82[COMRAM] PTR struct Message
 36606 ;;		 -> poll@m(9), 
 36607 ;; Auto vars:     Size  Location     Type
 36608 ;;		None
 36609 ;; Return value:  Size  Location     Type
 36610 ;;                  1    wreg      enum E23340
 36611 ;; Registers used:
 36612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36613 ;; Tracked objects:
 36614 ;;		On entry : 0/0
 36615 ;;		On exit  : 0/0
 36616 ;;		Unchanged: 0/0
 36617 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36621 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36622 ;;Total ram usage:        4 bytes
 36623 ;; Hardware stack levels used: 1
 36624 ;; Hardware stack levels required when called: 6
 36625 ;; This function calls:
 36626 ;;		_writeNVM
 36627 ;; This function is called by:
 36628 ;;		_APP_preProcessMessage
 36629 ;;		_poll
 36630 ;; This function uses a non-reentrant model
 36631 ;;
 36632                           
 36633                           	psect	text47
 36634   0150B6                     __ptext47:
 36635                           	callstack 0
 36636   0150B6                     _bootProcessMessage:
 36637                           	callstack 119
 36638                           
 36639                           ;../../VLCBlib_PIC/boot.c: 233:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 36640                           
 36641                           ;incstack = 0
 36642   0150B6  EE20 F002          	lfsr	2,2
 36643   0150BA  5053               	movf	bootProcessMessage@m^(0+1280),w,c
 36644   0150BC  26D9               	addwf	fsr2l,f,c
 36645   0150BE  5054               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 36646   0150C0  22DA               	addwfc	fsr2h,f,c
 36647   0150C2  50DE               	movf	postinc2,w,c
 36648   0150C4  185F               	xorwf	(_nn+1)^(0+1280),w,c
 36649   0150C6  B4D8               	btfsc	status,2,c
 36650   0150C8  D002               	goto	l9965
 36651   0150CA                     u7870:
 36652   0150CA  0E00               	movlw	0
 36653   0150CC  0012               	return	
 36654   0150CE                     l9965:
 36655                           
 36656                           ;../../VLCBlib_PIC/boot.c: 234:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 36657   0150CE  EE20 F003          	lfsr	2,3
 36658   0150D2  5053               	movf	bootProcessMessage@m^(0+1280),w,c
 36659   0150D4  26D9               	addwf	fsr2l,f,c
 36660   0150D6  5054               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 36661   0150D8  22DA               	addwfc	fsr2h,f,c
 36662   0150DA  505E               	movf	_nn^(0+1280),w,c
 36663   0150DC  18DE               	xorwf	postinc2,w,c
 36664   0150DE  A4D8               	btfss	status,2,c
 36665   0150E0  D7F4               	goto	u7870
 36666   0150E2  D00E               	goto	l9983
 36667   0150E4                     l9971:
 36668                           
 36669                           ;../../VLCBlib_PIC/boot.c: 239:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 36670   0150E4  0EFF               	movlw	255
 36671   0150E6  6E0E               	movwf	writeNVM@index^(0+1280),c
 36672   0150E8  0E03               	movlw	3
 36673   0150EA  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 36674   0150EC  0E00               	movlw	0
 36675   0150EE  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 36676   0150F0  0EFF               	movlw	255
 36677   0150F2  6E11               	movwf	writeNVM@value^(0+1280),c
 36678   0150F4  0E00               	movlw	0
 36679   0150F6  ECC3  F0AD         	call	_writeNVM
 36680   0150FA  00FF               	reset		;# 
 36681                           
 36682                           ;../../VLCBlib_PIC/boot.c: 241:             return PROCESSED;
 36683   0150FC  0E01               	movlw	1
 36684   0150FE  0012               	return	
 36685   015100                     l9983:
 36686   015100  EE20 F001          	lfsr	2,1
 36687   015104  5053               	movf	bootProcessMessage@m^(0+1280),w,c
 36688   015106  26D9               	addwf	fsr2l,f,c
 36689   015108  5054               	movf	(bootProcessMessage@m+1)^(0+1280),w,c
 36690   01510A  22DA               	addwfc	fsr2h,f,c
 36691   01510C  50DF               	movf	indf2,w,c
 36692   01510E  6E55               	movwf	??_bootProcessMessage^(0+1280),c
 36693   015110  6A56               	clrf	(??_bootProcessMessage+1)^(0+1280),c
 36694                           
 36695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36696                           ; Switch size 1, requested type "simple"
 36697                           ; Number of cases is 1, Range of values is 0 to 0
 36698                           ; switch strategies available:
 36699                           ; Name         Instructions Cycles
 36700                           ; simple_byte            4     3 (average)
 36701                           ;	Chosen strategy is simple_byte
 36702   015112  5056               	movf	(??_bootProcessMessage+1)^(0+1280),w,c
 36703   015114  0A00               	xorlw	0	; case 0
 36704   015116  A4D8               	btfss	status,2,c
 36705   015118  D7D8               	goto	u7870
 36706                           
 36707                           ; Switch size 1, requested type "simple"
 36708                           ; Number of cases is 1, Range of values is 92 to 92
 36709                           ; switch strategies available:
 36710                           ; Name         Instructions Cycles
 36711                           ; simple_byte            4     3 (average)
 36712                           ;	Chosen strategy is simple_byte
 36713   01511A  5055               	movf	??_bootProcessMessage^(0+1280),w,c
 36714   01511C  0A5C               	xorlw	92	; case 92
 36715   01511E  B4D8               	btfsc	status,2,c
 36716   015120  D7E1               	goto	l9971
 36717   015122  D7D3               	goto	u7870
 36718   015124                     __end_of_bootProcessMessage:
 36719                           	callstack 0
 36720                           
 36721 ;; *************** function _teachProcessMessage *****************
 36722 ;; Defined at:
 36723 ;;		line 221 in file "../../VLCBlib_PIC/event_teach_simple.c"
 36724 ;; Parameters:    Size  Location     Type
 36725 ;;  m               2   82[COMRAM] PTR struct Message
 36726 ;;		 -> poll@m(9), 
 36727 ;; Auto vars:     Size  Location     Type
 36728 ;;		None
 36729 ;; Return value:  Size  Location     Type
 36730 ;;                  1    wreg      enum E23340
 36731 ;; Registers used:
 36732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 36733 ;; Tracked objects:
 36734 ;;		On entry : 0/0
 36735 ;;		On exit  : 0/0
 36736 ;;		Unchanged: 0/0
 36737 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 36738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36740 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36741 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 36742 ;;Total ram usage:        8 bytes
 36743 ;; Hardware stack levels used: 1
 36744 ;; Hardware stack levels required when called: 10
 36745 ;; This function calls:
 36746 ;;		_doEvlrn
 36747 ;;		_doEvuln
 36748 ;;		_doNenrd
 36749 ;;		_doNerd
 36750 ;;		_doNnclr
 36751 ;;		_doNnevn
 36752 ;;		_doReqev
 36753 ;;		_doReval
 36754 ;;		_doRqevn
 36755 ;;		_sendMessage3
 36756 ;;		_sendMessage5
 36757 ;;		_teachCheckLen
 36758 ;; This function is called by:
 36759 ;;		_APP_preProcessMessage
 36760 ;;		_poll
 36761 ;; This function uses a non-reentrant model
 36762 ;;
 36763                           
 36764                           	psect	text48
 36765   010B62                     __ptext48:
 36766                           	callstack 0
 36767   010B62                     _teachProcessMessage:
 36768                           	callstack 115
 36769                           
 36770                           ;../../VLCBlib_PIC/event_teach_simple.c: 222:     switch(m->opc) {
 36771                           
 36772                           ;incstack = 0
 36773   010B62  D2A8               	goto	l10529
 36774   010B64                     l10271:
 36775                           
 36776                           ;../../VLCBlib_PIC/event_teach_simple.c: 225:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 36777   010B64  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 36778   010B68  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 36779   010B6C  0E03               	movlw	3
 36780   010B6E  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 36781   010B70  0E00               	movlw	0
 36782   010B72  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 36783   010B74  ECDD  F0AA         	call	_teachCheckLen	;wreg free
 36784   010B78  06E8               	decf	wreg,f,c
 36785   010B7A  A4D8               	btfss	status,2,c
 36786   010B7C  D002               	goto	l10277
 36787   010B7E                     u8250:
 36788   010B7E  0E01               	movlw	1
 36789   010B80  0012               	return	
 36790   010B82                     l10277:
 36791                           
 36792                           ;../../VLCBlib_PIC/event_teach_simple.c: 226:             if ((m->bytes[0] == nn.bytes.h
      +                          i) && (m->bytes[1] == nn.bytes.lo)) {
 36793   010B82  EE20 F002          	lfsr	2,2
 36794   010B86  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36795   010B88  26D9               	addwf	fsr2l,f,c
 36796   010B8A  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36797   010B8C  22DA               	addwfc	fsr2h,f,c
 36798   010B8E  50DE               	movf	postinc2,w,c
 36799   010B90  185F               	xorwf	(_nn+1)^(0+1280),w,c
 36800   010B92  A4D8               	btfss	status,2,c
 36801   010B94  D00D               	goto	l10283
 36802   010B96  EE20 F003          	lfsr	2,3
 36803   010B9A  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36804   010B9C  26D9               	addwf	fsr2l,f,c
 36805   010B9E  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36806   010BA0  22DA               	addwfc	fsr2h,f,c
 36807   010BA2  505E               	movf	_nn^(0+1280),w,c
 36808   010BA4  18DE               	xorwf	postinc2,w,c
 36809   010BA6  A4D8               	btfss	status,2,c
 36810   010BA8  D003               	goto	l10283
 36811   010BAA                     u8270:
 36812                           
 36813                           ;../../VLCBlib_PIC/event_teach_simple.c: 227:                 mode_flags |= 1;
 36814   010BAA  0105               	movlb	5	; () banked
 36815   010BAC  81A0               	bsf	_mode_flags& (0+255),0,b
 36816                           
 36817                           ;../../VLCBlib_PIC/event_teach_simple.c: 228:             } else {
 36818   010BAE  D7E7               	goto	u8250
 36819   010BB0                     l10283:
 36820                           
 36821                           ;../../VLCBlib_PIC/event_teach_simple.c: 229:                 mode_flags &= ~1;
 36822   010BB0  0105               	movlb	5	; () banked
 36823   010BB2  91A0               	bcf	_mode_flags& (0+255),0,b
 36824   010BB4  D7E4               	goto	u8250
 36825   010BB6                     l10289:
 36826                           
 36827                           ;../../VLCBlib_PIC/event_teach_simple.c: 234:             if (teachCheckLen(m, 4, 0) == 
      +                          PROCESSED) return PROCESSED;
 36828   010BB6  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 36829   010BBA  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 36830   010BBE  0E04               	movlw	4
 36831   010BC0  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 36832   010BC2  0E00               	movlw	0
 36833   010BC4  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 36834   010BC6  ECDD  F0AA         	call	_teachCheckLen	;wreg free
 36835   010BCA  06E8               	decf	wreg,f,c
 36836   010BCC  B4D8               	btfsc	status,2,c
 36837   010BCE  D7D7               	goto	u8250
 36838                           
 36839                           ;../../VLCBlib_PIC/event_teach_simple.c: 235:             if ((m->bytes[0] == nn.bytes.h
      +                          i) && (m->bytes[1] == nn.bytes.lo)) {
 36840   010BD0  EE20 F002          	lfsr	2,2
 36841   010BD4  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36842   010BD6  26D9               	addwf	fsr2l,f,c
 36843   010BD8  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36844   010BDA  22DA               	addwfc	fsr2h,f,c
 36845   010BDC  50DE               	movf	postinc2,w,c
 36846   010BDE  185F               	xorwf	(_nn+1)^(0+1280),w,c
 36847   010BE0  A4D8               	btfss	status,2,c
 36848   010BE2  D01F               	goto	l10317
 36849   010BE4  EE20 F003          	lfsr	2,3
 36850   010BE8  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36851   010BEA  26D9               	addwf	fsr2l,f,c
 36852   010BEC  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36853   010BEE  22DA               	addwfc	fsr2h,f,c
 36854   010BF0  505E               	movf	_nn^(0+1280),w,c
 36855   010BF2  18DE               	xorwf	postinc2,w,c
 36856   010BF4  A4D8               	btfss	status,2,c
 36857   010BF6  D015               	goto	l10317
 36858                           
 36859                           ;../../VLCBlib_PIC/event_teach_simple.c: 236:                 if (m->bytes[2] == MODE_LE
      +                          ARN_ON) {
 36860   010BF8  EE20 F004          	lfsr	2,4
 36861   010BFC  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36862   010BFE  26D9               	addwf	fsr2l,f,c
 36863   010C00  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36864   010C02  22DA               	addwfc	fsr2h,f,c
 36865   010C04  0E08               	movlw	8
 36866   010C06  18DE               	xorwf	postinc2,w,c
 36867   010C08  B4D8               	btfsc	status,2,c
 36868   010C0A  D7CF               	goto	u8270
 36869   010C0C  EE20 F004          	lfsr	2,4
 36870   010C10  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36871   010C12  26D9               	addwf	fsr2l,f,c
 36872   010C14  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36873   010C16  22DA               	addwfc	fsr2h,f,c
 36874   010C18  0E09               	movlw	9
 36875   010C1A  18DE               	xorwf	postinc2,w,c
 36876   010C1C  B4D8               	btfsc	status,2,c
 36877   010C1E  D7C8               	goto	l10283
 36878   010C20  D002               	goto	l10319
 36879   010C22                     l10317:
 36880                           
 36881                           ;../../VLCBlib_PIC/event_teach_simple.c: 247:                 mode_flags &= ~1;
 36882   010C22  0105               	movlb	5	; () banked
 36883   010C24  91A0               	bcf	_mode_flags& (0+255),0,b
 36884   010C26                     l10319:
 36885                           
 36886                           ;../../VLCBlib_PIC/event_teach_simple.c: 249:             return NOT_PROCESSED;
 36887   010C26  0E00               	movlw	0
 36888   010C28  0012               	return	
 36889   010C2A                     l10323:
 36890                           
 36891                           ;../../VLCBlib_PIC/event_teach_simple.c: 253:             if (teachCheckLen(m, 7, 1) == 
      +                          PROCESSED) {
 36892   010C2A  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 36893   010C2E  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 36894   010C32  0E07               	movlw	7
 36895   010C34  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 36896   010C36  0E01               	movlw	1
 36897   010C38  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 36898   010C3A  ECDD  F0AA         	call	_teachCheckLen	;wreg free
 36899   010C3E  06E8               	decf	wreg,f,c
 36900   010C40  A4D8               	btfss	status,2,c
 36901   010C42  D00A               	goto	l1227
 36902                           
 36903                           ;../../VLCBlib_PIC/event_teach_simple.c: 254:                 sendMessage3(OPC_CMDERR, n
      +                          n.bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 36904   010C44  C55F  F525         	movff	_nn+1,sendMessage3@data1
 36905   010C48  C55E  F526         	movff	_nn,sendMessage3@data2
 36906   010C4C  0E01               	movlw	1
 36907   010C4E  6E27               	movwf	sendMessage3@data3^(0+1280),c
 36908   010C50  0E6F               	movlw	111
 36909   010C52  EC8E  F0B1         	call	_sendMessage3
 36910   010C56  D793               	goto	u8250
 36911   010C58                     l1227:
 36912                           
 36913                           ;../../VLCBlib_PIC/event_teach_simple.c: 258:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 36914   010C58  0105               	movlb	5	; () banked
 36915   010C5A  A1A0               	btfss	_mode_flags& (0+255),0,b
 36916   010C5C  D790               	goto	u8250
 36917                           
 36918                           ; BSR set to: 5
 36919                           ;../../VLCBlib_PIC/event_teach_simple.c: 260:             doEvlrn((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[
      +                          5]);
 36920   010C5E  EE20 F003          	lfsr	2,3
 36921   010C62  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36922   010C64  26D9               	addwf	fsr2l,f,c
 36923   010C66  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36924   010C68  22DA               	addwfc	fsr2h,f,c
 36925   010C6A  50DF               	movf	indf2,w,c
 36926   010C6C  6E55               	movwf	??_teachProcessMessage^(0+1280),c
 36927   010C6E  EE20 F002          	lfsr	2,2
 36928   010C72  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36929   010C74  26D9               	addwf	fsr2l,f,c
 36930   010C76  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36931   010C78  22DA               	addwfc	fsr2h,f,c
 36932   010C7A  50DF               	movf	indf2,w,c
 36933   010C7C  6E56               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 36934   010C7E  5055               	movf	??_teachProcessMessage^(0+1280),w,c
 36935   010C80  6E4D               	movwf	doEvlrn@nodeNumber^(0+1280),c
 36936   010C82  C556  F54E         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 36937   010C86  EE20 F005          	lfsr	2,5
 36938   010C8A  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36939   010C8C  26D9               	addwf	fsr2l,f,c
 36940   010C8E  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36941   010C90  22DA               	addwfc	fsr2h,f,c
 36942   010C92  50DF               	movf	indf2,w,c
 36943   010C94  6E58               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 36944   010C96  EE20 F004          	lfsr	2,4
 36945   010C9A  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36946   010C9C  26D9               	addwf	fsr2l,f,c
 36947   010C9E  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36948   010CA0  22DA               	addwfc	fsr2h,f,c
 36949   010CA2  50DF               	movf	indf2,w,c
 36950   010CA4  6E59               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 36951   010CA6  5058               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 36952   010CA8  6E4F               	movwf	doEvlrn@eventNumber^(0+1280),c
 36953   010CAA  C559  F550         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 36954   010CAE  EE20 F006          	lfsr	2,6
 36955   010CB2  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36956   010CB4  26D9               	addwf	fsr2l,f,c
 36957   010CB6  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36958   010CB8  22DA               	addwfc	fsr2h,f,c
 36959   010CBA  50DF               	movf	indf2,w,c
 36960   010CBC  6E51               	movwf	doEvlrn@evNum^(0+1280),c
 36961   010CBE  EE20 F007          	lfsr	2,7
 36962   010CC2  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36963   010CC4  26D9               	addwf	fsr2l,f,c
 36964   010CC6  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36965   010CC8  22DA               	addwfc	fsr2h,f,c
 36966   010CCA  50DF               	movf	indf2,w,c
 36967   010CCC  6E52               	movwf	doEvlrn@evVal^(0+1280),c
 36968   010CCE  EC79  F0A1         	call	_doEvlrn	;wreg free
 36969   010CD2  D755               	goto	u8250
 36970   010CD4                     l10341:
 36971                           
 36972                           ;../../VLCBlib_PIC/event_teach_simple.c: 263:             if (teachCheckLen(m, 5, 1) == 
      +                          PROCESSED) return PROCESSED;
 36973   010CD4  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 36974   010CD8  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 36975   010CDC  0E05               	movlw	5
 36976   010CDE  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 36977   010CE0  0E01               	movlw	1
 36978   010CE2  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 36979   010CE4  ECDD  F0AA         	call	_teachCheckLen	;wreg free
 36980   010CE8  06E8               	decf	wreg,f,c
 36981   010CEA  B4D8               	btfsc	status,2,c
 36982   010CEC  D748               	goto	u8250
 36983                           
 36984                           ;../../VLCBlib_PIC/event_teach_simple.c: 264:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 36985   010CEE  0105               	movlb	5	; () banked
 36986   010CF0  A1A0               	btfss	_mode_flags& (0+255),0,b
 36987   010CF2  D745               	goto	u8250
 36988                           
 36989                           ; BSR set to: 5
 36990                           ;../../VLCBlib_PIC/event_teach_simple.c: 266:             doEvuln((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 36991   010CF4  EE20 F003          	lfsr	2,3
 36992   010CF8  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 36993   010CFA  26D9               	addwf	fsr2l,f,c
 36994   010CFC  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 36995   010CFE  22DA               	addwfc	fsr2h,f,c
 36996   010D00  50DF               	movf	indf2,w,c
 36997   010D02  6E55               	movwf	??_teachProcessMessage^(0+1280),c
 36998   010D04  EE20 F002          	lfsr	2,2
 36999   010D08  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37000   010D0A  26D9               	addwf	fsr2l,f,c
 37001   010D0C  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37002   010D0E  22DA               	addwfc	fsr2h,f,c
 37003   010D10  50DF               	movf	indf2,w,c
 37004   010D12  6E56               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 37005   010D14  5055               	movf	??_teachProcessMessage^(0+1280),w,c
 37006   010D16  6E33               	movwf	doEvuln@nodeNumber^(0+1280),c
 37007   010D18  C556  F534         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 37008   010D1C  EE20 F005          	lfsr	2,5
 37009   010D20  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37010   010D22  26D9               	addwf	fsr2l,f,c
 37011   010D24  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37012   010D26  22DA               	addwfc	fsr2h,f,c
 37013   010D28  50DF               	movf	indf2,w,c
 37014   010D2A  6E58               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 37015   010D2C  EE20 F004          	lfsr	2,4
 37016   010D30  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37017   010D32  26D9               	addwf	fsr2l,f,c
 37018   010D34  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37019   010D36  22DA               	addwfc	fsr2h,f,c
 37020   010D38  50DF               	movf	indf2,w,c
 37021   010D3A  6E59               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 37022   010D3C  5058               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 37023   010D3E  6E35               	movwf	doEvuln@eventNumber^(0+1280),c
 37024   010D40  C559  F536         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 37025   010D44  ECE7  F0A7         	call	_doEvuln	;wreg free
 37026   010D48  D71A               	goto	u8250
 37027   010D4A                     l10357:
 37028                           
 37029                           ;../../VLCBlib_PIC/event_teach_simple.c: 269:             if (teachCheckLen(m, 6, 1) == 
      +                          PROCESSED) return PROCESSED;
 37030   010D4A  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 37031   010D4E  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 37032   010D52  0E06               	movlw	6
 37033   010D54  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 37034   010D56  0E01               	movlw	1
 37035   010D58  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 37036   010D5A  ECDD  F0AA         	call	_teachCheckLen	;wreg free
 37037   010D5E  06E8               	decf	wreg,f,c
 37038   010D60  B4D8               	btfsc	status,2,c
 37039   010D62  D70D               	goto	u8250
 37040                           
 37041                           ;../../VLCBlib_PIC/event_teach_simple.c: 270:             if (! (mode_flags & 1)) return
      +                           PROCESSED;
 37042   010D64  0105               	movlb	5	; () banked
 37043   010D66  A1A0               	btfss	_mode_flags& (0+255),0,b
 37044   010D68  D70A               	goto	u8250
 37045                           
 37046                           ; BSR set to: 5
 37047                           ;../../VLCBlib_PIC/event_teach_simple.c: 272:             doReqev((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 37048   010D6A  EE20 F003          	lfsr	2,3
 37049   010D6E  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37050   010D70  26D9               	addwf	fsr2l,f,c
 37051   010D72  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37052   010D74  22DA               	addwfc	fsr2h,f,c
 37053   010D76  50DF               	movf	indf2,w,c
 37054   010D78  6E55               	movwf	??_teachProcessMessage^(0+1280),c
 37055   010D7A  EE20 F002          	lfsr	2,2
 37056   010D7E  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37057   010D80  26D9               	addwf	fsr2l,f,c
 37058   010D82  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37059   010D84  22DA               	addwfc	fsr2h,f,c
 37060   010D86  50DF               	movf	indf2,w,c
 37061   010D88  6E56               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 37062   010D8A  5055               	movf	??_teachProcessMessage^(0+1280),w,c
 37063   010D8C  6E2C               	movwf	doReqev@nodeNumber^(0+1280),c
 37064   010D8E  C556  F52D         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 37065   010D92  EE20 F005          	lfsr	2,5
 37066   010D96  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37067   010D98  26D9               	addwf	fsr2l,f,c
 37068   010D9A  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37069   010D9C  22DA               	addwfc	fsr2h,f,c
 37070   010D9E  50DF               	movf	indf2,w,c
 37071   010DA0  6E58               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 37072   010DA2  EE20 F004          	lfsr	2,4
 37073   010DA6  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37074   010DA8  26D9               	addwf	fsr2l,f,c
 37075   010DAA  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37076   010DAC  22DA               	addwfc	fsr2h,f,c
 37077   010DAE  50DF               	movf	indf2,w,c
 37078   010DB0  6E59               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 37079   010DB2  5058               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 37080   010DB4  6E2E               	movwf	doReqev@eventNumber^(0+1280),c
 37081   010DB6  C559  F52F         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 37082   010DBA  EE20 F006          	lfsr	2,6
 37083   010DBE  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37084   010DC0  26D9               	addwf	fsr2l,f,c
 37085   010DC2  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37086   010DC4  22DA               	addwfc	fsr2h,f,c
 37087   010DC6  50DF               	movf	indf2,w,c
 37088   010DC8  6E30               	movwf	doReqev@evNum^(0+1280),c
 37089   010DCA  EC71  F09A         	call	_doReqev	;wreg free
 37090   010DCE  D6D7               	goto	u8250
 37091   010DD0                     l10373:
 37092                           
 37093                           ;../../VLCBlib_PIC/event_teach_simple.c: 276:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 37094   010DD0  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 37095   010DD4  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 37096   010DD8  0E03               	movlw	3
 37097   010DDA  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 37098   010DDC  0E00               	movlw	0
 37099   010DDE  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 37100   010DE0  ECDD  F0AA         	call	_teachCheckLen	;wreg free
 37101   010DE4  06E8               	decf	wreg,f,c
 37102   010DE6  B4D8               	btfsc	status,2,c
 37103   010DE8  D6CA               	goto	u8250
 37104                           
 37105                           ;../../VLCBlib_PIC/event_teach_simple.c: 277:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 37106   010DEA  EE20 F002          	lfsr	2,2
 37107   010DEE  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37108   010DF0  26D9               	addwf	fsr2l,f,c
 37109   010DF2  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37110   010DF4  22DA               	addwfc	fsr2h,f,c
 37111   010DF6  50DE               	movf	postinc2,w,c
 37112   010DF8  185F               	xorwf	(_nn+1)^(0+1280),w,c
 37113   010DFA  A4D8               	btfss	status,2,c
 37114   010DFC  D6C0               	goto	u8250
 37115   010DFE  EE20 F003          	lfsr	2,3
 37116   010E02  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37117   010E04  26D9               	addwf	fsr2l,f,c
 37118   010E06  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37119   010E08  22DA               	addwfc	fsr2h,f,c
 37120   010E0A  505E               	movf	_nn^(0+1280),w,c
 37121   010E0C  18DE               	xorwf	postinc2,w,c
 37122   010E0E  A4D8               	btfss	status,2,c
 37123   010E10  D6B6               	goto	u8250
 37124   010E12  D6CE               	goto	l10283
 37125   010E14                     l10393:
 37126                           
 37127                           ;../../VLCBlib_PIC/event_teach_simple.c: 282:             if (teachCheckLen(m, 3, 1) == 
      +                          PROCESSED) return PROCESSED;
 37128   010E14  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 37129   010E18  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 37130   010E1C  0E03               	movlw	3
 37131   010E1E  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 37132   010E20  0E01               	movlw	1
 37133   010E22  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 37134   010E24  ECDD  F0AA         	call	_teachCheckLen	;wreg free
 37135   010E28  06E8               	decf	wreg,f,c
 37136   010E2A  B4D8               	btfsc	status,2,c
 37137   010E2C  D6A8               	goto	u8250
 37138                           
 37139                           ;../../VLCBlib_PIC/event_teach_simple.c: 283:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 37140   010E2E  EE20 F002          	lfsr	2,2
 37141   010E32  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37142   010E34  26D9               	addwf	fsr2l,f,c
 37143   010E36  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37144   010E38  22DA               	addwfc	fsr2h,f,c
 37145   010E3A  50DE               	movf	postinc2,w,c
 37146   010E3C  185F               	xorwf	(_nn+1)^(0+1280),w,c
 37147   010E3E  A4D8               	btfss	status,2,c
 37148   010E40  D69E               	goto	u8250
 37149   010E42  EE20 F003          	lfsr	2,3
 37150   010E46  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37151   010E48  26D9               	addwf	fsr2l,f,c
 37152   010E4A  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37153   010E4C  22DA               	addwfc	fsr2h,f,c
 37154   010E4E  505E               	movf	_nn^(0+1280),w,c
 37155   010E50  18DE               	xorwf	postinc2,w,c
 37156   010E52  A4D8               	btfss	status,2,c
 37157   010E54  D694               	goto	u8250
 37158                           
 37159                           ;../../VLCBlib_PIC/event_teach_simple.c: 285:             if (! (mode_flags & 1)) {
 37160   010E56  0105               	movlb	5	; () banked
 37161   010E58  B1A0               	btfsc	_mode_flags& (0+255),0,b
 37162   010E5A  D017               	goto	l10413
 37163                           
 37164                           ; BSR set to: 5
 37165                           ;../../VLCBlib_PIC/event_teach_simple.c: 286:                 sendMessage3(OPC_CMDERR, n
      +                          n.bytes.hi, nn.bytes.lo, CMDERR_NOT_LRN);
 37166   010E5C  C55F  F525         	movff	_nn+1,sendMessage3@data1
 37167   010E60  C55E  F526         	movff	_nn,sendMessage3@data2
 37168   010E64  0E02               	movlw	2
 37169   010E66  6E27               	movwf	sendMessage3@data3^(0+1280),c
 37170   010E68  0E6F               	movlw	111
 37171   010E6A  EC8E  F0B1         	call	_sendMessage3
 37172                           
 37173                           ;../../VLCBlib_PIC/event_teach_simple.c: 288:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 37174   010E6E  C55F  F525         	movff	_nn+1,sendMessage5@data1
 37175   010E72  C55E  F526         	movff	_nn,sendMessage5@data2
 37176   010E76  0E55               	movlw	85
 37177   010E78  6E27               	movwf	sendMessage5@data3^(0+1280),c
 37178   010E7A  0E04               	movlw	4
 37179   010E7C  6E28               	movwf	sendMessage5@data4^(0+1280),c
 37180   010E7E  0E02               	movlw	2
 37181   010E80  6E29               	movwf	sendMessage5@data5^(0+1280),c
 37182   010E82  0EAF               	movlw	175
 37183   010E84  ECCD  F0B1         	call	_sendMessage5
 37184   010E88  D67A               	goto	u8250
 37185   010E8A                     l10413:
 37186                           
 37187                           ; BSR set to: 5
 37188                           ;../../VLCBlib_PIC/event_teach_simple.c: 293:             doNnclr();
 37189   010E8A  EC20  F0B1         	call	_doNnclr	;wreg free
 37190                           
 37191                           ;../../VLCBlib_PIC/event_teach_simple.c: 294:             break;
 37192   010E8E  D6CB               	goto	l10319
 37193   010E90                     l10415:
 37194                           
 37195                           ;../../VLCBlib_PIC/event_teach_simple.c: 296:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 37196   010E90  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 37197   010E94  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 37198   010E98  0E03               	movlw	3
 37199   010E9A  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 37200   010E9C  0E00               	movlw	0
 37201   010E9E  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 37202   010EA0  ECDD  F0AA         	call	_teachCheckLen	;wreg free
 37203   010EA4  06E8               	decf	wreg,f,c
 37204   010EA6  B4D8               	btfsc	status,2,c
 37205   010EA8  D66A               	goto	u8250
 37206                           
 37207                           ;../../VLCBlib_PIC/event_teach_simple.c: 297:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 37208   010EAA  EE20 F002          	lfsr	2,2
 37209   010EAE  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37210   010EB0  26D9               	addwf	fsr2l,f,c
 37211   010EB2  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37212   010EB4  22DA               	addwfc	fsr2h,f,c
 37213   010EB6  50DE               	movf	postinc2,w,c
 37214   010EB8  185F               	xorwf	(_nn+1)^(0+1280),w,c
 37215   010EBA  A4D8               	btfss	status,2,c
 37216   010EBC  D660               	goto	u8250
 37217   010EBE  EE20 F003          	lfsr	2,3
 37218   010EC2  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37219   010EC4  26D9               	addwf	fsr2l,f,c
 37220   010EC6  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37221   010EC8  22DA               	addwfc	fsr2h,f,c
 37222   010ECA  505E               	movf	_nn^(0+1280),w,c
 37223   010ECC  18DE               	xorwf	postinc2,w,c
 37224   010ECE  A4D8               	btfss	status,2,c
 37225   010ED0  D656               	goto	u8250
 37226                           
 37227                           ;../../VLCBlib_PIC/event_teach_simple.c: 299:             doNerd();
 37228   010ED2  EC01  F0B3         	call	_doNerd	;wreg free
 37229   010ED6  D653               	goto	u8250
 37230   010ED8                     l10435:
 37231                           
 37232                           ;../../VLCBlib_PIC/event_teach_simple.c: 302:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 37233   010ED8  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 37234   010EDC  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 37235   010EE0  0E03               	movlw	3
 37236   010EE2  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 37237   010EE4  0E00               	movlw	0
 37238   010EE6  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 37239   010EE8  ECDD  F0AA         	call	_teachCheckLen	;wreg free
 37240   010EEC  06E8               	decf	wreg,f,c
 37241   010EEE  B4D8               	btfsc	status,2,c
 37242   010EF0  D646               	goto	u8250
 37243                           
 37244                           ;../../VLCBlib_PIC/event_teach_simple.c: 303:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 37245   010EF2  EE20 F002          	lfsr	2,2
 37246   010EF6  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37247   010EF8  26D9               	addwf	fsr2l,f,c
 37248   010EFA  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37249   010EFC  22DA               	addwfc	fsr2h,f,c
 37250   010EFE  50DE               	movf	postinc2,w,c
 37251   010F00  185F               	xorwf	(_nn+1)^(0+1280),w,c
 37252   010F02  A4D8               	btfss	status,2,c
 37253   010F04  D63C               	goto	u8250
 37254   010F06  EE20 F003          	lfsr	2,3
 37255   010F0A  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37256   010F0C  26D9               	addwf	fsr2l,f,c
 37257   010F0E  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37258   010F10  22DA               	addwfc	fsr2h,f,c
 37259   010F12  505E               	movf	_nn^(0+1280),w,c
 37260   010F14  18DE               	xorwf	postinc2,w,c
 37261   010F16  A4D8               	btfss	status,2,c
 37262   010F18  D632               	goto	u8250
 37263                           
 37264                           ;../../VLCBlib_PIC/event_teach_simple.c: 305:             doNnevn();
 37265   010F1A  EC6D  F0B0         	call	_doNnevn	;wreg free
 37266   010F1E  D62F               	goto	u8250
 37267   010F20                     l10455:
 37268                           
 37269                           ;../../VLCBlib_PIC/event_teach_simple.c: 308:             if (teachCheckLen(m, 3, 0) == 
      +                          PROCESSED) return PROCESSED;
 37270   010F20  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 37271   010F24  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 37272   010F28  0E03               	movlw	3
 37273   010F2A  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 37274   010F2C  0E00               	movlw	0
 37275   010F2E  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 37276   010F30  ECDD  F0AA         	call	_teachCheckLen	;wreg free
 37277   010F34  06E8               	decf	wreg,f,c
 37278   010F36  B4D8               	btfsc	status,2,c
 37279   010F38  D622               	goto	u8250
 37280                           
 37281                           ;../../VLCBlib_PIC/event_teach_simple.c: 309:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 37282   010F3A  EE20 F002          	lfsr	2,2
 37283   010F3E  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37284   010F40  26D9               	addwf	fsr2l,f,c
 37285   010F42  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37286   010F44  22DA               	addwfc	fsr2h,f,c
 37287   010F46  50DE               	movf	postinc2,w,c
 37288   010F48  185F               	xorwf	(_nn+1)^(0+1280),w,c
 37289   010F4A  A4D8               	btfss	status,2,c
 37290   010F4C  D618               	goto	u8250
 37291   010F4E  EE20 F003          	lfsr	2,3
 37292   010F52  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37293   010F54  26D9               	addwf	fsr2l,f,c
 37294   010F56  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37295   010F58  22DA               	addwfc	fsr2h,f,c
 37296   010F5A  505E               	movf	_nn^(0+1280),w,c
 37297   010F5C  18DE               	xorwf	postinc2,w,c
 37298   010F5E  A4D8               	btfss	status,2,c
 37299   010F60  D60E               	goto	u8250
 37300                           
 37301                           ;../../VLCBlib_PIC/event_teach_simple.c: 311:             doRqevn();
 37302   010F62  EC52  F0B0         	call	_doRqevn	;wreg free
 37303   010F66  D60B               	goto	u8250
 37304   010F68                     l10475:
 37305                           
 37306                           ;../../VLCBlib_PIC/event_teach_simple.c: 314:             if (teachCheckLen(m, 4, 0) == 
      +                          PROCESSED) return PROCESSED;
 37307   010F68  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 37308   010F6C  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 37309   010F70  0E04               	movlw	4
 37310   010F72  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 37311   010F74  0E00               	movlw	0
 37312   010F76  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 37313   010F78  ECDD  F0AA         	call	_teachCheckLen	;wreg free
 37314   010F7C  06E8               	decf	wreg,f,c
 37315   010F7E  B4D8               	btfsc	status,2,c
 37316   010F80  D5FE               	goto	u8250
 37317                           
 37318                           ;../../VLCBlib_PIC/event_teach_simple.c: 315:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 37319   010F82  EE20 F002          	lfsr	2,2
 37320   010F86  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37321   010F88  26D9               	addwf	fsr2l,f,c
 37322   010F8A  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37323   010F8C  22DA               	addwfc	fsr2h,f,c
 37324   010F8E  50DE               	movf	postinc2,w,c
 37325   010F90  185F               	xorwf	(_nn+1)^(0+1280),w,c
 37326   010F92  A4D8               	btfss	status,2,c
 37327   010F94  D5F4               	goto	u8250
 37328   010F96  EE20 F003          	lfsr	2,3
 37329   010F9A  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37330   010F9C  26D9               	addwf	fsr2l,f,c
 37331   010F9E  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37332   010FA0  22DA               	addwfc	fsr2h,f,c
 37333   010FA2  505E               	movf	_nn^(0+1280),w,c
 37334   010FA4  18DE               	xorwf	postinc2,w,c
 37335   010FA6  A4D8               	btfss	status,2,c
 37336   010FA8  D5EA               	goto	u8250
 37337                           
 37338                           ;../../VLCBlib_PIC/event_teach_simple.c: 317:             doNenrd(m->bytes[2]);
 37339   010FAA  EE20 F004          	lfsr	2,4
 37340   010FAE  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37341   010FB0  26D9               	addwf	fsr2l,f,c
 37342   010FB2  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37343   010FB4  22DA               	addwfc	fsr2h,f,c
 37344   010FB6  50DF               	movf	indf2,w,c
 37345   010FB8  EC37  F0A7         	call	_doNenrd
 37346   010FBC  D5E0               	goto	u8250
 37347   010FBE                     l10495:
 37348                           
 37349                           ;../../VLCBlib_PIC/event_teach_simple.c: 320:             if (teachCheckLen(m, 5, 0) == 
      +                          PROCESSED) return PROCESSED;
 37350   010FBE  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 37351   010FC2  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 37352   010FC6  0E05               	movlw	5
 37353   010FC8  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 37354   010FCA  0E00               	movlw	0
 37355   010FCC  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 37356   010FCE  ECDD  F0AA         	call	_teachCheckLen	;wreg free
 37357   010FD2  06E8               	decf	wreg,f,c
 37358   010FD4  B4D8               	btfsc	status,2,c
 37359   010FD6  D5D3               	goto	u8250
 37360                           
 37361                           ;../../VLCBlib_PIC/event_teach_simple.c: 321:             if ((m->bytes[0] != nn.bytes.h
      +                          i) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 37362   010FD8  EE20 F002          	lfsr	2,2
 37363   010FDC  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37364   010FDE  26D9               	addwf	fsr2l,f,c
 37365   010FE0  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37366   010FE2  22DA               	addwfc	fsr2h,f,c
 37367   010FE4  50DE               	movf	postinc2,w,c
 37368   010FE6  185F               	xorwf	(_nn+1)^(0+1280),w,c
 37369   010FE8  A4D8               	btfss	status,2,c
 37370   010FEA  D5C9               	goto	u8250
 37371   010FEC  EE20 F003          	lfsr	2,3
 37372   010FF0  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37373   010FF2  26D9               	addwf	fsr2l,f,c
 37374   010FF4  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37375   010FF6  22DA               	addwfc	fsr2h,f,c
 37376   010FF8  505E               	movf	_nn^(0+1280),w,c
 37377   010FFA  18DE               	xorwf	postinc2,w,c
 37378   010FFC  A4D8               	btfss	status,2,c
 37379   010FFE  D5BF               	goto	u8250
 37380                           
 37381                           ;../../VLCBlib_PIC/event_teach_simple.c: 323:             doReval(m->bytes[2], m->bytes[
      +                          3]);
 37382   011000  EE20 F005          	lfsr	2,5
 37383   011004  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37384   011006  26D9               	addwf	fsr2l,f,c
 37385   011008  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37386   01100A  22DA               	addwfc	fsr2h,f,c
 37387   01100C  50DF               	movf	indf2,w,c
 37388   01100E  6E2B               	movwf	doReval@evNum^(0+1280),c
 37389   011010  EE20 F004          	lfsr	2,4
 37390   011014  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37391   011016  26D9               	addwf	fsr2l,f,c
 37392   011018  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37393   01101A  22DA               	addwfc	fsr2h,f,c
 37394   01101C  50DF               	movf	indf2,w,c
 37395   01101E  EC5B  F0A0         	call	_doReval
 37396   011022  D5AD               	goto	u8250
 37397   011024                     l10515:
 37398                           
 37399                           ;../../VLCBlib_PIC/event_teach_simple.c: 326:             if (teachCheckLen(m, 8, 1) == 
      +                          PROCESSED) return PROCESSED;
 37400   011024  C553  F530         	movff	teachProcessMessage@m,teachCheckLen@m
 37401   011028  C554  F531         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 37402   01102C  0E08               	movlw	8
 37403   01102E  6E32               	movwf	teachCheckLen@needed^(0+1280),c
 37404   011030  0E01               	movlw	1
 37405   011032  6E33               	movwf	teachCheckLen@learn^(0+1280),c
 37406   011034  ECDD  F0AA         	call	_teachCheckLen	;wreg free
 37407   011038  06E8               	decf	wreg,f,c
 37408   01103A  B4D8               	btfsc	status,2,c
 37409   01103C  D5A0               	goto	u8250
 37410                           
 37411                           ;../../VLCBlib_PIC/event_teach_simple.c: 328:             doEvlrn((uint16_t)(m->bytes[0]
      +                          <<8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[
      +                          6]);
 37412   01103E  EE20 F003          	lfsr	2,3
 37413   011042  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37414   011044  26D9               	addwf	fsr2l,f,c
 37415   011046  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37416   011048  22DA               	addwfc	fsr2h,f,c
 37417   01104A  50DF               	movf	indf2,w,c
 37418   01104C  6E55               	movwf	??_teachProcessMessage^(0+1280),c
 37419   01104E  EE20 F002          	lfsr	2,2
 37420   011052  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37421   011054  26D9               	addwf	fsr2l,f,c
 37422   011056  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37423   011058  22DA               	addwfc	fsr2h,f,c
 37424   01105A  50DF               	movf	indf2,w,c
 37425   01105C  6E56               	movwf	(??_teachProcessMessage+1)^(0+1280),c
 37426   01105E  5055               	movf	??_teachProcessMessage^(0+1280),w,c
 37427   011060  6E4D               	movwf	doEvlrn@nodeNumber^(0+1280),c
 37428   011062  C556  F54E         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 37429   011066  EE20 F005          	lfsr	2,5
 37430   01106A  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37431   01106C  26D9               	addwf	fsr2l,f,c
 37432   01106E  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37433   011070  22DA               	addwfc	fsr2h,f,c
 37434   011072  50DF               	movf	indf2,w,c
 37435   011074  6E58               	movwf	(??_teachProcessMessage+3)^(0+1280),c
 37436   011076  EE20 F004          	lfsr	2,4
 37437   01107A  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37438   01107C  26D9               	addwf	fsr2l,f,c
 37439   01107E  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37440   011080  22DA               	addwfc	fsr2h,f,c
 37441   011082  50DF               	movf	indf2,w,c
 37442   011084  6E59               	movwf	(??_teachProcessMessage+4)^(0+1280),c
 37443   011086  5058               	movf	(??_teachProcessMessage+3)^(0+1280),w,c
 37444   011088  6E4F               	movwf	doEvlrn@eventNumber^(0+1280),c
 37445   01108A  C559  F550         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 37446   01108E  EE20 F007          	lfsr	2,7
 37447   011092  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37448   011094  26D9               	addwf	fsr2l,f,c
 37449   011096  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37450   011098  22DA               	addwfc	fsr2h,f,c
 37451   01109A  50DF               	movf	indf2,w,c
 37452   01109C  6E51               	movwf	doEvlrn@evNum^(0+1280),c
 37453   01109E  EE20 F008          	lfsr	2,8
 37454   0110A2  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37455   0110A4  26D9               	addwf	fsr2l,f,c
 37456   0110A6  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37457   0110A8  22DA               	addwfc	fsr2h,f,c
 37458   0110AA  50DF               	movf	indf2,w,c
 37459   0110AC  6E52               	movwf	doEvlrn@evVal^(0+1280),c
 37460   0110AE  EC79  F0A1         	call	_doEvlrn	;wreg free
 37461   0110B2  D565               	goto	u8250
 37462   0110B4                     l10529:
 37463   0110B4  EE20 F001          	lfsr	2,1
 37464   0110B8  5053               	movf	teachProcessMessage@m^(0+1280),w,c
 37465   0110BA  26D9               	addwf	fsr2l,f,c
 37466   0110BC  5054               	movf	(teachProcessMessage@m+1)^(0+1280),w,c
 37467   0110BE  22DA               	addwfc	fsr2h,f,c
 37468   0110C0  50DF               	movf	indf2,w,c
 37469   0110C2  6E55               	movwf	??_teachProcessMessage^(0+1280),c
 37470   0110C4  6A56               	clrf	(??_teachProcessMessage+1)^(0+1280),c
 37471                           
 37472                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37473                           ; Switch size 1, requested type "simple"
 37474                           ; Number of cases is 1, Range of values is 0 to 0
 37475                           ; switch strategies available:
 37476                           ; Name         Instructions Cycles
 37477                           ; simple_byte            4     3 (average)
 37478                           ;	Chosen strategy is simple_byte
 37479   0110C6  5056               	movf	(??_teachProcessMessage+1)^(0+1280),w,c
 37480   0110C8  0A00               	xorlw	0	; case 0
 37481   0110CA  A4D8               	btfss	status,2,c
 37482   0110CC  D5AC               	goto	l10319
 37483                           
 37484                           ; Switch size 1, requested type "simple"
 37485                           ; Number of cases is 13, Range of values is 83 to 245
 37486                           ; switch strategies available:
 37487                           ; Name         Instructions Cycles
 37488                           ; simple_byte           40    21 (average)
 37489                           ;	Chosen strategy is simple_byte
 37490   0110CE  5055               	movf	??_teachProcessMessage^(0+1280),w,c
 37491   0110D0  0A53               	xorlw	83	; case 83
 37492   0110D2  B4D8               	btfsc	status,2,c
 37493   0110D4  D547               	goto	l10271
 37494   0110D6  0A07               	xorlw	7	; case 84
 37495   0110D8  B4D8               	btfsc	status,2,c
 37496   0110DA  D67A               	goto	l10373
 37497   0110DC  0A01               	xorlw	1	; case 85
 37498   0110DE  B4D8               	btfsc	status,2,c
 37499   0110E0  D699               	goto	l10393
 37500   0110E2  0A03               	xorlw	3	; case 86
 37501   0110E4  B4D8               	btfsc	status,2,c
 37502   0110E6  D6F8               	goto	l10435
 37503   0110E8  0A01               	xorlw	1	; case 87
 37504   0110EA  B4D8               	btfsc	status,2,c
 37505   0110EC  D6D1               	goto	l10415
 37506   0110EE  0A0F               	xorlw	15	; case 88
 37507   0110F0  B4D8               	btfsc	status,2,c
 37508   0110F2  D716               	goto	l10455
 37509   0110F4  0A2A               	xorlw	42	; case 114
 37510   0110F6  B4D8               	btfsc	status,2,c
 37511   0110F8  D737               	goto	l10475
 37512   0110FA  0A04               	xorlw	4	; case 118
 37513   0110FC  B4D8               	btfsc	status,2,c
 37514   0110FE  D55B               	goto	l10289
 37515   011100  0AE3               	xorlw	227	; case 149
 37516   011102  B4D8               	btfsc	status,2,c
 37517   011104  D5E7               	goto	l10341
 37518   011106  0A09               	xorlw	9	; case 156
 37519   011108  B4D8               	btfsc	status,2,c
 37520   01110A  D759               	goto	l10495
 37521   01110C  0A2E               	xorlw	46	; case 178
 37522   01110E  B4D8               	btfsc	status,2,c
 37523   011110  D61C               	goto	l10357
 37524   011112  0A60               	xorlw	96	; case 210
 37525   011114  B4D8               	btfsc	status,2,c
 37526   011116  D589               	goto	l10323
 37527   011118  0A27               	xorlw	39	; case 245
 37528   01111A  B4D8               	btfsc	status,2,c
 37529   01111C  D783               	goto	l10515
 37530   01111E  D583               	goto	l10319
 37531   011120                     __end_of_teachProcessMessage:
 37532                           	callstack 0
 37533                           
 37534 ;; *************** function _teachCheckLen *****************
 37535 ;; Defined at:
 37536 ;;		line 343 in file "../../VLCBlib_PIC/event_teach_simple.c"
 37537 ;; Parameters:    Size  Location     Type
 37538 ;;  m               2   47[COMRAM] PTR struct Message
 37539 ;;		 -> poll@m(9), 
 37540 ;;  needed          1   49[COMRAM] unsigned char 
 37541 ;;  learn           1   50[COMRAM] unsigned char 
 37542 ;; Auto vars:     Size  Location     Type
 37543 ;;		None
 37544 ;; Return value:  Size  Location     Type
 37545 ;;                  1    wreg      enum E23340
 37546 ;; Registers used:
 37547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 37548 ;; Tracked objects:
 37549 ;;		On entry : 0/0
 37550 ;;		On exit  : 0/0
 37551 ;;		Unchanged: 0/0
 37552 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37553 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37555 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37556 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37557 ;;Total ram usage:        5 bytes
 37558 ;; Hardware stack levels used: 1
 37559 ;; Hardware stack levels required when called: 7
 37560 ;; This function calls:
 37561 ;;		_checkLen
 37562 ;;		_sendMessage5
 37563 ;; This function is called by:
 37564 ;;		_teachProcessMessage
 37565 ;; This function uses a non-reentrant model
 37566 ;;
 37567                           
 37568                           	psect	text49
 37569   0155BA                     __ptext49:
 37570                           	callstack 0
 37571   0155BA                     _teachCheckLen:
 37572                           	callstack 117
 37573                           
 37574                           ;../../VLCBlib_PIC/event_teach_simple.c: 344:     if (learn) {
 37575                           
 37576                           ;incstack = 0
 37577   0155BA  5033               	movf	teachCheckLen@learn^(0+1280),w,c
 37578   0155BC  B4D8               	btfsc	status,2,c
 37579   0155BE  D022               	goto	l9485
 37580                           
 37581                           ;../../VLCBlib_PIC/event_teach_simple.c: 346:         if (m->len < needed) {
 37582   0155C0  C530  F4D9         	movff	teachCheckLen@m,fsr2l
 37583   0155C4  C531  F4DA         	movff	teachCheckLen@m+1,fsr2h
 37584   0155C8  5032               	movf	teachCheckLen@needed^(0+1280),w,c
 37585   0155CA  5CDE               	subwf	postinc2,w,c
 37586   0155CC  B0D8               	btfsc	status,0,c
 37587   0155CE  D018               	goto	l9481
 37588                           
 37589                           ;../../VLCBlib_PIC/event_teach_simple.c: 348:             if (mode_flags & 1) {
 37590   0155D0  0105               	movlb	5	; () banked
 37591   0155D2  A1A0               	btfss	_mode_flags& (0+255),0,b
 37592   0155D4  D013               	goto	l9477
 37593                           
 37594                           ; BSR set to: 5
 37595                           ;../../VLCBlib_PIC/event_teach_simple.c: 351:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, (uint8_t)(m->opc), SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 37596   0155D6  C55F  F525         	movff	_nn+1,sendMessage5@data1
 37597   0155DA  C55E  F526         	movff	_nn,sendMessage5@data2
 37598   0155DE  EE20 F001          	lfsr	2,1
 37599   0155E2  5030               	movf	teachCheckLen@m^(0+1280),w,c
 37600   0155E4  26D9               	addwf	fsr2l,f,c
 37601   0155E6  5031               	movf	(teachCheckLen@m+1)^(0+1280),w,c
 37602   0155E8  22DA               	addwfc	fsr2h,f,c
 37603   0155EA  50DF               	movf	indf2,w,c
 37604   0155EC  6E27               	movwf	sendMessage5@data3^(0+1280),c
 37605   0155EE  0E04               	movlw	4
 37606   0155F0  6E28               	movwf	sendMessage5@data4^(0+1280),c
 37607   0155F2  0E01               	movlw	1
 37608   0155F4  6E29               	movwf	sendMessage5@data5^(0+1280),c
 37609   0155F6  0EAF               	movlw	175
 37610   0155F8  ECCD  F0B1         	call	_sendMessage5
 37611   0155FC                     l9477:
 37612                           
 37613                           ;../../VLCBlib_PIC/event_teach_simple.c: 354:             return PROCESSED;
 37614   0155FC  0E01               	movlw	1
 37615   0155FE  0012               	return	
 37616   015600                     l9481:
 37617                           
 37618                           ;../../VLCBlib_PIC/event_teach_simple.c: 356:         return NOT_PROCESSED;
 37619   015600  0E00               	movlw	0
 37620   015602  0012               	return	
 37621   015604                     l9485:
 37622                           
 37623                           ;../../VLCBlib_PIC/event_teach_simple.c: 358:     return checkLen(m, needed, SERVICE_ID_
      +                          OLD_TEACH);
 37624   015604  C530  F52B         	movff	teachCheckLen@m,checkLen@m
 37625   015608  C531  F52C         	movff	teachCheckLen@m+1,checkLen@m+1
 37626   01560C  C532  F52D         	movff	teachCheckLen@needed,checkLen@needed
 37627   015610  0E04               	movlw	4
 37628   015612  6E2E               	movwf	checkLen@service^(0+1280),c
 37629   015614  EC21  F0A8         	call	_checkLen	;wreg free
 37630   015618  0012               	return		;funcret
 37631   01561A                     __end_of_teachCheckLen:
 37632                           	callstack 0
 37633                           
 37634 ;; *************** function _doRqevn *****************
 37635 ;; Defined at:
 37636 ;;		line 488 in file "../../VLCBlib_PIC/event_teach_simple.c"
 37637 ;; Parameters:    Size  Location     Type
 37638 ;;		None
 37639 ;; Auto vars:     Size  Location     Type
 37640 ;;  eventNumber     2   40[COMRAM] unsigned short 
 37641 ;;  i               1   43[COMRAM] unsigned char 
 37642 ;;  count           1   42[COMRAM] unsigned char 
 37643 ;; Return value:  Size  Location     Type
 37644 ;;                  1    wreg      void 
 37645 ;; Registers used:
 37646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 37647 ;; Tracked objects:
 37648 ;;		On entry : 0/0
 37649 ;;		On exit  : 0/0
 37650 ;;		Unchanged: 0/0
 37651 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37653 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37655 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37656 ;;Total ram usage:        4 bytes
 37657 ;; Hardware stack levels used: 1
 37658 ;; Hardware stack levels required when called: 6
 37659 ;; This function calls:
 37660 ;;		_getEN
 37661 ;;		_sendMessage3
 37662 ;; This function is called by:
 37663 ;;		_teachProcessMessage
 37664 ;; This function uses a non-reentrant model
 37665 ;;
 37666                           
 37667                           	psect	text50
 37668   0160A4                     __ptext50:
 37669                           	callstack 0
 37670   0160A4                     _doRqevn:
 37671                           	callstack 118
 37672                           
 37673                           ;../../VLCBlib_PIC/event_teach_simple.c: 490:     uint8_t count = 0;
 37674                           
 37675                           ;incstack = 0
 37676   0160A4  6A2B               	clrf	doRqevn@count^(0+1280),c
 37677                           
 37678                           ;../../VLCBlib_PIC/event_teach_simple.c: 491:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 492:     for (i=0; i<254; i++) {
 37679   0160A6  6A2C               	clrf	doRqevn@i^(0+1280),c
 37680   0160A8                     l9593:
 37681                           
 37682                           ;../../VLCBlib_PIC/event_teach_simple.c: 493:         uint16_t eventNumber;;../../VLCBli
      +                          b_PIC/event_teach_simple.c: 494:         eventNumber = getEN(i);
 37683   0160A8  502C               	movf	doRqevn@i^(0+1280),w,c
 37684   0160AA  EC00  F0A9         	call	_getEN
 37685   0160AE  C50D  F529         	movff	?_getEN,doRqevn@eventNumber
 37686   0160B2  C50E  F52A         	movff	?_getEN+1,doRqevn@eventNumber+1
 37687                           
 37688                           ;../../VLCBlib_PIC/event_teach_simple.c: 495:         if (eventNumber != 0) {
 37689   0160B6  5029               	movf	doRqevn@eventNumber^(0+1280),w,c
 37690   0160B8  102A               	iorwf	(doRqevn@eventNumber+1)^(0+1280),w,c
 37691   0160BA  A4D8               	btfss	status,2,c
 37692                           
 37693                           ;../../VLCBlib_PIC/event_teach_simple.c: 496:             count++;
 37694   0160BC  2A2B               	incf	doRqevn@count^(0+1280),f,c
 37695                           
 37696                           ;../../VLCBlib_PIC/event_teach_simple.c: 498:     }
 37697                           
 37698                           ;../../VLCBlib_PIC/event_teach_simple.c: 497:         }
 37699   0160BE  2A2C               	incf	doRqevn@i^(0+1280),f,c
 37700   0160C0  0EFD               	movlw	253
 37701   0160C2  642C               	cpfsgt	doRqevn@i^(0+1280),c
 37702   0160C4  D7F1               	goto	l9593
 37703                           
 37704                           ;../../VLCBlib_PIC/event_teach_simple.c: 499:     sendMessage3(OPC_NUMEV, nn.bytes.hi, n
      +                          n.bytes.lo, count);
 37705   0160C6  C55F  F525         	movff	_nn+1,sendMessage3@data1
 37706   0160CA  C55E  F526         	movff	_nn,sendMessage3@data2
 37707   0160CE  C52B  F527         	movff	doRqevn@count,sendMessage3@data3
 37708   0160D2  0E74               	movlw	116
 37709   0160D4  EC8E  F0B1         	call	_sendMessage3
 37710   0160D8  0012               	return		;funcret
 37711   0160DA                     __end_of_doRqevn:
 37712                           	callstack 0
 37713                           
 37714 ;; *************** function _doReval *****************
 37715 ;; Defined at:
 37716 ;;		line 557 in file "../../VLCBlib_PIC/event_teach_simple.c"
 37717 ;; Parameters:    Size  Location     Type
 37718 ;;  enNum           1    wreg     unsigned char 
 37719 ;;  evNum           1   42[COMRAM] unsigned char 
 37720 ;; Auto vars:     Size  Location     Type
 37721 ;;  enNum           1   44[COMRAM] unsigned char 
 37722 ;;  evVal           2   46[COMRAM] int 
 37723 ;;  tableIndex      1   45[COMRAM] unsigned char 
 37724 ;;  evIndex         1   43[COMRAM] unsigned char 
 37725 ;; Return value:  Size  Location     Type
 37726 ;;                  1    wreg      void 
 37727 ;; Registers used:
 37728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 37729 ;; Tracked objects:
 37730 ;;		On entry : 0/0
 37731 ;;		On exit  : 0/0
 37732 ;;		Unchanged: 0/0
 37733 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37734 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37735 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37737 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37738 ;;Total ram usage:        6 bytes
 37739 ;; Hardware stack levels used: 1
 37740 ;; Hardware stack levels required when called: 6
 37741 ;; This function calls:
 37742 ;;		_evtIdxToTableIndex
 37743 ;;		_findServiceIndex
 37744 ;;		_getEv
 37745 ;;		_sendMessage3
 37746 ;;		_sendMessage5
 37747 ;;		_startTimedResponse
 37748 ;; This function is called by:
 37749 ;;		_teachProcessMessage
 37750 ;; This function uses a non-reentrant model
 37751 ;;
 37752                           
 37753                           	psect	text51
 37754   0140B6                     __ptext51:
 37755                           	callstack 0
 37756   0140B6                     _doReval:
 37757                           	callstack 118
 37758                           
 37759                           ;incstack = 0
 37760                           ;doReval@enNum stored from wreg
 37761   0140B6  6E2D               	movwf	doReval@enNum^(0+1280),c
 37762                           
 37763                           ;../../VLCBlib_PIC/event_teach_simple.c: 560:     uint8_t evIndex;;../../VLCBlib_PIC/eve
      +                          nt_teach_simple.c: 561:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 37764   0140B8  502D               	movf	doReval@enNum^(0+1280),w,c
 37765   0140BA  ECDA  F0B3         	call	_evtIdxToTableIndex
 37766   0140BE  6E2E               	movwf	doReval@tableIndex^(0+1280),c
 37767                           
 37768                           ;../../VLCBlib_PIC/event_teach_simple.c: 562:     int evVal;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 564:     if (tableIndex >= 254) {
 37769   0140C0  0EFD               	movlw	253
 37770   0140C2  642E               	cpfsgt	doReval@tableIndex^(0+1280),c
 37771   0140C4  D00A               	goto	l9623
 37772                           
 37773                           ;../../VLCBlib_PIC/event_teach_simple.c: 565:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 37774   0140C6  C55F  F525         	movff	_nn+1,sendMessage3@data1
 37775   0140CA  C55E  F526         	movff	_nn,sendMessage3@data2
 37776   0140CE  0E06               	movlw	6
 37777   0140D0  6E27               	movwf	sendMessage3@data3^(0+1280),c
 37778   0140D2  0E6F               	movlw	111
 37779   0140D4  EC8E  F0B1         	call	_sendMessage3
 37780   0140D8  0012               	return	
 37781   0140DA                     l9623:
 37782                           
 37783                           ;../../VLCBlib_PIC/event_teach_simple.c: 569:     evIndex = evNum-1U;
 37784   0140DA  042B               	decf	doReval@evNum^(0+1280),w,c
 37785   0140DC  6E2C               	movwf	doReval@evIndex^(0+1280),c
 37786                           
 37787                           ;../../VLCBlib_PIC/event_teach_simple.c: 571:     if (evNum == 0) {
 37788   0140DE  502B               	movf	doReval@evNum^(0+1280),w,c
 37789   0140E0  A4D8               	btfss	status,2,c
 37790   0140E2  D017               	goto	l9635
 37791                           
 37792                           ;../../VLCBlib_PIC/event_teach_simple.c: 572:         evVal = 13;
 37793   0140E4  0E00               	movlw	0
 37794   0140E6  6E30               	movwf	(doReval@evVal+1)^(0+1280),c
 37795   0140E8  0E0D               	movlw	13
 37796   0140EA  6E2F               	movwf	doReval@evVal^(0+1280),c
 37797                           
 37798                           ;../../VLCBlib_PIC/event_teach_simple.c: 573:         if ((mode_flags & 8) == 0) {
 37799   0140EC  0105               	movlb	5	; () banked
 37800   0140EE  B7A0               	btfsc	_mode_flags& (0+255),3,b
 37801   0140F0  D019               	goto	l9637
 37802                           
 37803                           ; BSR set to: 5
 37804                           ;../../VLCBlib_PIC/event_teach_simple.c: 576:             timedResponseOpcode = OPC_NEVA
      +                          L;
 37805   0140F2  0EB5               	movlw	181
 37806   0140F4  6F92               	movwf	_timedResponseOpcode& (0+255),b
 37807                           
 37808                           ; BSR set to: 5
 37809                           ;../../VLCBlib_PIC/event_teach_simple.c: 577:             startTimedResponse(tableIndex,
      +                           findServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 37810   0140F6  0E04               	movlw	4
 37811   0140F8  EC92  F0A8         	call	_findServiceIndex
 37812   0140FC  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 37813   0140FE  0E62               	movlw	low _reqevCallback
 37814   014100  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 37815   014102  0E44               	movlw	high _reqevCallback
 37816   014104  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 37817   014106  0E01               	movlw	low (_reqevCallback shr (0+16))
 37818   014108  6E08               	movwf	(startTimedResponse@callback+2)^(0+1280),c
 37819   01410A  502E               	movf	doReval@tableIndex^(0+1280),w,c
 37820   01410C  EC67  F0AF         	call	_startTimedResponse
 37821   014110  D009               	goto	l9637
 37822   014112                     l9635:
 37823                           
 37824                           ;../../VLCBlib_PIC/event_teach_simple.c: 580:         evVal = getEv(tableIndex, evIndex)
      +                          ;
 37825   014112  C52C  F50D         	movff	doReval@evIndex,getEv@evNum
 37826   014116  502E               	movf	doReval@tableIndex^(0+1280),w,c
 37827   014118  ECA3  F0A9         	call	_getEv
 37828   01411C  C50D  F52F         	movff	?_getEv,doReval@evVal
 37829   014120  C50E  F530         	movff	?_getEv+1,doReval@evVal+1
 37830   014124                     l9637:
 37831                           
 37832                           ;../../VLCBlib_PIC/event_teach_simple.c: 583:     if (evVal < 0) {
 37833   014124  AE30               	btfss	(doReval@evVal+1)^(0+1280),7,c
 37834   014126  D019               	goto	l9643
 37835                           
 37836                           ;../../VLCBlib_PIC/event_teach_simple.c: 585:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, (uint8_t)(-evVal));
 37837   014128  C55F  F525         	movff	_nn+1,sendMessage3@data1
 37838   01412C  C55E  F526         	movff	_nn,sendMessage3@data2
 37839   014130  502F               	movf	doReval@evVal^(0+1280),w,c
 37840   014132  0800               	sublw	0
 37841   014134  6E27               	movwf	sendMessage3@data3^(0+1280),c
 37842   014136  0E6F               	movlw	111
 37843   014138  EC8E  F0B1         	call	_sendMessage3
 37844                           
 37845                           ;../../VLCBlib_PIC/event_teach_simple.c: 587:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REVAL, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 37846   01413C  C55F  F525         	movff	_nn+1,sendMessage5@data1
 37847   014140  C55E  F526         	movff	_nn,sendMessage5@data2
 37848   014144  0E9C               	movlw	156
 37849   014146  6E27               	movwf	sendMessage5@data3^(0+1280),c
 37850   014148  0E04               	movlw	4
 37851   01414A  6E28               	movwf	sendMessage5@data4^(0+1280),c
 37852   01414C  502F               	movf	doReval@evVal^(0+1280),w,c
 37853   01414E  0800               	sublw	0
 37854   014150  6E29               	movwf	sendMessage5@data5^(0+1280),c
 37855   014152  0EAF               	movlw	175
 37856   014154  ECCD  F0B1         	call	_sendMessage5
 37857   014158  0012               	return	
 37858   01415A                     l9643:
 37859                           
 37860                           ;../../VLCBlib_PIC/event_teach_simple.c: 591:     sendMessage5(OPC_NEVAL, nn.bytes.hi, n
      +                          n.bytes.lo, enNum, evNum, (uint8_t)evVal);
 37861   01415A  C55F  F525         	movff	_nn+1,sendMessage5@data1
 37862   01415E  C55E  F526         	movff	_nn,sendMessage5@data2
 37863   014162  C52D  F527         	movff	doReval@enNum,sendMessage5@data3
 37864   014166  C52B  F528         	movff	doReval@evNum,sendMessage5@data4
 37865   01416A  C52F  F529         	movff	doReval@evVal,sendMessage5@data5
 37866   01416E  0EB5               	movlw	181
 37867   014170  ECCD  F0B1         	call	_sendMessage5
 37868   014174  0012               	return		;funcret
 37869   014176                     __end_of_doReval:
 37870                           	callstack 0
 37871                           
 37872 ;; *************** function _doReqev *****************
 37873 ;; Defined at:
 37874 ;;		line 622 in file "../../VLCBlib_PIC/event_teach_simple.c"
 37875 ;; Parameters:    Size  Location     Type
 37876 ;;  nodeNumber      2   43[COMRAM] unsigned short 
 37877 ;;  eventNumber     2   45[COMRAM] unsigned short 
 37878 ;;  evNum           1   47[COMRAM] unsigned char 
 37879 ;; Auto vars:     Size  Location     Type
 37880 ;;  evVal           2   48[COMRAM] short 
 37881 ;;  tableIndex      1   50[COMRAM] unsigned char 
 37882 ;; Return value:  Size  Location     Type
 37883 ;;                  1    wreg      void 
 37884 ;; Registers used:
 37885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 37886 ;; Tracked objects:
 37887 ;;		On entry : 0/0
 37888 ;;		On exit  : 0/0
 37889 ;;		Unchanged: 0/0
 37890 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 37891 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37892 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37894 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 37895 ;;Total ram usage:        8 bytes
 37896 ;; Hardware stack levels used: 1
 37897 ;; Hardware stack levels required when called: 6
 37898 ;; This function calls:
 37899 ;;		_findEvent
 37900 ;;		_findServiceIndex
 37901 ;;		_getEv
 37902 ;;		_numEv
 37903 ;;		_sendMessage3
 37904 ;;		_sendMessage5
 37905 ;;		_sendMessage6
 37906 ;;		_startTimedResponse
 37907 ;; This function is called by:
 37908 ;;		_teachProcessMessage
 37909 ;; This function uses a non-reentrant model
 37910 ;;
 37911                           
 37912                           	psect	text52
 37913   0134E2                     __ptext52:
 37914                           	callstack 0
 37915   0134E2                     _doReqev:
 37916                           	callstack 118
 37917                           
 37918                           ;../../VLCBlib_PIC/event_teach_simple.c: 623:     int16_t evVal;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 625:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 37919                           
 37920                           ;incstack = 0
 37921   0134E2  C52C  F51E         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 37922   0134E6  C52D  F51F         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 37923   0134EA  C52E  F520         	movff	doReqev@eventNumber,findEvent@eventNumber
 37924   0134EE  C52F  F521         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 37925   0134F2  ECAE  F0A4         	call	_findEvent	;wreg free
 37926   0134F6  6E33               	movwf	doReqev@tableIndex^(0+1280),c
 37927                           
 37928                           ;../../VLCBlib_PIC/event_teach_simple.c: 626:     if (tableIndex == 0xff) {
 37929   0134F8  2833               	incf	doReqev@tableIndex^(0+1280),w,c
 37930   0134FA  A4D8               	btfss	status,2,c
 37931   0134FC  D017               	goto	l9531
 37932                           
 37933                           ;../../VLCBlib_PIC/event_teach_simple.c: 627:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INVALID_EVENT);
 37934   0134FE  C55F  F525         	movff	_nn+1,sendMessage3@data1
 37935   013502  C55E  F526         	movff	_nn,sendMessage3@data2
 37936   013506  0E07               	movlw	7
 37937   013508  6E27               	movwf	sendMessage3@data3^(0+1280),c
 37938   01350A  0E6F               	movlw	111
 37939   01350C  EC8E  F0B1         	call	_sendMessage3
 37940                           
 37941                           ;../../VLCBlib_PIC/event_teach_simple.c: 629:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 37942   013510  C55F  F525         	movff	_nn+1,sendMessage5@data1
 37943   013514  C55E  F526         	movff	_nn,sendMessage5@data2
 37944   013518  0EB2               	movlw	178
 37945   01351A  6E27               	movwf	sendMessage5@data3^(0+1280),c
 37946   01351C  0E04               	movlw	4
 37947   01351E  6E28               	movwf	sendMessage5@data4^(0+1280),c
 37948   013520  0E07               	movlw	7
 37949   013522  6E29               	movwf	sendMessage5@data5^(0+1280),c
 37950   013524  0EAF               	movlw	175
 37951   013526  ECCD  F0B1         	call	_sendMessage5
 37952   01352A  0012               	return	
 37953   01352C                     l9531:
 37954                           
 37955                           ;../../VLCBlib_PIC/event_teach_simple.c: 633:     if (evNum > 13) {
 37956   01352C  0E0D               	movlw	13
 37957   01352E  6430               	cpfsgt	doReqev@evNum^(0+1280),c
 37958   013530  D017               	goto	l9537
 37959                           
 37960                           ;../../VLCBlib_PIC/event_teach_simple.c: 634:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 37961   013532  C55F  F525         	movff	_nn+1,sendMessage3@data1
 37962   013536  C55E  F526         	movff	_nn,sendMessage3@data2
 37963   01353A  0E06               	movlw	6
 37964   01353C  6E27               	movwf	sendMessage3@data3^(0+1280),c
 37965   01353E  0E6F               	movlw	111
 37966   013540  EC8E  F0B1         	call	_sendMessage3
 37967                           
 37968                           ;../../VLCBlib_PIC/event_teach_simple.c: 636:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 37969   013544  C55F  F525         	movff	_nn+1,sendMessage5@data1
 37970   013548  C55E  F526         	movff	_nn,sendMessage5@data2
 37971   01354C  0EB2               	movlw	178
 37972   01354E  6E27               	movwf	sendMessage5@data3^(0+1280),c
 37973   013550  0E04               	movlw	4
 37974   013552  6E28               	movwf	sendMessage5@data4^(0+1280),c
 37975   013554  0E06               	movlw	6
 37976   013556  6E29               	movwf	sendMessage5@data5^(0+1280),c
 37977   013558  0EAF               	movlw	175
 37978   01355A  ECCD  F0B1         	call	_sendMessage5
 37979   01355E  0012               	return	
 37980   013560                     l9537:
 37981                           
 37982                           ;../../VLCBlib_PIC/event_teach_simple.c: 641:     if (evNum == 0) {
 37983   013560  5030               	movf	doReqev@evNum^(0+1280),w,c
 37984   013562  A4D8               	btfss	status,2,c
 37985   013564  D029               	goto	l9551
 37986                           
 37987                           ;../../VLCBlib_PIC/event_teach_simple.c: 642:         evVal = 13;
 37988   013566  0E00               	movlw	0
 37989   013568  6E32               	movwf	(doReqev@evVal+1)^(0+1280),c
 37990   01356A  0E0D               	movlw	13
 37991   01356C  6E31               	movwf	doReqev@evVal^(0+1280),c
 37992                           
 37993                           ;../../VLCBlib_PIC/event_teach_simple.c: 643:         if ((mode_flags & 8) == 0) {
 37994   01356E  0105               	movlb	5	; () banked
 37995   013570  B7A0               	btfsc	_mode_flags& (0+255),3,b
 37996   013572  D02B               	goto	l9553
 37997                           
 37998                           ; BSR set to: 5
 37999                           ;../../VLCBlib_PIC/event_teach_simple.c: 644:             sendMessage6(OPC_EVANS, nodeNu
      +                          mber>>8, nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 38000   013574  502D               	movf	(doReqev@nodeNumber+1)^(0+1280),w,c
 38001   013576  6E25               	movwf	sendMessage6@data1^(0+1280),c
 38002   013578  C52C  F526         	movff	doReqev@nodeNumber,sendMessage6@data2
 38003   01357C  502F               	movf	(doReqev@eventNumber+1)^(0+1280),w,c
 38004   01357E  6E27               	movwf	sendMessage6@data3^(0+1280),c
 38005   013580  C52E  F528         	movff	doReqev@eventNumber,sendMessage6@data4
 38006   013584  0E00               	movlw	0
 38007   013586  6E29               	movwf	sendMessage6@data5^(0+1280),c
 38008   013588  5033               	movf	doReqev@tableIndex^(0+1280),w,c
 38009   01358A  ECE3  F0B3         	call	_numEv
 38010   01358E  6E2A               	movwf	sendMessage6@data6^(0+1280),c
 38011   013590  0ED3               	movlw	211
 38012   013592  EC79  F0B1         	call	_sendMessage6
 38013                           
 38014                           ;../../VLCBlib_PIC/event_teach_simple.c: 647:             timedResponseOpcode = OPC_EVAN
      +                          S;
 38015   013596  0ED3               	movlw	211
 38016   013598  0105               	movlb	5	; () banked
 38017   01359A  6F92               	movwf	_timedResponseOpcode& (0+255),b
 38018                           
 38019                           ; BSR set to: 5
 38020                           ;../../VLCBlib_PIC/event_teach_simple.c: 648:             startTimedResponse(tableIndex,
      +                           findServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 38021   01359C  0E04               	movlw	4
 38022   01359E  EC92  F0A8         	call	_findServiceIndex
 38023   0135A2  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 38024   0135A4  0E62               	movlw	low _reqevCallback
 38025   0135A6  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 38026   0135A8  0E44               	movlw	high _reqevCallback
 38027   0135AA  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 38028   0135AC  0E01               	movlw	low (_reqevCallback shr (0+16))
 38029   0135AE  6E08               	movwf	(startTimedResponse@callback+2)^(0+1280),c
 38030   0135B0  5033               	movf	doReqev@tableIndex^(0+1280),w,c
 38031   0135B2  EC67  F0AF         	call	_startTimedResponse
 38032   0135B6  0012               	return	
 38033   0135B8                     l9551:
 38034                           
 38035                           ;../../VLCBlib_PIC/event_teach_simple.c: 652:         evVal = getEv(tableIndex, evNum-1)
      +                          ;
 38036   0135B8  0430               	decf	doReqev@evNum^(0+1280),w,c
 38037   0135BA  6E0D               	movwf	getEv@evNum^(0+1280),c
 38038   0135BC  5033               	movf	doReqev@tableIndex^(0+1280),w,c
 38039   0135BE  ECA3  F0A9         	call	_getEv
 38040   0135C2  C50D  F531         	movff	?_getEv,doReqev@evVal
 38041   0135C6  C50E  F532         	movff	?_getEv+1,doReqev@evVal+1
 38042   0135CA                     l9553:
 38043                           
 38044                           ;../../VLCBlib_PIC/event_teach_simple.c: 655:     if (evVal < 0) {
 38045   0135CA  AE32               	btfss	(doReqev@evVal+1)^(0+1280),7,c
 38046   0135CC  D019               	goto	l9559
 38047                           
 38048                           ;../../VLCBlib_PIC/event_teach_simple.c: 657:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, (uint8_t)(-evVal));
 38049   0135CE  C55F  F525         	movff	_nn+1,sendMessage3@data1
 38050   0135D2  C55E  F526         	movff	_nn,sendMessage3@data2
 38051   0135D6  5031               	movf	doReqev@evVal^(0+1280),w,c
 38052   0135D8  0800               	sublw	0
 38053   0135DA  6E27               	movwf	sendMessage3@data3^(0+1280),c
 38054   0135DC  0E6F               	movlw	111
 38055   0135DE  EC8E  F0B1         	call	_sendMessage3
 38056                           
 38057                           ;../../VLCBlib_PIC/event_teach_simple.c: 659:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 38058   0135E2  C55F  F525         	movff	_nn+1,sendMessage5@data1
 38059   0135E6  C55E  F526         	movff	_nn,sendMessage5@data2
 38060   0135EA  0EB2               	movlw	178
 38061   0135EC  6E27               	movwf	sendMessage5@data3^(0+1280),c
 38062   0135EE  0E04               	movlw	4
 38063   0135F0  6E28               	movwf	sendMessage5@data4^(0+1280),c
 38064   0135F2  5031               	movf	doReqev@evVal^(0+1280),w,c
 38065   0135F4  0800               	sublw	0
 38066   0135F6  6E29               	movwf	sendMessage5@data5^(0+1280),c
 38067   0135F8  0EAF               	movlw	175
 38068   0135FA  ECCD  F0B1         	call	_sendMessage5
 38069   0135FE  0012               	return	
 38070   013600                     l9559:
 38071                           
 38072                           ;../../VLCBlib_PIC/event_teach_simple.c: 664:     sendMessage6(OPC_EVANS, nodeNumber>>8,
      +                           nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 38073   013600  502D               	movf	(doReqev@nodeNumber+1)^(0+1280),w,c
 38074   013602  6E25               	movwf	sendMessage6@data1^(0+1280),c
 38075   013604  C52C  F526         	movff	doReqev@nodeNumber,sendMessage6@data2
 38076   013608  502F               	movf	(doReqev@eventNumber+1)^(0+1280),w,c
 38077   01360A  6E27               	movwf	sendMessage6@data3^(0+1280),c
 38078   01360C  C52E  F528         	movff	doReqev@eventNumber,sendMessage6@data4
 38079   013610  C530  F529         	movff	doReqev@evNum,sendMessage6@data5
 38080   013614  C531  F52A         	movff	doReqev@evVal,sendMessage6@data6
 38081   013618  0ED3               	movlw	211
 38082   01361A  EC79  F0B1         	call	_sendMessage6
 38083   01361E  0012               	return		;funcret
 38084   013620                     __end_of_doReqev:
 38085                           	callstack 0
 38086                           
 38087 ;; *************** function _numEv *****************
 38088 ;; Defined at:
 38089 ;;		line 881 in file "../../VLCBlib_PIC/event_teach_simple.c"
 38090 ;; Parameters:    Size  Location     Type
 38091 ;;  tableIndex      1    wreg     unsigned char 
 38092 ;; Auto vars:     Size  Location     Type
 38093 ;;  tableIndex      1    0[COMRAM] unsigned char 
 38094 ;; Return value:  Size  Location     Type
 38095 ;;                  1    wreg      unsigned char 
 38096 ;; Registers used:
 38097 ;;		wreg
 38098 ;; Tracked objects:
 38099 ;;		On entry : 0/0
 38100 ;;		On exit  : 0/0
 38101 ;;		Unchanged: 0/0
 38102 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38107 ;;Total ram usage:        0 bytes
 38108 ;; Hardware stack levels used: 1
 38109 ;; Hardware stack levels required when called: 1
 38110 ;; This function calls:
 38111 ;;		Nothing
 38112 ;; This function is called by:
 38113 ;;		_doReqev
 38114 ;;		_reqevCallback
 38115 ;; This function uses a non-reentrant model
 38116 ;;
 38117                           
 38118                           	psect	text53
 38119   0167C6                     __ptext53:
 38120                           	callstack 0
 38121   0167C6                     _numEv:
 38122                           	callstack 122
 38123                           
 38124                           ;../../VLCBlib_PIC/event_teach_simple.c: 882:     return 13;
 38125                           
 38126                           ;incstack = 0
 38127   0167C6  0E0D               	movlw	13
 38128   0167C8  0012               	return		;funcret
 38129   0167CA                     __end_of_numEv:
 38130                           	callstack 0
 38131                           
 38132 ;; *************** function _doNnevn *****************
 38133 ;; Defined at:
 38134 ;;		line 412 in file "../../VLCBlib_PIC/event_teach_simple.c"
 38135 ;; Parameters:    Size  Location     Type
 38136 ;;		None
 38137 ;; Auto vars:     Size  Location     Type
 38138 ;;  eventNumber     2   40[COMRAM] unsigned short 
 38139 ;;  i               1   43[COMRAM] unsigned char 
 38140 ;;  count           1   42[COMRAM] unsigned char 
 38141 ;; Return value:  Size  Location     Type
 38142 ;;                  1    wreg      void 
 38143 ;; Registers used:
 38144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 38145 ;; Tracked objects:
 38146 ;;		On entry : 0/0
 38147 ;;		On exit  : 0/0
 38148 ;;		Unchanged: 0/0
 38149 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38151 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38153 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38154 ;;Total ram usage:        4 bytes
 38155 ;; Hardware stack levels used: 1
 38156 ;; Hardware stack levels required when called: 6
 38157 ;; This function calls:
 38158 ;;		_getEN
 38159 ;;		_sendMessage3
 38160 ;; This function is called by:
 38161 ;;		_teachProcessMessage
 38162 ;; This function uses a non-reentrant model
 38163 ;;
 38164                           
 38165                           	psect	text54
 38166   0160DA                     __ptext54:
 38167                           	callstack 0
 38168   0160DA                     _doNnevn:
 38169                           	callstack 118
 38170                           
 38171                           ;../../VLCBlib_PIC/event_teach_simple.c: 414:     uint8_t count = 0;
 38172                           
 38173                           ;incstack = 0
 38174   0160DA  6A2B               	clrf	doNnevn@count^(0+1280),c
 38175                           
 38176                           ;../../VLCBlib_PIC/event_teach_simple.c: 415:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 416:     for (i=0; i<254; i++) {
 38177   0160DC  6A2C               	clrf	doNnevn@i^(0+1280),c
 38178   0160DE                     l9577:
 38179                           
 38180                           ;../../VLCBlib_PIC/event_teach_simple.c: 417:         uint16_t eventNumber;;../../VLCBli
      +                          b_PIC/event_teach_simple.c: 418:         eventNumber = getEN(i);
 38181   0160DE  502C               	movf	doNnevn@i^(0+1280),w,c
 38182   0160E0  EC00  F0A9         	call	_getEN
 38183   0160E4  C50D  F529         	movff	?_getEN,doNnevn@eventNumber
 38184   0160E8  C50E  F52A         	movff	?_getEN+1,doNnevn@eventNumber+1
 38185                           
 38186                           ;../../VLCBlib_PIC/event_teach_simple.c: 419:         if (eventNumber == 0) {
 38187   0160EC  5029               	movf	doNnevn@eventNumber^(0+1280),w,c
 38188   0160EE  102A               	iorwf	(doNnevn@eventNumber+1)^(0+1280),w,c
 38189   0160F0  B4D8               	btfsc	status,2,c
 38190                           
 38191                           ;../../VLCBlib_PIC/event_teach_simple.c: 420:             count++;
 38192   0160F2  2A2B               	incf	doNnevn@count^(0+1280),f,c
 38193                           
 38194                           ;../../VLCBlib_PIC/event_teach_simple.c: 422:     }
 38195                           
 38196                           ;../../VLCBlib_PIC/event_teach_simple.c: 421:         }
 38197   0160F4  2A2C               	incf	doNnevn@i^(0+1280),f,c
 38198   0160F6  0EFD               	movlw	253
 38199   0160F8  642C               	cpfsgt	doNnevn@i^(0+1280),c
 38200   0160FA  D7F1               	goto	l9577
 38201                           
 38202                           ;../../VLCBlib_PIC/event_teach_simple.c: 423:     sendMessage3(OPC_EVNLF, nn.bytes.hi, n
      +                          n.bytes.lo, count);
 38203   0160FC  C55F  F525         	movff	_nn+1,sendMessage3@data1
 38204   016100  C55E  F526         	movff	_nn,sendMessage3@data2
 38205   016104  C52B  F527         	movff	doNnevn@count,sendMessage3@data3
 38206   016108  0E70               	movlw	112
 38207   01610A  EC8E  F0B1         	call	_sendMessage3
 38208   01610E  0012               	return		;funcret
 38209   016110                     __end_of_doNnevn:
 38210                           	callstack 0
 38211                           
 38212 ;; *************** function _doNnclr *****************
 38213 ;; Defined at:
 38214 ;;		line 505 in file "../../VLCBlib_PIC/event_teach_simple.c"
 38215 ;; Parameters:    Size  Location     Type
 38216 ;;		None
 38217 ;; Auto vars:     Size  Location     Type
 38218 ;;		None
 38219 ;; Return value:  Size  Location     Type
 38220 ;;                  1    wreg      void 
 38221 ;; Registers used:
 38222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 38223 ;; Tracked objects:
 38224 ;;		On entry : 0/0
 38225 ;;		On exit  : 0/0
 38226 ;;		Unchanged: 0/0
 38227 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38232 ;;Total ram usage:        0 bytes
 38233 ;; Hardware stack levels used: 1
 38234 ;; Hardware stack levels required when called: 8
 38235 ;; This function calls:
 38236 ;;		_clearAllEvents
 38237 ;;		_sendMessage2
 38238 ;;		_sendMessage5
 38239 ;; This function is called by:
 38240 ;;		_teachProcessMessage
 38241 ;; This function uses a non-reentrant model
 38242 ;;
 38243                           
 38244                           	psect	text55
 38245   016240                     __ptext55:
 38246                           	callstack 0
 38247   016240                     _doNnclr:
 38248                           	callstack 116
 38249                           
 38250                           ;../../VLCBlib_PIC/event_teach_simple.c: 506:     clearAllEvents();
 38251                           
 38252                           ;incstack = 0
 38253   016240  EC88  F0B3         	call	_clearAllEvents	;wreg free
 38254                           
 38255                           ;../../VLCBlib_PIC/event_teach_simple.c: 507:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 38256   016244  C55F  F525         	movff	_nn+1,sendMessage2@data1
 38257   016248  C55E  F526         	movff	_nn,sendMessage2@data2
 38258   01624C  0E59               	movlw	89
 38259   01624E  ECA3  F0B1         	call	_sendMessage2
 38260                           
 38261                           ;../../VLCBlib_PIC/event_teach_simple.c: 509:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, GRSP_OK);
 38262   016252  C55F  F525         	movff	_nn+1,sendMessage5@data1
 38263   016256  C55E  F526         	movff	_nn,sendMessage5@data2
 38264   01625A  0E55               	movlw	85
 38265   01625C  6E27               	movwf	sendMessage5@data3^(0+1280),c
 38266   01625E  0E04               	movlw	4
 38267   016260  6E28               	movwf	sendMessage5@data4^(0+1280),c
 38268   016262  0E00               	movlw	0
 38269   016264  6E29               	movwf	sendMessage5@data5^(0+1280),c
 38270   016266  0EAF               	movlw	175
 38271   016268  ECCD  F0B1         	call	_sendMessage5
 38272   01626C  0012               	return		;funcret
 38273   01626E                     __end_of_doNnclr:
 38274                           	callstack 0
 38275                           
 38276 ;; *************** function _doNerd *****************
 38277 ;; Defined at:
 38278 ;;		line 431 in file "../../VLCBlib_PIC/event_teach_simple.c"
 38279 ;; Parameters:    Size  Location     Type
 38280 ;;		None
 38281 ;; Auto vars:     Size  Location     Type
 38282 ;;		None
 38283 ;; Return value:  Size  Location     Type
 38284 ;;                  1    wreg      void 
 38285 ;; Registers used:
 38286 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38287 ;; Tracked objects:
 38288 ;;		On entry : 0/0
 38289 ;;		On exit  : 0/0
 38290 ;;		Unchanged: 0/0
 38291 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38296 ;;Total ram usage:        0 bytes
 38297 ;; Hardware stack levels used: 1
 38298 ;; Hardware stack levels required when called: 2
 38299 ;; This function calls:
 38300 ;;		_findServiceIndex
 38301 ;;		_startTimedResponse
 38302 ;; This function is called by:
 38303 ;;		_teachProcessMessage
 38304 ;; This function uses a non-reentrant model
 38305 ;;
 38306                           
 38307                           	psect	text56
 38308   016602                     __ptext56:
 38309                           	callstack 0
 38310   016602                     _doNerd:
 38311                           	callstack 122
 38312                           
 38313                           ;../../VLCBlib_PIC/event_teach_simple.c: 432:     startTimedResponse(2, findServiceIndex
      +                          (SERVICE_ID_OLD_TEACH), nerdCallback);
 38314                           
 38315                           ;incstack = 0
 38316   016602  0E04               	movlw	4
 38317   016604  EC92  F0A8         	call	_findServiceIndex
 38318   016608  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 38319   01660A  0E46               	movlw	low _nerdCallback
 38320   01660C  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 38321   01660E  0E58               	movlw	high _nerdCallback
 38322   016610  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 38323   016612  0E01               	movlw	low (_nerdCallback shr (0+16))
 38324   016614  6E08               	movwf	(startTimedResponse@callback+2)^(0+1280),c
 38325   016616  0E02               	movlw	2
 38326   016618  EC67  F0AF         	call	_startTimedResponse
 38327   01661C  0012               	return		;funcret
 38328   01661E                     __end_of_doNerd:
 38329                           	callstack 0
 38330                           
 38331 ;; *************** function _doNenrd *****************
 38332 ;; Defined at:
 38333 ;;		line 464 in file "../../VLCBlib_PIC/event_teach_simple.c"
 38334 ;; Parameters:    Size  Location     Type
 38335 ;;  index           1    wreg     unsigned char 
 38336 ;; Auto vars:     Size  Location     Type
 38337 ;;  index           1   46[COMRAM] unsigned char 
 38338 ;;  eventNumber     2   44[COMRAM] unsigned short 
 38339 ;;  nodeNumber      2   42[COMRAM] unsigned short 
 38340 ;;  tableIndex      1   47[COMRAM] unsigned char 
 38341 ;; Return value:  Size  Location     Type
 38342 ;;                  1    wreg      void 
 38343 ;; Registers used:
 38344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 38345 ;; Tracked objects:
 38346 ;;		On entry : 0/0
 38347 ;;		On exit  : 0/0
 38348 ;;		Unchanged: 0/0
 38349 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38351 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38353 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38354 ;;Total ram usage:        6 bytes
 38355 ;; Hardware stack levels used: 1
 38356 ;; Hardware stack levels required when called: 6
 38357 ;; This function calls:
 38358 ;;		_evtIdxToTableIndex
 38359 ;;		_getEN
 38360 ;;		_getNN
 38361 ;;		_sendMessage3
 38362 ;;		_sendMessage5
 38363 ;; This function is called by:
 38364 ;;		_teachProcessMessage
 38365 ;; This function uses a non-reentrant model
 38366 ;;
 38367                           
 38368                           	psect	text57
 38369   014E6E                     __ptext57:
 38370                           	callstack 0
 38371   014E6E                     _doNenrd:
 38372                           	callstack 118
 38373                           
 38374                           ;incstack = 0
 38375                           ;doNenrd@index stored from wreg
 38376   014E6E  6E2F               	movwf	doNenrd@index^(0+1280),c
 38377                           
 38378                           ;../../VLCBlib_PIC/event_teach_simple.c: 465:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 466:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 468:     tableIndex = evtIdxToTableIndex(index);
 38379   014E70  502F               	movf	doNenrd@index^(0+1280),w,c
 38380   014E72  ECDA  F0B3         	call	_evtIdxToTableIndex
 38381   014E76  6E30               	movwf	doNenrd@tableIndex^(0+1280),c
 38382                           
 38383                           ;../../VLCBlib_PIC/event_teach_simple.c: 470:     if (tableIndex >= 254) {
 38384   014E78  0EFD               	movlw	253
 38385   014E7A  6430               	cpfsgt	doNenrd@tableIndex^(0+1280),c
 38386   014E7C  D017               	goto	l9611
 38387                           
 38388                           ;../../VLCBlib_PIC/event_teach_simple.c: 471:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EN_IDX);
 38389   014E7E  C55F  F525         	movff	_nn+1,sendMessage3@data1
 38390   014E82  C55E  F526         	movff	_nn,sendMessage3@data2
 38391   014E86  0E08               	movlw	8
 38392   014E88  6E27               	movwf	sendMessage3@data3^(0+1280),c
 38393   014E8A  0E6F               	movlw	111
 38394   014E8C  EC8E  F0B1         	call	_sendMessage3
 38395                           
 38396                           ;../../VLCBlib_PIC/event_teach_simple.c: 473:                 sendMessage5(OPC_GRSP, nn.
      +                          bytes.hi, nn.bytes.lo, OPC_NENRD, SERVICE_ID_OLD_TEACH, CMDERR_INV_EN_IDX);
 38397   014E90  C55F  F525         	movff	_nn+1,sendMessage5@data1
 38398   014E94  C55E  F526         	movff	_nn,sendMessage5@data2
 38399   014E98  0E72               	movlw	114
 38400   014E9A  6E27               	movwf	sendMessage5@data3^(0+1280),c
 38401   014E9C  0E04               	movlw	4
 38402   014E9E  6E28               	movwf	sendMessage5@data4^(0+1280),c
 38403   014EA0  0E08               	movlw	8
 38404   014EA2  6E29               	movwf	sendMessage5@data5^(0+1280),c
 38405   014EA4  0EAF               	movlw	175
 38406   014EA6  ECCD  F0B1         	call	_sendMessage5
 38407   014EAA  0012               	return	
 38408   014EAC                     l9611:
 38409                           
 38410                           ;../../VLCBlib_PIC/event_teach_simple.c: 477:     nodeNumber = getNN(tableIndex);
 38411   014EAC  5030               	movf	doNenrd@tableIndex^(0+1280),w,c
 38412   014EAE  ECD6  F0A1         	call	_getNN
 38413   014EB2  C50D  F52B         	movff	?_getNN,doNenrd@nodeNumber
 38414   014EB6  C50E  F52C         	movff	?_getNN+1,doNenrd@nodeNumber+1
 38415                           
 38416                           ;../../VLCBlib_PIC/event_teach_simple.c: 478:     eventNumber = getEN(tableIndex);
 38417   014EBA  5030               	movf	doNenrd@tableIndex^(0+1280),w,c
 38418   014EBC  EC00  F0A9         	call	_getEN
 38419   014EC0  C50D  F52D         	movff	?_getEN,doNenrd@eventNumber
 38420   014EC4  C50E  F52E         	movff	?_getEN+1,doNenrd@eventNumber+1
 38421                           
 38422                           ;../../VLCBlib_PIC/event_teach_simple.c: 479:     sendMessage5(OPC_ENRSP, nodeNumber>>8,
      +                           nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 38423   014EC8  502C               	movf	(doNenrd@nodeNumber+1)^(0+1280),w,c
 38424   014ECA  6E25               	movwf	sendMessage5@data1^(0+1280),c
 38425   014ECC  C52B  F526         	movff	doNenrd@nodeNumber,sendMessage5@data2
 38426   014ED0  502E               	movf	(doNenrd@eventNumber+1)^(0+1280),w,c
 38427   014ED2  6E27               	movwf	sendMessage5@data3^(0+1280),c
 38428   014ED4  C52D  F528         	movff	doNenrd@eventNumber,sendMessage5@data4
 38429   014ED8  C52F  F529         	movff	doNenrd@index,sendMessage5@data5
 38430   014EDC  0EF2               	movlw	242
 38431   014EDE  ECCD  F0B1         	call	_sendMessage5
 38432   014EE2  0012               	return		;funcret
 38433   014EE4                     __end_of_doNenrd:
 38434                           	callstack 0
 38435                           
 38436 ;; *************** function _evtIdxToTableIndex *****************
 38437 ;; Defined at:
 38438 ;;		line 961 in file "../../VLCBlib_PIC/event_teach_simple.c"
 38439 ;; Parameters:    Size  Location     Type
 38440 ;;  evtIdx          1    wreg     unsigned char 
 38441 ;; Auto vars:     Size  Location     Type
 38442 ;;  evtIdx          1    0[COMRAM] unsigned char 
 38443 ;; Return value:  Size  Location     Type
 38444 ;;                  1    wreg      unsigned char 
 38445 ;; Registers used:
 38446 ;;		wreg, status,2, status,0
 38447 ;; Tracked objects:
 38448 ;;		On entry : 0/0
 38449 ;;		On exit  : 0/0
 38450 ;;		Unchanged: 0/0
 38451 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38455 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38456 ;;Total ram usage:        1 bytes
 38457 ;; Hardware stack levels used: 1
 38458 ;; Hardware stack levels required when called: 1
 38459 ;; This function calls:
 38460 ;;		Nothing
 38461 ;; This function is called by:
 38462 ;;		_doNenrd
 38463 ;;		_doReval
 38464 ;; This function uses a non-reentrant model
 38465 ;;
 38466                           
 38467                           	psect	text58
 38468   0167B4                     __ptext58:
 38469                           	callstack 0
 38470   0167B4                     _evtIdxToTableIndex:
 38471                           	callstack 122
 38472                           
 38473                           ;incstack = 0
 38474                           ;evtIdxToTableIndex@evtIdx stored from wreg
 38475   0167B4  6E01               	movwf	evtIdxToTableIndex@evtIdx^(0+1280),c
 38476                           
 38477                           ;../../VLCBlib_PIC/event_teach_simple.c: 962:     return evtIdx - 1;
 38478   0167B6  0401               	decf	evtIdxToTableIndex@evtIdx^(0+1280),w,c
 38479   0167B8  0012               	return		;funcret
 38480   0167BA                     __end_of_evtIdxToTableIndex:
 38481                           	callstack 0
 38482                           
 38483 ;; *************** function _doEvuln *****************
 38484 ;; Defined at:
 38485 ;;		line 599 in file "../../VLCBlib_PIC/event_teach_simple.c"
 38486 ;; Parameters:    Size  Location     Type
 38487 ;;  nodeNumber      2   50[COMRAM] unsigned short 
 38488 ;;  eventNumber     2   52[COMRAM] unsigned short 
 38489 ;; Auto vars:     Size  Location     Type
 38490 ;;  result          1   54[COMRAM] unsigned char 
 38491 ;; Return value:  Size  Location     Type
 38492 ;;                  1    wreg      void 
 38493 ;; Registers used:
 38494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 38495 ;; Tracked objects:
 38496 ;;		On entry : 0/0
 38497 ;;		On exit  : 0/0
 38498 ;;		Unchanged: 0/0
 38499 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38500 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38503 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38504 ;;Total ram usage:        5 bytes
 38505 ;; Hardware stack levels used: 1
 38506 ;; Hardware stack levels required when called: 8
 38507 ;; This function calls:
 38508 ;;		_removeEvent
 38509 ;;		_sendMessage2
 38510 ;;		_sendMessage3
 38511 ;;		_sendMessage5
 38512 ;; This function is called by:
 38513 ;;		_teachProcessMessage
 38514 ;; This function uses a non-reentrant model
 38515 ;;
 38516                           
 38517                           	psect	text59
 38518   014FCE                     __ptext59:
 38519                           	callstack 0
 38520   014FCE                     _doEvuln:
 38521                           	callstack 116
 38522                           
 38523                           ;../../VLCBlib_PIC/event_teach_simple.c: 600:     uint8_t result;;../../VLCBlib_PIC/even
      +                          t_teach_simple.c: 601:     result = removeEvent(nodeNumber, eventNumber);
 38524                           
 38525                           ;incstack = 0
 38526   014FCE  C533  F52E         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 38527   014FD2  C534  F52F         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 38528   014FD6  C535  F530         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 38529   014FDA  C536  F531         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 38530   014FDE  EC0B  F0B2         	call	_removeEvent	;wreg free
 38531   014FE2  6E37               	movwf	doEvuln@result^(0+1280),c
 38532                           
 38533                           ;../../VLCBlib_PIC/event_teach_simple.c: 602:     if (result) {
 38534   014FE4  5037               	movf	doEvuln@result^(0+1280),w,c
 38535   014FE6  B4D8               	btfsc	status,2,c
 38536   014FE8  D017               	goto	l9521
 38537                           
 38538                           ;../../VLCBlib_PIC/event_teach_simple.c: 603:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, result);
 38539   014FEA  C55F  F525         	movff	_nn+1,sendMessage3@data1
 38540   014FEE  C55E  F526         	movff	_nn,sendMessage3@data2
 38541   014FF2  C537  F527         	movff	doEvuln@result,sendMessage3@data3
 38542   014FF6  0E6F               	movlw	111
 38543   014FF8  EC8E  F0B1         	call	_sendMessage3
 38544                           
 38545                           ;../../VLCBlib_PIC/event_teach_simple.c: 605:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 38546   014FFC  C55F  F525         	movff	_nn+1,sendMessage5@data1
 38547   015000  C55E  F526         	movff	_nn,sendMessage5@data2
 38548   015004  0E95               	movlw	149
 38549   015006  6E27               	movwf	sendMessage5@data3^(0+1280),c
 38550   015008  0E04               	movlw	4
 38551   01500A  6E28               	movwf	sendMessage5@data4^(0+1280),c
 38552   01500C  C537  F529         	movff	doEvuln@result,sendMessage5@data5
 38553   015010  0EAF               	movlw	175
 38554   015012  ECCD  F0B1         	call	_sendMessage5
 38555   015016  0012               	return	
 38556   015018                     l9521:
 38557                           
 38558                           ;../../VLCBlib_PIC/event_teach_simple.c: 610:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 38559   015018  C55F  F525         	movff	_nn+1,sendMessage2@data1
 38560   01501C  C55E  F526         	movff	_nn,sendMessage2@data2
 38561   015020  0E59               	movlw	89
 38562   015022  ECA3  F0B1         	call	_sendMessage2
 38563                           
 38564                           ;../../VLCBlib_PIC/event_teach_simple.c: 612:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 38565   015026  C55F  F525         	movff	_nn+1,sendMessage5@data1
 38566   01502A  C55E  F526         	movff	_nn,sendMessage5@data2
 38567   01502E  0E95               	movlw	149
 38568   015030  6E27               	movwf	sendMessage5@data3^(0+1280),c
 38569   015032  0E04               	movlw	4
 38570   015034  6E28               	movwf	sendMessage5@data4^(0+1280),c
 38571   015036  0E00               	movlw	0
 38572   015038  6E29               	movwf	sendMessage5@data5^(0+1280),c
 38573   01503A  0EAF               	movlw	175
 38574   01503C  ECCD  F0B1         	call	_sendMessage5
 38575   015040  0012               	return		;funcret
 38576   015042                     __end_of_doEvuln:
 38577                           	callstack 0
 38578                           
 38579 ;; *************** function _removeEvent *****************
 38580 ;; Defined at:
 38581 ;;		line 705 in file "../../VLCBlib_PIC/event_teach_simple.c"
 38582 ;; Parameters:    Size  Location     Type
 38583 ;;  nodeNumber      2   45[COMRAM] unsigned short 
 38584 ;;  eventNumber     2   47[COMRAM] unsigned short 
 38585 ;; Auto vars:     Size  Location     Type
 38586 ;;  tableIndex      1   49[COMRAM] unsigned char 
 38587 ;; Return value:  Size  Location     Type
 38588 ;;                  1    wreg      unsigned char 
 38589 ;; Registers used:
 38590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38591 ;; Tracked objects:
 38592 ;;		On entry : 0/0
 38593 ;;		On exit  : 0/0
 38594 ;;		Unchanged: 0/0
 38595 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38596 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38597 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38599 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38600 ;;Total ram usage:        5 bytes
 38601 ;; Hardware stack levels used: 1
 38602 ;; Hardware stack levels required when called: 7
 38603 ;; This function calls:
 38604 ;;		_findEvent
 38605 ;;		_removeTableEntry
 38606 ;; This function is called by:
 38607 ;;		_doEvuln
 38608 ;; This function uses a non-reentrant model
 38609 ;;
 38610                           
 38611                           	psect	text60
 38612   016416                     __ptext60:
 38613                           	callstack 0
 38614   016416                     _removeEvent:
 38615                           	callstack 116
 38616                           
 38617                           ;../../VLCBlib_PIC/event_teach_simple.c: 707:     uint8_t tableIndex = findEvent(nodeNum
      +                          ber, eventNumber);
 38618                           
 38619                           ;incstack = 0
 38620   016416  C52E  F51E         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 38621   01641A  C52F  F51F         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 38622   01641E  C530  F520         	movff	removeEvent@eventNumber,findEvent@eventNumber
 38623   016422  C531  F521         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 38624   016426  ECAE  F0A4         	call	_findEvent	;wreg free
 38625   01642A  6E32               	movwf	removeEvent@tableIndex^(0+1280),c
 38626                           
 38627                           ;../../VLCBlib_PIC/event_teach_simple.c: 708:     if (tableIndex == 0xff) return CMDERR_
      +                          INVALID_EVENT;
 38628   01642C  2832               	incf	removeEvent@tableIndex^(0+1280),w,c
 38629   01642E  A4D8               	btfss	status,2,c
 38630   016430  D002               	goto	l9117
 38631   016432  0E07               	movlw	7
 38632   016434  0012               	return	
 38633   016436                     l9117:
 38634                           
 38635                           ;../../VLCBlib_PIC/event_teach_simple.c: 710:     return removeTableEntry(tableIndex);
 38636   016436  5032               	movf	removeEvent@tableIndex^(0+1280),w,c
 38637   016438  EC10  F09B         	call	_removeTableEntry
 38638   01643C  0012               	return		;funcret
 38639   01643E                     __end_of_removeEvent:
 38640                           	callstack 0
 38641                           
 38642 ;; *************** function _doEvlrn *****************
 38643 ;; Defined at:
 38644 ;;		line 522 in file "../../VLCBlib_PIC/event_teach_simple.c"
 38645 ;; Parameters:    Size  Location     Type
 38646 ;;  nodeNumber      2   76[COMRAM] unsigned short 
 38647 ;;  eventNumber     2   78[COMRAM] unsigned short 
 38648 ;;  evNum           1   80[COMRAM] unsigned char 
 38649 ;;  evVal           1   81[COMRAM] unsigned char 
 38650 ;; Auto vars:     Size  Location     Type
 38651 ;;		None
 38652 ;; Return value:  Size  Location     Type
 38653 ;;                  1    wreg      void 
 38654 ;; Registers used:
 38655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 38656 ;; Tracked objects:
 38657 ;;		On entry : 0/0
 38658 ;;		On exit  : 0/0
 38659 ;;		Unchanged: 0/0
 38660 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38661 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38664 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38665 ;;Total ram usage:        6 bytes
 38666 ;; Hardware stack levels used: 1
 38667 ;; Hardware stack levels required when called: 9
 38668 ;; This function calls:
 38669 ;;		_APP_addEvent
 38670 ;;		_sendMessage2
 38671 ;;		_sendMessage3
 38672 ;;		_sendMessage5
 38673 ;; This function is called by:
 38674 ;;		_teachProcessMessage
 38675 ;; This function uses a non-reentrant model
 38676 ;;
 38677                           
 38678                           	psect	text61
 38679   0142F2                     __ptext61:
 38680                           	callstack 0
 38681   0142F2                     _doEvlrn:
 38682                           	callstack 115
 38683                           
 38684                           ;../../VLCBlib_PIC/event_teach_simple.c: 524:     evNum--;
 38685                           
 38686                           ;incstack = 0
 38687   0142F2  0651               	decf	doEvlrn@evNum^(0+1280),f,c
 38688                           
 38689                           ;../../VLCBlib_PIC/event_teach_simple.c: 525:     if (evNum >= 13) {
 38690   0142F4  0E0C               	movlw	12
 38691   0142F6  6451               	cpfsgt	doEvlrn@evNum^(0+1280),c
 38692   0142F8  D017               	goto	l9497
 38693                           
 38694                           ;../../VLCBlib_PIC/event_teach_simple.c: 526:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, CMDERR_INV_EV_IDX);
 38695   0142FA  C55F  F525         	movff	_nn+1,sendMessage3@data1
 38696   0142FE  C55E  F526         	movff	_nn,sendMessage3@data2
 38697   014302  0E06               	movlw	6
 38698   014304  6E27               	movwf	sendMessage3@data3^(0+1280),c
 38699   014306  0E6F               	movlw	111
 38700   014308  EC8E  F0B1         	call	_sendMessage3
 38701                           
 38702                           ;../../VLCBlib_PIC/event_teach_simple.c: 528:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 38703   01430C  C55F  F525         	movff	_nn+1,sendMessage5@data1
 38704   014310  C55E  F526         	movff	_nn,sendMessage5@data2
 38705   014314  0ED2               	movlw	210
 38706   014316  6E27               	movwf	sendMessage5@data3^(0+1280),c
 38707   014318  0E04               	movlw	4
 38708   01431A  6E28               	movwf	sendMessage5@data4^(0+1280),c
 38709   01431C  0E06               	movlw	6
 38710   01431E  6E29               	movwf	sendMessage5@data5^(0+1280),c
 38711   014320  0EAF               	movlw	175
 38712   014322  ECCD  F0B1         	call	_sendMessage5
 38713   014326  0012               	return	
 38714   014328                     l9497:
 38715                           
 38716                           ;../../VLCBlib_PIC/event_teach_simple.c: 532:     APP_addEvent(nodeNumber, eventNumber, 
      +                          evNum, evVal, FALSE);
 38717   014328  C54D  F53F         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 38718   01432C  C54E  F540         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 38719   014330  C54F  F541         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 38720   014334  C550  F542         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 38721   014338  C551  F543         	movff	doEvlrn@evNum,APP_addEvent@evNum
 38722   01433C  C552  F544         	movff	doEvlrn@evVal,APP_addEvent@evVal
 38723   014340  0E00               	movlw	0
 38724   014342  6E45               	movwf	APP_addEvent@forceOwnNN^(0+1280),c
 38725   014344  EC40  F09D         	call	_APP_addEvent	;wreg free
 38726                           
 38727                           ;../../VLCBlib_PIC/event_teach_simple.c: 533:     if (errno) {
 38728   014348  0105               	movlb	5	; () banked
 38729   01434A  519F               	movf	_errno& (0+255),w,b
 38730   01434C  B4D8               	btfsc	status,2,c
 38731   01434E  D017               	goto	l9505
 38732                           
 38733                           ; BSR set to: 5
 38734                           ;../../VLCBlib_PIC/event_teach_simple.c: 535:         sendMessage3(OPC_CMDERR, nn.bytes.
      +                          hi, nn.bytes.lo, errno);
 38735   014350  C55F  F525         	movff	_nn+1,sendMessage3@data1
 38736   014354  C55E  F526         	movff	_nn,sendMessage3@data2
 38737   014358  C59F  F527         	movff	_errno,sendMessage3@data3
 38738   01435C  0E6F               	movlw	111
 38739   01435E  EC8E  F0B1         	call	_sendMessage3
 38740                           
 38741                           ;../../VLCBlib_PIC/event_teach_simple.c: 537:         sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, errno);
 38742   014362  C55F  F525         	movff	_nn+1,sendMessage5@data1
 38743   014366  C55E  F526         	movff	_nn,sendMessage5@data2
 38744   01436A  0ED2               	movlw	210
 38745   01436C  6E27               	movwf	sendMessage5@data3^(0+1280),c
 38746   01436E  0E04               	movlw	4
 38747   014370  6E28               	movwf	sendMessage5@data4^(0+1280),c
 38748   014372  C59F  F529         	movff	_errno,sendMessage5@data5
 38749   014376  0EAF               	movlw	175
 38750   014378  ECCD  F0B1         	call	_sendMessage5
 38751   01437C  0012               	return	
 38752   01437E                     l9505:
 38753                           
 38754                           ; BSR set to: 5
 38755                           ;../../VLCBlib_PIC/event_teach_simple.c: 542:     teachDiagnostics[0x01].asUint++;
 38756   01437E  4BC8               	infsnz	(_teachDiagnostics+2)& (0+255),f,b
 38757   014380  2BC9               	incf	(_teachDiagnostics+3)& (0+255),f,b
 38758                           
 38759                           ; BSR set to: 5
 38760                           ;../../VLCBlib_PIC/event_teach_simple.c: 544:     sendMessage2(OPC_WRACK, nn.bytes.hi, n
      +                          n.bytes.lo);
 38761   014382  C55F  F525         	movff	_nn+1,sendMessage2@data1
 38762   014386  C55E  F526         	movff	_nn,sendMessage2@data2
 38763   01438A  0E59               	movlw	89
 38764   01438C  ECA3  F0B1         	call	_sendMessage2
 38765                           
 38766                           ;../../VLCBlib_PIC/event_teach_simple.c: 546:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 38767   014390  C55F  F525         	movff	_nn+1,sendMessage5@data1
 38768   014394  C55E  F526         	movff	_nn,sendMessage5@data2
 38769   014398  0ED2               	movlw	210
 38770   01439A  6E27               	movwf	sendMessage5@data3^(0+1280),c
 38771   01439C  0E04               	movlw	4
 38772   01439E  6E28               	movwf	sendMessage5@data4^(0+1280),c
 38773   0143A0  0E00               	movlw	0
 38774   0143A2  6E29               	movwf	sendMessage5@data5^(0+1280),c
 38775   0143A4  0EAF               	movlw	175
 38776   0143A6  ECCD  F0B1         	call	_sendMessage5
 38777   0143AA  0012               	return		;funcret
 38778   0143AC                     __end_of_doEvlrn:
 38779                           	callstack 0
 38780                           
 38781 ;; *************** function _APP_addEvent *****************
 38782 ;; Defined at:
 38783 ;;		line 258 in file "../canpan3Events.c"
 38784 ;; Parameters:    Size  Location     Type
 38785 ;;  nodeNumber      2   62[COMRAM] unsigned short 
 38786 ;;  eventNumber     2   64[COMRAM] unsigned short 
 38787 ;;  evNum           1   66[COMRAM] unsigned char 
 38788 ;;  evVal           1   67[COMRAM] unsigned char 
 38789 ;;  forceOwnNN      1   68[COMRAM] enum E23257
 38790 ;; Auto vars:     Size  Location     Type
 38791 ;;  oti             1   75[COMRAM] unsigned char 
 38792 ;;  switchNo        1   74[COMRAM] unsigned char 
 38793 ;;  tableIndex      1   73[COMRAM] unsigned char 
 38794 ;;  leds            1   72[COMRAM] unsigned char 
 38795 ;;  prevSwitchNo    1    0        unsigned char 
 38796 ;; Return value:  Size  Location     Type
 38797 ;;                  1    wreg      unsigned char 
 38798 ;; Registers used:
 38799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38800 ;; Tracked objects:
 38801 ;;		On entry : 0/0
 38802 ;;		On exit  : 0/0
 38803 ;;		Unchanged: 0/0
 38804 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38805 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38806 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38807 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38808 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38809 ;;Total ram usage:       14 bytes
 38810 ;; Hardware stack levels used: 1
 38811 ;; Hardware stack levels required when called: 8
 38812 ;; This function calls:
 38813 ;;		_addEvent
 38814 ;;		_findEvent
 38815 ;;		_getEVs
 38816 ;;		_writeEv
 38817 ;;		_writeNVM
 38818 ;; This function is called by:
 38819 ;;		_doEvlrn
 38820 ;; This function uses a non-reentrant model
 38821 ;;
 38822                           
 38823                           	psect	text62
 38824   013A80                     __ptext62:
 38825                           	callstack 0
 38826   013A80                     _APP_addEvent:
 38827                           	callstack 115
 38828                           
 38829                           ;../canpan3Events.c: 259:     uint8_t tableIndex;;../canpan3Events.c: 260:     uint8_t o
      +                          ti;;../canpan3Events.c: 261:     uint8_t switchNo;;../canpan3Events.c: 262:     uint8_t 
      +                          prevSwitchNo;;../canpan3Events.c: 263:     uint8_t leds;;../canpan3Events.c: 265:     if
      +                           (evNum == 1) {
 38830                           
 38831                           ;incstack = 0
 38832   013A80  0443               	decf	APP_addEvent@evNum^(0+1280),w,c
 38833   013A82  A4D8               	btfss	status,2,c
 38834   013A84  D069               	goto	l9045
 38835                           
 38836                           ;../canpan3Events.c: 266:         switchNo = evVal;
 38837   013A86  C544  F54B         	movff	APP_addEvent@evVal,APP_addEvent@switchNo
 38838                           
 38839                           ;../canpan3Events.c: 267:         tableIndex = findEvent(nodeNumber, eventNumber);
 38840   013A8A  C53F  F51E         	movff	APP_addEvent@nodeNumber,findEvent@nodeNumber
 38841   013A8E  C540  F51F         	movff	APP_addEvent@nodeNumber+1,findEvent@nodeNumber+1
 38842   013A92  C541  F520         	movff	APP_addEvent@eventNumber,findEvent@eventNumber
 38843   013A96  C542  F521         	movff	APP_addEvent@eventNumber+1,findEvent@eventNumber+1
 38844   013A9A  ECAE  F0A4         	call	_findEvent	;wreg free
 38845   013A9E  6E4A               	movwf	APP_addEvent@tableIndex^(0+1280),c
 38846                           
 38847                           ;../canpan3Events.c: 269:         if ((switchNo > 0) && (switchNo <= ((8*4)+1))) {
 38848   013AA0  504B               	movf	APP_addEvent@switchNo^(0+1280),w,c
 38849   013AA2  B4D8               	btfsc	status,2,c
 38850   013AA4  D058               	goto	l218
 38851   013AA6  0E22               	movlw	34
 38852   013AA8  604B               	cpfslt	APP_addEvent@switchNo^(0+1280),c
 38853   013AAA  D055               	goto	l218
 38854                           
 38855                           ;../canpan3Events.c: 270:             oti = switch2Event[switchNo-1];
 38856   013AAC  0EFF               	movlw	low (_switch2Event+65535)
 38857   013AAE  244B               	addwf	APP_addEvent@switchNo^(0+1280),w,c
 38858   013AB0  6ED9               	movwf	fsr2l,c
 38859   013AB2  6ADA               	clrf	fsr2h,c
 38860   013AB4  0E05               	movlw	high (_switch2Event+65535)
 38861   013AB6  22DA               	addwfc	fsr2h,f,c
 38862   013AB8  50DF               	movf	indf2,w,c
 38863   013ABA  6E4C               	movwf	APP_addEvent@oti^(0+1280),c
 38864                           
 38865                           ;../canpan3Events.c: 271:             if ((oti != 0xff) && (oti != tableIndex)){
 38866   013ABC  284C               	incf	APP_addEvent@oti^(0+1280),w,c
 38867   013ABE  B4D8               	btfsc	status,2,c
 38868   013AC0  D041               	goto	l9043
 38869   013AC2  504A               	movf	APP_addEvent@tableIndex^(0+1280),w,c
 38870   013AC4  184C               	xorwf	APP_addEvent@oti^(0+1280),w,c
 38871   013AC6  B4D8               	btfsc	status,2,c
 38872   013AC8  D03D               	goto	l9043
 38873                           
 38874                           ;../canpan3Events.c: 273:                 writeEv(oti, 1, 0);
 38875   013ACA  0E01               	movlw	1
 38876   013ACC  6E15               	movwf	writeEv@evNum^(0+1280),c
 38877   013ACE  0E00               	movlw	0
 38878   013AD0  6E16               	movwf	writeEv@evVal^(0+1280),c
 38879   013AD2  504C               	movf	APP_addEvent@oti^(0+1280),w,c
 38880   013AD4  EC3D  F0AB         	call	_writeEv
 38881                           
 38882                           ;../canpan3Events.c: 275:                 getEVs(oti);
 38883   013AD8  504C               	movf	APP_addEvent@oti^(0+1280),w,c
 38884   013ADA  ECD8  F0A9         	call	_getEVs
 38885                           
 38886                           ;../canpan3Events.c: 278:                 leds = evs[4] | evs[5] | evs[6] | evs[7];
 38887   013ADE  0106               	movlb	6	; () banked
 38888   013AE0  5175               	movf	(_evs+4)& (0+255),w,b
 38889   013AE2  1176               	iorwf	(_evs+5)& (0+255),w,b
 38890   013AE4  1177               	iorwf	(_evs+6)& (0+255),w,b
 38891   013AE6  1178               	iorwf	(_evs+7)& (0+255),w,b
 38892   013AE8  6E49               	movwf	APP_addEvent@leds^(0+1280),c
 38893                           
 38894                           ; BSR set to: 6
 38895                           ;../canpan3Events.c: 279:                 if (leds == 0) {
 38896   013AEA  5049               	movf	APP_addEvent@leds^(0+1280),w,c
 38897   013AEC  A4D8               	btfss	status,2,c
 38898   013AEE  D02A               	goto	l9043
 38899                           
 38900                           ; BSR set to: 6
 38901                           ;../canpan3Events.c: 282:                     writeNVM(FLASH_NVM_TYPE, 0x1E800 + (sizeof
      +                          (Event) + 1 + 13)*oti+3, 0);
 38902   013AF0  504C               	movf	APP_addEvent@oti^(0+1280),w,c
 38903   013AF2  0D12               	mullw	18
 38904   013AF4  C4F3 F546          	movff	prodl,??_APP_addEvent
 38905   013AF8  C4F4 F547          	movff	prodh,??_APP_addEvent+1
 38906   013AFC  6A48               	clrf	(??_APP_addEvent+2)^(0+1280),c
 38907   013AFE  0E03               	movlw	3
 38908   013B00  2446               	addwf	??_APP_addEvent^(0+1280),w,c
 38909   013B02  6E0E               	movwf	writeNVM@index^(0+1280),c
 38910   013B04  0EE8               	movlw	232
 38911   013B06  2047               	addwfc	(??_APP_addEvent+1)^(0+1280),w,c
 38912   013B08  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 38913   013B0A  0E01               	movlw	1
 38914   013B0C  2048               	addwfc	(??_APP_addEvent+2)^(0+1280),w,c
 38915   013B0E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 38916   013B10  0E00               	movlw	0
 38917   013B12  6E11               	movwf	writeNVM@value^(0+1280),c
 38918   013B14  0E01               	movlw	1
 38919   013B16  ECC3  F0AD         	call	_writeNVM
 38920                           
 38921                           ;../canpan3Events.c: 283:                     writeNVM(FLASH_NVM_TYPE, 0x1E800 + (sizeof
      +                          (Event) + 1 + 13)*oti+2, 0);
 38922   013B1A  504C               	movf	APP_addEvent@oti^(0+1280),w,c
 38923   013B1C  0D12               	mullw	18
 38924   013B1E  C4F3 F546          	movff	prodl,??_APP_addEvent
 38925   013B22  C4F4 F547          	movff	prodh,??_APP_addEvent+1
 38926   013B26  6A48               	clrf	(??_APP_addEvent+2)^(0+1280),c
 38927   013B28  0E02               	movlw	2
 38928   013B2A  2446               	addwf	??_APP_addEvent^(0+1280),w,c
 38929   013B2C  6E0E               	movwf	writeNVM@index^(0+1280),c
 38930   013B2E  0EE8               	movlw	232
 38931   013B30  2047               	addwfc	(??_APP_addEvent+1)^(0+1280),w,c
 38932   013B32  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 38933   013B34  0E01               	movlw	1
 38934   013B36  2048               	addwfc	(??_APP_addEvent+2)^(0+1280),w,c
 38935   013B38  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 38936   013B3A  0E00               	movlw	0
 38937   013B3C  6E11               	movwf	writeNVM@value^(0+1280),c
 38938   013B3E  0E01               	movlw	1
 38939   013B40  ECC3  F0AD         	call	_writeNVM
 38940   013B44                     l9043:
 38941                           
 38942                           ;../canpan3Events.c: 286:             switch2Event[switchNo-1] = tableIndex;
 38943   013B44  0EFF               	movlw	low (_switch2Event+65535)
 38944   013B46  244B               	addwf	APP_addEvent@switchNo^(0+1280),w,c
 38945   013B48  6ED9               	movwf	fsr2l,c
 38946   013B4A  6ADA               	clrf	fsr2h,c
 38947   013B4C  0E05               	movlw	high (_switch2Event+65535)
 38948   013B4E  22DA               	addwfc	fsr2h,f,c
 38949   013B50  C54A  F4DF         	movff	APP_addEvent@tableIndex,indf2
 38950                           
 38951                           ;../canpan3Events.c: 287:         } else {
 38952   013B54  D001               	goto	l9045
 38953   013B56                     l218:
 38954                           
 38955                           ;../canpan3Events.c: 291:             evVal = 0;
 38956   013B56  6A44               	clrf	APP_addEvent@evVal^(0+1280),c
 38957   013B58                     l9045:
 38958                           
 38959                           ;../canpan3Events.c: 294:     return addEvent(nodeNumber, eventNumber, evNum, evVal, for
      +                          ceOwnNN);;	Return value of _APP_addEvent is never used
 38960   013B58  C53F  F52B         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 38961   013B5C  C540  F52C         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 38962   013B60  C541  F52D         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 38963   013B64  C542  F52E         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 38964   013B68  C543  F52F         	movff	APP_addEvent@evNum,addEvent@evNum
 38965   013B6C  C544  F530         	movff	APP_addEvent@evVal,addEvent@evVal
 38966   013B70  C545  F531         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 38967   013B74  ECC3  F094         	call	_addEvent	;wreg free
 38968   013B78  0012               	return		;funcret
 38969   013B7A                     __end_of_APP_addEvent:
 38970                           	callstack 0
 38971                           
 38972 ;; *************** function _rebuildLookupTable *****************
 38973 ;; Defined at:
 38974 ;;		line 110 in file "../canpan3Events.c"
 38975 ;; Parameters:    Size  Location     Type
 38976 ;;		None
 38977 ;; Auto vars:     Size  Location     Type
 38978 ;;  swNo            2   24[COMRAM] short 
 38979 ;;  i               1   27[COMRAM] unsigned char 
 38980 ;;  sw              1   26[COMRAM] unsigned char 
 38981 ;; Return value:  Size  Location     Type
 38982 ;;                  1    wreg      void 
 38983 ;; Registers used:
 38984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38985 ;; Tracked objects:
 38986 ;;		On entry : 0/0
 38987 ;;		On exit  : 0/0
 38988 ;;		Unchanged: 0/0
 38989 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 38990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38991 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38993 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 38994 ;;Total ram usage:        4 bytes
 38995 ;; Hardware stack levels used: 1
 38996 ;; Hardware stack levels required when called: 4
 38997 ;; This function calls:
 38998 ;;		_getEv
 38999 ;; This function is called by:
 39000 ;;		_initEvents
 39001 ;;		_APP_preProcessMessage
 39002 ;; This function uses a non-reentrant model
 39003 ;;
 39004                           
 39005                           	psect	text63
 39006   015554                     __ptext63:
 39007                           	callstack 0
 39008   015554                     _rebuildLookupTable:
 39009                           	callstack 120
 39010                           
 39011                           ;../canpan3Events.c: 111:     uint8_t sw;;../canpan3Events.c: 112:     int16_t swNo;;../
      +                          canpan3Events.c: 113:     uint8_t i;;../canpan3Events.c: 116:     for (sw=0; sw < ((8*4)
      +                          +1); sw++) {
 39012                           
 39013                           ;incstack = 0
 39014   015554  6A1B               	clrf	rebuildLookupTable@sw^(0+1280),c
 39015   015556                     l9899:
 39016                           
 39017                           ;../canpan3Events.c: 117:         switch2Event[sw] = 0xff;
 39018   015556  0E00               	movlw	low _switch2Event
 39019   015558  241B               	addwf	rebuildLookupTable@sw^(0+1280),w,c
 39020   01555A  6ED9               	movwf	fsr2l,c
 39021   01555C  6ADA               	clrf	fsr2h,c
 39022   01555E  0E06               	movlw	high _switch2Event
 39023   015560  22DA               	addwfc	fsr2h,f,c
 39024   015562  0EFF               	movlw	255
 39025   015564  6EDF               	movwf	indf2,c
 39026                           
 39027                           ;../canpan3Events.c: 118:     }
 39028   015566  2A1B               	incf	rebuildLookupTable@sw^(0+1280),f,c
 39029   015568  0E20               	movlw	32
 39030   01556A  641B               	cpfsgt	rebuildLookupTable@sw^(0+1280),c
 39031   01556C  D7F4               	goto	l9899
 39032                           
 39033                           ;../canpan3Events.c: 120:     for (i=0; i<254; i++) {
 39034   01556E  6A1C               	clrf	rebuildLookupTable@i^(0+1280),c
 39035   015570                     l9909:
 39036                           
 39037                           ;../canpan3Events.c: 121:         swNo = getEv(i, 1);
 39038   015570  0E01               	movlw	1
 39039   015572  6E0D               	movwf	getEv@evNum^(0+1280),c
 39040   015574  501C               	movf	rebuildLookupTable@i^(0+1280),w,c
 39041   015576  ECA3  F0A9         	call	_getEv
 39042   01557A  C50D  F519         	movff	?_getEv,rebuildLookupTable@swNo
 39043   01557E  C50E  F51A         	movff	?_getEv+1,rebuildLookupTable@swNo+1
 39044                           
 39045                           ;../canpan3Events.c: 122:         if ((swNo >0) && ( swNo <= ((8*4)+1))) {
 39046   015582  BE1A               	btfsc	(rebuildLookupTable@swNo+1)^(0+1280),7,c
 39047   015584  D015               	goto	l9917
 39048   015586  501A               	movf	(rebuildLookupTable@swNo+1)^(0+1280),w,c
 39049   015588  E103               	bnz	u7710
 39050   01558A  0419               	decf	rebuildLookupTable@swNo^(0+1280),w,c
 39051   01558C  A0D8               	btfss	status,0,c
 39052   01558E  D010               	goto	l9917
 39053   015590                     u7710:
 39054   015590  BE1A               	btfsc	(rebuildLookupTable@swNo+1)^(0+1280),7,c
 39055   015592  D006               	goto	u7720
 39056   015594  501A               	movf	(rebuildLookupTable@swNo+1)^(0+1280),w,c
 39057   015596  E10C               	bnz	l9917
 39058   015598  0E22               	movlw	34
 39059   01559A  5C19               	subwf	rebuildLookupTable@swNo^(0+1280),w,c
 39060   01559C  B0D8               	btfsc	status,0,c
 39061   01559E  D008               	goto	l9917
 39062   0155A0                     u7720:
 39063                           
 39064                           ;../canpan3Events.c: 123:             switch2Event[swNo-1] = i;
 39065   0155A0  0EFF               	movlw	low (_switch2Event+65535)
 39066   0155A2  2419               	addwf	rebuildLookupTable@swNo^(0+1280),w,c
 39067   0155A4  6ED9               	movwf	fsr2l,c
 39068   0155A6  0E05               	movlw	high (_switch2Event+65535)
 39069   0155A8  201A               	addwfc	(rebuildLookupTable@swNo+1)^(0+1280),w,c
 39070   0155AA  6EDA               	movwf	fsr2h,c
 39071   0155AC  C51C  F4DF         	movff	rebuildLookupTable@i,indf2
 39072   0155B0                     l9917:
 39073                           
 39074                           ;../canpan3Events.c: 125:     }
 39075   0155B0  2A1C               	incf	rebuildLookupTable@i^(0+1280),f,c
 39076   0155B2  0EFD               	movlw	253
 39077   0155B4  641C               	cpfsgt	rebuildLookupTable@i^(0+1280),c
 39078   0155B6  D7DC               	goto	l9909
 39079   0155B8  0012               	return	
 39080   0155BA                     __end_of_rebuildLookupTable:
 39081                           	callstack 0
 39082                           
 39083 ;; *************** function _APP_GetEventIndexState *****************
 39084 ;; Defined at:
 39085 ;;		line 387 in file "../canpan3Events.c"
 39086 ;; Parameters:    Size  Location     Type
 39087 ;;  tableIndex      1    wreg     unsigned char 
 39088 ;; Auto vars:     Size  Location     Type
 39089 ;;  tableIndex      1   27[COMRAM] unsigned char 
 39090 ;;  switchNo        1   28[COMRAM] unsigned char 
 39091 ;; Return value:  Size  Location     Type
 39092 ;;                  1    wreg      enum E23277
 39093 ;; Registers used:
 39094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39095 ;; Tracked objects:
 39096 ;;		On entry : 0/0
 39097 ;;		On exit  : 0/0
 39098 ;;		Unchanged: 0/0
 39099 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39101 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39103 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39104 ;;Total ram usage:        2 bytes
 39105 ;; Hardware stack levels used: 1
 39106 ;; Hardware stack levels required when called: 5
 39107 ;; This function calls:
 39108 ;;		_APP_isProducedEvent
 39109 ;;		_getEVs
 39110 ;; This function is called by:
 39111 ;;		_sodTRCallback
 39112 ;;		_producerProcessMessage
 39113 ;; This function uses a non-reentrant model
 39114 ;;
 39115                           
 39116                           	psect	text64
 39117   015D40                     __ptext64:
 39118                           	callstack 0
 39119   015D40                     _APP_GetEventIndexState:
 39120                           	callstack 119
 39121                           
 39122                           ;incstack = 0
 39123                           ;APP_GetEventIndexState@tableIndex stored from wreg
 39124   015D40  6E1C               	movwf	APP_GetEventIndexState@tableIndex^(0+1280),c
 39125                           
 39126                           ;../canpan3Events.c: 388:     uint8_t switchNo;;../canpan3Events.c: 391:     if ( ! APP_
      +                          isProducedEvent(tableIndex)) {
 39127   015D42  501C               	movf	APP_GetEventIndexState@tableIndex^(0+1280),w,c
 39128   015D44  ECC3  F0AF         	call	_APP_isProducedEvent
 39129   015D48  0900               	iorlw	0
 39130   015D4A  A4D8               	btfss	status,2,c
 39131   015D4C  D002               	goto	l9321
 39132   015D4E                     u7230:
 39133                           
 39134                           ;../canpan3Events.c: 392:         return EVENT_UNKNOWN;
 39135   015D4E  0EFF               	movlw	255
 39136   015D50  0012               	return	
 39137   015D52                     l9321:
 39138                           
 39139                           ;../canpan3Events.c: 395:     getEVs(tableIndex);
 39140   015D52  501C               	movf	APP_GetEventIndexState@tableIndex^(0+1280),w,c
 39141   015D54  ECD8  F0A9         	call	_getEVs
 39142                           
 39143                           ;../canpan3Events.c: 396:     switchNo = evs[1];
 39144   015D58  C672  F51D         	movff	_evs+1,APP_GetEventIndexState@switchNo
 39145                           
 39146                           ;../canpan3Events.c: 397:     if ((switchNo < 1) || (switchNo > (8*4))) {
 39147   015D5C  501D               	movf	APP_GetEventIndexState@switchNo^(0+1280),w,c
 39148   015D5E  B4D8               	btfsc	status,2,c
 39149   015D60  D7F6               	goto	u7230
 39150   015D62  0E20               	movlw	32
 39151   015D64  641D               	cpfsgt	APP_GetEventIndexState@switchNo^(0+1280),c
 39152   015D66  D001               	goto	l9333
 39153   015D68  D7F2               	goto	u7230
 39154   015D6A                     l9333:
 39155                           
 39156                           ;../canpan3Events.c: 401:     return outputState[switchNo-1] ? EVENT_ON : EVENT_OFF;
 39157   015D6A  0E40               	movlw	low (_outputState+65535)
 39158   015D6C  241D               	addwf	APP_GetEventIndexState@switchNo^(0+1280),w,c
 39159   015D6E  6ED9               	movwf	fsr2l,c
 39160   015D70  6ADA               	clrf	fsr2h,c
 39161   015D72  0E06               	movlw	high (_outputState+65535)
 39162   015D74  22DA               	addwfc	fsr2h,f,c
 39163   015D76  50DF               	movf	indf2,w,c
 39164   015D78  B4D8               	btfsc	status,2,c
 39165   015D7A  D002               	goto	u7260
 39166   015D7C  0E01               	movlw	1
 39167   015D7E  0012               	return	
 39168   015D80                     u7260:
 39169   015D80  0E00               	movlw	0
 39170   015D82  0012               	return		;funcret
 39171   015D84                     __end_of_APP_GetEventIndexState:
 39172                           	callstack 0
 39173                           
 39174 ;; *************** function _APP_isProducedEvent *****************
 39175 ;; Defined at:
 39176 ;;		line 163 in file "../canpan3Events.c"
 39177 ;; Parameters:    Size  Location     Type
 39178 ;;  tableIndex      1    wreg     unsigned char 
 39179 ;; Auto vars:     Size  Location     Type
 39180 ;;  tableIndex      1   24[COMRAM] unsigned char 
 39181 ;;  ev              2   25[COMRAM] short 
 39182 ;; Return value:  Size  Location     Type
 39183 ;;                  1    wreg      unsigned char 
 39184 ;; Registers used:
 39185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39186 ;; Tracked objects:
 39187 ;;		On entry : 0/0
 39188 ;;		On exit  : 0/0
 39189 ;;		Unchanged: 0/0
 39190 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39192 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39194 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39195 ;;Total ram usage:        3 bytes
 39196 ;; Hardware stack levels used: 1
 39197 ;; Hardware stack levels required when called: 4
 39198 ;; This function calls:
 39199 ;;		_getEv
 39200 ;; This function is called by:
 39201 ;;		_APP_preProcessMessage
 39202 ;;		_APP_GetEventIndexState
 39203 ;; This function uses a non-reentrant model
 39204 ;;
 39205                           
 39206                           	psect	text65
 39207   015F86                     __ptext65:
 39208                           	callstack 0
 39209   015F86                     _APP_isProducedEvent:
 39210                           	callstack 119
 39211                           
 39212                           ;incstack = 0
 39213                           ;APP_isProducedEvent@tableIndex stored from wreg
 39214   015F86  6E19               	movwf	APP_isProducedEvent@tableIndex^(0+1280),c
 39215                           
 39216                           ;../canpan3Events.c: 164:     int16_t ev;;../canpan3Events.c: 166:     ev = getEv(tableI
      +                          ndex, 1);
 39217   015F88  0E01               	movlw	1
 39218   015F8A  6E0D               	movwf	getEv@evNum^(0+1280),c
 39219   015F8C  5019               	movf	APP_isProducedEvent@tableIndex^(0+1280),w,c
 39220   015F8E  ECA3  F0A9         	call	_getEv
 39221   015F92  C50D  F51A         	movff	?_getEv,APP_isProducedEvent@ev
 39222   015F96  C50E  F51B         	movff	?_getEv+1,APP_isProducedEvent@ev+1
 39223                           
 39224                           ;../canpan3Events.c: 167:     if ((ev > 0) && (ev <= ((8*4)+1))) {
 39225   015F9A  BE1B               	btfsc	(APP_isProducedEvent@ev+1)^(0+1280),7,c
 39226   015F9C  D00F               	goto	l9015
 39227   015F9E  501B               	movf	(APP_isProducedEvent@ev+1)^(0+1280),w,c
 39228   015FA0  E103               	bnz	u6720
 39229   015FA2  041A               	decf	APP_isProducedEvent@ev^(0+1280),w,c
 39230   015FA4  A0D8               	btfss	status,0,c
 39231   015FA6  D00A               	goto	l9015
 39232   015FA8                     u6720:
 39233   015FA8  BE1B               	btfsc	(APP_isProducedEvent@ev+1)^(0+1280),7,c
 39234   015FAA  D006               	goto	u6730
 39235   015FAC  501B               	movf	(APP_isProducedEvent@ev+1)^(0+1280),w,c
 39236   015FAE  E106               	bnz	l9015
 39237   015FB0  0E22               	movlw	34
 39238   015FB2  5C1A               	subwf	APP_isProducedEvent@ev^(0+1280),w,c
 39239   015FB4  B0D8               	btfsc	status,0,c
 39240   015FB6  D002               	goto	l9015
 39241   015FB8                     u6730:
 39242                           
 39243                           ;../canpan3Events.c: 168:         return 1;
 39244   015FB8  0E01               	movlw	1
 39245   015FBA  0012               	return	
 39246   015FBC                     l9015:
 39247                           
 39248                           ;../canpan3Events.c: 170:     return 0;
 39249   015FBC  0E00               	movlw	0
 39250   015FBE  0012               	return		;funcret
 39251   015FC0                     __end_of_APP_isProducedEvent:
 39252                           	callstack 0
 39253                           
 39254 ;; *************** function _setNV *****************
 39255 ;; Defined at:
 39256 ;;		line 218 in file "../../VLCBlib_PIC/nv.c"
 39257 ;; Parameters:    Size  Location     Type
 39258 ;;  index           1    wreg     unsigned char 
 39259 ;;  value           1   20[COMRAM] unsigned char 
 39260 ;; Auto vars:     Size  Location     Type
 39261 ;;  index           1   24[COMRAM] unsigned char 
 39262 ;;  oldValue        1   23[COMRAM] unsigned char 
 39263 ;; Return value:  Size  Location     Type
 39264 ;;                  1    wreg      unsigned char 
 39265 ;; Registers used:
 39266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39267 ;; Tracked objects:
 39268 ;;		On entry : 0/0
 39269 ;;		On exit  : 0/0
 39270 ;;		Unchanged: 0/0
 39271 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39272 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39273 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39274 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39275 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39276 ;;Total ram usage:        5 bytes
 39277 ;; Hardware stack levels used: 1
 39278 ;; Hardware stack levels required when called: 6
 39279 ;; This function calls:
 39280 ;;		_APP_nvValidate
 39281 ;;		_APP_nvValueChanged
 39282 ;;		_writeNVM
 39283 ;; This function is called by:
 39284 ;;		_nvProcessMessage
 39285 ;; This function uses a non-reentrant model
 39286 ;;
 39287                           
 39288                           	psect	text66
 39289   014EE4                     __ptext66:
 39290                           	callstack 0
 39291   014EE4                     _setNV:
 39292                           	callstack 118
 39293                           
 39294                           ;incstack = 0
 39295                           ;setNV@index stored from wreg
 39296   014EE4  6E19               	movwf	setNV@index^(0+1280),c
 39297                           
 39298                           ;../../VLCBlib_PIC/nv.c: 219:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 221:     if 
      +                          (index > 67) return CMDERR_INV_NV_IDX;
 39299   014EE6  0E43               	movlw	67
 39300   014EE8  6419               	cpfsgt	setNV@index^(0+1280),c
 39301   014EEA  D002               	goto	l9815
 39302   014EEC  0E0A               	movlw	10
 39303   014EEE  0012               	return	
 39304   014EF0                     l9815:
 39305                           
 39306                           ;../../VLCBlib_PIC/nv.c: 222:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 39307   014EF0  C515  F501         	movff	setNV@value,APP_nvValidate@value
 39308   014EF4  5019               	movf	setNV@index^(0+1280),w,c
 39309   014EF6  EC51  F0B3         	call	_APP_nvValidate
 39310   014EFA  0900               	iorlw	0
 39311   014EFC  A4D8               	btfss	status,2,c
 39312   014EFE  D002               	goto	l9821
 39313   014F00  0E0C               	movlw	12
 39314   014F02  0012               	return	
 39315   014F04                     l9821:
 39316                           
 39317                           ;../../VLCBlib_PIC/nv.c: 224:     oldValue = nvCache[index];
 39318   014F04  0E00               	movlw	low _nvCache
 39319   014F06  2419               	addwf	setNV@index^(0+1280),w,c
 39320   014F08  6ED9               	movwf	fsr2l,c
 39321   014F0A  6ADA               	clrf	fsr2h,c
 39322   014F0C  0E07               	movlw	high _nvCache
 39323   014F0E  22DA               	addwfc	fsr2h,f,c
 39324   014F10  50DF               	movf	indf2,w,c
 39325   014F12  6E18               	movwf	setNV@oldValue^(0+1280),c
 39326                           
 39327                           ;../../VLCBlib_PIC/nv.c: 225:     nvCache[index] = value;
 39328   014F14  0E00               	movlw	low _nvCache
 39329   014F16  2419               	addwf	setNV@index^(0+1280),w,c
 39330   014F18  6ED9               	movwf	fsr2l,c
 39331   014F1A  6ADA               	clrf	fsr2h,c
 39332   014F1C  0E07               	movlw	high _nvCache
 39333   014F1E  22DA               	addwfc	fsr2h,f,c
 39334   014F20  C515  F4DF         	movff	setNV@value,indf2
 39335                           
 39336                           ;../../VLCBlib_PIC/nv.c: 226:     writeNVM(EEPROM_NVM_TYPE, 0x200 +index, value);
 39337   014F24  0E00               	movlw	0
 39338   014F26  2419               	addwf	setNV@index^(0+1280),w,c
 39339   014F28  6E16               	movwf	??_setNV^(0+1280),c
 39340   014F2A  6A17               	clrf	(??_setNV+1)^(0+1280),c
 39341   014F2C  0E02               	movlw	2
 39342   014F2E  2217               	addwfc	(??_setNV+1)^(0+1280),f,c
 39343   014F30  C516  F50E         	movff	??_setNV,writeNVM@index
 39344   014F34  C517  F50F         	movff	??_setNV+1,writeNVM@index+1
 39345   014F38  6A10               	clrf	(writeNVM@index+2)^(0+1280),c
 39346   014F3A  BE0F               	btfsc	(writeNVM@index+1)^(0+1280),7,c
 39347   014F3C  0610               	decf	(writeNVM@index+2)^(0+1280),f,c
 39348   014F3E  C515  F511         	movff	setNV@value,writeNVM@value
 39349   014F42  0E00               	movlw	0
 39350   014F44  ECC3  F0AD         	call	_writeNVM
 39351                           
 39352                           ;../../VLCBlib_PIC/nv.c: 231:     APP_nvValueChanged(index, value, oldValue);
 39353   014F48  C515  F501         	movff	setNV@value,APP_nvValueChanged@value
 39354   014F4C  C518  F502         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 39355   014F50  5019               	movf	setNV@index^(0+1280),w,c
 39356   014F52  ECEA  F0B3         	call	_APP_nvValueChanged
 39357                           
 39358                           ;../../VLCBlib_PIC/nv.c: 232:     return 0;
 39359   014F56  0E00               	movlw	0
 39360   014F58  0012               	return		;funcret
 39361   014F5A                     __end_of_setNV:
 39362                           	callstack 0
 39363                           
 39364 ;; *************** function _APP_nvValueChanged *****************
 39365 ;; Defined at:
 39366 ;;		line 79 in file "../canpan3Nv.c"
 39367 ;; Parameters:    Size  Location     Type
 39368 ;;  index           1    wreg     unsigned char 
 39369 ;;  value           1    0[COMRAM] unsigned char 
 39370 ;;  oldValue        1    1[COMRAM] unsigned char 
 39371 ;; Auto vars:     Size  Location     Type
 39372 ;;  index           1    0[COMRAM] unsigned char 
 39373 ;; Return value:  Size  Location     Type
 39374 ;;                  1    wreg      void 
 39375 ;; Registers used:
 39376 ;;		wreg
 39377 ;; Tracked objects:
 39378 ;;		On entry : 0/0
 39379 ;;		On exit  : 0/0
 39380 ;;		Unchanged: 0/0
 39381 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39385 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39386 ;;Total ram usage:        2 bytes
 39387 ;; Hardware stack levels used: 1
 39388 ;; Hardware stack levels required when called: 1
 39389 ;; This function calls:
 39390 ;;		Nothing
 39391 ;; This function is called by:
 39392 ;;		_setNV
 39393 ;; This function uses a non-reentrant model
 39394 ;;
 39395                           
 39396                           	psect	text67
 39397   0167D4                     __ptext67:
 39398                           	callstack 0
 39399   0167D4                     _APP_nvValueChanged:
 39400                           	callstack 122
 39401                           
 39402                           ;incstack = 0
 39403   0167D4  0012               	return		;funcret
 39404   0167D6                     __end_of_APP_nvValueChanged:
 39405                           	callstack 0
 39406                           
 39407 ;; *************** function _APP_nvValidate *****************
 39408 ;; Defined at:
 39409 ;;		line 69 in file "../canpan3Nv.c"
 39410 ;; Parameters:    Size  Location     Type
 39411 ;;  index           1    wreg     unsigned char 
 39412 ;;  value           1    0[COMRAM] unsigned char 
 39413 ;; Auto vars:     Size  Location     Type
 39414 ;;  index           1    1[COMRAM] unsigned char 
 39415 ;; Return value:  Size  Location     Type
 39416 ;;                  1    wreg      enum E23468
 39417 ;; Registers used:
 39418 ;;		wreg, status,2, status,0
 39419 ;; Tracked objects:
 39420 ;;		On entry : 0/0
 39421 ;;		On exit  : 0/0
 39422 ;;		Unchanged: 0/0
 39423 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39424 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39427 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39428 ;;Total ram usage:        2 bytes
 39429 ;; Hardware stack levels used: 1
 39430 ;; Hardware stack levels required when called: 1
 39431 ;; This function calls:
 39432 ;;		Nothing
 39433 ;; This function is called by:
 39434 ;;		_setNV
 39435 ;; This function uses a non-reentrant model
 39436 ;;
 39437                           
 39438                           	psect	text68
 39439   0166A2                     __ptext68:
 39440                           	callstack 0
 39441   0166A2                     _APP_nvValidate:
 39442                           	callstack 122
 39443                           
 39444                           ;incstack = 0
 39445                           ;APP_nvValidate@index stored from wreg
 39446   0166A2  6E02               	movwf	APP_nvValidate@index^(0+1280),c
 39447                           
 39448                           ;../canpan3Nv.c: 70:     if ((index == 1) &&(value > 3)) {
 39449   0166A4  0402               	decf	APP_nvValidate@index^(0+1280),w,c
 39450   0166A6  A4D8               	btfss	status,2,c
 39451   0166A8  D005               	goto	l9071
 39452   0166AA  0E03               	movlw	3
 39453   0166AC  6401               	cpfsgt	APP_nvValidate@value^(0+1280),c
 39454   0166AE  D002               	goto	l9071
 39455                           
 39456                           ;../canpan3Nv.c: 71:         return INVALID;
 39457   0166B0  0E00               	movlw	0
 39458   0166B2  0012               	return	
 39459   0166B4                     l9071:
 39460                           
 39461                           ;../canpan3Nv.c: 73:     return VALID;
 39462   0166B4  0E01               	movlw	1
 39463   0166B6  0012               	return		;funcret
 39464   0166B8                     __end_of_APP_nvValidate:
 39465                           	callstack 0
 39466                           
 39467 ;; *************** function _producerEsdData *****************
 39468 ;; Defined at:
 39469 ;;		line 178 in file "../../VLCBlib_PIC/event_producer_simple.c"
 39470 ;; Parameters:    Size  Location     Type
 39471 ;;  index           1    wreg     unsigned char 
 39472 ;; Auto vars:     Size  Location     Type
 39473 ;;  index           1    0[COMRAM] unsigned char 
 39474 ;; Return value:  Size  Location     Type
 39475 ;;                  1    wreg      unsigned char 
 39476 ;; Registers used:
 39477 ;;		wreg, status,2, status,0
 39478 ;; Tracked objects:
 39479 ;;		On entry : 0/0
 39480 ;;		On exit  : 0/0
 39481 ;;		Unchanged: 0/0
 39482 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39484 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39486 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39487 ;;Total ram usage:        1 bytes
 39488 ;; Hardware stack levels used: 1
 39489 ;; Hardware stack levels required when called: 1
 39490 ;; This function calls:
 39491 ;;		Nothing
 39492 ;; This function is called by:
 39493 ;;		_mnsProcessMessage
 39494 ;; This function uses a non-reentrant model
 39495 ;;
 39496                           
 39497                           	psect	text69
 39498   01661E                     __ptext69:
 39499                           	callstack 0
 39500   01661E                     _producerEsdData:
 39501                           	callstack 123
 39502                           
 39503                           ;incstack = 0
 39504                           ;producerEsdData@index stored from wreg
 39505   01661E  6E01               	movwf	producerEsdData@index^(0+1280),c
 39506                           
 39507                           ;../../VLCBlib_PIC/event_producer_simple.c: 179:     switch (index){
 39508   016620  D004               	goto	l9871
 39509   016622                     l9857:
 39510                           
 39511                           ;../../VLCBlib_PIC/event_producer_simple.c: 181:             return PRODUCER_EV_HAPPENIN
      +                          G;
 39512   016622  0E01               	movlw	1
 39513   016624  0012               	return	
 39514   016626                     l9865:
 39515                           
 39516                           ;../../VLCBlib_PIC/event_producer_simple.c: 185:             return 0;
 39517   016626  0E00               	movlw	0
 39518   016628  0012               	return	
 39519   01662A                     l9871:
 39520   01662A  5001               	movf	producerEsdData@index^(0+1280),w,c
 39521                           
 39522                           ; Switch size 1, requested type "simple"
 39523                           ; Number of cases is 2, Range of values is 0 to 1
 39524                           ; switch strategies available:
 39525                           ; Name         Instructions Cycles
 39526                           ; simple_byte            7     4 (average)
 39527                           ;	Chosen strategy is simple_byte
 39528   01662C  0A00               	xorlw	0	; case 0
 39529   01662E  B4D8               	btfsc	status,2,c
 39530   016630  D7F8               	goto	l9857
 39531   016632  0A01               	xorlw	1	; case 1
 39532   016634  B4D8               	btfsc	status,2,c
 39533   016636  D7F5               	goto	l9857
 39534   016638  D7F6               	goto	l9865
 39535   01663A                     __end_of_producerEsdData:
 39536                           	callstack 0
 39537                           
 39538 ;; *************** function _nvGetESDdata *****************
 39539 ;; Defined at:
 39540 ;;		line 354 in file "../../VLCBlib_PIC/nv.c"
 39541 ;; Parameters:    Size  Location     Type
 39542 ;;  id              1    wreg     unsigned char 
 39543 ;; Auto vars:     Size  Location     Type
 39544 ;;  id              1    0[COMRAM] unsigned char 
 39545 ;; Return value:  Size  Location     Type
 39546 ;;                  1    wreg      unsigned char 
 39547 ;; Registers used:
 39548 ;;		wreg, status,2, status,0
 39549 ;; Tracked objects:
 39550 ;;		On entry : 0/0
 39551 ;;		On exit  : 0/0
 39552 ;;		Unchanged: 0/0
 39553 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39557 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39558 ;;Total ram usage:        1 bytes
 39559 ;; Hardware stack levels used: 1
 39560 ;; Hardware stack levels required when called: 1
 39561 ;; This function calls:
 39562 ;;		Nothing
 39563 ;; This function is called by:
 39564 ;;		_mnsProcessMessage
 39565 ;; This function uses a non-reentrant model
 39566 ;;
 39567                           
 39568                           	psect	text70
 39569   0166B8                     __ptext70:
 39570                           	callstack 0
 39571   0166B8                     _nvGetESDdata:
 39572                           	callstack 123
 39573                           
 39574                           ;incstack = 0
 39575                           ;nvGetESDdata@id stored from wreg
 39576   0166B8  6E01               	movwf	nvGetESDdata@id^(0+1280),c
 39577                           
 39578                           ;../../VLCBlib_PIC/nv.c: 355:     switch (id) {
 39579   0166BA  D004               	goto	l9843
 39580   0166BC                     l9833:
 39581   0166BC  0E43               	movlw	67
 39582   0166BE  0012               	return	
 39583   0166C0                     l9837:
 39584   0166C0  0E00               	movlw	0
 39585   0166C2  0012               	return	
 39586   0166C4                     l9843:
 39587   0166C4  5001               	movf	nvGetESDdata@id^(0+1280),w,c
 39588                           
 39589                           ; Switch size 1, requested type "simple"
 39590                           ; Number of cases is 1, Range of values is 1 to 1
 39591                           ; switch strategies available:
 39592                           ; Name         Instructions Cycles
 39593                           ; simple_byte            4     3 (average)
 39594                           ;	Chosen strategy is simple_byte
 39595   0166C6  0A01               	xorlw	1	; case 1
 39596   0166C8  B4D8               	btfsc	status,2,c
 39597   0166CA  D7F8               	goto	l9833
 39598   0166CC  D7F9               	goto	l9837
 39599   0166CE                     __end_of_nvGetESDdata:
 39600                           	callstack 0
 39601                           
 39602 ;; *************** function _consumerEsdData *****************
 39603 ;; Defined at:
 39604 ;;		line 232 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 39605 ;; Parameters:    Size  Location     Type
 39606 ;;  index           1    wreg     unsigned char 
 39607 ;; Auto vars:     Size  Location     Type
 39608 ;;  index           1    0[COMRAM] unsigned char 
 39609 ;; Return value:  Size  Location     Type
 39610 ;;                  1    wreg      unsigned char 
 39611 ;; Registers used:
 39612 ;;		wreg, status,2, status,0
 39613 ;; Tracked objects:
 39614 ;;		On entry : 0/0
 39615 ;;		On exit  : 0/0
 39616 ;;		Unchanged: 0/0
 39617 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39621 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39622 ;;Total ram usage:        1 bytes
 39623 ;; Hardware stack levels used: 1
 39624 ;; Hardware stack levels required when called: 1
 39625 ;; This function calls:
 39626 ;;		Nothing
 39627 ;; This function is called by:
 39628 ;;		_mnsProcessMessage
 39629 ;; This function uses a non-reentrant model
 39630 ;;
 39631                           
 39632                           	psect	text71
 39633   01675E                     __ptext71:
 39634                           	callstack 0
 39635   01675E                     _consumerEsdData:
 39636                           	callstack 123
 39637                           
 39638                           ;incstack = 0
 39639                           ;consumerEsdData@index stored from wreg
 39640   01675E  6E01               	movwf	consumerEsdData@index^(0+1280),c
 39641                           
 39642                           ;../../VLCBlib_PIC/event_consumer_simple.c: 233:     switch (index){
 39643   016760  D002               	goto	l9467
 39644   016762                     l9457:
 39645                           
 39646                           ;../../VLCBlib_PIC/event_consumer_simple.c: 235:             return CONSUMER_EV_NOT_SPEC
      +                          IFIED;
 39647   016762  0E00               	movlw	0
 39648   016764  0012               	return	
 39649   016766                     l9467:
 39650   016766  5001               	movf	consumerEsdData@index^(0+1280),w,c
 39651                           
 39652                           ; Switch size 1, requested type "simple"
 39653                           ; Number of cases is 1, Range of values is 0 to 0
 39654                           ; switch strategies available:
 39655                           ; Name         Instructions Cycles
 39656                           ; simple_byte            4     3 (average)
 39657                           ;	Chosen strategy is simple_byte
 39658   016768  0A00               	xorlw	0	; case 0
 39659   01676A  D7FB               	goto	l9457
 39660   01676C                     __end_of_consumerEsdData:
 39661                           	callstack 0
 39662                           
 39663 ;; *************** function _canEsdData *****************
 39664 ;; Defined at:
 39665 ;;		line 468 in file "../../VLCBlib_PIC/can18_can_2.c"
 39666 ;; Parameters:    Size  Location     Type
 39667 ;;  id              1    wreg     unsigned char 
 39668 ;; Auto vars:     Size  Location     Type
 39669 ;;  id              1    0[COMRAM] unsigned char 
 39670 ;; Return value:  Size  Location     Type
 39671 ;;                  1    wreg      unsigned char 
 39672 ;; Registers used:
 39673 ;;		wreg, status,2, status,0
 39674 ;; Tracked objects:
 39675 ;;		On entry : 0/0
 39676 ;;		On exit  : 0/0
 39677 ;;		Unchanged: 0/0
 39678 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39682 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39683 ;;Total ram usage:        1 bytes
 39684 ;; Hardware stack levels used: 1
 39685 ;; Hardware stack levels required when called: 1
 39686 ;; This function calls:
 39687 ;;		Nothing
 39688 ;; This function is called by:
 39689 ;;		_mnsProcessMessage
 39690 ;; This function uses a non-reentrant model
 39691 ;;
 39692                           
 39693                           	psect	text72
 39694   0166CE                     __ptext72:
 39695                           	callstack 0
 39696   0166CE                     _canEsdData:
 39697                           	callstack 123
 39698                           
 39699                           ;incstack = 0
 39700                           ;canEsdData@id stored from wreg
 39701   0166CE  6E01               	movwf	canEsdData@id^(0+1280),c
 39702                           
 39703                           ;../../VLCBlib_PIC/can18_can_2.c: 469:     switch(id) {
 39704   0166D0  D004               	goto	l9395
 39705   0166D2                     l9385:
 39706                           
 39707                           ;../../VLCBlib_PIC/can18_can_2.c: 471:             return CAN_HW_PIC_CAN_2_0;
 39708   0166D2  0E02               	movlw	2
 39709   0166D4  0012               	return	
 39710   0166D6                     l9389:
 39711                           
 39712                           ;../../VLCBlib_PIC/can18_can_2.c: 473:             return 0;
 39713   0166D6  0E00               	movlw	0
 39714   0166D8  0012               	return	
 39715   0166DA                     l9395:
 39716   0166DA  5001               	movf	canEsdData@id^(0+1280),w,c
 39717                           
 39718                           ; Switch size 1, requested type "simple"
 39719                           ; Number of cases is 1, Range of values is 1 to 1
 39720                           ; switch strategies available:
 39721                           ; Name         Instructions Cycles
 39722                           ; simple_byte            4     3 (average)
 39723                           ;	Chosen strategy is simple_byte
 39724   0166DC  0A01               	xorlw	1	; case 1
 39725   0166DE  B4D8               	btfsc	status,2,c
 39726   0166E0  D7F8               	goto	l9385
 39727   0166E2  D7F9               	goto	l9389
 39728   0166E4                     __end_of_canEsdData:
 39729                           	callstack 0
 39730                           
 39731 ;; *************** function _bootEsdData *****************
 39732 ;; Defined at:
 39733 ;;		line 252 in file "../../VLCBlib_PIC/boot.c"
 39734 ;; Parameters:    Size  Location     Type
 39735 ;;  id              1    wreg     unsigned char 
 39736 ;; Auto vars:     Size  Location     Type
 39737 ;;  id              1    0[COMRAM] unsigned char 
 39738 ;; Return value:  Size  Location     Type
 39739 ;;                  1    wreg      unsigned char 
 39740 ;; Registers used:
 39741 ;;		wreg, status,2, status,0
 39742 ;; Tracked objects:
 39743 ;;		On entry : 0/0
 39744 ;;		On exit  : 0/0
 39745 ;;		Unchanged: 0/0
 39746 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39748 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39750 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39751 ;;Total ram usage:        1 bytes
 39752 ;; Hardware stack levels used: 1
 39753 ;; Hardware stack levels required when called: 1
 39754 ;; This function calls:
 39755 ;;		Nothing
 39756 ;; This function is called by:
 39757 ;;		_mnsProcessMessage
 39758 ;; This function uses a non-reentrant model
 39759 ;;
 39760                           
 39761                           	psect	text73
 39762   01648A                     __ptext73:
 39763                           	callstack 0
 39764   01648A                     _bootEsdData:
 39765                           	callstack 123
 39766                           
 39767                           ;incstack = 0
 39768                           ;bootEsdData@id stored from wreg
 39769   01648A  6E01               	movwf	bootEsdData@id^(0+1280),c
 39770                           
 39771                           ;../../VLCBlib_PIC/boot.c: 253:     switch (id) {
 39772   01648C  D008               	goto	l9381
 39773   01648E                     l610:
 39774                           
 39775                           ;../../VLCBlib_PIC/boot.c: 256:             return bootloaderType;
 39776   01648E  0105               	movlb	5	; () banked
 39777   016490  5198               	movf	_bootloaderType& (0+255),w,b
 39778   016492  0012               	return	
 39779   016494                     l612:
 39780                           
 39781                           ;../../VLCBlib_PIC/boot.c: 259:             return bootloaderVersion;
 39782   016494  0105               	movlb	5	; () banked
 39783   016496  5197               	movf	_bootloaderVersion& (0+255),w,b
 39784   016498  0012               	return	
 39785   01649A                     l9375:
 39786                           
 39787                           ;../../VLCBlib_PIC/boot.c: 261:             return 0;
 39788   01649A  0E00               	movlw	0
 39789   01649C  0012               	return	
 39790   01649E                     l9381:
 39791   01649E  5001               	movf	bootEsdData@id^(0+1280),w,c
 39792                           
 39793                           ; Switch size 1, requested type "simple"
 39794                           ; Number of cases is 2, Range of values is 1 to 2
 39795                           ; switch strategies available:
 39796                           ; Name         Instructions Cycles
 39797                           ; simple_byte            7     4 (average)
 39798                           ;	Chosen strategy is simple_byte
 39799   0164A0  0A01               	xorlw	1	; case 1
 39800   0164A2  B4D8               	btfsc	status,2,c
 39801   0164A4  D7F4               	goto	l610
 39802   0164A6  0A03               	xorlw	3	; case 2
 39803   0164A8  B4D8               	btfsc	status,2,c
 39804   0164AA  D7F4               	goto	l612
 39805   0164AC  D7F6               	goto	l9375
 39806   0164AE                     __end_of_bootEsdData:
 39807                           	callstack 0
 39808                           
 39809 ;; *************** function _teachGetESDdata *****************
 39810 ;; Defined at:
 39811 ;;		line 367 in file "../../VLCBlib_PIC/event_teach_simple.c"
 39812 ;; Parameters:    Size  Location     Type
 39813 ;;  id              1    wreg     unsigned char 
 39814 ;; Auto vars:     Size  Location     Type
 39815 ;;  id              1    0[COMRAM] unsigned char 
 39816 ;; Return value:  Size  Location     Type
 39817 ;;                  1    wreg      unsigned char 
 39818 ;; Registers used:
 39819 ;;		wreg, status,2, status,0
 39820 ;; Tracked objects:
 39821 ;;		On entry : 0/0
 39822 ;;		On exit  : 0/0
 39823 ;;		Unchanged: 0/0
 39824 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39828 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39829 ;;Total ram usage:        1 bytes
 39830 ;; Hardware stack levels used: 1
 39831 ;; Hardware stack levels required when called: 1
 39832 ;; This function calls:
 39833 ;;		Nothing
 39834 ;; This function is called by:
 39835 ;;		_mnsProcessMessage
 39836 ;; This function uses a non-reentrant model
 39837 ;;
 39838                           
 39839                           	psect	text74
 39840   016584                     __ptext74:
 39841                           	callstack 0
 39842   016584                     _teachGetESDdata:
 39843                           	callstack 123
 39844                           
 39845                           ;incstack = 0
 39846                           ;teachGetESDdata@id stored from wreg
 39847   016584  6E01               	movwf	teachGetESDdata@id^(0+1280),c
 39848                           
 39849                           ;../../VLCBlib_PIC/event_teach_simple.c: 368:     switch (id) {
 39850   016586  D006               	goto	l9661
 39851   016588                     l9647:
 39852   016588  0EFE               	movlw	254
 39853   01658A  0012               	return	
 39854   01658C                     l9651:
 39855   01658C  0E0D               	movlw	13
 39856   01658E  0012               	return	
 39857   016590                     l9655:
 39858   016590  0E00               	movlw	0
 39859   016592  0012               	return	
 39860   016594                     l9661:
 39861   016594  5001               	movf	teachGetESDdata@id^(0+1280),w,c
 39862                           
 39863                           ; Switch size 1, requested type "simple"
 39864                           ; Number of cases is 2, Range of values is 1 to 2
 39865                           ; switch strategies available:
 39866                           ; Name         Instructions Cycles
 39867                           ; simple_byte            7     4 (average)
 39868                           ;	Chosen strategy is simple_byte
 39869   016596  0A01               	xorlw	1	; case 1
 39870   016598  B4D8               	btfsc	status,2,c
 39871   01659A  D7F6               	goto	l9647
 39872   01659C  0A03               	xorlw	3	; case 2
 39873   01659E  B4D8               	btfsc	status,2,c
 39874   0165A0  D7F5               	goto	l9651
 39875   0165A2  D7F6               	goto	l9655
 39876   0165A4                     __end_of_teachGetESDdata:
 39877                           	callstack 0
 39878                           
 39879 ;; *************** function _producerGetDiagnostic *****************
 39880 ;; Defined at:
 39881 ;;		line 157 in file "../../VLCBlib_PIC/event_producer_simple.c"
 39882 ;; Parameters:    Size  Location     Type
 39883 ;;  index           1    wreg     unsigned char 
 39884 ;; Auto vars:     Size  Location     Type
 39885 ;;  index           1    9[COMRAM] unsigned char 
 39886 ;; Return value:  Size  Location     Type
 39887 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 39888 ;; Registers used:
 39889 ;;		wreg, status,2, status,0, prodl, prodh
 39890 ;; Tracked objects:
 39891 ;;		On entry : 0/0
 39892 ;;		On exit  : 0/0
 39893 ;;		Unchanged: 0/0
 39894 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39895 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39896 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39898 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39899 ;;Total ram usage:        4 bytes
 39900 ;; Hardware stack levels used: 1
 39901 ;; Hardware stack levels required when called: 1
 39902 ;; This function calls:
 39903 ;;		Nothing
 39904 ;; This function is called by:
 39905 ;;		_mnsProcessMessage
 39906 ;;		_mnsTRallDiagnosticsCallback
 39907 ;; This function uses a non-reentrant model
 39908 ;;
 39909                           
 39910                           	psect	text75
 39911   0164AE                     __ptext75:
 39912                           	callstack 0
 39913   0164AE                     _producerGetDiagnostic:
 39914                           	callstack 122
 39915                           
 39916                           ;incstack = 0
 39917                           ;producerGetDiagnostic@index stored from wreg
 39918   0164AE  6E0A               	movwf	producerGetDiagnostic@index^(0+1280),c
 39919                           
 39920                           ;../../VLCBlib_PIC/event_producer_simple.c: 158:     if (index > 1) {
 39921   0164B0  0E01               	movlw	1
 39922   0164B2  640A               	cpfsgt	producerGetDiagnostic@index^(0+1280),c
 39923   0164B4  D005               	goto	l9851
 39924                           
 39925                           ;../../VLCBlib_PIC/event_producer_simple.c: 159:         return ((void*)0);
 39926   0164B6  0E00               	movlw	0
 39927   0164B8  6E07               	movwf	?_producerGetDiagnostic^(0+1280),c
 39928   0164BA  0E00               	movlw	0
 39929   0164BC  6E08               	movwf	(?_producerGetDiagnostic+1)^(0+1280),c
 39930   0164BE  0012               	return	
 39931   0164C0                     l9851:
 39932                           
 39933                           ;../../VLCBlib_PIC/event_producer_simple.c: 161:     return &(producerDiagnostics[index]
      +                          );
 39934   0164C0  500A               	movf	producerGetDiagnostic@index^(0+1280),w,c
 39935   0164C2  0D02               	mullw	2
 39936   0164C4  0EC2               	movlw	low _producerDiagnostics
 39937   0164C6  24F3               	addwf	243,w,c
 39938   0164C8  6E07               	movwf	?_producerGetDiagnostic^(0+1280),c
 39939   0164CA  0E05               	movlw	high _producerDiagnostics
 39940   0164CC  20F4               	addwfc	prodh,w,c
 39941   0164CE  6E08               	movwf	(?_producerGetDiagnostic+1)^(0+1280),c
 39942   0164D0  0012               	return		;funcret
 39943   0164D2                     __end_of_producerGetDiagnostic:
 39944                           	callstack 0
 39945                           
 39946 ;; *************** function _nvGetDiagnostic *****************
 39947 ;; Defined at:
 39948 ;;		line 150 in file "../../VLCBlib_PIC/nv.c"
 39949 ;; Parameters:    Size  Location     Type
 39950 ;;  index           1    wreg     unsigned char 
 39951 ;; Auto vars:     Size  Location     Type
 39952 ;;  index           1    9[COMRAM] unsigned char 
 39953 ;; Return value:  Size  Location     Type
 39954 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 39955 ;; Registers used:
 39956 ;;		wreg, status,2, status,0, prodl, prodh
 39957 ;; Tracked objects:
 39958 ;;		On entry : 0/0
 39959 ;;		On exit  : 0/0
 39960 ;;		Unchanged: 0/0
 39961 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 39962 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39965 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 39966 ;;Total ram usage:        4 bytes
 39967 ;; Hardware stack levels used: 1
 39968 ;; Hardware stack levels required when called: 1
 39969 ;; This function calls:
 39970 ;;		Nothing
 39971 ;; This function is called by:
 39972 ;;		_mnsProcessMessage
 39973 ;;		_mnsTRallDiagnosticsCallback
 39974 ;; This function uses a non-reentrant model
 39975 ;;
 39976                           
 39977                           	psect	text76
 39978   0164D2                     __ptext76:
 39979                           	callstack 0
 39980   0164D2                     _nvGetDiagnostic:
 39981                           	callstack 122
 39982                           
 39983                           ;incstack = 0
 39984                           ;nvGetDiagnostic@index stored from wreg
 39985   0164D2  6E0A               	movwf	nvGetDiagnostic@index^(0+1280),c
 39986                           
 39987                           ;../../VLCBlib_PIC/nv.c: 151:     if (index > 2) {
 39988   0164D4  0E02               	movlw	2
 39989   0164D6  640A               	cpfsgt	nvGetDiagnostic@index^(0+1280),c
 39990   0164D8  D005               	goto	l9805
 39991                           
 39992                           ;../../VLCBlib_PIC/nv.c: 152:         return ((void*)0);
 39993   0164DA  0E00               	movlw	0
 39994   0164DC  6E07               	movwf	?_nvGetDiagnostic^(0+1280),c
 39995   0164DE  0E00               	movlw	0
 39996   0164E0  6E08               	movwf	(?_nvGetDiagnostic+1)^(0+1280),c
 39997   0164E2  0012               	return	
 39998   0164E4                     l9805:
 39999                           
 40000                           ;../../VLCBlib_PIC/nv.c: 154:     return &(nvDiagnostics[index]);
 40001   0164E4  500A               	movf	nvGetDiagnostic@index^(0+1280),w,c
 40002   0164E6  0D02               	mullw	2
 40003   0164E8  0EB1               	movlw	low _nvDiagnostics
 40004   0164EA  24F3               	addwf	243,w,c
 40005   0164EC  6E07               	movwf	?_nvGetDiagnostic^(0+1280),c
 40006   0164EE  0E05               	movlw	high _nvDiagnostics
 40007   0164F0  20F4               	addwfc	prodh,w,c
 40008   0164F2  6E08               	movwf	(?_nvGetDiagnostic+1)^(0+1280),c
 40009   0164F4  0012               	return		;funcret
 40010   0164F6                     __end_of_nvGetDiagnostic:
 40011                           	callstack 0
 40012                           
 40013 ;; *************** function _mnsGetDiagnostic *****************
 40014 ;; Defined at:
 40015 ;;		line 807 in file "../../VLCBlib_PIC/mns.c"
 40016 ;; Parameters:    Size  Location     Type
 40017 ;;  index           1    wreg     unsigned char 
 40018 ;; Auto vars:     Size  Location     Type
 40019 ;;  index           1    9[COMRAM] unsigned char 
 40020 ;; Return value:  Size  Location     Type
 40021 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 40022 ;; Registers used:
 40023 ;;		wreg, status,2, status,0, prodl, prodh
 40024 ;; Tracked objects:
 40025 ;;		On entry : 0/0
 40026 ;;		On exit  : 0/0
 40027 ;;		Unchanged: 0/0
 40028 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40029 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40032 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40033 ;;Total ram usage:        4 bytes
 40034 ;; Hardware stack levels used: 1
 40035 ;; Hardware stack levels required when called: 1
 40036 ;; This function calls:
 40037 ;;		Nothing
 40038 ;; This function is called by:
 40039 ;;		_mnsProcessMessage
 40040 ;;		_mnsTRallDiagnosticsCallback
 40041 ;; This function uses a non-reentrant model
 40042 ;;
 40043                           
 40044                           	psect	text77
 40045   0164F6                     __ptext77:
 40046                           	callstack 0
 40047   0164F6                     _mnsGetDiagnostic:
 40048                           	callstack 122
 40049                           
 40050                           ;incstack = 0
 40051                           ;mnsGetDiagnostic@index stored from wreg
 40052   0164F6  6E0A               	movwf	mnsGetDiagnostic@index^(0+1280),c
 40053                           
 40054                           ;../../VLCBlib_PIC/mns.c: 808:     if (index > 6) {
 40055   0164F8  0E06               	movlw	6
 40056   0164FA  640A               	cpfsgt	mnsGetDiagnostic@index^(0+1280),c
 40057   0164FC  D005               	goto	l9795
 40058                           
 40059                           ;../../VLCBlib_PIC/mns.c: 809:         return ((void*)0);
 40060   0164FE  0E00               	movlw	0
 40061   016500  6E07               	movwf	?_mnsGetDiagnostic^(0+1280),c
 40062   016502  0E00               	movlw	0
 40063   016504  6E08               	movwf	(?_mnsGetDiagnostic+1)^(0+1280),c
 40064   016506  0012               	return	
 40065   016508                     l9795:
 40066                           
 40067                           ;../../VLCBlib_PIC/mns.c: 811:     return &(mnsDiagnostics[index]);
 40068   016508  500A               	movf	mnsGetDiagnostic@index^(0+1280),w,c
 40069   01650A  0D02               	mullw	2
 40070   01650C  0EA3               	movlw	low _mnsDiagnostics
 40071   01650E  24F3               	addwf	243,w,c
 40072   016510  6E07               	movwf	?_mnsGetDiagnostic^(0+1280),c
 40073   016512  0E05               	movlw	high _mnsDiagnostics
 40074   016514  20F4               	addwfc	prodh,w,c
 40075   016516  6E08               	movwf	(?_mnsGetDiagnostic+1)^(0+1280),c
 40076   016518  0012               	return		;funcret
 40077   01651A                     __end_of_mnsGetDiagnostic:
 40078                           	callstack 0
 40079                           
 40080 ;; *************** function _consumerGetDiagnostic *****************
 40081 ;; Defined at:
 40082 ;;		line 218 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 40083 ;; Parameters:    Size  Location     Type
 40084 ;;  index           1    wreg     unsigned char 
 40085 ;; Auto vars:     Size  Location     Type
 40086 ;;  index           1    9[COMRAM] unsigned char 
 40087 ;; Return value:  Size  Location     Type
 40088 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 40089 ;; Registers used:
 40090 ;;		wreg, status,2, status,0, prodl, prodh
 40091 ;; Tracked objects:
 40092 ;;		On entry : 0/0
 40093 ;;		On exit  : 0/0
 40094 ;;		Unchanged: 0/0
 40095 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40096 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40099 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40100 ;;Total ram usage:        4 bytes
 40101 ;; Hardware stack levels used: 1
 40102 ;; Hardware stack levels required when called: 1
 40103 ;; This function calls:
 40104 ;;		Nothing
 40105 ;; This function is called by:
 40106 ;;		_mnsProcessMessage
 40107 ;;		_mnsTRallDiagnosticsCallback
 40108 ;; This function uses a non-reentrant model
 40109 ;;
 40110                           
 40111                           	psect	text78
 40112   01651A                     __ptext78:
 40113                           	callstack 0
 40114   01651A                     _consumerGetDiagnostic:
 40115                           	callstack 122
 40116                           
 40117                           ;incstack = 0
 40118                           ;consumerGetDiagnostic@index stored from wreg
 40119   01651A  6E0A               	movwf	consumerGetDiagnostic@index^(0+1280),c
 40120                           
 40121                           ;../../VLCBlib_PIC/event_consumer_simple.c: 219:     if (index > 2) {
 40122   01651C  0E02               	movlw	2
 40123   01651E  640A               	cpfsgt	consumerGetDiagnostic@index^(0+1280),c
 40124   016520  D005               	goto	l9451
 40125                           
 40126                           ;../../VLCBlib_PIC/event_consumer_simple.c: 220:         return ((void*)0);
 40127   016522  0E00               	movlw	0
 40128   016524  6E07               	movwf	?_consumerGetDiagnostic^(0+1280),c
 40129   016526  0E00               	movlw	0
 40130   016528  6E08               	movwf	(?_consumerGetDiagnostic+1)^(0+1280),c
 40131   01652A  0012               	return	
 40132   01652C                     l9451:
 40133                           
 40134                           ;../../VLCBlib_PIC/event_consumer_simple.c: 222:     return &(consumerDiagnostics[index]
      +                          );
 40135   01652C  500A               	movf	consumerGetDiagnostic@index^(0+1280),w,c
 40136   01652E  0D02               	mullw	2
 40137   016530  0EB7               	movlw	low _consumerDiagnostics
 40138   016532  24F3               	addwf	243,w,c
 40139   016534  6E07               	movwf	?_consumerGetDiagnostic^(0+1280),c
 40140   016536  0E05               	movlw	high _consumerDiagnostics
 40141   016538  20F4               	addwfc	prodh,w,c
 40142   01653A  6E08               	movwf	(?_consumerGetDiagnostic+1)^(0+1280),c
 40143   01653C  0012               	return		;funcret
 40144   01653E                     __end_of_consumerGetDiagnostic:
 40145                           	callstack 0
 40146                           
 40147 ;; *************** function _canGetDiagnostic *****************
 40148 ;; Defined at:
 40149 ;;		line 500 in file "../../VLCBlib_PIC/can18_can_2.c"
 40150 ;; Parameters:    Size  Location     Type
 40151 ;;  index           1    wreg     unsigned char 
 40152 ;; Auto vars:     Size  Location     Type
 40153 ;;  index           1   10[COMRAM] unsigned char 
 40154 ;;  i16             2    0        short 
 40155 ;; Return value:  Size  Location     Type
 40156 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 40157 ;; Registers used:
 40158 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 40159 ;; Tracked objects:
 40160 ;;		On entry : 0/0
 40161 ;;		On exit  : 0/0
 40162 ;;		Unchanged: 0/0
 40163 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40164 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40165 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40166 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40167 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40168 ;;Total ram usage:        5 bytes
 40169 ;; Hardware stack levels used: 1
 40170 ;; Hardware stack levels required when called: 2
 40171 ;; This function calls:
 40172 ;;		_getNumRxBuffersInUse
 40173 ;;		_getNumTxBuffersInUse
 40174 ;; This function is called by:
 40175 ;;		_mnsProcessMessage
 40176 ;;		_mnsTRallDiagnosticsCallback
 40177 ;; This function uses a non-reentrant model
 40178 ;;
 40179                           
 40180                           	psect	text79
 40181   014AEE                     __ptext79:
 40182                           	callstack 0
 40183   014AEE                     _canGetDiagnostic:
 40184                           	callstack 121
 40185                           
 40186                           ;incstack = 0
 40187                           ;canGetDiagnostic@index stored from wreg
 40188   014AEE  6E0B               	movwf	canGetDiagnostic@index^(0+1280),c
 40189                           
 40190                           ;../../VLCBlib_PIC/can18_can_2.c: 501:     int16_t i16;;../../VLCBlib_PIC/can18_can_2.c:
      +                           503:     if (index > 18) {
 40191   014AF0  0E12               	movlw	18
 40192   014AF2  640B               	cpfsgt	canGetDiagnostic@index^(0+1280),c
 40193   014AF4  D024               	goto	l9409
 40194                           
 40195                           ;../../VLCBlib_PIC/can18_can_2.c: 504:         return ((void*)0);
 40196   014AF6  0E00               	movlw	0
 40197   014AF8  6E07               	movwf	?_canGetDiagnostic^(0+1280),c
 40198   014AFA  0E00               	movlw	0
 40199   014AFC  6E08               	movwf	(?_canGetDiagnostic+1)^(0+1280),c
 40200   014AFE  0012               	return	
 40201   014B00                     l904:
 40202                           
 40203                           ;../../VLCBlib_PIC/can18_can_2.c: 508:             canDiagnostics[0x03].asUint = C1TRECU
      +                          ;
 40204   014B00  C136 F6AC          	movff	310,_canDiagnostics+6	;volatile
 40205   014B04  0106               	movlb	6	; () banked
 40206   014B06  6BAD               	clrf	(_canDiagnostics+7)& (0+255),b
 40207                           
 40208                           ;../../VLCBlib_PIC/can18_can_2.c: 509:             break;
 40209   014B08  D02A               	goto	l9411
 40210   014B0A                     l9403:
 40211                           
 40212                           ;../../VLCBlib_PIC/can18_can_2.c: 511:             canDiagnostics[0x04].asUint = getNumT
      +                          xBuffersInUse();
 40213   014B0A  EC0D  F0AB         	call	_getNumTxBuffersInUse	;wreg free
 40214   014B0E  6E0A               	movwf	??_canGetDiagnostic^(0+1280),c
 40215   014B10  500A               	movf	??_canGetDiagnostic^(0+1280),w,c
 40216   014B12  0106               	movlb	6	; () banked
 40217   014B14  6FAE               	movwf	(_canDiagnostics+8)& (0+255),b
 40218   014B16  6BAF               	clrf	(_canDiagnostics+9)& (0+255),b
 40219                           
 40220                           ;../../VLCBlib_PIC/can18_can_2.c: 512:             break;
 40221   014B18  D022               	goto	l9411
 40222   014B1A                     l9405:
 40223                           
 40224                           ;../../VLCBlib_PIC/can18_can_2.c: 514:             canDiagnostics[0x07].asUint = getNumR
      +                          xBuffersInUse();
 40225   014B1A  ECC9  F0AB         	call	_getNumRxBuffersInUse	;wreg free
 40226   014B1E  6E0A               	movwf	??_canGetDiagnostic^(0+1280),c
 40227   014B20  500A               	movf	??_canGetDiagnostic^(0+1280),w,c
 40228   014B22  0106               	movlb	6	; () banked
 40229   014B24  6FB4               	movwf	(_canDiagnostics+14)& (0+255),b
 40230   014B26  6BB5               	clrf	(_canDiagnostics+15)& (0+255),b
 40231                           
 40232                           ;../../VLCBlib_PIC/can18_can_2.c: 515:             break;
 40233   014B28  D01A               	goto	l9411
 40234   014B2A                     l908:
 40235                           
 40236                           ;../../VLCBlib_PIC/can18_can_2.c: 517:             canDiagnostics[0x02].asUint = C1BDIAG
      +                          0Hbits.NTERRCNT;
 40237   014B2A  C139 F6AA          	movff	313,_canDiagnostics+4	;volatile
 40238   014B2E  0106               	movlb	6	; () banked
 40239   014B30  6BAB               	clrf	(_canDiagnostics+5)& (0+255),b
 40240                           
 40241                           ;../../VLCBlib_PIC/can18_can_2.c: 518:             break;
 40242   014B32  D015               	goto	l9411
 40243   014B34                     l909:
 40244                           
 40245                           ;../../VLCBlib_PIC/can18_can_2.c: 520:             canDiagnostics[0x01].asUint = C1BDIAG
      +                          0Lbits.NRERRCNT;
 40246   014B34  C138 F6A8          	movff	312,_canDiagnostics+2	;volatile
 40247   014B38  0106               	movlb	6	; () banked
 40248   014B3A  6BA9               	clrf	(_canDiagnostics+3)& (0+255),b
 40249                           
 40250                           ;../../VLCBlib_PIC/can18_can_2.c: 521:             break;
 40251   014B3C  D010               	goto	l9411
 40252   014B3E                     l9409:
 40253   014B3E  500B               	movf	canGetDiagnostic@index^(0+1280),w,c
 40254                           
 40255                           ; Switch size 1, requested type "simple"
 40256                           ; Number of cases is 5, Range of values is 1 to 7
 40257                           ; switch strategies available:
 40258                           ; Name         Instructions Cycles
 40259                           ; simple_byte           16     9 (average)
 40260                           ;	Chosen strategy is simple_byte
 40261   014B40  0A01               	xorlw	1	; case 1
 40262   014B42  B4D8               	btfsc	status,2,c
 40263   014B44  D7F7               	goto	l909
 40264   014B46  0A03               	xorlw	3	; case 2
 40265   014B48  B4D8               	btfsc	status,2,c
 40266   014B4A  D7EF               	goto	l908
 40267   014B4C  0A01               	xorlw	1	; case 3
 40268   014B4E  B4D8               	btfsc	status,2,c
 40269   014B50  D7D7               	goto	l904
 40270   014B52  0A07               	xorlw	7	; case 4
 40271   014B54  B4D8               	btfsc	status,2,c
 40272   014B56  D7D9               	goto	l9403
 40273   014B58  0A03               	xorlw	3	; case 7
 40274   014B5A  B4D8               	btfsc	status,2,c
 40275   014B5C  D7DE               	goto	l9405
 40276   014B5E                     l9411:
 40277                           
 40278                           ;../../VLCBlib_PIC/can18_can_2.c: 524:     return &(canDiagnostics[index]);
 40279   014B5E  500B               	movf	canGetDiagnostic@index^(0+1280),w,c
 40280   014B60  0D02               	mullw	2
 40281   014B62  0EA6               	movlw	low _canDiagnostics
 40282   014B64  24F3               	addwf	243,w,c
 40283   014B66  6E07               	movwf	?_canGetDiagnostic^(0+1280),c
 40284   014B68  0E06               	movlw	high _canDiagnostics
 40285   014B6A  20F4               	addwfc	prodh,w,c
 40286   014B6C  6E08               	movwf	(?_canGetDiagnostic+1)^(0+1280),c
 40287   014B6E  0012               	return		;funcret
 40288   014B70                     __end_of_canGetDiagnostic:
 40289                           	callstack 0
 40290                           
 40291 ;; *************** function _teachGetDiagnostic *****************
 40292 ;; Defined at:
 40293 ;;		line 382 in file "../../VLCBlib_PIC/event_teach_simple.c"
 40294 ;; Parameters:    Size  Location     Type
 40295 ;;  index           1    wreg     unsigned char 
 40296 ;; Auto vars:     Size  Location     Type
 40297 ;;  index           1    9[COMRAM] unsigned char 
 40298 ;; Return value:  Size  Location     Type
 40299 ;;                  2    6[COMRAM] PTR struct DiagnosticVal
 40300 ;; Registers used:
 40301 ;;		wreg, status,2, status,0, prodl, prodh
 40302 ;; Tracked objects:
 40303 ;;		On entry : 0/0
 40304 ;;		On exit  : 0/0
 40305 ;;		Unchanged: 0/0
 40306 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40307 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40310 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40311 ;;Total ram usage:        4 bytes
 40312 ;; Hardware stack levels used: 1
 40313 ;; Hardware stack levels required when called: 1
 40314 ;; This function calls:
 40315 ;;		Nothing
 40316 ;; This function is called by:
 40317 ;;		_mnsProcessMessage
 40318 ;;		_mnsTRallDiagnosticsCallback
 40319 ;; This function uses a non-reentrant model
 40320 ;;
 40321                           
 40322                           	psect	text80
 40323   01653E                     __ptext80:
 40324                           	callstack 0
 40325   01653E                     _teachGetDiagnostic:
 40326                           	callstack 122
 40327                           
 40328                           ;incstack = 0
 40329                           ;teachGetDiagnostic@index stored from wreg
 40330   01653E  6E0A               	movwf	teachGetDiagnostic@index^(0+1280),c
 40331                           
 40332                           ;../../VLCBlib_PIC/event_teach_simple.c: 383:     if (index > 1) {
 40333   016540  0E01               	movlw	1
 40334   016542  640A               	cpfsgt	teachGetDiagnostic@index^(0+1280),c
 40335   016544  D005               	goto	l9669
 40336                           
 40337                           ;../../VLCBlib_PIC/event_teach_simple.c: 384:         return ((void*)0);
 40338   016546  0E00               	movlw	0
 40339   016548  6E07               	movwf	?_teachGetDiagnostic^(0+1280),c
 40340   01654A  0E00               	movlw	0
 40341   01654C  6E08               	movwf	(?_teachGetDiagnostic+1)^(0+1280),c
 40342   01654E  0012               	return	
 40343   016550                     l9669:
 40344                           
 40345                           ;../../VLCBlib_PIC/event_teach_simple.c: 386:     return &(teachDiagnostics[index]);
 40346   016550  500A               	movf	teachGetDiagnostic@index^(0+1280),w,c
 40347   016552  0D02               	mullw	2
 40348   016554  0EC6               	movlw	low _teachDiagnostics
 40349   016556  24F3               	addwf	243,w,c
 40350   016558  6E07               	movwf	?_teachGetDiagnostic^(0+1280),c
 40351   01655A  0E05               	movlw	high _teachDiagnostics
 40352   01655C  20F4               	addwfc	prodh,w,c
 40353   01655E  6E08               	movwf	(?_teachGetDiagnostic+1)^(0+1280),c
 40354   016560  0012               	return		;funcret
 40355   016562                     __end_of_teachGetDiagnostic:
 40356                           	callstack 0
 40357                           
 40358 ;; *************** function _setLEDsByMode *****************
 40359 ;; Defined at:
 40360 ;;		line 818 in file "../../VLCBlib_PIC/mns.c"
 40361 ;; Parameters:    Size  Location     Type
 40362 ;;		None
 40363 ;; Auto vars:     Size  Location     Type
 40364 ;;		None
 40365 ;; Return value:  Size  Location     Type
 40366 ;;                  1    wreg      void 
 40367 ;; Registers used:
 40368 ;;		wreg, status,2, status,0, cstack
 40369 ;; Tracked objects:
 40370 ;;		On entry : 0/0
 40371 ;;		On exit  : 0/0
 40372 ;;		Unchanged: 0/0
 40373 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40378 ;;Total ram usage:        0 bytes
 40379 ;; Hardware stack levels used: 1
 40380 ;; Hardware stack levels required when called: 2
 40381 ;; This function calls:
 40382 ;;		_showStatus
 40383 ;; This function is called by:
 40384 ;;		_mnsPowerUp
 40385 ;;		_mnsProcessMessage
 40386 ;;		_mnsPoll
 40387 ;; This function uses a non-reentrant model
 40388 ;;
 40389                           
 40390                           	psect	text81
 40391   0161AE                     __ptext81:
 40392                           	callstack 0
 40393   0161AE                     _setLEDsByMode:
 40394                           	callstack 122
 40395                           
 40396                           ;../../VLCBlib_PIC/mns.c: 819:        switch (mode_state) {
 40397                           
 40398                           ;incstack = 0
 40399   0161AE  D00C               	goto	l9687
 40400   0161B0                     l9679:
 40401                           
 40402                           ; BSR set to: 5
 40403                           ;../../VLCBlib_PIC/mns.c: 821:             showStatus(STATUS_UNINITIALISED);
 40404   0161B0  0E01               	movlw	1
 40405   0161B2  EC9F  F09E         	call	_showStatus
 40406                           
 40407                           ;../../VLCBlib_PIC/mns.c: 822:             break;
 40408   0161B6  0012               	return	
 40409   0161B8                     l9681:
 40410                           
 40411                           ; BSR set to: 5
 40412                           ;../../VLCBlib_PIC/mns.c: 825:             showStatus(STATUS_SETUP);
 40413   0161B8  0E02               	movlw	2
 40414   0161BA  EC9F  F09E         	call	_showStatus
 40415                           
 40416                           ;../../VLCBlib_PIC/mns.c: 826:             break;
 40417   0161BE  0012               	return	
 40418   0161C0                     l9683:
 40419                           
 40420                           ; BSR set to: 5
 40421                           ;../../VLCBlib_PIC/mns.c: 828:             showStatus(STATUS_NORMAL);
 40422   0161C0  0E03               	movlw	3
 40423   0161C2  EC9F  F09E         	call	_showStatus
 40424                           
 40425                           ;../../VLCBlib_PIC/mns.c: 829:             break;
 40426   0161C6  0012               	return	
 40427   0161C8                     l9687:
 40428   0161C8  0105               	movlb	5	; () banked
 40429   0161CA  5191               	movf	_mode_state& (0+255),w,b
 40430                           
 40431                           ; Switch size 1, requested type "simple"
 40432                           ; Number of cases is 3, Range of values is 0 to 255
 40433                           ; switch strategies available:
 40434                           ; Name         Instructions Cycles
 40435                           ; simple_byte           10     6 (average)
 40436                           ;	Chosen strategy is simple_byte
 40437   0161CC  0A00               	xorlw	0	; case 0
 40438   0161CE  B4D8               	btfsc	status,2,c
 40439   0161D0  D7F3               	goto	l9681
 40440   0161D2  0AFD               	xorlw	253	; case 253
 40441   0161D4  B4D8               	btfsc	status,2,c
 40442   0161D6  D7F0               	goto	l9681
 40443   0161D8  0A02               	xorlw	2	; case 255
 40444   0161DA  B4D8               	btfsc	status,2,c
 40445   0161DC  D7E9               	goto	l9679
 40446   0161DE  D7F0               	goto	l9683
 40447   0161E0                     __end_of_setLEDsByMode:
 40448                           	callstack 0
 40449                           
 40450 ;; *************** function _sendMessage6 *****************
 40451 ;; Defined at:
 40452 ;;		line 1207 in file "../../VLCBlib_PIC/vlcb.c"
 40453 ;; Parameters:    Size  Location     Type
 40454 ;;  opc             1    wreg     enum E22928
 40455 ;;  data1           1   36[COMRAM] unsigned char 
 40456 ;;  data2           1   37[COMRAM] unsigned char 
 40457 ;;  data3           1   38[COMRAM] unsigned char 
 40458 ;;  data4           1   39[COMRAM] unsigned char 
 40459 ;;  data5           1   40[COMRAM] unsigned char 
 40460 ;;  data6           1   41[COMRAM] unsigned char 
 40461 ;; Auto vars:     Size  Location     Type
 40462 ;;  opc             1   42[COMRAM] enum E22928
 40463 ;; Return value:  Size  Location     Type
 40464 ;;                  1    wreg      void 
 40465 ;; Registers used:
 40466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 40467 ;; Tracked objects:
 40468 ;;		On entry : 0/0
 40469 ;;		On exit  : 0/0
 40470 ;;		Unchanged: 0/0
 40471 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40472 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40475 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40476 ;;Total ram usage:        7 bytes
 40477 ;; Hardware stack levels used: 1
 40478 ;; Hardware stack levels required when called: 5
 40479 ;; This function calls:
 40480 ;;		_sendMessage
 40481 ;; This function is called by:
 40482 ;;		_doReqev
 40483 ;;		_reqevCallback
 40484 ;;		_mnsProcessMessage
 40485 ;;		_mnsTRallDiagnosticsCallback
 40486 ;; This function uses a non-reentrant model
 40487 ;;
 40488                           
 40489                           	psect	text82
 40490   0162F2                     __ptext82:
 40491                           	callstack 0
 40492   0162F2                     _sendMessage6:
 40493                           	callstack 118
 40494                           
 40495                           ;incstack = 0
 40496                           ;sendMessage6@opc stored from wreg
 40497   0162F2  6E2B               	movwf	sendMessage6@opc^(0+1280),c
 40498                           
 40499                           ;../../VLCBlib_PIC/vlcb.c: 1208:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 40500   0162F4  0E07               	movlw	7
 40501   0162F6  6E1C               	movwf	sendMessage@len^(0+1280),c
 40502   0162F8  C525  F51D         	movff	sendMessage6@data1,sendMessage@data1
 40503   0162FC  C526  F51E         	movff	sendMessage6@data2,sendMessage@data2
 40504   016300  C527  F51F         	movff	sendMessage6@data3,sendMessage@data3
 40505   016304  C528  F520         	movff	sendMessage6@data4,sendMessage@data4
 40506   016308  C529  F521         	movff	sendMessage6@data5,sendMessage@data5
 40507   01630C  C52A  F522         	movff	sendMessage6@data6,sendMessage@data6
 40508   016310  0E00               	movlw	0
 40509   016312  6E23               	movwf	sendMessage@data7^(0+1280),c
 40510   016314  502B               	movf	sendMessage6@opc^(0+1280),w,c
 40511   016316  ECBA  F0A6         	call	_sendMessage
 40512   01631A  0012               	return		;funcret
 40513   01631C                     __end_of_sendMessage6:
 40514                           	callstack 0
 40515                           
 40516 ;; *************** function _sendMessage3 *****************
 40517 ;; Defined at:
 40518 ;;		line 1168 in file "../../VLCBlib_PIC/vlcb.c"
 40519 ;; Parameters:    Size  Location     Type
 40520 ;;  opc             1    wreg     enum E22928
 40521 ;;  data1           1   36[COMRAM] unsigned char 
 40522 ;;  data2           1   37[COMRAM] unsigned char 
 40523 ;;  data3           1   38[COMRAM] unsigned char 
 40524 ;; Auto vars:     Size  Location     Type
 40525 ;;  opc             1   39[COMRAM] enum E22928
 40526 ;; Return value:  Size  Location     Type
 40527 ;;                  1    wreg      void 
 40528 ;; Registers used:
 40529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 40530 ;; Tracked objects:
 40531 ;;		On entry : 0/0
 40532 ;;		On exit  : 0/0
 40533 ;;		Unchanged: 0/0
 40534 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40535 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40538 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40539 ;;Total ram usage:        4 bytes
 40540 ;; Hardware stack levels used: 1
 40541 ;; Hardware stack levels required when called: 5
 40542 ;; This function calls:
 40543 ;;		_sendMessage
 40544 ;; This function is called by:
 40545 ;;		_teachProcessMessage
 40546 ;;		_doNnevn
 40547 ;;		_doNenrd
 40548 ;;		_doRqevn
 40549 ;;		_doEvlrn
 40550 ;;		_doReval
 40551 ;;		_doEvuln
 40552 ;;		_doReqev
 40553 ;;		_mnsProcessMessage
 40554 ;;		_nvProcessMessage
 40555 ;;		_producerProcessMessage
 40556 ;; This function uses a non-reentrant model
 40557 ;;
 40558                           
 40559                           	psect	text83
 40560   01631C                     __ptext83:
 40561                           	callstack 0
 40562   01631C                     _sendMessage3:
 40563                           	callstack 119
 40564                           
 40565                           ;incstack = 0
 40566                           ;sendMessage3@opc stored from wreg
 40567   01631C  6E28               	movwf	sendMessage3@opc^(0+1280),c
 40568                           
 40569                           ;../../VLCBlib_PIC/vlcb.c: 1169:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 40570   01631E  0E04               	movlw	4
 40571   016320  6E1C               	movwf	sendMessage@len^(0+1280),c
 40572   016322  C525  F51D         	movff	sendMessage3@data1,sendMessage@data1
 40573   016326  C526  F51E         	movff	sendMessage3@data2,sendMessage@data2
 40574   01632A  C527  F51F         	movff	sendMessage3@data3,sendMessage@data3
 40575   01632E  0E00               	movlw	0
 40576   016330  6E20               	movwf	sendMessage@data4^(0+1280),c
 40577   016332  0E00               	movlw	0
 40578   016334  6E21               	movwf	sendMessage@data5^(0+1280),c
 40579   016336  0E00               	movlw	0
 40580   016338  6E22               	movwf	sendMessage@data6^(0+1280),c
 40581   01633A  0E00               	movlw	0
 40582   01633C  6E23               	movwf	sendMessage@data7^(0+1280),c
 40583   01633E  5028               	movf	sendMessage3@opc^(0+1280),w,c
 40584   016340  ECBA  F0A6         	call	_sendMessage
 40585   016344  0012               	return		;funcret
 40586   016346                     __end_of_sendMessage3:
 40587                           	callstack 0
 40588                           
 40589 ;; *************** function _sendMessage2 *****************
 40590 ;; Defined at:
 40591 ;;		line 1157 in file "../../VLCBlib_PIC/vlcb.c"
 40592 ;; Parameters:    Size  Location     Type
 40593 ;;  opc             1    wreg     enum E22928
 40594 ;;  data1           1   36[COMRAM] unsigned char 
 40595 ;;  data2           1   37[COMRAM] unsigned char 
 40596 ;; Auto vars:     Size  Location     Type
 40597 ;;  opc             1   38[COMRAM] enum E22928
 40598 ;; Return value:  Size  Location     Type
 40599 ;;                  1    wreg      void 
 40600 ;; Registers used:
 40601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 40602 ;; Tracked objects:
 40603 ;;		On entry : 0/0
 40604 ;;		On exit  : 0/0
 40605 ;;		Unchanged: 0/0
 40606 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40610 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40611 ;;Total ram usage:        3 bytes
 40612 ;; Hardware stack levels used: 1
 40613 ;; Hardware stack levels required when called: 5
 40614 ;; This function calls:
 40615 ;;		_sendMessage
 40616 ;; This function is called by:
 40617 ;;		_doNnclr
 40618 ;;		_doEvlrn
 40619 ;;		_doEvuln
 40620 ;;		_mnsProcessMessage
 40621 ;;		_mnsPoll
 40622 ;;		_nvProcessMessage
 40623 ;; This function uses a non-reentrant model
 40624 ;;
 40625                           
 40626                           	psect	text84
 40627   016346                     __ptext84:
 40628                           	callstack 0
 40629   016346                     _sendMessage2:
 40630                           	callstack 118
 40631                           
 40632                           ;incstack = 0
 40633                           ;sendMessage2@opc stored from wreg
 40634   016346  6E27               	movwf	sendMessage2@opc^(0+1280),c
 40635                           
 40636                           ;../../VLCBlib_PIC/vlcb.c: 1158:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 40637   016348  0E03               	movlw	3
 40638   01634A  6E1C               	movwf	sendMessage@len^(0+1280),c
 40639   01634C  C525  F51D         	movff	sendMessage2@data1,sendMessage@data1
 40640   016350  C526  F51E         	movff	sendMessage2@data2,sendMessage@data2
 40641   016354  0E00               	movlw	0
 40642   016356  6E1F               	movwf	sendMessage@data3^(0+1280),c
 40643   016358  0E00               	movlw	0
 40644   01635A  6E20               	movwf	sendMessage@data4^(0+1280),c
 40645   01635C  0E00               	movlw	0
 40646   01635E  6E21               	movwf	sendMessage@data5^(0+1280),c
 40647   016360  0E00               	movlw	0
 40648   016362  6E22               	movwf	sendMessage@data6^(0+1280),c
 40649   016364  0E00               	movlw	0
 40650   016366  6E23               	movwf	sendMessage@data7^(0+1280),c
 40651   016368  5027               	movf	sendMessage2@opc^(0+1280),w,c
 40652   01636A  ECBA  F0A6         	call	_sendMessage
 40653   01636E  0012               	return		;funcret
 40654   016370                     __end_of_sendMessage2:
 40655                           	callstack 0
 40656                           
 40657 ;; *************** function _getParameter *****************
 40658 ;; Defined at:
 40659 ;;		line 838 in file "../../VLCBlib_PIC/mns.c"
 40660 ;; Parameters:    Size  Location     Type
 40661 ;;  idx             1    wreg     unsigned char 
 40662 ;; Auto vars:     Size  Location     Type
 40663 ;;  idx             1    5[COMRAM] unsigned char 
 40664 ;;  i               1    0        unsigned char 
 40665 ;; Return value:  Size  Location     Type
 40666 ;;                  1    wreg      unsigned char 
 40667 ;; Registers used:
 40668 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40669 ;; Tracked objects:
 40670 ;;		On entry : 0/0
 40671 ;;		On exit  : 0/0
 40672 ;;		Unchanged: 0/0
 40673 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40675 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40677 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40678 ;;Total ram usage:        1 bytes
 40679 ;; Hardware stack levels used: 1
 40680 ;; Hardware stack levels required when called: 3
 40681 ;; This function calls:
 40682 ;;		_getParameterFlags
 40683 ;;		_have
 40684 ;; This function is called by:
 40685 ;;		_mnsProcessMessage
 40686 ;;		_mnsTRrqnpnCallback
 40687 ;; This function uses a non-reentrant model
 40688 ;;
 40689                           
 40690                           	psect	text85
 40691   01386C                     __ptext85:
 40692                           	callstack 0
 40693   01386C                     _getParameter:
 40694                           	callstack 120
 40695                           
 40696                           ;incstack = 0
 40697                           ;getParameter@idx stored from wreg
 40698   01386C  6E06               	movwf	getParameter@idx^(0+1280),c
 40699                           
 40700                           ;../../VLCBlib_PIC/mns.c: 839:     uint8_t i;;../../VLCBlib_PIC/mns.c: 840:     switch(i
      +                          dx) {
 40701   01386E  D045               	goto	l9787
 40702   013870                     l9691:
 40703                           
 40704                           ;../../VLCBlib_PIC/mns.c: 842:         return 20;
 40705   013870  0E14               	movlw	20
 40706   013872  0012               	return	
 40707   013874                     l9695:
 40708                           
 40709                           ;../../VLCBlib_PIC/mns.c: 844:         return MANU_MERG;
 40710   013874  0EA5               	movlw	165
 40711   013876  0012               	return	
 40712   013878                     l9699:
 40713                           
 40714                           ;../../VLCBlib_PIC/mns.c: 846:         return 'a';
 40715   013878  0E61               	movlw	97
 40716   01387A  0012               	return	
 40717   01387C                     l9703:
 40718                           
 40719                           ;../../VLCBlib_PIC/mns.c: 848:         return MTYP_CANPAN;
 40720   01387C  0E1D               	movlw	29
 40721   01387E  0012               	return	
 40722   013880                     l9707:
 40723                           
 40724                           ;../../VLCBlib_PIC/mns.c: 850:         return 254;
 40725   013880  0EFE               	movlw	254
 40726   013882  0012               	return	
 40727   013884                     l9711:
 40728                           
 40729                           ;../../VLCBlib_PIC/mns.c: 852:         return 13;
 40730   013884  0E0D               	movlw	13
 40731   013886  0012               	return	
 40732   013888                     l9715:
 40733                           
 40734                           ;../../VLCBlib_PIC/mns.c: 854:         return 67;
 40735   013888  0E43               	movlw	67
 40736   01388A  0012               	return	
 40737   01388C                     l9719:
 40738                           
 40739                           ;../../VLCBlib_PIC/mns.c: 856:         return 5;
 40740   01388C  0E05               	movlw	5
 40741   01388E  0012               	return	
 40742   013890                     l9723:
 40743                           
 40744                           ;../../VLCBlib_PIC/mns.c: 858:         return getParameterFlags();
 40745   013890  EC27  F0AF         	call	_getParameterFlags	;wreg free
 40746   013894  0012               	return	
 40747   013896                     l9727:
 40748                           
 40749                           ;../../VLCBlib_PIC/mns.c: 860:         return P18F27Q83;
 40750   013896  0E17               	movlw	23
 40751   013898  0012               	return	
 40752   01389A                     l9731:
 40753                           
 40754                           ;../../VLCBlib_PIC/mns.c: 862:         if (have(SERVICE_ID_CAN)) {
 40755   01389A  0E03               	movlw	3
 40756   01389C  ECC9  F0A8         	call	_have
 40757   0138A0  0900               	iorlw	0
 40758   0138A2  B4D8               	btfsc	status,2,c
 40759   0138A4  D002               	goto	l9737
 40760   0138A6                     u7590:
 40761                           
 40762                           ;../../VLCBlib_PIC/mns.c: 863:             return PB_CAN;
 40763   0138A6  0E01               	movlw	1
 40764   0138A8  0012               	return	
 40765   0138AA                     l9737:
 40766                           
 40767                           ;../../VLCBlib_PIC/mns.c: 865:         return 0;
 40768   0138AA  0E00               	movlw	0
 40769   0138AC  0012               	return	
 40770   0138AE                     l9745:
 40771                           
 40772                           ;../../VLCBlib_PIC/mns.c: 869:         return 0x08;
 40773   0138AE  0E08               	movlw	8
 40774   0138B0  0012               	return	
 40775   0138B2                     l9757:
 40776                           
 40777                           ;../../VLCBlib_PIC/mns.c: 876:         return *(const uint8_t*)0x3FFFFC;
 40778   0138B2  0EFC               	movlw	252
 40779   0138B4  6EF6               	movwf	tblptrl,c
 40780   0138B6                     	if	1	;There is more than 1 active tblptr byte
 40781   0138B6  0EFF               	movlw	255
 40782   0138B8  6EF7               	movwf	tblptrh,c
 40783   0138BA                     	endif
 40784   0138BA                     	if	1	;There are 3 active tblptr bytes
 40785   0138BA  0E3F               	movlw	63
 40786   0138BC  6EF8               	movwf	tblptru,c
 40787   0138BE                     	endif
 40788   0138BE  0008               	tblrd		*
 40789   0138C0  50F5               	movf	tablat,w,c
 40790   0138C2  0012               	return	
 40791   0138C4                     l9761:
 40792                           
 40793                           ;../../VLCBlib_PIC/mns.c: 878:         return *(const uint8_t*)0x3FFFFD;
 40794   0138C4  0EFD               	movlw	253
 40795   0138C6  6EF6               	movwf	tblptrl,c
 40796   0138C8                     	if	1	;There is more than 1 active tblptr byte
 40797   0138C8  0EFF               	movlw	255
 40798   0138CA  6EF7               	movwf	tblptrh,c
 40799   0138CC                     	endif
 40800   0138CC                     	if	1	;There are 3 active tblptr bytes
 40801   0138CC  0E3F               	movlw	63
 40802   0138CE  6EF8               	movwf	tblptru,c
 40803   0138D0                     	endif
 40804   0138D0  0008               	tblrd		*
 40805   0138D2  50F5               	movf	tablat,w,c
 40806   0138D4  0012               	return	
 40807   0138D6                     l9765:
 40808                           
 40809                           ;../../VLCBlib_PIC/mns.c: 881:         return *(const uint8_t*)0x3FFFFE;
 40810   0138D6  0EFE               	movlw	254
 40811   0138D8  6EF6               	movwf	tblptrl,c
 40812   0138DA                     	if	1	;There is more than 1 active tblptr byte
 40813   0138DA  0EFF               	movlw	255
 40814   0138DC  6EF7               	movwf	tblptrh,c
 40815   0138DE                     	endif
 40816   0138DE                     	if	1	;There are 3 active tblptr bytes
 40817   0138DE  0E3F               	movlw	63
 40818   0138E0  6EF8               	movwf	tblptru,c
 40819   0138E2                     	endif
 40820   0138E2  0008               	tblrd		*
 40821   0138E4  50F5               	movf	tablat,w,c
 40822   0138E6  0012               	return	
 40823   0138E8                     l9769:
 40824                           
 40825                           ;../../VLCBlib_PIC/mns.c: 883:         return *(const uint8_t*)0x3FFFFF;
 40826   0138E8  0EFF               	movlw	255
 40827   0138EA  6EF6               	movwf	tblptrl,c
 40828   0138EC                     	if	1	;There is more than 1 active tblptr byte
 40829   0138EC  0EFF               	movlw	255
 40830   0138EE  6EF7               	movwf	tblptrh,c
 40831   0138F0                     	endif
 40832   0138F0                     	if	1	;There are 3 active tblptr bytes
 40833   0138F0  0E3F               	movlw	63
 40834   0138F2  6EF8               	movwf	tblptru,c
 40835   0138F4                     	endif
 40836   0138F4  0008               	tblrd		*
 40837   0138F6  50F5               	movf	tablat,w,c
 40838   0138F8  0012               	return	
 40839   0138FA                     l9787:
 40840   0138FA  5006               	movf	getParameter@idx^(0+1280),w,c
 40841                           
 40842                           ; Switch size 1, requested type "simple"
 40843                           ; Number of cases is 21, Range of values is 0 to 20
 40844                           ; switch strategies available:
 40845                           ; Name         Instructions Cycles
 40846                           ; simple_byte           64    33 (average)
 40847                           ;	Chosen strategy is simple_byte
 40848   0138FC  0A00               	xorlw	0	; case 0
 40849   0138FE  B4D8               	btfsc	status,2,c
 40850   013900  D7B7               	goto	l9691
 40851   013902  0A01               	xorlw	1	; case 1
 40852   013904  B4D8               	btfsc	status,2,c
 40853   013906  D7B6               	goto	l9695
 40854   013908  0A03               	xorlw	3	; case 2
 40855   01390A  B4D8               	btfsc	status,2,c
 40856   01390C  D7B5               	goto	l9699
 40857   01390E  0A01               	xorlw	1	; case 3
 40858   013910  B4D8               	btfsc	status,2,c
 40859   013912  D7B4               	goto	l9703
 40860   013914  0A07               	xorlw	7	; case 4
 40861   013916  B4D8               	btfsc	status,2,c
 40862   013918  D7B3               	goto	l9707
 40863   01391A  0A01               	xorlw	1	; case 5
 40864   01391C  B4D8               	btfsc	status,2,c
 40865   01391E  D7B2               	goto	l9711
 40866   013920  0A03               	xorlw	3	; case 6
 40867   013922  B4D8               	btfsc	status,2,c
 40868   013924  D7B1               	goto	l9715
 40869   013926  0A01               	xorlw	1	; case 7
 40870   013928  B4D8               	btfsc	status,2,c
 40871   01392A  D7B0               	goto	l9719
 40872   01392C  0A0F               	xorlw	15	; case 8
 40873   01392E  B4D8               	btfsc	status,2,c
 40874   013930  D7AF               	goto	l9723
 40875   013932  0A01               	xorlw	1	; case 9
 40876   013934  B4D8               	btfsc	status,2,c
 40877   013936  D7AF               	goto	l9727
 40878   013938  0A03               	xorlw	3	; case 10
 40879   01393A  B4D8               	btfsc	status,2,c
 40880   01393C  D7AE               	goto	l9731
 40881   01393E  0A01               	xorlw	1	; case 11
 40882   013940  B4D8               	btfsc	status,2,c
 40883   013942  D7B3               	goto	l9737
 40884   013944  0A07               	xorlw	7	; case 12
 40885   013946  B4D8               	btfsc	status,2,c
 40886   013948  D7B2               	goto	l9745
 40887   01394A  0A01               	xorlw	1	; case 13
 40888   01394C  B4D8               	btfsc	status,2,c
 40889   01394E  D7AD               	goto	l9737
 40890   013950  0A03               	xorlw	3	; case 14
 40891   013952  B4D8               	btfsc	status,2,c
 40892   013954  D7AA               	goto	l9737
 40893   013956  0A01               	xorlw	1	; case 15
 40894   013958  B4D8               	btfsc	status,2,c
 40895   01395A  D7AB               	goto	l9757
 40896   01395C  0A1F               	xorlw	31	; case 16
 40897   01395E  B4D8               	btfsc	status,2,c
 40898   013960  D7B1               	goto	l9761
 40899   013962  0A01               	xorlw	1	; case 17
 40900   013964  B4D8               	btfsc	status,2,c
 40901   013966  D7B7               	goto	l9765
 40902   013968  0A03               	xorlw	3	; case 18
 40903   01396A  B4D8               	btfsc	status,2,c
 40904   01396C  D7BD               	goto	l9769
 40905   01396E  0A01               	xorlw	1	; case 19
 40906   013970  B4D8               	btfsc	status,2,c
 40907   013972  D799               	goto	u7590
 40908   013974  0A07               	xorlw	7	; case 20
 40909   013976  B4D8               	btfsc	status,2,c
 40910   013978  D79A               	goto	l9745
 40911   01397A  D797               	goto	l9737
 40912   01397C                     __end_of_getParameter:
 40913                           	callstack 0
 40914                           
 40915 ;; *************** function _getParameterFlags *****************
 40916 ;; Defined at:
 40917 ;;		line 609 in file "../../VLCBlib_PIC/mns.c"
 40918 ;; Parameters:    Size  Location     Type
 40919 ;;		None
 40920 ;; Auto vars:     Size  Location     Type
 40921 ;;  flags           1    4[COMRAM] unsigned char 
 40922 ;; Return value:  Size  Location     Type
 40923 ;;                  1    wreg      unsigned char 
 40924 ;; Registers used:
 40925 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40926 ;; Tracked objects:
 40927 ;;		On entry : 0/0
 40928 ;;		On exit  : 0/0
 40929 ;;		Unchanged: 0/0
 40930 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 40931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40932 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40934 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 40935 ;;Total ram usage:        1 bytes
 40936 ;; Hardware stack levels used: 1
 40937 ;; Hardware stack levels required when called: 2
 40938 ;; This function calls:
 40939 ;;		_have
 40940 ;; This function is called by:
 40941 ;;		_mnsProcessMessage
 40942 ;;		_getParameter
 40943 ;; This function uses a non-reentrant model
 40944 ;;
 40945                           
 40946                           	psect	text86
 40947   015E4E                     __ptext86:
 40948                           	callstack 0
 40949   015E4E                     _getParameterFlags:
 40950                           	callstack 120
 40951                           
 40952                           ;../../VLCBlib_PIC/mns.c: 610:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 611:     flag
      +                          s = 0;
 40953                           
 40954                           ;incstack = 0
 40955   015E4E  6A05               	clrf	getParameterFlags@flags^(0+1280),c
 40956                           
 40957                           ;../../VLCBlib_PIC/mns.c: 612:     if (have(SERVICE_ID_CONSUMER)) {
 40958   015E50  0E06               	movlw	6
 40959   015E52  ECC9  F0A8         	call	_have
 40960   015E56  0900               	iorlw	0
 40961   015E58  A4D8               	btfss	status,2,c
 40962                           
 40963                           ;../../VLCBlib_PIC/mns.c: 613:         flags |= 1;
 40964   015E5A  8005               	bsf	getParameterFlags@flags^(0+1280),0,c
 40965                           
 40966                           ;../../VLCBlib_PIC/mns.c: 615:     if (have(SERVICE_ID_PRODUCER)) {
 40967   015E5C  0E05               	movlw	5
 40968   015E5E  ECC9  F0A8         	call	_have
 40969   015E62  0900               	iorlw	0
 40970   015E64  A4D8               	btfss	status,2,c
 40971                           
 40972                           ;../../VLCBlib_PIC/mns.c: 616:         flags |= 2;
 40973   015E66  8205               	bsf	getParameterFlags@flags^(0+1280),1,c
 40974                           
 40975                           ;../../VLCBlib_PIC/mns.c: 618:     if (flags == (2 | 1)) flags |= 16;
 40976   015E68  0E03               	movlw	3
 40977   015E6A  1805               	xorwf	getParameterFlags@flags^(0+1280),w,c
 40978   015E6C  B4D8               	btfsc	status,2,c
 40979   015E6E  8805               	bsf	getParameterFlags@flags^(0+1280),4,c
 40980                           
 40981                           ;../../VLCBlib_PIC/mns.c: 619:     if (have(SERVICE_ID_BOOT)) {
 40982   015E70  0E0A               	movlw	10
 40983   015E72  ECC9  F0A8         	call	_have
 40984   015E76  0900               	iorlw	0
 40985   015E78  A4D8               	btfss	status,2,c
 40986                           
 40987                           ;../../VLCBlib_PIC/mns.c: 620:         flags |= 8;
 40988   015E7A  8605               	bsf	getParameterFlags@flags^(0+1280),3,c
 40989                           
 40990                           ;../../VLCBlib_PIC/mns.c: 622:     if (mode_flags & 1) {
 40991   015E7C  0105               	movlb	5	; () banked
 40992   015E7E  B1A0               	btfsc	_mode_flags& (0+255),0,b
 40993                           
 40994                           ; BSR set to: 5
 40995                           ;../../VLCBlib_PIC/mns.c: 623:         flags |= 32;
 40996   015E80  8A05               	bsf	getParameterFlags@flags^(0+1280),5,c
 40997                           
 40998                           ; BSR set to: 5
 40999                           ;../../VLCBlib_PIC/mns.c: 625:     if (mode_state == MODE_NORMAL) {
 41000   015E82  0591               	decf	_mode_state& (0+255),w,b
 41001   015E84  B4D8               	btfsc	status,2,c
 41002                           
 41003                           ; BSR set to: 5
 41004                           ;../../VLCBlib_PIC/mns.c: 626:         flags |= 4;
 41005   015E86  8405               	bsf	getParameterFlags@flags^(0+1280),2,c
 41006                           
 41007                           ; BSR set to: 5
 41008                           ;../../VLCBlib_PIC/mns.c: 629:     flags |= 64;
 41009                           
 41010                           ;../../VLCBlib_PIC/mns.c: 627:     }
 41011   015E88  8C05               	bsf	getParameterFlags@flags^(0+1280),6,c
 41012                           
 41013                           ; BSR set to: 5
 41014                           ;../../VLCBlib_PIC/mns.c: 631:     return flags;
 41015   015E8A  5005               	movf	getParameterFlags@flags^(0+1280),w,c
 41016                           
 41017                           ; BSR set to: 5
 41018   015E8C  0012               	return		;funcret
 41019   015E8E                     __end_of_getParameterFlags:
 41020                           	callstack 0
 41021                           
 41022 ;; *************** function _canWaitForTxQueueToDrain *****************
 41023 ;; Defined at:
 41024 ;;		line 671 in file "../../VLCBlib_PIC/can18_can_2.c"
 41025 ;; Parameters:    Size  Location     Type
 41026 ;;		None
 41027 ;; Auto vars:     Size  Location     Type
 41028 ;;		None
 41029 ;; Return value:  Size  Location     Type
 41030 ;;                  1    wreg      void 
 41031 ;; Registers used:
 41032 ;;		None
 41033 ;; Tracked objects:
 41034 ;;		On entry : 0/0
 41035 ;;		On exit  : 0/0
 41036 ;;		Unchanged: 0/0
 41037 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41042 ;;Total ram usage:        0 bytes
 41043 ;; Hardware stack levels used: 1
 41044 ;; Hardware stack levels required when called: 1
 41045 ;; This function calls:
 41046 ;;		Nothing
 41047 ;; This function is called by:
 41048 ;;		_mnsProcessMessage
 41049 ;; This function uses a non-reentrant model
 41050 ;;
 41051                           
 41052                           	psect	text87
 41053   01678C                     __ptext87:
 41054                           	callstack 0
 41055   01678C                     _canWaitForTxQueueToDrain:
 41056                           	callstack 123
 41057                           
 41058                           ;../../VLCBlib_PIC/can18_can_2.c: 672:     while (C1FIFOCON2H & 0x2) {
 41059                           
 41060                           ;../../VLCBlib_PIC/can18_can_2.c: 674:     }
 41061                           
 41062                           ; BSR set to: 5
 41063                           ;incstack = 0
 41064   01678C  0101               	movlb	1	; () banked
 41065   01678E  A369               	btfss	105,1,b	;volatile
 41066   016790  0012               	return	
 41067   016792  D7FC               	goto	__ptext87
 41068   016794                     __end_of_canWaitForTxQueueToDrain:
 41069                           	callstack 0
 41070                           
 41071 ;; *************** function _sendMessage7 *****************
 41072 ;; Defined at:
 41073 ;;		line 1222 in file "../../VLCBlib_PIC/vlcb.c"
 41074 ;; Parameters:    Size  Location     Type
 41075 ;;  opc             1    wreg     enum E22928
 41076 ;;  data1           1   36[COMRAM] unsigned char 
 41077 ;;  data2           1   37[COMRAM] unsigned char 
 41078 ;;  data3           1   38[COMRAM] unsigned char 
 41079 ;;  data4           1   39[COMRAM] unsigned char 
 41080 ;;  data5           1   40[COMRAM] unsigned char 
 41081 ;;  data6           1   41[COMRAM] unsigned char 
 41082 ;;  data7           1   42[COMRAM] unsigned char 
 41083 ;; Auto vars:     Size  Location     Type
 41084 ;;  opc             1   43[COMRAM] enum E22928
 41085 ;; Return value:  Size  Location     Type
 41086 ;;                  1    wreg      void 
 41087 ;; Registers used:
 41088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 41089 ;; Tracked objects:
 41090 ;;		On entry : 0/0
 41091 ;;		On exit  : 0/0
 41092 ;;		Unchanged: 0/0
 41093 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41094 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41097 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41098 ;;Total ram usage:        8 bytes
 41099 ;; Hardware stack levels used: 1
 41100 ;; Hardware stack levels required when called: 5
 41101 ;; This function calls:
 41102 ;;		_sendMessage
 41103 ;; This function is called by:
 41104 ;;		_consumerProcessMessage
 41105 ;;		_nerdCallback
 41106 ;;		_mnsProcessMessage
 41107 ;; This function uses a non-reentrant model
 41108 ;;
 41109                           
 41110                           	psect	text88
 41111   016370                     __ptext88:
 41112                           	callstack 0
 41113   016370                     _sendMessage7:
 41114                           	callstack 118
 41115                           
 41116                           ; BSR set to: 1
 41117                           ;incstack = 0
 41118                           ;sendMessage7@opc stored from wreg
 41119   016370  6E2C               	movwf	sendMessage7@opc^(0+1280),c
 41120                           
 41121                           ;../../VLCBlib_PIC/vlcb.c: 1223:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 41122   016372  0E08               	movlw	8
 41123   016374  6E1C               	movwf	sendMessage@len^(0+1280),c
 41124   016376  C525  F51D         	movff	sendMessage7@data1,sendMessage@data1
 41125   01637A  C526  F51E         	movff	sendMessage7@data2,sendMessage@data2
 41126   01637E  C527  F51F         	movff	sendMessage7@data3,sendMessage@data3
 41127   016382  C528  F520         	movff	sendMessage7@data4,sendMessage@data4
 41128   016386  C529  F521         	movff	sendMessage7@data5,sendMessage@data5
 41129   01638A  C52A  F522         	movff	sendMessage7@data6,sendMessage@data6
 41130   01638E  C52B  F523         	movff	sendMessage7@data7,sendMessage@data7
 41131   016392  502C               	movf	sendMessage7@opc^(0+1280),w,c
 41132   016394  ECBA  F0A6         	call	_sendMessage
 41133   016398  0012               	return		;funcret
 41134   01639A                     __end_of_sendMessage7:
 41135                           	callstack 0
 41136                           
 41137 ;; *************** function _isConsumedEvent *****************
 41138 ;; Defined at:
 41139 ;;		line 208 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 41140 ;; Parameters:    Size  Location     Type
 41141 ;;  eventIndex      1    wreg     unsigned char 
 41142 ;; Auto vars:     Size  Location     Type
 41143 ;;  eventIndex      1   27[COMRAM] unsigned char 
 41144 ;; Return value:  Size  Location     Type
 41145 ;;                  1    wreg      unsigned char 
 41146 ;; Registers used:
 41147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41148 ;; Tracked objects:
 41149 ;;		On entry : 0/0
 41150 ;;		On exit  : 0/0
 41151 ;;		Unchanged: 0/0
 41152 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41156 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41157 ;;Total ram usage:        1 bytes
 41158 ;; Hardware stack levels used: 1
 41159 ;; Hardware stack levels required when called: 5
 41160 ;; This function calls:
 41161 ;;		_APP_isConsumedEvent
 41162 ;; This function is called by:
 41163 ;;		_consumerProcessMessage
 41164 ;; This function uses a non-reentrant model
 41165 ;;
 41166                           
 41167                           	psect	text89
 41168   016782                     __ptext89:
 41169                           	callstack 0
 41170   016782                     _isConsumedEvent:
 41171                           	callstack 119
 41172                           
 41173                           ;incstack = 0
 41174                           ;isConsumedEvent@eventIndex stored from wreg
 41175   016782  6E1C               	movwf	isConsumedEvent@eventIndex^(0+1280),c
 41176                           
 41177                           ;../../VLCBlib_PIC/event_consumer_simple.c: 209:     return APP_isConsumedEvent(eventInd
      +                          ex);
 41178   016784  501C               	movf	isConsumedEvent@eventIndex^(0+1280),w,c
 41179   016786  ECD3  F0A3         	call	_APP_isConsumedEvent
 41180   01678A  0012               	return		;funcret
 41181   01678C                     __end_of_isConsumedEvent:
 41182                           	callstack 0
 41183                           
 41184 ;; *************** function _APP_isConsumedEvent *****************
 41185 ;; Defined at:
 41186 ;;		line 135 in file "../canpan3Events.c"
 41187 ;; Parameters:    Size  Location     Type
 41188 ;;  tableIndex      1    wreg     unsigned char 
 41189 ;; Auto vars:     Size  Location     Type
 41190 ;;  tableIndex      1   24[COMRAM] unsigned char 
 41191 ;;  ev              2   25[COMRAM] short 
 41192 ;; Return value:  Size  Location     Type
 41193 ;;                  1    wreg      unsigned char 
 41194 ;; Registers used:
 41195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41196 ;; Tracked objects:
 41197 ;;		On entry : 0/0
 41198 ;;		On exit  : 0/0
 41199 ;;		Unchanged: 0/0
 41200 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41202 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41204 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41205 ;;Total ram usage:        3 bytes
 41206 ;; Hardware stack levels used: 1
 41207 ;; Hardware stack levels required when called: 4
 41208 ;; This function calls:
 41209 ;;		_getEv
 41210 ;; This function is called by:
 41211 ;;		_isConsumedEvent
 41212 ;; This function uses a non-reentrant model
 41213 ;;
 41214                           
 41215                           	psect	text90
 41216   0147A6                     __ptext90:
 41217                           	callstack 0
 41218   0147A6                     _APP_isConsumedEvent:
 41219                           	callstack 119
 41220                           
 41221                           ;incstack = 0
 41222                           ;APP_isConsumedEvent@tableIndex stored from wreg
 41223   0147A6  6E19               	movwf	APP_isConsumedEvent@tableIndex^(0+1280),c
 41224                           
 41225                           ;../canpan3Events.c: 136:     int16_t ev;;../canpan3Events.c: 138:     ev = getEv(tableI
      +                          ndex, 0);
 41226   0147A8  0E00               	movlw	0
 41227   0147AA  6E0D               	movwf	getEv@evNum^(0+1280),c
 41228   0147AC  5019               	movf	APP_isConsumedEvent@tableIndex^(0+1280),w,c
 41229   0147AE  ECA3  F0A9         	call	_getEv
 41230   0147B2  C50D  F51A         	movff	?_getEv,APP_isConsumedEvent@ev
 41231   0147B6  C50E  F51B         	movff	?_getEv+1,APP_isConsumedEvent@ev+1
 41232                           
 41233                           ;../canpan3Events.c: 139:     if (ev < 0) {
 41234   0147BA  AE1B               	btfss	(APP_isConsumedEvent@ev+1)^(0+1280),7,c
 41235   0147BC  D002               	goto	l170
 41236                           
 41237                           ;../canpan3Events.c: 141:         return 0;
 41238   0147BE  0E00               	movlw	0
 41239   0147C0  0012               	return	
 41240   0147C2                     l170:
 41241                           
 41242                           ;../canpan3Events.c: 144:     if ((ev & 2) == 2) {
 41243   0147C2  A21A               	btfss	APP_isConsumedEvent@ev^(0+1280),1,c
 41244   0147C4  D002               	goto	l8975
 41245   0147C6                     u6660:
 41246                           
 41247                           ;../canpan3Events.c: 145:         return 1;
 41248   0147C6  0E01               	movlw	1
 41249   0147C8  0012               	return	
 41250   0147CA                     l8975:
 41251                           
 41252                           ;../canpan3Events.c: 147:     ev = getEv(tableIndex, 4);
 41253   0147CA  0E04               	movlw	4
 41254   0147CC  6E0D               	movwf	getEv@evNum^(0+1280),c
 41255   0147CE  5019               	movf	APP_isConsumedEvent@tableIndex^(0+1280),w,c
 41256   0147D0  ECA3  F0A9         	call	_getEv
 41257   0147D4  C50D  F51A         	movff	?_getEv,APP_isConsumedEvent@ev
 41258   0147D8  C50E  F51B         	movff	?_getEv+1,APP_isConsumedEvent@ev+1
 41259                           
 41260                           ;../canpan3Events.c: 148:     if (ev) return 1;
 41261   0147DC  501A               	movf	APP_isConsumedEvent@ev^(0+1280),w,c
 41262   0147DE  101B               	iorwf	(APP_isConsumedEvent@ev+1)^(0+1280),w,c
 41263   0147E0  A4D8               	btfss	status,2,c
 41264   0147E2  D7F1               	goto	u6660
 41265                           
 41266                           ;../canpan3Events.c: 149:     ev = getEv(tableIndex, 5);
 41267   0147E4  0E05               	movlw	5
 41268   0147E6  6E0D               	movwf	getEv@evNum^(0+1280),c
 41269   0147E8  5019               	movf	APP_isConsumedEvent@tableIndex^(0+1280),w,c
 41270   0147EA  ECA3  F0A9         	call	_getEv
 41271   0147EE  C50D  F51A         	movff	?_getEv,APP_isConsumedEvent@ev
 41272   0147F2  C50E  F51B         	movff	?_getEv+1,APP_isConsumedEvent@ev+1
 41273                           
 41274                           ;../canpan3Events.c: 150:     if (ev) return 1;
 41275   0147F6  501A               	movf	APP_isConsumedEvent@ev^(0+1280),w,c
 41276   0147F8  101B               	iorwf	(APP_isConsumedEvent@ev+1)^(0+1280),w,c
 41277   0147FA  A4D8               	btfss	status,2,c
 41278   0147FC  D7E4               	goto	u6660
 41279                           
 41280                           ;../canpan3Events.c: 151:     ev = getEv(tableIndex, 6);
 41281   0147FE  0E06               	movlw	6
 41282   014800  6E0D               	movwf	getEv@evNum^(0+1280),c
 41283   014802  5019               	movf	APP_isConsumedEvent@tableIndex^(0+1280),w,c
 41284   014804  ECA3  F0A9         	call	_getEv
 41285   014808  C50D  F51A         	movff	?_getEv,APP_isConsumedEvent@ev
 41286   01480C  C50E  F51B         	movff	?_getEv+1,APP_isConsumedEvent@ev+1
 41287                           
 41288                           ;../canpan3Events.c: 152:     if (ev) return 1;
 41289   014810  501A               	movf	APP_isConsumedEvent@ev^(0+1280),w,c
 41290   014812  101B               	iorwf	(APP_isConsumedEvent@ev+1)^(0+1280),w,c
 41291   014814  A4D8               	btfss	status,2,c
 41292   014816  D7D7               	goto	u6660
 41293                           
 41294                           ;../canpan3Events.c: 153:     ev = getEv(tableIndex, 7);
 41295   014818  0E07               	movlw	7
 41296   01481A  6E0D               	movwf	getEv@evNum^(0+1280),c
 41297   01481C  5019               	movf	APP_isConsumedEvent@tableIndex^(0+1280),w,c
 41298   01481E  ECA3  F0A9         	call	_getEv
 41299   014822  C50D  F51A         	movff	?_getEv,APP_isConsumedEvent@ev
 41300   014826  C50E  F51B         	movff	?_getEv+1,APP_isConsumedEvent@ev+1
 41301                           
 41302                           ;../canpan3Events.c: 154:     return ev != 0;
 41303   01482A  501A               	movf	APP_isConsumedEvent@ev^(0+1280),w,c
 41304   01482C  101B               	iorwf	(APP_isConsumedEvent@ev+1)^(0+1280),w,c
 41305   01482E  B4D8               	btfsc	status,2,c
 41306   014830  D002               	goto	u6700
 41307   014832  0E01               	movlw	1
 41308   014834  0012               	return	
 41309   014836                     u6700:
 41310   014836  0E00               	movlw	0
 41311   014838  0012               	return		;funcret
 41312   01483A                     __end_of_APP_isConsumedEvent:
 41313                           	callstack 0
 41314                           
 41315 ;; *************** function _getEv *****************
 41316 ;; Defined at:
 41317 ;;		line 865 in file "../../VLCBlib_PIC/event_teach_simple.c"
 41318 ;; Parameters:    Size  Location     Type
 41319 ;;  tableIndex      1    wreg     unsigned char 
 41320 ;;  evNum           1   12[COMRAM] unsigned char 
 41321 ;; Auto vars:     Size  Location     Type
 41322 ;;  tableIndex      1   23[COMRAM] unsigned char 
 41323 ;; Return value:  Size  Location     Type
 41324 ;;                  2   12[COMRAM] short 
 41325 ;; Registers used:
 41326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41327 ;; Tracked objects:
 41328 ;;		On entry : 0/0
 41329 ;;		On exit  : 0/0
 41330 ;;		Unchanged: 0/0
 41331 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41334 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41335 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41336 ;;Total ram usage:       12 bytes
 41337 ;; Hardware stack levels used: 1
 41338 ;; Hardware stack levels required when called: 3
 41339 ;; This function calls:
 41340 ;;		_readNVM
 41341 ;; This function is called by:
 41342 ;;		_rebuildLookupTable
 41343 ;;		_APP_isConsumedEvent
 41344 ;;		_APP_isProducedEvent
 41345 ;;		_APP_preProcessMessage
 41346 ;;		_doReval
 41347 ;;		_doReqev
 41348 ;;		_reqevCallback
 41349 ;; This function uses a non-reentrant model
 41350 ;;
 41351                           
 41352                           	psect	text91
 41353   015346                     __ptext91:
 41354                           	callstack 0
 41355   015346                     _getEv:
 41356                           	callstack 120
 41357                           
 41358                           ;incstack = 0
 41359                           ;getEv@tableIndex stored from wreg
 41360   015346  6E18               	movwf	getEv@tableIndex^(0+1280),c
 41361                           
 41362                           ;../../VLCBlib_PIC/event_teach_simple.c: 866:     if (tableIndex >= 254) {
 41363   015348  0EFD               	movlw	253
 41364   01534A  6418               	cpfsgt	getEv@tableIndex^(0+1280),c
 41365   01534C  D005               	goto	l8835
 41366                           
 41367                           ;../../VLCBlib_PIC/event_teach_simple.c: 867:         return CMDERR_INV_EN_IDX;
 41368   01534E  0E00               	movlw	0
 41369   015350  6E0E               	movwf	(?_getEv+1)^(0+1280),c
 41370   015352  0E08               	movlw	8
 41371   015354  6E0D               	movwf	?_getEv^(0+1280),c
 41372   015356  0012               	return	
 41373   015358                     l8835:
 41374                           
 41375                           ;../../VLCBlib_PIC/event_teach_simple.c: 869:     if (evNum >= 13) {
 41376   015358  0E0C               	movlw	12
 41377   01535A  640D               	cpfsgt	getEv@evNum^(0+1280),c
 41378   01535C  D005               	goto	l8841
 41379                           
 41380                           ;../../VLCBlib_PIC/event_teach_simple.c: 870:         return -CMDERR_INV_EV_IDX;
 41381   01535E  0EFF               	movlw	255
 41382   015360  6E0E               	movwf	(?_getEv+1)^(0+1280),c
 41383   015362  0EFA               	movlw	250
 41384   015364  6E0D               	movwf	?_getEv^(0+1280),c
 41385   015366  0012               	return	
 41386   015368                     l8841:
 41387                           
 41388                           ;../../VLCBlib_PIC/event_teach_simple.c: 872:     return (uint8_t)readNVM(FLASH_NVM_TYPE
      +                          , 0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+5 +evNum);
 41389   015368  500D               	movf	getEv@evNum^(0+1280),w,c
 41390   01536A  6E0F               	movwf	??_getEv^(0+1280),c
 41391   01536C  6A10               	clrf	(??_getEv+1)^(0+1280),c
 41392   01536E  6A11               	clrf	(??_getEv+2)^(0+1280),c
 41393   015370  5018               	movf	getEv@tableIndex^(0+1280),w,c
 41394   015372  0D12               	mullw	18
 41395   015374  C4F3 F512          	movff	prodl,??_getEv+3
 41396   015378  C4F4 F513          	movff	prodh,??_getEv+4
 41397   01537C  6A14               	clrf	(??_getEv+5)^(0+1280),c
 41398   01537E  500F               	movf	??_getEv^(0+1280),w,c
 41399   015380  2412               	addwf	(??_getEv+3)^(0+1280),w,c
 41400   015382  6E15               	movwf	(??_getEv+6)^(0+1280),c
 41401   015384  5010               	movf	(??_getEv+1)^(0+1280),w,c
 41402   015386  2013               	addwfc	(??_getEv+4)^(0+1280),w,c
 41403   015388  6E16               	movwf	(??_getEv+7)^(0+1280),c
 41404   01538A  5011               	movf	(??_getEv+2)^(0+1280),w,c
 41405   01538C  2014               	addwfc	(??_getEv+5)^(0+1280),w,c
 41406   01538E  6E17               	movwf	(??_getEv+8)^(0+1280),c
 41407   015390  0E05               	movlw	5
 41408   015392  2415               	addwf	(??_getEv+6)^(0+1280),w,c
 41409   015394  6E07               	movwf	readNVM@index^(0+1280),c
 41410   015396  0EE8               	movlw	232
 41411   015398  2016               	addwfc	(??_getEv+7)^(0+1280),w,c
 41412   01539A  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 41413   01539C  0E01               	movlw	1
 41414   01539E  2017               	addwfc	(??_getEv+8)^(0+1280),w,c
 41415   0153A0  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 41416   0153A2  0E01               	movlw	1
 41417   0153A4  EC6C  F0AB         	call	_readNVM
 41418   0153A8  5007               	movf	?_readNVM^(0+1280),w,c
 41419   0153AA  6E0D               	movwf	?_getEv^(0+1280),c
 41420   0153AC  6A0E               	clrf	(?_getEv+1)^(0+1280),c
 41421   0153AE  0012               	return		;funcret
 41422   0153B0                     __end_of_getEv:
 41423                           	callstack 0
 41424                           
 41425 ;; *************** function _consumerEventCheckLen *****************
 41426 ;; Defined at:
 41427 ;;		line 248 in file "../../VLCBlib_PIC/event_consumer_simple.c"
 41428 ;; Parameters:    Size  Location     Type
 41429 ;;  m               2   47[COMRAM] PTR struct Message
 41430 ;;		 -> poll@m(9), 
 41431 ;;  needed          1   49[COMRAM] unsigned char 
 41432 ;; Auto vars:     Size  Location     Type
 41433 ;;		None
 41434 ;; Return value:  Size  Location     Type
 41435 ;;                  1    wreg      enum E23340
 41436 ;; Registers used:
 41437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 41438 ;; Tracked objects:
 41439 ;;		On entry : 0/0
 41440 ;;		On exit  : 0/0
 41441 ;;		Unchanged: 0/0
 41442 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41443 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41446 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41447 ;;Total ram usage:        3 bytes
 41448 ;; Hardware stack levels used: 1
 41449 ;; Hardware stack levels required when called: 7
 41450 ;; This function calls:
 41451 ;;		_checkLen
 41452 ;; This function is called by:
 41453 ;;		_consumerProcessMessage
 41454 ;; This function uses a non-reentrant model
 41455 ;;
 41456                           
 41457                           	psect	text92
 41458   0166E4                     __ptext92:
 41459                           	callstack 0
 41460   0166E4                     _consumerEventCheckLen:
 41461                           	callstack 117
 41462                           
 41463                           ;../../VLCBlib_PIC/event_consumer_simple.c: 249:     return checkLen(m, needed, SERVICE_
      +                          ID_CONSUMER);
 41464                           
 41465                           ;incstack = 0
 41466   0166E4  C530  F52B         	movff	consumerEventCheckLen@m,checkLen@m
 41467   0166E8  C531  F52C         	movff	consumerEventCheckLen@m+1,checkLen@m+1
 41468   0166EC  C532  F52D         	movff	consumerEventCheckLen@needed,checkLen@needed
 41469   0166F0  0E06               	movlw	6
 41470   0166F2  6E2E               	movwf	checkLen@service^(0+1280),c
 41471   0166F4  EC21  F0A8         	call	_checkLen	;wreg free
 41472   0166F8  0012               	return		;funcret
 41473   0166FA                     __end_of_consumerEventCheckLen:
 41474                           	callstack 0
 41475                           
 41476 ;; *************** function _checkLen *****************
 41477 ;; Defined at:
 41478 ;;		line 1108 in file "../../VLCBlib_PIC/vlcb.c"
 41479 ;; Parameters:    Size  Location     Type
 41480 ;;  m               2   42[COMRAM] PTR struct Message
 41481 ;;		 -> poll@m(9), 
 41482 ;;  needed          1   44[COMRAM] unsigned char 
 41483 ;;  service         1   45[COMRAM] unsigned char 
 41484 ;; Auto vars:     Size  Location     Type
 41485 ;;		None
 41486 ;; Return value:  Size  Location     Type
 41487 ;;                  1    wreg      enum E23340
 41488 ;; Registers used:
 41489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 41490 ;; Tracked objects:
 41491 ;;		On entry : 0/0
 41492 ;;		On exit  : 0/0
 41493 ;;		Unchanged: 0/0
 41494 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41495 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41498 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41499 ;;Total ram usage:        5 bytes
 41500 ;; Hardware stack levels used: 1
 41501 ;; Hardware stack levels required when called: 6
 41502 ;; This function calls:
 41503 ;;		_sendMessage5
 41504 ;; This function is called by:
 41505 ;;		_consumerEventCheckLen
 41506 ;;		_teachCheckLen
 41507 ;; This function uses a non-reentrant model
 41508 ;;
 41509                           
 41510                           	psect	text93
 41511   015042                     __ptext93:
 41512                           	callstack 0
 41513   015042                     _checkLen:
 41514                           	callstack 117
 41515                           
 41516                           ;../../VLCBlib_PIC/vlcb.c: 1109:     if (m->len < needed) {
 41517                           
 41518                           ;incstack = 0
 41519   015042  C52B  F4D9         	movff	checkLen@m,fsr2l
 41520   015046  C52C  F4DA         	movff	checkLen@m+1,fsr2h
 41521   01504A  502D               	movf	checkLen@needed^(0+1280),w,c
 41522   01504C  5CDE               	subwf	postinc2,w,c
 41523   01504E  B0D8               	btfsc	status,0,c
 41524   015050  D030               	goto	l9097
 41525                           
 41526                           ;../../VLCBlib_PIC/vlcb.c: 1111:         if (m->len > 2) {
 41527   015052  C52B  F4D9         	movff	checkLen@m,fsr2l
 41528   015056  C52C  F4DA         	movff	checkLen@m+1,fsr2h
 41529   01505A  0E02               	movlw	2
 41530   01505C  64DF               	cpfsgt	indf2,c
 41531   01505E  D027               	goto	l9093
 41532                           
 41533                           ;../../VLCBlib_PIC/vlcb.c: 1112:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 41534   015060  EE20 F002          	lfsr	2,2
 41535   015064  502B               	movf	checkLen@m^(0+1280),w,c
 41536   015066  26D9               	addwf	fsr2l,f,c
 41537   015068  502C               	movf	(checkLen@m+1)^(0+1280),w,c
 41538   01506A  22DA               	addwfc	fsr2h,f,c
 41539   01506C  50DE               	movf	postinc2,w,c
 41540   01506E  185F               	xorwf	(_nn+1)^(0+1280),w,c
 41541   015070  A4D8               	btfss	status,2,c
 41542   015072  D01D               	goto	l9093
 41543   015074  EE20 F003          	lfsr	2,3
 41544   015078  502B               	movf	checkLen@m^(0+1280),w,c
 41545   01507A  26D9               	addwf	fsr2l,f,c
 41546   01507C  502C               	movf	(checkLen@m+1)^(0+1280),w,c
 41547   01507E  22DA               	addwfc	fsr2h,f,c
 41548   015080  505E               	movf	_nn^(0+1280),w,c
 41549   015082  18DE               	xorwf	postinc2,w,c
 41550   015084  A4D8               	btfss	status,2,c
 41551   015086  D013               	goto	l9093
 41552                           
 41553                           ;../../VLCBlib_PIC/vlcb.c: 1113:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, (uint8_t)(m->opc), service, CMDERR_INV_CMD);
 41554   015088  C55F  F525         	movff	_nn+1,sendMessage5@data1
 41555   01508C  C55E  F526         	movff	_nn,sendMessage5@data2
 41556   015090  EE20 F001          	lfsr	2,1
 41557   015094  502B               	movf	checkLen@m^(0+1280),w,c
 41558   015096  26D9               	addwf	fsr2l,f,c
 41559   015098  502C               	movf	(checkLen@m+1)^(0+1280),w,c
 41560   01509A  22DA               	addwfc	fsr2h,f,c
 41561   01509C  50DF               	movf	indf2,w,c
 41562   01509E  6E27               	movwf	sendMessage5@data3^(0+1280),c
 41563   0150A0  C52E  F528         	movff	checkLen@service,sendMessage5@data4
 41564   0150A4  0E01               	movlw	1
 41565   0150A6  6E29               	movwf	sendMessage5@data5^(0+1280),c
 41566   0150A8  0EAF               	movlw	175
 41567   0150AA  ECCD  F0B1         	call	_sendMessage5
 41568   0150AE                     l9093:
 41569                           
 41570                           ;../../VLCBlib_PIC/vlcb.c: 1117:         return PROCESSED;
 41571   0150AE  0E01               	movlw	1
 41572   0150B0  0012               	return	
 41573   0150B2                     l9097:
 41574                           
 41575                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return NOT_PROCESSED;
 41576   0150B2  0E00               	movlw	0
 41577   0150B4  0012               	return		;funcret
 41578   0150B6                     __end_of_checkLen:
 41579                           	callstack 0
 41580                           
 41581 ;; *************** function _APP_processConsumedEvent *****************
 41582 ;; Defined at:
 41583 ;;		line 305 in file "../canpan3Events.c"
 41584 ;; Parameters:    Size  Location     Type
 41585 ;;  tableIndex      1    wreg     unsigned char 
 41586 ;;  m               2   23[COMRAM] PTR struct Message
 41587 ;;		 -> poll@m(9), 
 41588 ;; Auto vars:     Size  Location     Type
 41589 ;;  tableIndex      1   28[COMRAM] unsigned char 
 41590 ;;  ledNo           1   33[COMRAM] unsigned char 
 41591 ;;  onOff           1   32[COMRAM] unsigned char 
 41592 ;;  polarity        1   31[COMRAM] unsigned char 
 41593 ;;  flags           1   30[COMRAM] unsigned char 
 41594 ;;  ledMode         1   29[COMRAM] unsigned char 
 41595 ;; Return value:  Size  Location     Type
 41596 ;;                  1    wreg      enum E23290
 41597 ;; Registers used:
 41598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41599 ;; Tracked objects:
 41600 ;;		On entry : 0/0
 41601 ;;		On exit  : 0/0
 41602 ;;		Unchanged: 0/0
 41603 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41605 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41606 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41607 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41608 ;;Total ram usage:       11 bytes
 41609 ;; Hardware stack levels used: 1
 41610 ;; Hardware stack levels required when called: 5
 41611 ;; This function calls:
 41612 ;;		___awdiv
 41613 ;;		_doSoD
 41614 ;;		_getEVs
 41615 ;;		_setLedState
 41616 ;; This function is called by:
 41617 ;;		_consumerProcessMessage
 41618 ;; This function uses a non-reentrant model
 41619 ;;
 41620                           
 41621                           	psect	text94
 41622   0130AA                     __ptext94:
 41623                           	callstack 0
 41624   0130AA                     _APP_processConsumedEvent:
 41625                           	callstack 119
 41626                           
 41627                           ;incstack = 0
 41628                           ;APP_processConsumedEvent@tableIndex stored from wreg
 41629   0130AA  6E1D               	movwf	APP_processConsumedEvent@tableIndex^(0+1280),c
 41630                           
 41631                           ;../canpan3Events.c: 306:     uint8_t onOff;;../canpan3Events.c: 307:     uint8_t ledMod
      +                          e;;../canpan3Events.c: 308:     uint8_t ledNo;;../canpan3Events.c: 309:     uint8_t flag
      +                          s;;../canpan3Events.c: 310:     uint8_t polarity;;../canpan3Events.c: 312:     onOff = !
      +                          (m->opc & 1);
 41632   0130AC  EE20 F001          	lfsr	2,1
 41633   0130B0  5018               	movf	APP_processConsumedEvent@m^(0+1280),w,c
 41634   0130B2  26D9               	addwf	fsr2l,f,c
 41635   0130B4  5019               	movf	(APP_processConsumedEvent@m+1)^(0+1280),w,c
 41636   0130B6  22DA               	addwfc	fsr2h,f,c
 41637   0130B8  B0DF               	btfsc	indf2,0,c
 41638   0130BA  D002               	goto	u7050
 41639   0130BC  0E01               	movlw	1
 41640   0130BE  D001               	goto	u7060
 41641   0130C0                     u7050:
 41642   0130C0  0E00               	movlw	0
 41643   0130C2                     u7060:
 41644   0130C2  6E21               	movwf	APP_processConsumedEvent@onOff^(0+1280),c
 41645                           
 41646                           ;../canpan3Events.c: 313:     if (getEVs(tableIndex)) {
 41647   0130C4  501D               	movf	APP_processConsumedEvent@tableIndex^(0+1280),w,c
 41648   0130C6  ECD8  F0A9         	call	_getEVs
 41649   0130CA  0900               	iorlw	0
 41650   0130CC  B4D8               	btfsc	status,2,c
 41651   0130CE  D002               	goto	l9243
 41652   0130D0                     u7070:
 41653                           
 41654                           ;../canpan3Events.c: 315:         return PROCESSED;
 41655   0130D0  0E01               	movlw	1
 41656   0130D2  0012               	return	
 41657   0130D4                     l9243:
 41658                           
 41659                           ;../canpan3Events.c: 317:     if (onOff && ((evs[0] & 2) == 2)) {
 41660   0130D4  5021               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 41661   0130D6  B4D8               	btfsc	status,2,c
 41662   0130D8  D004               	goto	l9249
 41663   0130DA  0106               	movlb	6	; () banked
 41664   0130DC  B371               	btfsc	_evs& (0+255),1,b
 41665                           
 41666                           ; BSR set to: 6
 41667                           ;../canpan3Events.c: 318:         doSoD();
 41668   0130DE  EC1F  F0B2         	call	_doSoD	;wreg free
 41669   0130E2                     l9249:
 41670                           
 41671                           ;../canpan3Events.c: 321:     ledMode = evs[12];
 41672   0130E2  C67D  F51E         	movff	_evs+12,APP_processConsumedEvent@ledMode
 41673                           
 41674                           ;../canpan3Events.c: 322:     for (ledNo=0; ledNo<(4*8); ledNo++) {
 41675   0130E6  6A22               	clrf	APP_processConsumedEvent@ledNo^(0+1280),c
 41676   0130E8                     l9257:
 41677                           
 41678                           ;../canpan3Events.c: 323:         flags = evs[4 + ledNo/8] & (1 << (ledNo%8));
 41679   0130E8  C522  F501         	movff	APP_processConsumedEvent@ledNo,___awdiv@dividend
 41680   0130EC  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 41681   0130EE  0E00               	movlw	0
 41682   0130F0  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 41683   0130F2  0E08               	movlw	8
 41684   0130F4  6E03               	movwf	___awdiv@divisor^(0+1280),c
 41685   0130F6  ECF9  F0A5         	call	___awdiv	;wreg free
 41686   0130FA  0E75               	movlw	low (_evs+4)
 41687   0130FC  2401               	addwf	?___awdiv^(0+1280),w,c
 41688   0130FE  6ED9               	movwf	fsr2l,c
 41689   013100  0E06               	movlw	high (_evs+4)
 41690   013102  2002               	addwfc	(?___awdiv+1)^(0+1280),w,c
 41691   013104  6EDA               	movwf	fsr2h,c
 41692   013106  50DF               	movf	indf2,w,c
 41693   013108  6E1A               	movwf	??_APP_processConsumedEvent^(0+1280),c
 41694   01310A  C522  F51B         	movff	APP_processConsumedEvent@ledNo,??_APP_processConsumedEvent+1
 41695   01310E  0E07               	movlw	7
 41696   013110  161B               	andwf	(??_APP_processConsumedEvent+1)^(0+1280),f,c
 41697   013112  0E01               	movlw	1
 41698   013114  6E1C               	movwf	(??_APP_processConsumedEvent+2)^(0+1280),c
 41699   013116  2A1B               	incf	(??_APP_processConsumedEvent+1)^(0+1280),f,c
 41700   013118  D002               	goto	u7104
 41701   01311A                     u7105:
 41702   01311A  90D8               	bcf	status,0,c
 41703   01311C  361C               	rlcf	(??_APP_processConsumedEvent+2)^(0+1280),f,c
 41704   01311E                     u7104:
 41705   01311E  2E1B               	decfsz	(??_APP_processConsumedEvent+1)^(0+1280),f,c
 41706   013120  D7FC               	goto	u7105
 41707   013122  501C               	movf	(??_APP_processConsumedEvent+2)^(0+1280),w,c
 41708   013124  141A               	andwf	??_APP_processConsumedEvent^(0+1280),w,c
 41709   013126  6E1F               	movwf	APP_processConsumedEvent@flags^(0+1280),c
 41710                           
 41711                           ;../canpan3Events.c: 324:         if (flags) {
 41712   013128  501F               	movf	APP_processConsumedEvent@flags^(0+1280),w,c
 41713   01312A  B4D8               	btfsc	status,2,c
 41714   01312C  D08B               	goto	l9307
 41715                           
 41716                           ;../canpan3Events.c: 326:             polarity = evs[8 + ledNo/8]& (1 << (ledNo%8));
 41717   01312E  C522  F501         	movff	APP_processConsumedEvent@ledNo,___awdiv@dividend
 41718   013132  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 41719   013134  0E00               	movlw	0
 41720   013136  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 41721   013138  0E08               	movlw	8
 41722   01313A  6E03               	movwf	___awdiv@divisor^(0+1280),c
 41723   01313C  ECF9  F0A5         	call	___awdiv	;wreg free
 41724   013140  0E79               	movlw	low (_evs+8)
 41725   013142  2401               	addwf	?___awdiv^(0+1280),w,c
 41726   013144  6ED9               	movwf	fsr2l,c
 41727   013146  0E06               	movlw	high (_evs+8)
 41728   013148  2002               	addwfc	(?___awdiv+1)^(0+1280),w,c
 41729   01314A  6EDA               	movwf	fsr2h,c
 41730   01314C  50DF               	movf	indf2,w,c
 41731   01314E  6E1A               	movwf	??_APP_processConsumedEvent^(0+1280),c
 41732   013150  C522  F51B         	movff	APP_processConsumedEvent@ledNo,??_APP_processConsumedEvent+1
 41733   013154  0E07               	movlw	7
 41734   013156  161B               	andwf	(??_APP_processConsumedEvent+1)^(0+1280),f,c
 41735   013158  0E01               	movlw	1
 41736   01315A  6E1C               	movwf	(??_APP_processConsumedEvent+2)^(0+1280),c
 41737   01315C  2A1B               	incf	(??_APP_processConsumedEvent+1)^(0+1280),f,c
 41738   01315E  D002               	goto	u7124
 41739   013160                     u7125:
 41740   013160  90D8               	bcf	status,0,c
 41741   013162  361C               	rlcf	(??_APP_processConsumedEvent+2)^(0+1280),f,c
 41742   013164                     u7124:
 41743   013164  2E1B               	decfsz	(??_APP_processConsumedEvent+1)^(0+1280),f,c
 41744   013166  D7FC               	goto	u7125
 41745   013168  501C               	movf	(??_APP_processConsumedEvent+2)^(0+1280),w,c
 41746   01316A  141A               	andwf	??_APP_processConsumedEvent^(0+1280),w,c
 41747   01316C  6E20               	movwf	APP_processConsumedEvent@polarity^(0+1280),c
 41748                           
 41749                           ;../canpan3Events.c: 327:             switch(ledMode) {
 41750   01316E  D05D               	goto	l9305
 41751   013170                     l9263:
 41752                           
 41753                           ;../canpan3Events.c: 329:                     if (polarity) {
 41754   013170  5020               	movf	APP_processConsumedEvent@polarity^(0+1280),w,c
 41755   013172  B4D8               	btfsc	status,2,c
 41756   013174  D00F               	goto	l9271
 41757                           
 41758                           ;../canpan3Events.c: 331:                         if (onOff) {
 41759   013176  5021               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 41760   013178  B4D8               	btfsc	status,2,c
 41761   01317A  D006               	goto	l9269
 41762                           
 41763                           ;../canpan3Events.c: 332:                             setLedState(ledNo, CANPANLED_OFF);
 41764   01317C  0E01               	movlw	1
 41765   01317E  6E11               	movwf	setLedState@state^(0+1280),c
 41766   013180  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 41767   013182  ECD2  F0B2         	call	_setLedState
 41768                           
 41769                           ;../canpan3Events.c: 333:                         } else {
 41770   013186  D05E               	goto	l9307
 41771   013188                     l9269:
 41772                           
 41773                           ;../canpan3Events.c: 334:                             setLedState(ledNo, CANPANLED_ON);
 41774   013188  0E00               	movlw	0
 41775   01318A  6E11               	movwf	setLedState@state^(0+1280),c
 41776   01318C  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 41777   01318E  ECD2  F0B2         	call	_setLedState
 41778   013192  D058               	goto	l9307
 41779   013194                     l9271:
 41780                           
 41781                           ;../canpan3Events.c: 339:                         if (onOff) {
 41782   013194  5021               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 41783   013196  B4D8               	btfsc	status,2,c
 41784   013198  D006               	goto	l9275
 41785                           
 41786                           ;../canpan3Events.c: 340:                             setLedState(ledNo, CANPANLED_ON);
 41787   01319A  0E00               	movlw	0
 41788   01319C  6E11               	movwf	setLedState@state^(0+1280),c
 41789   01319E  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 41790   0131A0  ECD2  F0B2         	call	_setLedState
 41791                           
 41792                           ;../canpan3Events.c: 341:                         } else {
 41793   0131A4  D04F               	goto	l9307
 41794   0131A6                     l9275:
 41795                           
 41796                           ;../canpan3Events.c: 342:                             setLedState(ledNo, CANPANLED_OFF);
 41797   0131A6  0E01               	movlw	1
 41798   0131A8  6E11               	movwf	setLedState@state^(0+1280),c
 41799   0131AA  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 41800   0131AC  ECD2  F0B2         	call	_setLedState
 41801   0131B0  D049               	goto	l9307
 41802   0131B2                     l9277:
 41803                           
 41804                           ;../canpan3Events.c: 347:                     if (onOff) {
 41805   0131B2  5021               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 41806   0131B4  B4D8               	btfsc	status,2,c
 41807   0131B6  D046               	goto	l9307
 41808                           
 41809                           ;../canpan3Events.c: 348:                         if (polarity) {
 41810   0131B8  5020               	movf	APP_processConsumedEvent@polarity^(0+1280),w,c
 41811   0131BA  B4D8               	btfsc	status,2,c
 41812   0131BC  D006               	goto	l9283
 41813                           
 41814                           ;../canpan3Events.c: 349:                             setLedState(ledNo, CANPANLED_OFF);
 41815   0131BE  0E01               	movlw	1
 41816   0131C0  6E11               	movwf	setLedState@state^(0+1280),c
 41817   0131C2  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 41818   0131C4  ECD2  F0B2         	call	_setLedState
 41819                           
 41820                           ;../canpan3Events.c: 350:                         } else {
 41821   0131C8  D03D               	goto	l9307
 41822   0131CA                     l9283:
 41823                           
 41824                           ;../canpan3Events.c: 351:                             setLedState(ledNo, CANPANLED_ON);
 41825   0131CA  0E00               	movlw	0
 41826   0131CC  6E11               	movwf	setLedState@state^(0+1280),c
 41827   0131CE  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 41828   0131D0  ECD2  F0B2         	call	_setLedState
 41829   0131D4  D037               	goto	l9307
 41830   0131D6                     l9285:
 41831                           
 41832                           ;../canpan3Events.c: 356:                     if (!onOff) {
 41833   0131D6  5021               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 41834   0131D8  A4D8               	btfss	status,2,c
 41835   0131DA  D034               	goto	l9307
 41836                           
 41837                           ;../canpan3Events.c: 357:                         if (polarity) {
 41838   0131DC  5020               	movf	APP_processConsumedEvent@polarity^(0+1280),w,c
 41839   0131DE  B4D8               	btfsc	status,2,c
 41840   0131E0  D006               	goto	l9291
 41841                           
 41842                           ;../canpan3Events.c: 358:                             setLedState(ledNo, CANPANLED_ON);
 41843   0131E2  0E00               	movlw	0
 41844   0131E4  6E11               	movwf	setLedState@state^(0+1280),c
 41845   0131E6  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 41846   0131E8  ECD2  F0B2         	call	_setLedState
 41847                           
 41848                           ;../canpan3Events.c: 359:                         } else {
 41849   0131EC  D02B               	goto	l9307
 41850   0131EE                     l9291:
 41851                           
 41852                           ;../canpan3Events.c: 360:                             setLedState(ledNo, CANPANLED_OFF);
 41853   0131EE  0E01               	movlw	1
 41854   0131F0  6E11               	movwf	setLedState@state^(0+1280),c
 41855   0131F2  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 41856   0131F4  ECD2  F0B2         	call	_setLedState
 41857   0131F8  D025               	goto	l9307
 41858   0131FA                     l9293:
 41859                           
 41860                           ;../canpan3Events.c: 365:                     if (onOff) {
 41861   0131FA  5021               	movf	APP_processConsumedEvent@onOff^(0+1280),w,c
 41862   0131FC  B4D8               	btfsc	status,2,c
 41863   0131FE  D00F               	goto	l9301
 41864                           
 41865                           ;../canpan3Events.c: 366:                         if (polarity) {
 41866   013200  5020               	movf	APP_processConsumedEvent@polarity^(0+1280),w,c
 41867   013202  B4D8               	btfsc	status,2,c
 41868   013204  D006               	goto	l9299
 41869                           
 41870                           ;../canpan3Events.c: 367:                             setLedState(ledNo, CANPANLED_ANTIF
      +                          LASH);
 41871   013206  0E03               	movlw	3
 41872   013208  6E11               	movwf	setLedState@state^(0+1280),c
 41873   01320A  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 41874   01320C  ECD2  F0B2         	call	_setLedState
 41875                           
 41876                           ;../canpan3Events.c: 368:                         } else {
 41877   013210  D019               	goto	l9307
 41878   013212                     l9299:
 41879                           
 41880                           ;../canpan3Events.c: 369:                             setLedState(ledNo, CANPANLED_FLASH
      +                          );
 41881   013212  0E02               	movlw	2
 41882   013214  6E11               	movwf	setLedState@state^(0+1280),c
 41883   013216  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 41884   013218  ECD2  F0B2         	call	_setLedState
 41885   01321C  D013               	goto	l9307
 41886   01321E                     l9301:
 41887                           
 41888                           ;../canpan3Events.c: 372:                         setLedState(ledNo, CANPANLED_OFF);
 41889   01321E  0E01               	movlw	1
 41890   013220  6E11               	movwf	setLedState@state^(0+1280),c
 41891   013222  5022               	movf	APP_processConsumedEvent@ledNo^(0+1280),w,c
 41892   013224  ECD2  F0B2         	call	_setLedState
 41893   013228  D00D               	goto	l9307
 41894   01322A                     l9305:
 41895   01322A  501E               	movf	APP_processConsumedEvent@ledMode^(0+1280),w,c
 41896                           
 41897                           ; Switch size 1, requested type "simple"
 41898                           ; Number of cases is 4, Range of values is 248 to 255
 41899                           ; switch strategies available:
 41900                           ; Name         Instructions Cycles
 41901                           ; simple_byte           13     7 (average)
 41902                           ;	Chosen strategy is simple_byte
 41903   01322C  0AF8               	xorlw	248	; case 248
 41904   01322E  B4D8               	btfsc	status,2,c
 41905   013230  D7E4               	goto	l9293
 41906   013232  0A05               	xorlw	5	; case 253
 41907   013234  B4D8               	btfsc	status,2,c
 41908   013236  D7CF               	goto	l9285
 41909   013238  0A03               	xorlw	3	; case 254
 41910   01323A  B4D8               	btfsc	status,2,c
 41911   01323C  D7BA               	goto	l9277
 41912   01323E  0A01               	xorlw	1	; case 255
 41913   013240  B4D8               	btfsc	status,2,c
 41914   013242  D796               	goto	l9263
 41915   013244                     l9307:
 41916                           
 41917                           ;../canpan3Events.c: 377:     }
 41918   013244  2A22               	incf	APP_processConsumedEvent@ledNo^(0+1280),f,c
 41919   013246  0E1F               	movlw	31
 41920   013248  6422               	cpfsgt	APP_processConsumedEvent@ledNo^(0+1280),c
 41921   01324A  D74E               	goto	l9257
 41922   01324C  D741               	goto	u7070
 41923   01324E                     __end_of_APP_processConsumedEvent:
 41924                           	callstack 0
 41925                           
 41926 ;; *************** function _setLedState *****************
 41927 ;; Defined at:
 41928 ;;		line 100 in file "../canpan3Leds.c"
 41929 ;; Parameters:    Size  Location     Type
 41930 ;;  ledNo           1    wreg     unsigned char 
 41931 ;;  state           1   16[COMRAM] enum E23467
 41932 ;; Auto vars:     Size  Location     Type
 41933 ;;  ledNo           1   17[COMRAM] unsigned char 
 41934 ;; Return value:  Size  Location     Type
 41935 ;;                  1    wreg      void 
 41936 ;; Registers used:
 41937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41938 ;; Tracked objects:
 41939 ;;		On entry : 0/0
 41940 ;;		On exit  : 0/0
 41941 ;;		Unchanged: 0/0
 41942 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 41943 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41946 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 41947 ;;Total ram usage:        2 bytes
 41948 ;; Hardware stack levels used: 1
 41949 ;; Hardware stack levels required when called: 4
 41950 ;; This function calls:
 41951 ;;		_setLedStateNoSave
 41952 ;;		_writeEEvalue
 41953 ;; This function is called by:
 41954 ;;		_APP_processConsumedEvent
 41955 ;; This function uses a non-reentrant model
 41956 ;;
 41957                           
 41958                           	psect	text95
 41959   0165A4                     __ptext95:
 41960                           	callstack 0
 41961   0165A4                     _setLedState:
 41962                           	callstack 119
 41963                           
 41964                           ;incstack = 0
 41965                           ;setLedState@ledNo stored from wreg
 41966   0165A4  6E12               	movwf	setLedState@ledNo^(0+1280),c
 41967                           
 41968                           ;../canpan3Leds.c: 101:     setLedStateNoSave(ledNo, state);
 41969   0165A6  C511  F50D         	movff	setLedState@state,setLedStateNoSave@state
 41970   0165AA  5012               	movf	setLedState@ledNo^(0+1280),w,c
 41971   0165AC  EC4F  F0AC         	call	_setLedStateNoSave
 41972                           
 41973                           ;../canpan3Leds.c: 102:     if (startupNv & 0x02) {
 41974   0165B0  0105               	movlb	5	; () banked
 41975   0165B2  A399               	btfss	_startupNv& (0+255),1,b
 41976   0165B4  0012               	return	
 41977                           
 41978                           ; BSR set to: 5
 41979                           ;../canpan3Leds.c: 103:         writeEEvalue((0x0000 +0x20)+ledNo, (uint8_t)state);
 41980   0165B6  C511  F501         	movff	setLedState@state,writeEEvalue@value
 41981   0165BA  5012               	movf	setLedState@ledNo^(0+1280),w,c
 41982   0165BC  0F20               	addlw	32
 41983   0165BE  EC36  F0B0         	call	_writeEEvalue
 41984   0165C2  0012               	return		;funcret
 41985   0165C4                     __end_of_setLedState:
 41986                           	callstack 0
 41987                           
 41988 ;; *************** function _setLedStateNoSave *****************
 41989 ;; Defined at:
 41990 ;;		line 79 in file "../canpan3Leds.c"
 41991 ;; Parameters:    Size  Location     Type
 41992 ;;  ledNo           1    wreg     unsigned char 
 41993 ;;  state           1   12[COMRAM] enum E23467
 41994 ;; Auto vars:     Size  Location     Type
 41995 ;;  ledNo           1   15[COMRAM] unsigned char 
 41996 ;; Return value:  Size  Location     Type
 41997 ;;                  1    wreg      void 
 41998 ;; Registers used:
 41999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42000 ;; Tracked objects:
 42001 ;;		On entry : 0/0
 42002 ;;		On exit  : 0/0
 42003 ;;		Unchanged: 0/0
 42004 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42005 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42007 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42008 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42009 ;;Total ram usage:        4 bytes
 42010 ;; Hardware stack levels used: 1
 42011 ;; Hardware stack levels required when called: 3
 42012 ;; This function calls:
 42013 ;;		_clearLed
 42014 ;;		_setLed
 42015 ;; This function is called by:
 42016 ;;		_initLeds
 42017 ;;		_setLedState
 42018 ;; This function uses a non-reentrant model
 42019 ;;
 42020                           
 42021                           	psect	text96
 42022   01589E                     __ptext96:
 42023                           	callstack 0
 42024   01589E                     _setLedStateNoSave:
 42025                           	callstack 121
 42026                           
 42027                           ;incstack = 0
 42028                           ;setLedStateNoSave@ledNo stored from wreg
 42029   01589E  6E10               	movwf	setLedStateNoSave@ledNo^(0+1280),c
 42030                           
 42031                           ;../canpan3Leds.c: 80:     ledStates[ledNo] = state;
 42032   0158A0  0E21               	movlw	low _ledStates
 42033   0158A2  2410               	addwf	setLedStateNoSave@ledNo^(0+1280),w,c
 42034   0158A4  6ED9               	movwf	fsr2l,c
 42035   0158A6  6ADA               	clrf	fsr2h,c
 42036   0158A8  0E06               	movlw	high _ledStates
 42037   0158AA  22DA               	addwfc	fsr2h,f,c
 42038   0158AC  C50D  F4DF         	movff	setLedStateNoSave@state,indf2
 42039                           
 42040                           ;../canpan3Leds.c: 81:     switch (ledStates[ledNo]) {
 42041   0158B0  D008               	goto	l8921
 42042   0158B2                     l8915:
 42043                           
 42044                           ;../canpan3Leds.c: 83:             setLed(ledNo);
 42045   0158B2  5010               	movf	setLedStateNoSave@ledNo^(0+1280),w,c
 42046   0158B4  EC86  F0AF         	call	_setLed
 42047                           
 42048                           ;../canpan3Leds.c: 84:             break;
 42049   0158B8  0012               	return	
 42050   0158BA                     l8917:
 42051                           
 42052                           ;../canpan3Leds.c: 86:             clearLed(ledNo);
 42053   0158BA  5010               	movf	setLedStateNoSave@ledNo^(0+1280),w,c
 42054   0158BC  ECE4  F0AE         	call	_clearLed
 42055                           
 42056                           ;../canpan3Leds.c: 87:             break;
 42057   0158C0  0012               	return	
 42058   0158C2                     l8921:
 42059   0158C2  0E21               	movlw	low _ledStates
 42060   0158C4  2410               	addwf	setLedStateNoSave@ledNo^(0+1280),w,c
 42061   0158C6  6ED9               	movwf	fsr2l,c
 42062   0158C8  6ADA               	clrf	fsr2h,c
 42063   0158CA  0E06               	movlw	high _ledStates
 42064   0158CC  22DA               	addwfc	fsr2h,f,c
 42065   0158CE  50DF               	movf	indf2,w,c
 42066   0158D0  6E0E               	movwf	??_setLedStateNoSave^(0+1280),c
 42067   0158D2  6A0F               	clrf	(??_setLedStateNoSave+1)^(0+1280),c
 42068                           
 42069                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42070                           ; Switch size 1, requested type "simple"
 42071                           ; Number of cases is 1, Range of values is 0 to 0
 42072                           ; switch strategies available:
 42073                           ; Name         Instructions Cycles
 42074                           ; simple_byte            4     3 (average)
 42075                           ;	Chosen strategy is simple_byte
 42076   0158D4  500F               	movf	(??_setLedStateNoSave+1)^(0+1280),w,c
 42077   0158D6  0A00               	xorlw	0	; case 0
 42078   0158D8  A4D8               	btfss	status,2,c
 42079   0158DA  0012               	return	
 42080                           
 42081                           ; Switch size 1, requested type "simple"
 42082                           ; Number of cases is 4, Range of values is 0 to 3
 42083                           ; switch strategies available:
 42084                           ; Name         Instructions Cycles
 42085                           ; simple_byte           13     7 (average)
 42086                           ;	Chosen strategy is simple_byte
 42087   0158DC  500E               	movf	??_setLedStateNoSave^(0+1280),w,c
 42088   0158DE  0A00               	xorlw	0	; case 0
 42089   0158E0  B4D8               	btfsc	status,2,c
 42090   0158E2  D7E7               	goto	l8915
 42091   0158E4  0A01               	xorlw	1	; case 1
 42092   0158E6  B4D8               	btfsc	status,2,c
 42093   0158E8  D7E8               	goto	l8917
 42094   0158EA  0A03               	xorlw	3	; case 2
 42095   0158EC  B4D8               	btfsc	status,2,c
 42096   0158EE  0012               	return	
 42097   0158F0  0A01               	xorlw	1	; case 3
 42098   0158F2  0012               	return	
 42099   0158F4                     __end_of_setLedStateNoSave:
 42100                           	callstack 0
 42101                           
 42102 ;; *************** function _doSoD *****************
 42103 ;; Defined at:
 42104 ;;		line 333 in file "../canpan3Inputs.c"
 42105 ;; Parameters:    Size  Location     Type
 42106 ;;		None
 42107 ;; Auto vars:     Size  Location     Type
 42108 ;;		None
 42109 ;; Return value:  Size  Location     Type
 42110 ;;                  1    wreg      void 
 42111 ;; Registers used:
 42112 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42113 ;; Tracked objects:
 42114 ;;		On entry : 0/0
 42115 ;;		On exit  : 0/0
 42116 ;;		Unchanged: 0/0
 42117 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42122 ;;Total ram usage:        0 bytes
 42123 ;; Hardware stack levels used: 1
 42124 ;; Hardware stack levels required when called: 2
 42125 ;; This function calls:
 42126 ;;		_findServiceIndex
 42127 ;;		_startTimedResponse
 42128 ;;		_timedResponseInProgress
 42129 ;; This function is called by:
 42130 ;;		_APP_processConsumedEvent
 42131 ;; This function uses a non-reentrant model
 42132 ;;
 42133                           
 42134                           	psect	text97
 42135   01643E                     __ptext97:
 42136                           	callstack 0
 42137   01643E                     _doSoD:
 42138                           	callstack 121
 42139                           
 42140                           ;../canpan3Inputs.c: 334:     if (!timedResponseInProgress()) {
 42141                           
 42142                           ;incstack = 0
 42143   01643E  ECA7  F0B3         	call	_timedResponseInProgress	;wreg free
 42144   016442  0900               	iorlw	0
 42145   016444  A4D8               	btfss	status,2,c
 42146   016446  0012               	return	
 42147                           
 42148                           ;../canpan3Inputs.c: 335:         startTimedResponse(1, findServiceIndex(SERVICE_ID_PROD
      +                          UCER), sodTRCallback);
 42149   016448  0E05               	movlw	5
 42150   01644A  EC92  F0A8         	call	_findServiceIndex
 42151   01644E  6E05               	movwf	startTimedResponse@serviceIndex^(0+1280),c
 42152   016450  0E34               	movlw	low _sodTRCallback
 42153   016452  6E06               	movwf	startTimedResponse@callback^(0+1280),c
 42154   016454  0E60               	movlw	high _sodTRCallback
 42155   016456  6E07               	movwf	(startTimedResponse@callback+1)^(0+1280),c
 42156   016458  0E01               	movlw	low (_sodTRCallback shr (0+16))
 42157   01645A  6E08               	movwf	(startTimedResponse@callback+2)^(0+1280),c
 42158   01645C  0E01               	movlw	1
 42159   01645E  EC67  F0AF         	call	_startTimedResponse
 42160   016462  0012               	return		;funcret
 42161   016464                     __end_of_doSoD:
 42162                           	callstack 0
 42163                           
 42164 ;; *************** function _timedResponseInProgress *****************
 42165 ;; Defined at:
 42166 ;;		line 82 in file "../../VLCBlib_PIC/timedResponse.c"
 42167 ;; Parameters:    Size  Location     Type
 42168 ;;		None
 42169 ;; Auto vars:     Size  Location     Type
 42170 ;;		None
 42171 ;; Return value:  Size  Location     Type
 42172 ;;                  1    wreg      unsigned char 
 42173 ;; Registers used:
 42174 ;;		wreg, status,2, status,0
 42175 ;; Tracked objects:
 42176 ;;		On entry : 0/0
 42177 ;;		On exit  : 0/0
 42178 ;;		Unchanged: 0/0
 42179 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42184 ;;Total ram usage:        0 bytes
 42185 ;; Hardware stack levels used: 1
 42186 ;; Hardware stack levels required when called: 1
 42187 ;; This function calls:
 42188 ;;		Nothing
 42189 ;; This function is called by:
 42190 ;;		_doSoD
 42191 ;; This function uses a non-reentrant model
 42192 ;;
 42193                           
 42194                           	psect	text98
 42195   01674E                     __ptext98:
 42196                           	callstack 0
 42197   01674E                     _timedResponseInProgress:
 42198                           	callstack 121
 42199                           
 42200                           ;../../VLCBlib_PIC/timedResponse.c: 83:     return timedResponseType != 0xFF;
 42201                           
 42202                           ;incstack = 0
 42203   01674E  0105               	movlb	5	; () banked
 42204   016750  2986               	incf	_timedResponseType& (0+255),w,b
 42205   016752  B4D8               	btfsc	status,2,c
 42206   016754  D002               	goto	u6550
 42207   016756  0E01               	movlw	1
 42208   016758  0012               	return	
 42209   01675A                     u6550:
 42210   01675A  0E00               	movlw	0
 42211                           
 42212                           ; BSR set to: 5
 42213   01675C  0012               	return		;funcret
 42214   01675E                     __end_of_timedResponseInProgress:
 42215                           	callstack 0
 42216                           
 42217 ;; *************** function _startTimedResponse *****************
 42218 ;; Defined at:
 42219 ;;		line 93 in file "../../VLCBlib_PIC/timedResponse.c"
 42220 ;; Parameters:    Size  Location     Type
 42221 ;;  type            1    wreg     unsigned char 
 42222 ;;  serviceIndex    1    4[COMRAM] unsigned char 
 42223 ;;  callback        3    5[COMRAM] PTR FTN(unsigned char ,u
 42224 ;;		 -> nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), 
 42225 ;;		 -> reqevCallback(1), nerdCallback(1), sodTRCallback(1), 
 42226 ;; Auto vars:     Size  Location     Type
 42227 ;;  type            1    8[COMRAM] unsigned char 
 42228 ;; Return value:  Size  Location     Type
 42229 ;;                  1    wreg      void 
 42230 ;; Registers used:
 42231 ;;		wreg, status,2, status,0
 42232 ;; Tracked objects:
 42233 ;;		On entry : 0/0
 42234 ;;		On exit  : 0/0
 42235 ;;		Unchanged: 0/0
 42236 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42237 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42238 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42240 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42241 ;;Total ram usage:        5 bytes
 42242 ;; Hardware stack levels used: 1
 42243 ;; Hardware stack levels required when called: 1
 42244 ;; This function calls:
 42245 ;;		Nothing
 42246 ;; This function is called by:
 42247 ;;		_doSoD
 42248 ;;		_doNerd
 42249 ;;		_doReval
 42250 ;;		_doReqev
 42251 ;;		_mnsProcessMessage
 42252 ;;		_nvProcessMessage
 42253 ;; This function uses a non-reentrant model
 42254 ;;
 42255                           
 42256                           	psect	text99
 42257   015ECE                     __ptext99:
 42258                           	callstack 0
 42259   015ECE                     _startTimedResponse:
 42260                           	callstack 122
 42261                           
 42262                           ; BSR set to: 5
 42263                           ;incstack = 0
 42264                           ;startTimedResponse@type stored from wreg
 42265   015ECE  6E09               	movwf	startTimedResponse@type^(0+1280),c
 42266                           
 42267                           ;../../VLCBlib_PIC/timedResponse.c: 94:     timedResponseType = type;
 42268   015ED0  C509  F586         	movff	startTimedResponse@type,_timedResponseType
 42269                           
 42270                           ;../../VLCBlib_PIC/timedResponse.c: 95:     if (serviceIndex == 0) {
 42271   015ED4  5005               	movf	startTimedResponse@serviceIndex^(0+1280),w,c
 42272   015ED6  A4D8               	btfss	status,2,c
 42273   015ED8  D005               	goto	l2132
 42274                           
 42275                           ;../../VLCBlib_PIC/timedResponse.c: 97:         timedResponseAllServicesFlag = 1;
 42276   015EDA  0E01               	movlw	1
 42277   015EDC  0105               	movlb	5	; () banked
 42278   015EDE  6F87               	movwf	_timedResponseAllServicesFlag& (0+255),b
 42279                           
 42280                           ; BSR set to: 5
 42281                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = 0;
 42282   015EE0  6B88               	clrf	_timedResponseServiceIndex& (0+255),b
 42283                           
 42284                           ;../../VLCBlib_PIC/timedResponse.c: 99:     } else {
 42285   015EE2  D00C               	goto	l8911
 42286   015EE4                     l2132:
 42287                           
 42288                           ;../../VLCBlib_PIC/timedResponse.c: 100:         timedResponseAllServicesFlag = 0;
 42289   015EE4  0105               	movlb	5	; () banked
 42290   015EE6  6B87               	clrf	_timedResponseAllServicesFlag& (0+255),b
 42291                           
 42292                           ; BSR set to: 5
 42293                           ;../../VLCBlib_PIC/timedResponse.c: 101:         if ((serviceIndex < 1) || (serviceIndex
      +                           > 8)) {
 42294   015EE8  5005               	movf	startTimedResponse@serviceIndex^(0+1280),w,c
 42295   015EEA  B4D8               	btfsc	status,2,c
 42296   015EEC  D003               	goto	u6620
 42297                           
 42298                           ; BSR set to: 5
 42299   015EEE  0E08               	movlw	8
 42300   015EF0  6405               	cpfsgt	startTimedResponse@serviceIndex^(0+1280),c
 42301   015EF2  D002               	goto	l8909
 42302   015EF4                     u6620:
 42303                           
 42304                           ; BSR set to: 5
 42305                           ;../../VLCBlib_PIC/timedResponse.c: 103:             timedResponseType = 0xFF;
 42306   015EF4  6986               	setf	_timedResponseType& (0+255),b
 42307                           
 42308                           ;../../VLCBlib_PIC/timedResponse.c: 104:             return;
 42309   015EF6  0012               	return	
 42310   015EF8                     l8909:
 42311                           
 42312                           ; BSR set to: 5
 42313                           ;../../VLCBlib_PIC/timedResponse.c: 106:         timedResponseServiceIndex = (uint8_t)se
      +                          rviceIndex-1;
 42314   015EF8  0405               	decf	startTimedResponse@serviceIndex^(0+1280),w,c
 42315   015EFA  6F88               	movwf	_timedResponseServiceIndex& (0+255),b
 42316   015EFC                     l8911:
 42317                           
 42318                           ; BSR set to: 5
 42319                           ;../../VLCBlib_PIC/timedResponse.c: 108:     timedResponseStep = 0;
 42320   015EFC  6B85               	clrf	_timedResponseStep& (0+255),b
 42321                           
 42322                           ;../../VLCBlib_PIC/timedResponse.c: 109:     timedResponseCallback = callback;
 42323   015EFE  C506  F574         	movff	startTimedResponse@callback,_timedResponseCallback
 42324   015F02  C507  F575         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 42325   015F06  C508  F576         	movff	startTimedResponse@callback+2,_timedResponseCallback+2
 42326                           
 42327                           ; BSR set to: 5
 42328   015F0A  0012               	return		;funcret
 42329   015F0C                     __end_of_startTimedResponse:
 42330                           	callstack 0
 42331                           
 42332 ;; *************** function _findServiceIndex *****************
 42333 ;; Defined at:
 42334 ;;		line 833 in file "../../VLCBlib_PIC/vlcb.c"
 42335 ;; Parameters:    Size  Location     Type
 42336 ;;  serviceType     1    wreg     unsigned char 
 42337 ;; Auto vars:     Size  Location     Type
 42338 ;;  serviceType     1    2[COMRAM] unsigned char 
 42339 ;;  i               1    3[COMRAM] unsigned char 
 42340 ;; Return value:  Size  Location     Type
 42341 ;;                  1    wreg      unsigned char 
 42342 ;; Registers used:
 42343 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 42344 ;; Tracked objects:
 42345 ;;		On entry : 0/0
 42346 ;;		On exit  : 0/0
 42347 ;;		Unchanged: 0/0
 42348 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42350 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42352 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42353 ;;Total ram usage:        4 bytes
 42354 ;; Hardware stack levels used: 1
 42355 ;; Hardware stack levels required when called: 1
 42356 ;; This function calls:
 42357 ;;		Nothing
 42358 ;; This function is called by:
 42359 ;;		_doSoD
 42360 ;;		_doNerd
 42361 ;;		_doReval
 42362 ;;		_doReqev
 42363 ;;		_mnsProcessMessage
 42364 ;;		_nvProcessMessage
 42365 ;; This function uses a non-reentrant model
 42366 ;;
 42367                           
 42368                           	psect	text100
 42369   015124                     __ptext100:
 42370                           	callstack 0
 42371   015124                     _findServiceIndex:
 42372                           	callstack 122
 42373                           
 42374                           ; BSR set to: 5
 42375                           ;incstack = 0
 42376                           ;findServiceIndex@serviceType stored from wreg
 42377   015124  6E03               	movwf	findServiceIndex@serviceType^(0+1280),c
 42378                           
 42379                           ;../../VLCBlib_PIC/vlcb.c: 834:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 835:     for (i
      +                          =0; i<8; i++) {
 42380   015126  6A04               	clrf	findServiceIndex@i^(0+1280),c
 42381   015128                     l8881:
 42382                           
 42383                           ;../../VLCBlib_PIC/vlcb.c: 836:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 42384   015128  5004               	movf	findServiceIndex@i^(0+1280),w,c
 42385   01512A  0D02               	mullw	2
 42386   01512C  0E35               	movlw	low _services
 42387   01512E  24F3               	addwf	243,w,c
 42388   015130  6EF6               	movwf	tblptrl,c
 42389   015132  0EFF               	movlw	high _services
 42390   015134  20F4               	addwfc	244,w,c
 42391   015136  6EF7               	movwf	tblptrh,c
 42392   015138                     	if	1	;There are 3 active tblptr bytes
 42393   015138  6AF8               	clrf	tblptru,c
 42394   01513A  0E00               	movlw	low (__pmediumconst shr (0+16))
 42395   01513C  22F8               	addwfc	tblptru,f,c
 42396   01513E                     	endif
 42397   01513E  0009               	tblrd		*+
 42398   015140  50F5               	movf	tablat,w,c
 42399   015142  0009               	tblrd		*+
 42400   015144  10F5               	iorwf	tablat,w,c
 42401   015146  B4D8               	btfsc	status,2,c
 42402   015148  D01E               	goto	l8889
 42403   01514A  5004               	movf	findServiceIndex@i^(0+1280),w,c
 42404   01514C  0D02               	mullw	2
 42405   01514E  0E35               	movlw	low _services
 42406   015150  24F3               	addwf	243,w,c
 42407   015152  6EF6               	movwf	tblptrl,c
 42408   015154  0EFF               	movlw	high _services
 42409   015156  20F4               	addwfc	244,w,c
 42410   015158  6EF7               	movwf	tblptrh,c
 42411   01515A                     	if	1	;There are 3 active tblptr bytes
 42412   01515A  6AF8               	clrf	tblptru,c
 42413   01515C  0E00               	movlw	low (__pmediumconst shr (0+16))
 42414   01515E  22F8               	addwfc	tblptru,f,c
 42415   015160                     	endif
 42416   015160  0009               	tblrd		*+
 42417   015162  C4F5 F501          	movff	tablat,??_findServiceIndex
 42418   015166  0009               	tblrd		*+
 42419   015168  C4F5 F502          	movff	tablat,??_findServiceIndex+1
 42420   01516C  C501  F4F6         	movff	??_findServiceIndex,tblptrl
 42421   015170  C502  F4F7         	movff	??_findServiceIndex+1,tblptrh
 42422   015174                     	if	0	;tblptru may be non-zero
 42423   015174                     	endif
 42424   015174                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42425   015174  0E00               	movlw	low (__pmediumconst shr (0+16))
 42426   015176  6EF8               	movwf	tblptru,c
 42427   015178                     	endif
 42428   015178  0008               	tblrd		*
 42429   01517A  50F5               	movf	tablat,w,c
 42430   01517C  1803               	xorwf	findServiceIndex@serviceType^(0+1280),w,c
 42431   01517E  A4D8               	btfss	status,2,c
 42432   015180  D002               	goto	l8889
 42433                           
 42434                           ;../../VLCBlib_PIC/vlcb.c: 837:             return i;
 42435   015182  5004               	movf	findServiceIndex@i^(0+1280),w,c
 42436   015184  0012               	return	
 42437   015186                     l8889:
 42438                           
 42439                           ;../../VLCBlib_PIC/vlcb.c: 839:     }
 42440   015186  2A04               	incf	findServiceIndex@i^(0+1280),f,c
 42441   015188  0E07               	movlw	7
 42442   01518A  6404               	cpfsgt	findServiceIndex@i^(0+1280),c
 42443   01518C  D7CD               	goto	l8881
 42444                           
 42445                           ;../../VLCBlib_PIC/vlcb.c: 840:     return 0xFF;
 42446   01518E  0EFF               	movlw	255
 42447   015190  0012               	return		;funcret
 42448   015192                     __end_of_findServiceIndex:
 42449                           	callstack 0
 42450                           
 42451 ;; *************** function _APP_postProcessMessage *****************
 42452 ;; Defined at:
 42453 ;;		line 291 in file "../main.c"
 42454 ;; Parameters:    Size  Location     Type
 42455 ;;  m               2    0[COMRAM] PTR struct Message
 42456 ;;		 -> poll@m(9), 
 42457 ;; Auto vars:     Size  Location     Type
 42458 ;;		None
 42459 ;; Return value:  Size  Location     Type
 42460 ;;                  1    wreg      enum E23290
 42461 ;; Registers used:
 42462 ;;		wreg
 42463 ;; Tracked objects:
 42464 ;;		On entry : 0/0
 42465 ;;		On exit  : 0/0
 42466 ;;		Unchanged: 0/0
 42467 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42471 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42472 ;;Total ram usage:        2 bytes
 42473 ;; Hardware stack levels used: 1
 42474 ;; Hardware stack levels required when called: 1
 42475 ;; This function calls:
 42476 ;;		Nothing
 42477 ;; This function is called by:
 42478 ;;		_poll
 42479 ;; This function uses a non-reentrant model
 42480 ;;
 42481                           
 42482                           	psect	text101
 42483   0167CA                     __ptext101:
 42484                           	callstack 0
 42485   0167CA                     _APP_postProcessMessage:
 42486                           	callstack 124
 42487                           
 42488                           ;../main.c: 292:     return NOT_PROCESSED;
 42489                           
 42490                           ;incstack = 0
 42491   0167CA  0E00               	movlw	0
 42492   0167CC  0012               	return		;funcret
 42493   0167CE                     __end_of_APP_postProcessMessage:
 42494                           	callstack 0
 42495                           
 42496 ;; *************** function _loop *****************
 42497 ;; Defined at:
 42498 ;;		line 239 in file "../main.c"
 42499 ;; Parameters:    Size  Location     Type
 42500 ;;		None
 42501 ;; Auto vars:     Size  Location     Type
 42502 ;;  tableIndex      1   68[COMRAM] unsigned char 
 42503 ;; Return value:  Size  Location     Type
 42504 ;;                  1    wreg      void 
 42505 ;; Registers used:
 42506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 42507 ;; Tracked objects:
 42508 ;;		On entry : 0/0
 42509 ;;		On exit  : 0/0
 42510 ;;		Unchanged: 0/0
 42511 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42514 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42515 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42516 ;;Total ram usage:        9 bytes
 42517 ;; Hardware stack levels used: 1
 42518 ;; Hardware stack levels required when called: 8
 42519 ;; This function calls:
 42520 ;;		___lldiv
 42521 ;;		___lmul
 42522 ;;		_canpanSendProducedEvent
 42523 ;;		_doFlash
 42524 ;;		_getNV
 42525 ;;		_inputScan
 42526 ;;		_pollEEPROMwriter
 42527 ;;		_pollOutputs
 42528 ;;		_tickGet
 42529 ;; This function is called by:
 42530 ;;		_main
 42531 ;; This function uses a non-reentrant model
 42532 ;;
 42533                           
 42534                           	psect	text102
 42535   012B58                     __ptext102:
 42536                           	callstack 0
 42537   012B58                     _loop:
 42538                           	callstack 118
 42539                           
 42540                           ;../main.c: 240:     uint8_t tableIndex;;../main.c: 243:     if (started == FALSE) {
 42541                           
 42542                           ;incstack = 0
 42543   012B58  0105               	movlb	5	; () banked
 42544   012B5A  51A1               	movf	_started& (0+255),w,b
 42545   012B5C  A4D8               	btfss	status,2,c
 42546   012B5E  D049               	goto	l12441
 42547                           
 42548                           ; BSR set to: 5
 42549                           ;../main.c: 244:         if ((tickGet() - startTime.val) > ((62500*2)+getNV(((3 +(8*4)) 
      +                          + (8*4)))*62500)) {
 42550   012B60  EC7A  F0AC         	call	_tickGet	;wreg free
 42551   012B64  0105               	movlb	5	; () banked
 42552   012B66  5170               	movf	_startTime& (0+255),w,b
 42553   012B68  5C01               	subwf	?_tickGet^(0+1280),w,c
 42554   012B6A  6E3D               	movwf	??_loop^(0+1280),c
 42555   012B6C  5171               	movf	(_startTime+1)& (0+255),w,b
 42556   012B6E  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 42557   012B70  6E3E               	movwf	(??_loop+1)^(0+1280),c
 42558   012B72  5172               	movf	(_startTime+2)& (0+255),w,b
 42559   012B74  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 42560   012B76  6E3F               	movwf	(??_loop+2)^(0+1280),c
 42561   012B78  5173               	movf	(_startTime+3)& (0+255),w,b
 42562   012B7A  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 42563   012B7C  6E40               	movwf	(??_loop+3)^(0+1280),c
 42564   012B7E  0E43               	movlw	67
 42565   012B80  ECE0  F0AF         	call	_getNV
 42566   012B84  C501  F505         	movff	?_getNV,___lmul@multiplier
 42567   012B88  C502  F506         	movff	?_getNV+1,___lmul@multiplier+1
 42568   012B8C  0E00               	movlw	0
 42569   012B8E  BE06               	btfsc	(___lmul@multiplier+1)^(0+1280),7,c
 42570   012B90  0EFF               	movlw	-1
 42571   012B92  6E07               	movwf	(___lmul@multiplier+2)^(0+1280),c
 42572   012B94  6E08               	movwf	(___lmul@multiplier+3)^(0+1280),c
 42573   012B96  0E24               	movlw	36
 42574   012B98  6E09               	movwf	___lmul@multiplicand^(0+1280),c
 42575   012B9A  0EF4               	movlw	244
 42576   012B9C  6E0A               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 42577   012B9E  0E00               	movlw	0
 42578   012BA0  6E0B               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 42579   012BA2  0E00               	movlw	0
 42580   012BA4  6E0C               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 42581   012BA6  ECA5  F0AC         	call	___lmul	;wreg free
 42582   012BAA  0E48               	movlw	72
 42583   012BAC  2405               	addwf	?___lmul^(0+1280),w,c
 42584   012BAE  6E41               	movwf	(??_loop+4)^(0+1280),c
 42585   012BB0  0EE8               	movlw	232
 42586   012BB2  2006               	addwfc	(?___lmul+1)^(0+1280),w,c
 42587   012BB4  6E42               	movwf	(??_loop+5)^(0+1280),c
 42588   012BB6  0E01               	movlw	1
 42589   012BB8  2007               	addwfc	(?___lmul+2)^(0+1280),w,c
 42590   012BBA  6E43               	movwf	(??_loop+6)^(0+1280),c
 42591   012BBC  0E00               	movlw	0
 42592   012BBE  2008               	addwfc	(?___lmul+3)^(0+1280),w,c
 42593   012BC0  6E44               	movwf	(??_loop+7)^(0+1280),c
 42594   012BC2  503D               	movf	??_loop^(0+1280),w,c
 42595   012BC4  5C41               	subwf	(??_loop+4)^(0+1280),w,c
 42596   012BC6  503E               	movf	(??_loop+1)^(0+1280),w,c
 42597   012BC8  5842               	subwfb	(??_loop+5)^(0+1280),w,c
 42598   012BCA  503F               	movf	(??_loop+2)^(0+1280),w,c
 42599   012BCC  5843               	subwfb	(??_loop+6)^(0+1280),w,c
 42600   012BCE  5040               	movf	(??_loop+3)^(0+1280),w,c
 42601   012BD0  5844               	subwfb	(??_loop+7)^(0+1280),w,c
 42602   012BD2  B0D8               	btfsc	status,0,c
 42603   012BD4  D031               	goto	l12447
 42604                           
 42605                           ;../main.c: 245:             started = TRUE;
 42606   012BD6  0E01               	movlw	1
 42607   012BD8  0105               	movlb	5	; () banked
 42608   012BDA  6FA1               	movwf	_started& (0+255),b
 42609                           
 42610                           ; BSR set to: 5
 42611                           ;../main.c: 246:             tableIndex = switch2Event[((8*4)+1)-1];
 42612   012BDC  C620  F545         	movff	_switch2Event+32,loop@tableIndex
 42613                           
 42614                           ; BSR set to: 5
 42615                           ;../main.c: 247:             if (tableIndex != 0xff) canpanSendProducedEvent(tableIndex,
      +                           TRUE);
 42616   012BE0  2845               	incf	loop@tableIndex^(0+1280),w,c
 42617   012BE2  B4D8               	btfsc	status,2,c
 42618   012BE4  D029               	goto	l12447
 42619                           
 42620                           ; BSR set to: 5
 42621   012BE6  0E01               	movlw	1
 42622   012BE8  6E2A               	movwf	canpanSendProducedEvent@onOff^(0+1280),c
 42623   012BEA  5045               	movf	loop@tableIndex^(0+1280),w,c
 42624   012BEC  EC76  F0AA         	call	_canpanSendProducedEvent
 42625   012BF0  D023               	goto	l12447
 42626   012BF2                     l12441:
 42627                           
 42628                           ; BSR set to: 5
 42629                           ;../main.c: 250:         if ((tickGet() - lastInputScanTime.val) > 2*(62500/1000)) {
 42630   012BF2  EC7A  F0AC         	call	_tickGet	;wreg free
 42631   012BF6  0105               	movlb	5	; () banked
 42632   012BF8  516C               	movf	_lastInputScanTime& (0+255),w,b
 42633   012BFA  5C01               	subwf	?_tickGet^(0+1280),w,c
 42634   012BFC  6E3D               	movwf	??_loop^(0+1280),c
 42635   012BFE  516D               	movf	(_lastInputScanTime+1)& (0+255),w,b
 42636   012C00  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 42637   012C02  6E3E               	movwf	(??_loop+1)^(0+1280),c
 42638   012C04  516E               	movf	(_lastInputScanTime+2)& (0+255),w,b
 42639   012C06  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 42640   012C08  6E3F               	movwf	(??_loop+2)^(0+1280),c
 42641   012C0A  516F               	movf	(_lastInputScanTime+3)& (0+255),w,b
 42642   012C0C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 42643   012C0E  6E40               	movwf	(??_loop+3)^(0+1280),c
 42644   012C10  5040               	movf	(??_loop+3)^(0+1280),w,c
 42645   012C12  103F               	iorwf	(??_loop+2)^(0+1280),w,c
 42646   012C14  103E               	iorwf	(??_loop+1)^(0+1280),w,c
 42647   012C16  E104               	bnz	u10760
 42648   012C18  0E7D               	movlw	125
 42649   012C1A  5C3D               	subwf	??_loop^(0+1280),w,c
 42650   012C1C  A0D8               	btfss	status,0,c
 42651   012C1E  D00C               	goto	l12447
 42652   012C20                     u10760:
 42653                           
 42654                           ; BSR set to: 5
 42655                           ;../main.c: 251:             inputScan();
 42656   012C20  EC5F  F08F         	call	_inputScan	;wreg free
 42657                           
 42658                           ;../main.c: 252:             lastInputScanTime.val = tickGet();
 42659   012C24  EC7A  F0AC         	call	_tickGet	;wreg free
 42660   012C28  C501  F56C         	movff	?_tickGet,_lastInputScanTime
 42661   012C2C  C502  F56D         	movff	?_tickGet+1,_lastInputScanTime+1
 42662   012C30  C503  F56E         	movff	?_tickGet+2,_lastInputScanTime+2
 42663   012C34  C504  F56F         	movff	?_tickGet+3,_lastInputScanTime+3
 42664   012C38                     l12447:
 42665                           
 42666                           ;../main.c: 255:     if ((tickGet() - flashTime.val)/1000 > getNV(2)) {
 42667   012C38  0E02               	movlw	2
 42668   012C3A  ECE0  F0AF         	call	_getNV
 42669   012C3E  C501  F53D         	movff	?_getNV,??_loop
 42670   012C42  C502  F53E         	movff	?_getNV+1,??_loop+1
 42671   012C46  0E00               	movlw	0
 42672   012C48  BE3E               	btfsc	(??_loop+1)^(0+1280),7,c
 42673   012C4A  0EFF               	movlw	255
 42674   012C4C  6E3F               	movwf	(??_loop+2)^(0+1280),c
 42675   012C4E  6E40               	movwf	(??_loop+3)^(0+1280),c
 42676   012C50  EC7A  F0AC         	call	_tickGet	;wreg free
 42677   012C54  0106               	movlb	6	; () banked
 42678   012C56  51A2               	movf	_flashTime& (0+255),w,b
 42679   012C58  5C01               	subwf	?_tickGet^(0+1280),w,c
 42680   012C5A  6E0B               	movwf	___lldiv@dividend^(0+1280),c
 42681   012C5C  51A3               	movf	(_flashTime+1)& (0+255),w,b
 42682   012C5E  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 42683   012C60  6E0C               	movwf	(___lldiv@dividend+1)^(0+1280),c
 42684   012C62  51A4               	movf	(_flashTime+2)& (0+255),w,b
 42685   012C64  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 42686   012C66  6E0D               	movwf	(___lldiv@dividend+2)^(0+1280),c
 42687   012C68  51A5               	movf	(_flashTime+3)& (0+255),w,b
 42688   012C6A  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 42689   012C6C  6E0E               	movwf	(___lldiv@dividend+3)^(0+1280),c
 42690   012C6E  0EE8               	movlw	232
 42691   012C70  6E0F               	movwf	___lldiv@divisor^(0+1280),c
 42692   012C72  0E03               	movlw	3
 42693   012C74  6E10               	movwf	(___lldiv@divisor+1)^(0+1280),c
 42694   012C76  0E00               	movlw	0
 42695   012C78  6E11               	movwf	(___lldiv@divisor+2)^(0+1280),c
 42696   012C7A  0E00               	movlw	0
 42697   012C7C  6E12               	movwf	(___lldiv@divisor+3)^(0+1280),c
 42698   012C7E  EC3A  F0A6         	call	___lldiv	;wreg free
 42699   012C82  500B               	movf	?___lldiv^(0+1280),w,c
 42700   012C84  5C3D               	subwf	??_loop^(0+1280),w,c
 42701   012C86  500C               	movf	(?___lldiv+1)^(0+1280),w,c
 42702   012C88  583E               	subwfb	(??_loop+1)^(0+1280),w,c
 42703   012C8A  500D               	movf	(?___lldiv+2)^(0+1280),w,c
 42704   012C8C  583F               	subwfb	(??_loop+2)^(0+1280),w,c
 42705   012C8E  500E               	movf	(?___lldiv+3)^(0+1280),w,c
 42706   012C90  5840               	subwfb	(??_loop+3)^(0+1280),w,c
 42707   012C92  B0D8               	btfsc	status,0,c
 42708   012C94  D00C               	goto	l12453
 42709                           
 42710                           ;../main.c: 256:         doFlash();
 42711   012C96  ECB8  F0A5         	call	_doFlash	;wreg free
 42712                           
 42713                           ;../main.c: 257:         flashTime.val = tickGet();
 42714   012C9A  EC7A  F0AC         	call	_tickGet	;wreg free
 42715   012C9E  C501  F6A2         	movff	?_tickGet,_flashTime
 42716   012CA2  C502  F6A3         	movff	?_tickGet+1,_flashTime+1
 42717   012CA6  C503  F6A4         	movff	?_tickGet+2,_flashTime+2
 42718   012CAA  C504  F6A5         	movff	?_tickGet+3,_flashTime+3
 42719   012CAE                     l12453:
 42720                           
 42721                           ;../main.c: 260:     if ((tickGet() - outputPollTime.val) > 6) {
 42722   012CAE  EC7A  F0AC         	call	_tickGet	;wreg free
 42723   012CB2  0106               	movlb	6	; () banked
 42724   012CB4  519E               	movf	_outputPollTime& (0+255),w,b
 42725   012CB6  5C01               	subwf	?_tickGet^(0+1280),w,c
 42726   012CB8  6E3D               	movwf	??_loop^(0+1280),c
 42727   012CBA  519F               	movf	(_outputPollTime+1)& (0+255),w,b
 42728   012CBC  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 42729   012CBE  6E3E               	movwf	(??_loop+1)^(0+1280),c
 42730   012CC0  51A0               	movf	(_outputPollTime+2)& (0+255),w,b
 42731   012CC2  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 42732   012CC4  6E3F               	movwf	(??_loop+2)^(0+1280),c
 42733   012CC6  51A1               	movf	(_outputPollTime+3)& (0+255),w,b
 42734   012CC8  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 42735   012CCA  6E40               	movwf	(??_loop+3)^(0+1280),c
 42736   012CCC  5040               	movf	(??_loop+3)^(0+1280),w,c
 42737   012CCE  103F               	iorwf	(??_loop+2)^(0+1280),w,c
 42738   012CD0  103E               	iorwf	(??_loop+1)^(0+1280),w,c
 42739   012CD2  E104               	bnz	u10780
 42740   012CD4  0E07               	movlw	7
 42741   012CD6  5C3D               	subwf	??_loop^(0+1280),w,c
 42742   012CD8  A0D8               	btfss	status,0,c
 42743   012CDA  D00C               	goto	l12459
 42744   012CDC                     u10780:
 42745                           
 42746                           ; BSR set to: 6
 42747                           ;../main.c: 261:         pollOutputs();
 42748   012CDC  ECED  F09F         	call	_pollOutputs	;wreg free
 42749                           
 42750                           ;../main.c: 262:         outputPollTime.val = tickGet();
 42751   012CE0  EC7A  F0AC         	call	_tickGet	;wreg free
 42752   012CE4  C501  F69E         	movff	?_tickGet,_outputPollTime
 42753   012CE8  C502  F69F         	movff	?_tickGet+1,_outputPollTime+1
 42754   012CEC  C503  F6A0         	movff	?_tickGet+2,_outputPollTime+2
 42755   012CF0  C504  F6A1         	movff	?_tickGet+3,_outputPollTime+3
 42756   012CF4                     l12459:
 42757                           
 42758                           ;../main.c: 267:     if ((tickGet() - eepromWriterTime.val) > (62500/1000)) {
 42759   012CF4  EC7A  F0AC         	call	_tickGet	;wreg free
 42760   012CF8  0106               	movlb	6	; () banked
 42761   012CFA  519A               	movf	_eepromWriterTime& (0+255),w,b
 42762   012CFC  5C01               	subwf	?_tickGet^(0+1280),w,c
 42763   012CFE  6E3D               	movwf	??_loop^(0+1280),c
 42764   012D00  519B               	movf	(_eepromWriterTime+1)& (0+255),w,b
 42765   012D02  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 42766   012D04  6E3E               	movwf	(??_loop+1)^(0+1280),c
 42767   012D06  519C               	movf	(_eepromWriterTime+2)& (0+255),w,b
 42768   012D08  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 42769   012D0A  6E3F               	movwf	(??_loop+2)^(0+1280),c
 42770   012D0C  519D               	movf	(_eepromWriterTime+3)& (0+255),w,b
 42771   012D0E  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 42772   012D10  6E40               	movwf	(??_loop+3)^(0+1280),c
 42773   012D12  5040               	movf	(??_loop+3)^(0+1280),w,c
 42774   012D14  103F               	iorwf	(??_loop+2)^(0+1280),w,c
 42775   012D16  103E               	iorwf	(??_loop+1)^(0+1280),w,c
 42776   012D18  E104               	bnz	u10790
 42777   012D1A  0E3F               	movlw	63
 42778   012D1C  5C3D               	subwf	??_loop^(0+1280),w,c
 42779   012D1E  A0D8               	btfss	status,0,c
 42780   012D20  0012               	return	
 42781   012D22                     u10790:
 42782                           
 42783                           ; BSR set to: 6
 42784                           ;../main.c: 268:         pollEEPROMwriter();
 42785   012D22  EC73  F0AD         	call	_pollEEPROMwriter	;wreg free
 42786   012D26  0012               	return		;funcret
 42787   012D28                     __end_of_loop:
 42788                           	callstack 0
 42789                           
 42790 ;; *************** function _pollOutputs *****************
 42791 ;; Defined at:
 42792 ;;		line 122 in file "../canpan3Outputs.c"
 42793 ;; Parameters:    Size  Location     Type
 42794 ;;		None
 42795 ;; Auto vars:     Size  Location     Type
 42796 ;;  i               1    8[COMRAM] unsigned char 
 42797 ;;  offset          1    7[COMRAM] unsigned char 
 42798 ;; Return value:  Size  Location     Type
 42799 ;;                  1    wreg      void 
 42800 ;; Registers used:
 42801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42802 ;; Tracked objects:
 42803 ;;		On entry : 0/0
 42804 ;;		On exit  : 0/0
 42805 ;;		Unchanged: 0/0
 42806 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 42807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42809 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42810 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 42811 ;;Total ram usage:        5 bytes
 42812 ;; Hardware stack levels used: 1
 42813 ;; Hardware stack levels required when called: 2
 42814 ;; This function calls:
 42815 ;;		_getNV
 42816 ;; This function is called by:
 42817 ;;		_loop
 42818 ;; This function uses a non-reentrant model
 42819 ;;
 42820                           
 42821                           	psect	text103
 42822   013FDA                     __ptext103:
 42823                           	callstack 0
 42824   013FDA                     _pollOutputs:
 42825                           	callstack 123
 42826                           
 42827                           ;../canpan3Outputs.c: 124:     uint8_t i;;../canpan3Outputs.c: 125:     uint8_t offset;;
      +                          ../canpan3Outputs.c: 127:     if (brightness == 0) {
 42828                           
 42829                           ;incstack = 0
 42830   013FDA  0105               	movlb	5	; () banked
 42831   013FDC  519B               	movf	_brightness& (0+255),w,b
 42832   013FDE  A4D8               	btfss	status,2,c
 42833   013FE0  D031               	goto	l485
 42834                           
 42835                           ; BSR set to: 5
 42836                           ;../canpan3Outputs.c: 129:         current_row++;
 42837   013FE2  2B9D               	incf	_current_row& (0+255),f,b
 42838                           
 42839                           ; BSR set to: 5
 42840                           ;../canpan3Outputs.c: 130:         current_row &= 0x3;
 42841   013FE4  0E03               	movlw	3
 42842   013FE6  179D               	andwf	_current_row& (0+255),f,b
 42843                           
 42844                           ; BSR set to: 5
 42845                           ;../canpan3Outputs.c: 133:         LATCbits.LATC2 = 1;
 42846   013FE8  84C0               	bsf	192,2,c	;volatile
 42847                           
 42848                           ; BSR set to: 5
 42849                           ;../canpan3Outputs.c: 135:         LATBbits.LATB4 = 0;
 42850   013FEA  98BF               	bcf	191,4,c	;volatile
 42851                           
 42852                           ; BSR set to: 5
 42853                           ;../canpan3Outputs.c: 136:         LATBbits.LATB5 = 0;
 42854   013FEC  9ABF               	bcf	191,5,c	;volatile
 42855                           
 42856                           ; BSR set to: 5
 42857                           ;../canpan3Outputs.c: 137:         LATCbits.LATC6 = 0;
 42858   013FEE  9CC0               	bcf	192,6,c	;volatile
 42859                           
 42860                           ; BSR set to: 5
 42861                           ;../canpan3Outputs.c: 138:         LATCbits.LATC7 = 0;
 42862   013FF0  9EC0               	bcf	192,7,c	;volatile
 42863                           
 42864                           ; BSR set to: 5
 42865                           ;../canpan3Outputs.c: 140:         cathodes = ledMatrix[current_row];
 42866   013FF2  0E68               	movlw	low _ledMatrix
 42867   013FF4  259D               	addwf	_current_row& (0+255),w,b
 42868   013FF6  6ED9               	movwf	fsr2l,c
 42869   013FF8  6ADA               	clrf	fsr2h,c
 42870   013FFA  0E05               	movlw	high _ledMatrix
 42871   013FFC  22DA               	addwfc	fsr2h,f,c
 42872   013FFE  50DF               	movf	indf2,w,c
 42873   014000  6F9C               	movwf	_cathodes& (0+255),b
 42874                           
 42875                           ; BSR set to: 5
 42876                           ;../canpan3Outputs.c: 141:         SPI1TCNTH=0;
 42877   014002  0100               	movlb	0	; () banked
 42878   014004  6B83               	clrf	131,b	;volatile
 42879                           
 42880                           ; BSR set to: 0
 42881                           ;../canpan3Outputs.c: 142:         SPI1TCNTL=1;
 42882   014006  0E01               	movlw	1
 42883   014008  6F82               	movwf	130,b	;volatile
 42884                           
 42885                           ; BSR set to: 0
 42886                           ;../canpan3Outputs.c: 143:         SPI1TWIDTH=0;
 42887   01400A  6B88               	clrf	136,b	;volatile
 42888                           
 42889                           ; BSR set to: 0
 42890                           ;../canpan3Outputs.c: 145:         SPI1TXB = cathodes;
 42891   01400C  C59C  F081         	movff	_cathodes,129	;volatile
 42892   014010                     l486:
 42893                           
 42894                           ; BSR set to: 0
 42895                           ;../canpan3Outputs.c: 150:         while (! SPI1STATUSbits.TXBE)
 42896   014010  BB87               	btfsc	135,5,b	;volatile
 42897   014012  D009               	goto	l11663
 42898   014014  D7FD               	goto	l486
 42899   014016                     l490:
 42900                           
 42901                           ; BSR set to: 5
 42902                           ;../canpan3Outputs.c: 159:                 LATBbits.LATB4 = 1;
 42903   014016  88BF               	bsf	191,4,c	;volatile
 42904                           
 42905                           ;../canpan3Outputs.c: 160:                 break;
 42906   014018  D045               	goto	u9970
 42907   01401A                     l492:
 42908                           
 42909                           ; BSR set to: 5
 42910                           ;../canpan3Outputs.c: 162:                 LATBbits.LATB5 = 1;
 42911   01401A  8ABF               	bsf	191,5,c	;volatile
 42912                           
 42913                           ;../canpan3Outputs.c: 163:                 break;
 42914   01401C  D043               	goto	u9970
 42915   01401E                     l493:
 42916                           
 42917                           ; BSR set to: 5
 42918                           ;../canpan3Outputs.c: 165:                 LATCbits.LATC6 = 1;
 42919   01401E  8CC0               	bsf	192,6,c	;volatile
 42920                           
 42921                           ;../canpan3Outputs.c: 166:                 break;
 42922   014020  D041               	goto	u9970
 42923   014022                     l494:
 42924                           
 42925                           ; BSR set to: 5
 42926                           ;../canpan3Outputs.c: 168:                 LATCbits.LATC7 = 1;
 42927   014022  8EC0               	bsf	192,7,c	;volatile
 42928                           
 42929                           ;../canpan3Outputs.c: 169:                 break;
 42930   014024  D03F               	goto	u9970
 42931   014026                     l11663:
 42932                           
 42933                           ; BSR set to: 0
 42934   014026  0105               	movlb	5	; () banked
 42935   014028  519D               	movf	_current_row& (0+255),w,b
 42936                           
 42937                           ; Switch size 1, requested type "simple"
 42938                           ; Number of cases is 4, Range of values is 0 to 3
 42939                           ; switch strategies available:
 42940                           ; Name         Instructions Cycles
 42941                           ; simple_byte           13     7 (average)
 42942                           ;	Chosen strategy is simple_byte
 42943   01402A  0A00               	xorlw	0	; case 0
 42944   01402C  B4D8               	btfsc	status,2,c
 42945   01402E  D7F3               	goto	l490
 42946   014030  0A01               	xorlw	1	; case 1
 42947   014032  B4D8               	btfsc	status,2,c
 42948   014034  D7F2               	goto	l492
 42949   014036  0A03               	xorlw	3	; case 2
 42950   014038  B4D8               	btfsc	status,2,c
 42951   01403A  D7F1               	goto	l493
 42952   01403C  0A01               	xorlw	1	; case 3
 42953   01403E  B4D8               	btfsc	status,2,c
 42954   014040  D7F0               	goto	l494
 42955   014042  D030               	goto	u9970
 42956   014044                     l485:
 42957                           
 42958                           ; BSR set to: 5
 42959                           ;../canpan3Outputs.c: 179:         LATCbits.LATC2 = 1;
 42960   014044  84C0               	bsf	192,2,c	;volatile
 42961                           
 42962                           ; BSR set to: 5
 42963                           ;../canpan3Outputs.c: 182:         offset = current_row*8 +3;
 42964   014046  519D               	movf	_current_row& (0+255),w,b
 42965   014048  0D08               	mullw	8
 42966   01404A  50F3               	movf	243,w,c
 42967   01404C  0F03               	addlw	3
 42968   01404E  6E08               	movwf	pollOutputs@offset^(0+1280),c
 42969                           
 42970                           ; BSR set to: 5
 42971                           ;../canpan3Outputs.c: 183:         for (i=0; i<8; i++) {
 42972   014050  6A09               	clrf	pollOutputs@i^(0+1280),c
 42973   014052                     l11673:
 42974                           
 42975                           ;../canpan3Outputs.c: 184:             if (brightness > getNV(offset + i)) {
 42976   014052  0105               	movlb	5	; () banked
 42977   014054  519B               	movf	_brightness& (0+255),w,b
 42978   014056  6E05               	movwf	??_pollOutputs^(0+1280),c
 42979   014058  6A06               	clrf	(??_pollOutputs+1)^(0+1280),c
 42980   01405A  5008               	movf	pollOutputs@offset^(0+1280),w,c
 42981   01405C  2409               	addwf	pollOutputs@i^(0+1280),w,c
 42982   01405E  ECE0  F0AF         	call	_getNV
 42983   014062  5005               	movf	??_pollOutputs^(0+1280),w,c
 42984   014064  5C01               	subwf	?_getNV^(0+1280),w,c
 42985   014066  5002               	movf	(?_getNV+1)^(0+1280),w,c
 42986   014068  0A80               	xorlw	128
 42987   01406A  6E07               	movwf	(??_pollOutputs+2)^(0+1280),c
 42988   01406C  5006               	movf	(??_pollOutputs+1)^(0+1280),w,c
 42989   01406E  0A80               	xorlw	128
 42990   014070  5807               	subwfb	(??_pollOutputs+2)^(0+1280),w,c
 42991   014072  B0D8               	btfsc	status,0,c
 42992   014074  D00E               	goto	l11677
 42993                           
 42994                           ;../canpan3Outputs.c: 185:                 cathodes &= ~(1 << i);
 42995   014076  C509  F505         	movff	pollOutputs@i,??_pollOutputs
 42996   01407A  0E01               	movlw	1
 42997   01407C  6E06               	movwf	(??_pollOutputs+1)^(0+1280),c
 42998   01407E  2A05               	incf	??_pollOutputs^(0+1280),f,c
 42999   014080  D002               	goto	u9954
 43000   014082                     u9955:
 43001   014082  90D8               	bcf	status,0,c
 43002   014084  3606               	rlcf	(??_pollOutputs+1)^(0+1280),f,c
 43003   014086                     u9954:
 43004   014086  2E05               	decfsz	??_pollOutputs^(0+1280),f,c
 43005   014088  D7FC               	goto	u9955
 43006   01408A  5006               	movf	(??_pollOutputs+1)^(0+1280),w,c
 43007   01408C  0AFF               	xorlw	255
 43008   01408E  0105               	movlb	5	; () banked
 43009   014090  179C               	andwf	_cathodes& (0+255),f,b
 43010   014092                     l11677:
 43011                           
 43012                           ;../canpan3Outputs.c: 187:         }
 43013   014092  2A09               	incf	pollOutputs@i^(0+1280),f,c
 43014   014094  0E07               	movlw	7
 43015   014096  6409               	cpfsgt	pollOutputs@i^(0+1280),c
 43016   014098  D7DC               	goto	l11673
 43017                           
 43018                           ;../canpan3Outputs.c: 189:         SPI1TXB = cathodes;
 43019   01409A  C59C  F081         	movff	_cathodes,129	;volatile
 43020   01409E                     l499:
 43021                           
 43022                           ;../canpan3Outputs.c: 192:         while (! SPI1STATUSbits.TXBE)
 43023   01409E  0100               	movlb	0	; () banked
 43024   0140A0  AB87               	btfss	135,5,b	;volatile
 43025   0140A2  D7FD               	goto	l499
 43026   0140A4                     u9970:
 43027                           
 43028                           ; BSR set to: 0
 43029                           ;../canpan3Outputs.c: 195:         LATCbits.LATC2 = 0;
 43030   0140A4  94C0               	bcf	192,2,c	;volatile
 43031                           
 43032                           ;../canpan3Outputs.c: 197:     brightness += 2;
 43033   0140A6  0E02               	movlw	2
 43034   0140A8  0105               	movlb	5	; () banked
 43035   0140AA  279B               	addwf	_brightness& (0+255),f,b
 43036                           
 43037                           ;../canpan3Outputs.c: 198:     if (brightness >= 32) {
 43038   0140AC  0E1F               	movlw	31
 43039   0140AE  659B               	cpfsgt	_brightness& (0+255),b
 43040   0140B0  0012               	return	
 43041                           
 43042                           ; BSR set to: 5
 43043                           ;../canpan3Outputs.c: 199:         brightness = 0;
 43044   0140B2  6B9B               	clrf	_brightness& (0+255),b
 43045                           
 43046                           ; BSR set to: 5
 43047   0140B4  0012               	return		;funcret
 43048   0140B6                     __end_of_pollOutputs:
 43049                           	callstack 0
 43050                           
 43051 ;; *************** function _pollEEPROMwriter *****************
 43052 ;; Defined at:
 43053 ;;		line 94 in file "../EEPROMbuffer.c"
 43054 ;; Parameters:    Size  Location     Type
 43055 ;;		None
 43056 ;; Auto vars:     Size  Location     Type
 43057 ;;  i               1    9[COMRAM] unsigned char 
 43058 ;; Return value:  Size  Location     Type
 43059 ;;                  1    wreg      void 
 43060 ;; Registers used:
 43061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43062 ;; Tracked objects:
 43063 ;;		On entry : 0/0
 43064 ;;		On exit  : 0/0
 43065 ;;		Unchanged: 0/0
 43066 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43069 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43071 ;;Total ram usage:        2 bytes
 43072 ;; Hardware stack levels used: 1
 43073 ;; Hardware stack levels required when called: 2
 43074 ;; This function calls:
 43075 ;;		_EEPROM_WriteNoVerify
 43076 ;; This function is called by:
 43077 ;;		_loop
 43078 ;; This function uses a non-reentrant model
 43079 ;;
 43080                           
 43081                           	psect	text104
 43082   015AE6                     __ptext104:
 43083                           	callstack 0
 43084   015AE6                     _pollEEPROMwriter:
 43085                           	callstack 123
 43086                           
 43087                           ;../EEPROMbuffer.c: 95:     uint8_t i;;../EEPROMbuffer.c: 98:     if (NVMCON0 == 0) {
 43088                           
 43089                           ; BSR set to: 5
 43090                           ;incstack = 0
 43091   015AE6  0100               	movlb	0	; () banked
 43092   015AE8  5140               	movf	64,w,b	;volatile
 43093   015AEA  A4D8               	btfss	status,2,c
 43094   015AEC  0012               	return	
 43095                           
 43096                           ; BSR set to: 0
 43097                           ;../EEPROMbuffer.c: 100:         for (i=0; i < ((8*4) + (4*8)); i++) {
 43098   015AEE  6A0A               	clrf	pollEEPROMwriter@i^(0+1280),c
 43099   015AF0                     l11693:
 43100                           
 43101                           ;../EEPROMbuffer.c: 101:             currentMemory ++;
 43102   015AF0  0105               	movlb	5	; () banked
 43103   015AF2  2B82               	incf	_currentMemory& (0+255),f,b
 43104                           
 43105                           ; BSR set to: 5
 43106                           ;../EEPROMbuffer.c: 102:             if (currentMemory >= ((8*4) + (4*8))) {
 43107   015AF4  0E3F               	movlw	63
 43108   015AF6  6582               	cpfsgt	_currentMemory& (0+255),b
 43109   015AF8  D001               	goto	l11699
 43110                           
 43111                           ; BSR set to: 5
 43112                           ;../EEPROMbuffer.c: 103:                 currentMemory = 0;
 43113   015AFA  6B82               	clrf	_currentMemory& (0+255),b
 43114   015AFC                     l11699:
 43115                           
 43116                           ; BSR set to: 5
 43117                           ;../EEPROMbuffer.c: 105:             if (writeNeeded[currentMemory] == 1) {
 43118   015AFC  0E84               	movlw	low _writeNeeded
 43119   015AFE  2582               	addwf	_currentMemory& (0+255),w,b
 43120   015B00  6ED9               	movwf	fsr2l,c
 43121   015B02  6ADA               	clrf	fsr2h,c
 43122   015B04  0E07               	movlw	high _writeNeeded
 43123   015B06  22DA               	addwfc	fsr2h,f,c
 43124   015B08  04DE               	decf	postinc2,w,c
 43125   015B0A  A4D8               	btfss	status,2,c
 43126   015B0C  D00F               	goto	l11705
 43127                           
 43128                           ; BSR set to: 5
 43129                           ;../EEPROMbuffer.c: 107:                 EEPROM_WriteNoVerify(0x0000 + currentMemory, ee
      +                          Value[currentMemory]);
 43130   015B0E  5182               	movf	_currentMemory& (0+255),w,b
 43131   015B10  6E01               	movwf	EEPROM_WriteNoVerify@index^(0+1280),c
 43132   015B12  6A02               	clrf	(EEPROM_WriteNoVerify@index+1)^(0+1280),c
 43133   015B14  6A03               	clrf	(EEPROM_WriteNoVerify@index+2)^(0+1280),c
 43134   015B16  0E44               	movlw	low _eeValue
 43135   015B18  2582               	addwf	_currentMemory& (0+255),w,b
 43136   015B1A  6ED9               	movwf	fsr2l,c
 43137   015B1C  6ADA               	clrf	fsr2h,c
 43138   015B1E  0E07               	movlw	high _eeValue
 43139   015B20  22DA               	addwfc	fsr2h,f,c
 43140   015B22  50DF               	movf	indf2,w,c
 43141   015B24  6E04               	movwf	EEPROM_WriteNoVerify@value^(0+1280),c
 43142   015B26  EC22  F0AD         	call	_EEPROM_WriteNoVerify	;wreg free
 43143   015B2A  0012               	return	
 43144   015B2C                     l11705:
 43145                           
 43146                           ; BSR set to: 5
 43147                           ;../EEPROMbuffer.c: 110:         }
 43148   015B2C  2A0A               	incf	pollEEPROMwriter@i^(0+1280),f,c
 43149                           
 43150                           ; BSR set to: 5
 43151   015B2E  0E3F               	movlw	63
 43152   015B30  640A               	cpfsgt	pollEEPROMwriter@i^(0+1280),c
 43153   015B32  D7DE               	goto	l11693
 43154   015B34  0012               	return	
 43155   015B36                     __end_of_pollEEPROMwriter:
 43156                           	callstack 0
 43157                           
 43158 ;; *************** function _inputScan *****************
 43159 ;; Defined at:
 43160 ;;		line 119 in file "../canpan3Inputs.c"
 43161 ;; Parameters:    Size  Location     Type
 43162 ;;		None
 43163 ;; Auto vars:     Size  Location     Type
 43164 ;;  producedEven    2    0        struct Word
 43165 ;;  producedEven    2    0        struct Word
 43166 ;;  buttonNo        1   59[COMRAM] unsigned char 
 43167 ;;  onOff           1   58[COMRAM] unsigned char 
 43168 ;;  sv              1   57[COMRAM] unsigned char 
 43169 ;;  i               1   56[COMRAM] unsigned char 
 43170 ;;  switchMode      1   55[COMRAM] unsigned char 
 43171 ;;  tableIndex      1   54[COMRAM] unsigned char 
 43172 ;;  row             1   53[COMRAM] unsigned char 
 43173 ;;  diff            1   52[COMRAM] unsigned char 
 43174 ;;  opc             1    0        unsigned char 
 43175 ;; Return value:  Size  Location     Type
 43176 ;;                  1    wreg      void 
 43177 ;; Registers used:
 43178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 43179 ;; Tracked objects:
 43180 ;;		On entry : 0/0
 43181 ;;		On exit  : 0/0
 43182 ;;		Unchanged: 0/0
 43183 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43185 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43186 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43187 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43188 ;;Total ram usage:       12 bytes
 43189 ;; Hardware stack levels used: 1
 43190 ;; Hardware stack levels required when called: 7
 43191 ;; This function calls:
 43192 ;;		_canpanSendProducedEvent
 43193 ;;		_driveColumn
 43194 ;;		_findEventForSwitch
 43195 ;;		_getEVs
 43196 ;;		_getNV
 43197 ;;		_saveSwitchState
 43198 ;;		_sendMessage5
 43199 ;; This function is called by:
 43200 ;;		_loop
 43201 ;; This function uses a non-reentrant model
 43202 ;;
 43203                           
 43204                           	psect	text105
 43205   011EBE                     __ptext105:
 43206                           	callstack 0
 43207   011EBE                     _inputScan:
 43208                           	callstack 118
 43209                           
 43210                           ;../canpan3Inputs.c: 120:     uint8_t row;;../canpan3Inputs.c: 121:     uint8_t i;;../ca
      +                          npan3Inputs.c: 122:     uint8_t diff;;../canpan3Inputs.c: 123:     uint8_t tableIndex;;.
      +                          ./canpan3Inputs.c: 124:     uint8_t sv;;../canpan3Inputs.c: 125:     uint8_t switchMode;
      +                          ;../canpan3Inputs.c: 126:     uint8_t onOff;;../canpan3Inputs.c: 127:     uint8_t button
      +                          No;;../canpan3Inputs.c: 128:     Word producedEventNN;;../canpan3Inputs.c: 129:     Word
      +                           producedEventEN;;../canpan3Inputs.c: 130:     uint8_t opc;;../canpan3Inputs.c: 134:    
      +                           row = (uint8_t)((PORTC & 0x03) << 2);
 43211                           
 43212                           ;incstack = 0
 43213   011EBE  C4D0 F531          	movff	1232,??_inputScan	;volatile
 43214   011EC2  0E03               	movlw	3
 43215   011EC4  1631               	andwf	??_inputScan^(0+1280),f,c
 43216   011EC6  90D8               	bcf	status,0,c
 43217   011EC8  3631               	rlcf	??_inputScan^(0+1280),f,c
 43218   011ECA  90D8               	bcf	status,0,c
 43219   011ECC  3431               	rlcf	??_inputScan^(0+1280),w,c
 43220   011ECE  6E36               	movwf	inputScan@row^(0+1280),c
 43221                           
 43222                           ;../canpan3Inputs.c: 135:     row |= (PORTB & 0x03);
 43223   011ED0  50CF               	movf	207,w,c	;volatile
 43224   011ED2  0B03               	andlw	3
 43225   011ED4  1236               	iorwf	inputScan@row^(0+1280),f,c
 43226                           
 43227                           ;../canpan3Inputs.c: 136:     diff = row ^ buttonState[column];
 43228   011ED6  0E7E               	movlw	low _buttonState
 43229   011ED8  0105               	movlb	5	; () banked
 43230   011EDA  259E               	addwf	_column& (0+255),w,b
 43231   011EDC  6ED9               	movwf	fsr2l,c
 43232   011EDE  6ADA               	clrf	fsr2h,c
 43233   011EE0  0E06               	movlw	high _buttonState
 43234   011EE2  22DA               	addwfc	fsr2h,f,c
 43235   011EE4  50DF               	movf	indf2,w,c
 43236   011EE6  1836               	xorwf	inputScan@row^(0+1280),w,c
 43237   011EE8  6E35               	movwf	inputScan@diff^(0+1280),c
 43238                           
 43239                           ; BSR set to: 5
 43240                           ;../canpan3Inputs.c: 140:     for (i=0; i<4; i++) {
 43241   011EEA  6A39               	clrf	inputScan@i^(0+1280),c
 43242   011EEC                     l11489:
 43243                           
 43244                           ;../canpan3Inputs.c: 141:         if (diff & (1 << i)) {
 43245   011EEC  C539  F531         	movff	inputScan@i,??_inputScan
 43246   011EF0  0E01               	movlw	1
 43247   011EF2  6E32               	movwf	(??_inputScan+1)^(0+1280),c
 43248   011EF4  2A31               	incf	??_inputScan^(0+1280),f,c
 43249   011EF6  D002               	goto	u9574
 43250   011EF8                     u9575:
 43251   011EF8  90D8               	bcf	status,0,c
 43252   011EFA  3632               	rlcf	(??_inputScan+1)^(0+1280),f,c
 43253   011EFC                     u9574:
 43254   011EFC  2E31               	decfsz	??_inputScan^(0+1280),f,c
 43255   011EFE  D7FC               	goto	u9575
 43256   011F00  5032               	movf	(??_inputScan+1)^(0+1280),w,c
 43257   011F02  1435               	andwf	inputScan@diff^(0+1280),w,c
 43258   011F04  0900               	iorlw	0
 43259   011F06  B4D8               	btfsc	status,2,c
 43260   011F08  D0F1               	goto	l11587
 43261                           
 43262                           ;../canpan3Inputs.c: 143:             onOff = !!(row & (1 << i));
 43263   011F0A  C539  F531         	movff	inputScan@i,??_inputScan
 43264   011F0E  0E01               	movlw	1
 43265   011F10  6E32               	movwf	(??_inputScan+1)^(0+1280),c
 43266   011F12  2A31               	incf	??_inputScan^(0+1280),f,c
 43267   011F14  D002               	goto	u9594
 43268   011F16                     u9595:
 43269   011F16  90D8               	bcf	status,0,c
 43270   011F18  3632               	rlcf	(??_inputScan+1)^(0+1280),f,c
 43271   011F1A                     u9594:
 43272   011F1A  2E31               	decfsz	??_inputScan^(0+1280),f,c
 43273   011F1C  D7FC               	goto	u9595
 43274   011F1E  5032               	movf	(??_inputScan+1)^(0+1280),w,c
 43275   011F20  1436               	andwf	inputScan@row^(0+1280),w,c
 43276   011F22  0900               	iorlw	0
 43277   011F24  B4D8               	btfsc	status,2,c
 43278   011F26  D002               	goto	u9600
 43279   011F28  0E01               	movlw	1
 43280   011F2A  D001               	goto	u9610
 43281   011F2C                     u9600:
 43282   011F2C  0E00               	movlw	0
 43283   011F2E                     u9610:
 43284   011F2E  6E3B               	movwf	inputScan@onOff^(0+1280),c
 43285                           
 43286                           ;../canpan3Inputs.c: 144:             buttonNo = column*4 + i;
 43287   011F30  0105               	movlb	5	; () banked
 43288   011F32  519E               	movf	_column& (0+255),w,b
 43289   011F34  0D04               	mullw	4
 43290   011F36  50F3               	movf	243,w,c
 43291   011F38  2439               	addwf	inputScan@i^(0+1280),w,c
 43292   011F3A  6E3C               	movwf	inputScan@buttonNo^(0+1280),c
 43293                           
 43294                           ; BSR set to: 5
 43295                           ;../canpan3Inputs.c: 145:             if (mode_flags & 1) {
 43296   011F3C  A1A0               	btfss	_mode_flags& (0+255),0,b
 43297   011F3E  D00E               	goto	l342
 43298                           
 43299                           ; BSR set to: 5
 43300                           ;../canpan3Inputs.c: 147:                 sendMessage5(OPC_ARON1, nn.bytes.hi, nn.bytes.
      +                          lo, 0, 0, buttonNo+1);
 43301   011F40  C55F  F525         	movff	_nn+1,sendMessage5@data1
 43302   011F44  C55E  F526         	movff	_nn,sendMessage5@data2
 43303   011F48  0E00               	movlw	0
 43304   011F4A  6E27               	movwf	sendMessage5@data3^(0+1280),c
 43305   011F4C  0E00               	movlw	0
 43306   011F4E  6E28               	movwf	sendMessage5@data4^(0+1280),c
 43307   011F50  283C               	incf	inputScan@buttonNo^(0+1280),w,c
 43308   011F52  6E29               	movwf	sendMessage5@data5^(0+1280),c
 43309   011F54  0EB3               	movlw	179
 43310   011F56  ECCD  F0B1         	call	_sendMessage5
 43311                           
 43312                           ;../canpan3Inputs.c: 148:             } else {
 43313   011F5A  D0C8               	goto	l11587
 43314   011F5C                     l342:
 43315                           
 43316                           ; BSR set to: 5
 43317                           ;../canpan3Inputs.c: 149:                 switchMode = 0;
 43318   011F5C  6A38               	clrf	inputScan@switchMode^(0+1280),c
 43319                           
 43320                           ; BSR set to: 5
 43321                           ;../canpan3Inputs.c: 150:                 tableIndex = findEventForSwitch(buttonNo & 0xF
      +                          E);
 43322   011F5E  503C               	movf	inputScan@buttonNo^(0+1280),w,c
 43323   011F60  0BFE               	andlw	254
 43324   011F62  EC1D  F0B3         	call	_findEventForSwitch
 43325   011F66  6E37               	movwf	inputScan@tableIndex^(0+1280),c
 43326                           
 43327                           ;../canpan3Inputs.c: 151:                 if (tableIndex != 0xff) {
 43328   011F68  2837               	incf	inputScan@tableIndex^(0+1280),w,c
 43329   011F6A  B4D8               	btfsc	status,2,c
 43330   011F6C  D01A               	goto	l11517
 43331                           
 43332                           ;../canpan3Inputs.c: 152:                     sv = (uint8_t)getNV((3 +(8*4)) + (buttonNo
      +                           & 0xFE));
 43333   011F6E  503C               	movf	inputScan@buttonNo^(0+1280),w,c
 43334   011F70  0BFE               	andlw	254
 43335   011F72  0F23               	addlw	35
 43336   011F74  ECE0  F0AF         	call	_getNV
 43337   011F78  5001               	movf	?_getNV^(0+1280),w,c
 43338   011F7A  6E3A               	movwf	inputScan@sv^(0+1280),c
 43339                           
 43340                           ;../canpan3Inputs.c: 153:                     if (sv & 1) {
 43341   011F7C  A03A               	btfss	inputScan@sv^(0+1280),0,c
 43342   011F7E  D00D               	goto	l11515
 43343                           
 43344                           ;../canpan3Inputs.c: 154:                         switchMode = (buttonNo & 1) ? 5 : 4;
 43345   011F80  B03C               	btfsc	inputScan@buttonNo^(0+1280),0,c
 43346   011F82  D004               	goto	l11511
 43347   011F84  0E00               	movlw	0
 43348   011F86  6E34               	movwf	(_inputScan$1270+1)^(0+1280),c
 43349   011F88  0E04               	movlw	4
 43350   011F8A  D003               	goto	L5
 43351   011F8C                     l11511:
 43352   011F8C  0E00               	movlw	0
 43353   011F8E  6E34               	movwf	(_inputScan$1270+1)^(0+1280),c
 43354   011F90  0E05               	movlw	5
 43355   011F92                     L5:
 43356   011F92  6E33               	movwf	_inputScan$1270^(0+1280),c
 43357   011F94  C533  F538         	movff	_inputScan$1270,inputScan@switchMode
 43358                           
 43359                           ;../canpan3Inputs.c: 155:                     } else {
 43360   011F98  D008               	goto	l11519
 43361   011F9A                     l11515:
 43362                           
 43363                           ;../canpan3Inputs.c: 156:                         tableIndex = findEventForSwitch(button
      +                          No);
 43364   011F9A  503C               	movf	inputScan@buttonNo^(0+1280),w,c
 43365   011F9C  EC1D  F0B3         	call	_findEventForSwitch
 43366   011FA0  D003               	goto	L6
 43367   011FA2                     l11517:
 43368                           
 43369                           ;../canpan3Inputs.c: 159:                     tableIndex = findEventForSwitch(buttonNo);
 43370   011FA2  503C               	movf	inputScan@buttonNo^(0+1280),w,c
 43371   011FA4  EC1D  F0B3         	call	_findEventForSwitch
 43372   011FA8                     L6:
 43373   011FA8  6E37               	movwf	inputScan@tableIndex^(0+1280),c
 43374   011FAA                     l11519:
 43375                           
 43376                           ;../canpan3Inputs.c: 162:                 if (tableIndex != 0xff) {
 43377   011FAA  2837               	incf	inputScan@tableIndex^(0+1280),w,c
 43378   011FAC  B4D8               	btfsc	status,2,c
 43379   011FAE  D09E               	goto	l11587
 43380                           
 43381                           ;../canpan3Inputs.c: 163:                     getEVs(tableIndex);
 43382   011FB0  5037               	movf	inputScan@tableIndex^(0+1280),w,c
 43383   011FB2  ECD8  F0A9         	call	_getEVs
 43384                           
 43385                           ;../canpan3Inputs.c: 164:                     sv = evs[2];
 43386   011FB6  C673  F53A         	movff	_evs+2,inputScan@sv
 43387                           
 43388                           ;../canpan3Inputs.c: 165:                     if (switchMode == 0) {
 43389   011FBA  5038               	movf	inputScan@switchMode^(0+1280),w,c
 43390   011FBC  A4D8               	btfss	status,2,c
 43391   011FBE  D00D               	goto	l355
 43392                           
 43393                           ;../canpan3Inputs.c: 167:                         switchMode = 0;
 43394   011FC0  6A38               	clrf	inputScan@switchMode^(0+1280),c
 43395                           
 43396                           ;../canpan3Inputs.c: 168:                         if (sv & 1) {
 43397   011FC2  A03A               	btfss	inputScan@sv^(0+1280),0,c
 43398   011FC4  D002               	goto	l354
 43399                           
 43400                           ;../canpan3Inputs.c: 169:                             switchMode = 1;
 43401   011FC6  0E01               	movlw	1
 43402   011FC8  D007               	goto	L8
 43403   011FCA                     l354:
 43404   011FCA  A43A               	btfss	inputScan@sv^(0+1280),2,c
 43405   011FCC  D002               	goto	l356
 43406                           
 43407                           ;../canpan3Inputs.c: 171:                             switchMode = 2;
 43408   011FCE  0E02               	movlw	2
 43409   011FD0  D003               	goto	L8
 43410   011FD2                     l356:
 43411   011FD2  A63A               	btfss	inputScan@sv^(0+1280),3,c
 43412   011FD4  D002               	goto	l355
 43413                           
 43414                           ;../canpan3Inputs.c: 173:                             switchMode = 3;
 43415   011FD6  0E03               	movlw	3
 43416   011FD8                     L8:
 43417   011FD8  6E38               	movwf	inputScan@switchMode^(0+1280),c
 43418   011FDA                     l355:
 43419                           
 43420                           ;../canpan3Inputs.c: 177:                     if (mode_flags & 1) {
 43421   011FDA  0105               	movlb	5	; () banked
 43422   011FDC  A1A0               	btfss	_mode_flags& (0+255),0,b
 43423   011FDE  D002               	goto	l359
 43424                           
 43425                           ; BSR set to: 5
 43426                           ;../canpan3Inputs.c: 178:                         switchMode = 1;
 43427   011FE0  0E01               	movlw	1
 43428   011FE2  6E38               	movwf	inputScan@switchMode^(0+1280),c
 43429   011FE4                     l359:
 43430                           
 43431                           ; BSR set to: 5
 43432                           ;../canpan3Inputs.c: 180:                     if (switchMode != 0){
 43433   011FE4  5038               	movf	inputScan@switchMode^(0+1280),w,c
 43434   011FE6  A4D8               	btfss	status,2,c
 43435   011FE8  D068               	goto	l11581
 43436   011FEA  D080               	goto	l11587
 43437   011FEC                     l362:
 43438                           
 43439                           ; BSR set to: 5
 43440                           ;../canpan3Inputs.c: 184:                                 if (sv & 0b00000010) {
 43441   011FEC  A23A               	btfss	inputScan@sv^(0+1280),1,c
 43442   011FEE  D007               	goto	l11543
 43443                           
 43444                           ; BSR set to: 5
 43445                           ;../canpan3Inputs.c: 185:                                     onOff = !onOff;
 43446   011FF0  503B               	movf	inputScan@onOff^(0+1280),w,c
 43447   011FF2  A4D8               	btfss	status,2,c
 43448   011FF4  D002               	goto	u9740
 43449   011FF6  0E01               	movlw	1
 43450   011FF8  D001               	goto	u9750
 43451   011FFA                     u9740:
 43452   011FFA  0E00               	movlw	0
 43453   011FFC                     u9750:
 43454   011FFC  6E3B               	movwf	inputScan@onOff^(0+1280),c
 43455   011FFE                     l11543:
 43456                           
 43457                           ; BSR set to: 5
 43458                           ;../canpan3Inputs.c: 187:                                 outputState[buttonNo] = onOff;
 43459   011FFE  0E41               	movlw	low _outputState
 43460   012000  243C               	addwf	inputScan@buttonNo^(0+1280),w,c
 43461   012002  6ED9               	movwf	fsr2l,c
 43462   012004  6ADA               	clrf	fsr2h,c
 43463   012006  0E06               	movlw	high _outputState
 43464   012008  22DA               	addwfc	fsr2h,f,c
 43465   01200A  C53B  F4DF         	movff	inputScan@onOff,indf2
 43466                           
 43467                           ;../canpan3Inputs.c: 188:                                 break;
 43468   01200E  D065               	goto	l11583
 43469   012010                     l365:
 43470                           
 43471                           ; BSR set to: 5
 43472                           ;../canpan3Inputs.c: 190:                                 if (sv & 0b00000010) {
 43473   012010  A23A               	btfss	inputScan@sv^(0+1280),1,c
 43474   012012  D005               	goto	l11549
 43475                           
 43476                           ; BSR set to: 5
 43477                           ;../canpan3Inputs.c: 191:                                     if (! onOff) {
 43478   012014  503B               	movf	inputScan@onOff^(0+1280),w,c
 43479   012016  B4D8               	btfsc	status,2,c
 43480   012018  D069               	goto	l11587
 43481                           
 43482                           ; BSR set to: 5
 43483                           ;../canpan3Inputs.c: 194:                                     onOff = 0;
 43484                           
 43485                           ;../canpan3Inputs.c: 193:                                     }
 43486                           
 43487                           ; BSR set to: 5
 43488                           ;../canpan3Inputs.c: 192:                                         continue;
 43489   01201A  6A3B               	clrf	inputScan@onOff^(0+1280),c
 43490                           
 43491                           ;../canpan3Inputs.c: 195:                                 } else {
 43492   01201C  D7F0               	goto	l11543
 43493   01201E                     l11549:
 43494                           
 43495                           ; BSR set to: 5
 43496                           ;../canpan3Inputs.c: 196:                                     if (! onOff) {
 43497   01201E  503B               	movf	inputScan@onOff^(0+1280),w,c
 43498   012020  B4D8               	btfsc	status,2,c
 43499   012022  D064               	goto	l11587
 43500   012024  D7EC               	goto	l11543
 43501   012026                     l11555:
 43502                           
 43503                           ; BSR set to: 5
 43504                           ;../canpan3Inputs.c: 203:                                 if (onOff) {
 43505   012026  503B               	movf	inputScan@onOff^(0+1280),w,c
 43506   012028  B4D8               	btfsc	status,2,c
 43507   01202A  D060               	goto	l11587
 43508                           
 43509                           ; BSR set to: 5
 43510                           ;../canpan3Inputs.c: 204:                                     outputState[buttonNo] = ! 
      +                          outputState[buttonNo];
 43511   01202C  0E41               	movlw	low _outputState
 43512   01202E  243C               	addwf	inputScan@buttonNo^(0+1280),w,c
 43513   012030  6ED9               	movwf	fsr2l,c
 43514   012032  6ADA               	clrf	fsr2h,c
 43515   012034  0E06               	movlw	high _outputState
 43516   012036  22DA               	addwfc	fsr2h,f,c
 43517   012038  0E41               	movlw	low _outputState
 43518   01203A  243C               	addwf	inputScan@buttonNo^(0+1280),w,c
 43519   01203C  6EE1               	movwf	fsr1l,c
 43520   01203E  6AE2               	clrf	fsr1h,c
 43521   012040  0E06               	movlw	high _outputState
 43522   012042  22E2               	addwfc	fsr1h,f,c
 43523   012044  50E7               	movf	indf1,w,c
 43524   012046  A4D8               	btfss	status,2,c
 43525   012048  D002               	goto	u9800
 43526   01204A  0E01               	movlw	1
 43527   01204C  D001               	goto	u9810
 43528   01204E                     u9800:
 43529   01204E  0E00               	movlw	0
 43530   012050                     u9810:
 43531   012050  6EDF               	movwf	indf2,c
 43532                           
 43533                           ; BSR set to: 5
 43534                           ;../canpan3Inputs.c: 208:                                 onOff = outputState[buttonNo];
 43535                           
 43536                           ;../canpan3Inputs.c: 205:                                 } else {
 43537   012052  0E41               	movlw	low _outputState
 43538   012054  243C               	addwf	inputScan@buttonNo^(0+1280),w,c
 43539   012056  6ED9               	movwf	fsr2l,c
 43540   012058  6ADA               	clrf	fsr2h,c
 43541   01205A  0E06               	movlw	high _outputState
 43542   01205C  22DA               	addwfc	fsr2h,f,c
 43543   01205E  50DF               	movf	indf2,w,c
 43544   012060  6E3B               	movwf	inputScan@onOff^(0+1280),c
 43545                           
 43546                           ; BSR set to: 5
 43547                           ;../canpan3Inputs.c: 209:                                 saveSwitchState(buttonNo, onOf
      +                          f);
 43548   012062  C53B  F505         	movff	inputScan@onOff,saveSwitchState@onOff
 43549   012066  503C               	movf	inputScan@buttonNo^(0+1280),w,c
 43550   012068  EC39  F0B3         	call	_saveSwitchState
 43551                           
 43552                           ;../canpan3Inputs.c: 210:                                 break;
 43553   01206C  D036               	goto	l11583
 43554   01206E                     l11563:
 43555                           
 43556                           ; BSR set to: 5
 43557                           ;../canpan3Inputs.c: 212:                                 if (! onOff) {
 43558   01206E  503B               	movf	inputScan@onOff^(0+1280),w,c
 43559   012070  B4D8               	btfsc	status,2,c
 43560   012072  D03C               	goto	l11587
 43561                           
 43562                           ; BSR set to: 5
 43563                           ;../canpan3Inputs.c: 215:                                 outputState[buttonNo] = 1;
 43564   012074  0E41               	movlw	low _outputState
 43565   012076  243C               	addwf	inputScan@buttonNo^(0+1280),w,c
 43566   012078  6ED9               	movwf	fsr2l,c
 43567   01207A  6ADA               	clrf	fsr2h,c
 43568   01207C  0E06               	movlw	high _outputState
 43569   01207E  22DA               	addwfc	fsr2h,f,c
 43570   012080  0E01               	movlw	1
 43571   012082  6EDF               	movwf	indf2,c
 43572                           
 43573                           ; BSR set to: 5
 43574                           ;../canpan3Inputs.c: 216:                                 saveSwitchState(buttonNo, 1);
 43575   012084  0E01               	movlw	1
 43576   012086  6E05               	movwf	saveSwitchState@onOff^(0+1280),c
 43577   012088  503C               	movf	inputScan@buttonNo^(0+1280),w,c
 43578   01208A  EC39  F0B3         	call	_saveSwitchState
 43579                           
 43580                           ;../canpan3Inputs.c: 217:                                 break;
 43581   01208E  D025               	goto	l11583
 43582   012090                     l11571:
 43583                           
 43584                           ; BSR set to: 5
 43585                           ;../canpan3Inputs.c: 219:                                 if (! onOff) {
 43586   012090  503B               	movf	inputScan@onOff^(0+1280),w,c
 43587   012092  B4D8               	btfsc	status,2,c
 43588   012094  D02B               	goto	l11587
 43589                           
 43590                           ; BSR set to: 5
 43591                           ;../canpan3Inputs.c: 222:                                 onOff = 0;
 43592                           
 43593                           ;../canpan3Inputs.c: 221:                                 }
 43594   012096  6A3B               	clrf	inputScan@onOff^(0+1280),c
 43595                           
 43596                           ; BSR set to: 5
 43597                           ;../canpan3Inputs.c: 223:                                 outputState[buttonNo&0xFE] = 0
      +                          ;
 43598   012098  503C               	movf	inputScan@buttonNo^(0+1280),w,c
 43599   01209A  0BFE               	andlw	254
 43600   01209C  6E31               	movwf	??_inputScan^(0+1280),c
 43601   01209E  6A32               	clrf	(??_inputScan+1)^(0+1280),c
 43602   0120A0  0E41               	movlw	low _outputState
 43603   0120A2  2431               	addwf	??_inputScan^(0+1280),w,c
 43604   0120A4  6ED9               	movwf	fsr2l,c
 43605   0120A6  0E06               	movlw	high _outputState
 43606   0120A8  2032               	addwfc	(??_inputScan+1)^(0+1280),w,c
 43607   0120AA  6EDA               	movwf	fsr2h,c
 43608   0120AC  6ADF               	clrf	indf2,c
 43609                           
 43610                           ; BSR set to: 5
 43611                           ;../canpan3Inputs.c: 224:                                 saveSwitchState(buttonNo, 0);
 43612   0120AE  0E00               	movlw	0
 43613   0120B0  6E05               	movwf	saveSwitchState@onOff^(0+1280),c
 43614   0120B2  503C               	movf	inputScan@buttonNo^(0+1280),w,c
 43615   0120B4  EC39  F0B3         	call	_saveSwitchState
 43616                           
 43617                           ;../canpan3Inputs.c: 225:                                 break;
 43618   0120B8  D010               	goto	l11583
 43619   0120BA                     l11581:
 43620                           
 43621                           ; BSR set to: 5
 43622   0120BA  5038               	movf	inputScan@switchMode^(0+1280),w,c
 43623                           
 43624                           ; Switch size 1, requested type "simple"
 43625                           ; Number of cases is 5, Range of values is 1 to 5
 43626                           ; switch strategies available:
 43627                           ; Name         Instructions Cycles
 43628                           ; simple_byte           16     9 (average)
 43629                           ;	Chosen strategy is simple_byte
 43630   0120BC  0A01               	xorlw	1	; case 1
 43631   0120BE  B4D8               	btfsc	status,2,c
 43632   0120C0  D795               	goto	l362
 43633   0120C2  0A03               	xorlw	3	; case 2
 43634   0120C4  B4D8               	btfsc	status,2,c
 43635   0120C6  D7A4               	goto	l365
 43636   0120C8  0A01               	xorlw	1	; case 3
 43637   0120CA  B4D8               	btfsc	status,2,c
 43638   0120CC  D7AC               	goto	l11555
 43639   0120CE  0A07               	xorlw	7	; case 4
 43640   0120D0  B4D8               	btfsc	status,2,c
 43641   0120D2  D7CD               	goto	l11563
 43642   0120D4  0A01               	xorlw	1	; case 5
 43643   0120D6  B4D8               	btfsc	status,2,c
 43644   0120D8  D7DB               	goto	l11571
 43645   0120DA                     l11583:
 43646                           
 43647                           ;../canpan3Inputs.c: 228:                         if (canpanScanReady) {
 43648   0120DA  0105               	movlb	5	; () banked
 43649   0120DC  51A2               	movf	_canpanScanReady& (0+255),w,b
 43650   0120DE  B4D8               	btfsc	status,2,c
 43651   0120E0  D005               	goto	l11587
 43652                           
 43653                           ; BSR set to: 5
 43654                           ;../canpan3Inputs.c: 230:                             canpanSendProducedEvent(tableIndex
      +                          , onOff);
 43655   0120E2  C53B  F52A         	movff	inputScan@onOff,canpanSendProducedEvent@onOff
 43656   0120E6  5037               	movf	inputScan@tableIndex^(0+1280),w,c
 43657   0120E8  EC76  F0AA         	call	_canpanSendProducedEvent
 43658   0120EC                     l11587:
 43659   0120EC  2A39               	incf	inputScan@i^(0+1280),f,c
 43660   0120EE  0E03               	movlw	3
 43661   0120F0  6439               	cpfsgt	inputScan@i^(0+1280),c
 43662   0120F2  D6FC               	goto	l11489
 43663                           
 43664                           ;../canpan3Inputs.c: 238:     buttonState[column] = row;
 43665   0120F4  0E7E               	movlw	low _buttonState
 43666   0120F6  0105               	movlb	5	; () banked
 43667   0120F8  259E               	addwf	_column& (0+255),w,b
 43668   0120FA  6ED9               	movwf	fsr2l,c
 43669   0120FC  6ADA               	clrf	fsr2h,c
 43670   0120FE  0E06               	movlw	high _buttonState
 43671   012100  22DA               	addwfc	fsr2h,f,c
 43672   012102  C536  F4DF         	movff	inputScan@row,indf2
 43673                           
 43674                           ; BSR set to: 5
 43675                           ;../canpan3Inputs.c: 241:     column++;
 43676   012106  2B9E               	incf	_column& (0+255),f,b
 43677                           
 43678                           ; BSR set to: 5
 43679                           ;../canpan3Inputs.c: 242:     if (column >= 8) {
 43680   012108  0E07               	movlw	7
 43681   01210A  659E               	cpfsgt	_column& (0+255),b
 43682   01210C  D003               	goto	l11601
 43683                           
 43684                           ; BSR set to: 5
 43685                           ;../canpan3Inputs.c: 244:         canpanScanReady = 1;
 43686   01210E  0E01               	movlw	1
 43687   012110  6FA2               	movwf	_canpanScanReady& (0+255),b
 43688                           
 43689                           ; BSR set to: 5
 43690                           ;../canpan3Inputs.c: 245:         column=0;
 43691   012112  6B9E               	clrf	_column& (0+255),b
 43692   012114                     l11601:
 43693                           
 43694                           ; BSR set to: 5
 43695                           ;../canpan3Inputs.c: 247:     driveColumn();
 43696   012114  EC9B  F0AD         	call	_driveColumn	;wreg free
 43697   012118  0012               	return		;funcret
 43698   01211A                     __end_of_inputScan:
 43699                           	callstack 0
 43700                           
 43701 ;; *************** function _sendMessage5 *****************
 43702 ;; Defined at:
 43703 ;;		line 1193 in file "../../VLCBlib_PIC/vlcb.c"
 43704 ;; Parameters:    Size  Location     Type
 43705 ;;  opc             1    wreg     enum E22928
 43706 ;;  data1           1   36[COMRAM] unsigned char 
 43707 ;;  data2           1   37[COMRAM] unsigned char 
 43708 ;;  data3           1   38[COMRAM] unsigned char 
 43709 ;;  data4           1   39[COMRAM] unsigned char 
 43710 ;;  data5           1   40[COMRAM] unsigned char 
 43711 ;; Auto vars:     Size  Location     Type
 43712 ;;  opc             1   41[COMRAM] enum E22928
 43713 ;; Return value:  Size  Location     Type
 43714 ;;                  1    wreg      void 
 43715 ;; Registers used:
 43716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 43717 ;; Tracked objects:
 43718 ;;		On entry : 0/0
 43719 ;;		On exit  : 0/0
 43720 ;;		Unchanged: 0/0
 43721 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43722 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43725 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43726 ;;Total ram usage:        6 bytes
 43727 ;; Hardware stack levels used: 1
 43728 ;; Hardware stack levels required when called: 5
 43729 ;; This function calls:
 43730 ;;		_sendMessage
 43731 ;; This function is called by:
 43732 ;;		_inputScan
 43733 ;;		_canProcessMessage
 43734 ;;		_teachProcessMessage
 43735 ;;		_teachCheckLen
 43736 ;;		_doNenrd
 43737 ;;		_doNnclr
 43738 ;;		_doEvlrn
 43739 ;;		_doReval
 43740 ;;		_doEvuln
 43741 ;;		_doReqev
 43742 ;;		_reqevCallback
 43743 ;;		_mnsProcessMessage
 43744 ;;		_mnsPoll
 43745 ;;		_mnsTRserviceDiscoveryCallback
 43746 ;;		_nvProcessMessage
 43747 ;;		_checkLen
 43748 ;; This function uses a non-reentrant model
 43749 ;;
 43750                           
 43751                           	psect	text106
 43752   01639A                     __ptext106:
 43753                           	callstack 0
 43754   01639A                     _sendMessage5:
 43755                           	callstack 118
 43756                           
 43757                           ;incstack = 0
 43758                           ;sendMessage5@opc stored from wreg
 43759   01639A  6E2A               	movwf	sendMessage5@opc^(0+1280),c
 43760                           
 43761                           ;../../VLCBlib_PIC/vlcb.c: 1194:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 43762   01639C  0E06               	movlw	6
 43763   01639E  6E1C               	movwf	sendMessage@len^(0+1280),c
 43764   0163A0  C525  F51D         	movff	sendMessage5@data1,sendMessage@data1
 43765   0163A4  C526  F51E         	movff	sendMessage5@data2,sendMessage@data2
 43766   0163A8  C527  F51F         	movff	sendMessage5@data3,sendMessage@data3
 43767   0163AC  C528  F520         	movff	sendMessage5@data4,sendMessage@data4
 43768   0163B0  C529  F521         	movff	sendMessage5@data5,sendMessage@data5
 43769   0163B4  0E00               	movlw	0
 43770   0163B6  6E22               	movwf	sendMessage@data6^(0+1280),c
 43771   0163B8  0E00               	movlw	0
 43772   0163BA  6E23               	movwf	sendMessage@data7^(0+1280),c
 43773   0163BC  502A               	movf	sendMessage5@opc^(0+1280),w,c
 43774   0163BE  ECBA  F0A6         	call	_sendMessage
 43775   0163C2  0012               	return		;funcret
 43776   0163C4                     __end_of_sendMessage5:
 43777                           	callstack 0
 43778                           
 43779 ;; *************** function _saveSwitchState *****************
 43780 ;; Defined at:
 43781 ;;		line 256 in file "../canpan3Inputs.c"
 43782 ;; Parameters:    Size  Location     Type
 43783 ;;  buttonNo        1    wreg     unsigned char 
 43784 ;;  onOff           1    4[COMRAM] unsigned char 
 43785 ;; Auto vars:     Size  Location     Type
 43786 ;;  buttonNo        1    5[COMRAM] unsigned char 
 43787 ;; Return value:  Size  Location     Type
 43788 ;;                  1    wreg      void 
 43789 ;; Registers used:
 43790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43791 ;; Tracked objects:
 43792 ;;		On entry : 0/0
 43793 ;;		On exit  : 0/0
 43794 ;;		Unchanged: 0/0
 43795 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43796 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43797 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43799 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43800 ;;Total ram usage:        2 bytes
 43801 ;; Hardware stack levels used: 1
 43802 ;; Hardware stack levels required when called: 2
 43803 ;; This function calls:
 43804 ;;		_getNV
 43805 ;;		_writeEEvalue
 43806 ;; This function is called by:
 43807 ;;		_inputScan
 43808 ;; This function uses a non-reentrant model
 43809 ;;
 43810                           
 43811                           	psect	text107
 43812   016672                     __ptext107:
 43813                           	callstack 0
 43814   016672                     _saveSwitchState:
 43815                           	callstack 122
 43816                           
 43817                           ;incstack = 0
 43818                           ;saveSwitchState@buttonNo stored from wreg
 43819   016672  6E06               	movwf	saveSwitchState@buttonNo^(0+1280),c
 43820                           
 43821                           ;../canpan3Inputs.c: 257:     if ((getNV(1) & 0x01) == 0) {
 43822   016674  0E01               	movlw	1
 43823   016676  ECE0  F0AF         	call	_getNV
 43824   01667A  B001               	btfsc	?_getNV^(0+1280),0,c
 43825   01667C  0012               	return	
 43826                           
 43827                           ;../canpan3Inputs.c: 258:         writeEEvalue(buttonNo, onOff);
 43828   01667E  C505  F501         	movff	saveSwitchState@onOff,writeEEvalue@value
 43829   016682  5006               	movf	saveSwitchState@buttonNo^(0+1280),w,c
 43830   016684  EC36  F0B0         	call	_writeEEvalue
 43831   016688  0012               	return		;funcret
 43832   01668A                     __end_of_saveSwitchState:
 43833                           	callstack 0
 43834                           
 43835 ;; *************** function _writeEEvalue *****************
 43836 ;; Defined at:
 43837 ;;		line 74 in file "../EEPROMbuffer.c"
 43838 ;; Parameters:    Size  Location     Type
 43839 ;;  address         1    wreg     unsigned char 
 43840 ;;  value           1    0[COMRAM] unsigned char 
 43841 ;; Auto vars:     Size  Location     Type
 43842 ;;  address         1    2[COMRAM] unsigned char 
 43843 ;; Return value:  Size  Location     Type
 43844 ;;                  1    wreg      void 
 43845 ;; Registers used:
 43846 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43847 ;; Tracked objects:
 43848 ;;		On entry : 0/0
 43849 ;;		On exit  : 0/0
 43850 ;;		Unchanged: 0/0
 43851 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43852 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43853 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43854 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43855 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43856 ;;Total ram usage:        3 bytes
 43857 ;; Hardware stack levels used: 1
 43858 ;; Hardware stack levels required when called: 1
 43859 ;; This function calls:
 43860 ;;		Nothing
 43861 ;; This function is called by:
 43862 ;;		_saveSwitchState
 43863 ;;		_setLedState
 43864 ;; This function uses a non-reentrant model
 43865 ;;
 43866                           
 43867                           	psect	text108
 43868   01606C                     __ptext108:
 43869                           	callstack 0
 43870   01606C                     _writeEEvalue:
 43871                           	callstack 121
 43872                           
 43873                           ;incstack = 0
 43874                           ;writeEEvalue@address stored from wreg
 43875   01606C  6E03               	movwf	writeEEvalue@address^(0+1280),c
 43876                           
 43877                           ;../EEPROMbuffer.c: 75:     if (eeValue[address] != value) {
 43878   01606E  0E44               	movlw	low _eeValue
 43879   016070  2403               	addwf	writeEEvalue@address^(0+1280),w,c
 43880   016072  6ED9               	movwf	fsr2l,c
 43881   016074  6ADA               	clrf	fsr2h,c
 43882   016076  0E07               	movlw	high _eeValue
 43883   016078  22DA               	addwfc	fsr2h,f,c
 43884   01607A  5001               	movf	writeEEvalue@value^(0+1280),w,c
 43885   01607C  18DE               	xorwf	postinc2,w,c
 43886   01607E  B4D8               	btfsc	status,2,c
 43887   016080  0012               	return	
 43888                           
 43889                           ;../EEPROMbuffer.c: 76:         eeValue[address] = value;
 43890   016082  0E44               	movlw	low _eeValue
 43891   016084  2403               	addwf	writeEEvalue@address^(0+1280),w,c
 43892   016086  6ED9               	movwf	fsr2l,c
 43893   016088  6ADA               	clrf	fsr2h,c
 43894   01608A  0E07               	movlw	high _eeValue
 43895   01608C  22DA               	addwfc	fsr2h,f,c
 43896   01608E  C501  F4DF         	movff	writeEEvalue@value,indf2
 43897                           
 43898                           ;../EEPROMbuffer.c: 77:         writeNeeded[address] = 1;
 43899   016092  0E84               	movlw	low _writeNeeded
 43900   016094  2403               	addwf	writeEEvalue@address^(0+1280),w,c
 43901   016096  6ED9               	movwf	fsr2l,c
 43902   016098  6ADA               	clrf	fsr2h,c
 43903   01609A  0E07               	movlw	high _writeNeeded
 43904   01609C  22DA               	addwfc	fsr2h,f,c
 43905   01609E  0E01               	movlw	1
 43906   0160A0  6EDF               	movwf	indf2,c
 43907   0160A2  0012               	return		;funcret
 43908   0160A4                     __end_of_writeEEvalue:
 43909                           	callstack 0
 43910                           
 43911 ;; *************** function _getNV *****************
 43912 ;; Defined at:
 43913 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 43914 ;; Parameters:    Size  Location     Type
 43915 ;;  index           1    wreg     unsigned char 
 43916 ;; Auto vars:     Size  Location     Type
 43917 ;;  index           1    3[COMRAM] unsigned char 
 43918 ;; Return value:  Size  Location     Type
 43919 ;;                  2    0[COMRAM] short 
 43920 ;; Registers used:
 43921 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43922 ;; Tracked objects:
 43923 ;;		On entry : 0/0
 43924 ;;		On exit  : 0/0
 43925 ;;		Unchanged: 0/0
 43926 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 43927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43929 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43930 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 43931 ;;Total ram usage:        4 bytes
 43932 ;; Hardware stack levels used: 1
 43933 ;; Hardware stack levels required when called: 1
 43934 ;; This function calls:
 43935 ;;		Nothing
 43936 ;; This function is called by:
 43937 ;;		_setup
 43938 ;;		_loop
 43939 ;;		_initInputs
 43940 ;;		_inputScan
 43941 ;;		_saveSwitchState
 43942 ;;		_pollOutputs
 43943 ;;		_initLeds
 43944 ;;		_nvProcessMessage
 43945 ;;		_nvTRnvrdCallback
 43946 ;; This function uses a non-reentrant model
 43947 ;;
 43948                           
 43949                           	psect	text109
 43950   015FC0                     __ptext109:
 43951                           	callstack 0
 43952   015FC0                     _getNV:
 43953                           	callstack 123
 43954                           
 43955                           ;incstack = 0
 43956                           ;getNV@index stored from wreg
 43957   015FC0  6E04               	movwf	getNV@index^(0+1280),c
 43958                           
 43959                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return 67;
 43960   015FC2  5004               	movf	getNV@index^(0+1280),w,c
 43961   015FC4  A4D8               	btfss	status,2,c
 43962   015FC6  D005               	goto	l9203
 43963   015FC8  0E00               	movlw	0
 43964   015FCA  6E02               	movwf	(?_getNV+1)^(0+1280),c
 43965   015FCC  0E43               	movlw	67
 43966   015FCE  6E01               	movwf	?_getNV^(0+1280),c
 43967   015FD0  0012               	return	
 43968   015FD2                     l9203:
 43969                           
 43970                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > 67) return -CMDERR_INV_NV_IDX;
 43971   015FD2  0E43               	movlw	67
 43972   015FD4  6404               	cpfsgt	getNV@index^(0+1280),c
 43973   015FD6  D005               	goto	l9209
 43974   015FD8  0EFF               	movlw	255
 43975   015FDA  6E02               	movwf	(?_getNV+1)^(0+1280),c
 43976   015FDC  0EF6               	movlw	246
 43977   015FDE  6E01               	movwf	?_getNV^(0+1280),c
 43978   015FE0  0012               	return	
 43979   015FE2                     l9209:
 43980                           
 43981                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 43982   015FE2  0E00               	movlw	low _nvCache
 43983   015FE4  2404               	addwf	getNV@index^(0+1280),w,c
 43984   015FE6  6ED9               	movwf	fsr2l,c
 43985   015FE8  6ADA               	clrf	fsr2h,c
 43986   015FEA  0E07               	movlw	high _nvCache
 43987   015FEC  22DA               	addwfc	fsr2h,f,c
 43988   015FEE  50DF               	movf	indf2,w,c
 43989   015FF0  6E03               	movwf	??_getNV^(0+1280),c
 43990   015FF2  5003               	movf	??_getNV^(0+1280),w,c
 43991   015FF4  6E01               	movwf	?_getNV^(0+1280),c
 43992   015FF6  6A02               	clrf	(?_getNV+1)^(0+1280),c
 43993   015FF8  0012               	return		;funcret
 43994   015FFA                     __end_of_getNV:
 43995                           	callstack 0
 43996                           
 43997 ;; *************** function _getEVs *****************
 43998 ;; Defined at:
 43999 ;;		line 895 in file "../../VLCBlib_PIC/event_teach_simple.c"
 44000 ;; Parameters:    Size  Location     Type
 44001 ;;  tableIndex      1    wreg     unsigned char 
 44002 ;; Auto vars:     Size  Location     Type
 44003 ;;  tableIndex      1   21[COMRAM] unsigned char 
 44004 ;;  evIdx           1   22[COMRAM] unsigned char 
 44005 ;; Return value:  Size  Location     Type
 44006 ;;                  1    wreg      unsigned char 
 44007 ;; Registers used:
 44008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44009 ;; Tracked objects:
 44010 ;;		On entry : 0/0
 44011 ;;		On exit  : 0/0
 44012 ;;		Unchanged: 0/0
 44013 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44015 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44016 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44017 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44018 ;;Total ram usage:       11 bytes
 44019 ;; Hardware stack levels used: 1
 44020 ;; Hardware stack levels required when called: 3
 44021 ;; This function calls:
 44022 ;;		_readNVM
 44023 ;; This function is called by:
 44024 ;;		_APP_addEvent
 44025 ;;		_APP_processConsumedEvent
 44026 ;;		_APP_GetEventIndexState
 44027 ;;		_inputScan
 44028 ;;		_canpanSetAllSwitchOff
 44029 ;; This function uses a non-reentrant model
 44030 ;;
 44031                           
 44032                           	psect	text110
 44033   0153B0                     __ptext110:
 44034                           	callstack 0
 44035   0153B0                     _getEVs:
 44036                           	callstack 119
 44037                           
 44038                           ;incstack = 0
 44039                           ;getEVs@tableIndex stored from wreg
 44040   0153B0  6E16               	movwf	getEVs@tableIndex^(0+1280),c
 44041                           
 44042                           ;../../VLCBlib_PIC/event_teach_simple.c: 897:     uint8_t evIdx;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 898:     if (tableIndex >= 254) {
 44043   0153B2  0EFD               	movlw	253
 44044   0153B4  6416               	cpfsgt	getEVs@tableIndex^(0+1280),c
 44045   0153B6  D002               	goto	l1404
 44046                           
 44047                           ;../../VLCBlib_PIC/event_teach_simple.c: 899:         return CMDERR_INV_EN_IDX;
 44048   0153B8  0E08               	movlw	8
 44049   0153BA  0012               	return	
 44050   0153BC                     l1404:
 44051                           
 44052                           ;../../VLCBlib_PIC/event_teach_simple.c: 902:     for (evIdx=0; evIdx < 13; evIdx++) {
 44053   0153BC  6A17               	clrf	getEVs@evIdx^(0+1280),c
 44054   0153BE                     l8855:
 44055                           
 44056                           ;../../VLCBlib_PIC/event_teach_simple.c: 903:         evs[evIdx] = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+5 +evIdx);
 44057   0153BE  5017               	movf	getEVs@evIdx^(0+1280),w,c
 44058   0153C0  6E0D               	movwf	??_getEVs^(0+1280),c
 44059   0153C2  6A0E               	clrf	(??_getEVs+1)^(0+1280),c
 44060   0153C4  6A0F               	clrf	(??_getEVs+2)^(0+1280),c
 44061   0153C6  5016               	movf	getEVs@tableIndex^(0+1280),w,c
 44062   0153C8  0D12               	mullw	18
 44063   0153CA  C4F3 F510          	movff	prodl,??_getEVs+3
 44064   0153CE  C4F4 F511          	movff	prodh,??_getEVs+4
 44065   0153D2  6A12               	clrf	(??_getEVs+5)^(0+1280),c
 44066   0153D4  500D               	movf	??_getEVs^(0+1280),w,c
 44067   0153D6  2410               	addwf	(??_getEVs+3)^(0+1280),w,c
 44068   0153D8  6E13               	movwf	(??_getEVs+6)^(0+1280),c
 44069   0153DA  500E               	movf	(??_getEVs+1)^(0+1280),w,c
 44070   0153DC  2011               	addwfc	(??_getEVs+4)^(0+1280),w,c
 44071   0153DE  6E14               	movwf	(??_getEVs+7)^(0+1280),c
 44072   0153E0  500F               	movf	(??_getEVs+2)^(0+1280),w,c
 44073   0153E2  2012               	addwfc	(??_getEVs+5)^(0+1280),w,c
 44074   0153E4  6E15               	movwf	(??_getEVs+8)^(0+1280),c
 44075   0153E6  0E05               	movlw	5
 44076   0153E8  2413               	addwf	(??_getEVs+6)^(0+1280),w,c
 44077   0153EA  6E07               	movwf	readNVM@index^(0+1280),c
 44078   0153EC  0EE8               	movlw	232
 44079   0153EE  2014               	addwfc	(??_getEVs+7)^(0+1280),w,c
 44080   0153F0  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 44081   0153F2  0E01               	movlw	1
 44082   0153F4  2015               	addwfc	(??_getEVs+8)^(0+1280),w,c
 44083   0153F6  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 44084   0153F8  0E01               	movlw	1
 44085   0153FA  EC6C  F0AB         	call	_readNVM
 44086   0153FE  0E71               	movlw	low _evs
 44087   015400  2417               	addwf	getEVs@evIdx^(0+1280),w,c
 44088   015402  6ED9               	movwf	fsr2l,c
 44089   015404  6ADA               	clrf	fsr2h,c
 44090   015406  0E06               	movlw	high _evs
 44091   015408  22DA               	addwfc	fsr2h,f,c
 44092   01540A  C507  F4DF         	movff	?_readNVM,indf2
 44093                           
 44094                           ;../../VLCBlib_PIC/event_teach_simple.c: 904:     }
 44095   01540E  2A17               	incf	getEVs@evIdx^(0+1280),f,c
 44096   015410  0E0C               	movlw	12
 44097   015412  6417               	cpfsgt	getEVs@evIdx^(0+1280),c
 44098   015414  D7D4               	goto	l8855
 44099                           
 44100                           ;../../VLCBlib_PIC/event_teach_simple.c: 905:     return 0;
 44101   015416  0E00               	movlw	0
 44102   015418  0012               	return		;funcret
 44103   01541A                     __end_of_getEVs:
 44104                           	callstack 0
 44105                           
 44106 ;; *************** function _findEventForSwitch *****************
 44107 ;; Defined at:
 44108 ;;		line 320 in file "../canpan3Inputs.c"
 44109 ;; Parameters:    Size  Location     Type
 44110 ;;  switchNo        1    wreg     unsigned char 
 44111 ;; Auto vars:     Size  Location     Type
 44112 ;;  switchNo        1    0[COMRAM] unsigned char 
 44113 ;; Return value:  Size  Location     Type
 44114 ;;                  1    wreg      unsigned char 
 44115 ;; Registers used:
 44116 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44117 ;; Tracked objects:
 44118 ;;		On entry : 0/0
 44119 ;;		On exit  : 0/0
 44120 ;;		Unchanged: 0/0
 44121 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44123 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44125 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44126 ;;Total ram usage:        1 bytes
 44127 ;; Hardware stack levels used: 1
 44128 ;; Hardware stack levels required when called: 1
 44129 ;; This function calls:
 44130 ;;		Nothing
 44131 ;; This function is called by:
 44132 ;;		_inputScan
 44133 ;;		_canpanSetAllSwitchOff
 44134 ;; This function uses a non-reentrant model
 44135 ;;
 44136                           
 44137                           	psect	text111
 44138   01663A                     __ptext111:
 44139                           	callstack 0
 44140   01663A                     _findEventForSwitch:
 44141                           	callstack 123
 44142                           
 44143                           ;incstack = 0
 44144                           ;findEventForSwitch@switchNo stored from wreg
 44145   01663A  6E01               	movwf	findEventForSwitch@switchNo^(0+1280),c
 44146                           
 44147                           ;../canpan3Inputs.c: 321:     if (switchNo < ((8*4)+1)) {
 44148   01663C  0E21               	movlw	33
 44149   01663E  6001               	cpfslt	findEventForSwitch@switchNo^(0+1280),c
 44150   016640  D008               	goto	l9933
 44151                           
 44152                           ;../canpan3Inputs.c: 322:         return switch2Event[switchNo];
 44153   016642  0E00               	movlw	low _switch2Event
 44154   016644  2401               	addwf	findEventForSwitch@switchNo^(0+1280),w,c
 44155   016646  6ED9               	movwf	fsr2l,c
 44156   016648  6ADA               	clrf	fsr2h,c
 44157   01664A  0E06               	movlw	high _switch2Event
 44158   01664C  22DA               	addwfc	fsr2h,f,c
 44159   01664E  50DF               	movf	indf2,w,c
 44160   016650  0012               	return	
 44161   016652                     l9933:
 44162                           
 44163                           ;../canpan3Inputs.c: 324:     return 0xff;
 44164   016652  0EFF               	movlw	255
 44165   016654  0012               	return		;funcret
 44166   016656                     __end_of_findEventForSwitch:
 44167                           	callstack 0
 44168                           
 44169 ;; *************** function _driveColumn *****************
 44170 ;; Defined at:
 44171 ;;		line 308 in file "../canpan3Inputs.c"
 44172 ;; Parameters:    Size  Location     Type
 44173 ;;		None
 44174 ;; Auto vars:     Size  Location     Type
 44175 ;;		None
 44176 ;; Return value:  Size  Location     Type
 44177 ;;                  1    wreg      void 
 44178 ;; Registers used:
 44179 ;;		wreg, status,2, status,0
 44180 ;; Tracked objects:
 44181 ;;		On entry : 0/0
 44182 ;;		On exit  : 0/0
 44183 ;;		Unchanged: 0/0
 44184 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44187 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44188 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44189 ;;Total ram usage:        1 bytes
 44190 ;; Hardware stack levels used: 1
 44191 ;; Hardware stack levels required when called: 1
 44192 ;; This function calls:
 44193 ;;		Nothing
 44194 ;; This function is called by:
 44195 ;;		_initInputs
 44196 ;;		_inputScan
 44197 ;; This function uses a non-reentrant model
 44198 ;;
 44199                           
 44200                           	psect	text112
 44201   015B36                     __ptext112:
 44202                           	callstack 0
 44203   015B36                     _driveColumn:
 44204                           	callstack 123
 44205                           
 44206                           ;../canpan3Inputs.c: 309:     LATAbits.LATA0 = (column & 0x01)?1:0;
 44207                           
 44208                           ;incstack = 0
 44209   015B36  0105               	movlb	5	; () banked
 44210   015B38  A19E               	btfss	_column& (0+255),0,b
 44211   015B3A  D003               	goto	u7740
 44212   015B3C  6A01               	clrf	??_driveColumn^(0+1280),c
 44213   015B3E  2A01               	incf	??_driveColumn^(0+1280),f,c
 44214   015B40  D001               	goto	u7758
 44215   015B42                     u7740:
 44216   015B42  6A01               	clrf	??_driveColumn^(0+1280),c
 44217   015B44                     u7758:
 44218   015B44  50BE               	movf	190,w,c	;volatile
 44219   015B46  1801               	xorwf	??_driveColumn^(0+1280),w,c
 44220   015B48  0BFE               	andlw	-2
 44221   015B4A  1801               	xorwf	??_driveColumn^(0+1280),w,c
 44222   015B4C  6EBE               	movwf	190,c	;volatile
 44223                           
 44224                           ;../canpan3Inputs.c: 310:     LATAbits.LATA1 = (column & 0x02)?1:0;
 44225   015B4E  0105               	movlb	5	; () banked
 44226   015B50  A39E               	btfss	_column& (0+255),1,b
 44227   015B52  D003               	goto	u7760
 44228   015B54  6A01               	clrf	??_driveColumn^(0+1280),c
 44229   015B56  2A01               	incf	??_driveColumn^(0+1280),f,c
 44230   015B58  D001               	goto	u7778
 44231   015B5A                     u7760:
 44232   015B5A  6A01               	clrf	??_driveColumn^(0+1280),c
 44233   015B5C                     u7778:
 44234   015B5C  4601               	rlncf	??_driveColumn^(0+1280),f,c
 44235   015B5E  50BE               	movf	190,w,c	;volatile
 44236   015B60  1801               	xorwf	??_driveColumn^(0+1280),w,c
 44237   015B62  0BFD               	andlw	-3
 44238   015B64  1801               	xorwf	??_driveColumn^(0+1280),w,c
 44239   015B66  6EBE               	movwf	190,c	;volatile
 44240                           
 44241                           ;../canpan3Inputs.c: 311:     LATAbits.LATA2 = (column & 0x04)?1:0;
 44242   015B68  0105               	movlb	5	; () banked
 44243   015B6A  A59E               	btfss	_column& (0+255),2,b
 44244   015B6C  D003               	goto	u7780
 44245   015B6E  6A01               	clrf	??_driveColumn^(0+1280),c
 44246   015B70  2A01               	incf	??_driveColumn^(0+1280),f,c
 44247   015B72  D001               	goto	u7798
 44248   015B74                     u7780:
 44249   015B74  6A01               	clrf	??_driveColumn^(0+1280),c
 44250   015B76                     u7798:
 44251   015B76  4601               	rlncf	??_driveColumn^(0+1280),f,c
 44252   015B78  4601               	rlncf	??_driveColumn^(0+1280),f,c
 44253   015B7A  50BE               	movf	190,w,c	;volatile
 44254   015B7C  1801               	xorwf	??_driveColumn^(0+1280),w,c
 44255   015B7E  0BFB               	andlw	-5
 44256   015B80  1801               	xorwf	??_driveColumn^(0+1280),w,c
 44257   015B82  6EBE               	movwf	190,c	;volatile
 44258   015B84  0012               	return		;funcret
 44259   015B86                     __end_of_driveColumn:
 44260                           	callstack 0
 44261                           
 44262 ;; *************** function _canpanSendProducedEvent *****************
 44263 ;; Defined at:
 44264 ;;		line 278 in file "../canpan3Inputs.c"
 44265 ;; Parameters:    Size  Location     Type
 44266 ;;  tableIndex      1    wreg     unsigned char 
 44267 ;;  onOff           1   41[COMRAM] unsigned char 
 44268 ;; Auto vars:     Size  Location     Type
 44269 ;;  tableIndex      1   42[COMRAM] unsigned char 
 44270 ;;  producedEven    2   46[COMRAM] struct Word
 44271 ;;  producedEven    2   44[COMRAM] struct Word
 44272 ;;  opc             1   43[COMRAM] unsigned char 
 44273 ;; Return value:  Size  Location     Type
 44274 ;;                  1    wreg      void 
 44275 ;; Registers used:
 44276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44277 ;; Tracked objects:
 44278 ;;		On entry : 0/0
 44279 ;;		On exit  : 0/0
 44280 ;;		Unchanged: 0/0
 44281 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44282 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44283 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44285 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44286 ;;Total ram usage:        7 bytes
 44287 ;; Hardware stack levels used: 1
 44288 ;; Hardware stack levels required when called: 6
 44289 ;; This function calls:
 44290 ;;		_getEN
 44291 ;;		_getNN
 44292 ;;		_incrementProducerCounter
 44293 ;;		_sendMessage4
 44294 ;; This function is called by:
 44295 ;;		_loop
 44296 ;;		_inputScan
 44297 ;;		_sodTRCallback
 44298 ;; This function uses a non-reentrant model
 44299 ;;
 44300                           
 44301                           	psect	text113
 44302   0154EC                     __ptext113:
 44303                           	callstack 0
 44304   0154EC                     _canpanSendProducedEvent:
 44305                           	callstack 117
 44306                           
 44307                           ;incstack = 0
 44308                           ;canpanSendProducedEvent@tableIndex stored from wreg
 44309   0154EC  6E2B               	movwf	canpanSendProducedEvent@tableIndex^(0+1280),c
 44310                           
 44311                           ;../canpan3Inputs.c: 279:     uint8_t opc;;../canpan3Inputs.c: 280:     Word producedEve
      +                          ntNN;;../canpan3Inputs.c: 281:     Word producedEventEN;;../canpan3Inputs.c: 283:     pr
      +                          oducedEventNN.word = getNN(tableIndex);
 44312   0154EE  502B               	movf	canpanSendProducedEvent@tableIndex^(0+1280),w,c
 44313   0154F0  ECD6  F0A1         	call	_getNN
 44314   0154F4  C50D  F52F         	movff	?_getNN,canpanSendProducedEvent@producedEventNN
 44315   0154F8  C50E  F530         	movff	?_getNN+1,canpanSendProducedEvent@producedEventNN+1
 44316                           
 44317                           ;../canpan3Inputs.c: 284:     producedEventEN.word = getEN(tableIndex);
 44318   0154FC  502B               	movf	canpanSendProducedEvent@tableIndex^(0+1280),w,c
 44319   0154FE  EC00  F0A9         	call	_getEN
 44320   015502  C50D  F52D         	movff	?_getEN,canpanSendProducedEvent@producedEventEN
 44321   015506  C50E  F52E         	movff	?_getEN+1,canpanSendProducedEvent@producedEventEN+1
 44322                           
 44323                           ;../canpan3Inputs.c: 285:     if (producedEventNN.word == 0) {
 44324   01550A  502F               	movf	canpanSendProducedEvent@producedEventNN^(0+1280),w,c
 44325   01550C  1030               	iorwf	(canpanSendProducedEvent@producedEventNN+1)^(0+1280),w,c
 44326   01550E  A4D8               	btfss	status,2,c
 44327   015510  D00C               	goto	l9225
 44328                           
 44329                           ;../canpan3Inputs.c: 287:         if (onOff) {
 44330   015512  502A               	movf	canpanSendProducedEvent@onOff^(0+1280),w,c
 44331   015514  B4D8               	btfsc	status,2,c
 44332   015516  D002               	goto	l9221
 44333                           
 44334                           ;../canpan3Inputs.c: 288:             opc = OPC_ASON;
 44335   015518  0E98               	movlw	152
 44336   01551A  D001               	goto	L9
 44337   01551C                     l9221:
 44338                           
 44339                           ;../canpan3Inputs.c: 290:             opc = OPC_ASOF;
 44340   01551C  0E99               	movlw	153
 44341   01551E                     L9:
 44342   01551E  6E2C               	movwf	canpanSendProducedEvent@opc^(0+1280),c
 44343                           
 44344                           ;../canpan3Inputs.c: 292:         producedEventNN.word = nn.word;
 44345   015520  C55E  F52F         	movff	_nn,canpanSendProducedEvent@producedEventNN
 44346   015524  C55F  F530         	movff	_nn+1,canpanSendProducedEvent@producedEventNN+1
 44347                           
 44348                           ;../canpan3Inputs.c: 293:     } else {
 44349   015528  D007               	goto	l9231
 44350   01552A                     l9225:
 44351                           
 44352                           ;../canpan3Inputs.c: 295:         if (onOff) {
 44353   01552A  502A               	movf	canpanSendProducedEvent@onOff^(0+1280),w,c
 44354   01552C  B4D8               	btfsc	status,2,c
 44355   01552E  D002               	goto	l9229
 44356                           
 44357                           ;../canpan3Inputs.c: 296:             opc = OPC_ACON;
 44358   015530  0E90               	movlw	144
 44359   015532  D001               	goto	L10
 44360   015534                     l9229:
 44361                           
 44362                           ;../canpan3Inputs.c: 298:             opc = OPC_ACOF;
 44363   015534  0E91               	movlw	145
 44364   015536                     L10:
 44365   015536  6E2C               	movwf	canpanSendProducedEvent@opc^(0+1280),c
 44366   015538                     l9231:
 44367                           
 44368                           ;../canpan3Inputs.c: 302:     sendMessage4(opc, producedEventNN.bytes.hi, producedEventN
      +                          N.bytes.lo,
 44369   015538  C530  F525         	movff	canpanSendProducedEvent@producedEventNN+1,sendMessage4@data1
 44370   01553C  C52F  F526         	movff	canpanSendProducedEvent@producedEventNN,sendMessage4@data2
 44371   015540  C52E  F527         	movff	canpanSendProducedEvent@producedEventEN+1,sendMessage4@data3
 44372   015544  C52D  F528         	movff	canpanSendProducedEvent@producedEventEN,sendMessage4@data4
 44373   015548  502C               	movf	canpanSendProducedEvent@opc^(0+1280),w,c
 44374   01554A  ECE2  F0B1         	call	_sendMessage4
 44375                           
 44376                           ;../canpan3Inputs.c: 305:     incrementProducerCounter();
 44377   01554E  ECCA  F0B3         	call	_incrementProducerCounter	;wreg free
 44378   015552  0012               	return		;funcret
 44379   015554                     __end_of_canpanSendProducedEvent:
 44380                           	callstack 0
 44381                           
 44382 ;; *************** function _sendMessage4 *****************
 44383 ;; Defined at:
 44384 ;;		line 1180 in file "../../VLCBlib_PIC/vlcb.c"
 44385 ;; Parameters:    Size  Location     Type
 44386 ;;  opc             1    wreg     enum E22928
 44387 ;;  data1           1   36[COMRAM] unsigned char 
 44388 ;;  data2           1   37[COMRAM] unsigned char 
 44389 ;;  data3           1   38[COMRAM] unsigned char 
 44390 ;;  data4           1   39[COMRAM] unsigned char 
 44391 ;; Auto vars:     Size  Location     Type
 44392 ;;  opc             1   40[COMRAM] enum E22928
 44393 ;; Return value:  Size  Location     Type
 44394 ;;                  1    wreg      void 
 44395 ;; Registers used:
 44396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44397 ;; Tracked objects:
 44398 ;;		On entry : 0/0
 44399 ;;		On exit  : 0/0
 44400 ;;		Unchanged: 0/0
 44401 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44402 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44403 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44405 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44406 ;;Total ram usage:        5 bytes
 44407 ;; Hardware stack levels used: 1
 44408 ;; Hardware stack levels required when called: 5
 44409 ;; This function calls:
 44410 ;;		_sendMessage
 44411 ;; This function is called by:
 44412 ;;		_canpanSendProducedEvent
 44413 ;;		_mnsProcessMessage
 44414 ;;		_mnsTRrqnpnCallback
 44415 ;;		_nvProcessMessage
 44416 ;;		_nvTRnvrdCallback
 44417 ;;		_producerProcessMessage
 44418 ;; This function uses a non-reentrant model
 44419 ;;
 44420                           
 44421                           	psect	text114
 44422   0163C4                     __ptext114:
 44423                           	callstack 0
 44424   0163C4                     _sendMessage4:
 44425                           	callstack 119
 44426                           
 44427                           ;incstack = 0
 44428                           ;sendMessage4@opc stored from wreg
 44429   0163C4  6E29               	movwf	sendMessage4@opc^(0+1280),c
 44430                           
 44431                           ;../../VLCBlib_PIC/vlcb.c: 1181:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 44432   0163C6  0E05               	movlw	5
 44433   0163C8  6E1C               	movwf	sendMessage@len^(0+1280),c
 44434   0163CA  C525  F51D         	movff	sendMessage4@data1,sendMessage@data1
 44435   0163CE  C526  F51E         	movff	sendMessage4@data2,sendMessage@data2
 44436   0163D2  C527  F51F         	movff	sendMessage4@data3,sendMessage@data3
 44437   0163D6  C528  F520         	movff	sendMessage4@data4,sendMessage@data4
 44438   0163DA  0E00               	movlw	0
 44439   0163DC  6E21               	movwf	sendMessage@data5^(0+1280),c
 44440   0163DE  0E00               	movlw	0
 44441   0163E0  6E22               	movwf	sendMessage@data6^(0+1280),c
 44442   0163E2  0E00               	movlw	0
 44443   0163E4  6E23               	movwf	sendMessage@data7^(0+1280),c
 44444   0163E6  5029               	movf	sendMessage4@opc^(0+1280),w,c
 44445   0163E8  ECBA  F0A6         	call	_sendMessage
 44446   0163EC  0012               	return		;funcret
 44447   0163EE                     __end_of_sendMessage4:
 44448                           	callstack 0
 44449                           
 44450 ;; *************** function _sendMessage *****************
 44451 ;; Defined at:
 44452 ;;		line 1238 in file "../../VLCBlib_PIC/vlcb.c"
 44453 ;; Parameters:    Size  Location     Type
 44454 ;;  opc             1    wreg     enum E22928
 44455 ;;  len             1   27[COMRAM] unsigned char 
 44456 ;;  data1           1   28[COMRAM] unsigned char 
 44457 ;;  data2           1   29[COMRAM] unsigned char 
 44458 ;;  data3           1   30[COMRAM] unsigned char 
 44459 ;;  data4           1   31[COMRAM] unsigned char 
 44460 ;;  data5           1   32[COMRAM] unsigned char 
 44461 ;;  data6           1   33[COMRAM] unsigned char 
 44462 ;;  data7           1   34[COMRAM] unsigned char 
 44463 ;; Auto vars:     Size  Location     Type
 44464 ;;  opc             1   35[COMRAM] enum E22928
 44465 ;; Return value:  Size  Location     Type
 44466 ;;                  1    wreg      void 
 44467 ;; Registers used:
 44468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44469 ;; Tracked objects:
 44470 ;;		On entry : 0/0
 44471 ;;		On exit  : 0/0
 44472 ;;		Unchanged: 0/0
 44473 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44474 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44477 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44478 ;;Total ram usage:        9 bytes
 44479 ;; Hardware stack levels used: 1
 44480 ;; Hardware stack levels required when called: 4
 44481 ;; This function calls:
 44482 ;;		_canSendMessage
 44483 ;; This function is called by:
 44484 ;;		_sendMessage2
 44485 ;;		_sendMessage3
 44486 ;;		_sendMessage4
 44487 ;;		_sendMessage5
 44488 ;;		_sendMessage6
 44489 ;;		_sendMessage7
 44490 ;;		_sendMessage0
 44491 ;;		_sendMessage1
 44492 ;; This function uses a non-reentrant model
 44493 ;;
 44494                           
 44495                           	psect	text115
 44496   014D74                     __ptext115:
 44497                           	callstack 0
 44498   014D74                     _sendMessage:
 44499                           	callstack 118
 44500                           
 44501                           ;incstack = 0
 44502                           ;sendMessage@opc stored from wreg
 44503   014D74  6E24               	movwf	sendMessage@opc^(0+1280),c
 44504                           
 44505                           ;../../VLCBlib_PIC/vlcb.c: 1239:     tmpMessage.opc = opc;
 44506   014D76  C524  F6CD         	movff	sendMessage@opc,_tmpMessage+1
 44507                           
 44508                           ;../../VLCBlib_PIC/vlcb.c: 1240:     tmpMessage.len = len;
 44509   014D7A  C51C  F6CC         	movff	sendMessage@len,_tmpMessage
 44510                           
 44511                           ;../../VLCBlib_PIC/vlcb.c: 1241:     tmpMessage.bytes[0] = data1;
 44512   014D7E  C51D  F6CE         	movff	sendMessage@data1,_tmpMessage+2
 44513                           
 44514                           ;../../VLCBlib_PIC/vlcb.c: 1242:     tmpMessage.bytes[1] = data2;
 44515   014D82  C51E  F6CF         	movff	sendMessage@data2,_tmpMessage+3
 44516                           
 44517                           ;../../VLCBlib_PIC/vlcb.c: 1243:     tmpMessage.bytes[2] = data3;
 44518   014D86  C51F  F6D0         	movff	sendMessage@data3,_tmpMessage+4
 44519                           
 44520                           ;../../VLCBlib_PIC/vlcb.c: 1244:     tmpMessage.bytes[3] = data4;
 44521   014D8A  C520  F6D1         	movff	sendMessage@data4,_tmpMessage+5
 44522                           
 44523                           ;../../VLCBlib_PIC/vlcb.c: 1245:     tmpMessage.bytes[4] = data5;
 44524   014D8E  C521  F6D2         	movff	sendMessage@data5,_tmpMessage+6
 44525                           
 44526                           ;../../VLCBlib_PIC/vlcb.c: 1246:     tmpMessage.bytes[5] = data6;
 44527   014D92  C522  F6D3         	movff	sendMessage@data6,_tmpMessage+7
 44528                           
 44529                           ;../../VLCBlib_PIC/vlcb.c: 1247:     tmpMessage.bytes[6] = data7;
 44530   014D96  C523  F6D4         	movff	sendMessage@data7,_tmpMessage+8
 44531                           
 44532                           ;../../VLCBlib_PIC/vlcb.c: 1248:     if (transport != ((void*)0)) {
 44533   014D9A  0105               	movlb	5	; () banked
 44534   014D9C  5180               	movf	_transport& (0+255),w,b
 44535   014D9E  1181               	iorwf	(_transport+1)& (0+255),w,b
 44536   014DA0  B4D8               	btfsc	status,2,c
 44537   014DA2  0012               	return	
 44538                           
 44539                           ; BSR set to: 5
 44540                           ;../../VLCBlib_PIC/vlcb.c: 1249:         if (transport->sendMessage != ((void*)0)) {
 44541   014DA4  C580  F4F6         	movff	_transport,tblptrl
 44542   014DA8  C581  F4F7         	movff	_transport+1,tblptrh
 44543   014DAC                     	if	0	;tblptru may be non-zero
 44544   014DAC                     	endif
 44545   014DAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 44546   014DAC  0E00               	movlw	low (__pmediumconst shr (0+16))
 44547   014DAE  6EF8               	movwf	tblptru,c
 44548   014DB0                     	endif
 44549   014DB0  0009               	tblrd		*+
 44550   014DB2  50F5               	movf	tablat,w,c
 44551   014DB4  0009               	tblrd		*+
 44552   014DB6  10F5               	iorwf	tablat,w,c
 44553   014DB8  0009               	tblrd		*+
 44554   014DBA  10F5               	iorwf	tablat,w,c
 44555   014DBC  B4D8               	btfsc	status,2,c
 44556   014DBE  0012               	return	
 44557                           
 44558                           ; BSR set to: 5
 44559                           ;../../VLCBlib_PIC/vlcb.c: 1250:             transport->sendMessage(&tmpMessage);
 44560   014DC0  0ECC               	movlw	low _tmpMessage
 44561   014DC2  6E0E               	movwf	canSendMessage@mp^(0+1280),c
 44562   014DC4  0E06               	movlw	high _tmpMessage
 44563   014DC6  6E0F               	movwf	(canSendMessage@mp+1)^(0+1280),c
 44564   014DC8  C580  F4F6         	movff	_transport,tblptrl
 44565   014DCC  C581  F4F7         	movff	_transport+1,tblptrh
 44566   014DD0                     	if	0	;tblptru may be non-zero
 44567   014DD0                     	endif
 44568   014DD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 44569   014DD0  0E00               	movlw	low (__pmediumconst shr (0+16))
 44570   014DD2  6EF8               	movwf	tblptru,c
 44571   014DD4                     	endif
 44572   014DD4  D801               	call	u6428
 44573   014DD6  0012               	return	
 44574   014DD8                     u6428:
 44575   014DD8  0005               	push	
 44576   014DDA  6EFA               	movwf	pclath,c
 44577   014DDC  0009               	tblrd		*+
 44578   014DDE  50F5               	movf	tablat,w,c
 44579   014DE0  6EFD               	movwf	tosl,c
 44580   014DE2  0009               	tblrd		*+
 44581   014DE4  50F5               	movf	tablat,w,c
 44582   014DE6  6EFE               	movwf	tosh,c
 44583   014DE8  0009               	tblrd		*+
 44584   014DEA  50F5               	movf	tablat,w,c
 44585   014DEC  6EFF               	movwf	tosu,c
 44586   014DEE  50FA               	movf	pclath,w,c
 44587   014DF0  0012               	return		;indir
 44588   014DF2                     __end_of_sendMessage:
 44589                           	callstack 0
 44590                           
 44591 ;; *************** function _canSendMessage *****************
 44592 ;; Defined at:
 44593 ;;		line 570 in file "../../VLCBlib_PIC/can18_can_2.c"
 44594 ;; Parameters:    Size  Location     Type
 44595 ;;  mp              2   13[COMRAM] PTR struct Message
 44596 ;;		 -> tmpMessage(9), 
 44597 ;; Auto vars:     Size  Location     Type
 44598 ;;  txFifoObj       2   25[COMRAM] PTR unsigned char 
 44599 ;;		 -> RAM(16383), 
 44600 ;;  m               2   23[COMRAM] PTR struct Message
 44601 ;;		 -> rxBuffers(72), NULL(0), 
 44602 ;;  temp            2   21[COMRAM] unsigned short 
 44603 ;;  i               1    0        unsigned char 
 44604 ;; Return value:  Size  Location     Type
 44605 ;;                  1    wreg      enum E23618
 44606 ;; Registers used:
 44607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44608 ;; Tracked objects:
 44609 ;;		On entry : 0/0
 44610 ;;		On exit  : 0/0
 44611 ;;		Unchanged: 0/0
 44612 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 44613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44614 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44615 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44616 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 44617 ;;Total ram usage:       14 bytes
 44618 ;; Hardware stack levels used: 1
 44619 ;; Hardware stack levels required when called: 3
 44620 ;; This function calls:
 44621 ;;		_getNextWriteMessage
 44622 ;;		_getNumRxBuffersInUse
 44623 ;;		_getNumTxBuffersInUse
 44624 ;;		_have
 44625 ;;		_isEvent
 44626 ;;		_startEnumeration
 44627 ;;		_updateModuleErrorStatus
 44628 ;; This function is called by:
 44629 ;;		_sendMessage
 44630 ;; This function uses a non-reentrant model
 44631 ;;
 44632                           
 44633                           	psect	text116
 44634   011120                     __ptext116:
 44635                           	callstack 0
 44636   011120                     _canSendMessage:
 44637                           	callstack 118
 44638                           
 44639                           ;../../VLCBlib_PIC/can18_can_2.c: 571:     uint8_t i;;../../VLCBlib_PIC/can18_can_2.c: 5
      +                          72:     uint8_t* txFifoObj;;../../VLCBlib_PIC/can18_can_2.c: 574:     uint16_t temp;;../
      +                          ../VLCBlib_PIC/can18_can_2.c: 577:     Message * m;;../../VLCBlib_PIC/can18_can_2.c: 581
      +                          :     if (isEvent((uint8_t)(mp->opc))) {
 44640                           
 44641                           ;incstack = 0
 44642   011120  EE20 F001          	lfsr	2,1
 44643   011124  500E               	movf	canSendMessage@mp^(0+1280),w,c
 44644   011126  26D9               	addwf	fsr2l,f,c
 44645   011128  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 44646   01112A  22DA               	addwfc	fsr2h,f,c
 44647   01112C  50DF               	movf	indf2,w,c
 44648   01112E  ECB1  F0B2         	call	_isEvent
 44649   011132  0900               	iorlw	0
 44650   011134  B4D8               	btfsc	status,2,c
 44651   011136  D0A5               	goto	l924
 44652                           
 44653                           ;../../VLCBlib_PIC/can18_can_2.c: 582:         if (have(SERVICE_ID_CONSUME_OWN_EVENTS)) 
      +                          {
 44654   011138  0E08               	movlw	8
 44655   01113A  ECC9  F0A8         	call	_have
 44656   01113E  0900               	iorlw	0
 44657   011140  B4D8               	btfsc	status,2,c
 44658   011142  D09F               	goto	l924
 44659                           
 44660                           ;../../VLCBlib_PIC/can18_can_2.c: 584:             m = getNextWriteMessage(&rxQueue);
 44661   011144  0EBD               	movlw	low _rxQueue
 44662   011146  6E01               	movwf	getNextWriteMessage@q^(0+1280),c
 44663   011148  0E05               	movlw	high _rxQueue
 44664   01114A  6E02               	movwf	(getNextWriteMessage@q+1)^(0+1280),c
 44665   01114C  ECBD  F09D         	call	_getNextWriteMessage	;wreg free
 44666   011150  C501  F518         	movff	?_getNextWriteMessage,canSendMessage@m
 44667   011154  C502  F519         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 44668                           
 44669                           ;../../VLCBlib_PIC/can18_can_2.c: 585:             if (m == ((void*)0)) {
 44670   011158  5018               	movf	canSendMessage@m^(0+1280),w,c
 44671   01115A  1019               	iorwf	(canSendMessage@m+1)^(0+1280),w,c
 44672   01115C  A4D8               	btfss	status,2,c
 44673   01115E  D006               	goto	l8501
 44674                           
 44675                           ;../../VLCBlib_PIC/can18_can_2.c: 587:                 canDiagnostics[0x08].asUint++;
 44676   011160  0106               	movlb	6	; () banked
 44677   011162  4BB6               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 44678   011164  2BB7               	incf	(_canDiagnostics+17)& (0+255),f,b
 44679                           
 44680                           ; BSR set to: 6
 44681                           ;../../VLCBlib_PIC/can18_can_2.c: 588:                 updateModuleErrorStatus();
 44682   011166  ECB6  F0B3         	call	_updateModuleErrorStatus	;wreg free
 44683                           
 44684                           ;../../VLCBlib_PIC/can18_can_2.c: 590:             } else {
 44685   01116A  D07A               	goto	l8519
 44686   01116C                     l8501:
 44687                           
 44688                           ;../../VLCBlib_PIC/can18_can_2.c: 592:                 m->opc = mp->opc;
 44689   01116C  EE20 F001          	lfsr	2,1
 44690   011170  500E               	movf	canSendMessage@mp^(0+1280),w,c
 44691   011172  26D9               	addwf	fsr2l,f,c
 44692   011174  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 44693   011176  22DA               	addwfc	fsr2h,f,c
 44694   011178  EE10 F001          	lfsr	1,1
 44695   01117C  5018               	movf	canSendMessage@m^(0+1280),w,c
 44696   01117E  26E1               	addwf	fsr1l,f,c
 44697   011180  5019               	movf	(canSendMessage@m+1)^(0+1280),w,c
 44698   011182  22E2               	addwfc	fsr1h,f,c
 44699   011184  C4DF F4E7          	movff	indf2,indf1
 44700                           
 44701                           ;../../VLCBlib_PIC/can18_can_2.c: 593:                 m->len = mp->len;
 44702   011188  C50E  F4D9         	movff	canSendMessage@mp,fsr2l
 44703   01118C  C50F  F4DA         	movff	canSendMessage@mp+1,fsr2h
 44704   011190  C518  F4E1         	movff	canSendMessage@m,fsr1l
 44705   011194  C519  F4E2         	movff	canSendMessage@m+1,fsr1h
 44706   011198  C4DF F4E7          	movff	indf2,indf1
 44707                           
 44708                           ;../../VLCBlib_PIC/can18_can_2.c: 594:                 m->bytes[0] = mp->bytes[0];
 44709   01119C  EE20 F002          	lfsr	2,2
 44710   0111A0  500E               	movf	canSendMessage@mp^(0+1280),w,c
 44711   0111A2  26D9               	addwf	fsr2l,f,c
 44712   0111A4  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 44713   0111A6  22DA               	addwfc	fsr2h,f,c
 44714   0111A8  EE10 F002          	lfsr	1,2
 44715   0111AC  5018               	movf	canSendMessage@m^(0+1280),w,c
 44716   0111AE  26E1               	addwf	fsr1l,f,c
 44717   0111B0  5019               	movf	(canSendMessage@m+1)^(0+1280),w,c
 44718   0111B2  22E2               	addwfc	fsr1h,f,c
 44719   0111B4  C4DF F4E7          	movff	indf2,indf1
 44720                           
 44721                           ;../../VLCBlib_PIC/can18_can_2.c: 595:                 m->bytes[1] = mp->bytes[1];
 44722   0111B8  EE20 F003          	lfsr	2,3
 44723   0111BC  500E               	movf	canSendMessage@mp^(0+1280),w,c
 44724   0111BE  26D9               	addwf	fsr2l,f,c
 44725   0111C0  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 44726   0111C2  22DA               	addwfc	fsr2h,f,c
 44727   0111C4  EE10 F003          	lfsr	1,3
 44728   0111C8  5018               	movf	canSendMessage@m^(0+1280),w,c
 44729   0111CA  26E1               	addwf	fsr1l,f,c
 44730   0111CC  5019               	movf	(canSendMessage@m+1)^(0+1280),w,c
 44731   0111CE  22E2               	addwfc	fsr1h,f,c
 44732   0111D0  C4DF F4E7          	movff	indf2,indf1
 44733                           
 44734                           ;../../VLCBlib_PIC/can18_can_2.c: 596:                 m->bytes[2] = mp->bytes[2];
 44735   0111D4  EE20 F004          	lfsr	2,4
 44736   0111D8  500E               	movf	canSendMessage@mp^(0+1280),w,c
 44737   0111DA  26D9               	addwf	fsr2l,f,c
 44738   0111DC  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 44739   0111DE  22DA               	addwfc	fsr2h,f,c
 44740   0111E0  EE10 F004          	lfsr	1,4
 44741   0111E4  5018               	movf	canSendMessage@m^(0+1280),w,c
 44742   0111E6  26E1               	addwf	fsr1l,f,c
 44743   0111E8  5019               	movf	(canSendMessage@m+1)^(0+1280),w,c
 44744   0111EA  22E2               	addwfc	fsr1h,f,c
 44745   0111EC  C4DF F4E7          	movff	indf2,indf1
 44746                           
 44747                           ;../../VLCBlib_PIC/can18_can_2.c: 597:                 m->bytes[3] = mp->bytes[3];
 44748   0111F0  EE20 F005          	lfsr	2,5
 44749   0111F4  500E               	movf	canSendMessage@mp^(0+1280),w,c
 44750   0111F6  26D9               	addwf	fsr2l,f,c
 44751   0111F8  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 44752   0111FA  22DA               	addwfc	fsr2h,f,c
 44753   0111FC  EE10 F005          	lfsr	1,5
 44754   011200  5018               	movf	canSendMessage@m^(0+1280),w,c
 44755   011202  26E1               	addwf	fsr1l,f,c
 44756   011204  5019               	movf	(canSendMessage@m+1)^(0+1280),w,c
 44757   011206  22E2               	addwfc	fsr1h,f,c
 44758   011208  C4DF F4E7          	movff	indf2,indf1
 44759                           
 44760                           ;../../VLCBlib_PIC/can18_can_2.c: 598:                 m->bytes[4] = mp->bytes[4];
 44761   01120C  EE20 F006          	lfsr	2,6
 44762   011210  500E               	movf	canSendMessage@mp^(0+1280),w,c
 44763   011212  26D9               	addwf	fsr2l,f,c
 44764   011214  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 44765   011216  22DA               	addwfc	fsr2h,f,c
 44766   011218  EE10 F006          	lfsr	1,6
 44767   01121C  5018               	movf	canSendMessage@m^(0+1280),w,c
 44768   01121E  26E1               	addwf	fsr1l,f,c
 44769   011220  5019               	movf	(canSendMessage@m+1)^(0+1280),w,c
 44770   011222  22E2               	addwfc	fsr1h,f,c
 44771   011224  C4DF F4E7          	movff	indf2,indf1
 44772                           
 44773                           ;../../VLCBlib_PIC/can18_can_2.c: 599:                 m->bytes[5] = mp->bytes[5];
 44774   011228  EE20 F007          	lfsr	2,7
 44775   01122C  500E               	movf	canSendMessage@mp^(0+1280),w,c
 44776   01122E  26D9               	addwf	fsr2l,f,c
 44777   011230  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 44778   011232  22DA               	addwfc	fsr2h,f,c
 44779   011234  EE10 F007          	lfsr	1,7
 44780   011238  5018               	movf	canSendMessage@m^(0+1280),w,c
 44781   01123A  26E1               	addwf	fsr1l,f,c
 44782   01123C  5019               	movf	(canSendMessage@m+1)^(0+1280),w,c
 44783   01123E  22E2               	addwfc	fsr1h,f,c
 44784   011240  C4DF F4E7          	movff	indf2,indf1
 44785                           
 44786                           ;../../VLCBlib_PIC/can18_can_2.c: 600:                 m->bytes[6] = mp->bytes[6];
 44787   011244  EE20 F008          	lfsr	2,8
 44788   011248  500E               	movf	canSendMessage@mp^(0+1280),w,c
 44789   01124A  26D9               	addwf	fsr2l,f,c
 44790   01124C  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 44791   01124E  22DA               	addwfc	fsr2h,f,c
 44792   011250  EE10 F008          	lfsr	1,8
 44793   011254  5018               	movf	canSendMessage@m^(0+1280),w,c
 44794   011256  26E1               	addwf	fsr1l,f,c
 44795   011258  5019               	movf	(canSendMessage@m+1)^(0+1280),w,c
 44796   01125A  22E2               	addwfc	fsr1h,f,c
 44797   01125C  C4DF F4E7          	movff	indf2,indf1
 44798   011260                     l8519:
 44799                           
 44800                           ;../../VLCBlib_PIC/can18_can_2.c: 603:             temp = getNumRxBuffersInUse();
 44801   011260  ECC9  F0AB         	call	_getNumRxBuffersInUse	;wreg free
 44802   011264  6E10               	movwf	??_canSendMessage^(0+1280),c
 44803   011266  5010               	movf	??_canSendMessage^(0+1280),w,c
 44804   011268  6E16               	movwf	canSendMessage@temp^(0+1280),c
 44805   01126A  6A17               	clrf	(canSendMessage@temp+1)^(0+1280),c
 44806                           
 44807                           ;../../VLCBlib_PIC/can18_can_2.c: 604:             if (temp > canDiagnostics[0x12].asUin
      +                          t) {
 44808   01126C  5016               	movf	canSendMessage@temp^(0+1280),w,c
 44809   01126E  0106               	movlb	6	; () banked
 44810   011270  5DCA               	subwf	(_canDiagnostics+36)& (0+255),w,b
 44811   011272  5017               	movf	(canSendMessage@temp+1)^(0+1280),w,c
 44812   011274  59CB               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 44813   011276  B0D8               	btfsc	status,0,c
 44814   011278  D004               	goto	l924
 44815                           
 44816                           ; BSR set to: 6
 44817                           ;../../VLCBlib_PIC/can18_can_2.c: 605:                 canDiagnostics[0x12].asUint = tem
      +                          p;
 44818   01127A  C516  F6CA         	movff	canSendMessage@temp,_canDiagnostics+36
 44819   01127E  C517  F6CB         	movff	canSendMessage@temp+1,_canDiagnostics+37
 44820   011282                     l924:
 44821                           
 44822                           ;../../VLCBlib_PIC/can18_can_2.c: 612:     if (!C1FIFOSTA2Lbits.TFNRFNIF) {
 44823   011282  0101               	movlb	1	; () banked
 44824   011284  B16C               	btfsc	108,0,b	;volatile
 44825   011286  D006               	goto	l929
 44826                           
 44827                           ; BSR set to: 1
 44828                           ;../../VLCBlib_PIC/can18_can_2.c: 614:         canDiagnostics[0x05].asUint++;
 44829   011288  0106               	movlb	6	; () banked
 44830   01128A  4BB0               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 44831   01128C  2BB1               	incf	(_canDiagnostics+11)& (0+255),f,b
 44832                           
 44833                           ; BSR set to: 6
 44834                           ;../../VLCBlib_PIC/can18_can_2.c: 615:         updateModuleErrorStatus();
 44835   01128E  ECB6  F0B3         	call	_updateModuleErrorStatus	;wreg free
 44836   011292  0012               	return	
 44837   011294                     l929:
 44838                           
 44839                           ; BSR set to: 1
 44840                           ;../../VLCBlib_PIC/can18_can_2.c: 623:     if (C1FIFOSTA2Lbits.TXLARB == 1) {
 44841   011294  AD6C               	btfss	108,6,b	;volatile
 44842   011296  D003               	goto	l8533
 44843                           
 44844                           ; BSR set to: 1
 44845                           ;../../VLCBlib_PIC/can18_can_2.c: 624:         canDiagnostics[0x0C].asUint++;
 44846   011298  0106               	movlb	6	; () banked
 44847   01129A  4BBE               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 44848   01129C  2BBF               	incf	(_canDiagnostics+25)& (0+255),f,b
 44849   01129E                     l8533:
 44850                           
 44851                           ;../../VLCBlib_PIC/can18_can_2.c: 629:     if ((canId == 0) && (enumerationState == NO_E
      +                          NUMERATION)) {
 44852   01129E  0105               	movlb	5	; () banked
 44853   0112A0  5196               	movf	_canId& (0+255),w,b
 44854   0112A2  A4D8               	btfss	status,2,c
 44855   0112A4  D007               	goto	l8539
 44856                           
 44857                           ; BSR set to: 5
 44858   0112A6  5193               	movf	_enumerationState& (0+255),w,b
 44859   0112A8  A4D8               	btfss	status,2,c
 44860   0112AA  D004               	goto	l8539
 44861                           
 44862                           ; BSR set to: 5
 44863                           ;../../VLCBlib_PIC/can18_can_2.c: 630:         enumerationState = ENUMERATION_REQUIRED;
 44864   0112AC  0E01               	movlw	1
 44865   0112AE  6F93               	movwf	_enumerationState& (0+255),b
 44866                           
 44867                           ;../../VLCBlib_PIC/can18_can_2.c: 631:         canId = 1;
 44868   0112B0  0E01               	movlw	1
 44869   0112B2  6F96               	movwf	_canId& (0+255),b
 44870   0112B4                     l8539:
 44871                           
 44872                           ; BSR set to: 5
 44873                           ;../../VLCBlib_PIC/can18_can_2.c: 635:     txFifoObj = (uint8_t*) C1FIFOUA2;
 44874   0112B4  C170 F51A          	movff	368,canSendMessage@txFifoObj	;volatile
 44875   0112B8  C171 F51B          	movff	369,canSendMessage@txFifoObj+1	;volatile
 44876                           
 44877                           ; BSR set to: 5
 44878                           ;../../VLCBlib_PIC/can18_can_2.c: 636:     txFifoObj[0] = (uint8_t)((canPri[priorities[m
      +                          p->opc]] & 1) << 7) | (canId & 0x7F);
 44879   0112BC  C596  F510         	movff	_canId,??_canSendMessage
 44880   0112C0  0E7F               	movlw	127
 44881   0112C2  1610               	andwf	??_canSendMessage^(0+1280),f,c
 44882   0112C4  EE20 F001          	lfsr	2,1
 44883   0112C8  500E               	movf	canSendMessage@mp^(0+1280),w,c
 44884   0112CA  26D9               	addwf	fsr2l,f,c
 44885   0112CC  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 44886   0112CE  22DA               	addwfc	fsr2h,f,c
 44887   0112D0  50DF               	movf	indf2,w,c
 44888   0112D2  6E11               	movwf	(??_canSendMessage+1)^(0+1280),c
 44889   0112D4  6A12               	clrf	(??_canSendMessage+2)^(0+1280),c
 44890   0112D6  0E35               	movlw	low _priorities
 44891   0112D8  2411               	addwf	(??_canSendMessage+1)^(0+1280),w,c
 44892   0112DA  6EF6               	movwf	tblptrl,c
 44893   0112DC  0EFE               	movlw	high _priorities
 44894   0112DE  2012               	addwfc	(??_canSendMessage+2)^(0+1280),w,c
 44895   0112E0  6EF7               	movwf	tblptrh,c
 44896   0112E2                     	if	1	;There are 3 active tblptr bytes
 44897   0112E2  6AF8               	clrf	tblptru,c
 44898   0112E4  0E00               	movlw	low (__pmediumconst shr (0+16))
 44899   0112E6  22F8               	addwfc	tblptru,f,c
 44900   0112E8                     	endif
 44901   0112E8  0008               	tblrd		*
 44902   0112EA  50F5               	movf	tablat,w,c
 44903   0112EC  6E13               	movwf	(??_canSendMessage+3)^(0+1280),c
 44904   0112EE  6A14               	clrf	(??_canSendMessage+4)^(0+1280),c
 44905   0112F0  0E50               	movlw	low _canPri
 44906   0112F2  2413               	addwf	(??_canSendMessage+3)^(0+1280),w,c
 44907   0112F4  6EF6               	movwf	tblptrl,c
 44908   0112F6  0EFF               	movlw	high _canPri
 44909   0112F8  2014               	addwfc	(??_canSendMessage+4)^(0+1280),w,c
 44910   0112FA  6EF7               	movwf	tblptrh,c
 44911   0112FC                     	if	1	;There are 3 active tblptr bytes
 44912   0112FC  6AF8               	clrf	tblptru,c
 44913   0112FE  0E00               	movlw	low (__pmediumconst shr (0+16))
 44914   011300  22F8               	addwfc	tblptru,f,c
 44915   011302                     	endif
 44916   011302  0008               	tblrd		*
 44917   011304  C4F5 F515          	movff	tablat,??_canSendMessage+5
 44918   011308  0E01               	movlw	1
 44919   01130A  1615               	andwf	(??_canSendMessage+5)^(0+1280),f,c
 44920   01130C  0E00               	movlw	0
 44921   01130E  B015               	btfsc	(??_canSendMessage+5)^(0+1280),0,c
 44922   011310  0E80               	movlw	128
 44923   011312  6E15               	movwf	(??_canSendMessage+5)^(0+1280),c
 44924   011314  5015               	movf	(??_canSendMessage+5)^(0+1280),w,c
 44925   011316  1010               	iorwf	??_canSendMessage^(0+1280),w,c
 44926   011318  C51A  F4D9         	movff	canSendMessage@txFifoObj,fsr2l
 44927   01131C  C51B  F4DA         	movff	canSendMessage@txFifoObj+1,fsr2h
 44928   011320  6EDF               	movwf	indf2,c
 44929                           
 44930                           ; BSR set to: 5
 44931                           ;../../VLCBlib_PIC/can18_can_2.c: 637:     txFifoObj[1] = canPri[priorities[mp->opc]] >>
      +                           1;
 44932   011322  EE20 F001          	lfsr	2,1
 44933   011326  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 44934   011328  26D9               	addwf	fsr2l,f,c
 44935   01132A  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 44936   01132C  22DA               	addwfc	fsr2h,f,c
 44937   01132E  EE10 F001          	lfsr	1,1
 44938   011332  500E               	movf	canSendMessage@mp^(0+1280),w,c
 44939   011334  26E1               	addwf	fsr1l,f,c
 44940   011336  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 44941   011338  22E2               	addwfc	fsr1h,f,c
 44942   01133A  50E7               	movf	indf1,w,c
 44943   01133C  6E10               	movwf	??_canSendMessage^(0+1280),c
 44944   01133E  6A11               	clrf	(??_canSendMessage+1)^(0+1280),c
 44945   011340  0E35               	movlw	low _priorities
 44946   011342  2410               	addwf	??_canSendMessage^(0+1280),w,c
 44947   011344  6EF6               	movwf	tblptrl,c
 44948   011346  0EFE               	movlw	high _priorities
 44949   011348  2011               	addwfc	(??_canSendMessage+1)^(0+1280),w,c
 44950   01134A  6EF7               	movwf	tblptrh,c
 44951   01134C                     	if	1	;There are 3 active tblptr bytes
 44952   01134C  6AF8               	clrf	tblptru,c
 44953   01134E  0E00               	movlw	low (__pmediumconst shr (0+16))
 44954   011350  22F8               	addwfc	tblptru,f,c
 44955   011352                     	endif
 44956   011352  0008               	tblrd		*
 44957   011354  50F5               	movf	tablat,w,c
 44958   011356  6E12               	movwf	(??_canSendMessage+2)^(0+1280),c
 44959   011358  6A13               	clrf	(??_canSendMessage+3)^(0+1280),c
 44960   01135A  0E50               	movlw	low _canPri
 44961   01135C  2412               	addwf	(??_canSendMessage+2)^(0+1280),w,c
 44962   01135E  6EF6               	movwf	tblptrl,c
 44963   011360  0EFF               	movlw	high _canPri
 44964   011362  2013               	addwfc	(??_canSendMessage+3)^(0+1280),w,c
 44965   011364  6EF7               	movwf	tblptrh,c
 44966   011366                     	if	1	;There are 3 active tblptr bytes
 44967   011366  6AF8               	clrf	tblptru,c
 44968   011368  0E00               	movlw	low (__pmediumconst shr (0+16))
 44969   01136A  22F8               	addwfc	tblptru,f,c
 44970   01136C                     	endif
 44971   01136C  0008               	tblrd		*
 44972   01136E  C4F5 F514          	movff	tablat,??_canSendMessage+4
 44973   011372  90D8               	bcf	status,0,c
 44974   011374  3014               	rrcf	(??_canSendMessage+4)^(0+1280),w,c
 44975   011376  6EDF               	movwf	indf2,c
 44976                           
 44977                           ; BSR set to: 5
 44978                           ;../../VLCBlib_PIC/can18_can_2.c: 638:     txFifoObj[4] = (mp->len&0xF);
 44979   011378  EE20 F004          	lfsr	2,4
 44980   01137C  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 44981   01137E  26D9               	addwf	fsr2l,f,c
 44982   011380  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 44983   011382  22DA               	addwfc	fsr2h,f,c
 44984   011384  C50E  F4E1         	movff	canSendMessage@mp,fsr1l
 44985   011388  C50F  F4E2         	movff	canSendMessage@mp+1,fsr1h
 44986   01138C  50E7               	movf	indf1,w,c
 44987   01138E  0B0F               	andlw	15
 44988   011390  6EDF               	movwf	indf2,c
 44989                           
 44990                           ; BSR set to: 5
 44991                           ;../../VLCBlib_PIC/can18_can_2.c: 639:     txFifoObj[5] = 0;
 44992   011392  EE20 F005          	lfsr	2,5
 44993   011396  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 44994   011398  26D9               	addwf	fsr2l,f,c
 44995   01139A  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 44996   01139C  22DA               	addwfc	fsr2h,f,c
 44997   01139E  6ADF               	clrf	indf2,c
 44998                           
 44999                           ; BSR set to: 5
 45000                           ;../../VLCBlib_PIC/can18_can_2.c: 640:     txFifoObj[6] = 0;
 45001   0113A0  EE20 F006          	lfsr	2,6
 45002   0113A4  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 45003   0113A6  26D9               	addwf	fsr2l,f,c
 45004   0113A8  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 45005   0113AA  22DA               	addwfc	fsr2h,f,c
 45006   0113AC  6ADF               	clrf	indf2,c
 45007                           
 45008                           ; BSR set to: 5
 45009                           ;../../VLCBlib_PIC/can18_can_2.c: 641:     txFifoObj[7] = 0;
 45010   0113AE  EE20 F007          	lfsr	2,7
 45011   0113B2  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 45012   0113B4  26D9               	addwf	fsr2l,f,c
 45013   0113B6  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 45014   0113B8  22DA               	addwfc	fsr2h,f,c
 45015   0113BA  6ADF               	clrf	indf2,c
 45016                           
 45017                           ; BSR set to: 5
 45018                           ;../../VLCBlib_PIC/can18_can_2.c: 642:     txFifoObj[8] = (uint8_t)(mp->opc);
 45019   0113BC  EE20 F001          	lfsr	2,1
 45020   0113C0  500E               	movf	canSendMessage@mp^(0+1280),w,c
 45021   0113C2  26D9               	addwf	fsr2l,f,c
 45022   0113C4  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 45023   0113C6  22DA               	addwfc	fsr2h,f,c
 45024   0113C8  EE10 F008          	lfsr	1,8
 45025   0113CC  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 45026   0113CE  26E1               	addwf	fsr1l,f,c
 45027   0113D0  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 45028   0113D2  22E2               	addwfc	fsr1h,f,c
 45029   0113D4  C4DF F4E7          	movff	indf2,indf1
 45030                           
 45031                           ; BSR set to: 5
 45032                           ;../../VLCBlib_PIC/can18_can_2.c: 643:     txFifoObj[9] = mp->bytes[0];
 45033   0113D8  EE20 F002          	lfsr	2,2
 45034   0113DC  500E               	movf	canSendMessage@mp^(0+1280),w,c
 45035   0113DE  26D9               	addwf	fsr2l,f,c
 45036   0113E0  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 45037   0113E2  22DA               	addwfc	fsr2h,f,c
 45038   0113E4  EE10 F009          	lfsr	1,9
 45039   0113E8  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 45040   0113EA  26E1               	addwf	fsr1l,f,c
 45041   0113EC  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 45042   0113EE  22E2               	addwfc	fsr1h,f,c
 45043   0113F0  C4DF F4E7          	movff	indf2,indf1
 45044                           
 45045                           ; BSR set to: 5
 45046                           ;../../VLCBlib_PIC/can18_can_2.c: 644:     txFifoObj[10] = mp->bytes[1];
 45047   0113F4  EE20 F003          	lfsr	2,3
 45048   0113F8  500E               	movf	canSendMessage@mp^(0+1280),w,c
 45049   0113FA  26D9               	addwf	fsr2l,f,c
 45050   0113FC  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 45051   0113FE  22DA               	addwfc	fsr2h,f,c
 45052   011400  EE10 F00A          	lfsr	1,10
 45053   011404  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 45054   011406  26E1               	addwf	fsr1l,f,c
 45055   011408  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 45056   01140A  22E2               	addwfc	fsr1h,f,c
 45057   01140C  C4DF F4E7          	movff	indf2,indf1
 45058                           
 45059                           ; BSR set to: 5
 45060                           ;../../VLCBlib_PIC/can18_can_2.c: 645:     txFifoObj[11] = mp->bytes[2];
 45061   011410  EE20 F004          	lfsr	2,4
 45062   011414  500E               	movf	canSendMessage@mp^(0+1280),w,c
 45063   011416  26D9               	addwf	fsr2l,f,c
 45064   011418  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 45065   01141A  22DA               	addwfc	fsr2h,f,c
 45066   01141C  EE10 F00B          	lfsr	1,11
 45067   011420  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 45068   011422  26E1               	addwf	fsr1l,f,c
 45069   011424  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 45070   011426  22E2               	addwfc	fsr1h,f,c
 45071   011428  C4DF F4E7          	movff	indf2,indf1
 45072                           
 45073                           ; BSR set to: 5
 45074                           ;../../VLCBlib_PIC/can18_can_2.c: 646:     txFifoObj[12] = mp->bytes[3];
 45075   01142C  EE20 F005          	lfsr	2,5
 45076   011430  500E               	movf	canSendMessage@mp^(0+1280),w,c
 45077   011432  26D9               	addwf	fsr2l,f,c
 45078   011434  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 45079   011436  22DA               	addwfc	fsr2h,f,c
 45080   011438  EE10 F00C          	lfsr	1,12
 45081   01143C  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 45082   01143E  26E1               	addwf	fsr1l,f,c
 45083   011440  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 45084   011442  22E2               	addwfc	fsr1h,f,c
 45085   011444  C4DF F4E7          	movff	indf2,indf1
 45086                           
 45087                           ; BSR set to: 5
 45088                           ;../../VLCBlib_PIC/can18_can_2.c: 647:     txFifoObj[13] = mp->bytes[4];
 45089   011448  EE20 F006          	lfsr	2,6
 45090   01144C  500E               	movf	canSendMessage@mp^(0+1280),w,c
 45091   01144E  26D9               	addwf	fsr2l,f,c
 45092   011450  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 45093   011452  22DA               	addwfc	fsr2h,f,c
 45094   011454  EE10 F00D          	lfsr	1,13
 45095   011458  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 45096   01145A  26E1               	addwf	fsr1l,f,c
 45097   01145C  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 45098   01145E  22E2               	addwfc	fsr1h,f,c
 45099   011460  C4DF F4E7          	movff	indf2,indf1
 45100                           
 45101                           ; BSR set to: 5
 45102                           ;../../VLCBlib_PIC/can18_can_2.c: 648:     txFifoObj[14] = mp->bytes[5];
 45103   011464  EE20 F007          	lfsr	2,7
 45104   011468  500E               	movf	canSendMessage@mp^(0+1280),w,c
 45105   01146A  26D9               	addwf	fsr2l,f,c
 45106   01146C  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 45107   01146E  22DA               	addwfc	fsr2h,f,c
 45108   011470  EE10 F00E          	lfsr	1,14
 45109   011474  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 45110   011476  26E1               	addwf	fsr1l,f,c
 45111   011478  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 45112   01147A  22E2               	addwfc	fsr1h,f,c
 45113   01147C  C4DF F4E7          	movff	indf2,indf1
 45114                           
 45115                           ; BSR set to: 5
 45116                           ;../../VLCBlib_PIC/can18_can_2.c: 649:     txFifoObj[15] = mp->bytes[6];
 45117   011480  EE20 F008          	lfsr	2,8
 45118   011484  500E               	movf	canSendMessage@mp^(0+1280),w,c
 45119   011486  26D9               	addwf	fsr2l,f,c
 45120   011488  500F               	movf	(canSendMessage@mp+1)^(0+1280),w,c
 45121   01148A  22DA               	addwfc	fsr2h,f,c
 45122   01148C  EE10 F00F          	lfsr	1,15
 45123   011490  501A               	movf	canSendMessage@txFifoObj^(0+1280),w,c
 45124   011492  26E1               	addwf	fsr1l,f,c
 45125   011494  501B               	movf	(canSendMessage@txFifoObj+1)^(0+1280),w,c
 45126   011496  22E2               	addwfc	fsr1h,f,c
 45127   011498  C4DF F4E7          	movff	indf2,indf1
 45128                           
 45129                           ; BSR set to: 5
 45130                           ;../../VLCBlib_PIC/can18_can_2.c: 652:     canDiagnostics[0x06].asUint++;
 45131   01149C  0106               	movlb	6	; () banked
 45132   01149E  4BB2               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 45133   0114A0  2BB3               	incf	(_canDiagnostics+13)& (0+255),f,b
 45134                           
 45135                           ; BSR set to: 6
 45136                           ;../../VLCBlib_PIC/can18_can_2.c: 654:     C1FIFOCON2H |= 0x1;
 45137   0114A2  0101               	movlb	1	; () banked
 45138   0114A4  8169               	bsf	105,0,b	;volatile
 45139                           
 45140                           ; BSR set to: 1
 45141                           ;../../VLCBlib_PIC/can18_can_2.c: 656:     temp = getNumTxBuffersInUse();
 45142   0114A6  EC0D  F0AB         	call	_getNumTxBuffersInUse	;wreg free
 45143   0114AA  6E10               	movwf	??_canSendMessage^(0+1280),c
 45144   0114AC  5010               	movf	??_canSendMessage^(0+1280),w,c
 45145   0114AE  6E16               	movwf	canSendMessage@temp^(0+1280),c
 45146   0114B0  6A17               	clrf	(canSendMessage@temp+1)^(0+1280),c
 45147                           
 45148                           ;../../VLCBlib_PIC/can18_can_2.c: 657:     if (temp > canDiagnostics[0x11].asUint) {
 45149   0114B2  5016               	movf	canSendMessage@temp^(0+1280),w,c
 45150   0114B4  0106               	movlb	6	; () banked
 45151   0114B6  5DC8               	subwf	(_canDiagnostics+34)& (0+255),w,b
 45152   0114B8  5017               	movf	(canSendMessage@temp+1)^(0+1280),w,c
 45153   0114BA  59C9               	subwfb	(_canDiagnostics+35)& (0+255),w,b
 45154   0114BC  B0D8               	btfsc	status,0,c
 45155   0114BE  D004               	goto	l8579
 45156                           
 45157                           ; BSR set to: 6
 45158                           ;../../VLCBlib_PIC/can18_can_2.c: 658:         canDiagnostics[0x11].asUint = temp;
 45159   0114C0  C516  F6C8         	movff	canSendMessage@temp,_canDiagnostics+34
 45160   0114C4  C517  F6C9         	movff	canSendMessage@temp+1,_canDiagnostics+35
 45161   0114C8                     l8579:
 45162                           
 45163                           ; BSR set to: 6
 45164                           ;../../VLCBlib_PIC/can18_can_2.c: 661:     if (canId == 0) {
 45165   0114C8  0105               	movlb	5	; () banked
 45166   0114CA  5196               	movf	_canId& (0+255),w,b
 45167   0114CC  A4D8               	btfss	status,2,c
 45168   0114CE  D004               	goto	l8583
 45169                           
 45170                           ; BSR set to: 5
 45171                           ;../../VLCBlib_PIC/can18_can_2.c: 663:         startEnumeration(1);
 45172   0114D0  0E01               	movlw	1
 45173   0114D2  ECD0  F0AC         	call	_startEnumeration
 45174                           
 45175                           ;../../VLCBlib_PIC/can18_can_2.c: 664:     } else {
 45176   0114D6  0012               	return	
 45177   0114D8                     l8583:
 45178                           
 45179                           ; BSR set to: 5
 45180                           ;../../VLCBlib_PIC/can18_can_2.c: 666:         C1FIFOCON2H |= 0x2;
 45181   0114D8  0101               	movlb	1	; () banked
 45182   0114DA  8369               	bsf	105,1,b	;volatile
 45183   0114DC  0012               	return		;funcret
 45184   0114DE                     __end_of_canSendMessage:
 45185                           	callstack 0
 45186                           
 45187 ;; *************** function _startEnumeration *****************
 45188 ;; Defined at:
 45189 ;;		line 777 in file "../../VLCBlib_PIC/can18_can_2.c"
 45190 ;; Parameters:    Size  Location     Type
 45191 ;;  txWaiting       1    wreg     enum E23474
 45192 ;; Auto vars:     Size  Location     Type
 45193 ;;  txWaiting       1   10[COMRAM] enum E23474
 45194 ;;  i               1   11[COMRAM] unsigned char 
 45195 ;; Return value:  Size  Location     Type
 45196 ;;                  1    wreg      void 
 45197 ;; Registers used:
 45198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 45199 ;; Tracked objects:
 45200 ;;		On entry : 0/0
 45201 ;;		On exit  : 0/0
 45202 ;;		Unchanged: 0/0
 45203 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45208 ;;Total ram usage:        2 bytes
 45209 ;; Hardware stack levels used: 1
 45210 ;; Hardware stack levels required when called: 2
 45211 ;; This function calls:
 45212 ;;		_sendRTR
 45213 ;;		_tickGet
 45214 ;; This function is called by:
 45215 ;;		_canSendMessage
 45216 ;;		_processEnumeration
 45217 ;; This function uses a non-reentrant model
 45218 ;;
 45219                           
 45220                           	psect	text117
 45221   0159A0                     __ptext117:
 45222                           	callstack 0
 45223   0159A0                     _startEnumeration:
 45224                           	callstack 118
 45225                           
 45226                           ;incstack = 0
 45227                           ;startEnumeration@txWaiting stored from wreg
 45228   0159A0  6E0B               	movwf	startEnumeration@txWaiting^(0+1280),c
 45229                           
 45230                           ;../../VLCBlib_PIC/can18_can_2.c: 778:     uint8_t i;;../../VLCBlib_PIC/can18_can_2.c: 7
      +                          80:     for (i=1; i< (0x7F/8)+1; i++) {
 45231   0159A2  0E01               	movlw	1
 45232   0159A4  6E0C               	movwf	startEnumeration@i^(0+1280),c
 45233   0159A6                     l8385:
 45234                           
 45235                           ;../../VLCBlib_PIC/can18_can_2.c: 781:         enumerationResults[i] = 0;
 45236   0159A6  0E61               	movlw	low _enumerationResults
 45237   0159A8  240C               	addwf	startEnumeration@i^(0+1280),w,c
 45238   0159AA  6ED9               	movwf	fsr2l,c
 45239   0159AC  6ADA               	clrf	fsr2h,c
 45240   0159AE  0E06               	movlw	high _enumerationResults
 45241   0159B0  22DA               	addwfc	fsr2h,f,c
 45242   0159B2  6ADF               	clrf	indf2,c
 45243                           
 45244                           ;../../VLCBlib_PIC/can18_can_2.c: 782:     }
 45245   0159B4  2A0C               	incf	startEnumeration@i^(0+1280),f,c
 45246   0159B6  0E0F               	movlw	15
 45247   0159B8  640C               	cpfsgt	startEnumeration@i^(0+1280),c
 45248   0159BA  D7F5               	goto	l8385
 45249                           
 45250                           ;../../VLCBlib_PIC/can18_can_2.c: 783:     enumerationResults[0] = 1;
 45251   0159BC  0E01               	movlw	1
 45252   0159BE  0106               	movlb	6	; () banked
 45253   0159C0  6F61               	movwf	_enumerationResults& (0+255),b
 45254                           
 45255                           ;../../VLCBlib_PIC/can18_can_2.c: 785:     enumerationState = txWaiting ? ENUMERATION_IN
      +                          _PROGRESS_TX_WAITING : ENUMERATION_IN_PROGRESS;
 45256   0159C2  500B               	movf	startEnumeration@txWaiting^(0+1280),w,c
 45257   0159C4  A4D8               	btfss	status,2,c
 45258   0159C6  D002               	goto	l8395
 45259                           
 45260                           ; BSR set to: 6
 45261   0159C8  0E02               	movlw	2
 45262   0159CA  D001               	goto	L11
 45263   0159CC                     l8395:
 45264                           
 45265                           ; BSR set to: 6
 45266   0159CC  0E03               	movlw	3
 45267   0159CE                     L11:
 45268   0159CE  0105               	movlb	5	; () banked
 45269   0159D0  6F93               	movwf	_enumerationState& (0+255),b
 45270                           
 45271                           ; BSR set to: 5
 45272                           ;../../VLCBlib_PIC/can18_can_2.c: 786:     enumerationStartTime.val = tickGet();
 45273   0159D2  EC7A  F0AC         	call	_tickGet	;wreg free
 45274   0159D6  C501  F564         	movff	?_tickGet,_enumerationStartTime
 45275   0159DA  C502  F565         	movff	?_tickGet+1,_enumerationStartTime+1
 45276   0159DE  C503  F566         	movff	?_tickGet+2,_enumerationStartTime+2
 45277   0159E2  C504  F567         	movff	?_tickGet+3,_enumerationStartTime+3
 45278                           
 45279                           ;../../VLCBlib_PIC/can18_can_2.c: 788:     canDiagnostics[0x0D].asUint++;
 45280   0159E6  0106               	movlb	6	; () banked
 45281   0159E8  4BC0               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 45282   0159EA  2BC1               	incf	(_canDiagnostics+27)& (0+255),f,b
 45283                           
 45284                           ; BSR set to: 6
 45285                           ;../../VLCBlib_PIC/can18_can_2.c: 790:     sendRTR();
 45286   0159EC  ECC2  F0AE         	call	_sendRTR	;wreg free
 45287   0159F0  0012               	return		;funcret
 45288   0159F2                     __end_of_startEnumeration:
 45289                           	callstack 0
 45290                           
 45291 ;; *************** function _sendRTR *****************
 45292 ;; Defined at:
 45293 ;;		line 680 in file "../../VLCBlib_PIC/can18_can_2.c"
 45294 ;; Parameters:    Size  Location     Type
 45295 ;;		None
 45296 ;; Auto vars:     Size  Location     Type
 45297 ;;  txFifoObj       2    0[COMRAM] PTR unsigned char 
 45298 ;;		 -> RAM(16383), 
 45299 ;; Return value:  Size  Location     Type
 45300 ;;                  1    wreg      void 
 45301 ;; Registers used:
 45302 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 45303 ;; Tracked objects:
 45304 ;;		On entry : 0/0
 45305 ;;		On exit  : 0/0
 45306 ;;		Unchanged: 0/0
 45307 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45309 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45311 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45312 ;;Total ram usage:        2 bytes
 45313 ;; Hardware stack levels used: 1
 45314 ;; Hardware stack levels required when called: 1
 45315 ;; This function calls:
 45316 ;;		Nothing
 45317 ;; This function is called by:
 45318 ;;		_startEnumeration
 45319 ;; This function uses a non-reentrant model
 45320 ;;
 45321                           
 45322                           	psect	text118
 45323   015D84                     __ptext118:
 45324                           	callstack 0
 45325   015D84                     _sendRTR:
 45326                           	callstack 118
 45327                           
 45328                           ;../../VLCBlib_PIC/can18_can_2.c: 681:     uint8_t* txFifoObj = (uint8_t*) C1TXQUA;
 45329                           
 45330                           ;incstack = 0
 45331   015D84  C158 F501          	movff	344,sendRTR@txFifoObj	;volatile
 45332   015D88  C159 F502          	movff	345,sendRTR@txFifoObj+1	;volatile
 45333                           
 45334                           ;../../VLCBlib_PIC/can18_can_2.c: 682:     txFifoObj[0] = (canId & 0x7F);
 45335   015D8C  0105               	movlb	5	; () banked
 45336   015D8E  5196               	movf	_canId& (0+255),w,b
 45337   015D90  0B7F               	andlw	127
 45338   015D92  C501  F4D9         	movff	sendRTR@txFifoObj,fsr2l
 45339   015D96  C502  F4DA         	movff	sendRTR@txFifoObj+1,fsr2h
 45340   015D9A  6EDF               	movwf	indf2,c
 45341                           
 45342                           ; BSR set to: 5
 45343                           ;../../VLCBlib_PIC/can18_can_2.c: 683:     txFifoObj[1] = 0;
 45344   015D9C  EE20 F001          	lfsr	2,1
 45345   015DA0  5001               	movf	sendRTR@txFifoObj^(0+1280),w,c
 45346   015DA2  26D9               	addwf	fsr2l,f,c
 45347   015DA4  5002               	movf	(sendRTR@txFifoObj+1)^(0+1280),w,c
 45348   015DA6  22DA               	addwfc	fsr2h,f,c
 45349   015DA8  6ADF               	clrf	indf2,c
 45350                           
 45351                           ; BSR set to: 5
 45352                           ;../../VLCBlib_PIC/can18_can_2.c: 684:     txFifoObj[4] = 0x20;
 45353   015DAA  EE20 F004          	lfsr	2,4
 45354   015DAE  5001               	movf	sendRTR@txFifoObj^(0+1280),w,c
 45355   015DB0  26D9               	addwf	fsr2l,f,c
 45356   015DB2  5002               	movf	(sendRTR@txFifoObj+1)^(0+1280),w,c
 45357   015DB4  22DA               	addwfc	fsr2h,f,c
 45358   015DB6  0E20               	movlw	32
 45359   015DB8  6EDF               	movwf	indf2,c
 45360                           
 45361                           ; BSR set to: 5
 45362                           ;../../VLCBlib_PIC/can18_can_2.c: 685:     C1TXQCONH |= (0x2 | 0x1);
 45363   015DBA  0E03               	movlw	3
 45364   015DBC  0101               	movlb	1	; () banked
 45365   015DBE  1351               	iorwf	81,f,b	;volatile
 45366                           
 45367                           ; BSR set to: 1
 45368                           ;../../VLCBlib_PIC/can18_can_2.c: 687:     canDiagnostics[0x06].asUint++;
 45369   015DC0  0106               	movlb	6	; () banked
 45370   015DC2  4BB2               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 45371   015DC4  2BB3               	incf	(_canDiagnostics+13)& (0+255),f,b
 45372                           
 45373                           ; BSR set to: 6
 45374   015DC6  0012               	return		;funcret
 45375   015DC8                     __end_of_sendRTR:
 45376                           	callstack 0
 45377                           
 45378 ;; *************** function _isEvent *****************
 45379 ;; Defined at:
 45380 ;;		line 1130 in file "../../VLCBlib_PIC/vlcb.c"
 45381 ;; Parameters:    Size  Location     Type
 45382 ;;  opc             1    wreg     unsigned char 
 45383 ;; Auto vars:     Size  Location     Type
 45384 ;;  opc             1    1[COMRAM] unsigned char 
 45385 ;; Return value:  Size  Location     Type
 45386 ;;                  1    wreg      enum E23474
 45387 ;; Registers used:
 45388 ;;		wreg, status,2, status,0
 45389 ;; Tracked objects:
 45390 ;;		On entry : 0/0
 45391 ;;		On exit  : 0/0
 45392 ;;		Unchanged: 0/0
 45393 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45397 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45398 ;;Total ram usage:        2 bytes
 45399 ;; Hardware stack levels used: 1
 45400 ;; Hardware stack levels required when called: 1
 45401 ;; This function calls:
 45402 ;;		Nothing
 45403 ;; This function is called by:
 45404 ;;		_canSendMessage
 45405 ;; This function uses a non-reentrant model
 45406 ;;
 45407                           
 45408                           	psect	text119
 45409   016562                     __ptext119:
 45410                           	callstack 0
 45411   016562                     _isEvent:
 45412                           	callstack 119
 45413                           
 45414                           ; BSR set to: 6
 45415                           ;incstack = 0
 45416                           ;isEvent@opc stored from wreg
 45417   016562  6E02               	movwf	isEvent@opc^(0+1280),c
 45418                           
 45419                           ;../../VLCBlib_PIC/vlcb.c: 1131:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 45420   016564  6A01               	clrf	_isEvent$6241^(0+1280),c
 45421   016566  5002               	movf	isEvent@opc^(0+1280),w,c
 45422   016568  0B90               	andlw	144
 45423   01656A  0A90               	xorlw	144
 45424   01656C  A4D8               	btfss	status,2,c
 45425   01656E  D008               	goto	l2318
 45426   016570  5002               	movf	isEvent@opc^(0+1280),w,c
 45427   016572  0AFF               	xorlw	255
 45428   016574  0B06               	andlw	6
 45429   016576  0A06               	xorlw	6
 45430   016578  A4D8               	btfss	status,2,c
 45431   01657A  D002               	goto	l2318
 45432   01657C  0E01               	movlw	1
 45433   01657E  6E01               	movwf	_isEvent$6241^(0+1280),c
 45434   016580                     l2318:
 45435   016580  5001               	movf	_isEvent$6241^(0+1280),w,c
 45436   016582  0012               	return		;funcret
 45437   016584                     __end_of_isEvent:
 45438                           	callstack 0
 45439                           
 45440 ;; *************** function _have *****************
 45441 ;; Defined at:
 45442 ;;		line 848 in file "../../VLCBlib_PIC/vlcb.c"
 45443 ;; Parameters:    Size  Location     Type
 45444 ;;  id              1    wreg     unsigned char 
 45445 ;; Auto vars:     Size  Location     Type
 45446 ;;  id              1    2[COMRAM] unsigned char 
 45447 ;;  i               1    3[COMRAM] unsigned char 
 45448 ;; Return value:  Size  Location     Type
 45449 ;;                  1    wreg      enum E23601
 45450 ;; Registers used:
 45451 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 45452 ;; Tracked objects:
 45453 ;;		On entry : 0/0
 45454 ;;		On exit  : 0/0
 45455 ;;		Unchanged: 0/0
 45456 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45458 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45459 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45460 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45461 ;;Total ram usage:        4 bytes
 45462 ;; Hardware stack levels used: 1
 45463 ;; Hardware stack levels required when called: 1
 45464 ;; This function calls:
 45465 ;;		Nothing
 45466 ;; This function is called by:
 45467 ;;		_canSendMessage
 45468 ;;		_getParameterFlags
 45469 ;;		_getParameter
 45470 ;; This function uses a non-reentrant model
 45471 ;;
 45472                           
 45473                           	psect	text120
 45474   015192                     __ptext120:
 45475                           	callstack 0
 45476   015192                     _have:
 45477                           	callstack 119
 45478                           
 45479                           ;incstack = 0
 45480                           ;have@id stored from wreg
 45481   015192  6E03               	movwf	have@id^(0+1280),c
 45482                           
 45483                           ;../../VLCBlib_PIC/vlcb.c: 849:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 850:     for (i
      +                          =0; i<8; i++) {
 45484   015194  6A04               	clrf	have@i^(0+1280),c
 45485   015196                     l8347:
 45486                           
 45487                           ;../../VLCBlib_PIC/vlcb.c: 851:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 45488   015196  5004               	movf	have@i^(0+1280),w,c
 45489   015198  0D02               	mullw	2
 45490   01519A  0E35               	movlw	low _services
 45491   01519C  24F3               	addwf	243,w,c
 45492   01519E  6EF6               	movwf	tblptrl,c
 45493   0151A0  0EFF               	movlw	high _services
 45494   0151A2  20F4               	addwfc	244,w,c
 45495   0151A4  6EF7               	movwf	tblptrh,c
 45496   0151A6                     	if	1	;There are 3 active tblptr bytes
 45497   0151A6  6AF8               	clrf	tblptru,c
 45498   0151A8  0E00               	movlw	low (__pmediumconst shr (0+16))
 45499   0151AA  22F8               	addwfc	tblptru,f,c
 45500   0151AC                     	endif
 45501   0151AC  0009               	tblrd		*+
 45502   0151AE  50F5               	movf	tablat,w,c
 45503   0151B0  0009               	tblrd		*+
 45504   0151B2  10F5               	iorwf	tablat,w,c
 45505   0151B4  B4D8               	btfsc	status,2,c
 45506   0151B6  D01E               	goto	l8355
 45507   0151B8  5004               	movf	have@i^(0+1280),w,c
 45508   0151BA  0D02               	mullw	2
 45509   0151BC  0E35               	movlw	low _services
 45510   0151BE  24F3               	addwf	243,w,c
 45511   0151C0  6EF6               	movwf	tblptrl,c
 45512   0151C2  0EFF               	movlw	high _services
 45513   0151C4  20F4               	addwfc	244,w,c
 45514   0151C6  6EF7               	movwf	tblptrh,c
 45515   0151C8                     	if	1	;There are 3 active tblptr bytes
 45516   0151C8  6AF8               	clrf	tblptru,c
 45517   0151CA  0E00               	movlw	low (__pmediumconst shr (0+16))
 45518   0151CC  22F8               	addwfc	tblptru,f,c
 45519   0151CE                     	endif
 45520   0151CE  0009               	tblrd		*+
 45521   0151D0  C4F5 F501          	movff	tablat,??_have
 45522   0151D4  0009               	tblrd		*+
 45523   0151D6  C4F5 F502          	movff	tablat,??_have+1
 45524   0151DA  C501  F4F6         	movff	??_have,tblptrl
 45525   0151DE  C502  F4F7         	movff	??_have+1,tblptrh
 45526   0151E2                     	if	0	;tblptru may be non-zero
 45527   0151E2                     	endif
 45528   0151E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 45529   0151E2  0E00               	movlw	low (__pmediumconst shr (0+16))
 45530   0151E4  6EF8               	movwf	tblptru,c
 45531   0151E6                     	endif
 45532   0151E6  0008               	tblrd		*
 45533   0151E8  50F5               	movf	tablat,w,c
 45534   0151EA  1803               	xorwf	have@id^(0+1280),w,c
 45535   0151EC  A4D8               	btfss	status,2,c
 45536   0151EE  D002               	goto	l8355
 45537                           
 45538                           ;../../VLCBlib_PIC/vlcb.c: 852:             return PRESENT;
 45539   0151F0  0E01               	movlw	1
 45540   0151F2  0012               	return	
 45541   0151F4                     l8355:
 45542                           
 45543                           ;../../VLCBlib_PIC/vlcb.c: 854:     }
 45544   0151F4  2A04               	incf	have@i^(0+1280),f,c
 45545   0151F6  0E07               	movlw	7
 45546   0151F8  6404               	cpfsgt	have@i^(0+1280),c
 45547   0151FA  D7CD               	goto	l8347
 45548                           
 45549                           ;../../VLCBlib_PIC/vlcb.c: 855:     return NOT_PRESENT;
 45550   0151FC  0E00               	movlw	0
 45551   0151FE  0012               	return		;funcret
 45552   015200                     __end_of_have:
 45553                           	callstack 0
 45554                           
 45555 ;; *************** function _getNumTxBuffersInUse *****************
 45556 ;; Defined at:
 45557 ;;		line 532 in file "../../VLCBlib_PIC/can18_can_2.c"
 45558 ;; Parameters:    Size  Location     Type
 45559 ;;		None
 45560 ;; Auto vars:     Size  Location     Type
 45561 ;;  i16             2    4[COMRAM] short 
 45562 ;; Return value:  Size  Location     Type
 45563 ;;                  1    wreg      unsigned char 
 45564 ;; Registers used:
 45565 ;;		wreg, status,2, status,0
 45566 ;; Tracked objects:
 45567 ;;		On entry : 0/0
 45568 ;;		On exit  : 0/0
 45569 ;;		Unchanged: 0/0
 45570 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45572 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45573 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45574 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45575 ;;Total ram usage:        6 bytes
 45576 ;; Hardware stack levels used: 1
 45577 ;; Hardware stack levels required when called: 1
 45578 ;; This function calls:
 45579 ;;		Nothing
 45580 ;; This function is called by:
 45581 ;;		_canGetDiagnostic
 45582 ;;		_canSendMessage
 45583 ;; This function uses a non-reentrant model
 45584 ;;
 45585                           
 45586                           	psect	text121
 45587   01561A                     __ptext121:
 45588                           	callstack 0
 45589   01561A                     _getNumTxBuffersInUse:
 45590                           	callstack 119
 45591                           
 45592                           ;../../VLCBlib_PIC/can18_can_2.c: 533:     if (! C1FIFOSTA2Lbits.TFNRFNIF) {
 45593                           
 45594                           ;incstack = 0
 45595   01561A  0101               	movlb	1	; () banked
 45596   01561C  B16C               	btfsc	108,0,b	;volatile
 45597   01561E  D002               	goto	l8307
 45598                           
 45599                           ; BSR set to: 1
 45600                           ;../../VLCBlib_PIC/can18_can_2.c: 534:         return 32;
 45601   015620  0E20               	movlw	32
 45602   015622  0012               	return	
 45603   015624                     l8307:
 45604                           
 45605                           ; BSR set to: 1
 45606                           ;../../VLCBlib_PIC/can18_can_2.c: 536:         int16_t i16;;../../VLCBlib_PIC/can18_can_
      +                          2.c: 538:         i16 = (int16_t)((C1FIFOUA2 - ((0x3BB0 +((8 +8)*4))+((8 +8)*1)))/(8+8))
      +                          ;
 45607   015624  0E00               	movlw	0
 45608   015626  2570               	addwf	112,w,b	;volatile
 45609   015628  6E01               	movwf	??_getNumTxBuffersInUse^(0+1280),c
 45610   01562A  0EC4               	movlw	196
 45611   01562C  2171               	addwfc	113,w,b	;volatile
 45612   01562E  6E02               	movwf	(??_getNumTxBuffersInUse+1)^(0+1280),c
 45613   015630  0EFF               	movlw	255
 45614   015632  2172               	addwfc	114,w,b	;volatile
 45615   015634  6E03               	movwf	(??_getNumTxBuffersInUse+2)^(0+1280),c
 45616   015636  0EFF               	movlw	255
 45617   015638  2173               	addwfc	115,w,b	;volatile
 45618   01563A  6E04               	movwf	(??_getNumTxBuffersInUse+3)^(0+1280),c
 45619   01563C  0E05               	movlw	5
 45620   01563E  D005               	goto	u5870
 45621   015640                     u5875:
 45622   015640  90D8               	bcf	status,0,c
 45623   015642  3204               	rrcf	(??_getNumTxBuffersInUse+3)^(0+1280),f,c
 45624   015644  3203               	rrcf	(??_getNumTxBuffersInUse+2)^(0+1280),f,c
 45625   015646  3202               	rrcf	(??_getNumTxBuffersInUse+1)^(0+1280),f,c
 45626   015648  3201               	rrcf	??_getNumTxBuffersInUse^(0+1280),f,c
 45627   01564A                     u5870:
 45628   01564A  2EE8               	decfsz	wreg,f,c
 45629   01564C  D7F9               	goto	u5875
 45630   01564E  C501  F505         	movff	??_getNumTxBuffersInUse,getNumTxBuffersInUse@i16
 45631   015652  C502  F506         	movff	??_getNumTxBuffersInUse+1,getNumTxBuffersInUse@i16+1
 45632                           
 45633                           ;../../VLCBlib_PIC/can18_can_2.c: 539:         i16 = (int16_t)(i16 - C1FIFOSTA2Hbits.FIF
      +                          OCI);
 45634   015656  516D               	movf	109,w,b	;volatile
 45635   015658  0B1F               	andlw	31
 45636   01565A  6E01               	movwf	??_getNumTxBuffersInUse^(0+1280),c
 45637   01565C  5001               	movf	??_getNumTxBuffersInUse^(0+1280),w,c
 45638   01565E  5C05               	subwf	getNumTxBuffersInUse@i16^(0+1280),w,c
 45639   015660  6E05               	movwf	getNumTxBuffersInUse@i16^(0+1280),c
 45640   015662  5006               	movf	(getNumTxBuffersInUse@i16+1)^(0+1280),w,c
 45641   015664  A0D8               	btfss	status,0,c
 45642   015666  0406               	decf	(getNumTxBuffersInUse@i16+1)^(0+1280),w,c
 45643   015668  6E06               	movwf	(getNumTxBuffersInUse@i16+1)^(0+1280),c
 45644                           
 45645                           ;../../VLCBlib_PIC/can18_can_2.c: 540:         if (i16 < 0) i16 += 32;
 45646   01566A  AE06               	btfss	(getNumTxBuffersInUse@i16+1)^(0+1280),7,c
 45647   01566C  D004               	goto	l8311
 45648                           
 45649                           ; BSR set to: 1
 45650   01566E  0E20               	movlw	32
 45651   015670  2605               	addwf	getNumTxBuffersInUse@i16^(0+1280),f,c
 45652   015672  0E00               	movlw	0
 45653   015674  2206               	addwfc	(getNumTxBuffersInUse@i16+1)^(0+1280),f,c
 45654   015676                     l8311:
 45655                           
 45656                           ; BSR set to: 1
 45657                           ;../../VLCBlib_PIC/can18_can_2.c: 541:         return (uint8_t)i16;
 45658   015676  5005               	movf	getNumTxBuffersInUse@i16^(0+1280),w,c
 45659                           
 45660                           ; BSR set to: 1
 45661   015678  0012               	return		;funcret
 45662   01567A                     __end_of_getNumTxBuffersInUse:
 45663                           	callstack 0
 45664                           
 45665 ;; *************** function _getNumRxBuffersInUse *****************
 45666 ;; Defined at:
 45667 ;;		line 550 in file "../../VLCBlib_PIC/can18_can_2.c"
 45668 ;; Parameters:    Size  Location     Type
 45669 ;;		None
 45670 ;; Auto vars:     Size  Location     Type
 45671 ;;  i16             2    4[COMRAM] short 
 45672 ;; Return value:  Size  Location     Type
 45673 ;;                  1    wreg      unsigned char 
 45674 ;; Registers used:
 45675 ;;		wreg, status,2, status,0
 45676 ;; Tracked objects:
 45677 ;;		On entry : 0/0
 45678 ;;		On exit  : 0/0
 45679 ;;		Unchanged: 0/0
 45680 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45682 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45683 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45684 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45685 ;;Total ram usage:        6 bytes
 45686 ;; Hardware stack levels used: 1
 45687 ;; Hardware stack levels required when called: 1
 45688 ;; This function calls:
 45689 ;;		Nothing
 45690 ;; This function is called by:
 45691 ;;		_canGetDiagnostic
 45692 ;;		_canSendMessage
 45693 ;;		_canReceiveMessage
 45694 ;; This function uses a non-reentrant model
 45695 ;;
 45696                           
 45697                           	psect	text122
 45698   015792                     __ptext122:
 45699                           	callstack 0
 45700   015792                     _getNumRxBuffersInUse:
 45701                           	callstack 119
 45702                           
 45703                           ;../../VLCBlib_PIC/can18_can_2.c: 551:     if (C1FIFOSTA3Lbits.TFERFFIF) {
 45704                           
 45705                           ; BSR set to: 1
 45706                           ;incstack = 0
 45707   015792  0101               	movlb	1	; () banked
 45708   015794  A578               	btfss	120,2,b	;volatile
 45709   015796  D002               	goto	l8323
 45710                           
 45711                           ; BSR set to: 1
 45712                           ;../../VLCBlib_PIC/can18_can_2.c: 552:         return 32;
 45713   015798  0E20               	movlw	32
 45714   01579A  0012               	return	
 45715   01579C                     l8323:
 45716                           
 45717                           ; BSR set to: 1
 45718                           ;../../VLCBlib_PIC/can18_can_2.c: 554:         int16_t i16;;../../VLCBlib_PIC/can18_can_
      +                          2.c: 556:         i16 = (int16_t)(((((0x3BB0 +((8 +8)*4))+((8 +8)*1))+((8 +8)*32)) - C1F
      +                          IFOUA3)/(8+8));
 45719   01579C  517C               	movf	124,w,b	;volatile
 45720   01579E  0800               	sublw	0
 45721   0157A0  6E01               	movwf	??_getNumRxBuffersInUse^(0+1280),c
 45722   0157A2  0E3E               	movlw	62
 45723   0157A4  557D               	subfwb	125,w,b	;volatile
 45724   0157A6  6E02               	movwf	(??_getNumRxBuffersInUse+1)^(0+1280),c
 45725   0157A8  0E00               	movlw	0
 45726   0157AA  557E               	subfwb	126,w,b	;volatile
 45727   0157AC  6E03               	movwf	(??_getNumRxBuffersInUse+2)^(0+1280),c
 45728   0157AE  0E00               	movlw	0
 45729   0157B0  557F               	subfwb	127,w,b	;volatile
 45730   0157B2  6E04               	movwf	(??_getNumRxBuffersInUse+3)^(0+1280),c
 45731   0157B4  0E05               	movlw	5
 45732   0157B6  D005               	goto	u5900
 45733   0157B8                     u5905:
 45734   0157B8  90D8               	bcf	status,0,c
 45735   0157BA  3204               	rrcf	(??_getNumRxBuffersInUse+3)^(0+1280),f,c
 45736   0157BC  3203               	rrcf	(??_getNumRxBuffersInUse+2)^(0+1280),f,c
 45737   0157BE  3202               	rrcf	(??_getNumRxBuffersInUse+1)^(0+1280),f,c
 45738   0157C0  3201               	rrcf	??_getNumRxBuffersInUse^(0+1280),f,c
 45739   0157C2                     u5900:
 45740   0157C2  2EE8               	decfsz	wreg,f,c
 45741   0157C4  D7F9               	goto	u5905
 45742   0157C6  C501  F505         	movff	??_getNumRxBuffersInUse,getNumRxBuffersInUse@i16
 45743   0157CA  C502  F506         	movff	??_getNumRxBuffersInUse+1,getNumRxBuffersInUse@i16+1
 45744                           
 45745                           ;../../VLCBlib_PIC/can18_can_2.c: 557:         i16 += C1FIFOSTA3Hbits.FIFOCI;
 45746   0157CE  5179               	movf	121,w,b	;volatile
 45747   0157D0  0B1F               	andlw	31
 45748   0157D2  6E01               	movwf	??_getNumRxBuffersInUse^(0+1280),c
 45749   0157D4  5001               	movf	??_getNumRxBuffersInUse^(0+1280),w,c
 45750   0157D6  2605               	addwf	getNumRxBuffersInUse@i16^(0+1280),f,c
 45751   0157D8  0E00               	movlw	0
 45752   0157DA  2206               	addwfc	(getNumRxBuffersInUse@i16+1)^(0+1280),f,c
 45753                           
 45754                           ;../../VLCBlib_PIC/can18_can_2.c: 558:         if (i16 < 0) i16 += 32;
 45755   0157DC  AE06               	btfss	(getNumRxBuffersInUse@i16+1)^(0+1280),7,c
 45756   0157DE  D004               	goto	l8327
 45757                           
 45758                           ; BSR set to: 1
 45759   0157E0  0E20               	movlw	32
 45760   0157E2  2605               	addwf	getNumRxBuffersInUse@i16^(0+1280),f,c
 45761   0157E4  0E00               	movlw	0
 45762   0157E6  2206               	addwfc	(getNumRxBuffersInUse@i16+1)^(0+1280),f,c
 45763   0157E8                     l8327:
 45764                           
 45765                           ; BSR set to: 1
 45766                           ;../../VLCBlib_PIC/can18_can_2.c: 559:         return (uint8_t) i16;
 45767   0157E8  5005               	movf	getNumRxBuffersInUse@i16^(0+1280),w,c
 45768                           
 45769                           ; BSR set to: 1
 45770   0157EA  0012               	return		;funcret
 45771   0157EC                     __end_of_getNumRxBuffersInUse:
 45772                           	callstack 0
 45773                           
 45774 ;; *************** function _getNextWriteMessage *****************
 45775 ;; Defined at:
 45776 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 45777 ;; Parameters:    Size  Location     Type
 45778 ;;  q               2    0[COMRAM] PTR struct MessageQueue
 45779 ;;		 -> rxQueue(5), 
 45780 ;; Auto vars:     Size  Location     Type
 45781 ;;  wr              1   12[COMRAM] unsigned char 
 45782 ;; Return value:  Size  Location     Type
 45783 ;;                  2    0[COMRAM] PTR struct Message
 45784 ;; Registers used:
 45785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45786 ;; Tracked objects:
 45787 ;;		On entry : 0/0
 45788 ;;		On exit  : 0/0
 45789 ;;		Unchanged: 0/0
 45790 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45791 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45793 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45794 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45795 ;;Total ram usage:       13 bytes
 45796 ;; Hardware stack levels used: 1
 45797 ;; Hardware stack levels required when called: 1
 45798 ;; This function calls:
 45799 ;;		Nothing
 45800 ;; This function is called by:
 45801 ;;		_canSendMessage
 45802 ;; This function uses a non-reentrant model
 45803 ;;
 45804                           
 45805                           	psect	text123
 45806   013B7A                     __ptext123:
 45807                           	callstack 0
 45808   013B7A                     _getNextWriteMessage:
 45809                           	callstack 119
 45810                           
 45811                           ; BSR set to: 1
 45812                           ;incstack = 0
 45813   013B7A  EE20 F002          	lfsr	2,2
 45814   013B7E  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 45815   013B80  26D9               	addwf	fsr2l,f,c
 45816   013B82  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 45817   013B84  22DA               	addwfc	fsr2h,f,c
 45818   013B86  50DF               	movf	indf2,w,c
 45819   013B88  6E04               	movwf	??_getNextWriteMessage^(0+1280),c
 45820   013B8A  6A05               	clrf	(??_getNextWriteMessage+1)^(0+1280),c
 45821   013B8C  EE20 F004          	lfsr	2,4
 45822   013B90  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 45823   013B92  26D9               	addwf	fsr2l,f,c
 45824   013B94  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 45825   013B96  22DA               	addwfc	fsr2h,f,c
 45826   013B98  50DF               	movf	indf2,w,c
 45827   013B9A  6E06               	movwf	(??_getNextWriteMessage+2)^(0+1280),c
 45828   013B9C  0EFF               	movlw	255
 45829   013B9E  2406               	addwf	(??_getNextWriteMessage+2)^(0+1280),w,c
 45830   013BA0  6E07               	movwf	(??_getNextWriteMessage+3)^(0+1280),c
 45831   013BA2  6A08               	clrf	(??_getNextWriteMessage+4)^(0+1280),c
 45832   013BA4  0EFF               	movlw	255
 45833   013BA6  2208               	addwfc	(??_getNextWriteMessage+4)^(0+1280),f,c
 45834   013BA8  EE20 F003          	lfsr	2,3
 45835   013BAC  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 45836   013BAE  26D9               	addwf	fsr2l,f,c
 45837   013BB0  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 45838   013BB2  22DA               	addwfc	fsr2h,f,c
 45839   013BB4  50DF               	movf	indf2,w,c
 45840   013BB6  6E09               	movwf	(??_getNextWriteMessage+5)^(0+1280),c
 45841   013BB8  6A0A               	clrf	(??_getNextWriteMessage+6)^(0+1280),c
 45842   013BBA  0E01               	movlw	1
 45843   013BBC  2609               	addwf	(??_getNextWriteMessage+5)^(0+1280),f,c
 45844   013BBE  0E00               	movlw	0
 45845   013BC0  220A               	addwfc	(??_getNextWriteMessage+6)^(0+1280),f,c
 45846   013BC2  5007               	movf	(??_getNextWriteMessage+3)^(0+1280),w,c
 45847   013BC4  1409               	andwf	(??_getNextWriteMessage+5)^(0+1280),w,c
 45848   013BC6  6E0B               	movwf	(??_getNextWriteMessage+7)^(0+1280),c
 45849   013BC8  5008               	movf	(??_getNextWriteMessage+4)^(0+1280),w,c
 45850   013BCA  140A               	andwf	(??_getNextWriteMessage+6)^(0+1280),w,c
 45851   013BCC  6E0C               	movwf	(??_getNextWriteMessage+8)^(0+1280),c
 45852   013BCE  5004               	movf	??_getNextWriteMessage^(0+1280),w,c
 45853   013BD0  180B               	xorwf	(??_getNextWriteMessage+7)^(0+1280),w,c
 45854   013BD2  E109               	bnz	l8369
 45855   013BD4  5005               	movf	(??_getNextWriteMessage+1)^(0+1280),w,c
 45856   013BD6  180C               	xorwf	(??_getNextWriteMessage+8)^(0+1280),w,c
 45857   013BD8  A4D8               	btfss	status,2,c
 45858   013BDA  D005               	goto	l8369
 45859   013BDC  0E00               	movlw	0
 45860   013BDE  6E01               	movwf	?_getNextWriteMessage^(0+1280),c
 45861   013BE0  0E00               	movlw	0
 45862   013BE2  6E02               	movwf	(?_getNextWriteMessage+1)^(0+1280),c
 45863   013BE4  0012               	return	
 45864   013BE6                     l8369:
 45865   013BE6  EE20 F003          	lfsr	2,3
 45866   013BEA  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 45867   013BEC  26D9               	addwf	fsr2l,f,c
 45868   013BEE  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 45869   013BF0  22DA               	addwfc	fsr2h,f,c
 45870   013BF2  50DF               	movf	indf2,w,c
 45871   013BF4  6E0D               	movwf	getNextWriteMessage@wr^(0+1280),c
 45872   013BF6  EE20 F003          	lfsr	2,3
 45873   013BFA  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 45874   013BFC  26D9               	addwf	fsr2l,f,c
 45875   013BFE  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 45876   013C00  22DA               	addwfc	fsr2h,f,c
 45877   013C02  2ADF               	incf	indf2,f,c
 45878   013C04  EE20 F004          	lfsr	2,4
 45879   013C08  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 45880   013C0A  26D9               	addwf	fsr2l,f,c
 45881   013C0C  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 45882   013C0E  22DA               	addwfc	fsr2h,f,c
 45883   013C10  EE10 F003          	lfsr	1,3
 45884   013C14  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 45885   013C16  26E1               	addwf	fsr1l,f,c
 45886   013C18  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 45887   013C1A  22E2               	addwfc	fsr1h,f,c
 45888   013C1C  50DE               	movf	postinc2,w,c
 45889   013C1E  5CE6               	subwf	postinc1,w,c
 45890   013C20  A0D8               	btfss	status,0,c
 45891   013C22  D007               	goto	l8375
 45892   013C24  EE20 F003          	lfsr	2,3
 45893   013C28  5001               	movf	getNextWriteMessage@q^(0+1280),w,c
 45894   013C2A  26D9               	addwf	fsr2l,f,c
 45895   013C2C  5002               	movf	(getNextWriteMessage@q+1)^(0+1280),w,c
 45896   013C2E  22DA               	addwfc	fsr2h,f,c
 45897   013C30  6ADF               	clrf	indf2,c
 45898   013C32                     l8375:
 45899   013C32  500D               	movf	getNextWriteMessage@wr^(0+1280),w,c
 45900   013C34  0D09               	mullw	9
 45901   013C36  C4F3 F504          	movff	prodl,??_getNextWriteMessage
 45902   013C3A  C4F4 F505          	movff	prodh,??_getNextWriteMessage+1
 45903   013C3E  C501  F4D9         	movff	getNextWriteMessage@q,fsr2l
 45904   013C42  C502  F4DA         	movff	getNextWriteMessage@q+1,fsr2h
 45905   013C46  C4DE F506          	movff	postinc2,??_getNextWriteMessage+2
 45906   013C4A  C4DD F507          	movff	postdec2,??_getNextWriteMessage+3
 45907   013C4E  5004               	movf	??_getNextWriteMessage^(0+1280),w,c
 45908   013C50  2406               	addwf	(??_getNextWriteMessage+2)^(0+1280),w,c
 45909   013C52  6E01               	movwf	?_getNextWriteMessage^(0+1280),c
 45910   013C54  5005               	movf	(??_getNextWriteMessage+1)^(0+1280),w,c
 45911   013C56  2007               	addwfc	(??_getNextWriteMessage+3)^(0+1280),w,c
 45912   013C58  6E02               	movwf	(?_getNextWriteMessage+1)^(0+1280),c
 45913   013C5A  0012               	return		;funcret
 45914   013C5C                     __end_of_getNextWriteMessage:
 45915                           	callstack 0
 45916                           
 45917 ;; *************** function _incrementProducerCounter *****************
 45918 ;; Defined at:
 45919 ;;		line 167 in file "../../VLCBlib_PIC/event_producer_simple.c"
 45920 ;; Parameters:    Size  Location     Type
 45921 ;;		None
 45922 ;; Auto vars:     Size  Location     Type
 45923 ;;		None
 45924 ;; Return value:  Size  Location     Type
 45925 ;;                  1    wreg      void 
 45926 ;; Registers used:
 45927 ;;		status,2, status,0
 45928 ;; Tracked objects:
 45929 ;;		On entry : 0/0
 45930 ;;		On exit  : 0/0
 45931 ;;		Unchanged: 0/0
 45932 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45937 ;;Total ram usage:        0 bytes
 45938 ;; Hardware stack levels used: 1
 45939 ;; Hardware stack levels required when called: 1
 45940 ;; This function calls:
 45941 ;;		Nothing
 45942 ;; This function is called by:
 45943 ;;		_canpanSendProducedEvent
 45944 ;; This function uses a non-reentrant model
 45945 ;;
 45946                           
 45947                           	psect	text124
 45948   016794                     __ptext124:
 45949                           	callstack 0
 45950   016794                     _incrementProducerCounter:
 45951                           	callstack 121
 45952                           
 45953                           ;../../VLCBlib_PIC/event_producer_simple.c: 168:     producerDiagnostics[1].asUint++;
 45954                           
 45955                           ;incstack = 0
 45956   016794  0105               	movlb	5	; () banked
 45957   016796  4BC4               	infsnz	(_producerDiagnostics+2)& (0+255),f,b
 45958   016798  2BC5               	incf	(_producerDiagnostics+3)& (0+255),f,b
 45959                           
 45960                           ; BSR set to: 5
 45961   01679A  0012               	return		;funcret
 45962   01679C                     __end_of_incrementProducerCounter:
 45963                           	callstack 0
 45964                           
 45965 ;; *************** function _doFlash *****************
 45966 ;; Defined at:
 45967 ;;		line 110 in file "../canpan3Leds.c"
 45968 ;; Parameters:    Size  Location     Type
 45969 ;;		None
 45970 ;; Auto vars:     Size  Location     Type
 45971 ;;  ledNo           1   14[COMRAM] unsigned char 
 45972 ;; Return value:  Size  Location     Type
 45973 ;;                  1    wreg      void 
 45974 ;; Registers used:
 45975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 45976 ;; Tracked objects:
 45977 ;;		On entry : 0/0
 45978 ;;		On exit  : 0/0
 45979 ;;		Unchanged: 0/0
 45980 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 45981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45983 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45984 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 45985 ;;Total ram usage:        3 bytes
 45986 ;; Hardware stack levels used: 1
 45987 ;; Hardware stack levels required when called: 3
 45988 ;; This function calls:
 45989 ;;		_clearLed
 45990 ;;		_setLed
 45991 ;; This function is called by:
 45992 ;;		_loop
 45993 ;; This function uses a non-reentrant model
 45994 ;;
 45995                           
 45996                           	psect	text125
 45997   014B70                     __ptext125:
 45998                           	callstack 0
 45999   014B70                     _doFlash:
 46000                           	callstack 122
 46001                           
 46002                           ;../canpan3Leds.c: 111:     uint8_t ledNo;;../canpan3Leds.c: 113:     for (ledNo=0; ledN
      +                          o<(4*8); ledNo++) {
 46003                           
 46004                           ; BSR set to: 5
 46005                           ;incstack = 0
 46006   014B70  6A0F               	clrf	doFlash@ledNo^(0+1280),c
 46007   014B72  D018               	goto	l11623
 46008   014B74                     l11609:
 46009                           
 46010                           ;../canpan3Leds.c: 116:                 if (flashToggle) {
 46011   014B74  0105               	movlb	5	; () banked
 46012   014B76  519A               	movf	_flashToggle& (0+255),w,b
 46013   014B78  B4D8               	btfsc	status,2,c
 46014   014B7A  D004               	goto	l11613
 46015                           
 46016                           ; BSR set to: 5
 46017                           ;../canpan3Leds.c: 117:                     setLed(ledNo);
 46018   014B7C  500F               	movf	doFlash@ledNo^(0+1280),w,c
 46019   014B7E  EC86  F0AF         	call	_setLed
 46020                           
 46021                           ;../canpan3Leds.c: 118:                 } else {
 46022   014B82  D02A               	goto	l11625
 46023   014B84                     l11613:
 46024                           
 46025                           ; BSR set to: 5
 46026                           ;../canpan3Leds.c: 119:                     clearLed(ledNo);
 46027   014B84  500F               	movf	doFlash@ledNo^(0+1280),w,c
 46028   014B86  ECE4  F0AE         	call	_clearLed
 46029   014B8A  D026               	goto	l11625
 46030   014B8C                     l11615:
 46031                           
 46032                           ;../canpan3Leds.c: 123:                 if (flashToggle) {
 46033   014B8C  0105               	movlb	5	; () banked
 46034   014B8E  519A               	movf	_flashToggle& (0+255),w,b
 46035   014B90  B4D8               	btfsc	status,2,c
 46036   014B92  D004               	goto	l11619
 46037                           
 46038                           ; BSR set to: 5
 46039                           ;../canpan3Leds.c: 124:                     clearLed(ledNo);
 46040   014B94  500F               	movf	doFlash@ledNo^(0+1280),w,c
 46041   014B96  ECE4  F0AE         	call	_clearLed
 46042                           
 46043                           ;../canpan3Leds.c: 125:                 } else {
 46044   014B9A  D01E               	goto	l11625
 46045   014B9C                     l11619:
 46046                           
 46047                           ; BSR set to: 5
 46048                           ;../canpan3Leds.c: 126:                     setLed(ledNo);
 46049   014B9C  500F               	movf	doFlash@ledNo^(0+1280),w,c
 46050   014B9E  EC86  F0AF         	call	_setLed
 46051   014BA2  D01A               	goto	l11625
 46052   014BA4                     l11623:
 46053   014BA4  0E21               	movlw	low _ledStates
 46054   014BA6  240F               	addwf	doFlash@ledNo^(0+1280),w,c
 46055   014BA8  6ED9               	movwf	fsr2l,c
 46056   014BAA  6ADA               	clrf	fsr2h,c
 46057   014BAC  0E06               	movlw	high _ledStates
 46058   014BAE  22DA               	addwfc	fsr2h,f,c
 46059   014BB0  50DF               	movf	indf2,w,c
 46060   014BB2  6E0D               	movwf	??_doFlash^(0+1280),c
 46061   014BB4  6A0E               	clrf	(??_doFlash+1)^(0+1280),c
 46062                           
 46063                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 46064                           ; Switch size 1, requested type "simple"
 46065                           ; Number of cases is 1, Range of values is 0 to 0
 46066                           ; switch strategies available:
 46067                           ; Name         Instructions Cycles
 46068                           ; simple_byte            4     3 (average)
 46069                           ;	Chosen strategy is simple_byte
 46070   014BB6  500E               	movf	(??_doFlash+1)^(0+1280),w,c
 46071   014BB8  0A00               	xorlw	0	; case 0
 46072   014BBA  A4D8               	btfss	status,2,c
 46073   014BBC  D00D               	goto	l11625
 46074                           
 46075                           ; Switch size 1, requested type "simple"
 46076                           ; Number of cases is 4, Range of values is 0 to 3
 46077                           ; switch strategies available:
 46078                           ; Name         Instructions Cycles
 46079                           ; simple_byte           13     7 (average)
 46080                           ;	Chosen strategy is simple_byte
 46081   014BBE  500D               	movf	??_doFlash^(0+1280),w,c
 46082   014BC0  0A00               	xorlw	0	; case 0
 46083   014BC2  B4D8               	btfsc	status,2,c
 46084   014BC4  D009               	goto	l11625
 46085   014BC6  0A01               	xorlw	1	; case 1
 46086   014BC8  B4D8               	btfsc	status,2,c
 46087   014BCA  D006               	goto	l11625
 46088   014BCC  0A03               	xorlw	3	; case 2
 46089   014BCE  B4D8               	btfsc	status,2,c
 46090   014BD0  D7D1               	goto	l11609
 46091   014BD2  0A01               	xorlw	1	; case 3
 46092   014BD4  B4D8               	btfsc	status,2,c
 46093   014BD6  D7DA               	goto	l11615
 46094   014BD8                     l11625:
 46095                           
 46096                           ;../canpan3Leds.c: 134:     }
 46097   014BD8  2A0F               	incf	doFlash@ledNo^(0+1280),f,c
 46098   014BDA  0E1F               	movlw	31
 46099   014BDC  640F               	cpfsgt	doFlash@ledNo^(0+1280),c
 46100   014BDE  D7E2               	goto	l11623
 46101                           
 46102                           ;../canpan3Leds.c: 135:     flashToggle = !flashToggle;
 46103   014BE0  0105               	movlb	5	; () banked
 46104   014BE2  519A               	movf	_flashToggle& (0+255),w,b
 46105   014BE4  A4D8               	btfss	status,2,c
 46106   014BE6  D002               	goto	u9900
 46107   014BE8  0E01               	movlw	1
 46108   014BEA  D001               	goto	u9910
 46109   014BEC                     u9900:
 46110   014BEC  0E00               	movlw	0
 46111   014BEE                     u9910:
 46112   014BEE  6F9A               	movwf	_flashToggle& (0+255),b
 46113                           
 46114                           ; BSR set to: 5
 46115   014BF0  0012               	return		;funcret
 46116   014BF2                     __end_of_doFlash:
 46117                           	callstack 0
 46118                           
 46119 ;; *************** function _setLed *****************
 46120 ;; Defined at:
 46121 ;;		line 208 in file "../canpan3Outputs.c"
 46122 ;; Parameters:    Size  Location     Type
 46123 ;;  no              1    wreg     unsigned char 
 46124 ;; Auto vars:     Size  Location     Type
 46125 ;;  no              1   10[COMRAM] unsigned char 
 46126 ;; Return value:  Size  Location     Type
 46127 ;;                  1    wreg      void 
 46128 ;; Registers used:
 46129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 46130 ;; Tracked objects:
 46131 ;;		On entry : 0/0
 46132 ;;		On exit  : 0/0
 46133 ;;		Unchanged: 0/0
 46134 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46136 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46137 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46138 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46139 ;;Total ram usage:        3 bytes
 46140 ;; Hardware stack levels used: 1
 46141 ;; Hardware stack levels required when called: 2
 46142 ;; This function calls:
 46143 ;;		___awdiv
 46144 ;; This function is called by:
 46145 ;;		_setLedStateNoSave
 46146 ;;		_doFlash
 46147 ;; This function uses a non-reentrant model
 46148 ;;
 46149                           
 46150                           	psect	text126
 46151   015F0C                     __ptext126:
 46152                           	callstack 0
 46153   015F0C                     _setLed:
 46154                           	callstack 121
 46155                           
 46156                           ; BSR set to: 5
 46157                           ;incstack = 0
 46158                           ;setLed@no stored from wreg
 46159   015F0C  6E0B               	movwf	setLed@no^(0+1280),c
 46160                           
 46161                           ;../canpan3Outputs.c: 209:     ledMatrix[no/8] |= (1 << (no%8));
 46162   015F0E  C50B  F509         	movff	setLed@no,??_setLed
 46163   015F12  0E07               	movlw	7
 46164   015F14  1609               	andwf	??_setLed^(0+1280),f,c
 46165   015F16  0E01               	movlw	1
 46166   015F18  6E0A               	movwf	(??_setLed+1)^(0+1280),c
 46167   015F1A  2A09               	incf	??_setLed^(0+1280),f,c
 46168   015F1C  D002               	goto	u6324
 46169   015F1E                     u6325:
 46170   015F1E  90D8               	bcf	status,0,c
 46171   015F20  360A               	rlcf	(??_setLed+1)^(0+1280),f,c
 46172   015F22                     u6324:
 46173   015F22  2E09               	decfsz	??_setLed^(0+1280),f,c
 46174   015F24  D7FC               	goto	u6325
 46175   015F26  C50B  F501         	movff	setLed@no,___awdiv@dividend
 46176   015F2A  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 46177   015F2C  0E00               	movlw	0
 46178   015F2E  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 46179   015F30  0E08               	movlw	8
 46180   015F32  6E03               	movwf	___awdiv@divisor^(0+1280),c
 46181   015F34  ECF9  F0A5         	call	___awdiv	;wreg free
 46182   015F38  0E68               	movlw	low _ledMatrix
 46183   015F3A  2401               	addwf	?___awdiv^(0+1280),w,c
 46184   015F3C  6ED9               	movwf	fsr2l,c
 46185   015F3E  0E05               	movlw	high _ledMatrix
 46186   015F40  2002               	addwfc	(?___awdiv+1)^(0+1280),w,c
 46187   015F42  6EDA               	movwf	fsr2h,c
 46188   015F44  500A               	movf	(??_setLed+1)^(0+1280),w,c
 46189   015F46  12DF               	iorwf	indf2,f,c
 46190   015F48  0012               	return		;funcret
 46191   015F4A                     __end_of_setLed:
 46192                           	callstack 0
 46193                           
 46194 ;; *************** function _clearLed *****************
 46195 ;; Defined at:
 46196 ;;		line 215 in file "../canpan3Outputs.c"
 46197 ;; Parameters:    Size  Location     Type
 46198 ;;  no              1    wreg     unsigned char 
 46199 ;; Auto vars:     Size  Location     Type
 46200 ;;  no              1   11[COMRAM] unsigned char 
 46201 ;; Return value:  Size  Location     Type
 46202 ;;                  1    wreg      void 
 46203 ;; Registers used:
 46204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 46205 ;; Tracked objects:
 46206 ;;		On entry : 0/0
 46207 ;;		On exit  : 0/0
 46208 ;;		Unchanged: 0/0
 46209 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46212 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46213 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46214 ;;Total ram usage:        4 bytes
 46215 ;; Hardware stack levels used: 1
 46216 ;; Hardware stack levels required when called: 2
 46217 ;; This function calls:
 46218 ;;		___awdiv
 46219 ;; This function is called by:
 46220 ;;		_setLedStateNoSave
 46221 ;;		_doFlash
 46222 ;; This function uses a non-reentrant model
 46223 ;;
 46224                           
 46225                           	psect	text127
 46226   015DC8                     __ptext127:
 46227                           	callstack 0
 46228   015DC8                     _clearLed:
 46229                           	callstack 121
 46230                           
 46231                           ;incstack = 0
 46232                           ;clearLed@no stored from wreg
 46233   015DC8  6E0C               	movwf	clearLed@no^(0+1280),c
 46234                           
 46235                           ;../canpan3Outputs.c: 216:     ledMatrix[no/8] &= ~(1 << (no%8));
 46236   015DCA  C50C  F509         	movff	clearLed@no,??_clearLed
 46237   015DCE  0E07               	movlw	7
 46238   015DD0  1609               	andwf	??_clearLed^(0+1280),f,c
 46239   015DD2  0E01               	movlw	1
 46240   015DD4  6E0A               	movwf	(??_clearLed+1)^(0+1280),c
 46241   015DD6  2A09               	incf	??_clearLed^(0+1280),f,c
 46242   015DD8  D002               	goto	u6334
 46243   015DDA                     u6335:
 46244   015DDA  90D8               	bcf	status,0,c
 46245   015DDC  360A               	rlcf	(??_clearLed+1)^(0+1280),f,c
 46246   015DDE                     u6334:
 46247   015DDE  2E09               	decfsz	??_clearLed^(0+1280),f,c
 46248   015DE0  D7FC               	goto	u6335
 46249   015DE2  500A               	movf	(??_clearLed+1)^(0+1280),w,c
 46250   015DE4  0AFF               	xorlw	255
 46251   015DE6  6E0B               	movwf	(??_clearLed+2)^(0+1280),c
 46252   015DE8  C50C  F501         	movff	clearLed@no,___awdiv@dividend
 46253   015DEC  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 46254   015DEE  0E00               	movlw	0
 46255   015DF0  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 46256   015DF2  0E08               	movlw	8
 46257   015DF4  6E03               	movwf	___awdiv@divisor^(0+1280),c
 46258   015DF6  ECF9  F0A5         	call	___awdiv	;wreg free
 46259   015DFA  0E68               	movlw	low _ledMatrix
 46260   015DFC  2401               	addwf	?___awdiv^(0+1280),w,c
 46261   015DFE  6ED9               	movwf	fsr2l,c
 46262   015E00  0E05               	movlw	high _ledMatrix
 46263   015E02  2002               	addwfc	(?___awdiv+1)^(0+1280),w,c
 46264   015E04  6EDA               	movwf	fsr2h,c
 46265   015E06  500B               	movf	(??_clearLed+2)^(0+1280),w,c
 46266   015E08  16DF               	andwf	indf2,f,c
 46267   015E0A  0012               	return		;funcret
 46268   015E0C                     __end_of_clearLed:
 46269                           	callstack 0
 46270                           
 46271 ;; *************** function _initRomOps *****************
 46272 ;; Defined at:
 46273 ;;		line 156 in file "../../VLCBlib_PIC/nvm.c"
 46274 ;; Parameters:    Size  Location     Type
 46275 ;;		None
 46276 ;; Auto vars:     Size  Location     Type
 46277 ;;		None
 46278 ;; Return value:  Size  Location     Type
 46279 ;;                  1    wreg      void 
 46280 ;; Registers used:
 46281 ;;		wreg, status,2
 46282 ;; Tracked objects:
 46283 ;;		On entry : 0/0
 46284 ;;		On exit  : 0/0
 46285 ;;		Unchanged: 0/0
 46286 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46291 ;;Total ram usage:        0 bytes
 46292 ;; Hardware stack levels used: 1
 46293 ;; Hardware stack levels required when called: 1
 46294 ;; This function calls:
 46295 ;;		Nothing
 46296 ;; This function is called by:
 46297 ;;		_main
 46298 ;; This function uses a non-reentrant model
 46299 ;;
 46300                           
 46301                           	psect	text128
 46302   01668A                     __ptext128:
 46303                           	callstack 0
 46304   01668A                     _initRomOps:
 46305                           	callstack 125
 46306                           
 46307                           ;../../VLCBlib_PIC/nvm.c: 157:     flashFlags.asByte = 0;
 46308                           
 46309                           ;incstack = 0
 46310   01668A  0105               	movlb	5	; () banked
 46311   01668C  6B8B               	clrf	_flashFlags& (0+255),b
 46312                           
 46313                           ; BSR set to: 5
 46314                           ;../../VLCBlib_PIC/nvm.c: 158:     flashBlock = 0x0800;
 46315   01668E  0E00               	movlw	0
 46316   016690  6F77               	movwf	_flashBlock& (0+255),b
 46317   016692  0E08               	movlw	8
 46318   016694  6F78               	movwf	(_flashBlock+1)& (0+255),b
 46319   016696  0E00               	movlw	0
 46320   016698  6F79               	movwf	(_flashBlock+2)& (0+255),b
 46321                           
 46322                           ; BSR set to: 5
 46323                           ;../../VLCBlib_PIC/nvm.c: 160:     TBLPTRU = 0;
 46324   01669A  6AF8               	clrf	248,c	;volatile
 46325                           
 46326                           ; BSR set to: 5
 46327                           ;../../VLCBlib_PIC/nvm.c: 162:     NVMCON1bits.WRERR = 0;
 46328   01669C  0100               	movlb	0	; () banked
 46329   01669E  9F41               	bcf	65,7,b	;volsfr
 46330                           
 46331                           ; BSR set to: 0
 46332   0166A0  0012               	return		;funcret
 46333   0166A2                     __end_of_initRomOps:
 46334                           	callstack 0
 46335                           
 46336 ;; *************** function _checkPowerOnPb *****************
 46337 ;; Defined at:
 46338 ;;		line 966 in file "../../VLCBlib_PIC/vlcb.c"
 46339 ;; Parameters:    Size  Location     Type
 46340 ;;		None
 46341 ;; Auto vars:     Size  Location     Type
 46342 ;;  i               1   66[COMRAM] unsigned char 
 46343 ;; Return value:  Size  Location     Type
 46344 ;;                  1    wreg      void 
 46345 ;; Registers used:
 46346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46347 ;; Tracked objects:
 46348 ;;		On entry : 0/0
 46349 ;;		On exit  : 0/0
 46350 ;;		Unchanged: 0/0
 46351 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46353 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46355 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46356 ;;Total ram usage:        1 bytes
 46357 ;; Hardware stack levels used: 1
 46358 ;; Hardware stack levels required when called: 11
 46359 ;; This function calls:
 46360 ;;		_APP_testMode
 46361 ;;		_factoryReset
 46362 ;;		_pbDownTimer
 46363 ;;		_pbUpTimer
 46364 ;;		_showStatus
 46365 ;; This function is called by:
 46366 ;;		_main
 46367 ;; This function uses a non-reentrant model
 46368 ;;
 46369                           
 46370                           	psect	text129
 46371   0159F2                     __ptext129:
 46372                           	callstack 0
 46373   0159F2                     _checkPowerOnPb:
 46374                           	callstack 115
 46375                           
 46376                           ;../../VLCBlib_PIC/vlcb.c: 967:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 970:     if ((!
      +                          (PORTAbits.RA3))) {
 46377                           
 46378                           ; BSR set to: 0
 46379                           ;incstack = 0
 46380   0159F2  B6CE               	btfsc	206,3,c	;volatile
 46381   0159F4  0012               	return	
 46382                           
 46383                           ;../../VLCBlib_PIC/vlcb.c: 972:         i = pbDownTimer(28);
 46384   0159F6  0E1C               	movlw	28
 46385   0159F8  ECE0  F0A2         	call	_pbDownTimer
 46386   0159FC  6E43               	movwf	checkPowerOnPb@i^(0+1280),c
 46387                           
 46388                           ;../../VLCBlib_PIC/vlcb.c: 973:         if (i == 0) {
 46389   0159FE  5043               	movf	checkPowerOnPb@i^(0+1280),w,c
 46390   015A00  B4D8               	btfsc	status,2,c
 46391   015A02  0012               	return	
 46392                           
 46393                           ;../../VLCBlib_PIC/vlcb.c: 975:             return;
 46394   015A04  0E04               	movlw	4
 46395   015A06  6043               	cpfslt	checkPowerOnPb@i^(0+1280),c
 46396   015A08  D003               	goto	l12509
 46397                           
 46398                           ;../../VLCBlib_PIC/vlcb.c: 977:             APP_testMode();
 46399   015A0A  EC7D  F0B3         	call	_APP_testMode	;wreg free
 46400                           
 46401                           ;../../VLCBlib_PIC/vlcb.c: 978:         } else if (i >= 8) {
 46402   015A0E  0012               	return	
 46403   015A10                     l12509:
 46404   015A10  0E07               	movlw	7
 46405   015A12  6443               	cpfsgt	checkPowerOnPb@i^(0+1280),c
 46406   015A14  0012               	return	
 46407                           
 46408                           ;../../VLCBlib_PIC/vlcb.c: 979:             showStatus(STATUS_RESET_WARNING);
 46409   015A16  0E04               	movlw	4
 46410   015A18  EC9F  F09E         	call	_showStatus
 46411                           
 46412                           ;../../VLCBlib_PIC/vlcb.c: 981:             i = pbUpTimer(5);
 46413   015A1C  0E05               	movlw	5
 46414   015A1E  EC8B  F0A2         	call	_pbUpTimer
 46415   015A22  6E43               	movwf	checkPowerOnPb@i^(0+1280),c
 46416                           
 46417                           ;../../VLCBlib_PIC/vlcb.c: 982:             if (i == 0) {
 46418   015A24  5043               	movf	checkPowerOnPb@i^(0+1280),w,c
 46419   015A26  B4D8               	btfsc	status,2,c
 46420   015A28  0012               	return	
 46421                           
 46422                           ;../../VLCBlib_PIC/vlcb.c: 986:             i = pbDownTimer(5);
 46423   015A2A  0E05               	movlw	5
 46424   015A2C  ECE0  F0A2         	call	_pbDownTimer
 46425   015A30  6E43               	movwf	checkPowerOnPb@i^(0+1280),c
 46426                           
 46427                           ;../../VLCBlib_PIC/vlcb.c: 987:             if ((i>=2) && (i < 4)) {
 46428   015A32  0E01               	movlw	1
 46429   015A34  6443               	cpfsgt	checkPowerOnPb@i^(0+1280),c
 46430   015A36  0012               	return	
 46431   015A38  0E04               	movlw	4
 46432   015A3A  6043               	cpfslt	checkPowerOnPb@i^(0+1280),c
 46433   015A3C  0012               	return	
 46434                           
 46435                           ;../../VLCBlib_PIC/vlcb.c: 988:                 factoryReset();
 46436   015A3E  EC2E  F09E         	call	_factoryReset	;wreg free
 46437   015A42  0012               	return		;funcret
 46438   015A44                     __end_of_checkPowerOnPb:
 46439                           	callstack 0
 46440                           
 46441 ;; *************** function _showStatus *****************
 46442 ;; Defined at:
 46443 ;;		line 235 in file "../../VLCBlib_PIC/statusLeds2.c"
 46444 ;; Parameters:    Size  Location     Type
 46445 ;;  s               1    wreg     enum E23436
 46446 ;; Auto vars:     Size  Location     Type
 46447 ;;  s               1    2[COMRAM] enum E23436
 46448 ;; Return value:  Size  Location     Type
 46449 ;;                  1    wreg      void 
 46450 ;; Registers used:
 46451 ;;		wreg, status,2, status,0
 46452 ;; Tracked objects:
 46453 ;;		On entry : 0/0
 46454 ;;		On exit  : 0/0
 46455 ;;		Unchanged: 0/0
 46456 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46458 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46459 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46460 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46461 ;;Total ram usage:        3 bytes
 46462 ;; Hardware stack levels used: 1
 46463 ;; Hardware stack levels required when called: 1
 46464 ;; This function calls:
 46465 ;;		Nothing
 46466 ;; This function is called by:
 46467 ;;		_setLEDsByMode
 46468 ;;		_checkPowerOnPb
 46469 ;;		_poll
 46470 ;; This function uses a non-reentrant model
 46471 ;;
 46472                           
 46473                           	psect	text130
 46474   013D3E                     __ptext130:
 46475                           	callstack 0
 46476   013D3E                     _showStatus:
 46477                           	callstack 122
 46478                           
 46479                           ;incstack = 0
 46480                           ;showStatus@s stored from wreg
 46481   013D3E  6E03               	movwf	showStatus@s^(0+1280),c
 46482                           
 46483                           ;../../VLCBlib_PIC/statusLeds2.c: 236:     switch (s) {
 46484   013D40  D03E               	goto	l9189
 46485   013D42                     l2056:
 46486                           
 46487                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[0] = LED_OFF;
 46488   013D42  0105               	movlb	5	; () banked
 46489   013D44  6B7C               	clrf	_ledState& (0+255),b
 46490                           
 46491                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             ledState[1] = LED_OFF;
 46492   013D46  6B7D               	clrf	(_ledState+1)& (0+255),b
 46493                           
 46494                           ;../../VLCBlib_PIC/statusLeds2.c: 240:             break;
 46495   013D48  0012               	return	
 46496   013D4A                     l9159:
 46497                           
 46498                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[0] = LED_ON;
 46499   013D4A  0E01               	movlw	1
 46500   013D4C  0105               	movlb	5	; () banked
 46501   013D4E  6F7C               	movwf	_ledState& (0+255),b
 46502                           
 46503                           ; BSR set to: 5
 46504                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             ledState[1] = LED_OFF;
 46505   013D50  6B7D               	clrf	(_ledState+1)& (0+255),b
 46506                           
 46507                           ;../../VLCBlib_PIC/statusLeds2.c: 244:             break;
 46508   013D52  0012               	return	
 46509   013D54                     l2059:
 46510                           
 46511                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[0] = LED_OFF;
 46512   013D54  0105               	movlb	5	; () banked
 46513   013D56  6B7C               	clrf	_ledState& (0+255),b
 46514                           
 46515                           ; BSR set to: 5
 46516                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             ledState[1] = LED_FLASH_50_1HZ;
 46517   013D58  0E03               	movlw	3
 46518   013D5A  6F7D               	movwf	(_ledState+1)& (0+255),b
 46519                           
 46520                           ;../../VLCBlib_PIC/statusLeds2.c: 248:             break;
 46521   013D5C  0012               	return	
 46522   013D5E                     l2062:
 46523                           
 46524                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[0] = LED_OFF;
 46525                           
 46526                           ;../../VLCBlib_PIC/statusLeds2.c: 253:         case STATUS_RECEIVE_ERROR:
 46527   013D5E  0105               	movlb	5	; () banked
 46528   013D60  6B7C               	clrf	_ledState& (0+255),b
 46529                           
 46530                           ; BSR set to: 5
 46531                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             ledState[1] = LED_ON;
 46532   013D62  0E01               	movlw	1
 46533   013D64  6F7D               	movwf	(_ledState+1)& (0+255),b
 46534                           
 46535                           ;../../VLCBlib_PIC/statusLeds2.c: 256:             break;
 46536   013D66  0012               	return	
 46537   013D68                     l2065:
 46538                           
 46539                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[1] = 0;
 46540   013D68  0105               	movlb	5	; () banked
 46541   013D6A  6B7B               	clrf	(_flashCounter+1)& (0+255),b
 46542                           
 46543                           ; BSR set to: 5
 46544                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             flashCounter[0] = 25;
 46545   013D6C  0E19               	movlw	25
 46546   013D6E  6F7A               	movwf	_flashCounter& (0+255),b
 46547                           
 46548                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[0] = LED_FLASH_50_2HZ;
 46549   013D70  0E02               	movlw	2
 46550   013D72  6F7C               	movwf	_ledState& (0+255),b
 46551                           
 46552                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             ledState[1] = LED_FLASH_50_2HZ;
 46553   013D74  0E02               	movlw	2
 46554   013D76  6F7D               	movwf	(_ledState+1)& (0+255),b
 46555                           
 46556                           ;../../VLCBlib_PIC/statusLeds2.c: 262:             break;
 46557   013D78  0012               	return	
 46558   013D7A                     l9169:
 46559                           
 46560                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 46561   013D7A  0105               	movlb	5	; () banked
 46562   013D7C  2991               	incf	_mode_state& (0+255),w,b
 46563   013D7E  A4D8               	btfss	status,2,c
 46564   013D80  D003               	goto	l9173
 46565                           
 46566                           ; BSR set to: 5
 46567                           ;../../VLCBlib_PIC/statusLeds2.c: 265:                 ledState[1] = LED_SINGLE_FLICKER_
      +                          ON;
 46568   013D82  0E06               	movlw	6
 46569   013D84  6F7D               	movwf	(_ledState+1)& (0+255),b
 46570                           
 46571                           ;../../VLCBlib_PIC/statusLeds2.c: 266:             } else if (mode_state == MODE_NORMAL)
      +                           {
 46572   013D86  0012               	return	
 46573   013D88                     l9173:
 46574                           
 46575                           ; BSR set to: 5
 46576   013D88  0591               	decf	_mode_state& (0+255),w,b
 46577   013D8A  A4D8               	btfss	status,2,c
 46578   013D8C  0012               	return	
 46579                           
 46580                           ; BSR set to: 5
 46581                           ;../../VLCBlib_PIC/statusLeds2.c: 267:                 ledState[0] = LED_SINGLE_FLICKER_
      +                          ON;
 46582   013D8E  0E06               	movlw	6
 46583   013D90  6F7C               	movwf	_ledState& (0+255),b
 46584   013D92  0012               	return	
 46585   013D94                     l9177:
 46586                           
 46587                           ;../../VLCBlib_PIC/statusLeds2.c: 271:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 46588   013D94  0105               	movlb	5	; () banked
 46589   013D96  2991               	incf	_mode_state& (0+255),w,b
 46590   013D98  A4D8               	btfss	status,2,c
 46591   013D9A  D003               	goto	l9181
 46592                           
 46593                           ; BSR set to: 5
 46594                           ;../../VLCBlib_PIC/statusLeds2.c: 272:                 ledState[1] = LED_LONG_FLICKER_ON
      +                          ;
 46595   013D9C  0E08               	movlw	8
 46596   013D9E  6F7D               	movwf	(_ledState+1)& (0+255),b
 46597                           
 46598                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             } else if (mode_state == MODE_NORMAL)
      +                           {
 46599   013DA0  0012               	return	
 46600   013DA2                     l9181:
 46601                           
 46602                           ; BSR set to: 5
 46603   013DA2  0591               	decf	_mode_state& (0+255),w,b
 46604   013DA4  A4D8               	btfss	status,2,c
 46605   013DA6  0012               	return	
 46606                           
 46607                           ; BSR set to: 5
 46608                           ;../../VLCBlib_PIC/statusLeds2.c: 274:                 ledState[0] = LED_LONG_FLICKER_ON
      +                          ;
 46609   013DA8  0E08               	movlw	8
 46610   013DAA  6F7C               	movwf	_ledState& (0+255),b
 46611   013DAC  0012               	return	
 46612   013DAE                     l2075:
 46613                           
 46614                           ;../../VLCBlib_PIC/statusLeds2.c: 279:             flashCounter[1] = 0;
 46615   013DAE  0105               	movlb	5	; () banked
 46616   013DB0  6B7B               	clrf	(_flashCounter+1)& (0+255),b
 46617                           
 46618                           ;../../VLCBlib_PIC/statusLeds2.c: 280:             flashCounter[0] = 0;
 46619   013DB2  6B7A               	clrf	_flashCounter& (0+255),b
 46620                           
 46621                           ; BSR set to: 5
 46622                           ;../../VLCBlib_PIC/statusLeds2.c: 281:             ledState[0] = LED_FLASH_50_2HZ;
 46623   013DB4  0E02               	movlw	2
 46624   013DB6  6F7C               	movwf	_ledState& (0+255),b
 46625                           
 46626                           ;../../VLCBlib_PIC/statusLeds2.c: 282:             ledState[1] = LED_FLASH_50_2HZ;
 46627   013DB8  0E02               	movlw	2
 46628   013DBA  6F7D               	movwf	(_ledState+1)& (0+255),b
 46629                           
 46630                           ;../../VLCBlib_PIC/statusLeds2.c: 283:             break;
 46631   013DBC  0012               	return	
 46632   013DBE                     l9189:
 46633   013DBE  5003               	movf	showStatus@s^(0+1280),w,c
 46634   013DC0  6E01               	movwf	??_showStatus^(0+1280),c
 46635   013DC2  6A02               	clrf	(??_showStatus+1)^(0+1280),c
 46636                           
 46637                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 46638                           ; Switch size 1, requested type "simple"
 46639                           ; Number of cases is 1, Range of values is 0 to 0
 46640                           ; switch strategies available:
 46641                           ; Name         Instructions Cycles
 46642                           ; simple_byte            4     3 (average)
 46643                           ;	Chosen strategy is simple_byte
 46644   013DC4  5002               	movf	(??_showStatus+1)^(0+1280),w,c
 46645   013DC6  0A00               	xorlw	0	; case 0
 46646   013DC8  A4D8               	btfss	status,2,c
 46647   013DCA  0012               	return	
 46648                           
 46649                           ; Switch size 1, requested type "simple"
 46650                           ; Number of cases is 13, Range of values is 0 to 12
 46651                           ; switch strategies available:
 46652                           ; Name         Instructions Cycles
 46653                           ; simple_byte           40    21 (average)
 46654                           ;	Chosen strategy is simple_byte
 46655   013DCC  5001               	movf	??_showStatus^(0+1280),w,c
 46656   013DCE  0A00               	xorlw	0	; case 0
 46657   013DD0  B4D8               	btfsc	status,2,c
 46658   013DD2  D7B7               	goto	l2056
 46659   013DD4  0A01               	xorlw	1	; case 1
 46660   013DD6  B4D8               	btfsc	status,2,c
 46661   013DD8  D7B8               	goto	l9159
 46662   013DDA  0A03               	xorlw	3	; case 2
 46663   013DDC  B4D8               	btfsc	status,2,c
 46664   013DDE  D7BA               	goto	l2059
 46665   013DE0  0A01               	xorlw	1	; case 3
 46666   013DE2  B4D8               	btfsc	status,2,c
 46667   013DE4  D7BC               	goto	l2062
 46668   013DE6  0A07               	xorlw	7	; case 4
 46669   013DE8  B4D8               	btfsc	status,2,c
 46670   013DEA  D7BE               	goto	l2065
 46671   013DEC  0A01               	xorlw	1	; case 5
 46672   013DEE  B4D8               	btfsc	status,2,c
 46673   013DF0  D7B6               	goto	l2062
 46674   013DF2  0A03               	xorlw	3	; case 6
 46675   013DF4  B4D8               	btfsc	status,2,c
 46676   013DF6  D7B3               	goto	l2062
 46677   013DF8  0A01               	xorlw	1	; case 7
 46678   013DFA  B4D8               	btfsc	status,2,c
 46679   013DFC  D7BE               	goto	l9169
 46680   013DFE  0A0F               	xorlw	15	; case 8
 46681   013E00  B4D8               	btfsc	status,2,c
 46682   013E02  D7C8               	goto	l9177
 46683   013E04  0A01               	xorlw	1	; case 9
 46684   013E06  B4D8               	btfsc	status,2,c
 46685   013E08  D7AA               	goto	l2062
 46686   013E0A  0A03               	xorlw	3	; case 10
 46687   013E0C  B4D8               	btfsc	status,2,c
 46688   013E0E  D7A7               	goto	l2062
 46689   013E10  0A01               	xorlw	1	; case 11
 46690   013E12  B4D8               	btfsc	status,2,c
 46691   013E14  D7CC               	goto	l2075
 46692   013E16  0A07               	xorlw	7	; case 12
 46693   013E18  A4D8               	btfss	status,2,c
 46694   013E1A  0012               	return	
 46695   013E1C  D7C8               	goto	l2075
 46696   013E1E                     __end_of_showStatus:
 46697                           	callstack 0
 46698                           
 46699 ;; *************** function _pbUpTimer *****************
 46700 ;; Defined at:
 46701 ;;		line 941 in file "../../VLCBlib_PIC/vlcb.c"
 46702 ;; Parameters:    Size  Location     Type
 46703 ;;  timeout         1    wreg     unsigned char 
 46704 ;; Auto vars:     Size  Location     Type
 46705 ;;  timeout         1   27[COMRAM] unsigned char 
 46706 ;; Return value:  Size  Location     Type
 46707 ;;                  1    wreg      unsigned char 
 46708 ;; Registers used:
 46709 ;;		wreg, status,2, status,0, cstack
 46710 ;; Tracked objects:
 46711 ;;		On entry : 0/0
 46712 ;;		On exit  : 0/0
 46713 ;;		Unchanged: 0/0
 46714 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46716 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46717 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46718 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46719 ;;Total ram usage:        5 bytes
 46720 ;; Hardware stack levels used: 1
 46721 ;; Hardware stack levels required when called: 3
 46722 ;; This function calls:
 46723 ;;		___lldiv
 46724 ;;		___lmul
 46725 ;;		_leds_poll
 46726 ;;		_tickGet
 46727 ;; This function is called by:
 46728 ;;		_checkPowerOnPb
 46729 ;; This function uses a non-reentrant model
 46730 ;;
 46731                           
 46732                           	psect	text131
 46733   014516                     __ptext131:
 46734                           	callstack 0
 46735   014516                     _pbUpTimer:
 46736                           	callstack 122
 46737                           
 46738                           ;incstack = 0
 46739                           ;pbUpTimer@timeout stored from wreg
 46740   014516  6E1C               	movwf	pbUpTimer@timeout^(0+1280),c
 46741                           
 46742                           ;../../VLCBlib_PIC/vlcb.c: 943:     pbTimer.val = tickGet();
 46743   014518  EC7A  F0AC         	call	_tickGet	;wreg free
 46744   01451C  C501  F560         	movff	?_tickGet,_pbTimer
 46745   014520  C502  F561         	movff	?_tickGet+1,_pbTimer+1
 46746   014524  C503  F562         	movff	?_tickGet+2,_pbTimer+2
 46747   014528  C504  F563         	movff	?_tickGet+3,_pbTimer+3
 46748                           
 46749                           ;../../VLCBlib_PIC/vlcb.c: 944:     while (! ((!(PORTAbits.RA3)))) {
 46750   01452C  D02C               	goto	l2274
 46751   01452E                     l12363:
 46752                           
 46753                           ;../../VLCBlib_PIC/vlcb.c: 945:         leds_poll();
 46754   01452E  EC8D  F090         	call	_leds_poll	;wreg free
 46755                           
 46756                           ;../../VLCBlib_PIC/vlcb.c: 946:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 46757   014532  EC7A  F0AC         	call	_tickGet	;wreg free
 46758   014536  0105               	movlb	5	; () banked
 46759   014538  5160               	movf	_pbTimer& (0+255),w,b
 46760   01453A  5C01               	subwf	?_tickGet^(0+1280),w,c
 46761   01453C  6E18               	movwf	??_pbUpTimer^(0+1280),c
 46762   01453E  5161               	movf	(_pbTimer+1)& (0+255),w,b
 46763   014540  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 46764   014542  6E19               	movwf	(??_pbUpTimer+1)^(0+1280),c
 46765   014544  5162               	movf	(_pbTimer+2)& (0+255),w,b
 46766   014546  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 46767   014548  6E1A               	movwf	(??_pbUpTimer+2)^(0+1280),c
 46768   01454A  5163               	movf	(_pbTimer+3)& (0+255),w,b
 46769   01454C  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 46770   01454E  6E1B               	movwf	(??_pbUpTimer+3)^(0+1280),c
 46771   014550  501C               	movf	pbUpTimer@timeout^(0+1280),w,c
 46772   014552  6E05               	movwf	___lmul@multiplier^(0+1280),c
 46773   014554  6A06               	clrf	(___lmul@multiplier+1)^(0+1280),c
 46774   014556  6A07               	clrf	(___lmul@multiplier+2)^(0+1280),c
 46775   014558  6A08               	clrf	(___lmul@multiplier+3)^(0+1280),c
 46776   01455A  0E24               	movlw	36
 46777   01455C  6E09               	movwf	___lmul@multiplicand^(0+1280),c
 46778   01455E  0EF4               	movlw	244
 46779   014560  6E0A               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 46780   014562  0E00               	movlw	0
 46781   014564  6E0B               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 46782   014566  0E00               	movlw	0
 46783   014568  6E0C               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 46784   01456A  ECA5  F0AC         	call	___lmul	;wreg free
 46785   01456E  5018               	movf	??_pbUpTimer^(0+1280),w,c
 46786   014570  5C05               	subwf	?___lmul^(0+1280),w,c
 46787   014572  5019               	movf	(??_pbUpTimer+1)^(0+1280),w,c
 46788   014574  5806               	subwfb	(?___lmul+1)^(0+1280),w,c
 46789   014576  501A               	movf	(??_pbUpTimer+2)^(0+1280),w,c
 46790   014578  5807               	subwfb	(?___lmul+2)^(0+1280),w,c
 46791   01457A  501B               	movf	(??_pbUpTimer+3)^(0+1280),w,c
 46792   01457C  5808               	subwfb	(?___lmul+3)^(0+1280),w,c
 46793   01457E  B0D8               	btfsc	status,0,c
 46794   014580  D002               	goto	l2274
 46795                           
 46796                           ;../../VLCBlib_PIC/vlcb.c: 947:             return 0;
 46797   014582  0E00               	movlw	0
 46798   014584  0012               	return	
 46799   014586                     l2274:
 46800                           
 46801                           ;../../VLCBlib_PIC/vlcb.c: 944:     while (! ((!(PORTAbits.RA3)))) {
 46802   014586  B6CE               	btfsc	206,3,c	;volatile
 46803   014588  D7D2               	goto	l12363
 46804                           
 46805                           ;../../VLCBlib_PIC/vlcb.c: 951:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 46806   01458A  EC7A  F0AC         	call	_tickGet	;wreg free
 46807   01458E  0105               	movlb	5	; () banked
 46808   014590  5160               	movf	_pbTimer& (0+255),w,b
 46809   014592  5C01               	subwf	?_tickGet^(0+1280),w,c
 46810   014594  6E0B               	movwf	___lldiv@dividend^(0+1280),c
 46811   014596  5161               	movf	(_pbTimer+1)& (0+255),w,b
 46812   014598  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 46813   01459A  6E0C               	movwf	(___lldiv@dividend+1)^(0+1280),c
 46814   01459C  5162               	movf	(_pbTimer+2)& (0+255),w,b
 46815   01459E  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 46816   0145A0  6E0D               	movwf	(___lldiv@dividend+2)^(0+1280),c
 46817   0145A2  5163               	movf	(_pbTimer+3)& (0+255),w,b
 46818   0145A4  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 46819   0145A6  6E0E               	movwf	(___lldiv@dividend+3)^(0+1280),c
 46820   0145A8  0E24               	movlw	36
 46821   0145AA  6E0F               	movwf	___lldiv@divisor^(0+1280),c
 46822   0145AC  0EF4               	movlw	244
 46823   0145AE  6E10               	movwf	(___lldiv@divisor+1)^(0+1280),c
 46824   0145B0  0E00               	movlw	0
 46825   0145B2  6E11               	movwf	(___lldiv@divisor+2)^(0+1280),c
 46826   0145B4  0E00               	movlw	0
 46827   0145B6  6E12               	movwf	(___lldiv@divisor+3)^(0+1280),c
 46828   0145B8  EC3A  F0A6         	call	___lldiv	;wreg free
 46829   0145BC  500B               	movf	?___lldiv^(0+1280),w,c
 46830   0145BE  0012               	return		;funcret
 46831   0145C0                     __end_of_pbUpTimer:
 46832                           	callstack 0
 46833                           
 46834 ;; *************** function _pbDownTimer *****************
 46835 ;; Defined at:
 46836 ;;		line 922 in file "../../VLCBlib_PIC/vlcb.c"
 46837 ;; Parameters:    Size  Location     Type
 46838 ;;  timeout         1    wreg     unsigned char 
 46839 ;; Auto vars:     Size  Location     Type
 46840 ;;  timeout         1   27[COMRAM] unsigned char 
 46841 ;; Return value:  Size  Location     Type
 46842 ;;                  1    wreg      unsigned char 
 46843 ;; Registers used:
 46844 ;;		wreg, status,2, status,0, cstack
 46845 ;; Tracked objects:
 46846 ;;		On entry : 0/0
 46847 ;;		On exit  : 0/0
 46848 ;;		Unchanged: 0/0
 46849 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46852 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46853 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46854 ;;Total ram usage:        5 bytes
 46855 ;; Hardware stack levels used: 1
 46856 ;; Hardware stack levels required when called: 3
 46857 ;; This function calls:
 46858 ;;		___lldiv
 46859 ;;		___lmul
 46860 ;;		_leds_poll
 46861 ;;		_tickGet
 46862 ;; This function is called by:
 46863 ;;		_checkPowerOnPb
 46864 ;; This function uses a non-reentrant model
 46865 ;;
 46866                           
 46867                           	psect	text132
 46868   0145C0                     __ptext132:
 46869                           	callstack 0
 46870   0145C0                     _pbDownTimer:
 46871                           	callstack 122
 46872                           
 46873                           ;incstack = 0
 46874                           ;pbDownTimer@timeout stored from wreg
 46875   0145C0  6E1C               	movwf	pbDownTimer@timeout^(0+1280),c
 46876                           
 46877                           ;../../VLCBlib_PIC/vlcb.c: 924:     pbTimer.val = tickGet();
 46878   0145C2  EC7A  F0AC         	call	_tickGet	;wreg free
 46879   0145C6  C501  F560         	movff	?_tickGet,_pbTimer
 46880   0145CA  C502  F561         	movff	?_tickGet+1,_pbTimer+1
 46881   0145CE  C503  F562         	movff	?_tickGet+2,_pbTimer+2
 46882   0145D2  C504  F563         	movff	?_tickGet+3,_pbTimer+3
 46883                           
 46884                           ;../../VLCBlib_PIC/vlcb.c: 925:     while ((!(PORTAbits.RA3))) {
 46885   0145D6  D02C               	goto	l2267
 46886   0145D8                     l12351:
 46887                           
 46888                           ;../../VLCBlib_PIC/vlcb.c: 926:         leds_poll();
 46889   0145D8  EC8D  F090         	call	_leds_poll	;wreg free
 46890                           
 46891                           ;../../VLCBlib_PIC/vlcb.c: 927:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 46892   0145DC  EC7A  F0AC         	call	_tickGet	;wreg free
 46893   0145E0  0105               	movlb	5	; () banked
 46894   0145E2  5160               	movf	_pbTimer& (0+255),w,b
 46895   0145E4  5C01               	subwf	?_tickGet^(0+1280),w,c
 46896   0145E6  6E18               	movwf	??_pbDownTimer^(0+1280),c
 46897   0145E8  5161               	movf	(_pbTimer+1)& (0+255),w,b
 46898   0145EA  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 46899   0145EC  6E19               	movwf	(??_pbDownTimer+1)^(0+1280),c
 46900   0145EE  5162               	movf	(_pbTimer+2)& (0+255),w,b
 46901   0145F0  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 46902   0145F2  6E1A               	movwf	(??_pbDownTimer+2)^(0+1280),c
 46903   0145F4  5163               	movf	(_pbTimer+3)& (0+255),w,b
 46904   0145F6  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 46905   0145F8  6E1B               	movwf	(??_pbDownTimer+3)^(0+1280),c
 46906   0145FA  501C               	movf	pbDownTimer@timeout^(0+1280),w,c
 46907   0145FC  6E05               	movwf	___lmul@multiplier^(0+1280),c
 46908   0145FE  6A06               	clrf	(___lmul@multiplier+1)^(0+1280),c
 46909   014600  6A07               	clrf	(___lmul@multiplier+2)^(0+1280),c
 46910   014602  6A08               	clrf	(___lmul@multiplier+3)^(0+1280),c
 46911   014604  0E24               	movlw	36
 46912   014606  6E09               	movwf	___lmul@multiplicand^(0+1280),c
 46913   014608  0EF4               	movlw	244
 46914   01460A  6E0A               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 46915   01460C  0E00               	movlw	0
 46916   01460E  6E0B               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 46917   014610  0E00               	movlw	0
 46918   014612  6E0C               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 46919   014614  ECA5  F0AC         	call	___lmul	;wreg free
 46920   014618  5018               	movf	??_pbDownTimer^(0+1280),w,c
 46921   01461A  5C05               	subwf	?___lmul^(0+1280),w,c
 46922   01461C  5019               	movf	(??_pbDownTimer+1)^(0+1280),w,c
 46923   01461E  5806               	subwfb	(?___lmul+1)^(0+1280),w,c
 46924   014620  501A               	movf	(??_pbDownTimer+2)^(0+1280),w,c
 46925   014622  5807               	subwfb	(?___lmul+2)^(0+1280),w,c
 46926   014624  501B               	movf	(??_pbDownTimer+3)^(0+1280),w,c
 46927   014626  5808               	subwfb	(?___lmul+3)^(0+1280),w,c
 46928   014628  B0D8               	btfsc	status,0,c
 46929   01462A  D002               	goto	l2267
 46930                           
 46931                           ;../../VLCBlib_PIC/vlcb.c: 928:             return 0;
 46932   01462C  0E00               	movlw	0
 46933   01462E  0012               	return	
 46934   014630                     l2267:
 46935                           
 46936                           ;../../VLCBlib_PIC/vlcb.c: 925:     while ((!(PORTAbits.RA3))) {
 46937   014630  A6CE               	btfss	206,3,c	;volatile
 46938   014632  D7D2               	goto	l12351
 46939                           
 46940                           ;../../VLCBlib_PIC/vlcb.c: 932:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 46941   014634  EC7A  F0AC         	call	_tickGet	;wreg free
 46942   014638  0105               	movlb	5	; () banked
 46943   01463A  5160               	movf	_pbTimer& (0+255),w,b
 46944   01463C  5C01               	subwf	?_tickGet^(0+1280),w,c
 46945   01463E  6E0B               	movwf	___lldiv@dividend^(0+1280),c
 46946   014640  5161               	movf	(_pbTimer+1)& (0+255),w,b
 46947   014642  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 46948   014644  6E0C               	movwf	(___lldiv@dividend+1)^(0+1280),c
 46949   014646  5162               	movf	(_pbTimer+2)& (0+255),w,b
 46950   014648  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 46951   01464A  6E0D               	movwf	(___lldiv@dividend+2)^(0+1280),c
 46952   01464C  5163               	movf	(_pbTimer+3)& (0+255),w,b
 46953   01464E  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 46954   014650  6E0E               	movwf	(___lldiv@dividend+3)^(0+1280),c
 46955   014652  0E24               	movlw	36
 46956   014654  6E0F               	movwf	___lldiv@divisor^(0+1280),c
 46957   014656  0EF4               	movlw	244
 46958   014658  6E10               	movwf	(___lldiv@divisor+1)^(0+1280),c
 46959   01465A  0E00               	movlw	0
 46960   01465C  6E11               	movwf	(___lldiv@divisor+2)^(0+1280),c
 46961   01465E  0E00               	movlw	0
 46962   014660  6E12               	movwf	(___lldiv@divisor+3)^(0+1280),c
 46963   014662  EC3A  F0A6         	call	___lldiv	;wreg free
 46964   014666  500B               	movf	?___lldiv^(0+1280),w,c
 46965   014668  0012               	return		;funcret
 46966   01466A                     __end_of_pbDownTimer:
 46967                           	callstack 0
 46968                           
 46969 ;; *************** function _leds_poll *****************
 46970 ;; Defined at:
 46971 ;;		line 89 in file "../../VLCBlib_PIC/statusLeds2.c"
 46972 ;; Parameters:    Size  Location     Type
 46973 ;;		None
 46974 ;; Auto vars:     Size  Location     Type
 46975 ;;		None
 46976 ;; Return value:  Size  Location     Type
 46977 ;;                  1    wreg      void 
 46978 ;; Registers used:
 46979 ;;		wreg, status,2, status,0, cstack
 46980 ;; Tracked objects:
 46981 ;;		On entry : 0/0
 46982 ;;		On exit  : 0/0
 46983 ;;		Unchanged: 0/0
 46984 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 46985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46987 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46988 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 46989 ;;Total ram usage:        4 bytes
 46990 ;; Hardware stack levels used: 1
 46991 ;; Hardware stack levels required when called: 2
 46992 ;; This function calls:
 46993 ;;		___awdiv
 46994 ;;		_tickGet
 46995 ;; This function is called by:
 46996 ;;		_pbDownTimer
 46997 ;;		_pbUpTimer
 46998 ;;		_poll
 46999 ;; This function uses a non-reentrant model
 47000 ;;
 47001                           
 47002                           	psect	text133
 47003   01211A                     __ptext133:
 47004                           	callstack 0
 47005   01211A                     _leds_poll:
 47006                           	callstack 123
 47007                           
 47008                           ;../../VLCBlib_PIC/statusLeds2.c: 90:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 47009                           
 47010                           ;incstack = 0
 47011   01211A  EC7A  F0AC         	call	_tickGet	;wreg free
 47012   01211E  0106               	movlb	6	; () banked
 47013   012120  518E               	movf	_ledTimer& (0+255),w,b
 47014   012122  5C01               	subwf	?_tickGet^(0+1280),w,c
 47015   012124  6E0B               	movwf	??_leds_poll^(0+1280),c
 47016   012126  518F               	movf	(_ledTimer+1)& (0+255),w,b
 47017   012128  5802               	subwfb	(?_tickGet+1)^(0+1280),w,c
 47018   01212A  6E0C               	movwf	(??_leds_poll+1)^(0+1280),c
 47019   01212C  5190               	movf	(_ledTimer+2)& (0+255),w,b
 47020   01212E  5803               	subwfb	(?_tickGet+2)^(0+1280),w,c
 47021   012130  6E0D               	movwf	(??_leds_poll+2)^(0+1280),c
 47022   012132  5191               	movf	(_ledTimer+3)& (0+255),w,b
 47023   012134  5804               	subwfb	(?_tickGet+3)^(0+1280),w,c
 47024   012136  6E0E               	movwf	(??_leds_poll+3)^(0+1280),c
 47025   012138  500E               	movf	(??_leds_poll+3)^(0+1280),w,c
 47026   01213A  100D               	iorwf	(??_leds_poll+2)^(0+1280),w,c
 47027   01213C  E106               	bnz	u9210
 47028   01213E  0E72               	movlw	114
 47029   012140  5C0B               	subwf	??_leds_poll^(0+1280),w,c
 47030   012142  0E02               	movlw	2
 47031   012144  580C               	subwfb	(??_leds_poll+1)^(0+1280),w,c
 47032   012146  A0D8               	btfss	status,0,c
 47033   012148  D067               	goto	l11231
 47034   01214A                     u9210:
 47035                           
 47036                           ; BSR set to: 6
 47037                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[0]++;
 47038   01214A  0105               	movlb	5	; () banked
 47039   01214C  2B7A               	incf	_flashCounter& (0+255),f,b
 47040                           
 47041                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         flashCounter[1]++;
 47042   01214E  2B7B               	incf	(_flashCounter+1)& (0+255),f,b
 47043                           
 47044                           ; BSR set to: 5
 47045                           ;../../VLCBlib_PIC/statusLeds2.c: 93:         ledTimer.val = tickGet();
 47046   012150  EC7A  F0AC         	call	_tickGet	;wreg free
 47047   012154  C501  F68E         	movff	?_tickGet,_ledTimer
 47048   012158  C502  F68F         	movff	?_tickGet+1,_ledTimer+1
 47049   01215C  C503  F690         	movff	?_tickGet+2,_ledTimer+2
 47050   012160  C504  F691         	movff	?_tickGet+3,_ledTimer+3
 47051   012164  D059               	goto	l11231
 47052   012166                     l2013:
 47053                           
 47054                           ; BSR set to: 5
 47055                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             (LATBbits.LATB6=1);
 47056   012166  8CBF               	bsf	191,6,c	;volatile
 47057   012168  D017               	goto	u9220
 47058   01216A                     l2015:
 47059                           
 47060                           ; BSR set to: 5
 47061                           ;../../VLCBlib_PIC/statusLeds2.c: 102:             (LATBbits.LATB6=0);
 47062   01216A  9CBF               	bcf	191,6,c	;volatile
 47063   01216C  D015               	goto	u9220
 47064   01216E                     l11185:
 47065                           
 47066                           ; BSR set to: 5
 47067                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             (LATBbits.LATB6=flashCounter[1]/25);
 47068   01216E  C57B  F501         	movff	_flashCounter+1,___awdiv@dividend
 47069   012172  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 47070   012174  0E00               	movlw	0
 47071   012176  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 47072   012178  0E19               	movlw	25
 47073   01217A  6E03               	movwf	___awdiv@divisor^(0+1280),c
 47074   01217C  ECF9  F0A5         	call	___awdiv	;wreg free
 47075   012180  3A01               	swapf	?___awdiv^(0+1280),f,c
 47076   012182  4601               	rlncf	?___awdiv^(0+1280),f,c
 47077   012184  4601               	rlncf	?___awdiv^(0+1280),f,c
 47078   012186  50BF               	movf	191,w,c	;volatile
 47079   012188  1801               	xorwf	?___awdiv^(0+1280),w,c
 47080   01218A  0BBF               	andlw	-65
 47081   01218C  1801               	xorwf	?___awdiv^(0+1280),w,c
 47082   01218E  6EBF               	movwf	191,c	;volatile
 47083                           
 47084                           ;../../VLCBlib_PIC/statusLeds2.c: 108:             if (flashCounter[1] >= 50) {
 47085   012190  0E31               	movlw	49
 47086   012192  0105               	movlb	5	; () banked
 47087   012194  657B               	cpfsgt	(_flashCounter+1)& (0+255),b
 47088   012196  D0C3               	goto	l11279
 47089   012198                     u9220:
 47090                           
 47091                           ; BSR set to: 5
 47092                           ;../../VLCBlib_PIC/statusLeds2.c: 109:                 flashCounter[1] = 0;
 47093   012198  6B7B               	clrf	(_flashCounter+1)& (0+255),b
 47094   01219A  D0C1               	goto	l11279
 47095   01219C                     l11191:
 47096                           
 47097                           ; BSR set to: 5
 47098                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             (LATBbits.LATB6=flashCounter[1]/50);
 47099   01219C  C57B  F501         	movff	_flashCounter+1,___awdiv@dividend
 47100   0121A0  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 47101   0121A2  0E00               	movlw	0
 47102   0121A4  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 47103   0121A6  0E32               	movlw	50
 47104   0121A8  6E03               	movwf	___awdiv@divisor^(0+1280),c
 47105   0121AA  ECF9  F0A5         	call	___awdiv	;wreg free
 47106   0121AE  3A01               	swapf	?___awdiv^(0+1280),f,c
 47107   0121B0  4601               	rlncf	?___awdiv^(0+1280),f,c
 47108   0121B2  4601               	rlncf	?___awdiv^(0+1280),f,c
 47109   0121B4  50BF               	movf	191,w,c	;volatile
 47110   0121B6  1801               	xorwf	?___awdiv^(0+1280),w,c
 47111   0121B8  0BBF               	andlw	-65
 47112   0121BA  1801               	xorwf	?___awdiv^(0+1280),w,c
 47113   0121BC  6EBF               	movwf	191,c	;volatile
 47114                           
 47115                           ;../../VLCBlib_PIC/statusLeds2.c: 115:             if (flashCounter[1] >= 100) {
 47116   0121BE  0E63               	movlw	99
 47117   0121C0  D7E8               	goto	L15
 47118   0121C2                     l11197:
 47119                           
 47120                           ; BSR set to: 5
 47121                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             (LATBbits.LATB6=flashCounter[1]/100);
 47122   0121C2  C57B  F501         	movff	_flashCounter+1,___awdiv@dividend
 47123   0121C6  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 47124   0121C8  0E00               	movlw	0
 47125   0121CA  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 47126   0121CC  0E64               	movlw	100
 47127   0121CE  6E03               	movwf	___awdiv@divisor^(0+1280),c
 47128   0121D0  ECF9  F0A5         	call	___awdiv	;wreg free
 47129   0121D4  3A01               	swapf	?___awdiv^(0+1280),f,c
 47130   0121D6  4601               	rlncf	?___awdiv^(0+1280),f,c
 47131   0121D8  4601               	rlncf	?___awdiv^(0+1280),f,c
 47132   0121DA  50BF               	movf	191,w,c	;volatile
 47133   0121DC  1801               	xorwf	?___awdiv^(0+1280),w,c
 47134   0121DE  0BBF               	andlw	-65
 47135   0121E0  1801               	xorwf	?___awdiv^(0+1280),w,c
 47136   0121E2  6EBF               	movwf	191,c	;volatile
 47137                           
 47138                           ;../../VLCBlib_PIC/statusLeds2.c: 121:             if (flashCounter[1] >= 200) {
 47139   0121E4  0EC7               	movlw	199
 47140   0121E6  D7D5               	goto	L15
 47141   0121E8                     l2022:
 47142                           
 47143                           ; BSR set to: 5
 47144                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             (LATBbits.LATB6=1);
 47145   0121E8  8CBF               	bsf	191,6,c	;volatile
 47146                           
 47147                           ; BSR set to: 5
 47148                           ;../../VLCBlib_PIC/statusLeds2.c: 127:             if (flashCounter[1] >= 25) {
 47149   0121EA  0E18               	movlw	24
 47150   0121EC  657B               	cpfsgt	(_flashCounter+1)& (0+255),b
 47151   0121EE  D097               	goto	l11279
 47152                           
 47153                           ; BSR set to: 5
 47154                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 flashCounter[1] = 0;
 47155   0121F0  6B7B               	clrf	(_flashCounter+1)& (0+255),b
 47156                           
 47157                           ;../../VLCBlib_PIC/statusLeds2.c: 129:                 ledState[1] = LED_OFF;
 47158   0121F2  6B7D               	clrf	(_ledState+1)& (0+255),b
 47159   0121F4  D094               	goto	l11279
 47160   0121F6                     l2024:
 47161                           
 47162                           ; BSR set to: 5
 47163                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             (LATBbits.LATB6=0);
 47164   0121F6  9CBF               	bcf	191,6,c	;volatile
 47165                           
 47166                           ; BSR set to: 5
 47167                           ;../../VLCBlib_PIC/statusLeds2.c: 134:             if (flashCounter[1] >= 25) {
 47168   0121F8  0E18               	movlw	24
 47169   0121FA  657B               	cpfsgt	(_flashCounter+1)& (0+255),b
 47170   0121FC  D090               	goto	l11279
 47171                           
 47172                           ; BSR set to: 5
 47173                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 flashCounter[1] = 0;
 47174   0121FE  6B7B               	clrf	(_flashCounter+1)& (0+255),b
 47175                           
 47176                           ; BSR set to: 5
 47177                           ;../../VLCBlib_PIC/statusLeds2.c: 136:                 ledState[1] = LED_ON;
 47178   012200  0E01               	movlw	1
 47179   012202  6F7D               	movwf	(_ledState+1)& (0+255),b
 47180   012204  D08C               	goto	l11279
 47181   012206                     l2026:
 47182                           
 47183                           ; BSR set to: 5
 47184                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             (LATBbits.LATB6=1);
 47185   012206  8CBF               	bsf	191,6,c	;volatile
 47186                           
 47187                           ; BSR set to: 5
 47188                           ;../../VLCBlib_PIC/statusLeds2.c: 141:             if (flashCounter[1] >= 50) {
 47189   012208  0E31               	movlw	49
 47190   01220A  D7F0               	goto	L16
 47191   01220C                     l2028:
 47192                           
 47193                           ; BSR set to: 5
 47194                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             (LATBbits.LATB6=0);
 47195   01220C  9CBF               	bcf	191,6,c	;volatile
 47196                           
 47197                           ; BSR set to: 5
 47198                           ;../../VLCBlib_PIC/statusLeds2.c: 148:             if (flashCounter[1] >= 50) {
 47199   01220E  0E31               	movlw	49
 47200   012210  D7F4               	goto	L17
 47201   012212                     l2030:
 47202                           
 47203                           ; BSR set to: 5
 47204                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             (LATBbits.LATB6=0);
 47205   012212  9CBF               	bcf	191,6,c	;volatile
 47206                           
 47207                           ; BSR set to: 5
 47208                           ;../../VLCBlib_PIC/statusLeds2.c: 155:             if (flashCounter[1] >= 100) {
 47209   012214  0E63               	movlw	99
 47210   012216  D7F1               	goto	L17
 47211   012218                     l11231:
 47212   012218  0105               	movlb	5	; () banked
 47213   01221A  517D               	movf	(_ledState+1)& (0+255),w,b
 47214   01221C  6E0B               	movwf	??_leds_poll^(0+1280),c
 47215   01221E  6A0C               	clrf	(??_leds_poll+1)^(0+1280),c
 47216                           
 47217                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 47218                           ; Switch size 1, requested type "simple"
 47219                           ; Number of cases is 1, Range of values is 0 to 0
 47220                           ; switch strategies available:
 47221                           ; Name         Instructions Cycles
 47222                           ; simple_byte            4     3 (average)
 47223                           ;	Chosen strategy is simple_byte
 47224   012220  500C               	movf	(??_leds_poll+1)^(0+1280),w,c
 47225   012222  0A00               	xorlw	0	; case 0
 47226   012224  A4D8               	btfss	status,2,c
 47227   012226  D07B               	goto	l11279
 47228                           
 47229                           ; BSR set to: 5
 47230                           ; Switch size 1, requested type "simple"
 47231                           ; Number of cases is 10, Range of values is 0 to 9
 47232                           ; switch strategies available:
 47233                           ; Name         Instructions Cycles
 47234                           ; simple_byte           31    16 (average)
 47235                           ;	Chosen strategy is simple_byte
 47236   012228  500B               	movf	??_leds_poll^(0+1280),w,c
 47237   01222A  0A00               	xorlw	0	; case 0
 47238   01222C  B4D8               	btfsc	status,2,c
 47239   01222E  D79D               	goto	l2015
 47240   012230  0A01               	xorlw	1	; case 1
 47241   012232  B4D8               	btfsc	status,2,c
 47242   012234  D798               	goto	l2013
 47243   012236  0A03               	xorlw	3	; case 2
 47244   012238  B4D8               	btfsc	status,2,c
 47245   01223A  D799               	goto	l11185
 47246   01223C  0A01               	xorlw	1	; case 3
 47247   01223E  B4D8               	btfsc	status,2,c
 47248   012240  D7AD               	goto	l11191
 47249   012242  0A07               	xorlw	7	; case 4
 47250   012244  B4D8               	btfsc	status,2,c
 47251   012246  D7BD               	goto	l11197
 47252   012248  0A01               	xorlw	1	; case 5
 47253   01224A  B4D8               	btfsc	status,2,c
 47254   01224C  D7D4               	goto	l2024
 47255   01224E  0A03               	xorlw	3	; case 6
 47256   012250  B4D8               	btfsc	status,2,c
 47257   012252  D7CA               	goto	l2022
 47258   012254  0A01               	xorlw	1	; case 7
 47259   012256  B4D8               	btfsc	status,2,c
 47260   012258  D7D9               	goto	l2028
 47261   01225A  0A0F               	xorlw	15	; case 8
 47262   01225C  B4D8               	btfsc	status,2,c
 47263   01225E  D7D3               	goto	l2026
 47264   012260  0A01               	xorlw	1	; case 9
 47265   012262  B4D8               	btfsc	status,2,c
 47266   012264  D7D6               	goto	l2030
 47267   012266  D05B               	goto	l11279
 47268   012268                     l2033:
 47269                           
 47270                           ; BSR set to: 5
 47271                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             (LATBbits.LATB7=1);
 47272   012268  8EBF               	bsf	191,7,c	;volatile
 47273                           
 47274                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             flashCounter[0] = 0;
 47275   01226A  6B7A               	clrf	_flashCounter& (0+255),b
 47276                           
 47277                           ;../../VLCBlib_PIC/statusLeds2.c: 166:             break;
 47278   01226C  0012               	return	
 47279   01226E                     l2035:
 47280                           
 47281                           ; BSR set to: 5
 47282                           ;../../VLCBlib_PIC/statusLeds2.c: 168:             (LATBbits.LATB7=0);
 47283   01226E  9EBF               	bcf	191,7,c	;volatile
 47284                           
 47285                           ;../../VLCBlib_PIC/statusLeds2.c: 169:             flashCounter[0] = 0;
 47286   012270  6B7A               	clrf	_flashCounter& (0+255),b
 47287                           
 47288                           ;../../VLCBlib_PIC/statusLeds2.c: 170:             break;
 47289   012272  0012               	return	
 47290   012274                     l11233:
 47291                           
 47292                           ; BSR set to: 5
 47293                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             (LATBbits.LATB7=flashCounter[0]/25);
 47294   012274  C57A  F501         	movff	_flashCounter,___awdiv@dividend
 47295   012278  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 47296   01227A  0E00               	movlw	0
 47297   01227C  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 47298   01227E  0E19               	movlw	25
 47299   012280  6E03               	movwf	___awdiv@divisor^(0+1280),c
 47300   012282  ECF9  F0A5         	call	___awdiv	;wreg free
 47301   012286  3201               	rrcf	?___awdiv^(0+1280),f,c
 47302   012288  3201               	rrcf	?___awdiv^(0+1280),f,c
 47303   01228A  50BF               	movf	191,w,c	;volatile
 47304   01228C  1801               	xorwf	?___awdiv^(0+1280),w,c
 47305   01228E  0B7F               	andlw	-129
 47306   012290  1801               	xorwf	?___awdiv^(0+1280),w,c
 47307   012292  6EBF               	movwf	191,c	;volatile
 47308                           
 47309                           ;../../VLCBlib_PIC/statusLeds2.c: 174:             if (flashCounter[0] >= 50) {
 47310   012294  0E31               	movlw	49
 47311   012296  D013               	goto	L18
 47312   012298                     u9300:
 47313                           
 47314                           ; BSR set to: 5
 47315                           ;../../VLCBlib_PIC/statusLeds2.c: 175:                 flashCounter[0] = 0;
 47316   012298  6B7A               	clrf	_flashCounter& (0+255),b
 47317   01229A  0012               	return	
 47318   01229C                     l11239:
 47319                           
 47320                           ; BSR set to: 5
 47321                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             (LATBbits.LATB7=flashCounter[0]/50);
 47322   01229C  C57A  F501         	movff	_flashCounter,___awdiv@dividend
 47323   0122A0  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 47324   0122A2  0E00               	movlw	0
 47325   0122A4  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 47326   0122A6  0E32               	movlw	50
 47327   0122A8  6E03               	movwf	___awdiv@divisor^(0+1280),c
 47328   0122AA  ECF9  F0A5         	call	___awdiv	;wreg free
 47329   0122AE  3201               	rrcf	?___awdiv^(0+1280),f,c
 47330   0122B0  3201               	rrcf	?___awdiv^(0+1280),f,c
 47331   0122B2  50BF               	movf	191,w,c	;volatile
 47332   0122B4  1801               	xorwf	?___awdiv^(0+1280),w,c
 47333   0122B6  0B7F               	andlw	-129
 47334   0122B8  1801               	xorwf	?___awdiv^(0+1280),w,c
 47335   0122BA  6EBF               	movwf	191,c	;volatile
 47336                           
 47337                           ;../../VLCBlib_PIC/statusLeds2.c: 181:             if (flashCounter[0] >= 100) {
 47338   0122BC  0E63               	movlw	99
 47339   0122BE                     L18:
 47340   0122BE  0105               	movlb	5	; () banked
 47341   0122C0  657A               	cpfsgt	_flashCounter& (0+255),b
 47342   0122C2  0012               	return	
 47343   0122C4  D7E9               	goto	u9300
 47344   0122C6                     l11245:
 47345                           
 47346                           ; BSR set to: 5
 47347                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             (LATBbits.LATB7=flashCounter[0]/100);
 47348   0122C6  C57A  F501         	movff	_flashCounter,___awdiv@dividend
 47349   0122CA  6A02               	clrf	(___awdiv@dividend+1)^(0+1280),c
 47350   0122CC  0E00               	movlw	0
 47351   0122CE  6E04               	movwf	(___awdiv@divisor+1)^(0+1280),c
 47352   0122D0  0E64               	movlw	100
 47353   0122D2  6E03               	movwf	___awdiv@divisor^(0+1280),c
 47354   0122D4  ECF9  F0A5         	call	___awdiv	;wreg free
 47355   0122D8  3201               	rrcf	?___awdiv^(0+1280),f,c
 47356   0122DA  3201               	rrcf	?___awdiv^(0+1280),f,c
 47357   0122DC  50BF               	movf	191,w,c	;volatile
 47358   0122DE  1801               	xorwf	?___awdiv^(0+1280),w,c
 47359   0122E0  0B7F               	andlw	-129
 47360   0122E2  1801               	xorwf	?___awdiv^(0+1280),w,c
 47361   0122E4  6EBF               	movwf	191,c	;volatile
 47362                           
 47363                           ;../../VLCBlib_PIC/statusLeds2.c: 187:             if (flashCounter[0] >= 200) {
 47364   0122E6  0EC7               	movlw	199
 47365   0122E8  D7EA               	goto	L18
 47366   0122EA                     l2042:
 47367                           
 47368                           ; BSR set to: 5
 47369                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             (LATBbits.LATB7=1);
 47370   0122EA  8EBF               	bsf	191,7,c	;volatile
 47371                           
 47372                           ; BSR set to: 5
 47373                           ;../../VLCBlib_PIC/statusLeds2.c: 193:             if (flashCounter[0] >= 25) {
 47374   0122EC  0E18               	movlw	24
 47375   0122EE  D00C               	goto	L20
 47376   0122F0                     u9330:
 47377                           
 47378                           ; BSR set to: 5
 47379                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 flashCounter[0] = 0;
 47380   0122F0  6B7A               	clrf	_flashCounter& (0+255),b
 47381                           
 47382                           ;../../VLCBlib_PIC/statusLeds2.c: 195:                 ledState[0] = LED_OFF;
 47383   0122F2  6B7C               	clrf	_ledState& (0+255),b
 47384   0122F4  0012               	return	
 47385   0122F6                     l2044:
 47386                           
 47387                           ; BSR set to: 5
 47388                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             (LATBbits.LATB7=0);
 47389   0122F6  9EBF               	bcf	191,7,c	;volatile
 47390                           
 47391                           ; BSR set to: 5
 47392                           ;../../VLCBlib_PIC/statusLeds2.c: 200:             if (flashCounter[0] >= 25) {
 47393   0122F8  0E18               	movlw	24
 47394   0122FA  D00B               	goto	L19
 47395   0122FC                     u9340:
 47396                           
 47397                           ; BSR set to: 5
 47398                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 flashCounter[0] = 0;
 47399   0122FC  6B7A               	clrf	_flashCounter& (0+255),b
 47400                           
 47401                           ; BSR set to: 5
 47402                           ;../../VLCBlib_PIC/statusLeds2.c: 202:                 ledState[0] = LED_ON;
 47403   0122FE  0E01               	movlw	1
 47404   012300  6F7C               	movwf	_ledState& (0+255),b
 47405   012302  0012               	return	
 47406   012304                     l2046:
 47407                           
 47408                           ; BSR set to: 5
 47409                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             (LATBbits.LATB7=1);
 47410   012304  8EBF               	bsf	191,7,c	;volatile
 47411                           
 47412                           ; BSR set to: 5
 47413                           ;../../VLCBlib_PIC/statusLeds2.c: 207:             if (flashCounter[0] >= 50) {
 47414   012306  0E31               	movlw	49
 47415   012308                     L20:
 47416   012308  657A               	cpfsgt	_flashCounter& (0+255),b
 47417   01230A  0012               	return	
 47418   01230C  D7F1               	goto	u9330
 47419   01230E                     l2048:
 47420                           
 47421                           ; BSR set to: 5
 47422                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             (LATBbits.LATB7=0);
 47423   01230E  9EBF               	bcf	191,7,c	;volatile
 47424                           
 47425                           ; BSR set to: 5
 47426                           ;../../VLCBlib_PIC/statusLeds2.c: 214:             if (flashCounter[0] >= 50) {
 47427   012310  0E31               	movlw	49
 47428   012312                     L19:
 47429   012312  657A               	cpfsgt	_flashCounter& (0+255),b
 47430   012314  0012               	return	
 47431   012316  D7F2               	goto	u9340
 47432   012318                     l2050:
 47433                           
 47434                           ; BSR set to: 5
 47435                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             (LATBbits.LATB7=0);
 47436   012318  9EBF               	bcf	191,7,c	;volatile
 47437                           
 47438                           ; BSR set to: 5
 47439                           ;../../VLCBlib_PIC/statusLeds2.c: 221:             if (flashCounter[0] >= 100) {
 47440   01231A  0E63               	movlw	99
 47441   01231C  D7FA               	goto	L19
 47442   01231E                     l11279:
 47443                           
 47444                           ; BSR set to: 5
 47445   01231E  517C               	movf	_ledState& (0+255),w,b
 47446   012320  6E0B               	movwf	??_leds_poll^(0+1280),c
 47447   012322  6A0C               	clrf	(??_leds_poll+1)^(0+1280),c
 47448                           
 47449                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 47450                           ; Switch size 1, requested type "simple"
 47451                           ; Number of cases is 1, Range of values is 0 to 0
 47452                           ; switch strategies available:
 47453                           ; Name         Instructions Cycles
 47454                           ; simple_byte            4     3 (average)
 47455                           ;	Chosen strategy is simple_byte
 47456   012324  500C               	movf	(??_leds_poll+1)^(0+1280),w,c
 47457   012326  0A00               	xorlw	0	; case 0
 47458   012328  A4D8               	btfss	status,2,c
 47459   01232A  0012               	return	
 47460                           
 47461                           ; BSR set to: 5
 47462                           ; Switch size 1, requested type "simple"
 47463                           ; Number of cases is 10, Range of values is 0 to 9
 47464                           ; switch strategies available:
 47465                           ; Name         Instructions Cycles
 47466                           ; simple_byte           31    16 (average)
 47467                           ;	Chosen strategy is simple_byte
 47468   01232C  500B               	movf	??_leds_poll^(0+1280),w,c
 47469   01232E  0A00               	xorlw	0	; case 0
 47470   012330  B4D8               	btfsc	status,2,c
 47471   012332  D79D               	goto	l2035
 47472   012334  0A01               	xorlw	1	; case 1
 47473   012336  B4D8               	btfsc	status,2,c
 47474   012338  D797               	goto	l2033
 47475   01233A  0A03               	xorlw	3	; case 2
 47476   01233C  B4D8               	btfsc	status,2,c
 47477   01233E  D79A               	goto	l11233
 47478   012340  0A01               	xorlw	1	; case 3
 47479   012342  B4D8               	btfsc	status,2,c
 47480   012344  D7AB               	goto	l11239
 47481   012346  0A07               	xorlw	7	; case 4
 47482   012348  B4D8               	btfsc	status,2,c
 47483   01234A  D7BD               	goto	l11245
 47484   01234C  0A01               	xorlw	1	; case 5
 47485   01234E  B4D8               	btfsc	status,2,c
 47486   012350  D7D2               	goto	l2044
 47487   012352  0A03               	xorlw	3	; case 6
 47488   012354  B4D8               	btfsc	status,2,c
 47489   012356  D7C9               	goto	l2042
 47490   012358  0A01               	xorlw	1	; case 7
 47491   01235A  B4D8               	btfsc	status,2,c
 47492   01235C  D7D8               	goto	l2048
 47493   01235E  0A0F               	xorlw	15	; case 8
 47494   012360  B4D8               	btfsc	status,2,c
 47495   012362  D7D0               	goto	l2046
 47496   012364  0A01               	xorlw	1	; case 9
 47497   012366  A4D8               	btfss	status,2,c
 47498   012368  0012               	return	
 47499   01236A  D7D6               	goto	l2050
 47500   01236C                     __end_of_leds_poll:
 47501                           	callstack 0
 47502                           
 47503 ;; *************** function _tickGet *****************
 47504 ;; Defined at:
 47505 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 47506 ;; Parameters:    Size  Location     Type
 47507 ;;		None
 47508 ;; Auto vars:     Size  Location     Type
 47509 ;;  currentTime     4    6[COMRAM] struct _TickValue
 47510 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 47511 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 47512 ;; Return value:  Size  Location     Type
 47513 ;;                  4    0[COMRAM] unsigned long 
 47514 ;; Registers used:
 47515 ;;		wreg, status,2, status,0
 47516 ;; Tracked objects:
 47517 ;;		On entry : 0/0
 47518 ;;		On exit  : 0/0
 47519 ;;		Unchanged: 0/0
 47520 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 47521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47522 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47524 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47525 ;;Total ram usage:       10 bytes
 47526 ;; Hardware stack levels used: 1
 47527 ;; Hardware stack levels required when called: 1
 47528 ;; This function calls:
 47529 ;;		Nothing
 47530 ;; This function is called by:
 47531 ;;		_setup
 47532 ;;		_loop
 47533 ;;		_canPowerUp
 47534 ;;		_startEnumeration
 47535 ;;		_handleSelfEnumeration
 47536 ;;		_processEnumeration
 47537 ;;		_mnsPowerUp
 47538 ;;		_mnsPoll
 47539 ;;		_leds_powerUp
 47540 ;;		_leds_poll
 47541 ;;		_pbDownTimer
 47542 ;;		_pbUpTimer
 47543 ;;		_poll
 47544 ;; This function uses a non-reentrant model
 47545 ;;
 47546                           
 47547                           	psect	text134
 47548   0158F4                     __ptext134:
 47549                           	callstack 0
 47550   0158F4                     _tickGet:
 47551                           	callstack 124
 47552                           
 47553                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 47554                           
 47555                           ; BSR set to: 5
 47556                           ;incstack = 0
 47557   0158F4  6A09               	clrf	(tickGet@currentTime+2)^(0+1280),c
 47558                           
 47559                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 47560   0158F6  6A0A               	clrf	(tickGet@currentTime+3)^(0+1280),c
 47561                           
 47562                           ;../../VLCBlib_PIC/ticktime.c: 169:     TMR0IE = 0;
 47563   0158F8  9EA1               	bcf	1185,7,c	;volatile
 47564   0158FA                     l8181:
 47565                           
 47566                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = TMR0IF;
 47567   0158FA  0E00               	movlw	0
 47568   0158FC  BEB1               	btfsc	1201,7,c	;volatile
 47569   0158FE  0E01               	movlw	1
 47570   015900  6E06               	movwf	tickGet@IntFlag1^(0+1280),c
 47571                           
 47572                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 47573   015902  C318 F507          	movff	792,tickGet@currentTime	;volatile
 47574                           
 47575                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 47576   015906  C319 F508          	movff	793,tickGet@currentTime+1	;volatile
 47577                           
 47578                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = TMR0IF;
 47579   01590A  0E00               	movlw	0
 47580   01590C  BEB1               	btfsc	1201,7,c	;volatile
 47581   01590E  0E01               	movlw	1
 47582   015910  6E05               	movwf	tickGet@IntFlag2^(0+1280),c
 47583                           
 47584                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 47585   015912  5005               	movf	tickGet@IntFlag2^(0+1280),w,c
 47586   015914  1806               	xorwf	tickGet@IntFlag1^(0+1280),w,c
 47587   015916  A4D8               	btfss	status,2,c
 47588   015918  D7F0               	goto	l8181
 47589                           
 47590                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 47591   01591A  5006               	movf	tickGet@IntFlag1^(0+1280),w,c
 47592   01591C  B4D8               	btfsc	status,2,c
 47593   01591E  D006               	goto	l8199
 47594                           
 47595                           ;../../VLCBlib_PIC/ticktime.c: 178:         TMR0IF = 0;
 47596   015920  9EB1               	bcf	1201,7,c	;volatile
 47597                           
 47598                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 47599   015922  0105               	movlb	5	; () banked
 47600   015924  2B8A               	incf	_timerExtension1& (0+255),f,b	;volatile
 47601                           
 47602                           ; BSR set to: 5
 47603                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 47604   015926  518A               	movf	_timerExtension1& (0+255),w,b	;volatile
 47605   015928  B4D8               	btfsc	status,2,c
 47606                           
 47607                           ; BSR set to: 5
 47608                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 47609   01592A  2B89               	incf	_timerExtension2& (0+255),f,b	;volatile
 47610   01592C                     l8199:
 47611                           
 47612                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 47613   01592C  0105               	movlb	5	; () banked
 47614   01592E  518A               	movf	_timerExtension1& (0+255),w,b	;volatile
 47615   015930  2609               	addwf	(tickGet@currentTime+2)^(0+1280),f,c
 47616                           
 47617                           ; BSR set to: 5
 47618                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 47619   015932  5189               	movf	_timerExtension2& (0+255),w,b	;volatile
 47620   015934  260A               	addwf	(tickGet@currentTime+3)^(0+1280),f,c
 47621                           
 47622                           ; BSR set to: 5
 47623                           ;../../VLCBlib_PIC/ticktime.c: 191:     TMR0IE = 1;
 47624   015936  8EA1               	bsf	1185,7,c	;volatile
 47625                           
 47626                           ; BSR set to: 5
 47627                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 47628   015938  C507  F501         	movff	tickGet@currentTime,?_tickGet
 47629   01593C  C508  F502         	movff	tickGet@currentTime+1,?_tickGet+1
 47630   015940  C509  F503         	movff	tickGet@currentTime+2,?_tickGet+2
 47631   015944  C50A  F504         	movff	tickGet@currentTime+3,?_tickGet+3
 47632                           
 47633                           ; BSR set to: 5
 47634   015948  0012               	return		;funcret
 47635   01594A                     __end_of_tickGet:
 47636                           	callstack 0
 47637                           
 47638 ;; *************** function ___awdiv *****************
 47639 ;; Defined at:
 47640 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
 47641 ;; Parameters:    Size  Location     Type
 47642 ;;  dividend        2    0[COMRAM] int 
 47643 ;;  divisor         2    2[COMRAM] int 
 47644 ;; Auto vars:     Size  Location     Type
 47645 ;;  quotient        2    6[COMRAM] int 
 47646 ;;  sign            1    5[COMRAM] unsigned char 
 47647 ;;  counter         1    4[COMRAM] unsigned char 
 47648 ;; Return value:  Size  Location     Type
 47649 ;;                  2    0[COMRAM] int 
 47650 ;; Registers used:
 47651 ;;		wreg, status,2, status,0
 47652 ;; Tracked objects:
 47653 ;;		On entry : 0/0
 47654 ;;		On exit  : 0/0
 47655 ;;		Unchanged: 0/0
 47656 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 47657 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47658 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47660 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47661 ;;Total ram usage:        8 bytes
 47662 ;; Hardware stack levels used: 1
 47663 ;; Hardware stack levels required when called: 1
 47664 ;; This function calls:
 47665 ;;		Nothing
 47666 ;; This function is called by:
 47667 ;;		_APP_processConsumedEvent
 47668 ;;		_setLed
 47669 ;;		_clearLed
 47670 ;;		_leds_poll
 47671 ;;		_testLed
 47672 ;; This function uses a non-reentrant model
 47673 ;;
 47674                           
 47675                           	psect	text135
 47676   014BF2                     __ptext135:
 47677                           	callstack 0
 47678   014BF2                     ___awdiv:
 47679                           	callstack 121
 47680                           
 47681                           ; BSR set to: 5
 47682                           ;incstack = 0
 47683   014BF2  6A06               	clrf	___awdiv@sign^(0+1280),c
 47684   014BF4  AE04               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
 47685   014BF6  D006               	goto	l8605
 47686   014BF8  6C03               	negf	___awdiv@divisor^(0+1280),c
 47687   014BFA  1E04               	comf	(___awdiv@divisor+1)^(0+1280),f,c
 47688   014BFC  B0D8               	btfsc	status,0,c
 47689   014BFE  2A04               	incf	(___awdiv@divisor+1)^(0+1280),f,c
 47690   014C00  0E01               	movlw	1
 47691   014C02  6E06               	movwf	___awdiv@sign^(0+1280),c
 47692   014C04                     l8605:
 47693   014C04  AE02               	btfss	(___awdiv@dividend+1)^(0+1280),7,c
 47694   014C06  D006               	goto	l8611
 47695   014C08  6C01               	negf	___awdiv@dividend^(0+1280),c
 47696   014C0A  1E02               	comf	(___awdiv@dividend+1)^(0+1280),f,c
 47697   014C0C  B0D8               	btfsc	status,0,c
 47698   014C0E  2A02               	incf	(___awdiv@dividend+1)^(0+1280),f,c
 47699   014C10  0E01               	movlw	1
 47700   014C12  1A06               	xorwf	___awdiv@sign^(0+1280),f,c
 47701   014C14                     l8611:
 47702   014C14  0E00               	movlw	0
 47703   014C16  6E08               	movwf	(___awdiv@quotient+1)^(0+1280),c
 47704   014C18  0E00               	movlw	0
 47705   014C1A  6E07               	movwf	___awdiv@quotient^(0+1280),c
 47706   014C1C  5003               	movf	___awdiv@divisor^(0+1280),w,c
 47707   014C1E  1004               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
 47708   014C20  B4D8               	btfsc	status,2,c
 47709   014C22  D01C               	goto	l8633
 47710   014C24  0E01               	movlw	1
 47711   014C26  6E05               	movwf	___awdiv@counter^(0+1280),c
 47712   014C28  D004               	goto	l8619
 47713   014C2A                     l8617:
 47714   014C2A  90D8               	bcf	status,0,c
 47715   014C2C  3603               	rlcf	___awdiv@divisor^(0+1280),f,c
 47716   014C2E  3604               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
 47717   014C30  2A05               	incf	___awdiv@counter^(0+1280),f,c
 47718   014C32                     l8619:
 47719   014C32  AE04               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
 47720   014C34  D7FA               	goto	l8617
 47721   014C36                     u6230:
 47722   014C36  90D8               	bcf	status,0,c
 47723   014C38  3607               	rlcf	___awdiv@quotient^(0+1280),f,c
 47724   014C3A  3608               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
 47725   014C3C  5003               	movf	___awdiv@divisor^(0+1280),w,c
 47726   014C3E  5C01               	subwf	___awdiv@dividend^(0+1280),w,c
 47727   014C40  5004               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 47728   014C42  5802               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
 47729   014C44  A0D8               	btfss	status,0,c
 47730   014C46  D005               	goto	l8629
 47731   014C48  5003               	movf	___awdiv@divisor^(0+1280),w,c
 47732   014C4A  5E01               	subwf	___awdiv@dividend^(0+1280),f,c
 47733   014C4C  5004               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 47734   014C4E  5A02               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
 47735   014C50  8007               	bsf	___awdiv@quotient^(0+1280),0,c
 47736   014C52                     l8629:
 47737   014C52  90D8               	bcf	status,0,c
 47738   014C54  3204               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
 47739   014C56  3203               	rrcf	___awdiv@divisor^(0+1280),f,c
 47740   014C58  2E05               	decfsz	___awdiv@counter^(0+1280),f,c
 47741   014C5A  D7ED               	goto	u6230
 47742   014C5C                     l8633:
 47743   014C5C  5006               	movf	___awdiv@sign^(0+1280),w,c
 47744   014C5E  B4D8               	btfsc	status,2,c
 47745   014C60  D004               	goto	l8637
 47746   014C62  6C07               	negf	___awdiv@quotient^(0+1280),c
 47747   014C64  1E08               	comf	(___awdiv@quotient+1)^(0+1280),f,c
 47748   014C66  B0D8               	btfsc	status,0,c
 47749   014C68  2A08               	incf	(___awdiv@quotient+1)^(0+1280),f,c
 47750   014C6A                     l8637:
 47751   014C6A  C507  F501         	movff	___awdiv@quotient,?___awdiv
 47752   014C6E  C508  F502         	movff	___awdiv@quotient+1,?___awdiv+1
 47753   014C72  0012               	return		;funcret
 47754   014C74                     __end_of___awdiv:
 47755                           	callstack 0
 47756                           
 47757 ;; *************** function ___lmul *****************
 47758 ;; Defined at:
 47759 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
 47760 ;; Parameters:    Size  Location     Type
 47761 ;;  multiplier      4    4[COMRAM] unsigned long 
 47762 ;;  multiplicand    4    8[COMRAM] unsigned long 
 47763 ;; Auto vars:     Size  Location     Type
 47764 ;;  product         4   12[COMRAM] unsigned long 
 47765 ;; Return value:  Size  Location     Type
 47766 ;;                  4    4[COMRAM] unsigned long 
 47767 ;; Registers used:
 47768 ;;		wreg, status,2, status,0
 47769 ;; Tracked objects:
 47770 ;;		On entry : 0/0
 47771 ;;		On exit  : 0/0
 47772 ;;		Unchanged: 0/0
 47773 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 47774 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47775 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47777 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47778 ;;Total ram usage:       12 bytes
 47779 ;; Hardware stack levels used: 1
 47780 ;; Hardware stack levels required when called: 1
 47781 ;; This function calls:
 47782 ;;		Nothing
 47783 ;; This function is called by:
 47784 ;;		_loop
 47785 ;;		_pbDownTimer
 47786 ;;		_pbUpTimer
 47787 ;;		_poll
 47788 ;; This function uses a non-reentrant model
 47789 ;;
 47790                           
 47791                           	psect	text136
 47792   01594A                     __ptext136:
 47793                           	callstack 0
 47794   01594A                     ___lmul:
 47795                           	callstack 124
 47796                           
 47797                           ;incstack = 0
 47798   01594A  0E00               	movlw	0
 47799   01594C  6E0D               	movwf	___lmul@product^(0+1280),c
 47800   01594E  0E00               	movlw	0
 47801   015950  6E0E               	movwf	(___lmul@product+1)^(0+1280),c
 47802   015952  0E00               	movlw	0
 47803   015954  6E0F               	movwf	(___lmul@product+2)^(0+1280),c
 47804   015956  0E00               	movlw	0
 47805   015958  6E10               	movwf	(___lmul@product+3)^(0+1280),c
 47806   01595A                     l11347:
 47807   01595A  A005               	btfss	___lmul@multiplier^(0+1280),0,c
 47808   01595C  D008               	goto	l11351
 47809   01595E  5009               	movf	___lmul@multiplicand^(0+1280),w,c
 47810   015960  260D               	addwf	___lmul@product^(0+1280),f,c
 47811   015962  500A               	movf	(___lmul@multiplicand+1)^(0+1280),w,c
 47812   015964  220E               	addwfc	(___lmul@product+1)^(0+1280),f,c
 47813   015966  500B               	movf	(___lmul@multiplicand+2)^(0+1280),w,c
 47814   015968  220F               	addwfc	(___lmul@product+2)^(0+1280),f,c
 47815   01596A  500C               	movf	(___lmul@multiplicand+3)^(0+1280),w,c
 47816   01596C  2210               	addwfc	(___lmul@product+3)^(0+1280),f,c
 47817   01596E                     l11351:
 47818   01596E  90D8               	bcf	status,0,c
 47819   015970  3609               	rlcf	___lmul@multiplicand^(0+1280),f,c
 47820   015972  360A               	rlcf	(___lmul@multiplicand+1)^(0+1280),f,c
 47821   015974  360B               	rlcf	(___lmul@multiplicand+2)^(0+1280),f,c
 47822   015976  360C               	rlcf	(___lmul@multiplicand+3)^(0+1280),f,c
 47823   015978  90D8               	bcf	status,0,c
 47824   01597A  3208               	rrcf	(___lmul@multiplier+3)^(0+1280),f,c
 47825   01597C  3207               	rrcf	(___lmul@multiplier+2)^(0+1280),f,c
 47826   01597E  3206               	rrcf	(___lmul@multiplier+1)^(0+1280),f,c
 47827   015980  3205               	rrcf	___lmul@multiplier^(0+1280),f,c
 47828   015982  5005               	movf	___lmul@multiplier^(0+1280),w,c
 47829   015984  1006               	iorwf	(___lmul@multiplier+1)^(0+1280),w,c
 47830   015986  1007               	iorwf	(___lmul@multiplier+2)^(0+1280),w,c
 47831   015988  1008               	iorwf	(___lmul@multiplier+3)^(0+1280),w,c
 47832   01598A  A4D8               	btfss	status,2,c
 47833   01598C  D7E6               	goto	l11347
 47834   01598E  C50D  F505         	movff	___lmul@product,?___lmul
 47835   015992  C50E  F506         	movff	___lmul@product+1,?___lmul+1
 47836   015996  C50F  F507         	movff	___lmul@product+2,?___lmul+2
 47837   01599A  C510  F508         	movff	___lmul@product+3,?___lmul+3
 47838   01599E  0012               	return		;funcret
 47839   0159A0                     __end_of___lmul:
 47840                           	callstack 0
 47841                           
 47842 ;; *************** function ___lldiv *****************
 47843 ;; Defined at:
 47844 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
 47845 ;; Parameters:    Size  Location     Type
 47846 ;;  dividend        4   10[COMRAM] unsigned long 
 47847 ;;  divisor         4   14[COMRAM] unsigned long 
 47848 ;; Auto vars:     Size  Location     Type
 47849 ;;  quotient        4   18[COMRAM] unsigned long 
 47850 ;;  counter         1   22[COMRAM] unsigned char 
 47851 ;; Return value:  Size  Location     Type
 47852 ;;                  4   10[COMRAM] unsigned long 
 47853 ;; Registers used:
 47854 ;;		wreg, status,2, status,0
 47855 ;; Tracked objects:
 47856 ;;		On entry : 0/0
 47857 ;;		On exit  : 0/0
 47858 ;;		Unchanged: 0/0
 47859 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 47860 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47861 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47863 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47864 ;;Total ram usage:       13 bytes
 47865 ;; Hardware stack levels used: 1
 47866 ;; Hardware stack levels required when called: 1
 47867 ;; This function calls:
 47868 ;;		Nothing
 47869 ;; This function is called by:
 47870 ;;		_loop
 47871 ;;		_pbDownTimer
 47872 ;;		_pbUpTimer
 47873 ;; This function uses a non-reentrant model
 47874 ;;
 47875                           
 47876                           	psect	text137
 47877   014C74                     __ptext137:
 47878                           	callstack 0
 47879   014C74                     ___lldiv:
 47880                           	callstack 124
 47881                           
 47882                           ;incstack = 0
 47883   014C74  0E00               	movlw	0
 47884   014C76  6E13               	movwf	___lldiv@quotient^(0+1280),c
 47885   014C78  0E00               	movlw	0
 47886   014C7A  6E14               	movwf	(___lldiv@quotient+1)^(0+1280),c
 47887   014C7C  0E00               	movlw	0
 47888   014C7E  6E15               	movwf	(___lldiv@quotient+2)^(0+1280),c
 47889   014C80  0E00               	movlw	0
 47890   014C82  6E16               	movwf	(___lldiv@quotient+3)^(0+1280),c
 47891   014C84  500F               	movf	___lldiv@divisor^(0+1280),w,c
 47892   014C86  1010               	iorwf	(___lldiv@divisor+1)^(0+1280),w,c
 47893   014C88  1011               	iorwf	(___lldiv@divisor+2)^(0+1280),w,c
 47894   014C8A  1012               	iorwf	(___lldiv@divisor+3)^(0+1280),w,c
 47895   014C8C  B4D8               	btfsc	status,2,c
 47896   014C8E  D02A               	goto	l2493
 47897   014C90  0E01               	movlw	1
 47898   014C92  6E17               	movwf	___lldiv@counter^(0+1280),c
 47899   014C94  D006               	goto	l11363
 47900   014C96                     l11361:
 47901   014C96  90D8               	bcf	status,0,c
 47902   014C98  360F               	rlcf	___lldiv@divisor^(0+1280),f,c
 47903   014C9A  3610               	rlcf	(___lldiv@divisor+1)^(0+1280),f,c
 47904   014C9C  3611               	rlcf	(___lldiv@divisor+2)^(0+1280),f,c
 47905   014C9E  3612               	rlcf	(___lldiv@divisor+3)^(0+1280),f,c
 47906   014CA0  2A17               	incf	___lldiv@counter^(0+1280),f,c
 47907   014CA2                     l11363:
 47908   014CA2  AE12               	btfss	(___lldiv@divisor+3)^(0+1280),7,c
 47909   014CA4  D7F8               	goto	l11361
 47910   014CA6                     u9470:
 47911   014CA6  90D8               	bcf	status,0,c
 47912   014CA8  3613               	rlcf	___lldiv@quotient^(0+1280),f,c
 47913   014CAA  3614               	rlcf	(___lldiv@quotient+1)^(0+1280),f,c
 47914   014CAC  3615               	rlcf	(___lldiv@quotient+2)^(0+1280),f,c
 47915   014CAE  3616               	rlcf	(___lldiv@quotient+3)^(0+1280),f,c
 47916   014CB0  500F               	movf	___lldiv@divisor^(0+1280),w,c
 47917   014CB2  5C0B               	subwf	___lldiv@dividend^(0+1280),w,c
 47918   014CB4  5010               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 47919   014CB6  580C               	subwfb	(___lldiv@dividend+1)^(0+1280),w,c
 47920   014CB8  5011               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 47921   014CBA  580D               	subwfb	(___lldiv@dividend+2)^(0+1280),w,c
 47922   014CBC  5012               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 47923   014CBE  580E               	subwfb	(___lldiv@dividend+3)^(0+1280),w,c
 47924   014CC0  A0D8               	btfss	status,0,c
 47925   014CC2  D009               	goto	l11373
 47926   014CC4  500F               	movf	___lldiv@divisor^(0+1280),w,c
 47927   014CC6  5E0B               	subwf	___lldiv@dividend^(0+1280),f,c
 47928   014CC8  5010               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 47929   014CCA  5A0C               	subwfb	(___lldiv@dividend+1)^(0+1280),f,c
 47930   014CCC  5011               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 47931   014CCE  5A0D               	subwfb	(___lldiv@dividend+2)^(0+1280),f,c
 47932   014CD0  5012               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 47933   014CD2  5A0E               	subwfb	(___lldiv@dividend+3)^(0+1280),f,c
 47934   014CD4  8013               	bsf	___lldiv@quotient^(0+1280),0,c
 47935   014CD6                     l11373:
 47936   014CD6  90D8               	bcf	status,0,c
 47937   014CD8  3212               	rrcf	(___lldiv@divisor+3)^(0+1280),f,c
 47938   014CDA  3211               	rrcf	(___lldiv@divisor+2)^(0+1280),f,c
 47939   014CDC  3210               	rrcf	(___lldiv@divisor+1)^(0+1280),f,c
 47940   014CDE  320F               	rrcf	___lldiv@divisor^(0+1280),f,c
 47941   014CE0  2E17               	decfsz	___lldiv@counter^(0+1280),f,c
 47942   014CE2  D7E1               	goto	u9470
 47943   014CE4                     l2493:
 47944   014CE4  C513  F50B         	movff	___lldiv@quotient,?___lldiv
 47945   014CE8  C514  F50C         	movff	___lldiv@quotient+1,?___lldiv+1
 47946   014CEC  C515  F50D         	movff	___lldiv@quotient+2,?___lldiv+2
 47947   014CF0  C516  F50E         	movff	___lldiv@quotient+3,?___lldiv+3
 47948   014CF4  0012               	return		;funcret
 47949   014CF6                     __end_of___lldiv:
 47950                           	callstack 0
 47951                           
 47952 ;; *************** function _factoryReset *****************
 47953 ;; Defined at:
 47954 ;;		line 867 in file "../../VLCBlib_PIC/vlcb.c"
 47955 ;; Parameters:    Size  Location     Type
 47956 ;;		None
 47957 ;; Auto vars:     Size  Location     Type
 47958 ;;  i               1   49[COMRAM] unsigned char 
 47959 ;; Return value:  Size  Location     Type
 47960 ;;                  1    wreg      void 
 47961 ;; Registers used:
 47962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47963 ;; Tracked objects:
 47964 ;;		On entry : 0/0
 47965 ;;		On exit  : 0/0
 47966 ;;		Unchanged: 0/0
 47967 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 47968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47969 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47970 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47971 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 47972 ;;Total ram usage:        3 bytes
 47973 ;; Hardware stack levels used: 1
 47974 ;; Hardware stack levels required when called: 10
 47975 ;; This function calls:
 47976 ;;		NULL
 47977 ;;		_APP_factoryReset
 47978 ;;		_canFactoryReset
 47979 ;;		_mnsFactoryReset
 47980 ;;		_nvFactoryReset
 47981 ;;		_teachFactoryReset
 47982 ;;		_writeNVM
 47983 ;; This function is called by:
 47984 ;;		_checkPowerOnPb
 47985 ;;		_main
 47986 ;; This function uses a non-reentrant model
 47987 ;;
 47988                           
 47989                           	psect	text138
 47990   013C5C                     __ptext138:
 47991                           	callstack 0
 47992   013C5C                     _factoryReset:
 47993                           	callstack 116
 47994                           
 47995                           ;../../VLCBlib_PIC/vlcb.c: 868:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 870:     for (i
      +                          =0; i<8; i++) {
 47996                           
 47997                           ;incstack = 0
 47998   013C5C  6A32               	clrf	factoryReset@i^(0+1280),c
 47999   013C5E                     l12335:
 48000                           
 48001                           ;../../VLCBlib_PIC/vlcb.c: 871:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 48002   013C5E  5032               	movf	factoryReset@i^(0+1280),w,c
 48003   013C60  0D02               	mullw	2
 48004   013C62  0E35               	movlw	low _services
 48005   013C64  24F3               	addwf	243,w,c
 48006   013C66  6EF6               	movwf	tblptrl,c
 48007   013C68  0EFF               	movlw	high _services
 48008   013C6A  20F4               	addwfc	244,w,c
 48009   013C6C  6EF7               	movwf	tblptrh,c
 48010   013C6E                     	if	1	;There are 3 active tblptr bytes
 48011   013C6E  6AF8               	clrf	tblptru,c
 48012   013C70  0E00               	movlw	low (__pmediumconst shr (0+16))
 48013   013C72  22F8               	addwfc	tblptru,f,c
 48014   013C74                     	endif
 48015   013C74  0009               	tblrd		*+
 48016   013C76  50F5               	movf	tablat,w,c
 48017   013C78  0009               	tblrd		*+
 48018   013C7A  10F5               	iorwf	tablat,w,c
 48019   013C7C  B4D8               	btfsc	status,2,c
 48020   013C7E  D04D               	goto	u10669
 48021   013C80  5032               	movf	factoryReset@i^(0+1280),w,c
 48022   013C82  0D02               	mullw	2
 48023   013C84  0E35               	movlw	low _services
 48024   013C86  24F3               	addwf	243,w,c
 48025   013C88  6EF6               	movwf	tblptrl,c
 48026   013C8A  0EFF               	movlw	high _services
 48027   013C8C  20F4               	addwfc	244,w,c
 48028   013C8E  6EF7               	movwf	tblptrh,c
 48029   013C90                     	if	1	;There are 3 active tblptr bytes
 48030   013C90  6AF8               	clrf	tblptru,c
 48031   013C92  0E00               	movlw	low (__pmediumconst shr (0+16))
 48032   013C94  22F8               	addwfc	tblptru,f,c
 48033   013C96                     	endif
 48034   013C96  0009               	tblrd		*+
 48035   013C98  C4F5 F530          	movff	tablat,??_factoryReset
 48036   013C9C  0009               	tblrd		*+
 48037   013C9E  C4F5 F531          	movff	tablat,??_factoryReset+1
 48038   013CA2  0E02               	movlw	2
 48039   013CA4  2630               	addwf	??_factoryReset^(0+1280),f,c
 48040   013CA6  0E00               	movlw	0
 48041   013CA8  2231               	addwfc	(??_factoryReset+1)^(0+1280),f,c
 48042   013CAA  C530  F4F6         	movff	??_factoryReset,tblptrl
 48043   013CAE  C531  F4F7         	movff	??_factoryReset+1,tblptrh
 48044   013CB2                     	if	0	;tblptru may be non-zero
 48045   013CB2                     	endif
 48046   013CB2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 48047   013CB2  0E00               	movlw	low (__pmediumconst shr (0+16))
 48048   013CB4  6EF8               	movwf	tblptru,c
 48049   013CB6                     	endif
 48050   013CB6  0009               	tblrd		*+
 48051   013CB8  50F5               	movf	tablat,w,c
 48052   013CBA  0009               	tblrd		*+
 48053   013CBC  10F5               	iorwf	tablat,w,c
 48054   013CBE  0009               	tblrd		*+
 48055   013CC0  10F5               	iorwf	tablat,w,c
 48056   013CC2  B4D8               	btfsc	status,2,c
 48057   013CC4  D02A               	goto	u10669
 48058                           
 48059                           ;../../VLCBlib_PIC/vlcb.c: 872:             services[i]->factoryReset();
 48060   013CC6  5032               	movf	factoryReset@i^(0+1280),w,c
 48061   013CC8  0D02               	mullw	2
 48062   013CCA  0E35               	movlw	low _services
 48063   013CCC  24F3               	addwf	243,w,c
 48064   013CCE  6EF6               	movwf	tblptrl,c
 48065   013CD0  0EFF               	movlw	high _services
 48066   013CD2  20F4               	addwfc	244,w,c
 48067   013CD4  6EF7               	movwf	tblptrh,c
 48068   013CD6                     	if	1	;There are 3 active tblptr bytes
 48069   013CD6  6AF8               	clrf	tblptru,c
 48070   013CD8  0E00               	movlw	low (__pmediumconst shr (0+16))
 48071   013CDA  22F8               	addwfc	tblptru,f,c
 48072   013CDC                     	endif
 48073   013CDC  0009               	tblrd		*+
 48074   013CDE  C4F5 F530          	movff	tablat,??_factoryReset
 48075   013CE2  0009               	tblrd		*+
 48076   013CE4  C4F5 F531          	movff	tablat,??_factoryReset+1
 48077   013CE8  0E02               	movlw	2
 48078   013CEA  2630               	addwf	??_factoryReset^(0+1280),f,c
 48079   013CEC  0E00               	movlw	0
 48080   013CEE  2231               	addwfc	(??_factoryReset+1)^(0+1280),f,c
 48081   013CF0  C530  F4F6         	movff	??_factoryReset,tblptrl
 48082   013CF4  C531  F4F7         	movff	??_factoryReset+1,tblptrh
 48083   013CF8                     	if	0	;tblptru may be non-zero
 48084   013CF8                     	endif
 48085   013CF8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 48086   013CF8  0E00               	movlw	low (__pmediumconst shr (0+16))
 48087   013CFA  6EF8               	movwf	tblptru,c
 48088   013CFC                     	endif
 48089   013CFC  D801               	call	u10668
 48090   013CFE  D00D               	goto	u10669
 48091   013D00                     u10668:
 48092   013D00  0005               	push	
 48093   013D02  6EFA               	movwf	pclath,c
 48094   013D04  0009               	tblrd		*+
 48095   013D06  50F5               	movf	tablat,w,c
 48096   013D08  6EFD               	movwf	tosl,c
 48097   013D0A  0009               	tblrd		*+
 48098   013D0C  50F5               	movf	tablat,w,c
 48099   013D0E  6EFE               	movwf	tosh,c
 48100   013D10  0009               	tblrd		*+
 48101   013D12  50F5               	movf	tablat,w,c
 48102   013D14  6EFF               	movwf	tosu,c
 48103   013D16  50FA               	movf	pclath,w,c
 48104   013D18  0012               	return		;indir
 48105   013D1A                     u10669:
 48106                           
 48107                           ;../../VLCBlib_PIC/vlcb.c: 874:     }
 48108   013D1A  2A32               	incf	factoryReset@i^(0+1280),f,c
 48109   013D1C  0E07               	movlw	7
 48110   013D1E  6432               	cpfsgt	factoryReset@i^(0+1280),c
 48111   013D20  D79E               	goto	l12335
 48112                           
 48113                           ;../../VLCBlib_PIC/vlcb.c: 876:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, 1);
 48114   013D22  0EFA               	movlw	250
 48115   013D24  6E0E               	movwf	writeNVM@index^(0+1280),c
 48116   013D26  0E03               	movlw	3
 48117   013D28  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 48118   013D2A  0E00               	movlw	0
 48119   013D2C  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 48120   013D2E  0E01               	movlw	1
 48121   013D30  6E11               	movwf	writeNVM@value^(0+1280),c
 48122   013D32  0E00               	movlw	0
 48123   013D34  ECC3  F0AD         	call	_writeNVM
 48124                           
 48125                           ;../../VLCBlib_PIC/vlcb.c: 878:     APP_factoryReset();
 48126   013D38  EC32  F0B2         	call	_APP_factoryReset	;wreg free
 48127   013D3C  0012               	return		;funcret
 48128   013D3E                     __end_of_factoryReset:
 48129                           	callstack 0
 48130                           
 48131 ;; *************** function _nvFactoryReset *****************
 48132 ;; Defined at:
 48133 ;;		line 126 in file "../../VLCBlib_PIC/nv.c"
 48134 ;; Parameters:    Size  Location     Type
 48135 ;;		None
 48136 ;; Auto vars:     Size  Location     Type
 48137 ;;  i               1   22[COMRAM] unsigned char 
 48138 ;; Return value:  Size  Location     Type
 48139 ;;                  1    wreg      void 
 48140 ;; Registers used:
 48141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 48142 ;; Tracked objects:
 48143 ;;		On entry : 0/0
 48144 ;;		On exit  : 0/0
 48145 ;;		Unchanged: 0/0
 48146 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48149 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48150 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48151 ;;Total ram usage:        3 bytes
 48152 ;; Hardware stack levels used: 1
 48153 ;; Hardware stack levels required when called: 6
 48154 ;; This function calls:
 48155 ;;		_APP_nvDefault
 48156 ;;		_writeNVM
 48157 ;; This function is called by:
 48158 ;;		_factoryReset
 48159 ;; This function uses a non-reentrant model
 48160 ;;
 48161                           
 48162                           	psect	text139
 48163   016110                     __ptext139:
 48164                           	callstack 0
 48165   016110                     _nvFactoryReset:
 48166                           	callstack 119
 48167                           
 48168                           ;../../VLCBlib_PIC/nv.c: 127:     uint8_t i;;../../VLCBlib_PIC/nv.c: 128:     for (i=1; 
      +                          i<= 67; i++) {
 48169                           
 48170                           ;incstack = 0
 48171   016110  0E01               	movlw	1
 48172   016112  6E17               	movwf	nvFactoryReset@i^(0+1280),c
 48173   016114                     l10997:
 48174                           
 48175                           ;../../VLCBlib_PIC/nv.c: 129:         writeNVM(EEPROM_NVM_TYPE, 0x200 +i, APP_nvDefault(
      +                          i));
 48176   016114  0E00               	movlw	0
 48177   016116  2417               	addwf	nvFactoryReset@i^(0+1280),w,c
 48178   016118  6E15               	movwf	??_nvFactoryReset^(0+1280),c
 48179   01611A  6A16               	clrf	(??_nvFactoryReset+1)^(0+1280),c
 48180   01611C  0E02               	movlw	2
 48181   01611E  2216               	addwfc	(??_nvFactoryReset+1)^(0+1280),f,c
 48182   016120  C515  F50E         	movff	??_nvFactoryReset,writeNVM@index
 48183   016124  C516  F50F         	movff	??_nvFactoryReset+1,writeNVM@index+1
 48184   016128  6A10               	clrf	(writeNVM@index+2)^(0+1280),c
 48185   01612A  BE0F               	btfsc	(writeNVM@index+1)^(0+1280),7,c
 48186   01612C  0610               	decf	(writeNVM@index+2)^(0+1280),f,c
 48187   01612E  5017               	movf	nvFactoryReset@i^(0+1280),w,c
 48188   016130  EC08  F0B1         	call	_APP_nvDefault
 48189   016134  6E11               	movwf	writeNVM@value^(0+1280),c
 48190   016136  0E00               	movlw	0
 48191   016138  ECC3  F0AD         	call	_writeNVM
 48192                           
 48193                           ;../../VLCBlib_PIC/nv.c: 130:     }
 48194   01613C  2A17               	incf	nvFactoryReset@i^(0+1280),f,c
 48195   01613E  0E43               	movlw	67
 48196   016140  6417               	cpfsgt	nvFactoryReset@i^(0+1280),c
 48197   016142  D7E8               	goto	l10997
 48198   016144  0012               	return	
 48199   016146                     __end_of_nvFactoryReset:
 48200                           	callstack 0
 48201                           
 48202 ;; *************** function _mnsFactoryReset *****************
 48203 ;; Defined at:
 48204 ;;		line 279 in file "../../VLCBlib_PIC/mns.c"
 48205 ;; Parameters:    Size  Location     Type
 48206 ;;		None
 48207 ;; Auto vars:     Size  Location     Type
 48208 ;;		None
 48209 ;; Return value:  Size  Location     Type
 48210 ;;                  1    wreg      void 
 48211 ;; Registers used:
 48212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 48213 ;; Tracked objects:
 48214 ;;		On entry : 0/0
 48215 ;;		On exit  : 0/0
 48216 ;;		Unchanged: 0/0
 48217 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48222 ;;Total ram usage:        0 bytes
 48223 ;; Hardware stack levels used: 1
 48224 ;; Hardware stack levels required when called: 6
 48225 ;; This function calls:
 48226 ;;		_writeNVM
 48227 ;; This function is called by:
 48228 ;;		_factoryReset
 48229 ;; This function uses a non-reentrant model
 48230 ;;
 48231                           
 48232                           	psect	text140
 48233   01541A                     __ptext140:
 48234                           	callstack 0
 48235   01541A                     _mnsFactoryReset:
 48236                           	callstack 119
 48237                           
 48238                           ;../../VLCBlib_PIC/mns.c: 280:     nn.bytes.hi = 0;
 48239                           
 48240                           ;incstack = 0
 48241   01541A  6A5F               	clrf	(_nn+1)^(0+1280),c
 48242                           
 48243                           ;../../VLCBlib_PIC/mns.c: 281:     nn.bytes.lo = 0;
 48244   01541C  6A5E               	clrf	_nn^(0+1280),c
 48245                           
 48246                           ;../../VLCBlib_PIC/mns.c: 282:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.hi);
 48247   01541E  0EFD               	movlw	253
 48248   015420  6E0E               	movwf	writeNVM@index^(0+1280),c
 48249   015422  0E03               	movlw	3
 48250   015424  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 48251   015426  0E00               	movlw	0
 48252   015428  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 48253   01542A  C55F  F511         	movff	_nn+1,writeNVM@value
 48254   01542E  0E00               	movlw	0
 48255   015430  ECC3  F0AD         	call	_writeNVM
 48256                           
 48257                           ;../../VLCBlib_PIC/mns.c: 283:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.lo);
 48258   015434  0EFC               	movlw	252
 48259   015436  6E0E               	movwf	writeNVM@index^(0+1280),c
 48260   015438  0E03               	movlw	3
 48261   01543A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 48262   01543C  0E00               	movlw	0
 48263   01543E  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 48264   015440  C55E  F511         	movff	_nn,writeNVM@value
 48265   015444  0E00               	movlw	0
 48266   015446  ECC3  F0AD         	call	_writeNVM
 48267                           
 48268                           ;../../VLCBlib_PIC/mns.c: 285:     last_mode_state = mode_state = MODE_UNINITIALISED;
 48269   01544A  0105               	movlb	5	; () banked
 48270   01544C  6991               	setf	_mode_state& (0+255),b
 48271   01544E  6990               	setf	_last_mode_state& (0+255),b
 48272                           
 48273                           ;../../VLCBlib_PIC/mns.c: 286:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 48274   015450  0EFB               	movlw	251
 48275   015452  6E0E               	movwf	writeNVM@index^(0+1280),c
 48276   015454  0E03               	movlw	3
 48277   015456  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 48278   015458  0E00               	movlw	0
 48279   01545A  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 48280   01545C  C591  F511         	movff	_mode_state,writeNVM@value
 48281   015460  0E00               	movlw	0
 48282   015462  ECC3  F0AD         	call	_writeNVM
 48283                           
 48284                           ;../../VLCBlib_PIC/mns.c: 288:     last_mode_flags = mode_flags = 0;
 48285   015466  0105               	movlb	5	; () banked
 48286   015468  6BA0               	clrf	_mode_flags& (0+255),b
 48287   01546A  6B8F               	clrf	_last_mode_flags& (0+255),b
 48288                           
 48289                           ;../../VLCBlib_PIC/mns.c: 289:     writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 48290   01546C  0EF9               	movlw	249
 48291   01546E  6E0E               	movwf	writeNVM@index^(0+1280),c
 48292   015470  0E03               	movlw	3
 48293   015472  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 48294   015474  0E00               	movlw	0
 48295   015476  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 48296   015478  C5A0  F511         	movff	_mode_flags,writeNVM@value
 48297   01547C  0E00               	movlw	0
 48298   01547E  ECC3  F0AD         	call	_writeNVM
 48299   015482  0012               	return		;funcret
 48300   015484                     __end_of_mnsFactoryReset:
 48301                           	callstack 0
 48302                           
 48303 ;; *************** function _canFactoryReset *****************
 48304 ;; Defined at:
 48305 ;;		line 210 in file "../../VLCBlib_PIC/can18_can_2.c"
 48306 ;; Parameters:    Size  Location     Type
 48307 ;;		None
 48308 ;; Auto vars:     Size  Location     Type
 48309 ;;		None
 48310 ;; Return value:  Size  Location     Type
 48311 ;;                  1    wreg      void 
 48312 ;; Registers used:
 48313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 48314 ;; Tracked objects:
 48315 ;;		On entry : 0/0
 48316 ;;		On exit  : 0/0
 48317 ;;		Unchanged: 0/0
 48318 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48323 ;;Total ram usage:        0 bytes
 48324 ;; Hardware stack levels used: 1
 48325 ;; Hardware stack levels required when called: 6
 48326 ;; This function calls:
 48327 ;;		_writeNVM
 48328 ;; This function is called by:
 48329 ;;		_factoryReset
 48330 ;; This function uses a non-reentrant model
 48331 ;;
 48332                           
 48333                           	psect	text141
 48334   016656                     __ptext141:
 48335                           	callstack 0
 48336   016656                     _canFactoryReset:
 48337                           	callstack 119
 48338                           
 48339                           ;../../VLCBlib_PIC/can18_can_2.c: 211:     canId = 0;
 48340                           
 48341                           ;incstack = 0
 48342   016656  0105               	movlb	5	; () banked
 48343   016658  6B96               	clrf	_canId& (0+255),b
 48344                           
 48345                           ; BSR set to: 5
 48346                           ;../../VLCBlib_PIC/can18_can_2.c: 212:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 48347   01665A  0EFE               	movlw	254
 48348   01665C  6E0E               	movwf	writeNVM@index^(0+1280),c
 48349   01665E  0E03               	movlw	3
 48350   016660  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 48351   016662  0E00               	movlw	0
 48352   016664  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 48353   016666  C596  F511         	movff	_canId,writeNVM@value
 48354   01666A  0E00               	movlw	0
 48355   01666C  ECC3  F0AD         	call	_writeNVM
 48356   016670  0012               	return		;funcret
 48357   016672                     __end_of_canFactoryReset:
 48358                           	callstack 0
 48359                           
 48360 ;; *************** function _teachFactoryReset *****************
 48361 ;; Defined at:
 48362 ;;		line 190 in file "../../VLCBlib_PIC/event_teach_simple.c"
 48363 ;; Parameters:    Size  Location     Type
 48364 ;;		None
 48365 ;; Auto vars:     Size  Location     Type
 48366 ;;		None
 48367 ;; Return value:  Size  Location     Type
 48368 ;;                  1    wreg      void 
 48369 ;; Registers used:
 48370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48371 ;; Tracked objects:
 48372 ;;		On entry : 0/0
 48373 ;;		On exit  : 0/0
 48374 ;;		Unchanged: 0/0
 48375 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48380 ;;Total ram usage:        0 bytes
 48381 ;; Hardware stack levels used: 1
 48382 ;; Hardware stack levels required when called: 8
 48383 ;; This function calls:
 48384 ;;		_clearAllEvents
 48385 ;; This function is called by:
 48386 ;;		_factoryReset
 48387 ;; This function uses a non-reentrant model
 48388 ;;
 48389                           
 48390                           	psect	text142
 48391   0167BA                     __ptext142:
 48392                           	callstack 0
 48393   0167BA                     _teachFactoryReset:
 48394                           	callstack 117
 48395                           
 48396                           ;../../VLCBlib_PIC/event_teach_simple.c: 191:     clearAllEvents();
 48397                           
 48398                           ;incstack = 0
 48399   0167BA  EC88  F0B3         	call	_clearAllEvents	;wreg free
 48400   0167BE  0012               	return		;funcret
 48401   0167C0                     __end_of_teachFactoryReset:
 48402                           	callstack 0
 48403                           
 48404 ;; *************** function _APP_nvDefault *****************
 48405 ;; Defined at:
 48406 ;;		line 48 in file "../canpan3Nv.c"
 48407 ;; Parameters:    Size  Location     Type
 48408 ;;  index           1    wreg     unsigned char 
 48409 ;; Auto vars:     Size  Location     Type
 48410 ;;  index           1    0[COMRAM] unsigned char 
 48411 ;; Return value:  Size  Location     Type
 48412 ;;                  1    wreg      unsigned char 
 48413 ;; Registers used:
 48414 ;;		wreg, status,2, status,0
 48415 ;; Tracked objects:
 48416 ;;		On entry : 0/0
 48417 ;;		On exit  : 0/0
 48418 ;;		Unchanged: 0/0
 48419 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48423 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48424 ;;Total ram usage:        1 bytes
 48425 ;; Hardware stack levels used: 1
 48426 ;; Hardware stack levels required when called: 1
 48427 ;; This function calls:
 48428 ;;		Nothing
 48429 ;; This function is called by:
 48430 ;;		_nvFactoryReset
 48431 ;; This function uses a non-reentrant model
 48432 ;;
 48433                           
 48434                           	psect	text143
 48435   016210                     __ptext143:
 48436                           	callstack 0
 48437   016210                     _APP_nvDefault:
 48438                           	callstack 123
 48439                           
 48440                           ;incstack = 0
 48441                           ;APP_nvDefault@index stored from wreg
 48442   016210  6E01               	movwf	APP_nvDefault@index^(0+1280),c
 48443                           
 48444                           ;../canpan3Nv.c: 49:     if (index < 67) {
 48445   016212  0E43               	movlw	67
 48446   016214  6001               	cpfslt	APP_nvDefault@index^(0+1280),c
 48447   016216  D003               	goto	u7290
 48448                           
 48449                           ;../canpan3Nv.c: 51:         if (index == 1)
 48450   016218  0401               	decf	APP_nvDefault@index^(0+1280),w,c
 48451   01621A  A4D8               	btfss	status,2,c
 48452   01621C  D002               	goto	l9345
 48453   01621E                     u7290:
 48454                           
 48455                           ;../canpan3Nv.c: 52:                 return 0;
 48456   01621E  0E00               	movlw	0
 48457   016220  0012               	return	
 48458   016222                     l9345:
 48459                           
 48460                           ;../canpan3Nv.c: 53:         if (index == 2)
 48461   016222  0E02               	movlw	2
 48462   016224  1801               	xorwf	APP_nvDefault@index^(0+1280),w,c
 48463   016226  A4D8               	btfss	status,2,c
 48464   016228  D002               	goto	l9351
 48465                           
 48466                           ;../canpan3Nv.c: 54:                 return (62500/2)/1000;
 48467   01622A  0E1F               	movlw	31
 48468   01622C  0012               	return	
 48469   01622E                     l9351:
 48470                           
 48471                           ;../canpan3Nv.c: 55:         if (index < (3 + (4*8)))
 48472   01622E  0E23               	movlw	35
 48473   016230  6001               	cpfslt	APP_nvDefault@index^(0+1280),c
 48474   016232  D002               	goto	l9357
 48475                           
 48476                           ;../canpan3Nv.c: 56:                 return 16;
 48477   016234  0E10               	movlw	16
 48478   016236  0012               	return	
 48479   016238                     l9357:
 48480                           
 48481                           ;../canpan3Nv.c: 57:         if (index <= ((3 +(8*4)) + (8*4)))
 48482   016238  0E44               	movlw	68
 48483   01623A  6001               	cpfslt	APP_nvDefault@index^(0+1280),c
 48484   01623C  D7F0               	goto	u7290
 48485   01623E  D7EF               	goto	u7290
 48486   016240                     __end_of_APP_nvDefault:
 48487                           	callstack 0
 48488                           
 48489 ;; *************** function _APP_factoryReset *****************
 48490 ;; Defined at:
 48491 ;;		line 150 in file "../main.c"
 48492 ;; Parameters:    Size  Location     Type
 48493 ;;		None
 48494 ;; Auto vars:     Size  Location     Type
 48495 ;;  sw              1   46[COMRAM] unsigned char 
 48496 ;; Return value:  Size  Location     Type
 48497 ;;                  1    wreg      void 
 48498 ;; Registers used:
 48499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48500 ;; Tracked objects:
 48501 ;;		On entry : 0/0
 48502 ;;		On exit  : 0/0
 48503 ;;		Unchanged: 0/0
 48504 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48508 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48509 ;;Total ram usage:        1 bytes
 48510 ;; Hardware stack levels used: 1
 48511 ;; Hardware stack levels required when called: 9
 48512 ;; This function calls:
 48513 ;;		_factoryResetGlobalEvents
 48514 ;;		_flushFlashBlock
 48515 ;;		_writeNVM
 48516 ;; This function is called by:
 48517 ;;		_factoryReset
 48518 ;; This function uses a non-reentrant model
 48519 ;;
 48520                           
 48521                           	psect	text144
 48522   016464                     __ptext144:
 48523                           	callstack 0
 48524   016464                     _APP_factoryReset:
 48525                           	callstack 116
 48526                           
 48527                           ;../main.c: 151:     uint8_t sw;;../main.c: 153:     factoryResetGlobalEvents();
 48528                           
 48529                           ;incstack = 0
 48530   016464  ECE0  F0B3         	call	_factoryResetGlobalEvents	;wreg free
 48531                           
 48532                           ;../main.c: 155:     flushFlashBlock();
 48533   016468  ECF6  F0AB         	call	_flushFlashBlock	;wreg free
 48534                           
 48535                           ;../main.c: 158:     for (sw=0; sw < (8*4); sw++) {
 48536   01646C  6A2F               	clrf	APP_factoryReset@sw^(0+1280),c
 48537   01646E                     l9883:
 48538                           
 48539                           ;../main.c: 159:         writeNVM(EEPROM_NVM_TYPE, (0x0000)+sw, 0);
 48540   01646E  502F               	movf	APP_factoryReset@sw^(0+1280),w,c
 48541   016470  6E0E               	movwf	writeNVM@index^(0+1280),c
 48542   016472  6A0F               	clrf	(writeNVM@index+1)^(0+1280),c
 48543   016474  6A10               	clrf	(writeNVM@index+2)^(0+1280),c
 48544   016476  0E00               	movlw	0
 48545   016478  6E11               	movwf	writeNVM@value^(0+1280),c
 48546   01647A  0E00               	movlw	0
 48547   01647C  ECC3  F0AD         	call	_writeNVM
 48548                           
 48549                           ;../main.c: 160:     }
 48550   016480  2A2F               	incf	APP_factoryReset@sw^(0+1280),f,c
 48551   016482  0E1F               	movlw	31
 48552   016484  642F               	cpfsgt	APP_factoryReset@sw^(0+1280),c
 48553   016486  D7F3               	goto	l9883
 48554   016488  0012               	return	
 48555   01648A                     __end_of_APP_factoryReset:
 48556                           	callstack 0
 48557                           
 48558 ;; *************** function _factoryResetGlobalEvents *****************
 48559 ;; Defined at:
 48560 ;;		line 54 in file "../canpan3Events.c"
 48561 ;; Parameters:    Size  Location     Type
 48562 ;;		None
 48563 ;; Auto vars:     Size  Location     Type
 48564 ;;		None
 48565 ;; Return value:  Size  Location     Type
 48566 ;;                  1    wreg      void 
 48567 ;; Registers used:
 48568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48569 ;; Tracked objects:
 48570 ;;		On entry : 0/0
 48571 ;;		On exit  : 0/0
 48572 ;;		Unchanged: 0/0
 48573 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48578 ;;Total ram usage:        0 bytes
 48579 ;; Hardware stack levels used: 1
 48580 ;; Hardware stack levels required when called: 8
 48581 ;; This function calls:
 48582 ;;		_clearAllEvents
 48583 ;; This function is called by:
 48584 ;;		_APP_factoryReset
 48585 ;; This function uses a non-reentrant model
 48586 ;;
 48587                           
 48588                           	psect	text145
 48589   0167C0                     __ptext145:
 48590                           	callstack 0
 48591   0167C0                     _factoryResetGlobalEvents:
 48592                           	callstack 116
 48593                           
 48594                           ;../canpan3Events.c: 56:     clearAllEvents();
 48595                           
 48596                           ;incstack = 0
 48597   0167C0  EC88  F0B3         	call	_clearAllEvents	;wreg free
 48598   0167C4  0012               	return		;funcret
 48599   0167C6                     __end_of_factoryResetGlobalEvents:
 48600                           	callstack 0
 48601                           
 48602 ;; *************** function _APP_testMode *****************
 48603 ;; Defined at:
 48604 ;;		line 170 in file "../main.c"
 48605 ;; Parameters:    Size  Location     Type
 48606 ;;		None
 48607 ;; Auto vars:     Size  Location     Type
 48608 ;;  sw              1   65[COMRAM] unsigned char 
 48609 ;; Return value:  Size  Location     Type
 48610 ;;                  1    wreg      void 
 48611 ;; Registers used:
 48612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48613 ;; Tracked objects:
 48614 ;;		On entry : 0/0
 48615 ;;		On exit  : 0/0
 48616 ;;		Unchanged: 0/0
 48617 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48621 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48622 ;;Total ram usage:        1 bytes
 48623 ;; Hardware stack levels used: 1
 48624 ;; Hardware stack levels required when called: 9
 48625 ;; This function calls:
 48626 ;;		_addTestEvent
 48627 ;;		_clearAllEvents
 48628 ;; This function is called by:
 48629 ;;		_checkPowerOnPb
 48630 ;; This function uses a non-reentrant model
 48631 ;;
 48632                           
 48633                           	psect	text146
 48634   0166FA                     __ptext146:
 48635                           	callstack 0
 48636   0166FA                     _APP_testMode:
 48637                           	callstack 116
 48638                           
 48639                           ;../main.c: 171:     uint8_t sw;;../main.c: 173:     clearAllEvents();
 48640                           
 48641                           ;incstack = 0
 48642   0166FA  EC88  F0B3         	call	_clearAllEvents	;wreg free
 48643                           
 48644                           ;../main.c: 175:     for (sw=0; sw<(8*4); sw++) {
 48645   0166FE  6A42               	clrf	APP_testMode@sw^(0+1280),c
 48646   016700                     l11385:
 48647                           
 48648                           ;../main.c: 176:         addTestEvent(sw+1);
 48649   016700  2842               	incf	APP_testMode@sw^(0+1280),w,c
 48650   016702  EC94  F096         	call	_addTestEvent
 48651                           
 48652                           ;../main.c: 177:     }
 48653   016706  2A42               	incf	APP_testMode@sw^(0+1280),f,c
 48654   016708  0E1F               	movlw	31
 48655   01670A  6442               	cpfsgt	APP_testMode@sw^(0+1280),c
 48656   01670C  D7F9               	goto	l11385
 48657   01670E  0012               	return	
 48658   016710                     __end_of_APP_testMode:
 48659                           	callstack 0
 48660                           
 48661 ;; *************** function _clearAllEvents *****************
 48662 ;; Defined at:
 48663 ;;		line 397 in file "../../VLCBlib_PIC/event_teach_simple.c"
 48664 ;; Parameters:    Size  Location     Type
 48665 ;;		None
 48666 ;; Auto vars:     Size  Location     Type
 48667 ;;  tableIndex      1   45[COMRAM] unsigned char 
 48668 ;; Return value:  Size  Location     Type
 48669 ;;                  1    wreg      void 
 48670 ;; Registers used:
 48671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48672 ;; Tracked objects:
 48673 ;;		On entry : 0/0
 48674 ;;		On exit  : 0/0
 48675 ;;		Unchanged: 0/0
 48676 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48680 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48681 ;;Total ram usage:        1 bytes
 48682 ;; Hardware stack levels used: 1
 48683 ;; Hardware stack levels required when called: 7
 48684 ;; This function calls:
 48685 ;;		_rebuildHashtable
 48686 ;;		_removeTableEntry
 48687 ;; This function is called by:
 48688 ;;		_APP_testMode
 48689 ;;		_factoryResetGlobalEvents
 48690 ;;		_teachFactoryReset
 48691 ;;		_doNnclr
 48692 ;; This function uses a non-reentrant model
 48693 ;;
 48694                           
 48695                           	psect	text147
 48696   016710                     __ptext147:
 48697                           	callstack 0
 48698   016710                     _clearAllEvents:
 48699                           	callstack 116
 48700                           
 48701                           ;../../VLCBlib_PIC/event_teach_simple.c: 398:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 400:     for (tableIndex=0; tableIndex<254; tableIndex++) {
 48702                           
 48703                           ;incstack = 0
 48704   016710  6A2E               	clrf	clearAllEvents@tableIndex^(0+1280),c
 48705   016712                     l8955:
 48706                           
 48707                           ;../../VLCBlib_PIC/event_teach_simple.c: 401:         removeTableEntry(tableIndex);
 48708   016712  502E               	movf	clearAllEvents@tableIndex^(0+1280),w,c
 48709   016714  EC10  F09B         	call	_removeTableEntry
 48710                           
 48711                           ;../../VLCBlib_PIC/event_teach_simple.c: 402:     }
 48712   016718  2A2E               	incf	clearAllEvents@tableIndex^(0+1280),f,c
 48713   01671A  0EFD               	movlw	253
 48714   01671C  642E               	cpfsgt	clearAllEvents@tableIndex^(0+1280),c
 48715   01671E  D7F9               	goto	l8955
 48716                           
 48717                           ;../../VLCBlib_PIC/event_teach_simple.c: 404:     rebuildHashtable();
 48718   016720  EC1A  F0A1         	call	_rebuildHashtable	;wreg free
 48719   016724  0012               	return		;funcret
 48720   016726                     __end_of_clearAllEvents:
 48721                           	callstack 0
 48722                           
 48723 ;; *************** function _removeTableEntry *****************
 48724 ;; Defined at:
 48725 ;;		line 718 in file "../../VLCBlib_PIC/event_teach_simple.c"
 48726 ;; Parameters:    Size  Location     Type
 48727 ;;  tableIndex      1    wreg     unsigned char 
 48728 ;; Auto vars:     Size  Location     Type
 48729 ;;  tableIndex      1   44[COMRAM] unsigned char 
 48730 ;;  i               1   43[COMRAM] unsigned char 
 48731 ;; Return value:  Size  Location     Type
 48732 ;;                  1    wreg      unsigned char 
 48733 ;; Registers used:
 48734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48735 ;; Tracked objects:
 48736 ;;		On entry : 0/0
 48737 ;;		On exit  : 0/0
 48738 ;;		Unchanged: 0/0
 48739 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48741 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48742 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48743 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48744 ;;Total ram usage:       10 bytes
 48745 ;; Hardware stack levels used: 1
 48746 ;; Hardware stack levels required when called: 6
 48747 ;; This function calls:
 48748 ;;		_flushFlashBlock
 48749 ;;		_rebuildHashtable
 48750 ;;		_writeNVM
 48751 ;; This function is called by:
 48752 ;;		_clearAllEvents
 48753 ;;		_removeEvent
 48754 ;; This function uses a non-reentrant model
 48755 ;;
 48756                           
 48757                           	psect	text148
 48758   013620                     __ptext148:
 48759                           	callstack 0
 48760   013620                     _removeTableEntry:
 48761                           	callstack 116
 48762                           
 48763                           ;incstack = 0
 48764                           ;removeTableEntry@tableIndex stored from wreg
 48765   013620  6E2D               	movwf	removeTableEntry@tableIndex^(0+1280),c
 48766                           
 48767                           ;../../VLCBlib_PIC/event_teach_simple.c: 719:     uint8_t i;;../../VLCBlib_PIC/event_tea
      +                          ch_simple.c: 724:     writeNVM(FLASH_NVM_TYPE, 0x1E800 + (sizeof(Event) + 1 + 13)*tableI
      +                          ndex + 0, 0x00);
 48768   013622  502D               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 48769   013624  0D12               	mullw	18
 48770   013626  C4F3 F524          	movff	prodl,??_removeTableEntry
 48771   01362A  C4F4 F525          	movff	prodh,??_removeTableEntry+1
 48772   01362E  6A26               	clrf	(??_removeTableEntry+2)^(0+1280),c
 48773   013630  0E00               	movlw	0
 48774   013632  2424               	addwf	??_removeTableEntry^(0+1280),w,c
 48775   013634  6E0E               	movwf	writeNVM@index^(0+1280),c
 48776   013636  0EE8               	movlw	232
 48777   013638  2025               	addwfc	(??_removeTableEntry+1)^(0+1280),w,c
 48778   01363A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 48779   01363C  0E01               	movlw	1
 48780   01363E  2026               	addwfc	(??_removeTableEntry+2)^(0+1280),w,c
 48781   013640  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 48782   013642  0E00               	movlw	0
 48783   013644  6E11               	movwf	writeNVM@value^(0+1280),c
 48784   013646  0E01               	movlw	1
 48785   013648  ECC3  F0AD         	call	_writeNVM
 48786                           
 48787                           ;../../VLCBlib_PIC/event_teach_simple.c: 725:     writeNVM(FLASH_NVM_TYPE, 0x1E800 + (si
      +                          zeof(Event) + 1 + 13)*tableIndex + 1, 0x00);
 48788   01364C  502D               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 48789   01364E  0D12               	mullw	18
 48790   013650  C4F3 F524          	movff	prodl,??_removeTableEntry
 48791   013654  C4F4 F525          	movff	prodh,??_removeTableEntry+1
 48792   013658  6A26               	clrf	(??_removeTableEntry+2)^(0+1280),c
 48793   01365A  0E01               	movlw	1
 48794   01365C  2424               	addwf	??_removeTableEntry^(0+1280),w,c
 48795   01365E  6E0E               	movwf	writeNVM@index^(0+1280),c
 48796   013660  0EE8               	movlw	232
 48797   013662  2025               	addwfc	(??_removeTableEntry+1)^(0+1280),w,c
 48798   013664  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 48799   013666  0E01               	movlw	1
 48800   013668  2026               	addwfc	(??_removeTableEntry+2)^(0+1280),w,c
 48801   01366A  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 48802   01366C  0E00               	movlw	0
 48803   01366E  6E11               	movwf	writeNVM@value^(0+1280),c
 48804   013670  0E01               	movlw	1
 48805   013672  ECC3  F0AD         	call	_writeNVM
 48806                           
 48807                           ;../../VLCBlib_PIC/event_teach_simple.c: 726:     writeNVM(FLASH_NVM_TYPE, 0x1E800 + (si
      +                          zeof(Event) + 1 + 13)*tableIndex + 2, 0x00);
 48808   013676  502D               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 48809   013678  0D12               	mullw	18
 48810   01367A  C4F3 F524          	movff	prodl,??_removeTableEntry
 48811   01367E  C4F4 F525          	movff	prodh,??_removeTableEntry+1
 48812   013682  6A26               	clrf	(??_removeTableEntry+2)^(0+1280),c
 48813   013684  0E02               	movlw	2
 48814   013686  2424               	addwf	??_removeTableEntry^(0+1280),w,c
 48815   013688  6E0E               	movwf	writeNVM@index^(0+1280),c
 48816   01368A  0EE8               	movlw	232
 48817   01368C  2025               	addwfc	(??_removeTableEntry+1)^(0+1280),w,c
 48818   01368E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 48819   013690  0E01               	movlw	1
 48820   013692  2026               	addwfc	(??_removeTableEntry+2)^(0+1280),w,c
 48821   013694  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 48822   013696  0E00               	movlw	0
 48823   013698  6E11               	movwf	writeNVM@value^(0+1280),c
 48824   01369A  0E01               	movlw	1
 48825   01369C  ECC3  F0AD         	call	_writeNVM
 48826                           
 48827                           ;../../VLCBlib_PIC/event_teach_simple.c: 727:     writeNVM(FLASH_NVM_TYPE, 0x1E800 + (si
      +                          zeof(Event) + 1 + 13)*tableIndex + 3, 0x00);
 48828   0136A0  502D               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 48829   0136A2  0D12               	mullw	18
 48830   0136A4  C4F3 F524          	movff	prodl,??_removeTableEntry
 48831   0136A8  C4F4 F525          	movff	prodh,??_removeTableEntry+1
 48832   0136AC  6A26               	clrf	(??_removeTableEntry+2)^(0+1280),c
 48833   0136AE  0E03               	movlw	3
 48834   0136B0  2424               	addwf	??_removeTableEntry^(0+1280),w,c
 48835   0136B2  6E0E               	movwf	writeNVM@index^(0+1280),c
 48836   0136B4  0EE8               	movlw	232
 48837   0136B6  2025               	addwfc	(??_removeTableEntry+1)^(0+1280),w,c
 48838   0136B8  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 48839   0136BA  0E01               	movlw	1
 48840   0136BC  2026               	addwfc	(??_removeTableEntry+2)^(0+1280),w,c
 48841   0136BE  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 48842   0136C0  0E00               	movlw	0
 48843   0136C2  6E11               	movwf	writeNVM@value^(0+1280),c
 48844   0136C4  0E01               	movlw	1
 48845   0136C6  ECC3  F0AD         	call	_writeNVM
 48846                           
 48847                           ;../../VLCBlib_PIC/event_teach_simple.c: 728:     writeNVM(FLASH_NVM_TYPE, 0x1E800 + (si
      +                          zeof(Event) + 1 + 13)*tableIndex + 4, 0x00);
 48848   0136CA  502D               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 48849   0136CC  0D12               	mullw	18
 48850   0136CE  C4F3 F524          	movff	prodl,??_removeTableEntry
 48851   0136D2  C4F4 F525          	movff	prodh,??_removeTableEntry+1
 48852   0136D6  6A26               	clrf	(??_removeTableEntry+2)^(0+1280),c
 48853   0136D8  0E04               	movlw	4
 48854   0136DA  2424               	addwf	??_removeTableEntry^(0+1280),w,c
 48855   0136DC  6E0E               	movwf	writeNVM@index^(0+1280),c
 48856   0136DE  0EE8               	movlw	232
 48857   0136E0  2025               	addwfc	(??_removeTableEntry+1)^(0+1280),w,c
 48858   0136E2  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 48859   0136E4  0E01               	movlw	1
 48860   0136E6  2026               	addwfc	(??_removeTableEntry+2)^(0+1280),w,c
 48861   0136E8  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 48862   0136EA  0E00               	movlw	0
 48863   0136EC  6E11               	movwf	writeNVM@value^(0+1280),c
 48864   0136EE  0E01               	movlw	1
 48865   0136F0  ECC3  F0AD         	call	_writeNVM
 48866                           
 48867                           ;../../VLCBlib_PIC/event_teach_simple.c: 730:     for (i=0; i<13; i++) {
 48868   0136F4  6A2C               	clrf	removeTableEntry@i^(0+1280),c
 48869   0136F6                     l8935:
 48870                           
 48871                           ;../../VLCBlib_PIC/event_teach_simple.c: 731:         writeNVM(FLASH_NVM_TYPE, 0x1E800 +
      +                           (sizeof(Event) + 1 + 13)*tableIndex + (5 + i), 0x00);
 48872   0136F6  502C               	movf	removeTableEntry@i^(0+1280),w,c
 48873   0136F8  6E24               	movwf	??_removeTableEntry^(0+1280),c
 48874   0136FA  6A25               	clrf	(??_removeTableEntry+1)^(0+1280),c
 48875   0136FC  0E05               	movlw	5
 48876   0136FE  2624               	addwf	??_removeTableEntry^(0+1280),f,c
 48877   013700  0E00               	movlw	0
 48878   013702  2225               	addwfc	(??_removeTableEntry+1)^(0+1280),f,c
 48879   013704  502D               	movf	removeTableEntry@tableIndex^(0+1280),w,c
 48880   013706  0D12               	mullw	18
 48881   013708  C4F3 F526          	movff	prodl,??_removeTableEntry+2
 48882   01370C  C4F4 F527          	movff	prodh,??_removeTableEntry+3
 48883   013710  6A28               	clrf	(??_removeTableEntry+4)^(0+1280),c
 48884   013712  5024               	movf	??_removeTableEntry^(0+1280),w,c
 48885   013714  2426               	addwf	(??_removeTableEntry+2)^(0+1280),w,c
 48886   013716  6E29               	movwf	(??_removeTableEntry+5)^(0+1280),c
 48887   013718  5025               	movf	(??_removeTableEntry+1)^(0+1280),w,c
 48888   01371A  2027               	addwfc	(??_removeTableEntry+3)^(0+1280),w,c
 48889   01371C  6E2A               	movwf	(??_removeTableEntry+6)^(0+1280),c
 48890   01371E  0E00               	movlw	0
 48891   013720  BE25               	btfsc	(??_removeTableEntry+1)^(0+1280),7,c
 48892   013722  0EFF               	movlw	255
 48893   013724  2028               	addwfc	(??_removeTableEntry+4)^(0+1280),w,c
 48894   013726  6E2B               	movwf	(??_removeTableEntry+7)^(0+1280),c
 48895   013728  0E00               	movlw	0
 48896   01372A  2429               	addwf	(??_removeTableEntry+5)^(0+1280),w,c
 48897   01372C  6E0E               	movwf	writeNVM@index^(0+1280),c
 48898   01372E  0EE8               	movlw	232
 48899   013730  202A               	addwfc	(??_removeTableEntry+6)^(0+1280),w,c
 48900   013732  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 48901   013734  0E01               	movlw	1
 48902   013736  202B               	addwfc	(??_removeTableEntry+7)^(0+1280),w,c
 48903   013738  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 48904   01373A  0E00               	movlw	0
 48905   01373C  6E11               	movwf	writeNVM@value^(0+1280),c
 48906   01373E  0E01               	movlw	1
 48907   013740  ECC3  F0AD         	call	_writeNVM
 48908                           
 48909                           ;../../VLCBlib_PIC/event_teach_simple.c: 732:     }
 48910   013744  2A2C               	incf	removeTableEntry@i^(0+1280),f,c
 48911   013746  0E0C               	movlw	12
 48912   013748  642C               	cpfsgt	removeTableEntry@i^(0+1280),c
 48913   01374A  D7D5               	goto	l8935
 48914                           
 48915                           ;../../VLCBlib_PIC/event_teach_simple.c: 733:     flushFlashBlock();
 48916   01374C  ECF6  F0AB         	call	_flushFlashBlock	;wreg free
 48917                           
 48918                           ;../../VLCBlib_PIC/event_teach_simple.c: 735:     rebuildHashtable();
 48919   013750  EC1A  F0A1         	call	_rebuildHashtable	;wreg free
 48920                           
 48921                           ;../../VLCBlib_PIC/event_teach_simple.c: 737:     return 0;
 48922   013754  0E00               	movlw	0
 48923   013756  0012               	return		;funcret
 48924   013758                     __end_of_removeTableEntry:
 48925                           	callstack 0
 48926                           
 48927 ;; *************** function _addTestEvent *****************
 48928 ;; Defined at:
 48929 ;;		line 89 in file "../canpan3Events.c"
 48930 ;; Parameters:    Size  Location     Type
 48931 ;;  sw              1    wreg     unsigned char 
 48932 ;; Auto vars:     Size  Location     Type
 48933 ;;  sw              1   64[COMRAM] unsigned char 
 48934 ;; Return value:  Size  Location     Type
 48935 ;;                  1    wreg      unsigned char 
 48936 ;; Registers used:
 48937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48938 ;; Tracked objects:
 48939 ;;		On entry : 0/0
 48940 ;;		On exit  : 0/0
 48941 ;;		Unchanged: 0/0
 48942 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 48943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48945 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48946 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 48947 ;;Total ram usage:        3 bytes
 48948 ;; Hardware stack levels used: 1
 48949 ;; Hardware stack levels required when called: 8
 48950 ;; This function calls:
 48951 ;;		_addEvent
 48952 ;; This function is called by:
 48953 ;;		_APP_testMode
 48954 ;; This function uses a non-reentrant model
 48955 ;;
 48956                           
 48957                           	psect	text149
 48958   012D28                     __ptext149:
 48959                           	callstack 0
 48960   012D28                     _addTestEvent:
 48961                           	callstack 116
 48962                           
 48963                           ;incstack = 0
 48964                           ;addTestEvent@sw stored from wreg
 48965   012D28  6E41               	movwf	addTestEvent@sw^(0+1280),c
 48966                           
 48967                           ;../canpan3Events.c: 90:     addEvent(nn.word, sw, 0, 1, TRUE);
 48968   012D2A  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 48969   012D2E  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 48970   012D32  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 48971   012D36  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 48972   012D38  0E00               	movlw	0
 48973   012D3A  6E2F               	movwf	addEvent@evNum^(0+1280),c
 48974   012D3C  0E01               	movlw	1
 48975   012D3E  6E30               	movwf	addEvent@evVal^(0+1280),c
 48976   012D40  0E01               	movlw	1
 48977   012D42  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 48978   012D44  ECC3  F094         	call	_addEvent	;wreg free
 48979                           
 48980                           ;../canpan3Events.c: 91:     addEvent(nn.word, sw, 1, sw, TRUE);
 48981   012D48  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 48982   012D4C  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 48983   012D50  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 48984   012D54  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 48985   012D56  0E01               	movlw	1
 48986   012D58  6E2F               	movwf	addEvent@evNum^(0+1280),c
 48987   012D5A  C541  F530         	movff	addTestEvent@sw,addEvent@evVal
 48988   012D5E  0E01               	movlw	1
 48989   012D60  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 48990   012D62  ECC3  F094         	call	_addEvent	;wreg free
 48991                           
 48992                           ;../canpan3Events.c: 92:     addEvent(nn.word, sw, 2, 8 | 0b00010000, TRUE);
 48993   012D66  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 48994   012D6A  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 48995   012D6E  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 48996   012D72  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 48997   012D74  0E02               	movlw	2
 48998   012D76  6E2F               	movwf	addEvent@evNum^(0+1280),c
 48999   012D78  0E18               	movlw	24
 49000   012D7A  6E30               	movwf	addEvent@evVal^(0+1280),c
 49001   012D7C  0E01               	movlw	1
 49002   012D7E  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 49003   012D80  ECC3  F094         	call	_addEvent	;wreg free
 49004                           
 49005                           ;../canpan3Events.c: 94:     addEvent(nn.word, sw, 4, ((uint16_t)1<<(sw-1))&0xFF, TRUE);
 49006   012D84  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 49007   012D88  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 49008   012D8C  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 49009   012D90  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 49010   012D92  0E04               	movlw	4
 49011   012D94  6E2F               	movwf	addEvent@evNum^(0+1280),c
 49012   012D96  C541  F53F         	movff	addTestEvent@sw,??_addTestEvent
 49013   012D9A  0EFF               	movlw	-1
 49014   012D9C  263F               	addwf	??_addTestEvent^(0+1280),f,c
 49015   012D9E  0E01               	movlw	1
 49016   012DA0  6E40               	movwf	(??_addTestEvent+1)^(0+1280),c
 49017   012DA2  2A3F               	incf	??_addTestEvent^(0+1280),f,c
 49018   012DA4  D002               	goto	u7664
 49019   012DA6                     u7665:
 49020   012DA6  90D8               	bcf	status,0,c
 49021   012DA8  3640               	rlcf	(??_addTestEvent+1)^(0+1280),f,c
 49022   012DAA                     u7664:
 49023   012DAA  2E3F               	decfsz	??_addTestEvent^(0+1280),f,c
 49024   012DAC  D7FC               	goto	u7665
 49025   012DAE  5040               	movf	(??_addTestEvent+1)^(0+1280),w,c
 49026   012DB0  6E30               	movwf	addEvent@evVal^(0+1280),c
 49027   012DB2  0E01               	movlw	1
 49028   012DB4  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 49029   012DB6  ECC3  F094         	call	_addEvent	;wreg free
 49030                           
 49031                           ;../canpan3Events.c: 95:     addEvent(nn.word, sw, 5, ((uint16_t)1<<(sw-9))&0xFF, TRUE);
 49032   012DBA  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 49033   012DBE  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 49034   012DC2  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 49035   012DC6  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 49036   012DC8  0E05               	movlw	5
 49037   012DCA  6E2F               	movwf	addEvent@evNum^(0+1280),c
 49038   012DCC  C541  F53F         	movff	addTestEvent@sw,??_addTestEvent
 49039   012DD0  0EF7               	movlw	-9
 49040   012DD2  263F               	addwf	??_addTestEvent^(0+1280),f,c
 49041   012DD4  0E01               	movlw	1
 49042   012DD6  6E40               	movwf	(??_addTestEvent+1)^(0+1280),c
 49043   012DD8  2A3F               	incf	??_addTestEvent^(0+1280),f,c
 49044   012DDA  D002               	goto	u7674
 49045   012DDC                     u7675:
 49046   012DDC  90D8               	bcf	status,0,c
 49047   012DDE  3640               	rlcf	(??_addTestEvent+1)^(0+1280),f,c
 49048   012DE0                     u7674:
 49049   012DE0  2E3F               	decfsz	??_addTestEvent^(0+1280),f,c
 49050   012DE2  D7FC               	goto	u7675
 49051   012DE4  5040               	movf	(??_addTestEvent+1)^(0+1280),w,c
 49052   012DE6  6E30               	movwf	addEvent@evVal^(0+1280),c
 49053   012DE8  0E01               	movlw	1
 49054   012DEA  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 49055   012DEC  ECC3  F094         	call	_addEvent	;wreg free
 49056                           
 49057                           ;../canpan3Events.c: 96:     addEvent(nn.word, sw, 6, ((uint16_t)1<<(sw-17))&0xFF, TRUE)
      +                          ;
 49058   012DF0  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 49059   012DF4  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 49060   012DF8  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 49061   012DFC  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 49062   012DFE  0E06               	movlw	6
 49063   012E00  6E2F               	movwf	addEvent@evNum^(0+1280),c
 49064   012E02  C541  F53F         	movff	addTestEvent@sw,??_addTestEvent
 49065   012E06  0EEF               	movlw	-17
 49066   012E08  263F               	addwf	??_addTestEvent^(0+1280),f,c
 49067   012E0A  0E01               	movlw	1
 49068   012E0C  6E40               	movwf	(??_addTestEvent+1)^(0+1280),c
 49069   012E0E  2A3F               	incf	??_addTestEvent^(0+1280),f,c
 49070   012E10  D002               	goto	u7684
 49071   012E12                     u7685:
 49072   012E12  90D8               	bcf	status,0,c
 49073   012E14  3640               	rlcf	(??_addTestEvent+1)^(0+1280),f,c
 49074   012E16                     u7684:
 49075   012E16  2E3F               	decfsz	??_addTestEvent^(0+1280),f,c
 49076   012E18  D7FC               	goto	u7685
 49077   012E1A  5040               	movf	(??_addTestEvent+1)^(0+1280),w,c
 49078   012E1C  6E30               	movwf	addEvent@evVal^(0+1280),c
 49079   012E1E  0E01               	movlw	1
 49080   012E20  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 49081   012E22  ECC3  F094         	call	_addEvent	;wreg free
 49082                           
 49083                           ;../canpan3Events.c: 97:     addEvent(nn.word, sw, 7, ((uint16_t)1<<(sw-25))&0xFF, TRUE)
      +                          ;
 49084   012E26  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 49085   012E2A  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 49086   012E2E  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 49087   012E32  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 49088   012E34  0E07               	movlw	7
 49089   012E36  6E2F               	movwf	addEvent@evNum^(0+1280),c
 49090   012E38  C541  F53F         	movff	addTestEvent@sw,??_addTestEvent
 49091   012E3C  0EE7               	movlw	-25
 49092   012E3E  263F               	addwf	??_addTestEvent^(0+1280),f,c
 49093   012E40  0E01               	movlw	1
 49094   012E42  6E40               	movwf	(??_addTestEvent+1)^(0+1280),c
 49095   012E44  2A3F               	incf	??_addTestEvent^(0+1280),f,c
 49096   012E46  D002               	goto	u7694
 49097   012E48                     u7695:
 49098   012E48  90D8               	bcf	status,0,c
 49099   012E4A  3640               	rlcf	(??_addTestEvent+1)^(0+1280),f,c
 49100   012E4C                     u7694:
 49101   012E4C  2E3F               	decfsz	??_addTestEvent^(0+1280),f,c
 49102   012E4E  D7FC               	goto	u7695
 49103   012E50  5040               	movf	(??_addTestEvent+1)^(0+1280),w,c
 49104   012E52  6E30               	movwf	addEvent@evVal^(0+1280),c
 49105   012E54  0E01               	movlw	1
 49106   012E56  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 49107   012E58  ECC3  F094         	call	_addEvent	;wreg free
 49108                           
 49109                           ;../canpan3Events.c: 99:     addEvent(nn.word, sw, 8, 0, TRUE);
 49110   012E5C  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 49111   012E60  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 49112   012E64  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 49113   012E68  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 49114   012E6A  0E08               	movlw	8
 49115   012E6C  6E2F               	movwf	addEvent@evNum^(0+1280),c
 49116   012E6E  0E00               	movlw	0
 49117   012E70  6E30               	movwf	addEvent@evVal^(0+1280),c
 49118   012E72  0E01               	movlw	1
 49119   012E74  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 49120   012E76  ECC3  F094         	call	_addEvent	;wreg free
 49121                           
 49122                           ;../canpan3Events.c: 100:     addEvent(nn.word, sw, 9, 0, TRUE);
 49123   012E7A  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 49124   012E7E  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 49125   012E82  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 49126   012E86  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 49127   012E88  0E09               	movlw	9
 49128   012E8A  6E2F               	movwf	addEvent@evNum^(0+1280),c
 49129   012E8C  0E00               	movlw	0
 49130   012E8E  6E30               	movwf	addEvent@evVal^(0+1280),c
 49131   012E90  0E01               	movlw	1
 49132   012E92  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 49133   012E94  ECC3  F094         	call	_addEvent	;wreg free
 49134                           
 49135                           ;../canpan3Events.c: 101:     addEvent(nn.word, sw, 10, 0, TRUE);
 49136   012E98  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 49137   012E9C  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 49138   012EA0  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 49139   012EA4  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 49140   012EA6  0E0A               	movlw	10
 49141   012EA8  6E2F               	movwf	addEvent@evNum^(0+1280),c
 49142   012EAA  0E00               	movlw	0
 49143   012EAC  6E30               	movwf	addEvent@evVal^(0+1280),c
 49144   012EAE  0E01               	movlw	1
 49145   012EB0  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 49146   012EB2  ECC3  F094         	call	_addEvent	;wreg free
 49147                           
 49148                           ;../canpan3Events.c: 102:     addEvent(nn.word, sw, 11, 0, TRUE);
 49149   012EB6  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 49150   012EBA  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 49151   012EBE  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 49152   012EC2  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 49153   012EC4  0E0B               	movlw	11
 49154   012EC6  6E2F               	movwf	addEvent@evNum^(0+1280),c
 49155   012EC8  0E00               	movlw	0
 49156   012ECA  6E30               	movwf	addEvent@evVal^(0+1280),c
 49157   012ECC  0E01               	movlw	1
 49158   012ECE  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 49159   012ED0  ECC3  F094         	call	_addEvent	;wreg free
 49160                           
 49161                           ;../canpan3Events.c: 103:     return addEvent(nn.word, sw, 12, 0xFF, TRUE);;	Return valu
      +                          e of _addTestEvent is never used
 49162   012ED4  C55E  F52B         	movff	_nn,addEvent@nodeNumber
 49163   012ED8  C55F  F52C         	movff	_nn+1,addEvent@nodeNumber+1
 49164   012EDC  C541  F52D         	movff	addTestEvent@sw,addEvent@eventNumber
 49165   012EE0  6A2E               	clrf	(addEvent@eventNumber+1)^(0+1280),c
 49166   012EE2  0E0C               	movlw	12
 49167   012EE4  6E2F               	movwf	addEvent@evNum^(0+1280),c
 49168   012EE6  0EFF               	movlw	255
 49169   012EE8  6E30               	movwf	addEvent@evVal^(0+1280),c
 49170   012EEA  0E01               	movlw	1
 49171   012EEC  6E31               	movwf	addEvent@forceOwnNN^(0+1280),c
 49172   012EEE  ECC3  F094         	call	_addEvent	;wreg free
 49173   012EF2  0012               	return		;funcret
 49174   012EF4                     __end_of_addTestEvent:
 49175                           	callstack 0
 49176                           
 49177 ;; *************** function _addEvent *****************
 49178 ;; Defined at:
 49179 ;;		line 754 in file "../../VLCBlib_PIC/event_teach_simple.c"
 49180 ;; Parameters:    Size  Location     Type
 49181 ;;  nodeNumber      2   42[COMRAM] unsigned short 
 49182 ;;  eventNumber     2   44[COMRAM] unsigned short 
 49183 ;;  evNum           1   46[COMRAM] unsigned char 
 49184 ;;  evVal           1   47[COMRAM] unsigned char 
 49185 ;;  forceOwnNN      1   48[COMRAM] enum E23307
 49186 ;; Auto vars:     Size  Location     Type
 49187 ;;  e               1   60[COMRAM] unsigned char 
 49188 ;;  en              2   58[COMRAM] unsigned short 
 49189 ;;  tableIndex      1   61[COMRAM] unsigned char 
 49190 ;; Return value:  Size  Location     Type
 49191 ;;                  1    wreg      unsigned char 
 49192 ;; Registers used:
 49193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49194 ;; Tracked objects:
 49195 ;;		On entry : 0/0
 49196 ;;		On exit  : 0/0
 49197 ;;		Unchanged: 0/0
 49198 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 49199 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49200 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49201 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49202 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49203 ;;Total ram usage:       20 bytes
 49204 ;; Hardware stack levels used: 1
 49205 ;; Hardware stack levels required when called: 7
 49206 ;; This function calls:
 49207 ;;		_findEvent
 49208 ;;		_flushFlashBlock
 49209 ;;		_getEN
 49210 ;;		_rebuildHashtable
 49211 ;;		_writeEv
 49212 ;;		_writeNVM
 49213 ;; This function is called by:
 49214 ;;		_addTestEvent
 49215 ;;		_APP_addEvent
 49216 ;; This function uses a non-reentrant model
 49217 ;;
 49218                           
 49219                           	psect	text150
 49220   012986                     __ptext150:
 49221                           	callstack 0
 49222   012986                     _addEvent:
 49223                           	callstack 115
 49224                           
 49225                           ;../../VLCBlib_PIC/event_teach_simple.c: 755:     uint8_t tableIndex;;../../VLCBlib_PIC/
      +                          event_teach_simple.c: 758:     tableIndex = findEvent(nodeNumber, eventNumber);
 49226                           
 49227                           ;incstack = 0
 49228   012986  C52B  F51E         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 49229   01298A  C52C  F51F         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 49230   01298E  C52D  F520         	movff	addEvent@eventNumber,findEvent@eventNumber
 49231   012992  C52E  F521         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 49232   012996  ECAE  F0A4         	call	_findEvent	;wreg free
 49233   01299A  6E3E               	movwf	addEvent@tableIndex^(0+1280),c
 49234                           
 49235                           ;../../VLCBlib_PIC/event_teach_simple.c: 759:     if (tableIndex == 0xff) {
 49236   01299C  283E               	incf	addEvent@tableIndex^(0+1280),w,c
 49237   01299E  A4D8               	btfss	status,2,c
 49238   0129A0  D0C7               	goto	l8813
 49239                           
 49240                           ;../../VLCBlib_PIC/event_teach_simple.c: 760:         errno = CMDERR_TOO_MANY_EVENTS;
 49241   0129A2  0E04               	movlw	4
 49242   0129A4  0105               	movlb	5	; () banked
 49243   0129A6  6F9F               	movwf	_errno& (0+255),b
 49244                           
 49245                           ; BSR set to: 5
 49246                           ;../../VLCBlib_PIC/event_teach_simple.c: 762:         for (tableIndex=0; tableIndex<254;
      +                           tableIndex++) {
 49247   0129A8  6A3E               	clrf	addEvent@tableIndex^(0+1280),c
 49248   0129AA                     l8775:
 49249   0129AA  0EFD               	movlw	253
 49250   0129AC  643E               	cpfsgt	addEvent@tableIndex^(0+1280),c
 49251   0129AE  D001               	goto	l8779
 49252   0129B0  D0B9               	goto	l8807
 49253   0129B2                     l8779:
 49254                           
 49255                           ;../../VLCBlib_PIC/event_teach_simple.c: 763:             uint16_t en = getEN(tableIndex
      +                          );
 49256   0129B2  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 49257   0129B4  EC00  F0A9         	call	_getEN
 49258   0129B8  C50D  F53B         	movff	?_getEN,addEvent@en
 49259   0129BC  C50E  F53C         	movff	?_getEN+1,addEvent@en+1
 49260                           
 49261                           ;../../VLCBlib_PIC/event_teach_simple.c: 764:             if (en == 0) {
 49262   0129C0  503B               	movf	addEvent@en^(0+1280),w,c
 49263   0129C2  103C               	iorwf	(addEvent@en+1)^(0+1280),w,c
 49264   0129C4  A4D8               	btfss	status,2,c
 49265   0129C6  D0AC               	goto	l8803
 49266                           
 49267                           ;../../VLCBlib_PIC/event_teach_simple.c: 765:                 uint8_t e;;../../VLCBlib_P
      +                          IC/event_teach_simple.c: 767:                 writeNVM(FLASH_NVM_TYPE, 0x1E800 + (sizeof
      +                          (Event) + 1 + 13)*tableIndex+1, nodeNumber&0xFF);
 49268   0129C8  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 49269   0129CA  0D12               	mullw	18
 49270   0129CC  C4F3 F532          	movff	prodl,??_addEvent
 49271   0129D0  C4F4 F533          	movff	prodh,??_addEvent+1
 49272   0129D4  6A34               	clrf	(??_addEvent+2)^(0+1280),c
 49273   0129D6  0E01               	movlw	1
 49274   0129D8  2432               	addwf	??_addEvent^(0+1280),w,c
 49275   0129DA  6E0E               	movwf	writeNVM@index^(0+1280),c
 49276   0129DC  0EE8               	movlw	232
 49277   0129DE  2033               	addwfc	(??_addEvent+1)^(0+1280),w,c
 49278   0129E0  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 49279   0129E2  0E01               	movlw	1
 49280   0129E4  2034               	addwfc	(??_addEvent+2)^(0+1280),w,c
 49281   0129E6  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 49282   0129E8  C52B  F511         	movff	addEvent@nodeNumber,writeNVM@value
 49283   0129EC  0E01               	movlw	1
 49284   0129EE  ECC3  F0AD         	call	_writeNVM
 49285                           
 49286                           ;../../VLCBlib_PIC/event_teach_simple.c: 768:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+0, nodeNumber>>8);
 49287   0129F2  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 49288   0129F4  0D12               	mullw	18
 49289   0129F6  C4F3 F532          	movff	prodl,??_addEvent
 49290   0129FA  C4F4 F533          	movff	prodh,??_addEvent+1
 49291   0129FE  6A34               	clrf	(??_addEvent+2)^(0+1280),c
 49292   012A00  0E00               	movlw	0
 49293   012A02  2432               	addwf	??_addEvent^(0+1280),w,c
 49294   012A04  6E0E               	movwf	writeNVM@index^(0+1280),c
 49295   012A06  0EE8               	movlw	232
 49296   012A08  2033               	addwfc	(??_addEvent+1)^(0+1280),w,c
 49297   012A0A  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 49298   012A0C  0E01               	movlw	1
 49299   012A0E  2034               	addwfc	(??_addEvent+2)^(0+1280),w,c
 49300   012A10  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 49301   012A12  502C               	movf	(addEvent@nodeNumber+1)^(0+1280),w,c
 49302   012A14  6E11               	movwf	writeNVM@value^(0+1280),c
 49303   012A16  0E01               	movlw	1
 49304   012A18  ECC3  F0AD         	call	_writeNVM
 49305                           
 49306                           ;../../VLCBlib_PIC/event_teach_simple.c: 769:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+3, eventNumber&0xFF);
 49307   012A1C  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 49308   012A1E  0D12               	mullw	18
 49309   012A20  C4F3 F532          	movff	prodl,??_addEvent
 49310   012A24  C4F4 F533          	movff	prodh,??_addEvent+1
 49311   012A28  6A34               	clrf	(??_addEvent+2)^(0+1280),c
 49312   012A2A  0E03               	movlw	3
 49313   012A2C  2432               	addwf	??_addEvent^(0+1280),w,c
 49314   012A2E  6E0E               	movwf	writeNVM@index^(0+1280),c
 49315   012A30  0EE8               	movlw	232
 49316   012A32  2033               	addwfc	(??_addEvent+1)^(0+1280),w,c
 49317   012A34  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 49318   012A36  0E01               	movlw	1
 49319   012A38  2034               	addwfc	(??_addEvent+2)^(0+1280),w,c
 49320   012A3A  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 49321   012A3C  C52D  F511         	movff	addEvent@eventNumber,writeNVM@value
 49322   012A40  0E01               	movlw	1
 49323   012A42  ECC3  F0AD         	call	_writeNVM
 49324                           
 49325                           ;../../VLCBlib_PIC/event_teach_simple.c: 770:                 writeNVM(FLASH_NVM_TYPE, 0
      +                          x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+2, eventNumber>>8);
 49326   012A46  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 49327   012A48  0D12               	mullw	18
 49328   012A4A  C4F3 F532          	movff	prodl,??_addEvent
 49329   012A4E  C4F4 F533          	movff	prodh,??_addEvent+1
 49330   012A52  6A34               	clrf	(??_addEvent+2)^(0+1280),c
 49331   012A54  0E02               	movlw	2
 49332   012A56  2432               	addwf	??_addEvent^(0+1280),w,c
 49333   012A58  6E0E               	movwf	writeNVM@index^(0+1280),c
 49334   012A5A  0EE8               	movlw	232
 49335   012A5C  2033               	addwfc	(??_addEvent+1)^(0+1280),w,c
 49336   012A5E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 49337   012A60  0E01               	movlw	1
 49338   012A62  2034               	addwfc	(??_addEvent+2)^(0+1280),w,c
 49339   012A64  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 49340   012A66  502E               	movf	(addEvent@eventNumber+1)^(0+1280),w,c
 49341   012A68  6E11               	movwf	writeNVM@value^(0+1280),c
 49342   012A6A  0E01               	movlw	1
 49343   012A6C  ECC3  F0AD         	call	_writeNVM
 49344                           
 49345                           ;../../VLCBlib_PIC/event_teach_simple.c: 771:                 if (forceOwnNN) {
 49346   012A70  5031               	movf	addEvent@forceOwnNN^(0+1280),w,c
 49347   012A72  B4D8               	btfsc	status,2,c
 49348   012A74  D016               	goto	l8789
 49349                           
 49350                           ;../../VLCBlib_PIC/event_teach_simple.c: 772:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+4, 1);
 49351   012A76  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 49352   012A78  0D12               	mullw	18
 49353   012A7A  C4F3 F532          	movff	prodl,??_addEvent
 49354   012A7E  C4F4 F533          	movff	prodh,??_addEvent+1
 49355   012A82  6A34               	clrf	(??_addEvent+2)^(0+1280),c
 49356   012A84  0E04               	movlw	4
 49357   012A86  2432               	addwf	??_addEvent^(0+1280),w,c
 49358   012A88  6E0E               	movwf	writeNVM@index^(0+1280),c
 49359   012A8A  0EE8               	movlw	232
 49360   012A8C  2033               	addwfc	(??_addEvent+1)^(0+1280),w,c
 49361   012A8E  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 49362   012A90  0E01               	movlw	1
 49363   012A92  2034               	addwfc	(??_addEvent+2)^(0+1280),w,c
 49364   012A94  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 49365   012A96  0E01               	movlw	1
 49366   012A98  6E11               	movwf	writeNVM@value^(0+1280),c
 49367   012A9A  0E01               	movlw	1
 49368   012A9C  ECC3  F0AD         	call	_writeNVM
 49369                           
 49370                           ;../../VLCBlib_PIC/event_teach_simple.c: 773:                 } else {
 49371   012AA0  D015               	goto	l8791
 49372   012AA2                     l8789:
 49373                           
 49374                           ;../../VLCBlib_PIC/event_teach_simple.c: 774:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+4, 0);
 49375   012AA2  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 49376   012AA4  0D12               	mullw	18
 49377   012AA6  C4F3 F532          	movff	prodl,??_addEvent
 49378   012AAA  C4F4 F533          	movff	prodh,??_addEvent+1
 49379   012AAE  6A34               	clrf	(??_addEvent+2)^(0+1280),c
 49380   012AB0  0E04               	movlw	4
 49381   012AB2  2432               	addwf	??_addEvent^(0+1280),w,c
 49382   012AB4  6E0E               	movwf	writeNVM@index^(0+1280),c
 49383   012AB6  0EE8               	movlw	232
 49384   012AB8  2033               	addwfc	(??_addEvent+1)^(0+1280),w,c
 49385   012ABA  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 49386   012ABC  0E01               	movlw	1
 49387   012ABE  2034               	addwfc	(??_addEvent+2)^(0+1280),w,c
 49388   012AC0  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 49389   012AC2  0E00               	movlw	0
 49390   012AC4  6E11               	movwf	writeNVM@value^(0+1280),c
 49391   012AC6  0E01               	movlw	1
 49392   012AC8  ECC3  F0AD         	call	_writeNVM
 49393   012ACC                     l8791:
 49394                           
 49395                           ;../../VLCBlib_PIC/event_teach_simple.c: 776:                 for (e = 0; e < 13; e++) {
 49396   012ACC  6A3D               	clrf	addEvent@e^(0+1280),c
 49397   012ACE                     l8797:
 49398                           
 49399                           ;../../VLCBlib_PIC/event_teach_simple.c: 777:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+5 +e, 0);
 49400   012ACE  503D               	movf	addEvent@e^(0+1280),w,c
 49401   012AD0  6E32               	movwf	??_addEvent^(0+1280),c
 49402   012AD2  6A33               	clrf	(??_addEvent+1)^(0+1280),c
 49403   012AD4  6A34               	clrf	(??_addEvent+2)^(0+1280),c
 49404   012AD6  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 49405   012AD8  0D12               	mullw	18
 49406   012ADA  C4F3 F535          	movff	prodl,??_addEvent+3
 49407   012ADE  C4F4 F536          	movff	prodh,??_addEvent+4
 49408   012AE2  6A37               	clrf	(??_addEvent+5)^(0+1280),c
 49409   012AE4  5032               	movf	??_addEvent^(0+1280),w,c
 49410   012AE6  2435               	addwf	(??_addEvent+3)^(0+1280),w,c
 49411   012AE8  6E38               	movwf	(??_addEvent+6)^(0+1280),c
 49412   012AEA  5033               	movf	(??_addEvent+1)^(0+1280),w,c
 49413   012AEC  2036               	addwfc	(??_addEvent+4)^(0+1280),w,c
 49414   012AEE  6E39               	movwf	(??_addEvent+7)^(0+1280),c
 49415   012AF0  5034               	movf	(??_addEvent+2)^(0+1280),w,c
 49416   012AF2  2037               	addwfc	(??_addEvent+5)^(0+1280),w,c
 49417   012AF4  6E3A               	movwf	(??_addEvent+8)^(0+1280),c
 49418   012AF6  0E05               	movlw	5
 49419   012AF8  2438               	addwf	(??_addEvent+6)^(0+1280),w,c
 49420   012AFA  6E0E               	movwf	writeNVM@index^(0+1280),c
 49421   012AFC  0EE8               	movlw	232
 49422   012AFE  2039               	addwfc	(??_addEvent+7)^(0+1280),w,c
 49423   012B00  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 49424   012B02  0E01               	movlw	1
 49425   012B04  203A               	addwfc	(??_addEvent+8)^(0+1280),w,c
 49426   012B06  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 49427   012B08  0E00               	movlw	0
 49428   012B0A  6E11               	movwf	writeNVM@value^(0+1280),c
 49429   012B0C  0E01               	movlw	1
 49430   012B0E  ECC3  F0AD         	call	_writeNVM
 49431                           
 49432                           ;../../VLCBlib_PIC/event_teach_simple.c: 778:                 }
 49433   012B12  2A3D               	incf	addEvent@e^(0+1280),f,c
 49434   012B14  0E0C               	movlw	12
 49435   012B16  643D               	cpfsgt	addEvent@e^(0+1280),c
 49436   012B18  D7DA               	goto	l8797
 49437                           
 49438                           ;../../VLCBlib_PIC/event_teach_simple.c: 779:                 errno = 0;
 49439   012B1A  0105               	movlb	5	; () banked
 49440   012B1C  6B9F               	clrf	_errno& (0+255),b
 49441                           
 49442                           ;../../VLCBlib_PIC/event_teach_simple.c: 780:                 break;
 49443   012B1E  D002               	goto	l8807
 49444   012B20                     l8803:
 49445                           
 49446                           ;../../VLCBlib_PIC/event_teach_simple.c: 782:         }
 49447   012B20  2A3E               	incf	addEvent@tableIndex^(0+1280),f,c
 49448   012B22  D743               	goto	l8775
 49449   012B24                     l8807:
 49450                           
 49451                           ;../../VLCBlib_PIC/event_teach_simple.c: 783:         if (errno) {
 49452   012B24  0105               	movlb	5	; () banked
 49453   012B26  519F               	movf	_errno& (0+255),w,b
 49454   012B28  B4D8               	btfsc	status,2,c
 49455   012B2A  D002               	goto	l8813
 49456   012B2C                     u6480:
 49457                           
 49458                           ; BSR set to: 5
 49459                           ;../../VLCBlib_PIC/event_teach_simple.c: 784:             return 0xff;
 49460   012B2C  0EFF               	movlw	255
 49461   012B2E  0012               	return	
 49462   012B30                     l8813:
 49463                           
 49464                           ;../../VLCBlib_PIC/event_teach_simple.c: 788:     if (writeEv(tableIndex, evNum, evVal))
      +                           {
 49465   012B30  C52F  F515         	movff	addEvent@evNum,writeEv@evNum
 49466   012B34  C530  F516         	movff	addEvent@evVal,writeEv@evVal
 49467   012B38  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 49468   012B3A  EC3D  F0AB         	call	_writeEv
 49469   012B3E  0900               	iorlw	0
 49470   012B40  B4D8               	btfsc	status,2,c
 49471   012B42  D004               	goto	l8821
 49472                           
 49473                           ;../../VLCBlib_PIC/event_teach_simple.c: 790:         errno = CMDERR_INV_EV_IDX;
 49474   012B44  0E06               	movlw	6
 49475   012B46  0105               	movlb	5	; () banked
 49476   012B48  6F9F               	movwf	_errno& (0+255),b
 49477   012B4A  D7F0               	goto	u6480
 49478   012B4C                     l8821:
 49479                           
 49480                           ;../../VLCBlib_PIC/event_teach_simple.c: 794:     flushFlashBlock();
 49481   012B4C  ECF6  F0AB         	call	_flushFlashBlock	;wreg free
 49482                           
 49483                           ;../../VLCBlib_PIC/event_teach_simple.c: 796:     rebuildHashtable();
 49484   012B50  EC1A  F0A1         	call	_rebuildHashtable	;wreg free
 49485                           
 49486                           ;../../VLCBlib_PIC/event_teach_simple.c: 798:     return tableIndex;
 49487   012B54  503E               	movf	addEvent@tableIndex^(0+1280),w,c
 49488   012B56  0012               	return		;funcret
 49489   012B58                     __end_of_addEvent:
 49490                           	callstack 0
 49491                           
 49492 ;; *************** function _writeEv *****************
 49493 ;; Defined at:
 49494 ;;		line 845 in file "../../VLCBlib_PIC/event_teach_simple.c"
 49495 ;; Parameters:    Size  Location     Type
 49496 ;;  tableIndex      1    wreg     unsigned char 
 49497 ;;  evNum           1   20[COMRAM] unsigned char 
 49498 ;;  evVal           1   21[COMRAM] unsigned char 
 49499 ;; Auto vars:     Size  Location     Type
 49500 ;;  tableIndex      1   31[COMRAM] unsigned char 
 49501 ;; Return value:  Size  Location     Type
 49502 ;;                  1    wreg      unsigned char 
 49503 ;; Registers used:
 49504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49505 ;; Tracked objects:
 49506 ;;		On entry : 0/0
 49507 ;;		On exit  : 0/0
 49508 ;;		Unchanged: 0/0
 49509 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 49510 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49512 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49513 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49514 ;;Total ram usage:       12 bytes
 49515 ;; Hardware stack levels used: 1
 49516 ;; Hardware stack levels required when called: 6
 49517 ;; This function calls:
 49518 ;;		_writeNVM
 49519 ;; This function is called by:
 49520 ;;		_APP_addEvent
 49521 ;;		_addEvent
 49522 ;; This function uses a non-reentrant model
 49523 ;;
 49524                           
 49525                           	psect	text151
 49526   01567A                     __ptext151:
 49527                           	callstack 0
 49528   01567A                     _writeEv:
 49529                           	callstack 116
 49530                           
 49531                           ;incstack = 0
 49532                           ;writeEv@tableIndex stored from wreg
 49533   01567A  6E20               	movwf	writeEv@tableIndex^(0+1280),c
 49534                           
 49535                           ;../../VLCBlib_PIC/event_teach_simple.c: 846:     if (evNum >= 13) {
 49536   01567C  0E0C               	movlw	12
 49537   01567E  6415               	cpfsgt	writeEv@evNum^(0+1280),c
 49538   015680  D002               	goto	l8681
 49539                           
 49540                           ;../../VLCBlib_PIC/event_teach_simple.c: 847:         return CMDERR_INV_EV_IDX;
 49541   015682  0E06               	movlw	6
 49542   015684  0012               	return	
 49543   015686                     l8681:
 49544                           
 49545                           ;../../VLCBlib_PIC/event_teach_simple.c: 849:     if (tableIndex >= 254) {
 49546   015686  0EFD               	movlw	253
 49547   015688  6420               	cpfsgt	writeEv@tableIndex^(0+1280),c
 49548   01568A  D002               	goto	l8687
 49549                           
 49550                           ;../../VLCBlib_PIC/event_teach_simple.c: 850:         return CMDERR_INV_EN_IDX;
 49551   01568C  0E08               	movlw	8
 49552   01568E  0012               	return	
 49553   015690                     l8687:
 49554                           
 49555                           ;../../VLCBlib_PIC/event_teach_simple.c: 854:     writeNVM(FLASH_NVM_TYPE, 0x1E800 + (si
      +                          zeof(Event) + 1 + 13)*tableIndex+5 +evNum, evVal);
 49556   015690  5015               	movf	writeEv@evNum^(0+1280),w,c
 49557   015692  6E17               	movwf	??_writeEv^(0+1280),c
 49558   015694  6A18               	clrf	(??_writeEv+1)^(0+1280),c
 49559   015696  6A19               	clrf	(??_writeEv+2)^(0+1280),c
 49560   015698  5020               	movf	writeEv@tableIndex^(0+1280),w,c
 49561   01569A  0D12               	mullw	18
 49562   01569C  C4F3 F51A          	movff	prodl,??_writeEv+3
 49563   0156A0  C4F4 F51B          	movff	prodh,??_writeEv+4
 49564   0156A4  6A1C               	clrf	(??_writeEv+5)^(0+1280),c
 49565   0156A6  5017               	movf	??_writeEv^(0+1280),w,c
 49566   0156A8  241A               	addwf	(??_writeEv+3)^(0+1280),w,c
 49567   0156AA  6E1D               	movwf	(??_writeEv+6)^(0+1280),c
 49568   0156AC  5018               	movf	(??_writeEv+1)^(0+1280),w,c
 49569   0156AE  201B               	addwfc	(??_writeEv+4)^(0+1280),w,c
 49570   0156B0  6E1E               	movwf	(??_writeEv+7)^(0+1280),c
 49571   0156B2  5019               	movf	(??_writeEv+2)^(0+1280),w,c
 49572   0156B4  201C               	addwfc	(??_writeEv+5)^(0+1280),w,c
 49573   0156B6  6E1F               	movwf	(??_writeEv+8)^(0+1280),c
 49574   0156B8  0E05               	movlw	5
 49575   0156BA  241D               	addwf	(??_writeEv+6)^(0+1280),w,c
 49576   0156BC  6E0E               	movwf	writeNVM@index^(0+1280),c
 49577   0156BE  0EE8               	movlw	232
 49578   0156C0  201E               	addwfc	(??_writeEv+7)^(0+1280),w,c
 49579   0156C2  6E0F               	movwf	(writeNVM@index+1)^(0+1280),c
 49580   0156C4  0E01               	movlw	1
 49581   0156C6  201F               	addwfc	(??_writeEv+8)^(0+1280),w,c
 49582   0156C8  6E10               	movwf	(writeNVM@index+2)^(0+1280),c
 49583   0156CA  C516  F511         	movff	writeEv@evVal,writeNVM@value
 49584   0156CE  0E01               	movlw	1
 49585   0156D0  ECC3  F0AD         	call	_writeNVM
 49586                           
 49587                           ;../../VLCBlib_PIC/event_teach_simple.c: 855:     return 0;
 49588   0156D4  0E00               	movlw	0
 49589   0156D6  0012               	return		;funcret
 49590   0156D8                     __end_of_writeEv:
 49591                           	callstack 0
 49592                           
 49593 ;; *************** function _writeNVM *****************
 49594 ;; Defined at:
 49595 ;;		line 553 in file "../../VLCBlib_PIC/nvm.c"
 49596 ;; Parameters:    Size  Location     Type
 49597 ;;  type            1    wreg     enum E23276
 49598 ;;  index           3   13[COMRAM] unsigned um
 49599 ;;  value           1   16[COMRAM] unsigned char 
 49600 ;; Auto vars:     Size  Location     Type
 49601 ;;  type            1   19[COMRAM] enum E23276
 49602 ;; Return value:  Size  Location     Type
 49603 ;;                  1    wreg      unsigned char 
 49604 ;; Registers used:
 49605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 49606 ;; Tracked objects:
 49607 ;;		On entry : 0/0
 49608 ;;		On exit  : 0/0
 49609 ;;		Unchanged: 0/0
 49610 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 49611 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49613 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49614 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49615 ;;Total ram usage:        7 bytes
 49616 ;; Hardware stack levels used: 1
 49617 ;; Hardware stack levels required when called: 5
 49618 ;; This function calls:
 49619 ;;		_EEPROM_Write
 49620 ;;		_FLASH_Write
 49621 ;; This function is called by:
 49622 ;;		_APP_factoryReset
 49623 ;;		_APP_addEvent
 49624 ;;		_bootProcessMessage
 49625 ;;		_canFactoryReset
 49626 ;;		_setNewCanId
 49627 ;;		_removeTableEntry
 49628 ;;		_addEvent
 49629 ;;		_writeEv
 49630 ;;		_mnsFactoryReset
 49631 ;;		_mnsProcessMessage
 49632 ;;		_mnsPoll
 49633 ;;		_nvFactoryReset
 49634 ;;		_setNV
 49635 ;;		_factoryReset
 49636 ;;		_saveNV
 49637 ;; This function uses a non-reentrant model
 49638 ;;
 49639                           
 49640                           	psect	text152
 49641   015B86                     __ptext152:
 49642                           	callstack 0
 49643   015B86                     _writeNVM:
 49644                           	callstack 116
 49645                           
 49646                           ;incstack = 0
 49647                           ;writeNVM@type stored from wreg
 49648   015B86  6E14               	movwf	writeNVM@type^(0+1280),c
 49649                           
 49650                           ;../../VLCBlib_PIC/nvm.c: 554:     switch(type) {
 49651   015B88  D016               	goto	l8459
 49652   015B8A                     l8449:
 49653                           
 49654                           ;../../VLCBlib_PIC/nvm.c: 556:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 49655   015B8A  C50E  F509         	movff	writeNVM@index,EEPROM_Write@index
 49656   015B8E  C50F  F50A         	movff	writeNVM@index+1,EEPROM_Write@index+1
 49657   015B92  C510  F50B         	movff	writeNVM@index+2,EEPROM_Write@index+2
 49658   015B96  C511  F50C         	movff	writeNVM@value,EEPROM_Write@value
 49659   015B9A  ECEA  F0AD         	call	_EEPROM_Write	;wreg free
 49660   015B9E  0012               	return	
 49661   015BA0                     l8453:
 49662                           
 49663                           ;../../VLCBlib_PIC/nvm.c: 558:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 49664   015BA0  C50E  F506         	movff	writeNVM@index,FLASH_Write@index
 49665   015BA4  C50F  F507         	movff	writeNVM@index+1,FLASH_Write@index+1
 49666   015BA8  C510  F508         	movff	writeNVM@index+2,FLASH_Write@index+2
 49667   015BAC  C511  F509         	movff	writeNVM@value,FLASH_Write@value
 49668   015BB0  EC0F  F09F         	call	_FLASH_Write	;wreg free
 49669   015BB4  0012               	return	
 49670   015BB6                     l8459:
 49671   015BB6  5014               	movf	writeNVM@type^(0+1280),w,c
 49672   015BB8  6E12               	movwf	??_writeNVM^(0+1280),c
 49673   015BBA  6A13               	clrf	(??_writeNVM+1)^(0+1280),c
 49674                           
 49675                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 49676                           ; Switch size 1, requested type "simple"
 49677                           ; Number of cases is 1, Range of values is 0 to 0
 49678                           ; switch strategies available:
 49679                           ; Name         Instructions Cycles
 49680                           ; simple_byte            4     3 (average)
 49681                           ;	Chosen strategy is simple_byte
 49682   015BBC  5013               	movf	(??_writeNVM+1)^(0+1280),w,c
 49683   015BBE  0A00               	xorlw	0	; case 0
 49684   015BC0  A4D8               	btfss	status,2,c
 49685   015BC2  0012               	return	
 49686                           
 49687                           ; Switch size 1, requested type "simple"
 49688                           ; Number of cases is 2, Range of values is 0 to 1
 49689                           ; switch strategies available:
 49690                           ; Name         Instructions Cycles
 49691                           ; simple_byte            7     4 (average)
 49692                           ;	Chosen strategy is simple_byte
 49693   015BC4  5012               	movf	??_writeNVM^(0+1280),w,c
 49694   015BC6  0A00               	xorlw	0	; case 0
 49695   015BC8  B4D8               	btfsc	status,2,c
 49696   015BCA  D7DF               	goto	l8449
 49697   015BCC  0A01               	xorlw	1	; case 1
 49698   015BCE  A4D8               	btfss	status,2,c
 49699   015BD0  0012               	return	
 49700   015BD2  D7E6               	goto	l8453
 49701   015BD4                     __end_of_writeNVM:
 49702                           	callstack 0
 49703                           
 49704 ;; *************** function _FLASH_Write *****************
 49705 ;; Defined at:
 49706 ;;		line 507 in file "../../VLCBlib_PIC/nvm.c"
 49707 ;; Parameters:    Size  Location     Type
 49708 ;;  index           3    5[COMRAM] unsigned um
 49709 ;;  value           1    8[COMRAM] unsigned char 
 49710 ;; Auto vars:     Size  Location     Type
 49711 ;;  oldValue        1    0        unsigned char 
 49712 ;; Return value:  Size  Location     Type
 49713 ;;                  1    wreg      unsigned char 
 49714 ;; Registers used:
 49715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 49716 ;; Tracked objects:
 49717 ;;		On entry : 0/0
 49718 ;;		On exit  : 0/0
 49719 ;;		Unchanged: 0/0
 49720 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 49721 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49723 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49724 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49725 ;;Total ram usage:        8 bytes
 49726 ;; Hardware stack levels used: 1
 49727 ;; Hardware stack levels required when called: 4
 49728 ;; This function calls:
 49729 ;;		_eraseFlashBlock
 49730 ;;		_flushFlashBlock
 49731 ;;		_loadFlashBlock
 49732 ;; This function is called by:
 49733 ;;		_writeNVM
 49734 ;; This function uses a non-reentrant model
 49735 ;;
 49736                           
 49737                           	psect	text153
 49738   013E1E                     __ptext153:
 49739                           	callstack 0
 49740   013E1E                     _FLASH_Write:
 49741                           	callstack 116
 49742                           
 49743                           ;../../VLCBlib_PIC/nvm.c: 508:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 523:     i
      +                          f ((index&(~((flash_address_t)(256U)-1))) != flashBlock) {
 49744                           
 49745                           ;incstack = 0
 49746   013E1E  0E00               	movlw	0
 49747   013E20  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 49748   013E22  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 49749   013E24  0EFF               	movlw	255
 49750   013E26  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 49751   013E28  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 49752   013E2A  0EFF               	movlw	255
 49753   013E2C  1408               	andwf	(FLASH_Write@index+2)^(0+1280),w,c
 49754   013E2E  6E0C               	movwf	(??_FLASH_Write+2)^(0+1280),c
 49755   013E30  0105               	movlb	5	; () banked
 49756   013E32  5177               	movf	_flashBlock& (0+255),w,b
 49757   013E34  180A               	xorwf	??_FLASH_Write^(0+1280),w,c
 49758   013E36  E107               	bnz	u6020
 49759   013E38  5178               	movf	(_flashBlock+1)& (0+255),w,b
 49760   013E3A  180B               	xorwf	(??_FLASH_Write+1)^(0+1280),w,c
 49761   013E3C  E104               	bnz	u6020
 49762   013E3E  5179               	movf	(_flashBlock+2)& (0+255),w,b
 49763   013E40  180C               	xorwf	(??_FLASH_Write+2)^(0+1280),w,c
 49764   013E42  B4D8               	btfsc	status,2,c
 49765   013E44  D019               	goto	l8435
 49766   013E46                     u6020:
 49767                           
 49768                           ; BSR set to: 5
 49769                           ;../../VLCBlib_PIC/nvm.c: 524:         if (flashBlock != 0) {
 49770   013E46  5177               	movf	_flashBlock& (0+255),w,b
 49771   013E48  1178               	iorwf	(_flashBlock+1)& (0+255),w,b
 49772   013E4A  1179               	iorwf	(_flashBlock+2)& (0+255),w,b
 49773   013E4C  B4D8               	btfsc	status,2,c
 49774   013E4E  D008               	goto	l8431
 49775                           
 49776                           ; BSR set to: 5
 49777                           ;../../VLCBlib_PIC/nvm.c: 526:             if (flashFlags.eraseNeeded) {
 49778   013E50  A38B               	btfss	_flashFlags& (0+255),1,b
 49779   013E52  D004               	goto	l1965
 49780                           
 49781                           ; BSR set to: 5
 49782                           ;../../VLCBlib_PIC/nvm.c: 527:                 eraseFlashBlock();
 49783   013E54  EC9B  F0AB         	call	_eraseFlashBlock	;wreg free
 49784                           
 49785                           ;../../VLCBlib_PIC/nvm.c: 528:                 flashFlags.eraseNeeded = 0;
 49786   013E58  0105               	movlb	5	; () banked
 49787   013E5A  938B               	bcf	_flashFlags& (0+255),1,b
 49788   013E5C                     l1965:
 49789                           
 49790                           ; BSR set to: 5
 49791                           ;../../VLCBlib_PIC/nvm.c: 531:             flushFlashBlock();
 49792   013E5C  ECF6  F0AB         	call	_flushFlashBlock	;wreg free
 49793   013E60                     l8431:
 49794                           
 49795                           ;../../VLCBlib_PIC/nvm.c: 535:         flashBlock = (index&(~((flash_address_t)(256U)-1)
      +                          ));
 49796   013E60  0E00               	movlw	0
 49797   013E62  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 49798   013E64  0105               	movlb	5	; () banked
 49799   013E66  6F77               	movwf	_flashBlock& (0+255),b
 49800   013E68  0EFF               	movlw	255
 49801   013E6A  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 49802   013E6C  6F78               	movwf	(_flashBlock+1)& (0+255),b
 49803   013E6E  0EFF               	movlw	255
 49804   013E70  1408               	andwf	(FLASH_Write@index+2)^(0+1280),w,c
 49805   013E72  6F79               	movwf	(_flashBlock+2)& (0+255),b
 49806                           
 49807                           ; BSR set to: 5
 49808                           ;../../VLCBlib_PIC/nvm.c: 536:         loadFlashBlock();
 49809   013E74  EC47  F0AF         	call	_loadFlashBlock	;wreg free
 49810   013E78                     l8435:
 49811                           
 49812                           ;../../VLCBlib_PIC/nvm.c: 538:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&((256U)-1))])?1:0;
 49813   013E78  0EFF               	movlw	255
 49814   013E7A  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 49815   013E7C  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 49816   013E7E  0E00               	movlw	0
 49817   013E80  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 49818   013E82  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 49819   013E84  0E00               	movlw	0
 49820   013E86  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 49821   013E88  6ED9               	movwf	fsr2l,c
 49822   013E8A  0E37               	movlw	55
 49823   013E8C  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 49824   013E8E  6EDA               	movwf	fsr2h,c
 49825   013E90  50DF               	movf	indf2,w,c
 49826   013E92  0AFF               	xorlw	255
 49827   013E94  1409               	andwf	FLASH_Write@value^(0+1280),w,c
 49828   013E96  0900               	iorlw	0
 49829   013E98  B4D8               	btfsc	status,2,c
 49830   013E9A  D003               	goto	u6050
 49831   013E9C  6A0C               	clrf	(??_FLASH_Write+2)^(0+1280),c
 49832   013E9E  2A0C               	incf	(??_FLASH_Write+2)^(0+1280),f,c
 49833   013EA0  D001               	goto	u6068
 49834   013EA2                     u6050:
 49835   013EA2  6A0C               	clrf	(??_FLASH_Write+2)^(0+1280),c
 49836   013EA4                     u6068:
 49837   013EA4  0105               	movlb	5	; () banked
 49838   013EA6  318B               	rrcf	_flashFlags& (0+255),w,b
 49839   013EA8  0B01               	andlw	1
 49840   013EAA  6E0D               	movwf	(??_FLASH_Write+3)^(0+1280),c
 49841   013EAC  500C               	movf	(??_FLASH_Write+2)^(0+1280),w,c
 49842   013EAE  120D               	iorwf	(??_FLASH_Write+3)^(0+1280),f,c
 49843   013EB0  360D               	rlcf	(??_FLASH_Write+3)^(0+1280),f,c
 49844   013EB2  518B               	movf	_flashFlags& (0+255),w,b
 49845   013EB4  180D               	xorwf	(??_FLASH_Write+3)^(0+1280),w,c
 49846   013EB6  0BFD               	andlw	-3
 49847   013EB8  180D               	xorwf	(??_FLASH_Write+3)^(0+1280),w,c
 49848   013EBA  6F8B               	movwf	_flashFlags& (0+255),b
 49849                           
 49850                           ; BSR set to: 5
 49851                           ;../../VLCBlib_PIC/nvm.c: 539:     if (flashBuffer[(index&((256U)-1))] != value) {
 49852   013EBC  0EFF               	movlw	255
 49853   013EBE  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 49854   013EC0  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 49855   013EC2  0E00               	movlw	0
 49856   013EC4  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 49857   013EC6  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 49858   013EC8  0E00               	movlw	0
 49859   013ECA  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 49860   013ECC  6ED9               	movwf	fsr2l,c
 49861   013ECE  0E37               	movlw	55
 49862   013ED0  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 49863   013ED2  6EDA               	movwf	fsr2h,c
 49864   013ED4  5009               	movf	FLASH_Write@value^(0+1280),w,c
 49865   013ED6  18DE               	xorwf	postinc2,w,c
 49866   013ED8  B4D8               	btfsc	status,2,c
 49867   013EDA  D00F               	goto	l8443
 49868                           
 49869                           ; BSR set to: 5
 49870                           ;../../VLCBlib_PIC/nvm.c: 540:         flashFlags.writeNeeded = 1;
 49871   013EDC  818B               	bsf	_flashFlags& (0+255),0,b
 49872                           
 49873                           ; BSR set to: 5
 49874                           ;../../VLCBlib_PIC/nvm.c: 541:         flashBuffer[(index&((256U)-1))] = value;
 49875   013EDE  0EFF               	movlw	255
 49876   013EE0  1406               	andwf	FLASH_Write@index^(0+1280),w,c
 49877   013EE2  6E0A               	movwf	??_FLASH_Write^(0+1280),c
 49878   013EE4  0E00               	movlw	0
 49879   013EE6  1407               	andwf	(FLASH_Write@index+1)^(0+1280),w,c
 49880   013EE8  6E0B               	movwf	(??_FLASH_Write+1)^(0+1280),c
 49881   013EEA  0E00               	movlw	0
 49882   013EEC  240A               	addwf	??_FLASH_Write^(0+1280),w,c
 49883   013EEE  6ED9               	movwf	fsr2l,c
 49884   013EF0  0E37               	movlw	55
 49885   013EF2  200B               	addwfc	(??_FLASH_Write+1)^(0+1280),w,c
 49886   013EF4  6EDA               	movwf	fsr2h,c
 49887   013EF6  C509  F4DF         	movff	FLASH_Write@value,indf2
 49888   013EFA                     l8443:
 49889                           
 49890                           ; BSR set to: 5
 49891                           ;../../VLCBlib_PIC/nvm.c: 543:     return GRSP_OK;
 49892   013EFA  0E00               	movlw	0
 49893                           
 49894                           ; BSR set to: 5
 49895   013EFC  0012               	return		;funcret
 49896   013EFE                     __end_of_FLASH_Write:
 49897                           	callstack 0
 49898                           
 49899 ;; *************** function _loadFlashBlock *****************
 49900 ;; Defined at:
 49901 ;;		line 469 in file "../../VLCBlib_PIC/nvm.c"
 49902 ;; Parameters:    Size  Location     Type
 49903 ;;		None
 49904 ;; Auto vars:     Size  Location     Type
 49905 ;;		None
 49906 ;; Return value:  Size  Location     Type
 49907 ;;                  1    wreg      void 
 49908 ;; Registers used:
 49909 ;;		wreg, status,2
 49910 ;; Tracked objects:
 49911 ;;		On entry : 0/0
 49912 ;;		On exit  : 0/0
 49913 ;;		Unchanged: 0/0
 49914 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 49915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49917 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49918 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 49919 ;;Total ram usage:        3 bytes
 49920 ;; Hardware stack levels used: 1
 49921 ;; Hardware stack levels required when called: 1
 49922 ;; This function calls:
 49923 ;;		Nothing
 49924 ;; This function is called by:
 49925 ;;		_FLASH_Write
 49926 ;; This function uses a non-reentrant model
 49927 ;;
 49928                           
 49929                           	psect	text154
 49930   015E8E                     __ptext154:
 49931                           	callstack 0
 49932   015E8E                     _loadFlashBlock:
 49933                           	callstack 118
 49934                           
 49935                           ;../../VLCBlib_PIC/nvm.c: 484:     while (NVMCON0bits.GO)
 49936                           
 49937                           ;../../VLCBlib_PIC/nvm.c: 485:         ;
 49938                           
 49939                           ; BSR set to: 5
 49940                           ;incstack = 0
 49941   015E8E  0100               	movlb	0	; () banked
 49942   015E90  B140               	btfsc	64,0,b	;volatile
 49943   015E92  D7FD               	goto	__ptext154
 49944                           
 49945                           ; BSR set to: 0
 49946                           ;../../VLCBlib_PIC/nvm.c: 487:     NVMADRU = (uint8_t) (flashBlock >> 16);
 49947   015E94  C579  F045         	movff	_flashBlock+2,69	;volatile
 49948                           
 49949                           ; BSR set to: 0
 49950                           ;../../VLCBlib_PIC/nvm.c: 488:     NVMADRH = (uint8_t) (flashBlock >> 8);
 49951   015E98  C577  F501         	movff	_flashBlock,??_loadFlashBlock
 49952   015E9C  C578  F502         	movff	_flashBlock+1,??_loadFlashBlock+1
 49953   015EA0  C579  F503         	movff	_flashBlock+2,??_loadFlashBlock+2
 49954   015EA4  C502  F501         	movff	??_loadFlashBlock+1,??_loadFlashBlock
 49955   015EA8  C503  F502         	movff	??_loadFlashBlock+2,??_loadFlashBlock+1
 49956   015EAC  6A03               	clrf	(??_loadFlashBlock+2)^(0+1280),c
 49957   015EAE  5001               	movf	??_loadFlashBlock^(0+1280),w,c
 49958   015EB0  6F44               	movwf	68,b	;volatile
 49959                           
 49960                           ; BSR set to: 0
 49961                           ;../../VLCBlib_PIC/nvm.c: 489:     NVMADRL = (uint8_t) flashBlock;
 49962   015EB2  C577  F043         	movff	_flashBlock,67	;volatile
 49963                           
 49964                           ;../../VLCBlib_PIC/nvm.c: 490:     NVMCON1bits.NVMCMD = 0x02;
 49965   015EB6  5141               	movf	65,w,b	;volsfr
 49966   015EB8  0BF8               	andlw	-8
 49967   015EBA  0902               	iorlw	2
 49968   015EBC  6F41               	movwf	65,b	;volsfr
 49969                           
 49970                           ; BSR set to: 0
 49971                           ;../../VLCBlib_PIC/nvm.c: 491:     NVMCON0bits.GO = 1;
 49972   015EBE  8140               	bsf	64,0,b	;volatile
 49973   015EC0                     l1957:
 49974                           
 49975                           ; BSR set to: 0
 49976                           ;../../VLCBlib_PIC/nvm.c: 492:     while (NVMCON0bits.GO)
 49977   015EC0  B140               	btfsc	64,0,b	;volatile
 49978   015EC2  D7FE               	goto	l1957
 49979                           
 49980                           ; BSR set to: 0
 49981                           ;../../VLCBlib_PIC/nvm.c: 494:     NVMCON1bits.NVMCMD = 0x07;
 49982   015EC4  0E07               	movlw	7
 49983   015EC6  1341               	iorwf	65,f,b	;volsfr
 49984                           
 49985                           ; BSR set to: 0
 49986                           ;../../VLCBlib_PIC/nvm.c: 496:     flashFlags.asByte = 0;
 49987   015EC8  0105               	movlb	5	; () banked
 49988   015ECA  6B8B               	clrf	_flashFlags& (0+255),b
 49989                           
 49990                           ; BSR set to: 5
 49991   015ECC  0012               	return		;funcret
 49992   015ECE                     __end_of_loadFlashBlock:
 49993                           	callstack 0
 49994                           
 49995 ;; *************** function _flushFlashBlock *****************
 49996 ;; Defined at:
 49997 ;;		line 395 in file "../../VLCBlib_PIC/nvm.c"
 49998 ;; Parameters:    Size  Location     Type
 49999 ;;		None
 50000 ;; Auto vars:     Size  Location     Type
 50001 ;;  interruptEna    1    4[COMRAM] unsigned char 
 50002 ;; Return value:  Size  Location     Type
 50003 ;;                  1    wreg      void 
 50004 ;; Registers used:
 50005 ;;		wreg, status,2, cstack
 50006 ;; Tracked objects:
 50007 ;;		On entry : 0/0
 50008 ;;		On exit  : 0/0
 50009 ;;		Unchanged: 0/0
 50010 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 50011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50014 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50015 ;;Total ram usage:        1 bytes
 50016 ;; Hardware stack levels used: 1
 50017 ;; Hardware stack levels required when called: 3
 50018 ;; This function calls:
 50019 ;;		_APP_isSuitableTimeToWriteFlash
 50020 ;;		_eraseFlashBlock
 50021 ;; This function is called by:
 50022 ;;		_APP_factoryReset
 50023 ;;		_removeTableEntry
 50024 ;;		_addEvent
 50025 ;;		_FLASH_Write
 50026 ;;		_poll
 50027 ;; This function uses a non-reentrant model
 50028 ;;
 50029                           
 50030                           	psect	text155
 50031   0157EC                     __ptext155:
 50032                           	callstack 0
 50033   0157EC                     _flushFlashBlock:
 50034                           	callstack 116
 50035                           
 50036                           ;../../VLCBlib_PIC/nvm.c: 396:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 40
      +                          4:     if (! flashFlags.writeNeeded) return;
 50037                           
 50038                           ; BSR set to: 5
 50039                           ;incstack = 0
 50040   0157EC  0105               	movlb	5	; () banked
 50041   0157EE  A18B               	btfss	_flashFlags& (0+255),0,b
 50042   0157F0  0012               	return	
 50043   0157F2                     l8163:
 50044                           
 50045                           ;../../VLCBlib_PIC/nvm.c: 407:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 50046   0157F2  ECE7  F0B3         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 50047   0157F6  0900               	iorlw	0
 50048   0157F8  B4D8               	btfsc	status,2,c
 50049   0157FA  D7FB               	goto	l8163
 50050                           
 50051                           ;../../VLCBlib_PIC/nvm.c: 410:     if (flashFlags.eraseNeeded) {
 50052   0157FC  0105               	movlb	5	; () banked
 50053   0157FE  B38B               	btfsc	_flashFlags& (0+255),1,b
 50054                           
 50055                           ; BSR set to: 5
 50056                           ;../../VLCBlib_PIC/nvm.c: 411:         eraseFlashBlock();
 50057   015800  EC9B  F0AB         	call	_eraseFlashBlock	;wreg free
 50058                           
 50059                           ;../../VLCBlib_PIC/nvm.c: 414:     interruptEnabled = (INTCON0bits.GIE);
 50060   015804  0E00               	movlw	0
 50061   015806  BED6               	btfsc	214,7,c	;volatile
 50062   015808  0E01               	movlw	1
 50063   01580A  6E05               	movwf	flushFlashBlock@interruptEnabled^(0+1280),c
 50064                           
 50065                           ;../../VLCBlib_PIC/nvm.c: 415:     {INTCON0bits.GIE = 0;};
 50066   01580C  9ED6               	bcf	214,7,c	;volatile
 50067   01580E                     l1945:
 50068                           
 50069                           ;../../VLCBlib_PIC/nvm.c: 441:     while (NVMCON0bits.GO)
 50070   01580E  0100               	movlb	0	; () banked
 50071   015810  B140               	btfsc	64,0,b	;volatile
 50072   015812  D7FD               	goto	l1945
 50073                           
 50074                           ; BSR set to: 0
 50075                           ;../../VLCBlib_PIC/nvm.c: 447:     NVMADR = flashBlock;
 50076   015814  C577  F043         	movff	_flashBlock,67	;volatile
 50077   015818  C578  F044         	movff	_flashBlock+1,68	;volatile
 50078   01581C  C579  F045         	movff	_flashBlock+2,69	;volatile
 50079                           
 50080                           ; BSR set to: 0
 50081                           ;../../VLCBlib_PIC/nvm.c: 449:     NVMCON1bits.NVMCMD = 0x05;
 50082   015820  5141               	movf	65,w,b	;volsfr
 50083   015822  0BF8               	andlw	-8
 50084   015824  0905               	iorlw	5
 50085   015826  6F41               	movwf	65,b	;volsfr
 50086                           
 50087                           ;../../VLCBlib_PIC/nvm.c: 451:     NVMLOCK = 0x55;
 50088   015828  0E55               	movlw	85
 50089   01582A  6F42               	movwf	66,b	;volatile
 50090                           
 50091                           ;../../VLCBlib_PIC/nvm.c: 452:     NVMLOCK = 0xAA;
 50092   01582C  0EAA               	movlw	170
 50093   01582E  6F42               	movwf	66,b	;volatile
 50094                           
 50095                           ; BSR set to: 0
 50096                           ;../../VLCBlib_PIC/nvm.c: 453:     NVMCON0bits.GO = 1;
 50097   015830  8140               	bsf	64,0,b	;volatile
 50098   015832                     l1948:
 50099                           
 50100                           ; BSR set to: 0
 50101                           ;../../VLCBlib_PIC/nvm.c: 454:     while (NVMCON0bits.GO)
 50102   015832  B140               	btfsc	64,0,b	;volatile
 50103   015834  D7FE               	goto	l1948
 50104                           
 50105                           ; BSR set to: 0
 50106                           ;../../VLCBlib_PIC/nvm.c: 457:     NVMCON1bits.NVMCMD = 0x07;
 50107   015836  0E07               	movlw	7
 50108   015838  1341               	iorwf	65,f,b	;volsfr
 50109                           
 50110                           ;../../VLCBlib_PIC/nvm.c: 460:     if (interruptEnabled) {
 50111   01583A  5005               	movf	flushFlashBlock@interruptEnabled^(0+1280),w,c
 50112   01583C  A4D8               	btfss	status,2,c
 50113                           
 50114                           ; BSR set to: 0
 50115                           ;../../VLCBlib_PIC/nvm.c: 461:         {INTCON0bits.GIE = 1;};
 50116   01583E  8ED6               	bsf	214,7,c	;volatile
 50117                           
 50118                           ; BSR set to: 0
 50119                           ;../../VLCBlib_PIC/nvm.c: 463:     flashFlags.asByte = 0;
 50120                           
 50121                           ;../../VLCBlib_PIC/nvm.c: 462:     }
 50122   015840  0105               	movlb	5	; () banked
 50123   015842  6B8B               	clrf	_flashFlags& (0+255),b
 50124                           
 50125                           ; BSR set to: 5
 50126   015844  0012               	return		;funcret
 50127   015846                     __end_of_flushFlashBlock:
 50128                           	callstack 0
 50129                           
 50130 ;; *************** function _eraseFlashBlock *****************
 50131 ;; Defined at:
 50132 ;;		line 344 in file "../../VLCBlib_PIC/nvm.c"
 50133 ;; Parameters:    Size  Location     Type
 50134 ;;		None
 50135 ;; Auto vars:     Size  Location     Type
 50136 ;;  interruptEna    1    3[COMRAM] unsigned char 
 50137 ;; Return value:  Size  Location     Type
 50138 ;;                  1    wreg      void 
 50139 ;; Registers used:
 50140 ;;		wreg, status,2, cstack
 50141 ;; Tracked objects:
 50142 ;;		On entry : 0/0
 50143 ;;		On exit  : 0/0
 50144 ;;		Unchanged: 0/0
 50145 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 50146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50147 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50148 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50149 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50150 ;;Total ram usage:        4 bytes
 50151 ;; Hardware stack levels used: 1
 50152 ;; Hardware stack levels required when called: 2
 50153 ;; This function calls:
 50154 ;;		_APP_isSuitableTimeToWriteFlash
 50155 ;; This function is called by:
 50156 ;;		_flushFlashBlock
 50157 ;;		_FLASH_Write
 50158 ;; This function uses a non-reentrant model
 50159 ;;
 50160                           
 50161                           	psect	text156
 50162   015736                     __ptext156:
 50163                           	callstack 0
 50164   015736                     _eraseFlashBlock:
 50165                           	callstack 116
 50166                           
 50167                           ;../../VLCBlib_PIC/nvm.c: 348:     while (! APP_isSuitableTimeToWriteFlash())
 50168                           
 50169                           ;../../VLCBlib_PIC/nvm.c: 345:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 34
      +                          8:     while (! APP_isSuitableTimeToWriteFlash())
 50170                           
 50171                           ; BSR set to: 5
 50172                           ;incstack = 0
 50173   015736  ECE7  F0B3         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 50174   01573A  0900               	iorlw	0
 50175   01573C  B4D8               	btfsc	status,2,c
 50176   01573E  D7FB               	goto	__ptext156
 50177                           
 50178                           ;../../VLCBlib_PIC/nvm.c: 351:     interruptEnabled = (INTCON0bits.GIE);
 50179   015740  0E00               	movlw	0
 50180   015742  BED6               	btfsc	214,7,c	;volatile
 50181   015744  0E01               	movlw	1
 50182   015746  6E04               	movwf	eraseFlashBlock@interruptEnabled^(0+1280),c
 50183   015748                     l1929:
 50184                           
 50185                           ;../../VLCBlib_PIC/nvm.c: 369:     while (NVMCON0bits.GO)
 50186   015748  0100               	movlb	0	; () banked
 50187   01574A  B140               	btfsc	64,0,b	;volatile
 50188   01574C  D7FD               	goto	l1929
 50189                           
 50190                           ; BSR set to: 0
 50191                           ;../../VLCBlib_PIC/nvm.c: 372:     NVMADRU = (uint8_t) (flashBlock >> 16);
 50192   01574E  C579  F045         	movff	_flashBlock+2,69	;volatile
 50193                           
 50194                           ; BSR set to: 0
 50195                           ;../../VLCBlib_PIC/nvm.c: 373:     NVMADRH = (uint8_t) (flashBlock >> 8);
 50196   015752  C577  F501         	movff	_flashBlock,??_eraseFlashBlock
 50197   015756  C578  F502         	movff	_flashBlock+1,??_eraseFlashBlock+1
 50198   01575A  C579  F503         	movff	_flashBlock+2,??_eraseFlashBlock+2
 50199   01575E  C502  F501         	movff	??_eraseFlashBlock+1,??_eraseFlashBlock
 50200   015762  C503  F502         	movff	??_eraseFlashBlock+2,??_eraseFlashBlock+1
 50201   015766  6A03               	clrf	(??_eraseFlashBlock+2)^(0+1280),c
 50202   015768  5001               	movf	??_eraseFlashBlock^(0+1280),w,c
 50203   01576A  6F44               	movwf	68,b	;volatile
 50204                           
 50205                           ;../../VLCBlib_PIC/nvm.c: 375:     NVMCON1bits.NVMCMD = 0x06;
 50206   01576C  5141               	movf	65,w,b	;volsfr
 50207   01576E  0BF8               	andlw	-8
 50208   015770  0906               	iorlw	6
 50209   015772  6F41               	movwf	65,b	;volsfr
 50210                           
 50211                           ; BSR set to: 0
 50212                           ;../../VLCBlib_PIC/nvm.c: 376:     {INTCON0bits.GIE = 0;};
 50213   015774  9ED6               	bcf	214,7,c	;volatile
 50214                           
 50215                           ;../../VLCBlib_PIC/nvm.c: 378:     NVMLOCK = 0x55;
 50216   015776  0E55               	movlw	85
 50217   015778  6F42               	movwf	66,b	;volatile
 50218                           
 50219                           ;../../VLCBlib_PIC/nvm.c: 379:     NVMLOCK = 0xAA;
 50220   01577A  0EAA               	movlw	170
 50221   01577C  6F42               	movwf	66,b	;volatile
 50222                           
 50223                           ; BSR set to: 0
 50224                           ;../../VLCBlib_PIC/nvm.c: 380:     NVMCON0bits.GO = 1;
 50225   01577E  8140               	bsf	64,0,b	;volatile
 50226   015780                     l1932:
 50227                           
 50228                           ; BSR set to: 0
 50229                           ;../../VLCBlib_PIC/nvm.c: 381:     while (NVMCON0bits.GO)
 50230   015780  B140               	btfsc	64,0,b	;volatile
 50231   015782  D7FE               	goto	l1932
 50232                           
 50233                           ; BSR set to: 0
 50234                           ;../../VLCBlib_PIC/nvm.c: 383:     NVMCON1bits.NVMCMD = 0x07;
 50235   015784  0E07               	movlw	7
 50236   015786  1341               	iorwf	65,f,b	;volsfr
 50237                           
 50238                           ;../../VLCBlib_PIC/nvm.c: 385:     if (interruptEnabled) {
 50239   015788  5004               	movf	eraseFlashBlock@interruptEnabled^(0+1280),w,c
 50240   01578A  B4D8               	btfsc	status,2,c
 50241   01578C  0012               	return	
 50242                           
 50243                           ; BSR set to: 0
 50244                           ;../../VLCBlib_PIC/nvm.c: 386:         {INTCON0bits.GIE = 1;};
 50245   01578E  8ED6               	bsf	214,7,c	;volatile
 50246                           
 50247                           ; BSR set to: 0
 50248   015790  0012               	return		;funcret
 50249   015792                     __end_of_eraseFlashBlock:
 50250                           	callstack 0
 50251                           
 50252 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 50253 ;; Defined at:
 50254 ;;		line 284 in file "../main.c"
 50255 ;; Parameters:    Size  Location     Type
 50256 ;;		None
 50257 ;; Auto vars:     Size  Location     Type
 50258 ;;		None
 50259 ;; Return value:  Size  Location     Type
 50260 ;;                  1    wreg      enum E23230
 50261 ;; Registers used:
 50262 ;;		wreg
 50263 ;; Tracked objects:
 50264 ;;		On entry : 0/0
 50265 ;;		On exit  : 0/0
 50266 ;;		Unchanged: 0/0
 50267 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 50268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50272 ;;Total ram usage:        0 bytes
 50273 ;; Hardware stack levels used: 1
 50274 ;; Hardware stack levels required when called: 1
 50275 ;; This function calls:
 50276 ;;		Nothing
 50277 ;; This function is called by:
 50278 ;;		_eraseFlashBlock
 50279 ;;		_flushFlashBlock
 50280 ;; This function uses a non-reentrant model
 50281 ;;
 50282                           
 50283                           	psect	text157
 50284   0167CE                     __ptext157:
 50285                           	callstack 0
 50286   0167CE                     _APP_isSuitableTimeToWriteFlash:
 50287                           	callstack 116
 50288                           
 50289                           ;../main.c: 285:     return GOOD_TIME;
 50290                           
 50291                           ; BSR set to: 0
 50292                           ;incstack = 0
 50293   0167CE  0E01               	movlw	1
 50294   0167D0  0012               	return		;funcret
 50295   0167D2                     __end_of_APP_isSuitableTimeToWriteFlash:
 50296                           	callstack 0
 50297                           
 50298 ;; *************** function _EEPROM_Write *****************
 50299 ;; Defined at:
 50300 ;;		line 218 in file "../../VLCBlib_PIC/nvm.c"
 50301 ;; Parameters:    Size  Location     Type
 50302 ;;  index           3    8[COMRAM] unsigned um
 50303 ;;  value           1   11[COMRAM] unsigned char 
 50304 ;; Auto vars:     Size  Location     Type
 50305 ;;  interruptEna    1    0        unsigned char 
 50306 ;; Return value:  Size  Location     Type
 50307 ;;                  1    wreg      unsigned char 
 50308 ;; Registers used:
 50309 ;;		wreg, status,2, status,0, cstack
 50310 ;; Tracked objects:
 50311 ;;		On entry : 0/0
 50312 ;;		On exit  : 0/0
 50313 ;;		Unchanged: 0/0
 50314 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 50315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50318 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50319 ;;Total ram usage:        4 bytes
 50320 ;; Hardware stack levels used: 1
 50321 ;; Hardware stack levels required when called: 2
 50322 ;; This function calls:
 50323 ;;		_EEPROM_Read
 50324 ;;		_EEPROM_WriteNoVerify
 50325 ;;		_updateModuleErrorStatus
 50326 ;; This function is called by:
 50327 ;;		_writeNVM
 50328 ;; This function uses a non-reentrant model
 50329 ;;
 50330                           
 50331                           	psect	text158
 50332   015BD4                     __ptext158:
 50333                           	callstack 0
 50334   015BD4                     _EEPROM_Write:
 50335                           	callstack 118
 50336                           
 50337                           ;incstack = 0
 50338   015BD4  50D6               	movf	214,w,c	;volatile
 50339   015BD6                     l8405:
 50340                           
 50341                           ;../../VLCBlib_PIC/nvm.c: 223:         EEPROM_WriteNoVerify(index, value);
 50342   015BD6  C509  F501         	movff	EEPROM_Write@index,EEPROM_WriteNoVerify@index
 50343   015BDA  C50A  F502         	movff	EEPROM_Write@index+1,EEPROM_WriteNoVerify@index+1
 50344   015BDE  C50B  F503         	movff	EEPROM_Write@index+2,EEPROM_WriteNoVerify@index+2
 50345   015BE2  C50C  F504         	movff	EEPROM_Write@value,EEPROM_WriteNoVerify@value
 50346   015BE6  EC22  F0AD         	call	_EEPROM_WriteNoVerify	;wreg free
 50347                           
 50348                           ;../../VLCBlib_PIC/nvm.c: 226:         if (EEPROM_Read(index) == value) {
 50349   015BEA  C509  F501         	movff	EEPROM_Write@index,EEPROM_Read@index
 50350   015BEE  C50A  F502         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 50351   015BF2  C50B  F503         	movff	EEPROM_Write@index+2,EEPROM_Read@index+2
 50352   015BF6  ECFD  F0AF         	call	_EEPROM_Read	;wreg free
 50353   015BFA  180C               	xorwf	EEPROM_Write@value^(0+1280),w,c
 50354   015BFC  B4D8               	btfsc	status,2,c
 50355   015BFE  D006               	goto	l8415
 50356                           
 50357                           ;../../VLCBlib_PIC/nvm.c: 230:         mnsDiagnostics[0x04].asUint++;
 50358   015C00  0105               	movlb	5	; () banked
 50359   015C02  4BAB               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 50360   015C04  2BAC               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 50361                           
 50362                           ; BSR set to: 5
 50363                           ;../../VLCBlib_PIC/nvm.c: 231:         updateModuleErrorStatus();
 50364   015C06  ECB6  F0B3         	call	_updateModuleErrorStatus	;wreg free
 50365                           
 50366                           ;../../VLCBlib_PIC/nvm.c: 233:     } while (1);
 50367   015C0A  D7E5               	goto	l8405
 50368   015C0C                     l8415:
 50369                           
 50370                           ;../../VLCBlib_PIC/nvm.c: 236:     NVMCON1bits.NVMCMD = 0x07;
 50371   015C0C  0E07               	movlw	7
 50372   015C0E  0100               	movlb	0	; () banked
 50373   015C10  1341               	iorwf	65,f,b	;volsfr
 50374                           
 50375                           ;../../VLCBlib_PIC/nvm.c: 237:     NVMADR = 0;
 50376   015C12  0E00               	movlw	0
 50377   015C14  6F43               	movwf	67,b	;volatile
 50378   015C16  0E00               	movlw	0
 50379   015C18  6F44               	movwf	68,b	;volatile
 50380   015C1A  0E00               	movlw	0
 50381   015C1C  6F45               	movwf	69,b	;volatile
 50382                           
 50383                           ; BSR set to: 0
 50384                           ;../../VLCBlib_PIC/nvm.c: 239:     return GRSP_OK;
 50385   015C1E  0E00               	movlw	0
 50386                           
 50387                           ; BSR set to: 0
 50388   015C20  0012               	return		;funcret
 50389   015C22                     __end_of_EEPROM_Write:
 50390                           	callstack 0
 50391                           
 50392 ;; *************** function _updateModuleErrorStatus *****************
 50393 ;; Defined at:
 50394 ;;		line 639 in file "../../VLCBlib_PIC/mns.c"
 50395 ;; Parameters:    Size  Location     Type
 50396 ;;		None
 50397 ;; Auto vars:     Size  Location     Type
 50398 ;;		None
 50399 ;; Return value:  Size  Location     Type
 50400 ;;                  1    wreg      void 
 50401 ;; Registers used:
 50402 ;;		wreg, status,2, status,0
 50403 ;; Tracked objects:
 50404 ;;		On entry : 0/0
 50405 ;;		On exit  : 0/0
 50406 ;;		Unchanged: 0/0
 50407 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 50408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50412 ;;Total ram usage:        0 bytes
 50413 ;; Hardware stack levels used: 1
 50414 ;; Hardware stack levels required when called: 1
 50415 ;; This function calls:
 50416 ;;		Nothing
 50417 ;; This function is called by:
 50418 ;;		_canSendMessage
 50419 ;;		_processEnumeration
 50420 ;;		_EEPROM_Write
 50421 ;; This function uses a non-reentrant model
 50422 ;;
 50423                           
 50424                           	psect	text159
 50425   01676C                     __ptext159:
 50426                           	callstack 0
 50427   01676C                     _updateModuleErrorStatus:
 50428                           	callstack 119
 50429                           
 50430                           ;../../VLCBlib_PIC/mns.c: 640:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 50431                           
 50432                           ; BSR set to: 0
 50433                           ;incstack = 0
 50434   01676C  0105               	movlb	5	; () banked
 50435   01676E  29A5               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 50436   016770  B4D8               	btfsc	status,2,c
 50437   016772  0012               	return	
 50438                           
 50439                           ; BSR set to: 5
 50440                           ;../../VLCBlib_PIC/mns.c: 641:         mnsDiagnostics[0x01].asBytes.lo++;
 50441   016774  2BA5               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 50442                           
 50443                           ; BSR set to: 5
 50444   016776  0012               	return		;funcret
 50445   016778                     __end_of_updateModuleErrorStatus:
 50446                           	callstack 0
 50447                           
 50448 ;; *************** function _EEPROM_WriteNoVerify *****************
 50449 ;; Defined at:
 50450 ;;		line 248 in file "../../VLCBlib_PIC/nvm.c"
 50451 ;; Parameters:    Size  Location     Type
 50452 ;;  index           3    0[COMRAM] unsigned um
 50453 ;;  value           1    3[COMRAM] unsigned char 
 50454 ;; Auto vars:     Size  Location     Type
 50455 ;;  interruptEna    1    7[COMRAM] unsigned char 
 50456 ;; Return value:  Size  Location     Type
 50457 ;;                  1    wreg      unsigned char 
 50458 ;; Registers used:
 50459 ;;		wreg, status,2
 50460 ;; Tracked objects:
 50461 ;;		On entry : 0/0
 50462 ;;		On exit  : 0/0
 50463 ;;		Unchanged: 0/0
 50464 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 50465 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50467 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50468 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50469 ;;Total ram usage:        8 bytes
 50470 ;; Hardware stack levels used: 1
 50471 ;; Hardware stack levels required when called: 1
 50472 ;; This function calls:
 50473 ;;		Nothing
 50474 ;; This function is called by:
 50475 ;;		_EEPROM_Write
 50476 ;;		_pollEEPROMwriter
 50477 ;; This function uses a non-reentrant model
 50478 ;;
 50479                           
 50480                           	psect	text160
 50481   015A44                     __ptext160:
 50482                           	callstack 0
 50483   015A44                     _EEPROM_WriteNoVerify:
 50484                           	callstack 118
 50485                           
 50486                           ;../../VLCBlib_PIC/nvm.c: 249:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 25
      +                          0:     interruptEnabled = (INTCON0bits.GIE);
 50487                           
 50488                           ; BSR set to: 5
 50489                           ;incstack = 0
 50490   015A44  0E00               	movlw	0
 50491   015A46  BED6               	btfsc	214,7,c	;volatile
 50492   015A48  0E01               	movlw	1
 50493   015A4A  6E08               	movwf	EEPROM_WriteNoVerify@interruptEnabled^(0+1280),c
 50494   015A4C                     l1914:
 50495                           
 50496                           ;../../VLCBlib_PIC/nvm.c: 276:     while (NVMCON0bits.GO)
 50497   015A4C  0100               	movlb	0	; () banked
 50498   015A4E  B140               	btfsc	64,0,b	;volatile
 50499   015A50  D7FD               	goto	l1914
 50500                           
 50501                           ; BSR set to: 0
 50502                           ;../../VLCBlib_PIC/nvm.c: 279:     NVMADRU = 0x38;
 50503   015A52  0E38               	movlw	56
 50504   015A54  6F45               	movwf	69,b	;volatile
 50505                           
 50506                           ;../../VLCBlib_PIC/nvm.c: 280:     NVMADRH = (uint8_t) (index >> 8);
 50507   015A56  C501  F505         	movff	EEPROM_WriteNoVerify@index,??_EEPROM_WriteNoVerify
 50508   015A5A  C502  F506         	movff	EEPROM_WriteNoVerify@index+1,??_EEPROM_WriteNoVerify+1
 50509   015A5E  C503  F507         	movff	EEPROM_WriteNoVerify@index+2,??_EEPROM_WriteNoVerify+2
 50510   015A62  C506  F505         	movff	??_EEPROM_WriteNoVerify+1,??_EEPROM_WriteNoVerify
 50511   015A66  C507  F506         	movff	??_EEPROM_WriteNoVerify+2,??_EEPROM_WriteNoVerify+1
 50512   015A6A  6A07               	clrf	(??_EEPROM_WriteNoVerify+2)^(0+1280),c
 50513   015A6C  5005               	movf	??_EEPROM_WriteNoVerify^(0+1280),w,c
 50514   015A6E  6F44               	movwf	68,b	;volatile
 50515                           
 50516                           ; BSR set to: 0
 50517                           ;../../VLCBlib_PIC/nvm.c: 281:     NVMADRL = (uint8_t) index;
 50518   015A70  C501  F043         	movff	EEPROM_WriteNoVerify@index,67	;volatile
 50519                           
 50520                           ; BSR set to: 0
 50521                           ;../../VLCBlib_PIC/nvm.c: 284:     NVMDATL = value;
 50522   015A74  C504  F046         	movff	EEPROM_WriteNoVerify@value,70	;volatile
 50523                           
 50524                           ;../../VLCBlib_PIC/nvm.c: 287:     NVMCON1bits.NVMCMD = 0x03;
 50525   015A78  5141               	movf	65,w,b	;volsfr
 50526   015A7A  0BF8               	andlw	-8
 50527   015A7C  0903               	iorlw	3
 50528   015A7E  6F41               	movwf	65,b	;volsfr
 50529                           
 50530                           ; BSR set to: 0
 50531                           ;../../VLCBlib_PIC/nvm.c: 290:     {INTCON0bits.GIE = 0;};
 50532   015A80  9ED6               	bcf	214,7,c	;volatile
 50533                           
 50534                           ;../../VLCBlib_PIC/nvm.c: 293:     NVMLOCK = 0x55;
 50535   015A82  0E55               	movlw	85
 50536   015A84  6F42               	movwf	66,b	;volatile
 50537                           
 50538                           ;../../VLCBlib_PIC/nvm.c: 294:     NVMLOCK = 0xAA;
 50539   015A86  0EAA               	movlw	170
 50540   015A88  6F42               	movwf	66,b	;volatile
 50541                           
 50542                           ; BSR set to: 0
 50543                           ;../../VLCBlib_PIC/nvm.c: 297:     NVMCON0bits.GO = 1;
 50544   015A8A  8140               	bsf	64,0,b	;volatile
 50545                           
 50546                           ;../../VLCBlib_PIC/nvm.c: 299:     if (interruptEnabled) {
 50547   015A8C  5008               	movf	EEPROM_WriteNoVerify@interruptEnabled^(0+1280),w,c
 50548   015A8E  B4D8               	btfsc	status,2,c
 50549   015A90  0012               	return	
 50550                           
 50551                           ; BSR set to: 0
 50552                           ;../../VLCBlib_PIC/nvm.c: 301:         {INTCON0bits.GIE = 1;};
 50553   015A92  8ED6               	bsf	214,7,c	;volatile
 50554                           
 50555                           ; BSR set to: 0
 50556   015A94  0012               	return		;funcret
 50557   015A96                     __end_of_EEPROM_WriteNoVerify:
 50558                           	callstack 0
 50559                           
 50560 ;; *************** function _rebuildHashtable *****************
 50561 ;; Defined at:
 50562 ;;		line 1007 in file "../../VLCBlib_PIC/event_teach_simple.c"
 50563 ;; Parameters:    Size  Location     Type
 50564 ;;		None
 50565 ;; Auto vars:     Size  Location     Type
 50566 ;;  ev              2    0        short 
 50567 ;;  a               2    0        int 
 50568 ;;  chainIdx        1   34[COMRAM] unsigned char 
 50569 ;;  tableIndex      1   33[COMRAM] unsigned char 
 50570 ;;  hash            1   32[COMRAM] unsigned char 
 50571 ;; Return value:  Size  Location     Type
 50572 ;;                  1    wreg      void 
 50573 ;; Registers used:
 50574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 50575 ;; Tracked objects:
 50576 ;;		On entry : 0/0
 50577 ;;		On exit  : 0/0
 50578 ;;		Unchanged: 0/0
 50579 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 50580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50581 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50582 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50583 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50584 ;;Total ram usage:        6 bytes
 50585 ;; Hardware stack levels used: 1
 50586 ;; Hardware stack levels required when called: 4
 50587 ;; This function calls:
 50588 ;;		_getEN
 50589 ;;		_getHash
 50590 ;;		_getNN
 50591 ;; This function is called by:
 50592 ;;		_teachPowerUp
 50593 ;;		_clearAllEvents
 50594 ;;		_removeTableEntry
 50595 ;;		_addEvent
 50596 ;;		_mnsProcessMessage
 50597 ;; This function uses a non-reentrant model
 50598 ;;
 50599                           
 50600                           	psect	text161
 50601   014234                     __ptext161:
 50602                           	callstack 0
 50603   014234                     _rebuildHashtable:
 50604                           	callstack 120
 50605                           
 50606                           ;../../VLCBlib_PIC/event_teach_simple.c: 1009:     uint8_t hash;;../../VLCBlib_PIC/event
      +                          _teach_simple.c: 1010:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach_simple.c: 101
      +                          1:     uint8_t tableIndex;;../../VLCBlib_PIC/event_teach_simple.c: 1012:     int a;;../.
      +                          ./VLCBlib_PIC/event_teach_simple.c: 1014:     for (hash=0; hash<32; hash++) {
 50607                           
 50608                           ; BSR set to: 0
 50609                           ;incstack = 0
 50610   014234  6A21               	clrf	rebuildHashtable@hash^(0+1280),c
 50611   014236                     l1427:
 50612                           
 50613                           ;../../VLCBlib_PIC/event_teach_simple.c: 1015:         for (chainIdx=0; chainIdx < 20; c
      +                          hainIdx++) {
 50614   014236  6A23               	clrf	rebuildHashtable@chainIdx^(0+1280),c
 50615   014238                     l8707:
 50616                           
 50617                           ;../../VLCBlib_PIC/event_teach_simple.c: 1016:             eventChains[hash][chainIdx] =
      +                           0xff;
 50618   014238  5021               	movf	rebuildHashtable@hash^(0+1280),w,c
 50619   01423A  0D14               	mullw	20
 50620   01423C  0E48               	movlw	low _eventChains
 50621   01423E  24F3               	addwf	243,w,c
 50622   014240  6E1E               	movwf	??_rebuildHashtable^(0+1280),c
 50623   014242  0E08               	movlw	high _eventChains
 50624   014244  20F4               	addwfc	prodh,w,c
 50625   014246  6E1F               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 50626   014248  5023               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 50627   01424A  241E               	addwf	??_rebuildHashtable^(0+1280),w,c
 50628   01424C  6ED9               	movwf	fsr2l,c
 50629   01424E  0E00               	movlw	0
 50630   014250  201F               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 50631   014252  6EDA               	movwf	fsr2h,c
 50632   014254  0EFF               	movlw	255
 50633   014256  6EDF               	movwf	indf2,c
 50634                           
 50635                           ;../../VLCBlib_PIC/event_teach_simple.c: 1017:         }
 50636   014258  2A23               	incf	rebuildHashtable@chainIdx^(0+1280),f,c
 50637   01425A  0E13               	movlw	19
 50638   01425C  6423               	cpfsgt	rebuildHashtable@chainIdx^(0+1280),c
 50639   01425E  D7EC               	goto	l8707
 50640                           
 50641                           ;../../VLCBlib_PIC/event_teach_simple.c: 1018:     }
 50642   014260  2A21               	incf	rebuildHashtable@hash^(0+1280),f,c
 50643   014262  0E1F               	movlw	31
 50644   014264  6421               	cpfsgt	rebuildHashtable@hash^(0+1280),c
 50645   014266  D7E7               	goto	l1427
 50646                           
 50647                           ;../../VLCBlib_PIC/event_teach_simple.c: 1020:     for (tableIndex=0; tableIndex<254; ta
      +                          bleIndex++) {
 50648   014268  6A22               	clrf	rebuildHashtable@tableIndex^(0+1280),c
 50649   01426A                     l8721:
 50650                           
 50651                           ;../../VLCBlib_PIC/event_teach_simple.c: 1021:         if (getEN(tableIndex) != 0) {
 50652   01426A  5022               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 50653   01426C  EC00  F0A9         	call	_getEN
 50654   014270  500D               	movf	?_getEN^(0+1280),w,c
 50655   014272  100E               	iorwf	(?_getEN+1)^(0+1280),w,c
 50656   014274  B4D8               	btfsc	status,2,c
 50657   014276  D038               	goto	u6380
 50658                           
 50659                           ;../../VLCBlib_PIC/event_teach_simple.c: 1022:             int16_t ev;;../../VLCBlib_PIC
      +                          /event_teach_simple.c: 1025:             hash = getHash(getNN(tableIndex), getEN(tableIn
      +                          dex));
 50660   014278  5022               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 50661   01427A  ECD6  F0A1         	call	_getNN
 50662   01427E  C50D  F518         	movff	?_getNN,getHash@nn
 50663   014282  C50E  F519         	movff	?_getNN+1,getHash@nn+1
 50664   014286  5022               	movf	rebuildHashtable@tableIndex^(0+1280),w,c
 50665   014288  EC00  F0A9         	call	_getEN
 50666   01428C  C50D  F51A         	movff	?_getEN,getHash@en
 50667   014290  C50E  F51B         	movff	?_getEN+1,getHash@en+1
 50668   014294  ECF2  F0B2         	call	_getHash	;wreg free
 50669   014298  6E21               	movwf	rebuildHashtable@hash^(0+1280),c
 50670                           
 50671                           ;../../VLCBlib_PIC/event_teach_simple.c: 1026:             for (chainIdx=0; chainIdx<20;
      +                           chainIdx++) {
 50672   01429A  6A23               	clrf	rebuildHashtable@chainIdx^(0+1280),c
 50673   01429C                     l8731:
 50674                           
 50675                           ;../../VLCBlib_PIC/event_teach_simple.c: 1027:                 if (eventChains[hash][cha
      +                          inIdx] == 0xff) {
 50676   01429C  5021               	movf	rebuildHashtable@hash^(0+1280),w,c
 50677   01429E  0D14               	mullw	20
 50678   0142A0  0E48               	movlw	low _eventChains
 50679   0142A2  24F3               	addwf	243,w,c
 50680   0142A4  6E1E               	movwf	??_rebuildHashtable^(0+1280),c
 50681   0142A6  0E08               	movlw	high _eventChains
 50682   0142A8  20F4               	addwfc	prodh,w,c
 50683   0142AA  6E1F               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 50684   0142AC  5023               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 50685   0142AE  241E               	addwf	??_rebuildHashtable^(0+1280),w,c
 50686   0142B0  6ED9               	movwf	fsr2l,c
 50687   0142B2  0E00               	movlw	0
 50688   0142B4  201F               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 50689   0142B6  6EDA               	movwf	fsr2h,c
 50690   0142B8  28DE               	incf	postinc2,w,c
 50691   0142BA  A4D8               	btfss	status,2,c
 50692   0142BC  D011               	goto	l8735
 50693                           
 50694                           ;../../VLCBlib_PIC/event_teach_simple.c: 1029:                     eventChains[hash][cha
      +                          inIdx] = tableIndex;
 50695   0142BE  5021               	movf	rebuildHashtable@hash^(0+1280),w,c
 50696   0142C0  0D14               	mullw	20
 50697   0142C2  0E48               	movlw	low _eventChains
 50698   0142C4  24F3               	addwf	243,w,c
 50699   0142C6  6E1E               	movwf	??_rebuildHashtable^(0+1280),c
 50700   0142C8  0E08               	movlw	high _eventChains
 50701   0142CA  20F4               	addwfc	prodh,w,c
 50702   0142CC  6E1F               	movwf	(??_rebuildHashtable+1)^(0+1280),c
 50703   0142CE  5023               	movf	rebuildHashtable@chainIdx^(0+1280),w,c
 50704   0142D0  241E               	addwf	??_rebuildHashtable^(0+1280),w,c
 50705   0142D2  6ED9               	movwf	fsr2l,c
 50706   0142D4  0E00               	movlw	0
 50707   0142D6  201F               	addwfc	(??_rebuildHashtable+1)^(0+1280),w,c
 50708   0142D8  6EDA               	movwf	fsr2h,c
 50709   0142DA  C522  F4DF         	movff	rebuildHashtable@tableIndex,indf2
 50710                           
 50711                           ;../../VLCBlib_PIC/event_teach_simple.c: 1030:                     break;
 50712   0142DE  D004               	goto	u6380
 50713   0142E0                     l8735:
 50714                           
 50715                           ;../../VLCBlib_PIC/event_teach_simple.c: 1032:             }
 50716   0142E0  2A23               	incf	rebuildHashtable@chainIdx^(0+1280),f,c
 50717   0142E2  0E13               	movlw	19
 50718   0142E4  6423               	cpfsgt	rebuildHashtable@chainIdx^(0+1280),c
 50719   0142E6  D7DA               	goto	l8731
 50720   0142E8                     u6380:
 50721                           
 50722                           ;../../VLCBlib_PIC/event_teach_simple.c: 1034:     }
 50723   0142E8  2A22               	incf	rebuildHashtable@tableIndex^(0+1280),f,c
 50724   0142EA  0EFD               	movlw	253
 50725   0142EC  6422               	cpfsgt	rebuildHashtable@tableIndex^(0+1280),c
 50726   0142EE  D7BD               	goto	l8721
 50727   0142F0  0012               	return	
 50728   0142F2                     __end_of_rebuildHashtable:
 50729                           	callstack 0
 50730                           
 50731 ;; *************** function _findEvent *****************
 50732 ;; Defined at:
 50733 ;;		line 808 in file "../../VLCBlib_PIC/event_teach_simple.c"
 50734 ;; Parameters:    Size  Location     Type
 50735 ;;  nodeNumber      2   29[COMRAM] unsigned short 
 50736 ;;  eventNumber     2   31[COMRAM] unsigned short 
 50737 ;; Auto vars:     Size  Location     Type
 50738 ;;  en              2   37[COMRAM] unsigned short 
 50739 ;;  nn              2   35[COMRAM] unsigned short 
 50740 ;;  tableIndex      1   41[COMRAM] unsigned char 
 50741 ;;  chainIdx        1   40[COMRAM] unsigned char 
 50742 ;;  hash            1   39[COMRAM] unsigned char 
 50743 ;; Return value:  Size  Location     Type
 50744 ;;                  1    wreg      unsigned char 
 50745 ;; Registers used:
 50746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 50747 ;; Tracked objects:
 50748 ;;		On entry : 0/0
 50749 ;;		On exit  : 0/0
 50750 ;;		Unchanged: 0/0
 50751 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 50752 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50753 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50754 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50755 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50756 ;;Total ram usage:       13 bytes
 50757 ;; Hardware stack levels used: 1
 50758 ;; Hardware stack levels required when called: 4
 50759 ;; This function calls:
 50760 ;;		_getEN
 50761 ;;		_getHash
 50762 ;;		_getNN
 50763 ;; This function is called by:
 50764 ;;		_APP_preProcessMessage
 50765 ;;		_APP_addEvent
 50766 ;;		_consumerProcessMessage
 50767 ;;		_doReqev
 50768 ;;		_removeEvent
 50769 ;;		_addEvent
 50770 ;;		_producerProcessMessage
 50771 ;; This function uses a non-reentrant model
 50772 ;;
 50773                           
 50774                           	psect	text162
 50775   01495C                     __ptext162:
 50776                           	callstack 0
 50777   01495C                     _findEvent:
 50778                           	callstack 119
 50779                           
 50780                           ;../../VLCBlib_PIC/event_teach_simple.c: 810:     uint8_t hash = getHash(nodeNumber, eve
      +                          ntNumber);
 50781                           
 50782                           ;incstack = 0
 50783   01495C  C51E  F518         	movff	findEvent@nodeNumber,getHash@nn
 50784   014960  C51F  F519         	movff	findEvent@nodeNumber+1,getHash@nn+1
 50785   014964  C520  F51A         	movff	findEvent@eventNumber,getHash@en
 50786   014968  C521  F51B         	movff	findEvent@eventNumber+1,getHash@en+1
 50787   01496C  ECF2  F0B2         	call	_getHash	;wreg free
 50788   014970  6E28               	movwf	findEvent@hash^(0+1280),c
 50789                           
 50790                           ;../../VLCBlib_PIC/event_teach_simple.c: 811:     uint8_t chainIdx;;../../VLCBlib_PIC/ev
      +                          ent_teach_simple.c: 812:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 50791   014972  6A29               	clrf	findEvent@chainIdx^(0+1280),c
 50792   014974                     l8649:
 50793                           
 50794                           ;../../VLCBlib_PIC/event_teach_simple.c: 813:         uint8_t tableIndex = eventChains[h
      +                          ash][chainIdx];
 50795   014974  5028               	movf	findEvent@hash^(0+1280),w,c
 50796   014976  0D14               	mullw	20
 50797   014978  0E48               	movlw	low _eventChains
 50798   01497A  24F3               	addwf	243,w,c
 50799   01497C  6E22               	movwf	??_findEvent^(0+1280),c
 50800   01497E  0E08               	movlw	high _eventChains
 50801   014980  20F4               	addwfc	prodh,w,c
 50802   014982  6E23               	movwf	(??_findEvent+1)^(0+1280),c
 50803   014984  5029               	movf	findEvent@chainIdx^(0+1280),w,c
 50804   014986  2422               	addwf	??_findEvent^(0+1280),w,c
 50805   014988  6ED9               	movwf	fsr2l,c
 50806   01498A  0E00               	movlw	0
 50807   01498C  2023               	addwfc	(??_findEvent+1)^(0+1280),w,c
 50808   01498E  6EDA               	movwf	fsr2h,c
 50809   014990  50DF               	movf	indf2,w,c
 50810   014992  6E2A               	movwf	findEvent@tableIndex^(0+1280),c
 50811                           
 50812                           ;../../VLCBlib_PIC/event_teach_simple.c: 814:         uint16_t nn, en;;../../VLCBlib_PIC
      +                          /event_teach_simple.c: 815:         if (tableIndex == 0xff) return 0xff;
 50813   014994  282A               	incf	findEvent@tableIndex^(0+1280),w,c
 50814   014996  A4D8               	btfss	status,2,c
 50815   014998  D002               	goto	l8657
 50816   01499A                     u6260:
 50817   01499A  0EFF               	movlw	255
 50818   01499C  0012               	return	
 50819   01499E                     l8657:
 50820                           
 50821                           ;../../VLCBlib_PIC/event_teach_simple.c: 816:         nn = getNN(tableIndex);
 50822   01499E  502A               	movf	findEvent@tableIndex^(0+1280),w,c
 50823   0149A0  ECD6  F0A1         	call	_getNN
 50824   0149A4  C50D  F524         	movff	?_getNN,findEvent@nn
 50825   0149A8  C50E  F525         	movff	?_getNN+1,findEvent@nn+1
 50826                           
 50827                           ;../../VLCBlib_PIC/event_teach_simple.c: 817:         en = getEN(tableIndex);
 50828   0149AC  502A               	movf	findEvent@tableIndex^(0+1280),w,c
 50829   0149AE  EC00  F0A9         	call	_getEN
 50830   0149B2  C50D  F526         	movff	?_getEN,findEvent@en
 50831   0149B6  C50E  F527         	movff	?_getEN+1,findEvent@en+1
 50832                           
 50833                           ;../../VLCBlib_PIC/event_teach_simple.c: 818:         if ((nn == nodeNumber) && (en == e
      +                          ventNumber)) {
 50834   0149BA  501E               	movf	findEvent@nodeNumber^(0+1280),w,c
 50835   0149BC  1824               	xorwf	findEvent@nn^(0+1280),w,c
 50836   0149BE  E10D               	bnz	l8667
 50837   0149C0  501F               	movf	(findEvent@nodeNumber+1)^(0+1280),w,c
 50838   0149C2  1825               	xorwf	(findEvent@nn+1)^(0+1280),w,c
 50839   0149C4  A4D8               	btfss	status,2,c
 50840   0149C6  D009               	goto	l8667
 50841   0149C8  5020               	movf	findEvent@eventNumber^(0+1280),w,c
 50842   0149CA  1826               	xorwf	findEvent@en^(0+1280),w,c
 50843   0149CC  E106               	bnz	l8667
 50844   0149CE  5021               	movf	(findEvent@eventNumber+1)^(0+1280),w,c
 50845   0149D0  1827               	xorwf	(findEvent@en+1)^(0+1280),w,c
 50846   0149D2  A4D8               	btfss	status,2,c
 50847   0149D4  D002               	goto	l8667
 50848                           
 50849                           ;../../VLCBlib_PIC/event_teach_simple.c: 819:             return tableIndex;
 50850   0149D6  502A               	movf	findEvent@tableIndex^(0+1280),w,c
 50851   0149D8  0012               	return	
 50852   0149DA                     l8667:
 50853                           
 50854                           ;../../VLCBlib_PIC/event_teach_simple.c: 821:     }
 50855   0149DA  2A29               	incf	findEvent@chainIdx^(0+1280),f,c
 50856   0149DC  0E13               	movlw	19
 50857   0149DE  6429               	cpfsgt	findEvent@chainIdx^(0+1280),c
 50858   0149E0  D7C9               	goto	l8649
 50859   0149E2  D7DB               	goto	u6260
 50860   0149E4                     __end_of_findEvent:
 50861                           	callstack 0
 50862                           
 50863 ;; *************** function _getNN *****************
 50864 ;; Defined at:
 50865 ;;		line 915 in file "../../VLCBlib_PIC/event_teach_simple.c"
 50866 ;; Parameters:    Size  Location     Type
 50867 ;;  tableIndex      1    wreg     unsigned char 
 50868 ;; Auto vars:     Size  Location     Type
 50869 ;;  tableIndex      1   22[COMRAM] unsigned char 
 50870 ;;  lo              2   19[COMRAM] unsigned short 
 50871 ;;  hi              2   17[COMRAM] unsigned short 
 50872 ;;  flags           1   21[COMRAM] unsigned char 
 50873 ;; Return value:  Size  Location     Type
 50874 ;;                  2   12[COMRAM] unsigned short 
 50875 ;; Registers used:
 50876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 50877 ;; Tracked objects:
 50878 ;;		On entry : 0/0
 50879 ;;		On exit  : 0/0
 50880 ;;		Unchanged: 0/0
 50881 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 50882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50883 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50884 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50885 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 50886 ;;Total ram usage:       11 bytes
 50887 ;; Hardware stack levels used: 1
 50888 ;; Hardware stack levels required when called: 3
 50889 ;; This function calls:
 50890 ;;		_readNVM
 50891 ;; This function is called by:
 50892 ;;		_canpanSendProducedEvent
 50893 ;;		_nerdCallback
 50894 ;;		_doNenrd
 50895 ;;		_reqevCallback
 50896 ;;		_findEvent
 50897 ;;		_rebuildHashtable
 50898 ;; This function uses a non-reentrant model
 50899 ;;
 50900                           
 50901                           	psect	text163
 50902   0143AC                     __ptext163:
 50903                           	callstack 0
 50904   0143AC                     _getNN:
 50905                           	callstack 120
 50906                           
 50907                           ;incstack = 0
 50908                           ;getNN@tableIndex stored from wreg
 50909   0143AC  6E17               	movwf	getNN@tableIndex^(0+1280),c
 50910                           
 50911                           ;../../VLCBlib_PIC/event_teach_simple.c: 916:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_simple.c: 917:     uint16_t lo;;../../VLCBlib_PIC/event_teach_simple.c: 918:     ui
      +                          nt8_t flags;;../../VLCBlib_PIC/event_teach_simple.c: 919:     if (tableIndex >= 254) {
 50912   0143AE  0EFD               	movlw	253
 50913   0143B0  6417               	cpfsgt	getNN@tableIndex^(0+1280),c
 50914   0143B2  D005               	goto	l8471
 50915                           
 50916                           ;../../VLCBlib_PIC/event_teach_simple.c: 920:         return CMDERR_INV_EN_IDX;
 50917   0143B4  0E00               	movlw	0
 50918   0143B6  6E0E               	movwf	(?_getNN+1)^(0+1280),c
 50919   0143B8  0E08               	movlw	8
 50920   0143BA  6E0D               	movwf	?_getNN^(0+1280),c
 50921   0143BC  0012               	return	
 50922   0143BE                     l8471:
 50923                           
 50924                           ;../../VLCBlib_PIC/event_teach_simple.c: 923:     flags = (uint8_t)readNVM(FLASH_NVM_TYP
      +                          E, 0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+4);
 50925   0143BE  5017               	movf	getNN@tableIndex^(0+1280),w,c
 50926   0143C0  0D12               	mullw	18
 50927   0143C2  C4F3 F50F          	movff	prodl,??_getNN
 50928   0143C6  C4F4 F510          	movff	prodh,??_getNN+1
 50929   0143CA  6A11               	clrf	(??_getNN+2)^(0+1280),c
 50930   0143CC  0E04               	movlw	4
 50931   0143CE  240F               	addwf	??_getNN^(0+1280),w,c
 50932   0143D0  6E07               	movwf	readNVM@index^(0+1280),c
 50933   0143D2  0EE8               	movlw	232
 50934   0143D4  2010               	addwfc	(??_getNN+1)^(0+1280),w,c
 50935   0143D6  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 50936   0143D8  0E01               	movlw	1
 50937   0143DA  2011               	addwfc	(??_getNN+2)^(0+1280),w,c
 50938   0143DC  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 50939   0143DE  0E01               	movlw	1
 50940   0143E0  EC6C  F0AB         	call	_readNVM
 50941   0143E4  5007               	movf	?_readNVM^(0+1280),w,c
 50942   0143E6  6E16               	movwf	getNN@flags^(0+1280),c
 50943                           
 50944                           ;../../VLCBlib_PIC/event_teach_simple.c: 924:     if (flags & 1) {
 50945   0143E8  A016               	btfss	getNN@flags^(0+1280),0,c
 50946   0143EA  D005               	goto	l8477
 50947                           
 50948                           ;../../VLCBlib_PIC/event_teach_simple.c: 925:         return nn.word;
 50949   0143EC  C55E  F50D         	movff	_nn,?_getNN
 50950   0143F0  C55F  F50E         	movff	_nn+1,?_getNN+1
 50951   0143F4  0012               	return	
 50952   0143F6                     l8477:
 50953                           
 50954                           ;../../VLCBlib_PIC/event_teach_simple.c: 927:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+1);
 50955   0143F6  5017               	movf	getNN@tableIndex^(0+1280),w,c
 50956   0143F8  0D12               	mullw	18
 50957   0143FA  C4F3 F50F          	movff	prodl,??_getNN
 50958   0143FE  C4F4 F510          	movff	prodh,??_getNN+1
 50959   014402  6A11               	clrf	(??_getNN+2)^(0+1280),c
 50960   014404  0E01               	movlw	1
 50961   014406  240F               	addwf	??_getNN^(0+1280),w,c
 50962   014408  6E07               	movwf	readNVM@index^(0+1280),c
 50963   01440A  0EE8               	movlw	232
 50964   01440C  2010               	addwfc	(??_getNN+1)^(0+1280),w,c
 50965   01440E  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 50966   014410  0E01               	movlw	1
 50967   014412  2011               	addwfc	(??_getNN+2)^(0+1280),w,c
 50968   014414  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 50969   014416  0E01               	movlw	1
 50970   014418  EC6C  F0AB         	call	_readNVM
 50971   01441C  5007               	movf	?_readNVM^(0+1280),w,c
 50972   01441E  6E14               	movwf	getNN@lo^(0+1280),c
 50973   014420  6A15               	clrf	(getNN@lo+1)^(0+1280),c
 50974                           
 50975                           ;../../VLCBlib_PIC/event_teach_simple.c: 928:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+0);
 50976   014422  5017               	movf	getNN@tableIndex^(0+1280),w,c
 50977   014424  0D12               	mullw	18
 50978   014426  C4F3 F50F          	movff	prodl,??_getNN
 50979   01442A  C4F4 F510          	movff	prodh,??_getNN+1
 50980   01442E  6A11               	clrf	(??_getNN+2)^(0+1280),c
 50981   014430  0E00               	movlw	0
 50982   014432  240F               	addwf	??_getNN^(0+1280),w,c
 50983   014434  6E07               	movwf	readNVM@index^(0+1280),c
 50984   014436  0EE8               	movlw	232
 50985   014438  2010               	addwfc	(??_getNN+1)^(0+1280),w,c
 50986   01443A  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 50987   01443C  0E01               	movlw	1
 50988   01443E  2011               	addwfc	(??_getNN+2)^(0+1280),w,c
 50989   014440  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 50990   014442  0E01               	movlw	1
 50991   014444  EC6C  F0AB         	call	_readNVM
 50992   014448  5007               	movf	?_readNVM^(0+1280),w,c
 50993   01444A  6E12               	movwf	getNN@hi^(0+1280),c
 50994   01444C  6A13               	clrf	(getNN@hi+1)^(0+1280),c
 50995                           
 50996                           ;../../VLCBlib_PIC/event_teach_simple.c: 929:     return lo | (hi << 8);
 50997   01444E  5012               	movf	getNN@hi^(0+1280),w,c
 50998   014450  6E10               	movwf	(??_getNN+1)^(0+1280),c
 50999   014452  6A0F               	clrf	??_getNN^(0+1280),c
 51000   014454  5014               	movf	getNN@lo^(0+1280),w,c
 51001   014456  100F               	iorwf	??_getNN^(0+1280),w,c
 51002   014458  6E0D               	movwf	?_getNN^(0+1280),c
 51003   01445A  5015               	movf	(getNN@lo+1)^(0+1280),w,c
 51004   01445C  1010               	iorwf	(??_getNN+1)^(0+1280),w,c
 51005   01445E  6E0E               	movwf	(?_getNN+1)^(0+1280),c
 51006   014460  0012               	return		;funcret
 51007   014462                     __end_of_getNN:
 51008                           	callstack 0
 51009                           
 51010 ;; *************** function _getHash *****************
 51011 ;; Defined at:
 51012 ;;		line 993 in file "../../VLCBlib_PIC/event_teach_simple.c"
 51013 ;; Parameters:    Size  Location     Type
 51014 ;;  nn              2   23[COMRAM] unsigned short 
 51015 ;;  en              2   25[COMRAM] unsigned short 
 51016 ;; Auto vars:     Size  Location     Type
 51017 ;;  hash            1   28[COMRAM] unsigned char 
 51018 ;; Return value:  Size  Location     Type
 51019 ;;                  1    wreg      unsigned char 
 51020 ;; Registers used:
 51021 ;;		wreg, status,2, status,0, prodl, prodh
 51022 ;; Tracked objects:
 51023 ;;		On entry : 0/0
 51024 ;;		On exit  : 0/0
 51025 ;;		Unchanged: 0/0
 51026 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 51027 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51029 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51030 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51031 ;;Total ram usage:        6 bytes
 51032 ;; Hardware stack levels used: 1
 51033 ;; Hardware stack levels required when called: 1
 51034 ;; This function calls:
 51035 ;;		Nothing
 51036 ;; This function is called by:
 51037 ;;		_findEvent
 51038 ;;		_rebuildHashtable
 51039 ;; This function uses a non-reentrant model
 51040 ;;
 51041                           
 51042                           	psect	text164
 51043   0165E4                     __ptext164:
 51044                           	callstack 0
 51045   0165E4                     _getHash:
 51046                           	callstack 122
 51047                           
 51048                           ;../../VLCBlib_PIC/event_teach_simple.c: 994:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_simple.c: 996:     hash = (uint8_t)(nn ^ (nn >> 8U));
 51049                           
 51050                           ;incstack = 0
 51051   0165E4  5019               	movf	(getHash@nn+1)^(0+1280),w,c
 51052   0165E6  1818               	xorwf	getHash@nn^(0+1280),w,c
 51053   0165E8  6E1D               	movwf	getHash@hash^(0+1280),c
 51054                           
 51055                           ;../../VLCBlib_PIC/event_teach_simple.c: 997:     hash = (uint8_t)(7U*hash + (en ^ (en>>
      +                          8U)));
 51056   0165EA  501B               	movf	(getHash@en+1)^(0+1280),w,c
 51057   0165EC  181A               	xorwf	getHash@en^(0+1280),w,c
 51058   0165EE  6E1C               	movwf	??_getHash^(0+1280),c
 51059   0165F0  501D               	movf	getHash@hash^(0+1280),w,c
 51060   0165F2  0D07               	mullw	7
 51061   0165F4  50F3               	movf	243,w,c
 51062   0165F6  241C               	addwf	??_getHash^(0+1280),w,c
 51063   0165F8  6E1D               	movwf	getHash@hash^(0+1280),c
 51064                           
 51065                           ;../../VLCBlib_PIC/event_teach_simple.c: 999:     hash %= 32;
 51066   0165FA  0E1F               	movlw	31
 51067   0165FC  161D               	andwf	getHash@hash^(0+1280),f,c
 51068                           
 51069                           ;../../VLCBlib_PIC/event_teach_simple.c: 1000:     return hash;
 51070   0165FE  501D               	movf	getHash@hash^(0+1280),w,c
 51071   016600  0012               	return		;funcret
 51072   016602                     __end_of_getHash:
 51073                           	callstack 0
 51074                           
 51075 ;; *************** function _getEN *****************
 51076 ;; Defined at:
 51077 ;;		line 939 in file "../../VLCBlib_PIC/event_teach_simple.c"
 51078 ;; Parameters:    Size  Location     Type
 51079 ;;  tableIndex      1    wreg     unsigned char 
 51080 ;; Auto vars:     Size  Location     Type
 51081 ;;  tableIndex      1   21[COMRAM] unsigned char 
 51082 ;;  lo              2   19[COMRAM] unsigned short 
 51083 ;;  hi              2   17[COMRAM] unsigned short 
 51084 ;; Return value:  Size  Location     Type
 51085 ;;                  2   12[COMRAM] unsigned short 
 51086 ;; Registers used:
 51087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51088 ;; Tracked objects:
 51089 ;;		On entry : 0/0
 51090 ;;		On exit  : 0/0
 51091 ;;		Unchanged: 0/0
 51092 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 51093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51094 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51095 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51096 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51097 ;;Total ram usage:       10 bytes
 51098 ;; Hardware stack levels used: 1
 51099 ;; Hardware stack levels required when called: 3
 51100 ;; This function calls:
 51101 ;;		_readNVM
 51102 ;; This function is called by:
 51103 ;;		_canpanSendProducedEvent
 51104 ;;		_doNnevn
 51105 ;;		_nerdCallback
 51106 ;;		_doNenrd
 51107 ;;		_doRqevn
 51108 ;;		_reqevCallback
 51109 ;;		_addEvent
 51110 ;;		_findEvent
 51111 ;;		_rebuildHashtable
 51112 ;; This function uses a non-reentrant model
 51113 ;;
 51114                           
 51115                           	psect	text165
 51116   015200                     __ptext165:
 51117                           	callstack 0
 51118   015200                     _getEN:
 51119                           	callstack 120
 51120                           
 51121                           ;incstack = 0
 51122                           ;getEN@tableIndex stored from wreg
 51123   015200  6E16               	movwf	getEN@tableIndex^(0+1280),c
 51124                           
 51125                           ;../../VLCBlib_PIC/event_teach_simple.c: 940:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_simple.c: 941:     uint16_t lo;;../../VLCBlib_PIC/event_teach_simple.c: 943:     lo
      +                           = (uint8_t)readNVM(FLASH_NVM_TYPE, 0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+3);
 51126   015202  5016               	movf	getEN@tableIndex^(0+1280),w,c
 51127   015204  0D12               	mullw	18
 51128   015206  C4F3 F50F          	movff	prodl,??_getEN
 51129   01520A  C4F4 F510          	movff	prodh,??_getEN+1
 51130   01520E  6A11               	clrf	(??_getEN+2)^(0+1280),c
 51131   015210  0E03               	movlw	3
 51132   015212  240F               	addwf	??_getEN^(0+1280),w,c
 51133   015214  6E07               	movwf	readNVM@index^(0+1280),c
 51134   015216  0EE8               	movlw	232
 51135   015218  2010               	addwfc	(??_getEN+1)^(0+1280),w,c
 51136   01521A  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 51137   01521C  0E01               	movlw	1
 51138   01521E  2011               	addwfc	(??_getEN+2)^(0+1280),w,c
 51139   015220  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 51140   015222  0E01               	movlw	1
 51141   015224  EC6C  F0AB         	call	_readNVM
 51142   015228  5007               	movf	?_readNVM^(0+1280),w,c
 51143   01522A  6E14               	movwf	getEN@lo^(0+1280),c
 51144   01522C  6A15               	clrf	(getEN@lo+1)^(0+1280),c
 51145                           
 51146                           ;../../VLCBlib_PIC/event_teach_simple.c: 944:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0x1E800 + (sizeof(Event) + 1 + 13)*tableIndex+2);
 51147   01522E  5016               	movf	getEN@tableIndex^(0+1280),w,c
 51148   015230  0D12               	mullw	18
 51149   015232  C4F3 F50F          	movff	prodl,??_getEN
 51150   015236  C4F4 F510          	movff	prodh,??_getEN+1
 51151   01523A  6A11               	clrf	(??_getEN+2)^(0+1280),c
 51152   01523C  0E02               	movlw	2
 51153   01523E  240F               	addwf	??_getEN^(0+1280),w,c
 51154   015240  6E07               	movwf	readNVM@index^(0+1280),c
 51155   015242  0EE8               	movlw	232
 51156   015244  2010               	addwfc	(??_getEN+1)^(0+1280),w,c
 51157   015246  6E08               	movwf	(readNVM@index+1)^(0+1280),c
 51158   015248  0E01               	movlw	1
 51159   01524A  2011               	addwfc	(??_getEN+2)^(0+1280),w,c
 51160   01524C  6E09               	movwf	(readNVM@index+2)^(0+1280),c
 51161   01524E  0E01               	movlw	1
 51162   015250  EC6C  F0AB         	call	_readNVM
 51163   015254  5007               	movf	?_readNVM^(0+1280),w,c
 51164   015256  6E12               	movwf	getEN@hi^(0+1280),c
 51165   015258  6A13               	clrf	(getEN@hi+1)^(0+1280),c
 51166                           
 51167                           ;../../VLCBlib_PIC/event_teach_simple.c: 945:     return lo | (hi << 8);
 51168   01525A  5012               	movf	getEN@hi^(0+1280),w,c
 51169   01525C  6E10               	movwf	(??_getEN+1)^(0+1280),c
 51170   01525E  6A0F               	clrf	??_getEN^(0+1280),c
 51171   015260  5014               	movf	getEN@lo^(0+1280),w,c
 51172   015262  100F               	iorwf	??_getEN^(0+1280),w,c
 51173   015264  6E0D               	movwf	?_getEN^(0+1280),c
 51174   015266  5015               	movf	(getEN@lo+1)^(0+1280),w,c
 51175   015268  1010               	iorwf	(??_getEN+1)^(0+1280),w,c
 51176   01526A  6E0E               	movwf	(?_getEN+1)^(0+1280),c
 51177   01526C  0012               	return		;funcret
 51178   01526E                     __end_of_getEN:
 51179                           	callstack 0
 51180                           
 51181 ;; *************** function _readNVM *****************
 51182 ;; Defined at:
 51183 ;;		line 570 in file "../../VLCBlib_PIC/nvm.c"
 51184 ;; Parameters:    Size  Location     Type
 51185 ;;  type            1    wreg     enum E23276
 51186 ;;  index           3    6[COMRAM] unsigned um
 51187 ;; Auto vars:     Size  Location     Type
 51188 ;;  type            1   11[COMRAM] enum E23276
 51189 ;; Return value:  Size  Location     Type
 51190 ;;                  2    6[COMRAM] short 
 51191 ;; Registers used:
 51192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 51193 ;; Tracked objects:
 51194 ;;		On entry : 0/0
 51195 ;;		On exit  : 0/0
 51196 ;;		Unchanged: 0/0
 51197 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 51198 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51200 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51201 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51202 ;;Total ram usage:        6 bytes
 51203 ;; Hardware stack levels used: 1
 51204 ;; Hardware stack levels required when called: 2
 51205 ;; This function calls:
 51206 ;;		_EEPROM_Read
 51207 ;;		_FLASH_Read
 51208 ;; This function is called by:
 51209 ;;		_bootPowerUp
 51210 ;;		_canPowerUp
 51211 ;;		_getEv
 51212 ;;		_getEVs
 51213 ;;		_getNN
 51214 ;;		_getEN
 51215 ;;		_mnsPowerUp
 51216 ;;		_loadNvCache
 51217 ;;		_main
 51218 ;;		_initEEPROMwriter
 51219 ;; This function uses a non-reentrant model
 51220 ;;
 51221                           
 51222                           	psect	text166
 51223   0156D8                     __ptext166:
 51224                           	callstack 0
 51225   0156D8                     _readNVM:
 51226                           	callstack 120
 51227                           
 51228                           ;incstack = 0
 51229                           ;readNVM@type stored from wreg
 51230   0156D8  6E0C               	movwf	readNVM@type^(0+1280),c
 51231                           
 51232                           ;../../VLCBlib_PIC/nvm.c: 571:     switch(type) {
 51233   0156DA  D01E               	goto	l8293
 51234   0156DC                     l8279:
 51235                           
 51236                           ;../../VLCBlib_PIC/nvm.c: 573:             return EEPROM_Read((uint16_t)index);
 51237   0156DC  C507  F501         	movff	readNVM@index,EEPROM_Read@index
 51238   0156E0  C508  F502         	movff	readNVM@index+1,EEPROM_Read@index+1
 51239   0156E4  6A03               	clrf	(EEPROM_Read@index+2)^(0+1280),c
 51240   0156E6  ECFD  F0AF         	call	_EEPROM_Read	;wreg free
 51241   0156EA  6E0A               	movwf	??_readNVM^(0+1280),c
 51242   0156EC  500A               	movf	??_readNVM^(0+1280),w,c
 51243   0156EE  6E07               	movwf	?_readNVM^(0+1280),c
 51244   0156F0  6A08               	clrf	(?_readNVM+1)^(0+1280),c
 51245   0156F2  0012               	return	
 51246   0156F4                     l8283:
 51247                           
 51248                           ;../../VLCBlib_PIC/nvm.c: 579:             return FLASH_Read(index);
 51249   0156F4  C507  F501         	movff	readNVM@index,FLASH_Read@address
 51250   0156F8  C508  F502         	movff	readNVM@index+1,FLASH_Read@address+1
 51251   0156FC  C509  F503         	movff	readNVM@index+2,FLASH_Read@address+2
 51252   015700  EC6D  F0A9         	call	_FLASH_Read	;wreg free
 51253   015704  6E0A               	movwf	??_readNVM^(0+1280),c
 51254   015706  500A               	movf	??_readNVM^(0+1280),w,c
 51255   015708  6E07               	movwf	?_readNVM^(0+1280),c
 51256   01570A  6A08               	clrf	(?_readNVM+1)^(0+1280),c
 51257   01570C  0012               	return	
 51258   01570E                     l8287:
 51259                           
 51260                           ;../../VLCBlib_PIC/nvm.c: 582:             return -GRSP_UNKNOWN_NVM_TYPE;
 51261   01570E  0EFF               	movlw	255
 51262   015710  6E08               	movwf	(?_readNVM+1)^(0+1280),c
 51263   015712  0E02               	movlw	2
 51264   015714  6E07               	movwf	?_readNVM^(0+1280),c
 51265   015716  0012               	return	
 51266   015718                     l8293:
 51267   015718  500C               	movf	readNVM@type^(0+1280),w,c
 51268   01571A  6E0A               	movwf	??_readNVM^(0+1280),c
 51269   01571C  6A0B               	clrf	(??_readNVM+1)^(0+1280),c
 51270                           
 51271                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 51272                           ; Switch size 1, requested type "simple"
 51273                           ; Number of cases is 1, Range of values is 0 to 0
 51274                           ; switch strategies available:
 51275                           ; Name         Instructions Cycles
 51276                           ; simple_byte            4     3 (average)
 51277                           ;	Chosen strategy is simple_byte
 51278   01571E  500B               	movf	(??_readNVM+1)^(0+1280),w,c
 51279   015720  0A00               	xorlw	0	; case 0
 51280   015722  A4D8               	btfss	status,2,c
 51281   015724  D7F4               	goto	l8287
 51282                           
 51283                           ; Switch size 1, requested type "simple"
 51284                           ; Number of cases is 2, Range of values is 0 to 1
 51285                           ; switch strategies available:
 51286                           ; Name         Instructions Cycles
 51287                           ; simple_byte            7     4 (average)
 51288                           ;	Chosen strategy is simple_byte
 51289   015726  500A               	movf	??_readNVM^(0+1280),w,c
 51290   015728  0A00               	xorlw	0	; case 0
 51291   01572A  B4D8               	btfsc	status,2,c
 51292   01572C  D7D7               	goto	l8279
 51293   01572E  0A01               	xorlw	1	; case 1
 51294   015730  B4D8               	btfsc	status,2,c
 51295   015732  D7E0               	goto	l8283
 51296   015734  D7EC               	goto	l8287
 51297   015736                     __end_of_readNVM:
 51298                           	callstack 0
 51299                           
 51300 ;; *************** function _FLASH_Read *****************
 51301 ;; Defined at:
 51302 ;;		line 315 in file "../../VLCBlib_PIC/nvm.c"
 51303 ;; Parameters:    Size  Location     Type
 51304 ;;  address         3    0[COMRAM] unsigned um
 51305 ;; Auto vars:     Size  Location     Type
 51306 ;;		None
 51307 ;; Return value:  Size  Location     Type
 51308 ;;                  1    wreg      unsigned char 
 51309 ;; Registers used:
 51310 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 51311 ;; Tracked objects:
 51312 ;;		On entry : 0/0
 51313 ;;		On exit  : 0/0
 51314 ;;		Unchanged: 0/0
 51315 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 51316 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51318 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51319 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51320 ;;Total ram usage:        6 bytes
 51321 ;; Hardware stack levels used: 1
 51322 ;; Hardware stack levels required when called: 1
 51323 ;; This function calls:
 51324 ;;		Nothing
 51325 ;; This function is called by:
 51326 ;;		_readNVM
 51327 ;; This function uses a non-reentrant model
 51328 ;;
 51329                           
 51330                           	psect	text167
 51331   0152DA                     __ptext167:
 51332                           	callstack 0
 51333   0152DA                     _FLASH_Read:
 51334                           	callstack 120
 51335                           
 51336                           ;../../VLCBlib_PIC/nvm.c: 317:     if ((address&(~((flash_address_t)(256U)-1))) == flash
      +                          Block) {
 51337                           
 51338                           ;incstack = 0
 51339   0152DA  0E00               	movlw	0
 51340   0152DC  1401               	andwf	FLASH_Read@address^(0+1280),w,c
 51341   0152DE  6E04               	movwf	??_FLASH_Read^(0+1280),c
 51342   0152E0  0EFF               	movlw	255
 51343   0152E2  1402               	andwf	(FLASH_Read@address+1)^(0+1280),w,c
 51344   0152E4  6E05               	movwf	(??_FLASH_Read+1)^(0+1280),c
 51345   0152E6  0EFF               	movlw	255
 51346   0152E8  1403               	andwf	(FLASH_Read@address+2)^(0+1280),w,c
 51347   0152EA  6E06               	movwf	(??_FLASH_Read+2)^(0+1280),c
 51348   0152EC  0105               	movlb	5	; () banked
 51349   0152EE  5177               	movf	_flashBlock& (0+255),w,b
 51350   0152F0  1804               	xorwf	??_FLASH_Read^(0+1280),w,c
 51351   0152F2  E115               	bnz	l1921
 51352   0152F4  5178               	movf	(_flashBlock+1)& (0+255),w,b
 51353   0152F6  1805               	xorwf	(??_FLASH_Read+1)^(0+1280),w,c
 51354   0152F8  E112               	bnz	l1921
 51355   0152FA  5179               	movf	(_flashBlock+2)& (0+255),w,b
 51356   0152FC  1806               	xorwf	(??_FLASH_Read+2)^(0+1280),w,c
 51357   0152FE  A4D8               	btfss	status,2,c
 51358   015300  D00E               	goto	l1921
 51359                           
 51360                           ; BSR set to: 5
 51361                           ;../../VLCBlib_PIC/nvm.c: 319:         return flashBuffer[(address&((256U)-1))];
 51362   015302  0EFF               	movlw	255
 51363   015304  1401               	andwf	FLASH_Read@address^(0+1280),w,c
 51364   015306  6E04               	movwf	??_FLASH_Read^(0+1280),c
 51365   015308  0E00               	movlw	0
 51366   01530A  1402               	andwf	(FLASH_Read@address+1)^(0+1280),w,c
 51367   01530C  6E05               	movwf	(??_FLASH_Read+1)^(0+1280),c
 51368   01530E  0E00               	movlw	0
 51369   015310  2404               	addwf	??_FLASH_Read^(0+1280),w,c
 51370   015312  6ED9               	movwf	fsr2l,c
 51371   015314  0E37               	movlw	55
 51372   015316  2005               	addwfc	(??_FLASH_Read+1)^(0+1280),w,c
 51373   015318  6EDA               	movwf	fsr2h,c
 51374   01531A  50DF               	movf	indf2,w,c
 51375   01531C  0012               	return	
 51376   01531E                     l1921:
 51377                           
 51378                           ; BSR set to: 5
 51379                           ;../../VLCBlib_PIC/nvm.c: 329:         TBLPTRU = (uint8_t) (address >> 16);
 51380   01531E  C503  F4F8         	movff	FLASH_Read@address+2,tblptru	;volatile
 51381                           
 51382                           ; BSR set to: 5
 51383                           ;../../VLCBlib_PIC/nvm.c: 330:         TBLPTRH = (uint8_t) (address >> 8);
 51384   015322  C501  F504         	movff	FLASH_Read@address,??_FLASH_Read
 51385   015326  C502  F505         	movff	FLASH_Read@address+1,??_FLASH_Read+1
 51386   01532A  C503  F506         	movff	FLASH_Read@address+2,??_FLASH_Read+2
 51387   01532E  C505  F504         	movff	??_FLASH_Read+1,??_FLASH_Read
 51388   015332  C506  F505         	movff	??_FLASH_Read+2,??_FLASH_Read+1
 51389   015336  6A06               	clrf	(??_FLASH_Read+2)^(0+1280),c
 51390   015338  5004               	movf	??_FLASH_Read^(0+1280),w,c
 51391   01533A  6EF7               	movwf	247,c	;volatile
 51392                           
 51393                           ; BSR set to: 5
 51394                           ;../../VLCBlib_PIC/nvm.c: 331:         TBLPTRL = (uint8_t) address;
 51395   01533C  C501  F4F6         	movff	FLASH_Read@address,tblptrl	;volatile
 51396   015340  0008               	tblrd		*	;# 
 51397                           
 51398                           ;../../VLCBlib_PIC/nvm.c: 335:         return TABLAT;
 51399   015342  50F5               	movf	245,w,c	;volatile
 51400   015344  0012               	return		;funcret
 51401   015346                     __end_of_FLASH_Read:
 51402                           	callstack 0
 51403                           
 51404 ;; *************** function _EEPROM_Read *****************
 51405 ;; Defined at:
 51406 ;;		line 171 in file "../../VLCBlib_PIC/nvm.c"
 51407 ;; Parameters:    Size  Location     Type
 51408 ;;  index           3    0[COMRAM] unsigned um
 51409 ;; Auto vars:     Size  Location     Type
 51410 ;;		None
 51411 ;; Return value:  Size  Location     Type
 51412 ;;                  1    wreg      unsigned char 
 51413 ;; Registers used:
 51414 ;;		wreg, status,2
 51415 ;; Tracked objects:
 51416 ;;		On entry : 0/0
 51417 ;;		On exit  : 0/0
 51418 ;;		Unchanged: 0/0
 51419 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 51420 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51422 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51423 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51424 ;;Total ram usage:        6 bytes
 51425 ;; Hardware stack levels used: 1
 51426 ;; Hardware stack levels required when called: 1
 51427 ;; This function calls:
 51428 ;;		Nothing
 51429 ;; This function is called by:
 51430 ;;		_EEPROM_Write
 51431 ;;		_readNVM
 51432 ;; This function uses a non-reentrant model
 51433 ;;
 51434                           
 51435                           	psect	text168
 51436   015FFA                     __ptext168:
 51437                           	callstack 0
 51438   015FFA                     _EEPROM_Read:
 51439                           	callstack 120
 51440                           
 51441                           ;../../VLCBlib_PIC/nvm.c: 191:     while (NVMCON0bits.GO)
 51442                           
 51443                           ;../../VLCBlib_PIC/nvm.c: 192:         ;
 51444                           
 51445                           ;incstack = 0
 51446   015FFA  0100               	movlb	0	; () banked
 51447   015FFC  B140               	btfsc	64,0,b	;volatile
 51448   015FFE  D7FD               	goto	__ptext168
 51449                           
 51450                           ; BSR set to: 0
 51451                           ;../../VLCBlib_PIC/nvm.c: 194:     NVMADRU = 0x38;
 51452   016000  0E38               	movlw	56
 51453   016002  6F45               	movwf	69,b	;volatile
 51454                           
 51455                           ;../../VLCBlib_PIC/nvm.c: 195:     NVMADRH = (uint8_t) (index >> 8);
 51456   016004  C501  F504         	movff	EEPROM_Read@index,??_EEPROM_Read
 51457   016008  C502  F505         	movff	EEPROM_Read@index+1,??_EEPROM_Read+1
 51458   01600C  C503  F506         	movff	EEPROM_Read@index+2,??_EEPROM_Read+2
 51459   016010  C505  F504         	movff	??_EEPROM_Read+1,??_EEPROM_Read
 51460   016014  C506  F505         	movff	??_EEPROM_Read+2,??_EEPROM_Read+1
 51461   016018  6A06               	clrf	(??_EEPROM_Read+2)^(0+1280),c
 51462   01601A  5004               	movf	??_EEPROM_Read^(0+1280),w,c
 51463   01601C  6F44               	movwf	68,b	;volatile
 51464                           
 51465                           ; BSR set to: 0
 51466                           ;../../VLCBlib_PIC/nvm.c: 196:     NVMADRL = (uint8_t) index;
 51467   01601E  C501  F043         	movff	EEPROM_Read@index,67	;volatile
 51468                           
 51469                           ;../../VLCBlib_PIC/nvm.c: 199:     NVMCON1bits.NVMCMD = 0x00;
 51470   016022  0EF8               	movlw	-8
 51471   016024  1741               	andwf	65,f,b	;volsfr
 51472                           
 51473                           ; BSR set to: 0
 51474                           ;../../VLCBlib_PIC/nvm.c: 202:     NVMCON0bits.GO = 1;
 51475   016026  8140               	bsf	64,0,b	;volatile
 51476   016028                     l1902:
 51477                           
 51478                           ; BSR set to: 0
 51479                           ;../../VLCBlib_PIC/nvm.c: 203:     while (NVMCON0bits.GO)
 51480   016028  B140               	btfsc	64,0,b	;volatile
 51481   01602A  D7FE               	goto	l1902
 51482                           
 51483                           ; BSR set to: 0
 51484                           ;../../VLCBlib_PIC/nvm.c: 207:     NVMCON1bits.NVMCMD = 0x07;
 51485   01602C  0E07               	movlw	7
 51486   01602E  1341               	iorwf	65,f,b	;volsfr
 51487                           
 51488                           ;../../VLCBlib_PIC/nvm.c: 208:     return NVMDATL;
 51489   016030  5146               	movf	70,w,b	;volatile
 51490                           
 51491                           ; BSR set to: 0
 51492   016032  0012               	return		;funcret
 51493   016034                     __end_of_EEPROM_Read:
 51494                           	callstack 0
 51495                           
 51496 ;; *************** function _receiveOverrun *****************
 51497 ;; Defined at:
 51498 ;;		line 370 in file "../../VLCBlib_PIC/can18_can_2.c"
 51499 ;; Parameters:    Size  Location     Type
 51500 ;;		None
 51501 ;; Auto vars:     Size  Location     Type
 51502 ;;		None
 51503 ;; Return value:  Size  Location     Type
 51504 ;;                  1    wreg      void 
 51505 ;; Registers used:
 51506 ;;		status,2, status,0
 51507 ;; Tracked objects:
 51508 ;;		On entry : 0/0
 51509 ;;		On exit  : 0/0
 51510 ;;		Unchanged: 0/0
 51511 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 51512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51516 ;;Total ram usage:        0 bytes
 51517 ;; Hardware stack levels used: 1
 51518 ;; This function calls:
 51519 ;;		Nothing
 51520 ;; This function is called by:
 51521 ;;		Interrupt level 2
 51522 ;; This function uses a non-reentrant model
 51523 ;;
 51524                           
 51525                           	psect	text169
 51526   0165C4                     __ptext169:
 51527                           	callstack 0
 51528   0165C4                     _receiveOverrun:
 51529                           	callstack 114
 51530                           
 51531                           ;../../VLCBlib_PIC/can18_can_2.c: 371:     if (C1FIFOSTA3Lbits.RXOVIF == 1) {
 51532                           
 51533                           ; BSR set to: 0
 51534                           ;incstack = 0
 51535   0165C4  0101               	movlb	1	; () banked
 51536   0165C6  A778               	btfss	120,3,b	;volatile
 51537   0165C8  D005               	goto	i2l12625
 51538                           
 51539                           ; BSR set to: 1
 51540                           ;../../VLCBlib_PIC/can18_can_2.c: 373:         canDiagnostics[0x08].asUint++;
 51541   0165CA  0106               	movlb	6	; () banked
 51542   0165CC  4BB6               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 51543   0165CE  2BB7               	incf	(_canDiagnostics+17)& (0+255),f,b
 51544                           
 51545                           ; BSR set to: 6
 51546                           ;../../VLCBlib_PIC/can18_can_2.c: 375:         C1FIFOSTA3Lbits.RXOVIF = 0;
 51547   0165D0  0101               	movlb	1	; () banked
 51548   0165D2  9778               	bcf	120,3,b	;volatile
 51549   0165D4                     i2l12625:
 51550                           
 51551                           ; BSR set to: 1
 51552                           ;../../VLCBlib_PIC/can18_can_2.c: 377:     if (C1INTHbits.IVMIF == 1) {
 51553   0165D4  AF1D               	btfss	29,7,b	;volatile
 51554   0165D6  0011               	retfie		f
 51555                           
 51556                           ; BSR set to: 1
 51557                           ;../../VLCBlib_PIC/can18_can_2.c: 379:         canDiagnostics[0x01].asUint++;
 51558   0165D8  0106               	movlb	6	; () banked
 51559   0165DA  4BA8               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 51560   0165DC  2BA9               	incf	(_canDiagnostics+3)& (0+255),f,b
 51561                           
 51562                           ; BSR set to: 6
 51563                           ;../../VLCBlib_PIC/can18_can_2.c: 381:         C1INTHbits.IVMIF = 0;
 51564   0165DE  0101               	movlb	1	; () banked
 51565   0165E0  9F1D               	bcf	29,7,b	;volatile
 51566                           
 51567                           ; BSR set to: 1
 51568   0165E2  0011               	retfie		f
 51569   0165E4                     __end_of_receiveOverrun:
 51570                           	callstack 0
 51571                           
 51572 ;; *************** function _TMR0_ISR *****************
 51573 ;; Defined at:
 51574 ;;		line 201 in file "../../VLCBlib_PIC/ticktime.c"
 51575 ;; Parameters:    Size  Location     Type
 51576 ;;		None
 51577 ;; Auto vars:     Size  Location     Type
 51578 ;;		None
 51579 ;; Return value:  Size  Location     Type
 51580 ;;                  1    wreg      void 
 51581 ;; Registers used:
 51582 ;;		wreg, status,2, status,0
 51583 ;; Tracked objects:
 51584 ;;		On entry : 0/0
 51585 ;;		On exit  : 0/0
 51586 ;;		Unchanged: 0/0
 51587 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 51588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51592 ;;Total ram usage:        0 bytes
 51593 ;; Hardware stack levels used: 1
 51594 ;; This function calls:
 51595 ;;		Nothing
 51596 ;; This function is called by:
 51597 ;;		Interrupt level 2
 51598 ;; This function uses a non-reentrant model
 51599 ;;
 51600                           
 51601                           	psect	text170
 51602   016728                     __ptext170:
 51603                           	callstack 0
 51604   016728                     _TMR0_ISR:
 51605                           	callstack 114
 51606                           
 51607                           ;../../VLCBlib_PIC/ticktime.c: 205:     if(TMR0IF) {
 51608                           
 51609                           ; BSR set to: 1
 51610                           ;incstack = 0
 51611   016728  AEB1               	btfss	1201,7,c	;volatile
 51612   01672A  0011               	retfie		f
 51613                           
 51614                           ;../../VLCBlib_PIC/ticktime.c: 207:         TMR0IF = 0;
 51615   01672C  9EB1               	bcf	1201,7,c	;volatile
 51616                           
 51617                           ;../../VLCBlib_PIC/ticktime.c: 208:         timerExtension1++;
 51618   01672E  0105               	movlb	5	; () banked
 51619   016730  2B8A               	incf	_timerExtension1& (0+255),f,b	;volatile
 51620                           
 51621                           ; BSR set to: 5
 51622                           ;../../VLCBlib_PIC/ticktime.c: 209:         if(timerExtension1 == 0) {
 51623   016732  518A               	movf	_timerExtension1& (0+255),w,b	;volatile
 51624   016734  A4D8               	btfss	status,2,c
 51625   016736  0011               	retfie		f
 51626                           
 51627                           ; BSR set to: 5
 51628                           ;../../VLCBlib_PIC/ticktime.c: 210:             timerExtension2++;
 51629   016738  2B89               	incf	_timerExtension2& (0+255),f,b	;volatile
 51630   01673A  0011               	retfie		f
 51631   01673C                     __end_of_TMR0_ISR:
 51632                           	callstack 0
 51633                           
 51634 ;; *************** function _DEFAULT_ISR *****************
 51635 ;; Defined at:
 51636 ;;		line 1369 in file "../../VLCBlib_PIC/vlcb.c"
 51637 ;; Parameters:    Size  Location     Type
 51638 ;;		None
 51639 ;; Auto vars:     Size  Location     Type
 51640 ;;		None
 51641 ;; Return value:  Size  Location     Type
 51642 ;;                  1    wreg      void 
 51643 ;; Registers used:
 51644 ;;		None
 51645 ;; Tracked objects:
 51646 ;;		On entry : 0/0
 51647 ;;		On exit  : 0/0
 51648 ;;		Unchanged: 0/0
 51649 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK41  BANK42  BANK43  BANK44  BANK45  BANK4
      +6  BANK47  BANK48  BANK49  BANK50  BANK51  BANK52  BANK53  BANK54
 51650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0
 51654 ;;Total ram usage:        0 bytes
 51655 ;; Hardware stack levels used: 1
 51656 ;; This function calls:
 51657 ;;		Nothing
 51658 ;; This function is called by:
 51659 ;;		Interrupt level 2
 51660 ;; This function uses a non-reentrant model
 51661 ;;
 51662                           
 51663                           	psect	text171
 51664   0167D8                     __ptext171:
 51665                           	callstack 0
 51666   0167D8                     _DEFAULT_ISR:
 51667                           	callstack 114
 51668                           
 51669                           ;incstack = 0
 51670   0167D8  0011               	retfie		f
 51671   0167DA                     __end_of_DEFAULT_ISR:
 51672                           	callstack 0
 51673                           
 51674                           ;
 51675                           ; H/W Interrupt Vector Table @ 0x900
 51676                           ;
 51677                           
 51678                           	psect	ivt0x900
 51679   000900                     __pivt0x900:
 51680                           	callstack 0
 51681   000900                     ivt0x900_base:
 51682                           	callstack 0
 51683                           
 51684                           ; Vector 0 : SWINT
 51685   000900  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51686                           
 51687                           ; Vector 1 : HLVD
 51688   000902  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51689                           
 51690                           ; Vector 2 : OSF
 51691   000904  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51692                           
 51693                           ; Vector 3 : CSW
 51694   000906  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51695                           
 51696                           ; Vector 4 : TU16A
 51697   000908  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51698                           
 51699                           ; Vector 5 : CLC1
 51700   00090A  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51701                           
 51702                           ; Vector 6 : CAN
 51703   00090C  5971               	dw	_receiveOverrun shr (0+2)
 51704                           
 51705                           ; Vector 7 : IOC
 51706   00090E  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51707                           
 51708                           ; Vector 8 : INT0
 51709   000910  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51710                           
 51711                           ; Vector 9 : ZCD
 51712   000912  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51713                           
 51714                           ; Vector 10 : AD
 51715   000914  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51716                           
 51717                           ; Vector 11 : ACT
 51718   000916  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51719                           
 51720                           ; Vector 12 : CM1
 51721   000918  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51722                           
 51723                           ; Vector 13 : SMT1
 51724   00091A  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51725                           
 51726                           ; Vector 14 : SMT1PRA
 51727   00091C  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51728                           
 51729                           ; Vector 15 : SMT1PWA
 51730   00091E  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51731                           
 51732                           ; Vector 16 : ADCH1
 51733   000920  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51734                           
 51735                           ; Vector 17 : ADCH2
 51736   000922  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51737                           
 51738                           ; Vector 18 : ADCH3
 51739   000924  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51740                           
 51741                           ; Vector 19 : ADCH4
 51742   000926  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51743                           
 51744                           ; Vector 20 : DMA1SCNT
 51745   000928  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51746                           
 51747                           ; Vector 21 : DMA1DCNT
 51748   00092A  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51749                           
 51750                           ; Vector 22 : DMA1OR
 51751   00092C  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51752                           
 51753                           ; Vector 23 : DMA1A
 51754   00092E  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51755                           
 51756                           ; Vector 24 : SPI1RX
 51757   000930  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51758                           
 51759                           ; Vector 25 : SPI1TX
 51760   000932  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51761                           
 51762                           ; Vector 26 : SPI1
 51763   000934  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51764                           
 51765                           ; Vector 27 : TMR2
 51766   000936  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51767                           
 51768                           ; Vector 28 : TMR1
 51769   000938  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51770                           
 51771                           ; Vector 29 : TMR1G
 51772   00093A  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51773                           
 51774                           ; Vector 30 : CCP1
 51775   00093C  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51776                           
 51777                           ; Vector 31 : TMR0
 51778   00093E  59CA               	dw	_TMR0_ISR shr (0+2)
 51779                           
 51780                           ; Vector 32 : U1RX
 51781   000940  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51782                           
 51783                           ; Vector 33 : U1TX
 51784   000942  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51785                           
 51786                           ; Vector 34 : U1E
 51787   000944  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51788                           
 51789                           ; Vector 35 : U1
 51790   000946  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51791                           
 51792                           ; Vector 36 : CANRX
 51793   000948  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51794                           
 51795                           ; Vector 37 : CANTX
 51796   00094A  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51797                           
 51798                           ; Vector 38 : PWM1PR
 51799   00094C  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51800                           
 51801                           ; Vector 39 : PWM1
 51802   00094E  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51803                           
 51804                           ; Vector 40 : SPI2RX
 51805   000950  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51806                           
 51807                           ; Vector 41 : SPI2TX
 51808   000952  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51809                           
 51810                           ; Vector 42 : SPI2
 51811   000954  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51812                           
 51813                           ; Vector 43 : TU16B
 51814   000956  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51815                           
 51816                           ; Vector 44 : TMR3
 51817   000958  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51818                           
 51819                           ; Vector 45 : TMR3G
 51820   00095A  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51821                           
 51822                           ; Vector 46 : PWM2PR
 51823   00095C  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51824                           
 51825                           ; Vector 47 : PWM2
 51826   00095E  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51827                           
 51828                           ; Vector 48 : INT1
 51829   000960  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51830                           
 51831                           ; Vector 49 : CLC2
 51832   000962  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51833                           
 51834                           ; Vector 50 : CWG1
 51835   000964  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51836                           
 51837                           ; Vector 51 : NCO1
 51838   000966  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51839                           
 51840                           ; Vector 52 : DMA2SCNT
 51841   000968  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51842                           
 51843                           ; Vector 53 : DMA2DCNT
 51844   00096A  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51845                           
 51846                           ; Vector 54 : DMA2OR
 51847   00096C  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51848                           
 51849                           ; Vector 55 : DMA2A
 51850   00096E  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51851                           
 51852                           ; Vector 56 : I2C1RX
 51853   000970  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51854                           
 51855                           ; Vector 57 : I2C1TX
 51856   000972  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51857                           
 51858                           ; Vector 58 : I2C1
 51859   000974  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51860                           
 51861                           ; Vector 59 : I2C1E
 51862   000976  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51863                           
 51864                           ; Vector 60 : Undefined
 51865   000978  0280               	dw	ivt0x900_undefint shr (0+2)
 51866                           
 51867                           ; Vector 61 : CLC3
 51868   00097A  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51869                           
 51870                           ; Vector 62 : PWM3PR
 51871   00097C  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51872                           
 51873                           ; Vector 63 : PWM3
 51874   00097E  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51875                           
 51876                           ; Vector 64 : U2RX
 51877   000980  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51878                           
 51879                           ; Vector 65 : U2TX
 51880   000982  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51881                           
 51882                           ; Vector 66 : U2E
 51883   000984  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51884                           
 51885                           ; Vector 67 : U2
 51886   000986  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51887                           
 51888                           ; Vector 68 : TMR5
 51889   000988  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51890                           
 51891                           ; Vector 69 : TMR5G
 51892   00098A  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51893                           
 51894                           ; Vector 70 : CCP2
 51895   00098C  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51896                           
 51897                           ; Vector 71 : SCAN
 51898   00098E  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51899                           
 51900                           ; Vector 72 : U3RX
 51901   000990  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51902                           
 51903                           ; Vector 73 : U3TX
 51904   000992  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51905                           
 51906                           ; Vector 74 : U3E
 51907   000994  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51908                           
 51909                           ; Vector 75 : U3
 51910   000996  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51911                           
 51912                           ; Vector 76 : Undefined
 51913   000998  0280               	dw	ivt0x900_undefint shr (0+2)
 51914                           
 51915                           ; Vector 77 : CLC4
 51916   00099A  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51917                           
 51918                           ; Vector 78 : PWM4PR
 51919   00099C  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51920                           
 51921                           ; Vector 79 : PWM4
 51922   00099E  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51923                           
 51924                           ; Vector 80 : INT2
 51925   0009A0  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51926                           
 51927                           ; Vector 81 : CLC5
 51928   0009A2  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51929                           
 51930                           ; Vector 82 : CWG2
 51931   0009A4  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51932                           
 51933                           ; Vector 83 : NCO2
 51934   0009A6  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51935                           
 51936                           ; Vector 84 : DMA3SCNT
 51937   0009A8  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51938                           
 51939                           ; Vector 85 : DMA3DCNT
 51940   0009AA  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51941                           
 51942                           ; Vector 86 : DMA3OR
 51943   0009AC  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51944                           
 51945                           ; Vector 87 : DMA3A
 51946   0009AE  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51947                           
 51948                           ; Vector 88 : CCP3
 51949   0009B0  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51950                           
 51951                           ; Vector 89 : CLC6
 51952   0009B2  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51953                           
 51954                           ; Vector 90 : CWG3
 51955   0009B4  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51956                           
 51957                           ; Vector 91 : TMR4
 51958   0009B6  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51959                           
 51960                           ; Vector 92 : DMA4SCNT
 51961   0009B8  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51962                           
 51963                           ; Vector 93 : DMA4DCNT
 51964   0009BA  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51965                           
 51966                           ; Vector 94 : DMA4OR
 51967   0009BC  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51968                           
 51969                           ; Vector 95 : DMA4A
 51970   0009BE  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51971                           
 51972                           ; Vector 96 : U4RX
 51973   0009C0  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51974                           
 51975                           ; Vector 97 : U4TX
 51976   0009C2  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51977                           
 51978                           ; Vector 98 : U4E
 51979   0009C4  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51980                           
 51981                           ; Vector 99 : U4
 51982   0009C6  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51983                           
 51984                           ; Vector 100 : DMA5SCNT
 51985   0009C8  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51986                           
 51987                           ; Vector 101 : DMA5DCNT
 51988   0009CA  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51989                           
 51990                           ; Vector 102 : DMA5OR
 51991   0009CC  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51992                           
 51993                           ; Vector 103 : DMA5A
 51994   0009CE  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51995                           
 51996                           ; Vector 104 : U5RX
 51997   0009D0  59F6               	dw	_DEFAULT_ISR shr (0+2)
 51998                           
 51999                           ; Vector 105 : U5TX
 52000   0009D2  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52001                           
 52002                           ; Vector 106 : U5E
 52003   0009D4  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52004                           
 52005                           ; Vector 107 : U5
 52006   0009D6  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52007                           
 52008                           ; Vector 108 : DMA6SCNT
 52009   0009D8  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52010                           
 52011                           ; Vector 109 : DMA6DCNT
 52012   0009DA  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52013                           
 52014                           ; Vector 110 : DMA6OR
 52015   0009DC  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52016                           
 52017                           ; Vector 111 : DMA6A
 52018   0009DE  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52019                           
 52020                           ; Vector 112 : Undefined
 52021   0009E0  0280               	dw	ivt0x900_undefint shr (0+2)
 52022                           
 52023                           ; Vector 113 : CLC7
 52024   0009E2  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52025                           
 52026                           ; Vector 114 : CM2
 52027   0009E4  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52028                           
 52029                           ; Vector 115 : NCO3
 52030   0009E6  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52031                           
 52032                           ; Vector 116 : DMA7SCNT
 52033   0009E8  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52034                           
 52035                           ; Vector 117 : DMA7DCNT
 52036   0009EA  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52037                           
 52038                           ; Vector 118 : DMA7OR
 52039   0009EC  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52040                           
 52041                           ; Vector 119 : DMA7A
 52042   0009EE  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52043                           
 52044                           ; Vector 120 : NVM
 52045   0009F0  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52046                           
 52047                           ; Vector 121 : CLC8
 52048   0009F2  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52049                           
 52050                           ; Vector 122 : CRC
 52051   0009F4  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52052                           
 52053                           ; Vector 123 : TMR6
 52054   0009F6  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52055                           
 52056                           ; Vector 124 : DMA8SCNT
 52057   0009F8  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52058                           
 52059                           ; Vector 125 : DMA8DCNT
 52060   0009FA  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52061                           
 52062                           ; Vector 126 : DMA8OR
 52063   0009FC  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52064                           
 52065                           ; Vector 127 : DMA8A
 52066   0009FE  59F6               	dw	_DEFAULT_ISR shr (0+2)
 52067   000A00                     ivt0x900_undefint:
 52068                           	callstack 0
 52069   000A00  00FF               	reset	
 52070                           
 52071                           	psect	rparam
 52072   000001                     ___rparam_used  equ	1
 52073   000000                     ___param_bank   equ	0
 52074   000000                     __Lparam        equ	__Lrparam
 52075   000000                     __Hparam        equ	__Hrparam
 52076                           
 52077                           	psect	config
 52078                           
 52079                           ;Config register CONFIG1 @ 0x300000
 52080                           ;	External Oscillator Selection
 52081                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz
 52082                           ;	Reset Oscillator Selection
 52083                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
 52084   300000                     	org	3145728
 52085   300000  FA                 	db	250
 52086                           
 52087                           ;Config register CONFIG2 @ 0x300001
 52088                           ;	Clock out Enable bit
 52089                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 52090                           ;	PRLOCKED One-Way Set Enable bit
 52091                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 52092                           ;	Clock Switch Enable bit
 52093                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 52094                           ;	JTAG Enable bit
 52095                           ;	JTAGEN = OFF, Disable JTAG Boundary Scan mode, JTAG pins revert to user functions
 52096                           ;	Fail-Safe Clock Monitor Enable bit
 52097                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 52098                           ;	Fail-Safe Clock Monitor -Primary XTAL Enable bit
 52099                           ;	FCMENP = ON, FSCM timer will set FSCMP bit and OSFIF interrupt on Primary XTAL failure
 52100                           ;	Fail-Safe Clock Monitor -Secondary XTAL Enable bit
 52101                           ;	FCMENS = ON, FSCM timer will set FSCMS bit and OSFIF interrupt on Secondary XTAL failu
      +                          re
 52102   300001                     	org	3145729
 52103   300001  EF                 	db	239
 52104                           
 52105                           ;Config register CONFIG3 @ 0x300002
 52106                           ;	MCLR Enable bit
 52107                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 52108                           ;	Power-up timer selection bits
 52109                           ;	PWRTS = PWRT_64, PWRT set at 64ms
 52110                           ;	Multi-vector enable bit
 52111                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 52112                           ;	IVTLOCK bit One-way set enable bit
 52113                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 52114                           ;	Low Power BOR Enable bit
 52115                           ;	LPBOREN = OFF, Low-Power BOR disabled
 52116                           ;	Brown-out Reset Enable bits
 52117                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 52118   300002                     	org	3145730
 52119   300002  FD                 	db	253
 52120                           
 52121                           ;Config register CONFIG4 @ 0x300003
 52122                           ;	Brown-out Reset Voltage Selection bits
 52123                           ;	BORV = VBOR_2P7, Brown-out Reset Voltage (VBOR) set to 2.7V
 52124                           ;	ZCD Disable bit
 52125                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 52126                           ;	PPSLOCK bit One-Way Set Enable bit
 52127                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 52128                           ;	Stack Full/Underflow Reset Enable bit
 52129                           ;	STVREN = ON, Stack full/underflow will cause Reset
 52130                           ;	Low Voltage Programming Enable bit
 52131                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 52132                           ;	Extended Instruction Set Enable bit
 52133                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 52134   300003                     	org	3145731
 52135   300003  FD                 	db	253
 52136                           
 52137                           ;Config register CONFIG5 @ 0x300004
 52138                           ;	WDT Period selection bits
 52139                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 52140                           ;	WDT operating mode
 52141                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 52142   300004                     	org	3145732
 52143   300004  9F                 	db	159
 52144                           
 52145                           ;Config register CONFIG6 @ 0x300005
 52146                           ;	WDT Window Select bits
 52147                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 52148                           ;	WDT input clock selector
 52149                           ;	WDTCCS = SC, Software Control
 52150   300005                     	org	3145733
 52151   300005  FF                 	db	255
 52152                           
 52153                           ;Config register CONFIG7 @ 0x300006
 52154                           ;	Boot Block Size selection bits
 52155                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 52156                           ;	Boot Block enable bit
 52157                           ;	BBEN = ON, Boot block enabled
 52158                           ;	Storage Area Flash enable bit
 52159                           ;	SAFEN = OFF, SAF disabled
 52160                           ;	Background Debugger
 52161                           ;	DEBUG = 0x1, unprogrammed default
 52162   300006                     	org	3145734
 52163   300006  F7                 	db	247
 52164                           
 52165                           ;Config register CONFIG8 @ 0x300007
 52166                           ;	Boot Block Write Protection bit
 52167                           ;	WRTB = ON, Boot Block Write protected
 52168                           ;	Configuration Register Write Protection bit
 52169                           ;	WRTC = ON, Configuration registers Write protected
 52170                           ;	Data EEPROM Write Protection bit
 52171                           ;	WRTD = OFF, Data EEPROM not Write protected
 52172                           ;	SAF Write protection bit
 52173                           ;	WRTSAF = OFF, SAF not Write Protected
 52174                           ;	Application Block write protection bit
 52175                           ;	WRTAPP = OFF, Application Block not write protected
 52176   300007                     	org	3145735
 52177   300007  FC                 	db	252
 52178                           
 52179                           ;Config register CONFIG9 @ 0x300008
 52180                           ;	CRC on boot output pin selection
 52181                           ;	BOOTPINSEL = RC5, CRC on boot output pin is RC5
 52182                           ;	CRC on boot output pin enable bit
 52183                           ;	BPEN = OFF, CRC on boot output pin disabled
 52184                           ;	CRC on boot output pin open drain bit
 52185                           ;	ODCON = OFF, Pin drives both high-going and low-going signals
 52186   300008                     	org	3145736
 52187   300008  FF                 	db	255
 52188                           
 52189                           ;Config register CONFIG10 @ 0x300009
 52190                           ;	PFM and Data EEPROM Code Protection bit
 52191                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 52192   300009                     	org	3145737
 52193   300009  FF                 	db	255
 52194                           
 52195                           ;Config register CONFIG11 @ 0x30000A
 52196                           ;	CRC on boot scan enable for boot area
 52197                           ;	BOOTSCEN = OFF, CRC on boot will not include the boot area of program memory in its ca
      +                          lculation
 52198                           ;	CRC on boot Continue on Error for boot areas bit
 52199                           ;	BOOTCOE = HALT, CRC on boot will stop device if error is detected in boot areas
 52200                           ;	CRC on boot application code scan enable
 52201                           ;	APPSCEN = OFF, CRC on boot will not include the application area of program memory in 
      +                          its calculation
 52202                           ;	CRC on boot SAF area scan enable
 52203                           ;	SAFSCEN = OFF, CRC on boot will not include the SAF area of program memory in its calc
      +                          ulation
 52204                           ;	CRC on boot Data EEPROM scan enable
 52205                           ;	DATASCEN = OFF, CRC on boot will not include data EEPROM in its calculation
 52206                           ;	CRC on boot Config fuses scan enable
 52207                           ;	CFGSCEN = OFF, CRC on boot will not include the configuration fuses in its calculation
 52208                           ;	CRC on boot Continue on Error for non-boot areas bit
 52209                           ;	COE = HALT, CRC on boot will stop device if error is detected in non-boot areas
 52210                           ;	Boot on CRC Enable bit
 52211                           ;	BOOTPOR = OFF, CRC on boot will not run
 52212   30000A                     	org	3145738
 52213   30000A  FF                 	db	255
 52214                           
 52215                           ;Config register CONFIG12 @ 0x30000B
 52216                           ;	Boot Sector Polynomial for CRC on boot bits 31-24
 52217                           ;	BCRCPOLT = hFF, Bits 31:24 of BCRCPOL are 0xFF
 52218   30000B                     	org	3145739
 52219   30000B  FF                 	db	255
 52220                           
 52221                           ;Config register CONFIG13 @ 0x30000C
 52222                           ;	Boot Sector Polynomial for CRC on boot bits 23-16
 52223                           ;	BCRCPOLU = hFF, Bits 23:16 of BCRCPOL are 0xFF
 52224   30000C                     	org	3145740
 52225   30000C  FF                 	db	255
 52226                           
 52227                           ;Config register CONFIG14 @ 0x30000D
 52228                           ;	Boot Sector Polynomial for CRC on boot bits 15-8
 52229                           ;	BCRCPOLH = hFF, Bits 15:8 of BCRCPOL are 0xFF
 52230   30000D                     	org	3145741
 52231   30000D  FF                 	db	255
 52232                           
 52233                           ;Config register CONFIG15 @ 0x30000E
 52234                           ;	Boot Sector Polynomial for CRC on boot bits 7-0
 52235                           ;	BCRCPOLL = hFF, Bits 7:0 of BCRCPOL are 0xFF
 52236   30000E                     	org	3145742
 52237   30000E  FF                 	db	255
 52238                           
 52239                           ;Config register CONFIG16 @ 0x30000F
 52240                           ;	Boot Sector Seed for CRC on boot bits 31-24
 52241                           ;	BCRCSEEDT = hFF, Bits 31:24 of BCRCSEED are 0xFF
 52242   30000F                     	org	3145743
 52243   30000F  FF                 	db	255
 52244                           
 52245                           ;Config register CONFIG17 @ 0x300010
 52246                           ;	Boot Sector Seed for CRC on boot bits 23-16
 52247                           ;	BCRCSEEDU = hFF, Bits 23:16 of BCRCSEED are 0xFF
 52248   300010                     	org	3145744
 52249   300010  FF                 	db	255
 52250                           
 52251                           ;Config register CONFIG18 @ 0x300011
 52252                           ;	Boot Sector Seed for CRC on boot bits 15-8
 52253                           ;	BCRCSEEDH = hFF, Bits 15:8 of BCRCSEED are 0xFF
 52254   300011                     	org	3145745
 52255   300011  FF                 	db	255
 52256                           
 52257                           ;Config register CONFIG19 @ 0x300012
 52258                           ;	Boot Sector Seed for CRC on boot bits 7-0
 52259                           ;	BCRCSEEDL = hFF, Bits 7:0 of BCRCSEED are 0xFF
 52260   300012                     	org	3145746
 52261   300012  FF                 	db	255
 52262                           
 52263                           ;Config register CONFIG20 @ 0x300013
 52264                           ;	Boot Sector Expected Result for CRC on boot bits 31-24
 52265                           ;	BCRCEREST = hFF, Bits 31:24 of BCRCERES are 0xFF
 52266   300013                     	org	3145747
 52267   300013  FF                 	db	255
 52268                           
 52269                           ;Config register CONFIG21 @ 0x300014
 52270                           ;	Boot Sector Expected Result for CRC on boot bits 23-16
 52271                           ;	BCRCERESU = hFF, Bits 23:16 of BCRCERES are 0xFF
 52272   300014                     	org	3145748
 52273   300014  FF                 	db	255
 52274                           
 52275                           ;Config register CONFIG22 @ 0x300015
 52276                           ;	Boot Sector Expected Result for CRC on boot bits 15-8
 52277                           ;	BCRCERESH = hFF, Bits 15:8 of BCRCERES are 0xFF
 52278   300015                     	org	3145749
 52279   300015  FF                 	db	255
 52280                           
 52281                           ;Config register CONFIG23 @ 0x300016
 52282                           ;	Boot Sector Expected Result for CRC on boot bits 7-0
 52283                           ;	BCRCERESL = hFF, Bits 7:0 of BCRCERES are 0xFF
 52284   300016                     	org	3145750
 52285   300016  FF                 	db	255
 52286                           
 52287                           ;Config register CONFIG24 @ 0x300017
 52288                           ;	Non-Boot Sector Polynomial for CRC on boot bits 31-24
 52289                           ;	CRCPOLT = hFF, Bits 31:24 of CRCPOL are 0xFF
 52290   300017                     	org	3145751
 52291   300017  FF                 	db	255
 52292                           
 52293                           ;Config register CONFIG25 @ 0x300018
 52294                           ;	Non-Boot Sector Polynomial for CRC on boot bits 23-16
 52295                           ;	CRCPOLU = hFF, Bits 23:16 of CRCPOL are 0xFF
 52296   300018                     	org	3145752
 52297   300018  FF                 	db	255
 52298                           
 52299                           ;Config register CONFIG26 @ 0x300019
 52300                           ;	Non-Boot Sector Polynomial for CRC on boot bits 15-8
 52301                           ;	CRCPOLH = hFF, Bits 15:8 of CRCPOL are 0xFF
 52302   300019                     	org	3145753
 52303   300019  FF                 	db	255
 52304                           
 52305                           ;Config register CONFIG27 @ 0x30001A
 52306                           ;	Non-Boot Sector Polynomial for CRC on boot bits 7-0
 52307                           ;	CRCPOLL = hFF, Bits 7:0 of CRCPOL are 0xFF
 52308   30001A                     	org	3145754
 52309   30001A  FF                 	db	255
 52310                           
 52311                           ;Config register CONFIG28 @ 0x30001B
 52312                           ;	Non-Boot Sector Seed for CRC on boot bits 31-24
 52313                           ;	CRCSEEDT = hFF, Bits 31:24 of CRCSEED are 0xFF
 52314   30001B                     	org	3145755
 52315   30001B  FF                 	db	255
 52316                           
 52317                           ;Config register CONFIG29 @ 0x30001C
 52318                           ;	Non-Boot Sector Seed for CRC on boot bits 23-16
 52319                           ;	CRCSEEDU = hFF, Bits 23:16 of CRCSEED are 0xFF
 52320   30001C                     	org	3145756
 52321   30001C  FF                 	db	255
 52322                           
 52323                           ;Config register CONFIG30 @ 0x30001D
 52324                           ;	Non-Boot Sector Seed for CRC on boot bits 15-8
 52325                           ;	CRCSEEDH = hFF, Bits 15:8 of CRCSEED are 0xFF
 52326   30001D                     	org	3145757
 52327   30001D  FF                 	db	255
 52328                           
 52329                           ;Config register CONFIG31 @ 0x30001E
 52330                           ;	Non-Boot Sector Seed for CRC on boot bits 7-0
 52331                           ;	CRCSEEDL = hFF, Bits 7:0 of CRCSEED are 0xFF
 52332   30001E                     	org	3145758
 52333   30001E  FF                 	db	255
 52334                           
 52335                           ;Config register CONFIG32 @ 0x30001F
 52336                           ;	Non-Boot Sector Expected Result for CRC on boot bits 31-24
 52337                           ;	CRCEREST = hFF, Bits 31:24 of CRCERES are 0xFF
 52338   30001F                     	org	3145759
 52339   30001F  FF                 	db	255
 52340                           
 52341                           ;Config register CONFIG33 @ 0x300020
 52342                           ;	Non-Boot Sector Expected Result for CRC on boot bits 23-16
 52343                           ;	CRCERESU = hFF, Bits 23:16 of CRCERES are 0xFF
 52344   300020                     	org	3145760
 52345   300020  FF                 	db	255
 52346                           
 52347                           ;Config register CONFIG34 @ 0x300021
 52348                           ;	Non-Boot Sector Expected Result for CRC on boot bits 15-8
 52349                           ;	CRCERESH = hFF, Bits 15:8 of CRCERES are 0xFF
 52350   300021                     	org	3145761
 52351   300021  FF                 	db	255
 52352                           
 52353                           ;Config register CONFIG35 @ 0x300022
 52354                           ;	Non-Boot Sector Expected Result for CRC on boot bits 7-0
 52355                           ;	CRCERESL = hFF, Bits 7:0 of CRCERES are 0xFF
 52356   300022                     	org	3145762
 52357   300022  FF                 	db	255
 52358                           tosu	equ	0x4FF
 52359                           tosh	equ	0x4FE
 52360                           tosl	equ	0x4FD
 52361                           stkptr	equ	0x4FC
 52362                           pclatu	equ	0x4FB
 52363                           pclath	equ	0x4FA
 52364                           pcl	equ	0x4F9
 52365                           tblptru	equ	0x4F8
 52366                           tblptrh	equ	0x4F7
 52367                           tblptrl	equ	0x4F6
 52368                           tablat	equ	0x4F5
 52369                           prodh	equ	0x4F4
 52370                           prodl	equ	0x4F3
 52371                           indf0	equ	0x4EF
 52372                           postinc0	equ	0x4EE
 52373                           postdec0	equ	0x4ED
 52374                           preinc0	equ	0x4EC
 52375                           plusw0	equ	0x4EB
 52376                           fsr0h	equ	0x4EA
 52377                           fsr0l	equ	0x4E9
 52378                           wreg	equ	0x4E8
 52379                           indf1	equ	0x4E7
 52380                           postinc1	equ	0x4E6
 52381                           postdec1	equ	0x4E5
 52382                           preinc1	equ	0x4E4
 52383                           plusw1	equ	0x4E3
 52384                           fsr1h	equ	0x4E2
 52385                           fsr1l	equ	0x4E1
 52386                           bsr	equ	0x4E0
 52387                           indf2	equ	0x4DF
 52388                           postinc2	equ	0x4DE
 52389                           postdec2	equ	0x4DD
 52390                           preinc2	equ	0x4DC
 52391                           plusw2	equ	0x4DB
 52392                           fsr2h	equ	0x4DA
 52393                           fsr2l	equ	0x4D9
 52394                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    457
    Data        2
    BSS         1229
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK5           160     50     158
    BANK6           256      0     213
    BANK7           256      0     196
    BANK8           256      0      72
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0
    BANK37          256      0       0
    BANK38          256      0       0
    BANK39          256      0       0
    BANK40          256      0       0
    BANK41          256      0       0
    BANK42          256      0       0
    BANK43          256      0       0
    BANK44          256      0       0
    BANK45          256      0       0
    BANK46          256      0       0
    BANK47          256      0       0
    BANK48          256      0       0
    BANK49          256      0       0
    BANK50          256      0       0
    BANK51          256      0       0
    BANK52          256      0       0
    BANK53          256      0       0
    BANK54          256      0       0

Pointer List with Targets:

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    APP_processConsumedEvent@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    bootService$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    bootService$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK8[72]), NULL(NULL[0]), 

    canReceiveMessage@rxFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK8[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK6[9]), 

    canSendMessage@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    canService$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    canService$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E23397 size(3) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E23401 size(3) Largest target is 1
		 -> canSendMessage(), 

    canTransport$waitForTxQueueToDrain	PTR FTN()void  size(3) Largest target is 1
		 -> canWaitForTxQueueToDrain(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    consumerEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    consumerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    eventCoeService$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventCoeService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventCoeService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventCoeService$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    eventCoeService$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventCoeService$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    eventConsumerService$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventConsumerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventConsumerService$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    eventConsumerService$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventConsumerService$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    eventProducerService$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventProducerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventProducerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventProducerService$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    eventProducerService$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventProducerService$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    eventTeachService$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    flashBuffer	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    getNextWriteMessage@q	PTR struct MessageQueue size(2) Largest target is 6
		 -> rxQueue(BANK5[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK8[72]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 72
		 -> rxBuffers(BANK8[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 72
		 -> rxBuffers(BANK8[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> producerDiagnostics(BANK5[4]), teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    mnsService$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    mnsService$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> producerDiagnostics(BANK5[4]), teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    nvService$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    nvService$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK8[72]), 

    pop@q	PTR struct MessageQueue size(2) Largest target is 6
		 -> rxQueue(BANK5[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK8[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK8[72]), 

    prepareSelfEnumResponse@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    producerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    push@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK8[72]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK8[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK8[72]), 

    S201$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    S201Service$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S201Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    S201Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    S201Service$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    S201Service$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    S201Service$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    S2213MessageQueue$messages	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK8[72]), 

    S330$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK6[9]), 

    S330$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    S330Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E23397 size(3) Largest target is 1
		 -> canReceiveMessage(), 

    S330Transport$sendMessage	PTR FTN(PTR struct Message,)enum E23401 size(3) Largest target is 1
		 -> canSendMessage(), 

    S330Transport$waitForTxQueueToDrain	PTR FTN()void  size(3) Largest target is 1
		 -> canWaitForTxQueueToDrain(), 

    sendRTR@txFifoObj	PTR unsigned char  size(2) Largest target is 16383
		 -> RAM(DATA[16383]), 

    services	const PTR const struct Service[8] size(2) Largest target is 20
		 -> bootService(CODE[20]), canService(CODE[20]), eventCoeService(CODE[20]), eventConsumerService(CODE[20]), 
		 -> eventProducerService(CODE[20]), eventTeachService(CODE[20]), mnsService(CODE[20]), nvService(CODE[20]), 

    services$factoryReset	PTR FTN()void  size(3) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(3) Largest target is 3
		 -> canGetDiagnostic(), consumerGetDiagnostic(), mnsGetDiagnostic(), nvGetDiagnostic(), 
		 -> producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumerEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    services$poll	PTR FTN()void  size(3) Largest target is 1
		 -> canPoll(), mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(3) Largest target is 1
		 -> bootPowerUp(), canPowerUp(), consumerPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E23290 size(3) Largest target is 1
		 -> bootProcessMessage(), canProcessMessage(), consumerProcessMessage(), mnsProcessMessage(), 
		 -> nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), NULL(), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> producerDiagnostics(BANK5[4]), teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__consumerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> producerDiagnostics(BANK5[4]), teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 20
		 -> bootService(CODE[20]), canService(CODE[20]), eventCoeService(CODE[20]), eventConsumerService(CODE[20]), 
		 -> eventProducerService(CODE[20]), eventTeachService(CODE[20]), mnsService(CODE[20]), nvService(CODE[20]), 
		 -> NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK8[72]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> producerDiagnostics(BANK5[4]), teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> producerDiagnostics(BANK5[4]), teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK8[72]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 72
		 -> rxBuffers(BANK8[72]), NULL(NULL[0]), 

    sp__producerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> producerDiagnostics(BANK5[4]), teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> producerDiagnostics(BANK5[4]), teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    sp_S201$7	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> canDiagnostics(BANK6[38]), consumerDiagnostics(BANK5[6]), mnsDiagnostics(BANK5[14]), nvDiagnostics(BANK5[6]), 
		 -> producerDiagnostics(BANK5[4]), teachDiagnostics(BANK5[4]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E23467 size(3) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK5[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E23467 size(3) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 9
		 -> canTransport(CODE[9]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E23397 size(3) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E23401 size(3) Largest target is 1
		 -> canSendMessage(), 

    transport$waitForTxQueueToDrain	PTR FTN()void  size(3) Largest target is 1
		 -> canWaitForTxQueueToDrain(), 


Critical Paths under _main in COMRAM

    _initLeds->_setLedStateNoSave
    _initInputs->_getNV
    _initEvents->_rebuildLookupTable
    _initEEPROMwriter->_readNVM
    _powerUp->_teachPowerUp
    _teachPowerUp->_rebuildHashtable
    _nvPowerUp->_loadNvCache
    _loadNvCache->_readNVM
    _mnsPowerUp->_readNVM
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _bootPowerUp->_readNVM
    _poll->_APP_preProcessMessage
    _pollTimedResponse->_reqevCallback
    _sodTRCallback->_canpanSendProducedEvent
    _mnsPoll->_sendMessage5
    _canReceiveMessage->_handleSelfEnumeration
    _handleSelfEnumeration->_tickGet
    _canPoll->_processEnumeration
    _processEnumeration->_setNewCanId
    _setNewCanId->_writeNVM
    _APP_preProcessMessage->_consumerProcessMessage
    _APP_preProcessMessage->_producerProcessMessage
    _teachProcessMessage->_doEvlrn
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage5
    _doReqev->_sendMessage6
    _doNnevn->_sendMessage3
    _doNnclr->_clearAllEvents
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _rebuildLookupTable->_getEv
    _APP_GetEventIndexState->_APP_isProducedEvent
    _APP_isProducedEvent->_getEv
    _setNV->_writeNVM
    _setLEDsByMode->_showStatus
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _sendMessage2->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _canGetDiagnostic->_getNumRxBuffersInUse
    _canGetDiagnostic->_getNumTxBuffersInUse
    _sendMessage7->_sendMessage
    _isConsumedEvent->_APP_isConsumedEvent
    _APP_isConsumedEvent->_getEv
    _getEv->_readNVM
    _consumerEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _APP_processConsumedEvent->_getEVs
    _setLedState->_setLedStateNoSave
    _setLedStateNoSave->_clearLed
    _doSoD->_startTimedResponse
    _startTimedResponse->_findServiceIndex
    _loop->_inputScan
    _pollOutputs->_getNV
    _pollEEPROMwriter->_EEPROM_WriteNoVerify
    _inputScan->_canpanSendProducedEvent
    _sendMessage5->_sendMessage
    _saveSwitchState->_getNV
    _getEVs->_readNVM
    _canpanSendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_getNextWriteMessage
    _startEnumeration->_tickGet
    _doFlash->_clearLed
    _setLed->___awdiv
    _clearLed->___awdiv
    _checkPowerOnPb->_APP_testMode
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->_tickGet
    ___lmul->_getNV
    ___lldiv->_tickGet
    _factoryReset->_APP_factoryReset
    _teachFactoryReset->_clearAllEvents
    _nvFactoryReset->_writeNVM
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _factoryResetGlobalEvents->_clearAllEvents
    _APP_testMode->_addTestEvent
    _clearAllEvents->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _addTestEvent->_addEvent
    _addEvent->_findEvent
    _writeEv->_writeNVM
    _writeNVM->_FLASH_Write
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_WriteNoVerify
    _rebuildHashtable->_getHash
    _findEvent->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _readNVM->_EEPROM_Read
    _readNVM->_FLASH_Read

Critical Paths under _receiveOverrun in COMRAM

    None.

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    _main->_poll
    _poll->_APP_preProcessMessage
    _APP_preProcessMessage->_mnsProcessMessage

Critical Paths under _receiveOverrun in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _receiveOverrun in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _receiveOverrun in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _receiveOverrun in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _receiveOverrun in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _receiveOverrun in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _receiveOverrun in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _receiveOverrun in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _receiveOverrun in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _receiveOverrun in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _receiveOverrun in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _receiveOverrun in BANK16

    None.

Critical Paths under _TMR0_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _receiveOverrun in BANK17

    None.

Critical Paths under _TMR0_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _receiveOverrun in BANK18

    None.

Critical Paths under _TMR0_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _receiveOverrun in BANK19

    None.

Critical Paths under _TMR0_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _receiveOverrun in BANK20

    None.

Critical Paths under _TMR0_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _receiveOverrun in BANK21

    None.

Critical Paths under _TMR0_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _receiveOverrun in BANK22

    None.

Critical Paths under _TMR0_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _receiveOverrun in BANK23

    None.

Critical Paths under _TMR0_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _receiveOverrun in BANK24

    None.

Critical Paths under _TMR0_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _receiveOverrun in BANK25

    None.

Critical Paths under _TMR0_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _receiveOverrun in BANK26

    None.

Critical Paths under _TMR0_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _receiveOverrun in BANK27

    None.

Critical Paths under _TMR0_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _receiveOverrun in BANK28

    None.

Critical Paths under _TMR0_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _receiveOverrun in BANK29

    None.

Critical Paths under _TMR0_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _receiveOverrun in BANK30

    None.

Critical Paths under _TMR0_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _receiveOverrun in BANK31

    None.

Critical Paths under _TMR0_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _receiveOverrun in BANK32

    None.

Critical Paths under _TMR0_ISR in BANK32

    None.

Critical Paths under _DEFAULT_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _receiveOverrun in BANK33

    None.

Critical Paths under _TMR0_ISR in BANK33

    None.

Critical Paths under _DEFAULT_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _receiveOverrun in BANK34

    None.

Critical Paths under _TMR0_ISR in BANK34

    None.

Critical Paths under _DEFAULT_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _receiveOverrun in BANK35

    None.

Critical Paths under _TMR0_ISR in BANK35

    None.

Critical Paths under _DEFAULT_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _receiveOverrun in BANK36

    None.

Critical Paths under _TMR0_ISR in BANK36

    None.

Critical Paths under _DEFAULT_ISR in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _receiveOverrun in BANK37

    None.

Critical Paths under _TMR0_ISR in BANK37

    None.

Critical Paths under _DEFAULT_ISR in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _receiveOverrun in BANK38

    None.

Critical Paths under _TMR0_ISR in BANK38

    None.

Critical Paths under _DEFAULT_ISR in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _receiveOverrun in BANK39

    None.

Critical Paths under _TMR0_ISR in BANK39

    None.

Critical Paths under _DEFAULT_ISR in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _receiveOverrun in BANK40

    None.

Critical Paths under _TMR0_ISR in BANK40

    None.

Critical Paths under _DEFAULT_ISR in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _receiveOverrun in BANK41

    None.

Critical Paths under _TMR0_ISR in BANK41

    None.

Critical Paths under _DEFAULT_ISR in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _receiveOverrun in BANK42

    None.

Critical Paths under _TMR0_ISR in BANK42

    None.

Critical Paths under _DEFAULT_ISR in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _receiveOverrun in BANK43

    None.

Critical Paths under _TMR0_ISR in BANK43

    None.

Critical Paths under _DEFAULT_ISR in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _receiveOverrun in BANK44

    None.

Critical Paths under _TMR0_ISR in BANK44

    None.

Critical Paths under _DEFAULT_ISR in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _receiveOverrun in BANK45

    None.

Critical Paths under _TMR0_ISR in BANK45

    None.

Critical Paths under _DEFAULT_ISR in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _receiveOverrun in BANK46

    None.

Critical Paths under _TMR0_ISR in BANK46

    None.

Critical Paths under _DEFAULT_ISR in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _receiveOverrun in BANK47

    None.

Critical Paths under _TMR0_ISR in BANK47

    None.

Critical Paths under _DEFAULT_ISR in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _receiveOverrun in BANK48

    None.

Critical Paths under _TMR0_ISR in BANK48

    None.

Critical Paths under _DEFAULT_ISR in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _receiveOverrun in BANK49

    None.

Critical Paths under _TMR0_ISR in BANK49

    None.

Critical Paths under _DEFAULT_ISR in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _receiveOverrun in BANK50

    None.

Critical Paths under _TMR0_ISR in BANK50

    None.

Critical Paths under _DEFAULT_ISR in BANK50

    None.

Critical Paths under _main in BANK51

    None.

Critical Paths under _receiveOverrun in BANK51

    None.

Critical Paths under _TMR0_ISR in BANK51

    None.

Critical Paths under _DEFAULT_ISR in BANK51

    None.

Critical Paths under _main in BANK52

    None.

Critical Paths under _receiveOverrun in BANK52

    None.

Critical Paths under _TMR0_ISR in BANK52

    None.

Critical Paths under _DEFAULT_ISR in BANK52

    None.

Critical Paths under _main in BANK53

    None.

Critical Paths under _receiveOverrun in BANK53

    None.

Critical Paths under _TMR0_ISR in BANK53

    None.

Critical Paths under _DEFAULT_ISR in BANK53

    None.

Critical Paths under _main in BANK54

    None.

Critical Paths under _receiveOverrun in BANK54

    None.

Critical Paths under _TMR0_ISR in BANK54

    None.

Critical Paths under _DEFAULT_ISR in BANK54

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  352987
                                             47 BANK5      3     3      0
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0    2672
                              _getNV
                   _initEEPROMwriter
                         _initEvents
                         _initInputs
                           _initLeds
                        _initOutputs
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initOutputs                                          1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _initLeds                                             2     2      0    1151
                                             16 COMRAM     2     2      0
                              _getNV
                        _readEEvalue
                  _setLedStateNoSave
 ---------------------------------------------------------------------------------
 (2) _initInputs                                           3     3      0     319
                                              4 COMRAM     3     3      0
                        _driveColumn
                              _getNV
                        _readEEvalue
 ---------------------------------------------------------------------------------
 (3) _readEEvalue                                          1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _initEvents                                           0     0      0     587
                 _rebuildLookupTable
 ---------------------------------------------------------------------------------
 (2) _initEEPROMwriter                                     0     0      0     248
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              4     4      0    4678
                                             36 COMRAM     3     3      0
                                NULL *
                        _bootPowerUp *
                         _canPowerUp *
                    _consumerPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                    _producerPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0    1397
                                             35 COMRAM     1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _producerPowerUp                                      1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0     451
                                             17 COMRAM     1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0     383
                                             12 COMRAM     5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0     736
                                             12 COMRAM     3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     211
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           4     4      0      99
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _consumerPowerUp                                      1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                          21    21      0    1038
                                             12 COMRAM     2     2      0
              _CAN1_OperationModeSet
            _prepareSelfEnumResponse
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _CAN1_OperationModeSet                                2     2      0     141
                                              0 COMRAM     2     2      0
              _CAN1_OperationModeGet
 ---------------------------------------------------------------------------------
 (4) _CAN1_OperationModeGet                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bootPowerUp                                          6     6      0     498
                                             12 COMRAM     6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0  298010
                                             32 BANK5     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
                 _bootProcessMessage *
                            _canPoll *
                  _canProcessMessage *
                  _canReceiveMessage *
             _consumerProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
             _producerProcessMessage *
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0   26128
                                             63 COMRAM     3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
                      _sodTRCallback *
 ---------------------------------------------------------------------------------
 (3) _sodTRCallback                                        5     3      2    4545
                                             48 COMRAM     4     2      2
             _APP_GetEventIndexState
            _canpanSendProducedEvent
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2    6739
                                             48 COMRAM    15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage5
                       _sendMessage6
                 _tableIndexToEvtIdx
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2    2623
                                             48 COMRAM     4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2    3507
                                             48 COMRAM     6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2    2728
                                             48 COMRAM     6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2    2808
                                             48 COMRAM     2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          7     5      2    3155
                                             48 COMRAM     6     4      2
                                NULL *
                   _canGetDiagnostic *
              _consumerGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
              _producerGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0    5905
                                             42 COMRAM     4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                   10     8      2    1290
                                             15 COMRAM    10     8      2
               _getNumRxBuffersInUse
              _handleSelfEnumeration
                             _memcpy
                                _pop
 ---------------------------------------------------------------------------------
 (3) _pop                                                 10     7      3     200
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     146
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                5     5      0     298
                                             10 COMRAM     5     5      0
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _canPoll                                              1     1      0    1749
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0    1749
                                             21 COMRAM     7     7      0
                        _setNewCanId
                   _startEnumeration
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0     913
                                             20 COMRAM     1     1      0
            _prepareSelfEnumResponse
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _prepareSelfEnumResponse                              2     2      0     133
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                               10     8      2  132224
                                             91 COMRAM     2     0      2
                                             24 BANK5      8     8      0
                                NULL *
                _APP_isProducedEvent
                 _bootProcessMessage *
                  _canProcessMessage *
             _consumerProcessMessage *
                          _findEvent
                              _getEv
                  _mnsProcessMessage *
                   _nvProcessMessage *
             _producerProcessMessage *
                 _rebuildLookupTable
                _teachProcessMessage *
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2   76157
                                             82 COMRAM     8     6      2
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4    5611
                                             47 COMRAM     5     1      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              4     4      0    2888
                                             40 COMRAM     4     4      0
                              _getEN
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doReval                                              6     5      1    6055
                                             42 COMRAM     6     5      1
                 _evtIdxToTableIndex
                   _findServiceIndex
                              _getEv
                       _sendMessage3
                       _sendMessage5
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5    9928
                                             43 COMRAM     8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (4) _numEv                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              4     4      0    2888
                                             40 COMRAM     4     4      0
                              _getEN
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0    8679
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0     298
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0    6090
                                             42 COMRAM     6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4   11161
                                             50 COMRAM     5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4    3626
                                             45 COMRAM     5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              6     0      6   16222
                                             76 COMRAM     6     0      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                        15     8      7    8681
                                             62 COMRAM    14     7      7
                           _addEvent
                          _findEvent
                             _getEVs
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _rebuildLookupTable                                   4     4      0     587
                                             24 COMRAM     4     4      0
                              _getEv
 ---------------------------------------------------------------------------------
 (2) _producerProcessMessage                               9     7      2    7609
                                             82 COMRAM     9     7      2
             _APP_GetEventIndexState
                          _findEvent
                       _sendMessage3
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _APP_GetEventIndexState                               2     2      0     957
                                             27 COMRAM     2     2      0
                _APP_isProducedEvent
                             _getEVs
 ---------------------------------------------------------------------------------
 (4) _APP_isProducedEvent                                  3     3      0     436
                                             24 COMRAM     3     3      0
                              _getEv
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2   11877
                                             82 COMRAM     6     4      2
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1    1005
                                             20 COMRAM     5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   3     1      2       2
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       2     1      1      52
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   32    30      2   19404
                                             82 COMRAM     7     5      2
                                              0 BANK5     24    24      0
                                NULL *
                        _bootEsdData *
                         _canEsdData *
                   _canGetDiagnostic *
           _canWaitForTxQueueToDrain *
                    _consumerEsdData *
              _consumerGetDiagnostic *
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
                    _producerEsdData *
              _producerGetDiagnostic *
                   _rebuildHashtable
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   4     1      3      58
                                              6 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      29
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6    2463
                                             36 COMRAM     7     1      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3    2421
                                             36 COMRAM     4     1      3
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2    2361
                                             36 COMRAM     3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _producerGetDiagnostic                                4     1      3      58
                                              6 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _producerEsdData                                      1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      4     1      3      58
                                              6 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     4     1      3      58
                                              6 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         2     2      0     319
                                              5 COMRAM     1     1      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     171
                                              4 COMRAM     1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _consumerGetDiagnostic                                4     1      3      58
                                              6 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _consumerEsdData                                      1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _canWaitForTxQueueToDrain                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     7     4      3     203
                                              6 COMRAM     5     2      3
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootEsdData                                          1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _consumerProcessMessage                               9     7      2   10677
                                             82 COMRAM     9     7      2
           _APP_processConsumedEvent
              _consumerEventCheckLen
                          _findEvent
                    _isConsumedEvent
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7    2491
                                             36 COMRAM     8     1      7
                                NULL (ARG) *
                        _bootEsdData (ARG) *
                         _canEsdData (ARG) *
                    _consumerEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                    _producerEsdData (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _isConsumedEvent                                      1     1      0     673
                                             27 COMRAM     1     1      0
                _APP_isConsumedEvent
 ---------------------------------------------------------------------------------
 (4) _APP_isConsumedEvent                                  3     3      0     644
                                             24 COMRAM     3     3      0
                              _getEv
 ---------------------------------------------------------------------------------
 (4) _getEv                                               12    10      2     362
                                             12 COMRAM    12    10      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _consumerEventCheckLen                                3     0      3    2846
                                             47 COMRAM     3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4    2800
                                             42 COMRAM     5     1      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _APP_processConsumedEvent                            11     9      2    2858
                                             23 COMRAM    11     9      2
                            ___awdiv
                              _doSoD
                             _getEVs
                        _setLedState
 ---------------------------------------------------------------------------------
 (4) _setLedState                                          2     1      1    1146
                                             16 COMRAM     2     1      1
                  _setLedStateNoSave
                       _writeEEvalue
 ---------------------------------------------------------------------------------
 (3) _setLedStateNoSave                                    4     3      1     900
                                             12 COMRAM     4     3      1
                           _clearLed
                             _setLed
 ---------------------------------------------------------------------------------
 (4) _doSoD                                                0     0      0     298
                   _findServiceIndex
                 _startTimedResponse
            _timedResponseInProgress
 ---------------------------------------------------------------------------------
 (5) _timedResponseInProgress                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   5     1      4     157
                                              4 COMRAM     5     1      4
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     141
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2    2750
                                             82 COMRAM     4     2      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2     730
                                             82 COMRAM     4     2      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2       1
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 9     9      0   13332
                                             60 COMRAM     9     9      0
                            ___lldiv
                             ___lmul
            _canpanSendProducedEvent
                            _doFlash
                              _getNV
                          _inputScan
                   _pollEEPROMwriter
                        _pollOutputs
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pollOutputs                                          5     5      0     200
                                              4 COMRAM     5     5      0
                              _getNV
 ---------------------------------------------------------------------------------
 (2) _pollEEPROMwriter                                     2     2      0     139
                                              8 COMRAM     2     2      0
               _EEPROM_WriteNoVerify
 ---------------------------------------------------------------------------------
 (2) _inputScan                                           17    17      0    8012
                                             48 COMRAM    12    12      0
            _canpanSendProducedEvent
                        _driveColumn
                 _findEventForSwitch
                             _getEVs
                              _getNV
                    _saveSwitchState
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5    2640
                                             36 COMRAM     6     1      5
                  _getParameterFlags (ARG)
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
 ---------------------------------------------------------------------------------
 (3) _saveSwitchState                                      2     1      1     274
                                              4 COMRAM     2     1      1
                              _getNV
                       _writeEEvalue
 ---------------------------------------------------------------------------------
 (5) _writeEEvalue                                         3     2      1     133
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (3) _getNV                                                4     2      2      87
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _getEVs                                              11    11      0     396
                                             12 COMRAM    11    11      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _findEventForSwitch                                   1     1      0      58
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _driveColumn                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _canpanSendProducedEvent                              7     6      1    3454
                                             41 COMRAM     7     6      1
                              _getEN
                              _getNN
           _incrementProducerCounter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _sendMessage4                                         5     1      4    2423
                                             36 COMRAM     5     1      4
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                          9     1      8    2266
                                             27 COMRAM     9     1      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                      15    13      2    1997
                                             13 COMRAM    14    12      2
                _getNextWriteMessage
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
                               _have
                            _isEvent
                   _startEnumeration
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _startEnumeration                                     2     2      0     375
                                             10 COMRAM     2     2      0
                            _sendRTR
                            _tickGet
 ---------------------------------------------------------------------------------
 (8) _sendRTR                                              2     2      0      67
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      82
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     119
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNumTxBuffersInUse                                 6     6      0      69
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _getNumRxBuffersInUse                                 6     6      0      47
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 13    10      3     222
                                              0 COMRAM    13    10      3
 ---------------------------------------------------------------------------------
 (5) _incrementProducerCounter                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _doFlash                                              3     3      0     916
                                             12 COMRAM     3     3      0
                           _clearLed
                             _setLed
 ---------------------------------------------------------------------------------
 (4) _setLed                                               3     3      0     380
                                              8 COMRAM     3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _clearLed                                             4     4      0     380
                                              8 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0   22743
                                             66 COMRAM     1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      29
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    1041
                                             23 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    1041
                                             23 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0     533
                                             10 COMRAM     4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     322
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     100
                                              4 COMRAM    12     4      8
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     168
                                             10 COMRAM    13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (1) _factoryReset                                         3     3      0   11166
                                             47 COMRAM     3     3      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _teachFactoryReset                                    0     0      0    3678
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (2) _nvFactoryReset                                       3     3      0     928
                                             20 COMRAM     3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _APP_nvDefault                                        1     1      0     174
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _mnsFactoryReset                                      0     0      0     664
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _canFactoryReset                                      0     0      0     664
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _APP_factoryReset                                     1     1      0    4456
                                             46 COMRAM     1     1      0
           _factoryResetGlobalEvents
                    _flushFlashBlock
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _factoryResetGlobalEvents                             0     0      0    3678
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (2) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         1     1      0    9331
                                             65 COMRAM     1     1      0
                       _addTestEvent
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       1     1      0    3678
                                             45 COMRAM     1     1      0
                   _rebuildHashtable
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                    10    10      0    2281
                                             35 COMRAM    10    10      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _addTestEvent                                         3     3      0    5585
                                             62 COMRAM     3     3      0
                           _addEvent
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            20    13      7    5080
                                             42 COMRAM    20    13      7
                          _findEvent
                    _flushFlashBlock
                              _getEN
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _writeEv                                             12    10      2     792
                                             20 COMRAM    12    10      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _writeNVM                                             7     3      4     664
                                             13 COMRAM     7     3      4
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (7) _FLASH_Write                                          9     5      4     247
                                              5 COMRAM     8     4      4
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (8) _loadFlashBlock                                       3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) _flushFlashBlock                                      1     1      0      46
                                              4 COMRAM     1     1      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (9) _eraseFlashBlock                                      4     4      0      23
                                              0 COMRAM     4     4      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (10) _APP_isSuitableTimeToWriteFlash                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EEPROM_Write                                         5     1      4     230
                                              8 COMRAM     4     0      4
                        _EEPROM_Read
               _EEPROM_WriteNoVerify
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EEPROM_WriteNoVerify                                 8     4      4      93
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    10    10      0    1329
                                             29 COMRAM     6     6      0
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4    1254
                                             29 COMRAM    13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               11     9      2     433
                                             12 COMRAM    11     9      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     139
                                             23 COMRAM     6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               10     8      2     352
                                             12 COMRAM    10     8      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (5) _readNVM                                              6     3      3     248
                                              6 COMRAM     6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (6) _FLASH_Read                                           6     3      3     111
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _EEPROM_Read                                          6     3      3      46
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _receiveOverrun                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _DEFAULT_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
       _addTestEvent
         _addEvent
           _findEvent
             _getEN
               _readNVM
                 _EEPROM_Read
                 _FLASH_Read
             _getHash
               _getEN (ARG)
               _getNN (ARG)
                 _readNVM
             _getNN
           _flushFlashBlock
             _APP_isSuitableTimeToWriteFlash
             _eraseFlashBlock
               _APP_isSuitableTimeToWriteFlash
           _getEN
           _rebuildHashtable
             _getEN
             _getHash
             _getNN
           _writeEv
             _writeNVM
               _APP_nvDefault (ARG)
               _EEPROM_Write (ARG)
                 _EEPROM_Read
                 _EEPROM_WriteNoVerify
                 _updateModuleErrorStatus
               _FLASH_Write (ARG)
                 _eraseFlashBlock
                 _flushFlashBlock
                 _loadFlashBlock
           _writeNVM
       _clearAllEvents
         _rebuildHashtable
         _removeTableEntry
           _flushFlashBlock
           _rebuildHashtable
           _writeNVM
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
           _clearAllEvents
         _flushFlashBlock
         _writeNVM
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
         _getNV (ARG)
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     ___lldiv
     ___lmul
     _canpanSendProducedEvent
       _getEN
       _getNN
       _incrementProducerCounter
       _sendMessage4
         _getParameter (ARG)
           _getParameterFlags
             _have
           _have
         _sendMessage (ARG)
           _canSendMessage *
             _getNextWriteMessage
             _getNumRxBuffersInUse
             _getNumTxBuffersInUse
             _have
             _isEvent
             _startEnumeration
               _sendRTR
               _tickGet
             _updateModuleErrorStatus
     _doFlash
       _clearLed
         ___awdiv
       _setLed
         ___awdiv
     _getNV
     _inputScan
       _canpanSendProducedEvent
       _driveColumn
       _findEventForSwitch
       _getEVs
         _readNVM
       _getNV
       _saveSwitchState
         _getNV
         _writeEEvalue
       _sendMessage5
         _getParameterFlags (ARG)
         _sendMessage (ARG)
         _tableIndexToEvtIdx (ARG)
     _pollEEPROMwriter
       _EEPROM_WriteNoVerify
     _pollOutputs
       _getNV
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
       NULL(Fake) *
       _APP_isProducedEvent *
         _getEv
           _readNVM
       _bootProcessMessage *
         _writeNVM
       _canProcessMessage *
         _sendMessage5
       _consumerProcessMessage *
         _APP_processConsumedEvent
           ___awdiv
           _doSoD
             _findServiceIndex
             _startTimedResponse
               _findServiceIndex (ARG)
             _timedResponseInProgress
           _getEVs
           _setLedState
             _setLedStateNoSave
               _clearLed
               _setLed
             _writeEEvalue
         _consumerEventCheckLen
           _checkLen
             _sendMessage5
         _findEvent
         _isConsumedEvent
           _APP_isConsumedEvent
             _getEv
         _sendMessage7
           NULL(Fake) (ARG) *
           _bootEsdData (ARG) *
           _canEsdData (ARG) *
           _consumerEsdData (ARG) *
           _nvGetESDdata (ARG) *
           _producerEsdData (ARG) *
           _sendMessage (ARG) *
           _tableIndexToEvtIdx (ARG) *
           _teachGetESDdata (ARG) *
       _findEvent *
       _getEv *
       _mnsProcessMessage *
         NULL(Fake) *
         _bootEsdData *
         _canEsdData *
         _canGetDiagnostic *
           _getNumRxBuffersInUse
           _getNumTxBuffersInUse
         _canWaitForTxQueueToDrain *
         _consumerEsdData *
         _consumerGetDiagnostic *
         _findServiceIndex *
         _getParameter *
         _getParameterFlags *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _nvGetESDdata *
         _producerEsdData *
         _producerGetDiagnostic *
         _rebuildHashtable *
         _sendMessage2 *
           _sendMessage
         _sendMessage3 *
           _sendMessage
         _sendMessage4 *
         _sendMessage5 *
         _sendMessage6 *
           _numEv (ARG)
           _sendMessage (ARG)
         _sendMessage7 *
         _setLEDsByMode *
           _showStatus
         _startTimedResponse *
         _teachGetDiagnostic *
         _teachGetESDdata *
         _writeNVM *
       _nvProcessMessage *
         _findServiceIndex
         _getNV
         _sendMessage2
         _sendMessage3
         _sendMessage4
         _sendMessage5
         _setNV
           _APP_nvValidate
           _APP_nvValueChanged
           _writeNVM
         _startTimedResponse
       _producerProcessMessage *
         _APP_GetEventIndexState
           _APP_isProducedEvent
           _getEVs
         _findEvent
         _sendMessage3
         _sendMessage4
       _rebuildLookupTable *
         _getEv
       _teachProcessMessage *
         _doEvlrn
           _APP_addEvent
             _addEvent
             _findEvent
             _getEVs
             _writeEv
             _writeNVM
           _sendMessage2
           _sendMessage3
           _sendMessage5
         _doEvuln
           _removeEvent
             _findEvent
             _removeTableEntry
           _sendMessage2
           _sendMessage3
           _sendMessage5
         _doNenrd
           _evtIdxToTableIndex
           _getEN
           _getNN
           _sendMessage3
           _sendMessage5
         _doNerd
           _findServiceIndex
           _startTimedResponse
         _doNnclr
           _clearAllEvents
           _sendMessage2
           _sendMessage5
         _doNnevn
           _getEN
           _sendMessage3
         _doReqev
           _findEvent
           _findServiceIndex
           _getEv
           _numEv
           _sendMessage3
           _sendMessage5
           _sendMessage6
           _startTimedResponse
         _doReval
           _evtIdxToTableIndex
           _findServiceIndex
           _getEv
           _sendMessage3
           _sendMessage5
           _startTimedResponse
         _doRqevn
           _getEN
           _sendMessage3
         _sendMessage3
         _sendMessage5
         _teachCheckLen
           _checkLen
           _sendMessage5
     ___lmul *
     _bootProcessMessage *
     _canPoll *
       _processEnumeration
         _setNewCanId
           _prepareSelfEnumResponse
           _writeNVM
         _startEnumeration
         _tickGet
         _updateModuleErrorStatus
     _canProcessMessage *
     _canReceiveMessage *
       _getNumRxBuffersInUse
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
     _consumerProcessMessage *
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
       _sendMessage5
       _setLEDsByMode
       _tickGet
       _writeNVM
     _mnsProcessMessage *
     _nvProcessMessage *
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _canGetDiagnostic *
         _consumerGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _producerGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
         _getNN
         _numEv
         _sendMessage5
         _sendMessage6
         _tableIndexToEvtIdx
       _sodTRCallback *
         _APP_GetEventIndexState
         _canpanSendProducedEvent
     _producerProcessMessage *
     _showStatus *
     _teachProcessMessage *
     _tickGet *
   _powerUp
     NULL(Fake) *
     _bootPowerUp *
       _readNVM
     _canPowerUp *
       _CAN1_OperationModeSet
         _CAN1_OperationModeGet
       _prepareSelfEnumResponse
       _readNVM
       _tickGet
     _consumerPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
         _readNVM
     _producerPowerUp *
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _getNV
     _initEEPROMwriter
       _readNVM
     _initEvents
       _rebuildLookupTable
     _initInputs
       _driveColumn
       _getNV
       _readEEvalue
     _initLeds
       _getNV
       _readEEvalue
       _setLedStateNoSave
     _initOutputs
     _tickGet

 _receiveOverrun (ROOT)

 _TMR0_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM           12799      0     640      5.0%
BITBIGSFR_1       2304      0       0      0.0%
BITBIGSFRhllll     478      0       0      0.0%
BITBANK54          256      0       0      0.0%
BANK54             256      0       0      0.0%
BITBANK53          256      0       0      0.0%
BANK53             256      0       0      0.0%
BITBANK52          256      0       0      0.0%
BANK52             256      0       0      0.0%
BITBANK51          256      0       0      0.0%
BANK51             256      0       0      0.0%
BITBANK50          256      0       0      0.0%
BANK50             256      0       0      0.0%
BITBANK49          256      0       0      0.0%
BANK49             256      0       0      0.0%
BITBANK48          256      0       0      0.0%
BANK48             256      0       0      0.0%
BITBANK47          256      0       0      0.0%
BANK47             256      0       0      0.0%
BITBANK46          256      0       0      0.0%
BANK46             256      0       0      0.0%
BITBANK45          256      0       0      0.0%
BANK45             256      0       0      0.0%
BITBANK44          256      0       0      0.0%
BANK44             256      0       0      0.0%
BITBANK43          256      0       0      0.0%
BANK43             256      0       0      0.0%
BITBANK42          256      0       0      0.0%
BANK42             256      0       0      0.0%
BITBANK41          256      0       0      0.0%
BANK41             256      0       0      0.0%
BITBANK40          256      0       0      0.0%
BANK40             256      0       0      0.0%
BITBANK39          256      0       0      0.0%
BANK39             256      0       0      0.0%
BITBANK38          256      0       0      0.0%
BANK38             256      0       0      0.0%
BITBANK37          256      0       0      0.0%
BANK37             256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0      72     28.1%
BITBANK7           256      0       0      0.0%
BANK7              256      0     196     76.6%
BITBANK6           256      0       0      0.0%
BANK6              256      0     213     83.2%
BITBIGSFRhllh      243      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160     50     158     98.8%
BITBIGSFRhlh       156      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     93      95    100.0%
BITBIGSFRllhh       83      0       0      0.0%
BITBIGSFRhlllh      73      0       0      0.0%
BITBIGSFRlllll      64      0       0      0.0%
BITBIGSFRlllh       60      0       0      0.0%
BITBIGSFRlh         55      0       0      0.0%
BITBIGSFRllhl       43      0       0      0.0%
BITBIGSFRhh          8      0       0      0.0%
BITBIGSFRllllh       2      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0    1374      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri May 16 17:22:28 2025

                   nerdCallback@nodeNumber 0533                        findEvent@tableIndex 052A  
                __end_of_pollTimedResponse 4E6E                     ?_handleSelfEnumeration 0501  
                         sendMessage@data1 051D                           sendMessage@data2 051E  
                         sendMessage@data3 051F                           sendMessage@data4 0520  
                         sendMessage@data5 0521                           sendMessage@data6 0522  
                         sendMessage@data7 0523                        findEvent@nodeNumber 051E  
                       readEEvalue@address 0501              __end_of_producerGetDiagnostic 64D2  
                        inputScan@buttonNo 053C                              ?_APP_addEvent 053F  
                     _getNumRxBuffersInUse 5792              APP_isProducedEvent@tableIndex 0519  
                    _timedResponseCallback 0574                        _timedResponseOpcode 0592  
                             ___awdiv@sign 0506                                         _nn 055E  
                         ?_flushFlashBlock 0501                    __end_of_eraseFlashBlock 5792  
                                      l170 47C2                                        l218 3B56  
                                      l330 4D26                                        l342 1F5C  
                                      l362 1FEC                                        l354 1FCA  
                                      l610 648E                                        l355 1FDA  
                                      l195 2862                                        l187 27B6  
                                      l356 1FD2                                        l612 6494  
                                      l365 2010                                        l533 5C7A  
                                      l359 1FE4                                        l490 4016  
                                      l492 401A                                        l493 401E  
                                      l485 4044                                        l494 4022  
                                      l486 4010                                        l904 4B00  
                                      l826 3284                                        l499 409E  
                                      l924 1282                                        l908 4B2A  
                                      l596 4216                                        l909 4B34  
                                      l929 1294                                        l947 2F30  
                          checkPowerOnPb@i 0543                         _enumerationResults 0661  
         ??_APP_isSuitableTimeToWriteFlash 0501            ?_APP_isSuitableTimeToWriteFlash 0501  
                                      _evs 0671                                        _pop 466A  
                            _APP_nvDefault 6210                          pollOutputs@offset 0508  
                                      prod 04F3                                        tosl 04FD  
                                      wreg 04E8               tableIndexToEvtIdx@tableIndex 0501  
                  APP_nvValueChanged@index 0501                               ?_driveColumn 0501  
                  APP_nvValueChanged@value 0501        __end_of_mnsTRallDiagnosticsCallback 3A80  
              _mnsTRallDiagnosticsCallback 397C                                       l1010 5CDE  
                                     l1013 5CF8                                       l2013 2166  
                                     l2030 2212                                       l2022 21E8  
                                     l2015 216A                                       l2024 21F6  
                                     l2033 2268                                       l2050 2318  
                                     l2042 22EA                                       l2026 2206  
                                     l2035 226E                                       l1227 0C58  
                                     l2044 22F6                                       l2028 220C  
                                     l1404 53BC                                       l2132 5EE4  
                                     l1068 2434                                       l2046 2304  
                                     l2062 3D5E                                       l2048 230E  
                                     l2056 3D42                                       l2065 3D68  
                                     l2146 4E40                                       l1427 4236  
                                     l2075 3DAE                                       l2059 3D54  
                                     l2318 6580                                       l1630 0A5E  
                                     l2360 4A84                                       l1553 377C  
                                     l2353 4A78                                       l2274 4586  
                                     l2267 4630                                       l2356 4A80  
                                     l1557 37C6                                       l1902 6028  
                                     l1558 37CA                                       l2358 4A82  
                                     l1639 0B14                                       l1559 37F2  
                                     l2447 5E4A                                       l1680 1754  
                                     l1921 531E                                       l1914 5A4C  
                                     l1682 1774                                       l1674 165C  
                                     l2299 1BA4                                       l1932 5780  
                                     l1676 168C                                       l2493 4CE4  
                                     l1669 1604                                       l1599 0388  
                                     l1929 5748                                       l1945 580E  
                           _bootloaderType 0598                                       l1948 5832  
                                     l1957 5EC0                                       l1965 3E5C  
                                     l8311 5676                                       l9015 5FBC  
                                     l8163 57F2                                       l8323 579C  
                                     l8307 5624                                       l9203 5FD2  
                                     l9043 3B44                                       l8405 5BD6  
                                     l8181 58FA                                       l8501 116C  
                                     l9221 551C                                       l9301 321E  
                                     l9045 3B58                                       l9117 6436  
                                     l8415 5C0C                                       l8431 3E60  
                                     l8327 57E8                                       l9231 5538  
                                     l9071 66B4                                       l9225 552A  
                                     l9209 5FE2                                       l9305 322A  
                                     l9321 5D52                                       l9081 52D2  
                                     l8283 56F4                                       l8443 3EFA  
                                     l8435 3E78                                       l8611 4C14  
                                     l8355 51F4                                       l8347 5196  
                                     l9307 3244                                       l9243 30D4  
                                     l9403 4B0A                                       l9411 4B5E  
                                     l8293 5718                                       l8453 5BA0  
                                     l8605 4C04                                       l9181 3DA2  
                                     l9173 3D88                                       l8533 129E  
                                     l9229 5534                                       l9093 50AE  
                                     l9405 4B1A                                       l9333 5D6A  
                                     l9077 5278                                       l8287 570E  
                                     l8279 56DC                                       l8471 43BE  
                                     l9351 622E                                       l8199 592C  
                                     l9159 3D4A                                       l8375 3C32  
                                     l8519 1260                                       l9271 3194  
                                     l9263 3170                                       l8721 426A  
                                     l8449 5B8A                                       l9345 6222  
                                     l8617 4C2A                                       l8633 4C5C  
                                     l9177 3D94                                       l9169 3D7A  
                                     l8369 3BE6                                       l8385 59A6  
                                     l9257 30E8                                       l9249 30E2  
                                     l9097 50B2                                       l9409 4B3E  
                                     l9505 437E                                       l9521 5018  
                                     l8731 429C                                       l8707 4238  
                                     l8459 5BB6                                       l8803 2B20  
                                     l8619 4C32                                       l8395 59CC  
                                     l8539 12B4                                       l9291 31EE  
                                     l9283 31CA                                       l9275 31A6  
                                     l9451 652C                                       l9611 4EAC  
                                     l9531 352C                         doEvuln@eventNumber 0535  
                                     l8477 43F6                                       l8821 2B4C  
                                     l8813 2B30                                       l9357 6238  
                                     l8637 4C6A                                       l8629 4C52  
                                     l9189 3DBE                                       l9293 31FA  
                                     l9285 31D6                                       l9277 31B2  
                                     l9269 3188                                       l9381 649E  
                                     ?_pop 0501                                       l8735 42E0  
                                     l8807 2B24                                       l8583 14D8  
                                     l8911 5EFC                                       l9711 3884  
                                     l9703 387C                                       l9375 649A  
                                     l9551 35B8                                       l9623 40DA  
                                     l8657 499E                                       l8649 4974  
                                     l8681 5686                                       l8921 58C2  
                                     l8841 5368                                       l9385 66D2  
                                     l9457 6762                                       l9553 35CA  
                                     l9537 3560                                       l9481 5600  
                                     l8667 49DA                                       l8579 14C8  
                                     l8915 58B2                                       l9299 3212  
                                     l8835 5358                                       l9731 389A  
                                     l9723 3890                                       l9715 3888  
                                     l9707 3880                                       l9651 658C  
                                     l9395 66DA                                       l9467 6766  
                                     l9643 415A                                       l9635 4112  
                                     l8909 5EF8                                       l8917 58BA  
                                     l9805 64E4                                       l9661 6594  
                                     l9389 66D6                                       l9821 4F04  
                                     l9637 4124                                       l9477 55FC  
                                     l9485 5604                                       l8687 5690  
                                     l8791 2ACC                                       l8775 29AA  
                                     l8935 36F6                                       l8855 53BE  
                                     l9727 3896                                       l9719 388C  
                                     l9655 6590                                       l9647 6588  
                                     l9815 4EF0                                       l9559 3600  
                                     l8881 5128                                       l9761 38C4  
                                     l9745 38AE                                       l9737 38AA  
                                     l9681 61B8                                       l9833 66BC  
                                     l9497 4328                                       l9577 60DE  
                                     l9593 60A8                                       l8779 29B2  
                                     l8955 6712                                       l9691 3870  
                                     l9683 61C0                                       l9851 64C0  
                                     l9843 66C4                                       l8797 2ACE  
                                     l8789 2AA2                                       l9933 6652  
                                     l9765 38D6                                       l9757 38B2  
                                     l9669 6550                                       l9837 66C0  
                                     l9917 55B0                                       l9909 5570  
                                     l8975 47CA                                       l9695 3874  
                                     l9679 61B0                                       l9687 61C8  
                                     l9871 662A                                       l8889 5186  
                                     l9769 38E8                                       l9865 6626  
                                     l9857 6622                                       l9883 646E  
                                     l9699 3878                                       l9787 38FA  
                                     l9795 6508                                       l9971 50E4  
                                     l9955 6068                                       l9947 603E  
                                     l9965 50CE                                       l9983 5100  
                                     l9899 5556                     __end_of_checkPowerOnPb 5A44  
                                     _IPR5 0367                                       u6020 3E46  
                        doEvuln@nodeNumber 0533                                       u6050 3EA2  
                                     u6230 4C36                                       u7104 311E  
                                     u7105 311A                                       u7050 30C0  
                                     u8010 3426                                       u6260 499A  
                                     u6068 3EA4                                       u6324 5F22  
                                     u7124 3164                                       u7060 30C2  
                                     u6325 5F1E                                       u7125 3160  
                                     u6334 5DDE                                       u7070 30D0  
                                     u7230 5D4E                                       u6335 5DDA  
                                     u8114 49FC                      __end_of_sodTRCallback 606C  
                                     u8115 49F8                                       u6380 42E8  
                                     u5900 57C2                                       u6428 4DD8  
                                     u6620 5EF4                                       u6700 4836  
                                     u7260 5D80                                       u8140 2396  
                                     u6550 675A                                       u6480 2B2C  
                                     u6720 5FA8                                       u5905 57B8  
                                     u7290 621E                                       u9210 214A  
                                     u6730 5FB8                                       u8250 0B7E  
                                     u9018 3A1E                                       u9019 3A3A  
                                     u9300 2298                                       u9220 2198  
                                     u6660 47C6                                       u5870 564A  
                                     u7710 5590                                       u8270 0BAA  
                                     u9150 1D46                                       u9070 1BC6  
                                     u7720 55A0                                       u9330 22F0  
                                     u9170 1DE6                                       u5875 5640  
                                     u9340 22FC                                       u7740 5B42  
                                     u7590 38A6                                       u9190 5F50  
                                     u7910 5CD0                                       u7664 2DAA  
                                     u7760 5B5A                                       u9600 1F2C  
                                     u7665 2DA6                                       u7674 2DE0  
                                     u9610 1F2E                                       u7850 605E  
                                     u7675 2DDC                                       u7684 2E16  
                                     u7780 5B74                                       u7940 4720  
                                     u7860 6060                                       u7685 2E12  
                                     u7694 2E4C                                       u9470 4CA6  
                                     u7758 5B44                                       u7870 50CA  
                                     u7695 2E48                                       u9800 204E  
                                     u8808 03DC                                       u8809 03F6  
                                     u7778 5B5C                                       u9810 2050  
                                     u9900 4BEC                                       u9740 1FFA  
                                     u7980 33D0                                       u9910 4BEE  
                                     u7798 5B76                                       u9750 1FFC  
                                     u9574 1EFC                                       u7990 3408  
                                     u9575 1EF8                                       u8928 0882  
                                     u8929 089E                          writeEEvalue@value 0501  
                                     u9594 1F1A                                       u8938 08FC  
                                     u9595 1F16                                       u8939 0918  
                                     u8948 0976                                       u8868 059A  
                                     u8949 0992                                       u8869 05C2  
                      inputScan@tableIndex 0537                                       u9970 40A4  
                                     u9954 4086                                       u9955 4082  
                                     _WPUA 0401                                       _WPUB 0409  
                                     _WPUC 0411                                _outputState 0641  
                  getNumTxBuffersInUse@i16 0505                                       _have 5192  
                                     _main 4A6A                                       _name 0848  
                                     _loop 2B58                                       _poll 1878  
               __end_of_mnsTRrqnpnCallback 6416                                       fsr1h 04E2  
                                     fsr2h 04DA                                       indf1 04E7  
                                     indf2 04DF                                       fsr1l 04E1  
                                     fsr2l 04D9                           ?_producerEsdData 0501  
                             _addTestEvent 2D28                          ?_removeTableEntry 0501  
                             ?_readEEvalue 0501                    ?_APP_GetEventIndexState 0501  
                                     pop@q 0501                                       prodh 04F4  
                                     prodl 04F3                                       start 0A02  
                             ?_loadNvCache 0501                               bootPowerUp@a 0510  
                             bootPowerUp@b 050D                               bootPowerUp@i 050F  
                       ??_removeTableEntry 0524                          ?_initEEPROMwriter 0501  
                            ?_APP_testMode 0501                             _SPI1STATUSbits 0087  
                          getEN@tableIndex 0516                               ___param_bank 0000  
                           ??_APP_addEvent 0546                         ??_initEEPROMwriter 050D  
                    ?_getNumRxBuffersInUse 0501                           ?_producerPowerUp 0501  
                        findServiceIndex@i 0504                       __end_of_EEPROM_Write 5C22  
                              _uptimeTimer 0692                                      ??_pop 0504  
                                    l10005 5CE6                                      l10007 5CF4  
                                    l10033 4752                                      l10017 4724  
                                    l10201 23DC                                      l10107 3480  
                                    l10115 34B6                                      l10029 474E  
                                    l10213 23FA                                      l10141 4708  
                                    l10133 4694                                      l10047 477C  
                                    l10231 243E                                      l11103 1D84  
                                    l10063 33D8                                      l10119 34BC  
                                    l10233 24BC                                      l10209 23F6  
                                    l11113 1DAE                                      l10081 344C  
                                    l10161 4A1C                                      l11017 5C62  
                                    l11009 5C26                                      l10323 0C2A  
                                    l10219 240A                                      l11043 1C2E  
                                    l11027 1BCA                                      l10091 346A  
                                    l10067 340C                                      l10059 33A0  
                                    l10171 4A44                                      l10147 5D0E  
                                    l10155 5D2E                                      l10413 0E8A  
                                    l10341 0CD4                                      l10317 0C22  
                                    l10253 257A                                      l11125 1E14  
                                    l11061 1C88                                      l11045 1C34  
                                    l10077 3446                                      l10069 340E  
                                    l12101 3820                                      l11231 2218  
                                    l10415 0E90                                      l10319 0C26  
                                    l10271 0B64                                      l11039 1BF4  
                                    l11151 1E8E                                      l11303 25C0  
                                    l10159 49E8                                      l11233 2274  
                                    l11137 1E64                                      l11049 1C38  
                                    l11321 26CE                                      l12009 2F96  
                                    l12121 153C                                      l12033 629E  
                                    l10515 1024                                      l10435 0ED8  
                                    l10283 0BB0                                      l10259 2596  
                                    l10187 239A                                      l10611 00A2  
                                    l11075 1CE4                                      l11323 2716  
                                    l11307 262A                                      l10099 3474  
                                    l12019 2FC4                                      l11163 5F54  
                                    l11411 5486                                      l11245 22C6  
                                    l10373 0DD0                                      l10357 0D4A  
                                    l10277 0B82                                      l10621 00CA  
                                    l11085 1D0E                                      l12213 1804  
                                    l12141 15A8                                      l12133 157C  
                                    l11351 596E                                      l11239 229C  
                                    l11191 219C                                      l11511 1F8C  
                                    l10455 0F20                                      l10711 02B4  
                                    l10615 00A6                                      l11327 2752  
                                    l11335 2782                                      l12231 1860  
                                    l12143 15AC                                      l12127 1558  
                                    l12311 4E2E                                      l11361 4C96  
                                    l11185 216E                                      l11601 2114  
                                    l10393 0E14                                      l10289 0BB6  
                                    l10529 10B4                                      l10641 01A6  
                                    l10609 009E                                      l11097 1D5A  
                                    l11337 27AA                                      l10553 589A  
                                    l10545 5850                                      l12049 614E  
                                    l12073 37A2                                      l11363 4CA2  
                                    l11347 595A                                      l11515 1F9A  
                                    l10475 0F68                                      l10803 0664  
                                    l10627 0150                                      l10635 016E  
                                    l12155 161E                                      l12323 4E4A  
                                    l11373 4CD6                                      l11197 21C2  
                                    l11613 4B84                                      l11517 1FA2  
                                    l10661 0224                                      l10637 01A2  
                                    l10573 44F4                                      l10565 4498  
                                    l12309 4E08                                      l12085 37F6  
                                    l11461 4D44                                      l11437 5C96  
                                    l12335 3C5E                                      l11279 231E  
                                    l12351 45D8                                      l11615 4B8C  
                                    l11623 4BA4                                      l11543 1FFE  
                                    l11519 1FAA                                      l10495 0FBE  
                                    l10903 0AEA                                      l10823 07BC  
                                    l10727 031E                                      l10719 02DE  
                                    l10655 01EE                                      l10647 01C4  
                                    l10591 000A                                      l11295 259C  
                                    l10575 4512                                      l12319 4E44  
                                    l12271 5A9E                                      l12239 61E4  
                                    l11471 4D5C                                      l11463 4D52  
                                    l11439 5CA6                                      l11385 6700  
                                    l11625 4BD8                                      l11609 4B74  
                                    l11705 5B2C                                      l12441 2BF2  
                                    l10841 09E4                                      l10809 06A8  
                                    l10761 044C                                      l10673 022C  
                                    l12193 1750                                      l11393 5E10  
                                    l12363 452E                                      l11619 4B9C  
                                    l11571 2090                                      l11563 206E  
                                    l11555 2026                                      l10819 06D6  
                                    l10915 0B1A                                      l10667 0228  
                                    l10595 0034                                      l10691 0250  
                                    l11299 25BC                                      l12187 1718  
                                    l12531 18F0                        rebuildLookupTable@i 051C  
                                    l12509 5A10                                      l11549 201E  
                                    l11581 20BA                                      l12453 2CAE  
                                    l10861 0A62                                      l10837 09CA  
                                    l10829 099E                                      l10773 0508  
                                    l10757 0422                                      l10749 03F8  
                                    l10693 0278                                      l12189 171C  
                                    l12197 176E                                      l11813 41C6  
                                    l11805 418A                                      l11397 5E18  
                                    l11583 20DA                                      l11663 4026  
                                    l12447 2C38                                      l10847 09F6  
                                    l10783 053E                                      l10679 0230  
                                    l10687 0234                                      l11735 2838  
                                    l11727 27F2                                      l10951 48D6  
                                    l12543 194A                                      l11489 1EEC  
                                    l11673 4052                                      l10769 047A  
                                    l11729 2826                                      l10961 39E0  
                                    l12537 1946                                      l11587 20EC  
                                    l12459 2CF4                                      l10795 063A  
                                    l10699 0288                                      l11747 286C  
                                    l12379 6272                                      l11693 5AF0  
                                    l11677 4092                                      l10893 0ACA  
                                    l10885 0AAA                                      l10877 0A8A  
                                    l10869 0A6A                                      l10789 05EE  
                                    l11749 28EA                                      l10965 39E4  
                                    l11845 3290                                      l12485 3F14  
                                    l11839 3288                                      l10985 63F8  
                                    l12585 1B84                                      l12577 1AB2  
                                    l11699 5AFC                                      l10997 6114  
                                    l11797 4188                                      l11949 3370  
                                    l11991 2F5C                                      l11975 2F2C  
                                    l11985 2F3A                                      l12699 4AE4  
                                    ?_have 0501                                      ?_main 0501  
                             ?_initOutputs 0501                        processEnumeration@i 051C  
                              _writeNeeded 0784                            __end_of___awdiv 4C74  
                                    ?_loop 0501                                      ?_poll 0501  
                          __end_of___lldiv 4CF6                                      u10100 2980  
                                    u10110 2982                                      u10200 2F36  
                                    u10050 2834                                      u10130 41D2  
                                    u10150 4232                                      u10048 27D0  
                                    u10320 1518                                      u10049 27EA  
                                    u10410 1608                                      u10170 32BA  
                                    u10420 1650                                      u10260 3776  
                                    u10510 17AE                                      u11070 1B8E  
                                    u10600 4E04                                      u10450 16C0  
                                    u11058 1B5C                                      u11059 1B76  
                                    u10540 183E                                      u10380 1592  
                          ___awdiv@divisor 0503                                      u10390 15DC  
                                    u10480 174E                                      u10618 4E0C  
                                    u10570 5AD4                                      u10619 4E2A  
                                    u10760 2C20                                      u10920 192E  
                                    u10585 5AD8                                      u10668 3D00  
                                    u10780 2CDC                                      u10828 3FB6  
                                    u10669 3D1A                                      u10829 3FD0  
                                    u10790 2D22                                      u10958 19EC  
                                    u10959 1A06                                      u10998 1A6C  
                                    u10999 1A86                            reqevCallback@ev 053B  
                     __end_of_factoryReset 3D3E                          _initTimedResponse 67A2  
                           ?_APP_nvDefault 0501                            ___awdiv@counter 0505  
                          __end_of_canPoll 67B4                   __end_of_nvTRnvrdCallback 5F86  
                          __end_of_doFlash 4BF2           __end_of_factoryResetGlobalEvents 67C6  
                           _APP_nvValidate 66A2                                      _TMR0H 0319  
                                    _TMR0L 0318                                      _PORTB 04CF  
                                    _PORTC 04D0                    saveSwitchState@buttonNo 0506  
                          __end_of_doEvlrn 43AC                            __end_of_doNenrd 4EE4  
             nvProcessMessage@valueOrError 0557                            __end_of_doEvuln 5042  
                          __end_of_doNnclr 626E                            __end_of_doNnevn 6110  
                          __end_of_doReqev 3620                            __end_of_doReval 4176  
                          __end_of_doRqevn 60DA                            __end_of_getHash 6602  
                      ___lmul@multiplicand 0509                         ?_initTimedResponse 0501  
                       __p_paramBlock_text 0820                              ?_leds_powerUp 0501  
                         __end_of_TMR0_ISR 673C                            __end_of_isEvent 6584  
                                    _canId 0596                                      _doSoD 643E  
                                    _getEN 5200                                      _getNN 43AC  
                                    _getNV 5FC0                                      _getEv 5346  
                     _enumerationStartTime 0564                            __end_of_readNVM 5736  
                                    _errno 059F                                      _setNV 4EE4  
                                    _numEv 67C6                                      have@i 0504  
                    _consumerEventCheckLen 66E4                                      _setup 483A  
                      canReceiveMessage@mp 0514                            __end_of_sendRTR 5DC8  
             __end_of_getNumTxBuffersInUse 567A                                      main@i 05F9  
                          __end_of_mnsPoll 1878                              setNV@oldValue 0518  
                   APP_preProcessMessage@m 055C                    _timedResponseInProgress 674E  
                          __end_of_tickGet 594A                            ?_checkPowerOnPb 0501  
                                    pclath 04FA                               _switch2Event 0600  
                                    tablat 04F5                        ??_initTimedResponse 0501  
          mnsTRallDiagnosticsCallback@step 0532            mnsTRallDiagnosticsCallback@type 0501  
                                    poll@i 05EF                                      poll@m 05F0  
           __end_of_APP_GetEventIndexState 5D84                            __end_of_powerUp 3FDA  
                  reqevCallback@tableIndex 053F                                      status 04D8  
                            ?_nvGetESDdata 0501                    reqevCallback@nodeNumber 053D  
                          __end_of_writeEv 56D8                   ?_updateModuleErrorStatus 0501  
               __end_of_startTimedResponse 5F0C                           ?_nvGetDiagnostic 0507  
                           ??_APP_testMode 0542               processEnumeration@enumResult 051A  
                          __initialization 4F5A                               __end_of_have 5200  
                             __end_of_main 4AEE                               __end_of_name 0850  
                             __end_of_loop 2D28                               __end_of_poll 1BB8  
                            ?_nerdCallback 0531                   _incrementProducerCounter 6794  
                             ?_setLedState 0511                           _eepromWriterTime 069A  
                     __end_of_getParameter 397C                  __end_of_initTimedResponse 67A8  
                   __end_of_APP_nvValidate 66B8                               _writeEEvalue 606C  
                                   ??_have 0501                               ?_setNewCanId 0501  
                                   ??_main 055E                           ?_eraseFlashBlock 0501  
                                   ??_loop 053D                               ?_sendMessage 051C  
                                   ??_poll 05EA                      __end_of_reqevCallback 4516  
                            __activetblptr 0003                          ??_consumerEsdData 0501  
                              readNVM@type 050C                        inputScan@switchMode 0538  
                        startEnumeration@i 050C                             ??_leds_powerUp 050B  
                      writeEEvalue@address 0503           __end_of_canWaitForTxQueueToDrain 6794  
                  APP_postProcessMessage@m 0501                 __end_of_findEventForSwitch 6656  
                 ??_APP_postProcessMessage 0503                                     _C1CONH 0101  
                                   _C1CONL 0100                                     _C1CONT 0103  
                                   _C1CONU 0102                       rebuildLookupTable@sw 051B  
                                   ?_doSoD 0501                                     ?_getEN 050D  
                                   ?_getNN 050D                                     ?_getNV 0501  
                                   ?_getEv 050D                           __end_of_addEvent 2B58  
                                   ?_setNV 0515                               _canTransport FFF5  
                                   ?_numEv 0501                           ___awdiv@dividend 0501  
                                   ?_setup 0501                        APP_nvValidate@index 0502  
                        ??_consumerPowerUp 0501                                     _ANSELA 0400  
                                   _ANSELB 0408                                     _ANSELC 0410  
                 ?_canpanSendProducedEvent 052A                        APP_nvValidate@value 0501  
                                   _RB2PPS 020B                                     _RC3PPS 0214  
                                   _RC4PPS 0215                                     _RC5PPS 0216  
                         reqevCallback@nEv 0538                                     _TABLAT 04F5  
                   _producerProcessMessage 259A                    ??_CAN1_OperationModeGet 0501  
                           ??_nvGetESDdata 0501                    ??_CAN1_OperationModeSet 0501  
                                   _NVMADR 0043                                     _TMR0IE 250F  
                                   _TMR0IF 258F                                     _TMR0IP 1B2F  
                              initInputs@i 0507                              inputScan@diff 0535  
                         __end_of_checkLen 50B6                               ?_removeEvent 052E  
                           _clearAllEvents 6710                   __end_of_APP_factoryReset 648A  
                         __end_of_clearLed 5E0C                                initTicker@i 0504  
                        ?_findServiceIndex 0501                           _rebuildHashtable 4234  
                        _canProcessMessage 4712                              teachPowerUp@i 0524  
                 reqevCallback@eventNumber 0539                 __end_of_APP_nvValueChanged 67D6  
                       ??_findServiceIndex 0501                         _processEnumeration 339E  
                       ?_canProcessMessage 0553                 ??_APP_processConsumedEvent 051A  
                   ??_getNumRxBuffersInUse 0501                             teachCheckLen@m 0530  
                                   ___lmul 594A                   __end_of_mnsGetDiagnostic 651A  
                     consumerEsdData@index 0501                             ??_nerdCallback 0533  
                                   _canPri FF50                                  ??___awdiv 0505  
                                   _doNerd 6602                      _APP_preProcessMessage 27AE  
                                   _getEVs 53B0                                  ??___lldiv 0513  
                             ?_pollOutputs 0501                            sodTRCallback@sv 0533  
                         __end_of_initLeds 5CB4                              _nvDiagnostics 05B1  
                                ??_canPoll 051D                                     _column 059E  
                                ??_doFlash 050D                            getParameter@idx 0506  
                                   _memcpy 5CFC                                  ??_doEvlrn 0553  
                                ??_doNenrd 052B                                  ??_doEvuln 0537  
                                ??_doNnclr 052F                                     clear_0 4F7A  
                                   clear_1 4F8C                                     clear_2 4F98  
                                ??_doNnevn 0529                                     clear_3 4FA4  
                                   clear_4 4FB0                                  ??_doReqev 0531  
                                ??_doReval 052C                                     _setLed 5F0C  
                         ___awdiv@quotient 0507                                  ??_doRqevn 0529  
                      ?_processEnumeration 0501                                     have@id 0503  
                                ??_getHash 051C                            ??_APP_nvDefault 0501  
                      ??_canProcessMessage 0555                                     isa$std 0001  
                          ?_APP_nvValidate 0501                                     main@t1 05FA  
                                   main@t2 05FB                          ??_saveSwitchState 0506  
                                ??_isEvent 0501                    APP_preProcessMessage@ev 05E5  
              producerProcessMessage@index 055B                                  ??_readNVM 050A  
                 nerdCallback@serviceIndex 0531                          _canReceiveMessage 2EF4  
               __end_of_teachGetDiagnostic 6562                           _nvProcessMessage 1BB8  
                                ??_sendRTR 0501                                  ??_mnsPoll 052B  
                                   pop@ret 0509                          ??_mnsFactoryReset 0515  
                             ivt0x900_base 0900                               __mediumconst FE34  
       APP_processConsumedEvent@tableIndex 051D                                  ??_tickGet 0505  
                         __end_of_services FF45                         _tableIndexToEvtIdx 67A8  
              findServiceIndex@serviceType 0503                                     tblptrh 04F7  
                                   tblptrl 04F6                          doEvlrn@nodeNumber 054D  
                                   tblptru 04F8                               ??_FLASH_Read 0504  
                ??_timedResponseInProgress 0501                          nvProcessMessage@m 0553  
                   ?_consumerEventCheckLen 0530                         ?_canReceiveMessage 0510  
                                ??_powerUp 0525                     getParameterFlags@flags 0505  
        mnsTRserviceDiscoveryCallback@step 0532          mnsTRserviceDiscoveryCallback@type 0501  
                  consumerProcessMessage@m 0553                       __end_of_APP_addEvent 3B7A  
                                ??_writeEv 0517                               __p_name_text 0848  
                      addEvent@eventNumber 052D               nvTRnvrdCallback@valueOrError 0533  
                         __end_of_writeNVM 5BD4                        ?_tableIndexToEvtIdx 0501  
                   __end_of_clearAllEvents 6726                      mnsGetDiagnostic@index 050A  
                     ??_processEnumeration 0516                           ??_receiveOverrun 0501  
                               __accesstop 0560                    __end_of__initialization 4FC8  
                __end_of_canProcessMessage 47A6              __end_of_consumerGetDiagnostic 653E  
                      ??_canReceiveMessage 0512                          EEPROM_Write@index 0509  
                           nvGetESDdata@id 0501                          EEPROM_Write@value 050C  
                            doEvuln@result 0537                       APP_addEvent@switchNo 054B  
                            ___rparam_used 0001                         teachCheckLen@learn 0533  
                               _eeBootFlag 0584                    ??_handleSelfEnumeration 050B  
                     saveSwitchState@onOff 0505                  ?_factoryResetGlobalEvents 0501  
                            ?_teachPowerUp 0501                           FLASH_Write@index 0506  
                        _getParameterFlags 5E4E                           FLASH_Write@value 0509  
                           __pcstackCOMRAM 0501  mnsTRserviceDiscoveryCallback@serviceIndex 0531  
                        pollEEPROMwriter@i 050A                               __pidataBANK5 67D2  
                               _canEsdData 66CE                         ?_getParameterFlags 0501  
                            __end_of_doSoD 6464           APP_GetEventIndexState@tableIndex 051C  
                                ?_TMR0_ISR 0501                              __end_of_getEN 526E  
                            __end_of_getNN 4462                              __end_of_getNV 5FFA  
                            __end_of_getEv 53B0                         __end_of_FLASH_Read 5346  
                            __end_of_setNV 4F5A                              __end_of_numEv 67CA  
                            __end_of_setup 48CC                       ??_tableIndexToEvtIdx 0501  
                     _getNumTxBuffersInUse 561A                         APP_factoryReset@sw 052F  
                __end_of_canReceiveMessage 30AA               nvTRnvrdCallback@serviceIndex 0531  
               __end_of_bootProcessMessage 5124                 consumerGetDiagnostic@index 050A  
                      ??_getParameterFlags 0505                                 _canService FFE1  
                        ??_isConsumedEvent 051C                                 addEvent@en 053B  
                               _canPowerUp 324E                    producerProcessMessage@m 0553  
                              inputScan@sv 053A                  reqevCallback@serviceIndex 0531  
                     __end_of_APP_testMode 6710                 rebuildHashtable@tableIndex 0522  
                                  ??_doSoD 050A                              _currentMemory 0582  
                                  ??_getEN 050F                                    ??_getNN 050F  
                                  ??_getNV 0503                                    ??_getEv 050F  
                                  ??_setNV 0516                              ?_sendMessage2 0525  
                            ?_sendMessage3 0525                              ?_sendMessage4 0525  
                            ?_sendMessage5 0525                              ?_sendMessage6 0525  
                            ?_sendMessage7 0525                                    ??_numEv 0501  
                    _setupModePreviousMode 058E                                    ??_setup 051D  
                             canEsdData@id 0501                               readNVM@index 0507  
                 mnsProcessMessage@newMode 0559                          initTicker@divider 0503  
                             _EEPROM_Write 5BD4                                 __pbssBANK5 0560  
                               __pbssBANK6 0600                                 __pbssBANK7 0700  
                               __pbssBANK8 0800                               loadNvCache@i 0511  
                        _setLedStateNoSave 589E                            ?_clearAllEvents 0501  
               startTimedResponse@callback 0506                            canSendMessage@m 0518  
                      setNewCanId@newCanId 0515                         ?_setLedStateNoSave 050D  
                __end_of_getParameterFlags 5E8E                             _loadFlashBlock 5E8E  
                             _factoryReset 3C5C                             ??_teachPowerUp 0524  
                            _setLEDsByMode 61AE                                    IVTBASEH 045E  
                                  IVTBASEL 045D                                    IVTBASEU 045F  
                            addEvent@evVal 0530                              addEvent@evNum 052F  
                               __pivt0x900 0900                             _canDiagnostics 06A6  
          __end_of_timedResponseInProgress 675E                                mnsPowerUp@i 050D  
                       mnsProcessMessage@d 0557                         mnsProcessMessage@i 0555  
                       mnsProcessMessage@m 0553                       __end_of_leds_powerUp 62F2  
                               _bl_version FF45                  ?_canWaitForTxQueueToDrain 0501  
                   ?_APP_preProcessMessage 055C                                    ?___lmul 0505  
                      ??_setLedStateNoSave 050E                          _bootloaderVersion 0597  
                               ??_TMR0_ISR 0501                                    ?_doNerd 0501  
                                  _C1TRECU 0136                                    ?_getEVs 0501  
                                  _C1TXQUA 0158                                  _C1FIFOUA1 0164  
                                _C1FIFOUA2 0170                                  _C1FIFOUA3 017C  
                    ?_getNumTxBuffersInUse 0501                                    ?_memcpy 0501  
                            _C1BDIAG0Hbits 0139                                  ?_addEvent 052B  
                       _mnsTRrqnpnCallback 63EE                             ___lmul@product 050D  
                            _C1BDIAG0Lbits 0138                                    ?_setLed 0501  
                                _C1NBTCFGH 0105                                  _C1NBTCFGL 0104  
                                _C1NBTCFGT 0107                                  _C1NBTCFGU 0106  
                    _producerGetDiagnostic 64AE                       __end_of_nvGetESDdata 66CE  
                         _canGetDiagnostic 4AEE                                 _flashBlock 0577  
                               _flashFlags 058B                              ??_DEFAULT_ISR 0501  
                                  i2l12625 65D4                                  ?_checkLen 052B  
                        ?_nvTRnvrdCallback 0531                          reqevCallback@step 0532  
                      ?_mnsTRrqnpnCallback 0531                           ??_checkPowerOnPb 0543  
                                ?_clearLed 0501                                 _brightness 059B  
                                  _IVTLOCK 0459                                    _TBLPTRH 04F7  
                                  _TBLPTRL 04F6                                    _SPI1CLK 008C  
                                  _TBLPTRU 04F8                                  _C1TXQCONH 0151  
                                _C1TXQCONL 0150            flushFlashBlock@interruptEnabled 0505  
                                _C1TXQCONT 0153                                  _C1TXQCONU 0152  
                                  _NVMADRH 0044                                    _NVMADRL 0043  
                                  _SPI1TXB 0081                                    _NVMADRU 0045  
                                  _NVMDATL 0046                                    _NVMCON0 0040  
                       ??_nvTRnvrdCallback 0533                                _C1FIFOCON1H 015D  
                              _C1FIFOCON2H 0169                                _C1FIFOCON1L 015C  
                              _C1FIFOCON3H 0175                                _C1FIFOCON2L 0168  
                              _C1FIFOCON3L 0174                                _C1FIFOCON1T 015F  
                              _C1FIFOCON1U 015E                                _C1FIFOCON2T 016B  
                              _C1FIFOCON2U 016A                                _C1FIFOCON3T 0177  
                              _C1FIFOCON3U 0176                                    _NVMLOCK 0042  
                           ??_sendMessage2 0527                             ??_sendMessage3 0528  
                           ??_sendMessage4 0529                             ??_sendMessage5 052A  
                           ??_sendMessage6 052B                             ??_sendMessage7 052C  
                         _teachDiagnostics 05C6                  __end_of_setLedStateNoSave 58F4  
                     __end_of_nerdCallback 589E                             inputScan@onOff 053B  
                isConsumedEvent@eventIndex 051C                             checkLen@needed 052D  
                             _getParameter 386C                                  ?_initLeds 0501  
                   __end_of_loadFlashBlock 5ECE                             _outputPollTime 069E  
                          _timerExtension1 058A                            _timerExtension2 0589  
             __end_of_eventConsumerService FF91                             ?_setLEDsByMode 0501  
                   mnsTRrqnpnCallback@step 0532                     mnsTRrqnpnCallback@type 0501  
           canReceiveMessage@incomingCanId 0513                        _consumerDiagnostics 05B7  
               ??_incrementProducerCounter 0501                                poll@handled 05EE  
                     ??_mnsTRrqnpnCallback 0533                          __end_of_findEvent 49E4  
                                  __Hparam 0000                consumerEventCheckLen@needed 0532  
                                  __Lparam 0000                            _consumerEsdData 675E  
                   _APP_postProcessMessage 67CA                                 _initEvents 679C  
           APP_GetEventIndexState@switchNo 051D                         pbDownTimer@timeout 051C  
                               _initInputs 4CF6                                ?_canEsdData 0501  
                        __end_of_pbUpTimer 45C0                           pbUpTimer@timeout 051C  
                               _initTicker 5A96                                    ___awdiv 4BF2  
                               _initRomOps 668A                                    ___lldiv 4C74  
                                  _canPoll 67AE                                    _eeValue 0744  
                                  _doFlash 4B70                                 ??_addEvent 0532  
                                  _doEvlrn 42F2                                 _paramBlock 0820  
                                  _doNenrd 4E6E                         canProcessMessage@m 0553  
                                  _doEvuln 4FCE                                    _doNnclr 6240  
                                  _doNnevn 60DA                                    _doReqev 34E2  
                                  _doReval 40B6                                    __pcinit 4F5A  
                             initOutputs@i 0501                              _teachCheckLen 55BA  
                                  _doRqevn 60A4                          __end_of_leds_poll 236C  
                       _startTimedResponse 5ECE                                    __ramtop 4000  
                                  _getHash 65E4                     setLedStateNoSave@ledNo 0510  
                                ?_writeNVM 050E                         doEvlrn@eventNumber 054F  
                                  __ptext0 4A6A                                    __ptext1 483A  
                                  __ptext2 5484                                    __ptext3 5C6C  
                                  __ptext4 4CF6                                    __ptext5 673C  
                                  __ptext6 679C                                    __ptext7 5E0C  
                                  __ptext8 3EFE                                    __ptext9 626E  
                          _consumerPowerUp 629A                                    _isEvent 6562  
                                  _pbTimer 0560                         APP_nvDefault@index 0501  
                   setLedStateNoSave@state 050D                            getEv@tableIndex 0518  
                         _EnumerationState 0594                          ??_canFactoryReset 0515  
                        _mnsProcessMessage 0000                                    _nvCache 0700  
                               _mode_flags 05A0                                ?_canPowerUp 0501  
                                  _readNVM 56D8                        _APP_isProducedEvent 5F86  
                startEnumeration@txWaiting 050B                                 getNN@flags 0516  
                           _nvFactoryReset 6110                                    getEN@hi 0512  
                                  getEN@lo 0514                          ??_teachGetESDdata 0501  
                 __end_of_rebuildHashtable 42F2                                 ??_checkLen 052F  
                                  getNN@hi 0512                                    getNN@lo 0514  
                               _mode_state 0591                         doReqev@eventNumber 052E  
                                  _sendRTR 5D84                                    _mnsPoll 14DE  
                       ?_mnsProcessMessage 0553                                    _tickGet 58F4  
                             _flashCounter 057A                                 ??_clearLed 0509  
                        doNenrd@tableIndex 0530                        ?_startTimedResponse 0505  
                             _isEvent$6241 0501                                 clearLed@no 050C  
                               getNV@index 0504                                    _rxQueue 05BD  
                        doNenrd@nodeNumber 052B                   ??_consumerProcessMessage 0555  
                                  _powerUp 3EFE                          __end_of_inputScan 211A  
                    canReceiveMessage@temp 0516                    ?_producerProcessMessage 0553  
                                  _started 05A1                         doRqevn@eventNumber 0529  
                               _mnsService FFCD                          __end_of_nvService FFCD  
                               _mnsPowerUp 3758                          __end_of_nvPowerUp 6210  
                 APP_preProcessMessage@enn 05E6                        __end_of_DEFAULT_ISR 67DA  
                                  _writeEv 567A                       end_of_initialization 4FC8  
                      ??_mnsProcessMessage 05CA                               writeNVM@type 0514  
                               getEv@evNum 050D           prepareSelfEnumResponse@txFifoObj 0501  
                         producerPowerUp@i 0501                                    memcpy@d 0507  
                                  memcpy@n 0505                                    memcpy@s 0509  
               APP_nvValueChanged@oldValue 0502                                 ??_initLeds 0511  
                            ??_EEPROM_Read 0504                            ?_loadFlashBlock 0501  
                         APP_addEvent@leds 0549                       ?_APP_isProducedEvent 0501  
            __end_of_CAN1_OperationModeGet 6782              __end_of_CAN1_OperationModeSet 5CFC  
                        ?_APP_factoryReset 0501                           _startEnumeration 59A0  
                       _findEventForSwitch 663A                            ___lldiv@divisor 050F  
                             writeEv@evVal 0516                   __end_of_nvProcessMessage 1EBE  
                             writeEv@evNum 0515                            ___lldiv@counter 0517  
                          _saveSwitchState 6672                       ??_startTimedResponse 0509  
                  pollTimedResponse@result 0542                         ??_APP_factoryReset 052F  
          eraseFlashBlock@interruptEnabled 0504                           setLedState@ledNo 0512  
                                _SPI1TCNTH 0083                                  _SPI1TCNTL 0082  
                         ??_APP_nvValidate 0502                              ??_FLASH_Write 050A  
                     nvGetDiagnostic@index 050A                                    postdec1 04E5  
                                  postdec2 04DD                     ??_getNumTxBuffersInUse 0501  
                                  postinc0 04EE                                    postinc1 04E6  
                                  postinc2 04DE                           setLedState@state 0511  
                          _mnsFactoryReset 541A                          ?_mnsGetDiagnostic 0507  
     EEPROM_WriteNoVerify@interruptEnabled 0508                        ?_findEventForSwitch 0501  
                  _prepareSelfEnumResponse 526E                               _APP_addEvent 3A80  
                   ?_producerGetDiagnostic 0507                             ?_teachCheckLen 0530  
                             doFlash@ledNo 050F                  __end_of_mnsProcessMessage 0B62  
                       doNnevn@eventNumber 0529                                 _tmpMessage 06CC  
                       ??_mnsGetDiagnostic 050A             startTimedResponse@serviceIndex 0505  
                   __end_of_nvFactoryReset 6146                                 ??_writeNVM 0512  
                               _showStatus 3D3E                                  _PORTAbits 04CE  
                         _pollEEPROMwriter 5AE6                             loop@tableIndex 0545  
                               _previousNN 057E                    ??_consumerEventCheckLen 0533  
                       _APP_nvValueChanged 67D4                  _timedResponseServiceIndex 0588  
                               _priorities FE35                              ??_pbDownTimer 0518  
                          sendMessage2@opc 0527                       __end_of_teachPowerUp 617A  
                          sendMessage3@opc 0528                            sendMessage4@opc 0529  
                          sendMessage5@opc 052A                            sendMessage6@opc 052B  
                          sendMessage7@opc 052C                          _eventTeachService FF91  
           __end_of_producerProcessMessage 27AE                                  _TRISAbits 04C6  
                                _TRISBbits 04C7                                  _TRISCbits 04C8  
                       _timedResponseDelay 0583                     _mnsProcessMessage$4944 0556  
                              showStatus@s 0503                            loadNvCache@temp 050F  
                     ??_findEventForSwitch 0501                        ?_APP_nvValueChanged 0501  
                            ??_bootEsdData 0501                                 isEvent@opc 0502  
                          ??_setLEDsByMode 0504                              _sodTRCallback 6034  
                      teachCheckLen@needed 0532                    __end_of_consumerEsdData 676C  
          ??_mnsTRserviceDiscoveryCallback 0533                          ??_flushFlashBlock 0505  
                    ??_APP_isProducedEvent 0519                         _teachGetDiagnostic 653E  
                        _heartbeatSequence 058C                        _teachProcessMessage 0B62  
   canpanSendProducedEvent@producedEventEN 052D     canpanSendProducedEvent@producedEventNN 052F  
                       canSendMessage@temp 0516                          removeTableEntry@i 052C  
                            ??_bootPowerUp 050D                               _APP_testMode 66FA  
                          _isConsumedEvent 6782              __end_of_handleSelfEnumeration 4A6A  
                              ?_initEvents 0501                        __end_of_EEPROM_Read 6034  
                  __end_of_consumerPowerUp 62C6                        ?_teachGetDiagnostic 0507  
                              ?_initInputs 0501                          _canTransmitFailed 0595  
                              ?_initTicker 0501                                ?_initRomOps 0501  
                     ??_APP_nvValueChanged 0503                      APP_isProducedEvent@ev 051A  
                     __end_of_sendMessage2 6370                       __end_of_sendMessage3 6346  
                     __end_of_sendMessage4 63EE                       __end_of_sendMessage5 63C4  
                     __end_of_sendMessage6 631C                       __end_of_sendMessage7 639A  
                           __end_of___lmul 59A0                             __end_of_canPri FF55  
                           __end_of_doNerd 661E                 removeTableEntry@tableIndex 052D  
                           __end_of_getEVs 541A                            ?_nvFactoryReset 0501  
                         _removeTableEntry 3620                             __end_of_memcpy 5D40  
                       canReceiveMessage@m 0510                             __end_of_setLed 5F4A  
                     ?_teachProcessMessage 0553                  __end_of_eventTeachService FFA5  
                      __end_of_FLASH_Write 3EFE                  consumerProcessMessage@enn 0558  
                    __end_of_APP_nvDefault 6240                  consumerProcessMessage@ret 055A  
                     _eventConsumerService FF7D                             _canSendMessage 1120  
                        ??_producerEsdData 0501                                _DEFAULT_ISR 67D8  
                             _name_absaddr 0848                           _initEEPROMwriter 5E0C  
                      start_initialization 4F5A                              ??_driveColumn 0501  
                         ??_clearAllEvents 052E                  ?_APP_processConsumedEvent 0518  
                 ??_APP_GetEventIndexState 051C                               _leds_powerUp 62C6  
                     ??_teachGetDiagnostic 050A                                __end_of_pop 4712  
                            factoryReset@i 0532                                ?_mnsPowerUp 0501  
                      _APP_isConsumedEvent 47A6               ?_mnsTRallDiagnosticsCallback 0531  
             __end_of_EEPROM_WriteNoVerify 5A96                          ??_producerPowerUp 0501  
                           ?_sodTRCallback 0531                        __end_of_pbDownTimer 466A  
                       _bootProcessMessage 50B6                    __end_of_saveSwitchState 668A  
                            ?_addTestEvent 0501                        _getNextWriteMessage 3B7A  
                            ??_readEEvalue 0501           __end_of_incrementProducerCounter 679C  
                             _nvGetESDdata 66B8                   __end_of_canGetDiagnostic 4B70  
                  ??_APP_preProcessMessage 05E2                    __end_of_mnsFactoryReset 5484  
                            ??_loadNvCache 050D                      _consumerGetDiagnostic 651A  
                             inputScan@row 0536                        __end_of_bootEsdData 64AE  
                      ?_bootProcessMessage 0553                               doEvlrn@evVal 0552  
                             doEvlrn@evNum 0551                            numEv@tableIndex 0501  
                ??_prepareSelfEnumResponse 0501                     startTimedResponse@type 0509  
               __end_of_evtIdxToTableIndex 67BA                   rebuildHashtable@chainIdx 0523  
                                 ??___lmul 050D                            ??_teachCheckLen 0534  
                             doNenrd@index 052F                       ?_APP_isConsumedEvent 0501  
                                 ??_doNerd 050A                                   ??_getEVs 050D  
                      bootProcessMessage@m 0553                         addEvent@forceOwnNN 0531  
                             _nerdCallback 5846                                __pdataBANK5 05FC  
                  _updateModuleErrorStatus 676C                        __end_of_bootService FFB9  
                                 ??_memcpy 0507                        __end_of_bootPowerUp 4234  
                                 ??_setLed 0509                     __end_of_canSendMessage 14DE  
                              ?_showStatus 0501                              ??_initOutputs 0501  
                     ?_getNextWriteMessage 0501                      ??_teachProcessMessage 0555  
                 ?_timedResponseInProgress 0501                                __pbssBIGRAM 0848  
                            _reqevCallback 4462           APP_processConsumedEvent@polarity 0520  
                     ??_bootProcessMessage 0555                                __pbssCOMRAM 055E  
                        ??_nvGetDiagnostic 050A                           canSendMessage@mp 050E  
                            __pcstackBANK5 05CA                                 setNV@index 0519  
                               setNV@value 0515                         addEvent@tableIndex 053E  
                                addEvent@e 053D                         addEvent@nodeNumber 052B  
                               inputScan@i 0539              ??_mnsTRallDiagnosticsCallback 0533  
                 _factoryResetGlobalEvents 67C0                             ??_addTestEvent 053F  
                      __end_of_driveColumn 5B86                    __end_of_isConsumedEvent 678C  
                         ?_consumerEsdData 0501                                _EEPROM_Read 5FFA  
                       initTicker@priority 0502                    ?_APP_postProcessMessage 0501  
                        ??_eraseFlashBlock 0501                 __end_of_rebuildLookupTable 55BA  
             canpanSendProducedEvent@onOff 052A                  APP_processConsumedEvent@m 0518  
                           mnsPowerUp@temp 050E                               doNnevn@count 052B  
                     teachProcessMessage@m 0553                    _canpanSendProducedEvent 54EC  
                          _canFactoryReset 6656      __end_of_mnsTRserviceDiscoveryCallback 495C  
            _mnsTRserviceDiscoveryCallback 48CC               mnsTRallDiagnosticsCallback@d 0535  
                               nvPowerUp@i 0512                            tickGet@IntFlag1 0506  
                          tickGet@IntFlag2 0505                     _consumerProcessMessage 236C  
                          _teachGetESDdata 6584                      ??_APP_isConsumedEvent 0519  
                             ??_canEsdData 0501                          _lastInputScanTime 056C  
                                 _C1FIFOBA 014C                              __pmediumconst FE34  
                         ?_consumerPowerUp 0501                           getEVs@tableIndex 0516  
                      __end_of_readEEvalue 674E                                   ?___awdiv 0501  
                                __ptext100 5124                                  __ptext101 67CA  
                                __ptext110 53B0                                  __ptext102 2B58  
                                __ptext111 663A                                  __ptext103 3FDA  
                                __ptext120 5192                                  __ptext112 5B36  
                                __ptext104 5AE6                                  __ptext121 561A  
                                __ptext113 54EC                                  __ptext105 1EBE  
                                __ptext130 3D3E                                  __ptext122 5792  
                                __ptext114 63C4                                  __ptext106 639A  
                                __ptext131 4516                                  __ptext123 3B7A  
                                __ptext115 4D74                                  __ptext107 6672  
                                __ptext140 541A                                  __ptext132 45C0  
                                __ptext124 6794                                  __ptext116 1120  
                                __ptext108 606C                                  __ptext141 6656  
                                __ptext133 211A                                  __ptext125 4B70  
                                __ptext117 59A0                                  __ptext109 5FC0  
                              _FLASH_Write 3E1E                                  __ptext150 2986  
                                __ptext142 67BA                                  __ptext134 58F4  
                                __ptext126 5F0C                                  __ptext118 5D84  
                                __ptext151 567A                                  __ptext143 6210  
                                __ptext135 4BF2                                  __ptext127 5DC8  
                                __ptext119 6562                                  __ptext160 5A44  
                                __ptext152 5B86                                  __ptext144 6464  
                                __ptext136 594A                                  __ptext128 668A  
                                __ptext161 4234                                  __ptext153 3E1E  
                                __ptext145 67C0                                  __ptext137 4C74  
                                __ptext129 59F2                                  __ptext170 6728  
                                __ptext162 495C                                  __ptext154 5E8E  
                                __ptext146 66FA                                  __ptext138 3C5C  
                                __ptext171 67D8                                  __ptext163 43AC  
                                __ptext155 57EC                                  __ptext147 6710  
                                __ptext139 6110                                  __ptext164 65E4  
                                __ptext156 5736                                  __ptext148 3620  
                                __ptext165 5200                                  __ptext157 67CE  
                                __ptext149 2D28                                  __ptext166 56D8  
                                __ptext158 5BD4                                  __ptext167 52DA  
                                __ptext159 676C                                  __ptext168 5FFA  
                                __ptext169 65C4                                   _C1MASK0H 0191  
                                 _C1MASK0L 0190                                   _C1MASK0T 0193  
                                 _C1MASK0U 0192                                  _findEvent 495C  
                                 ?___lldiv 050B                                  _ledMatrix 0568  
                   rebuildLookupTable@swNo 0519                        __end_of_loadNvCache 5C6C  
                             doReqev@evVal 0531                               doReqev@evNum 0530  
                          getNN@tableIndex 0517                              ??_setLedState 0512  
                                 ?_canPoll 0501                              initLeds@ledNo 0512  
                             doReval@enNum 052D                                   ?_doFlash 0501  
                             doReval@evVal 052F                               doReval@evNum 052B  
                                _flashTime 06A2                                   ?_doEvlrn 054D  
                                 ?_doNenrd 0501                                   ?_doEvuln 0533  
                                 ?_doNnclr 0501                                   ?_doNnevn 0501  
                                 ?_doReqev 052C                                   ?_doReval 052B  
                        teachGetESDdata@id 0501                         sodTRCallback@value 0534  
                                _ledStates 0621                              initLeds@state 0511  
                                 ?_doRqevn 0501                      ??_getNextWriteMessage 0504  
                            ?_writeEEvalue 0501                                   ?_getHash 0518  
                            ??_setNewCanId 0515                                  _pbUpTimer 4516  
                          ?_canSendMessage 050E                              ??_sendMessage 0524  
                                 ?_isEvent 0501                           _findServiceIndex 5124  
                         nerdCallback@step 0532                           nerdCallback@type 0501  
                           ?_reqevCallback 0531                               ??_canPowerUp 050D  
                           _heartbeatTimer 0696                                __smallconst FE34  
                                 ?_readNVM 0507                                 _C1FLTCON0L 0180  
                 __end_of_startEnumeration 59F2                                 _C1FLTOBJ0H 018D  
                               _C1FLTOBJ0L 018C                                 _C1FLTOBJ0T 018F  
                               _C1FLTOBJ0U 018E                                 _C1CONHbits 0101  
                                _leds_poll 211A                                   ?_sendRTR 0501  
               producerGetDiagnostic@index 050A                                   ?_mnsPoll 0501  
                        ?_rebuildHashtable 0501            __end_of_prepareSelfEnumResponse 52DA  
         CAN1_OperationModeSet@requestMode 0502                                   ?_tickGet 0501  
  mnsTRallDiagnosticsCallback@serviceIndex 0531                                   _CANRXPPS 023D  
                              _pbDownTimer 45C0                                 _C1CONTbits 0103  
                               _C1CONUbits 0102                                  checkLen@m 052B  
                      __end_of_initOutputs 54EC                           ??_loadFlashBlock 0501  
                                 ?_powerUp 0501                         ??_rebuildHashtable 051E  
                          ??_sodTRCallback 0533                                   ?_writeEv 0515  
                               _C1INTHbits 011D                                _bootEsdData 648A  
                       __end_of_canEsdData 66E4                                 _C1INTTbits 011F  
                               _C1INTUbits 011E                                _flashBuffer 05FC  
                   consumerEventCheckLen@m 0530                             doReval@evIndex 052C  
                         ?_saveSwitchState 0505                                  _inputScan 1EBE  
           __end_of_APP_postProcessMessage 67CE                 findEventForSwitch@switchNo 0501  
                  getNumRxBuffersInUse@i16 0505                                  _nvService FFB9  
                      consumerPowerUp@temp 0501                              ??_removeEvent 0532  
                                 _LATAbits 04BE                                   _LATBbits 04BF  
                                 _LATCbits 04C0                                  _nvPowerUp 61E0  
                        findEvent@chainIdx 0529                                _flashToggle 059A  
                   ?_consumerGetDiagnostic 0507                   __end_of_pollEEPROMwriter 5B36  
                 _canWaitForTxQueueToDrain 678C                                   _IPR0bits 0362  
                                 _PIE0bits 049E                       rebuildHashtable@hash 0521  
                         ?_mnsFactoryReset 0501                            APP_addEvent@oti 054C  
                                _rxBuffers 0800                                  getHash@en 051A  
                                getHash@nn 0518                             _flashFlushTime 0686  
                             _SPI1CON0bits 0084                                   _IVTBASEH 045E  
                                 _IVTBASEL 045D                                   _IVTBASEU 045F  
   __end_of_APP_isSuitableTimeToWriteFlash 67D2             _APP_isSuitableTimeToWriteFlash 67CE  
                              _bootService FFA5                         __end_of_canService FFF5  
                             _teachPowerUp 6146                                _bootPowerUp 4176  
                                 _PIR0bits 04AE                         __end_of_canPowerUp 339E  
                                 _SPI1BAUD 0089                          ?_nvProcessMessage 0553  
                                 _SPI1CON0 0084                                   _SPI1CON1 0085  
                                 _SPI1CON2 0086                          doReqev@tableIndex 0533  
                  ??_producerGetDiagnostic 050A                             _mnsDiagnostics 05A3  
                ??_updateModuleErrorStatus 0501                      APP_isConsumedEvent@ev 051A  
                         ivt0x900_undefint 0A00                          doReqev@nodeNumber 052C  
                              _pbWasPushed 058D                                   _TMR0_ISR 6728  
                            ??_pollOutputs 0505                         ??_nvProcessMessage 0555  
                EEPROM_WriteNoVerify@index 0501                                 ?_findEvent 051E  
                EEPROM_WriteNoVerify@value 0504                             ??_writeEEvalue 0502  
                     _EEPROM_WriteNoVerify 5A44           consumerProcessMessage@tableIndex 055B  
                        _teachFactoryReset 67BA                                 ?_pbUpTimer 0501  
                           sendMessage@len 051C                             sendMessage@opc 0524  
                        _timedResponseTime 068A                          _timedResponseStep 0585  
                        _timedResponseType 0586                                  _startTime 0570  
                         _enumerationState 0593                               doRqevn@count 052B  
                                _transport 0580              APP_processConsumedEvent@ledNo 0522  
            APP_processConsumedEvent@flags 051F                         ?_teachFactoryReset 0501  
                ?_incrementProducerCounter 0501              APP_processConsumedEvent@onOff 0521  
                                _startupNv 0599                 canReceiveMessage@rxFifoObj 0518  
                               ?_leds_poll 0501                        __end_of_setLedState 65C4  
                          _flushFlashBlock 57EC              __end_of_consumerEventCheckLen 66FA  
        canpanSendProducedEvent@tableIndex 052B                                _driveColumn 5B36  
                      __end_of_setNewCanId 61AE                        __end_of_sendMessage 4DF2  
                          _eventCoeService FF55                        ??_teachFactoryReset 052F  
                          checkLen@service 052E                                _INTCON0bits 04D6  
                       __end_of_bl_version FF50                          ___lmul@multiplier 0505  
                             _sendMessage2 6346                               _sendMessage3 631C  
                             _sendMessage4 63C4                               _sendMessage5 639A  
                             _sendMessage6 62F2                               _sendMessage7 6370  
                  sodTRCallback@tableIndex 0532                            nvFactoryReset@i 0517  
                               ?_inputScan 0501                    __end_of_canFactoryReset 6672  
                 __end_of_removeTableEntry 3758                           ?_isConsumedEvent 0501  
                  __end_of_teachGetESDdata 65A4                                 ?_nvPowerUp 0501  
                ??_canpanSendProducedEvent 052B               __end_of_eventProducerService FF7D  
                              _readEEvalue 673C                                _loadNvCache 5C22  
                 __end_of_initEEPROMwriter 5E4E                                   __Hrparam 0000  
                              _eventChains 0848                   evtIdxToTableIndex@evtIdx 0501  
          APP_processConsumedEvent@ledMode 051E                    APP_addEvent@eventNumber 0541  
                                memcpy@tmp 050B                      _CAN1_OperationModeGet 6778  
                                 __Lrparam 0000                      _CAN1_OperationModeSet 5CB4  
                   _APP_GetEventIndexState 5D40                          doReval@tableIndex 052E  
                             ??_initEvents 051D                            _producerEsdData 661E  
                             ??_initInputs 0505                           ??_nvFactoryReset 0515  
                             ??_initTicker 0501                        __end_of_removeEvent 643E  
                             ??_initRomOps 0501                     removeEvent@eventNumber 0530  
         __end_of_APP_processConsumedEvent 324E                  __end_of_teachFactoryReset 67C0  
                    ?_EEPROM_WriteNoVerify 0501                             APP_testMode@sw 0542  
                                 _addEvent 2986             ?_mnsTRserviceDiscoveryCallback 0531  
                          ??_reqevCallback 0533                       __end_of_addTestEvent 2EF4  
                              _initOutputs 5484                            _producerPowerUp 626E  
                       doNenrd@eventNumber 052D                        __end_of_pollOutputs 40B6  
                             ?_DEFAULT_ISR 0501                                   _checkLen 5042  
            APP_preProcessMessage@switchNo 05E8                                _buttonState 067E  
                               _T0CON0bits 031A                                 _T0CON1bits 031B  
                              _current_row 059D                        _producerDiagnostics 05C2  
                                 _cathodes 059C                                   _clearLed 5DC8  
          __end_of_updateModuleErrorStatus 6778                                 _FLASH_Read 52DA  
                    getNextWriteMessage@wr 050D                                   __ptext10 61E0  
                                 __ptext11 3758                                   __ptext20 5CB4  
                                 __ptext12 629A                                   __ptext21 6778  
                                 __ptext13 324E                                   __ptext30 6034  
                                 __ptext22 1878                                   __ptext14 4176  
                                 __ptext31 67A8                                   __ptext23 4DF2  
                                 __ptext15 6146                                   __ptext40 526E  
                                 __ptext32 67AE                                   __ptext24 5F4A  
                                 __ptext16 5C22                                   __ptext41 27AE  
                                 __ptext33 14DE                                   __ptext25 48CC  
                                 __ptext17 62C6                                   __ptext50 60A4  
                                 __ptext42 259A                                   __ptext34 2EF4  
                                 __ptext26 397C                                   __ptext18 67A2  
                                 __ptext51 40B6                                   __ptext43 1BB8  
                                 __ptext35 466A                                   __ptext27 63EE  
                                 __ptext19 5A96                                   __ptext60 6416  
                                 __ptext52 34E2                                   __ptext44 0000  
                                 __ptext36 5CFC                                   __ptext28 4462  
                                 __ptext61 42F2                                   __ptext53 67C6  
                                 __ptext45 236C                                   __ptext37 49E4  
                                 __ptext29 5846                                   __ptext70 66B8  
                                 __ptext62 3A80                                   __ptext54 60DA  
                                 __ptext46 4712                                   __ptext38 339E  
                                 __ptext71 675E                                   __ptext63 5554  
                                 __ptext55 6240                                   __ptext47 50B6  
                                 __ptext39 617A                                   __ptext80 653E  
                                 __ptext72 66CE                                   __ptext64 5D40  
                                 __ptext56 6602                                   __ptext48 0B62  
                                 __ptext81 61AE                                   __ptext73 648A  
                                 __ptext65 5F86                                   __ptext57 4E6E  
                                 __ptext49 55BA                                   __ptext90 47A6  
                                 __ptext82 62F2                                   __ptext74 6584  
                                 __ptext66 4EE4                                   __ptext58 67B4  
                                 __ptext91 5346                                   __ptext83 631C  
                                 __ptext75 64AE                                   __ptext67 67D4  
                                 __ptext59 4FCE                                   __ptext92 66E4  
                                 __ptext84 6346                                   __ptext76 64D2  
                                 __ptext68 66A2                                   __ptext93 5042  
                                 __ptext85 386C                                   __ptext77 64F6  
                                 __ptext69 661E                                   __ptext94 30AA  
                                 __ptext86 5E4E                                   __ptext78 651A  
                                 __ptext95 65A4                                   __ptext87 678C  
                                 __ptext79 4AEE                                   __ptext96 589E  
                                 __ptext88 6370                                   __ptext97 643E  
                                 __ptext89 6782                                   __ptext98 674E  
                                 __ptext99 5ECE               __end_of_getNumRxBuffersInUse 57EC  
              __end_of_APP_isProducedEvent 5FC0                               ??_mnsPowerUp 050D  
                                 _ledTimer 068E                                   _ledState 057C  
                        sodTRCallback@type 0501                              ?_EEPROM_Write 0509  
                       __end_of_initEvents 67A2                CAN1_OperationModeSet@status 0501  
                       __end_of_initInputs 4D74                                _OSCCON1bits 00AD  
                              _OSCCON3bits 00AF                         __end_of_initTicker 5AE6  
                       __end_of_initRomOps 66A2                                   _initLeds 5C6C  
                                 doNnevn@i 052C                         __end_of_paramBlock 0840  
                           canPowerUp@temp 050D                      __end_of_setLEDsByMode 61E0  
                            ?_factoryReset 0501                           _nvTRnvrdCallback 5F4A  
                            findEvent@hash 0528                                   doRqevn@i 052C  
                        ?_canGetDiagnostic 0507                                getEVs@evIdx 0517  
                              _IVTLOCKbits 0459              __end_of_APP_preProcessMessage 2986  
                       ??_canGetDiagnostic 050A                                   isa$xinst 0000  
                                 _services FF35                             _receiveOverrun 65C4  
                 clearAllEvents@tableIndex 052E                            _nvGetDiagnostic 64D2  
                              ??_findEvent 0522                      _handleSelfEnumeration 49E4  
                              _setLedState 65A4                    canSendMessage@txFifoObj 051A  
                       __end_of_mnsService FFE1                    __end_of_flushFlashBlock 5846  
                        writeEv@tableIndex 0520                         __end_of_mnsPowerUp 386C  
                             ??_showStatus 0501                                ??_pbUpTimer 0518  
                                 _writeNVM 5B86                           sendRTR@txFifoObj 0501  
               processEnumeration@newCanId 051B                     APP_addEvent@forceOwnNN 0545  
          __end_of_canpanSendProducedEvent 5554                                _setNewCanId 617A  
                              _sendMessage 4D74                    __end_of_eventCoeService FF69  
       handleSelfEnumeration@receivedCanId 050F                              writeNVM@index 050E  
                            writeNVM@value 0511                                ??_leds_poll 050B  
               ??_factoryResetGlobalEvents 052F                         _evtIdxToTableIndex 67B4  
                           _inputScan$1270 0533                      canGetDiagnostic@index 050B  
                              _NVMCON0bits 0040                                _NVMCON1bits 0041  
                                 memcpy@d1 0501                                   memcpy@s1 0503  
                          _eraseFlashBlock 5736                          APP_addEvent@evVal 0544  
                        APP_addEvent@evNum 0543                    teachGetDiagnostic@index 050A  
                           ??_EEPROM_Write 050D                               pollOutputs@i 0509  
               __end_of_processEnumeration 34E2                                getHash@hash 051D  
                          _C1FIFOCON1Hbits 015D                                   intlevel2 0000  
                      ?_evtIdxToTableIndex 0501                            _C1FIFOCON3Hbits 0175  
                                 setLed@no 050B                              ?_getParameter 0501  
               canpanSendProducedEvent@opc 052C                                ??_inputScan 0531  
                     __end_of_writeEEvalue 60A4                       getNextWriteMessage@q 0501  
                        initInputs@startNv 0506                           ?_canFactoryReset 0501  
                   APP_addEvent@tableIndex 054A                               ?_EEPROM_Read 0501  
                         ___lldiv@dividend 050B                             ??_factoryReset 0530  
                  __end_of_producerEsdData 663A                                ??_nvPowerUp 0512  
                    removeEvent@tableIndex 0532                           ?_teachGetESDdata 0501  
                 __end_of_findServiceIndex 5192                                _removeEvent 6416  
                   APP_addEvent@nodeNumber 053F                    ?_consumerProcessMessage 0553  
                       __end_of_showStatus 3E1E             mnsTRrqnpnCallback@serviceIndex 0531  
                    removeEvent@nodeNumber 052E                     ?_CAN1_OperationModeGet 0501  
                   ?_CAN1_OperationModeSet 0501                         _paramBlock_absaddr 0820  
                   __end_of_receiveOverrun 65E4                         __end_of_priorities FF35  
                         ??_canSendMessage 0510                __end_of_teachProcessMessage 1120  
               __end_of_tableIndexToEvtIdx 67AE                  sodTRCallback@serviceIndex 0531  
                     __end_of_canTransport FFFE                               ?_FLASH_Write 0506  
                  __end_of_producerPowerUp 629A                         tickGet@currentTime 0507  
                   ??_EEPROM_WriteNoVerify 0505                                   powerUp@i 0527  
                               _SPI1TWIDTH 0088                                _pollOutputs 3FDA  
                     ??_evtIdxToTableIndex 0501                          _pollTimedResponse 4DF2  
                    __end_of_teachCheckLen 561A                   ??_producerProcessMessage 0555  
                       _rebuildLookupTable 5554                         ?_pollTimedResponse 0501  
                 _APP_processConsumedEvent 30AA                          FLASH_Read@address 0501  
                         _APP_factoryReset 6464                    nerdCallback@eventNumber 0535  
            APP_isConsumedEvent@tableIndex 0519                           ___lldiv@quotient 0513  
                     producerEsdData@index 0501                       _eventProducerService FF69  
                        ?_startEnumeration 0501                               ?_pbDownTimer 0501  
                              findEvent@en 0526                                findEvent@nn 0524  
                      ?_rebuildLookupTable 0501                       findEvent@eventNumber 0520  
                              ?_FLASH_Read 0501                              bootEsdData@id 0501  
               ??_canWaitForTxQueueToDrain 0501                        ??_pollTimedResponse 0540  
          APP_preProcessMessage@tableIndex 05E9                           _mnsGetDiagnostic 64F6  
                       ??_startEnumeration 050B               _timedResponseAllServicesFlag 0587  
                          _C1FIFOSTA2Hbits 016D                    ??_consumerGetDiagnostic 050A  
                          _C1FIFOSTA1Lbits 0160                            _C1FIFOSTA3Hbits 0179  
                           ??_getParameter 0506                            _C1FIFOSTA2Lbits 016C  
                             ?_bootEsdData 0501                            _C1FIFOSTA3Lbits 0178  
                        sendMessage2@data1 0525                          sendMessage2@data2 0526  
                        sendMessage3@data1 0525                          sendMessage3@data2 0526  
                        sendMessage3@data3 0527                          sendMessage4@data1 0525  
                        sendMessage4@data2 0526                          sendMessage4@data3 0527  
                        sendMessage4@data4 0528                          sendMessage5@data1 0525  
                        sendMessage5@data2 0526                          sendMessage5@data3 0527  
                        sendMessage5@data4 0528                          sendMessage5@data5 0529  
                           addTestEvent@sw 0541                          sendMessage6@data1 0525  
                        sendMessage6@data2 0526                          sendMessage6@data3 0527  
                        sendMessage6@data4 0528                          sendMessage6@data5 0529  
                        sendMessage6@data6 052A                           bootPowerUp@found 050E  
                          _last_mode_flags 058F                          sendMessage7@data1 0525  
                        sendMessage7@data2 0526                          sendMessage7@data3 0527  
                        sendMessage7@data4 0528                          sendMessage7@data5 0529  
                        sendMessage7@data6 052A                          sendMessage7@data7 052B  
           __end_of_consumerProcessMessage 259A                             _checkPowerOnPb 59F2  
                         EEPROM_Read@index 0501                   ?_prepareSelfEnumResponse 0501  
                          _last_mode_state 0590                __end_of_APP_isConsumedEvent 483A  
                  __end_of_nvGetDiagnostic 64F6                            _canpanScanReady 05A2  
                        ?_pollEEPROMwriter 0501                               ?_bootPowerUp 0501  
                     ??_rebuildLookupTable 0519                            ?_receiveOverrun 0501  
                     nvTRnvrdCallback@step 0532                       nvTRnvrdCallback@type 0501  
                       ??_pollEEPROMwriter 0509                __end_of_getNextWriteMessage 3C5C  
